<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="4a1a5031e7af9d69b7932d645d54eaea45b60f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f266a1fa184884bac611ff1ad4f5180a5e8d2194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="65f4a8398bd7120c2a5394c65e459fe43630ddf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b82593db7ef38a7fa681a6b250022323698b8ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bdc3a282a63e38747a5cd8ebf42017870f9b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="a802d69bfb6e293ce7b55ca7849adf8232d824a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3985e2c0719b4de3abd54b7b416d6562f4e58d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="cf3eb7aeff5d4ebc18984cd45a24dbba4f2bd7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f850b76785711836d5eb21684cf126e9cd9bd72c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="1c3c1db77b1d9979f98d970f6e8a19d1857bc97f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c5ab8ad5cfed29382a849fc3bf21748321b34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="ef07c074f03a99d19fb03c7278086759fbee2e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ab8edf8bdd5df4dfdf344d9ebb91c9a54f0aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="970be848a4d8176b2df266967a7fbec24a8fa56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd125e40c2556c7f02c553f0088fa82d3541ca9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt; [src]&lt;/a&gt; 1.34.0</target>
        </trans-unit>
        <trans-unit id="8ed1bb11bf77f89e3b2e3d6dacb5feb8ffa41500" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="8c56776354c8955d58f898b101b828a934a9c9c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#125-132&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391651d84cb4d3fcb7ef3bddc866d9dc9ef0536f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="3fe30244d23f70bf1cd935537e2f38720c67f2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#104-105&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c220c9b6dfe714ba1931b6d4a190df2c70ed1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="5e954185ce15d33c6c826e21d84cbf1a5c821166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644ed7a6b5cb7b265af4c77f59e325a1a6b326d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="260a7dec67cc222829529cb9037a144d4088ce01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#117-120&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39f2de12041a8ddc38c9d1d1b7f0104e1ddaf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="de838ac16b48286f32eaa0043e1b68cbe9223eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cc293e15b37c6484b60f65a057d394be0c44c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt; [SRC]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="e6b7ec9765faafd56af1fa81331a9235070a7194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8440b9ed516317d898444e890d21efbc28e01a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709a3c4d880b2e08b1db1988cffaaeb3e7bdcfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [SRC]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="e68e6a8257708a1cde60e189754231b718381292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8a56f00fe46bbd016b7648c8c77eed6ca3b02a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="4edb16e3f0fd8993dc5e164b5c813746b016e2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b498240e7eb84b7f65b5059cc09459335ff2868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="3b2a0e040f3533793a33e11af74a936fb224e88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781f14f3376cf14dee3fb18822bfa7654c172c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="be92745abe37d8e8040eebf75bcf340b04eaf53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3273d2a435d1c974236f7146d1245e44d6719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="d31016d508a2ae8d2e89e162c8ac3b28a6451587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eccff9780737dec0868638e1dd72991858c522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt; [src]&lt;/a&gt; 1.2.0</target>
        </trans-unit>
        <trans-unit id="335d20fefe95d5fc243febb9a553ccb370a89374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="f7c130419b238403ad46b163846ab5c75c075c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#125-132&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7a98ade3f1dbea756f46d1c49eb10319cdb4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="8a364232a0fe736f067a34c52366af7bfe22b64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#104-105&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79178c3d366d2997a0e23dfc150b4f5aebe8d5ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="0c059ba877fbf353c7f4b74123330a67a80066f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08da9921b5c6a75c71bb02fc4aeeec3a960623ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="00423c785ee7b1d154cd945141be5662adc4d81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#117-120&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1030bd6de22ef10bf77128541565b6d9181c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="90fe000f1db8091e07acbac9d4e2845592104f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7039f218618831da5e6f4d75df46d11bf42245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="32d44f8d9bc7bc6b71e4a31beedd3681886c3945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1482f64f2e0e25c766f23a59d7a2efa878aaada6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b004f244cba3f4096b86c8b2351fee6b55b05b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="6a8bf3b5cd05647395f36a7d7ee86db8726a74cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a208f52543593c9e9a8d66ba615d023cb526b66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="39f9d73e1ace9d839ac35649aad3eb3b89d97030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d194335cc70690be3b14f7d9275bc673fb09b8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="cbea1839dcbf21ec88bbface6fbc092fb90ff829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d123147e01951bf10434f4c032fdc3507e2a0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [src]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="4758872aafb38892b6fbcd24380582b2edbf74cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53188478a150af161acd72fd9e20498dd311ea86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="9362fcc7681c367bfea45b403cc18644b21a18de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b61d04cc3d8e305818cd5834535c924c4001a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt; [SRC]&lt;/a&gt; 1.38.0</target>
        </trans-unit>
        <trans-unit id="2560a164bc1928845aabd17967a86063c7b32cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="201e525169bb1f095584bb70ee46cf5f990e2c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#125-132&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1b2b7d6e51df8ba26f55843862dcd82d3b7697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad63c0166e7efe6435ce2bf3522398c141bd81a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#104-105&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a77df28e64978b06ddae529a32cfa27758e0c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d7710d6a19d983aa7169166c383871c8bd9ce5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582584fd7d1f3aa36aa478cb5d1cc775f83d01de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f209f18f9cb7e663f43bcdbb83b07e7571df2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#117-120&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44d8141c166d2cdd2e7d622bc0bb057e27c00b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a2dd40fbe6fcc62c97bb8cf57895006f5fbce2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b88656bdb236edef6ba68a446532dfc3e314d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd756c7e2dc1c71990d69bee611c4756e1fb604d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5441f2bfbf404a49e6963a025550c16c1dbfb25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa82e2e722c142488c9aa4f1af91ba614620a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef5b88fa196c9815e11a1ab8772eba5f98143a50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf864e064dc09289a0f61f6070e98e093ef8ed75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8e689cf641b8e2a8a00af5cde2089cf41247b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61911d50e223eb4396811759bb47e17a856c04bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a17dea175f0fda2c74fcb3bd65e27d29d51035f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dfb710462097f15f21a6d83640a11f30c41f69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19cb5612f887f9efe518da588a5a819cc2cafbff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a495cf60009744a54eea975e35c5ac145c0c107c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b0237b38c646eebf078fbfdeac263adf4821bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b841b285793c26167585ac970cf99db5e8d49289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49776a92e8b270a5001c9336ca476539ee20a3bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9df90e6428ffcc9514f6552bea94fa3487ddfe67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#125-132&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d003feea93a2c2e2ff9c044d38cd44a179061e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09fa5bba8c24c990975e3d28b7fb79f89e19bf28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#104-105&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17a0d41d5fce4307f3684afe9a4b92c356f49c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3301bb25d293f6482a9831d3d7c26aa54c79447d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccf546a4e83228b07a73d7f34e8807387b6bb65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38c6be17216704fc4ca877452208b5e2a2f1e6a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#117-120&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599378519dcc00dd941a61c1aa00b2538733bcbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fb8bc00e5405da2f96487f4865cf6aabc22192a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d2f383bcd76a3126f1bbb1bfe6cd1abb579c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a353320b0742648f2557feeaf4e6bb3d365c8fdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac705a2438aa8cfcb56f1dc047e480f5ea44dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f0f54d02306a4ff6e59818c23aa6fc863ec1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbd187a928dd4d208b7e687998be4307a2225a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fa8e25c23638a3b2836ffebbacfb5d96a994c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cb638939d5e5ad3fd92fb523a427444355c8eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12f813fb309d1d7b419c5a18af8295ba360d939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0db70bbb5b64704a75bdffbc763cfb923f80aaf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe24bb29ce2fb0f28ea866183cdf207a7acfd18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98d57bc01222cec9696ff48c87cbbfb8b298c754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3f102eaa507b1314f7f7f3a2bbbe290cd0a3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80d1ca70cfc97e73992f8134345c027c0ede50a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047534cf4a8f194c17428be428c465eeb78ba0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfbc879def99083089534ff598f71dcf3ba23301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccff8904776d42cddba33f5f003dfd02ebad8fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#125-132&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4010d925f6da7ffe85fbc4ee69267eb7cb09ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec6f631e7d73341766a5cc80c51fc4cca969209a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#104-105&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2be40aa6a57583ba5ba09335ad39f3ed989fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbcf92edfa2a42e1ebb956c29fcba70aa06498dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd201cefd0c88be524595958e75b1946c4ed7111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98b505da7d376eab133ddafa1e70ae209dc56be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#117-120&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58978330aae5a53e75034cab93ecf83a93069b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="719e3eedab0229ab3eb72cd035c9b0995ec5be1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#98-99&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1641f2354c9eeaa5ab0010ec8515c88d8b7053a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b985736ad87d5b93a4067a4e96baac337febecf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#155-159&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f36e47e4255d3432e59bbbc3aab6720f68c1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#684-691&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c1abcc1af19d20ea15d74e31a522b11f4def83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13912731e98ede737f78988a8af16e050fdf30b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#663-664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035d1a6552509dd9b9bbf83cd5299409297c09f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ae5b3ca4bfa252ef44c05cfc3522a317cff9de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#669-670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252fc60b72ed360773b30f62d689fd1a5bfb8b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7eda695e4f5d336ddc6a371542483e843e778a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#675-679&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb412b1a99ffac900175fd3d9e65ae00fee60f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fa6982e11c1798f9dd0909da8e6d504ba611701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#164-165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50fe596ce777bafc4f00b56d381c83a6bd189f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f94efafa2a47776ac25b7628fd45adacd952300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#712-716&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e494139b2ae7b496c7280f7774d4948a3162514f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the result of the operation, \ without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f156f7e53fce9452e58937a0219a76d82833fb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt; [src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="0320c6ff993e200307e17777475cb480c9c61e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1797-1799&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cf8794705347edb72a195929b1e110a760787a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt; [src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="af3fa29e000185a19fc9d7bdcef11313db58a522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1797-1799&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38fa4927a52beaefe9968039edad1ad95382d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="f79c097776b54ca608a625425c7837aed8d98eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2067-2078&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6962a61e2d33beb5e10e098826d2a543d27f1c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="027887d490c7f8f68fc6736494e1aac92575182c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2067-2078&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb717e66b6f99b1274f6dd18358825997c60cb26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e7c0741f757f172a3dd0e1b9edcf6231fa7eaf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1914-1931&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c090aaf3e3b15033b8271a0731271d03861bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="983d3c5c07348b44898d457451bd564034d08b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1914-1931&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b25b23f498b3ba1b63b157de84e5f9e42585b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt; [src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="6acb2eb47bc709ce94a8054602c582ccc8864308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1759-1761&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26314fdfaa83611bb6a41bfd471ca8c6f92cd070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt; [src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="c3b7fa528801f6365a9fd5c0cac244d09dea1e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1759-1761&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f417dcff9b5b7832e3207c75b62f76aa1c291f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="5122ad94bb33ddf513a6a98dba40ccb57fb3ae88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1963-1971&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7feb97267545e22daa801cc6801334777696157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a new slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt; 1.30.0</target>
        </trans-unit>
        <trans-unit id="3fd4fecf21ec660187da316da8ad68be2bae3fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1963-1971&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fc5130bcd8940b072d7b1646a69bdc8d7f4f1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb79f6c9b5b0995b15aceac0ed8d4fb82ddce9ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1721-1723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3868d37222335405170075c451e844562f4941a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;this returns the trimmed string as a slice, \ without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1af7437bab32ce27fc89514a8338e5cf0e38f65c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1721-1723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915fcff0f3bf637e3bde6a4a3141f9a2ffa1f130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#711-719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#711-719&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfeecdf9be21c2b5669923b434593f81e9241624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value-1&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#818-826&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value-1&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#818-826&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e02232544ff5a7c121dabe7b6e833a5322470ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#616-621&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#616-621&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="6fbee7202b1b5bd1c709b530cfe04c3a965b7342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add-1&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#723-728&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add-1&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#723-728&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="cf146099463ac0f250554741d85b519fd9bfc88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#281-287&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#281-287&quot;&gt; [src]&lt;/a&gt; 1.16.0</target>
        </trans-unit>
        <trans-unit id="ad5573a125d1a24d85a0ef0fda957570876d5d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset-1&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#287-293&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset-1&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#287-293&quot;&gt; [src]&lt;/a&gt; 1.16.0</target>
        </trans-unit>
        <trans-unit id="53dd70297a0c0d7c4ce3c8ade0370afa64bc7a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#673-678&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#673-678&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="eaeacc375405579dc83a4c4383ed0f02a980b250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub-1&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#780-785&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub-1&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#780-785&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="c5d2468e3ca46724b3e2fe13d4ae39295390ba2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#494-500&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#494-500&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="f7cecb29ed63d8851bb8d7484613317920ec04d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#601-607&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#601-607&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="7f334efbbdb20e08dbfb177e67899570e1b3342c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#220-226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#220-226&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10c04c1605f7d3982aa68d231124b13cdd50995a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset-1&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#225-233&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset-1&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#225-233&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a57bd3c6e501513fb5f5d3cc276ca482ac136eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#558-564&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#558-564&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="1c1777cd214d01231baea86aaa0f3e2995bb702f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub-1&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#665-671&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub-1&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#665-671&quot;&gt; [src]&lt;/a&gt; 1.26.0</target>
        </trans-unit>
        <trans-unit id="7a2d858d6bf0d0e530a9326fc5c80010a05748b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4295f580ce97bd2ccba1c42f2c1f7365305c44fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1788-1800&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e897e63c81000217d4f6674e3e6f772b8fda853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88604561ca0146accf26ee1979da6974a681410f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1788-1800&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a132485509868be3e59969db4667abfe871330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7d53ab9b81b2efbf9e9336067397349375e0e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1821-1833&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e8f657dd418d149f8091e9f91a58b720850a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20515ae1feaa61fd015f5410365a7a88119acaea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1821-1833&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b2dc8d6b4efc250bfada176762f5d2abb9db2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt; 1.4.0</target>
        </trans-unit>
        <trans-unit id="da2b10a145edc9073ad51456dd38758447a6f288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#2013-2055&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4a86dd378202bbecb79573a9a29f98206ca7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1441-1445&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1441-1445&quot;&gt; [src]&lt;/a&gt; 1.16.0</target>
        </trans-unit>
        <trans-unit id="caba8b03516ac457e9d08af183ab2eead8653c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1442-1446&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc1bde480279000fdf7d7bab16e95e86b110e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#1406-1433&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#1406-1433&quot;&gt;[src]&lt;/a&gt; 1.4.0</target>
        </trans-unit>
        <trans-unit id="0a14521d43210e84e4d837e535c7c9050454b236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="translated">&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt; 1.4.0</target>
        </trans-unit>
        <trans-unit id="d2ef1475b2b38b8370b5f39bf20a3c2417e343b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#2013-2055&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a0fb174403cf2d490415efd095fd770ddf4efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(packed)]&lt;/code&gt; reduces padding to make the struct size smaller. The representation of enums isn't strictly defined in Rust, and this attribute won't work on enums.</source>
          <target state="translated">&lt;code&gt;#[repr(packed)]&lt;/code&gt; 패딩을 줄여 구조체 크기를 더 작게 만듭니다. 열거 형 표현은 Rust에서 엄격하게 정의되지 않으며이 속성은 열거 형에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3fe3d6cef98af858d0d5d918f9b632e38d05312e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(simd)]&lt;/code&gt; will give a struct consisting of a homogeneous series of machine types (i.e., &lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, etc) a representation that permits vectorization via SIMD. This doesn't make much sense for enums since they don't consist of a single list of data.</source>
          <target state="translated">&lt;code&gt;#[repr(simd)]&lt;/code&gt; 는 SIMD를 통한 벡터화를 허용 하는 균질 한 일련의 머신 유형 (즉, &lt;code&gt;u8&lt;/code&gt; , &lt;code&gt;i32&lt;/code&gt; 등) 으로 구성된 구조체를 제공합니다 . 열거 형은 단일 데이터 목록으로 구성되어 있지 않으므로 열거에는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f0bd9f70c7d85250d56fa8eb6dc682dca7b3ddb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(transparent)]&lt;/code&gt; struct around one of the types in this list.</source>
          <target state="translated">&lt;code&gt;#[repr(transparent)]&lt;/code&gt; 이 목록에있는 유형 중 하나 주위에 # [repr (transparent)] 구조체.</target>
        </trans-unit>
        <trans-unit id="c48c7d3f0fc5ee14c8c96d789bbf366780419dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; and &lt;code&gt;#[naked]&lt;/code&gt; cannot both be applied to the same function.</source>
          <target state="translated">&lt;code&gt;#[track_caller]&lt;/code&gt; 와 &lt;code&gt;#[naked]&lt;/code&gt; 는 같은 기능에 모두 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a57a0e610a164c62e03711b2ba96774ab725f205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; can not be applied on struct.</source>
          <target state="translated">&lt;code&gt;#[track_caller]&lt;/code&gt; 는 구조체에 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8d24975d88ffde3bf61dcb46929bfa0cae49ef54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; requires functions to have the &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; ABI for implicitly receiving caller location. See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md&quot;&gt;RFC 2091&lt;/a&gt; for details on this and other restrictions.</source>
          <target state="translated">&lt;code&gt;#[track_caller]&lt;/code&gt; 는 암시 적으로 발신자 위치를 수신하기 위해 &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; ABI 가있는 함수를 필요로합니다 . 이 제한 사항 및 기타 제한 사항에 대한 자세한 내용 은 &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md&quot;&gt;RFC 2091&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e22c77dfb5bdc39cf85f2511d005d182b68ac69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(aborts)]&lt;/code&gt; -- specifies that if a non-Rust ABI function should abort the process if it attempts to unwind. This is the safer and preferred option.</source>
          <target state="translated">&lt;code&gt;#[unwind(aborts)]&lt;/code&gt; -녹슬지 않는 ABI 함수가 풀기를 시도 할 때 프로세스를 중단해야하는지 지정합니다. 이것이 더 안전하고 선호되는 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="f6ef8afa07009120ba1ff814dbb9b76006904869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(allowed)]&lt;/code&gt; -- specifies that a non-Rust ABI function should be allowed to unwind. This can easily result in Undefined Behavior (UB), so be careful.</source>
          <target state="translated">&lt;code&gt;#[unwind(allowed)]&lt;/code&gt; -녹슬지 않은 ABI 기능을 해제하도록 지정합니다. 이로 인해 UB (Undefined Behavior)가 쉽게 발생할 수 있으므로주의하십시오.</target>
        </trans-unit>
        <trans-unit id="d2141675567e2ff5af40224f9104bc000706071a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#b&lt;/code&gt; - precedes the argument with a &lt;code&gt;0b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#b&lt;/code&gt; - 인수 앞에 &lt;code&gt;0b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f27213319ed7730957b4ff0bab03dd5ca3bd1367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#o&lt;/code&gt; - precedes the argument with a &lt;code&gt;0o&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#o&lt;/code&gt; - 인수 앞에 &lt;code&gt;0o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edebe4d36cf7b19364e0464326bee8846ebdde2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#x&lt;/code&gt; - precedes the argument with a &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#x&lt;/code&gt; - 인수 앞에 &lt;code&gt;0x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="556dbb315900c0a8252cc4637442128cc2c845f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$(i:ident),\*&lt;/code&gt; is &lt;em&gt;also&lt;/em&gt; an NT; it is a complex NT that matches a comma-separated repetition of identifiers. The &lt;code&gt;,&lt;/code&gt; is the separator token for the complex NT; it occurs in between each pair of elements (if any) of the matched fragment.</source>
          <target state="translated">&lt;code&gt;$(i:ident),\*&lt;/code&gt; 것입니다 &lt;em&gt;또한&lt;/em&gt; 은 NT; 쉼표로 구분 된 식별자 반복과 일치하는 복잡한 NT입니다. &lt;code&gt;,&lt;/code&gt; 복소 NT에 대한 토큰 분리이고; 일치하는 조각의 각 요소 쌍 (있는 경우) 사이에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0d6854746382a364c36a12ffd25cb936fbfb709b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$crate&lt;/code&gt; is only used within &lt;a href=&quot;macros-by-example&quot;&gt;macro transcribers&lt;/a&gt;, and can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;. &lt;code&gt;$crate&lt;/code&gt; will expand to a path to access items from the top level of the crate where the macro is defined, regardless of which crate the macro is invoked.</source>
          <target state="translated">&lt;code&gt;$crate&lt;/code&gt; 는 &lt;a href=&quot;macros-by-example&quot;&gt;매크로 transcribers&lt;/a&gt; 내 에서만 사용되며 앞에 &lt;code&gt;::&lt;/code&gt; 없이 첫 번째 세그먼트로만 사용할 수 있습니다 . &lt;code&gt;$crate&lt;/code&gt; 는 매크로가 호출되는 크레이트에 관계없이 매크로가 정의 된 크레이트의 최상위 레벨에서 항목에 액세스 할 수있는 경로로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="679d8433733458586e46b500fc8086472e219797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d7e8aae1d7d250920a5c4fa2d1906438e69c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; (only dereferencing of references, not raw pointers)</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;*&lt;/code&gt; (원시 포인터가 아닌 참조의 역 참조 만 해당)</target>
        </trans-unit>
        <trans-unit id="ed5cf0f3f2314a3c1db59896239e99da325e5c85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; denotes that your pattern expects a reference to an object. Hence &lt;code&gt;&amp;amp;&lt;/code&gt; is a part of said pattern: &lt;code&gt;&amp;amp;Foo&lt;/code&gt; matches different objects than &lt;code&gt;Foo&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 는 패턴에 객체에 대한 참조가 필요함을 나타냅니다. 따라서, &lt;code&gt;&amp;amp;&lt;/code&gt; 상기 패턴의 일부이다 : &lt;code&gt;&amp;amp;Foo&lt;/code&gt; 보다 다른 목적에 일치 &lt;code&gt;Foo&lt;/code&gt; 수행한다.</target>
        </trans-unit>
        <trans-unit id="66a236bb980229e8d9c386df1defdd23e0611c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; vs &lt;code&gt;ref&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 대 &lt;code&gt;ref&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="100b85a2a9d4dd25222be6f6e9373487495df2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="003a3eb1987d2ceeb5c27dc2dec9740cbefe4089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cfad7584c9bbb0b669e0b14816e837f362b14f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dabac979268ce43c29120df6a9a25cb04ca0786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;CStr&lt;/code&gt; is to &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;CStr&lt;/code&gt; 이고 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; 을&lt;/a&gt; 로 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 이다 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 쌍의 전자는 빌린 참조이며; 후자는 소유 한 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="28ddedd7da11b37f81d4b4b0ec1a458fb4a8fbe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;CStr&lt;/code&gt; is to &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;CStr&lt;/code&gt; 이고 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; 을&lt;/a&gt; 로 &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 이다 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 각 쌍의 전자는 빌린 참조이며; 후자는 소유 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="231a608bd66cb7f4fedf355a72aeb9dabc04ae6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; is to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 따라 &amp;amp; OsStr 은 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 에 있습니다. 각 쌍의 전자는 참조를 차용합니다. 후자는 소유 한 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="25c7e55fe7d70e4444b60101dac687b9cda69215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; is to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 것처럼 &amp;amp; OsStr 은 OsString에 대한 것입니다. 각 쌍의 전자는 빌린 참조입니다. 후자는 소유 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d6a979315d4e1967955d0501abf490f0085268c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; or &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Deref&amp;lt;Target = U&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 에 &lt;code&gt;&amp;amp;U&lt;/code&gt; 경우 &lt;code&gt;T&lt;/code&gt; 의 구현 &lt;code&gt;Deref&amp;lt;Target = U&amp;gt;&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0161cd0539110f53c2febf48c1cca2447115c0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; 를 &lt;code&gt;*const T&lt;/code&gt; 로</target>
        </trans-unit>
        <trans-unit id="46dda6233dba0ecad7934ea0813e4914047cfeab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;*const T&lt;/code&gt;, &lt;code&gt;*mut T&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt; and &lt;code&gt;[T]&lt;/code&gt; implement the trait if &lt;code&gt;T&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; , &lt;code&gt;&amp;amp;mut T&lt;/code&gt; , &lt;code&gt;*const T&lt;/code&gt; , &lt;code&gt;*mut T&lt;/code&gt; , &lt;code&gt;[T; n]&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; 가 그렇지 않으면 n] 및 &lt;code&gt;[T]&lt;/code&gt; 는 특성을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="dc96200efbec5d8076d1b9b94b52ec88183c28a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;*const T&lt;/code&gt;, &lt;code&gt;*mut T&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt;, and &lt;code&gt;[T]&lt;/code&gt; implement the trait if &lt;code&gt;T&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; , &lt;code&gt;&amp;amp;mut T&lt;/code&gt; , &lt;code&gt;*const T&lt;/code&gt; , &lt;code&gt;*mut T&lt;/code&gt; , &lt;code&gt;[T; n]&lt;/code&gt; 및 &lt;code&gt;[T]&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 가있는 경우 특성을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="50da4761f95f8b4904a2b4673cd94aa0fa7b26f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt; - &lt;em&gt;shared slice&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; - &lt;em&gt;공유 슬라이스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e24aa999f8934769ffd4c780b39a8e4fb6a9424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt;, a 'shared slice', often just called a 'slice', it doesn't own the data it points to, it borrows it.</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; '공유 슬라이스'인 &amp;amp; [T] 는 종종 '슬라이스'라고도하며 가리키는 데이터를 소유하지 않고 차용합니다.</target>
        </trans-unit>
        <trans-unit id="837b4b1aa442e15d820d83dbd88f70dbe053cf46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;expr&lt;/code&gt;, &lt;code&gt;&amp;amp;mut expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;expr&lt;/code&gt; , &lt;code&gt;&amp;amp;mut expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46b729c5a5ac065b8dd74eee17a83326f430f766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; follow LLVM&amp;rsquo;s scoped &lt;a href=&quot;http://llvm.org/docs/LangRef.html#noalias&quot;&gt;noalias&lt;/a&gt; model, except if the &lt;code&gt;&amp;amp;T&lt;/code&gt; contains an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 및 &lt;code&gt;&amp;amp;T&lt;/code&gt; 는 &lt;code&gt;&amp;amp;T&lt;/code&gt; &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt; 가 포함 된 경우를 제외하고 LLVM의 범위가 지정된 &lt;a href=&quot;http://llvm.org/docs/LangRef.html#noalias&quot;&gt;별명&lt;/a&gt; 모델을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="25e74d9ebf04af4dc90c16effe573bf17b812351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references can be freely coerced into &lt;code&gt;&amp;amp;T&lt;/code&gt; references with the same referent type, and references with longer lifetimes can be freely coerced into references with shorter ones.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 참조는 동일한 참조 유형 으로 &lt;code&gt;&amp;amp;T&lt;/code&gt; 참조로 자유롭게 강제 변환 될 수 있으며 수명이 긴 참조는 짧은 참조로 자유롭게 강제 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="994822c40583180d62be96191de5478d1f130277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; (to prevent creating multiple simultaneous mutable borrows), plus the following, regardless of the type of its referent:</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 참조 는 참조 유형에 상관없이 &lt;code&gt;Copy&lt;/code&gt; 및 &lt;code&gt;Clone&lt;/code&gt; (여러 개의 동시 변경 가능한 차용 작성을 방지하기 위해)을 제외하고 위의 모든 항목을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="58231ba0fe17b906446ee76384afc785ea3cf780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;ToSocketAddrs&lt;/code&gt;, plus the following, if &lt;code&gt;T&lt;/code&gt; implements that trait:</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 참조를 제외한 위의 모든 얻을 &lt;code&gt;ToSocketAddrs&lt;/code&gt; 더한 다음, 경우 &lt;code&gt;T&lt;/code&gt; 의 구현 특성이 :</target>
        </trans-unit>
        <trans-unit id="9f3e4a0e475933a54d975d40cd0187e169300438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 를 &lt;code&gt;&amp;amp;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cafff14ac73559830fb93ee301a81f3f716d8d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;DerefMut&amp;lt;Target = U&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 로 &lt;code&gt;&amp;amp;mut U&lt;/code&gt; 경우 &lt;code&gt;T&lt;/code&gt; 의 구현 &lt;code&gt;DerefMut&amp;lt;Target = U&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f58f2fca8c8b73d2398dfdb8b109feaba2f26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;*mut T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 에서 &lt;code&gt;*mut T&lt;/code&gt; 로</target>
        </trans-unit>
        <trans-unit id="314c822c9bb0a94fd29dddc9cc81ed697c1733b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; - &lt;em&gt;mutable slice&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; - &lt;em&gt;가변 슬라이스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="605363775d1f90fd43b62d85732f360a5bccbdfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt;, a 'mutable slice', mutably borrows the data it points to.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; 'mutable slice'인 &amp;amp; mut [T] 는 가리키는 데이터를 변경 가능하게 차용합니다.</target>
        </trans-unit>
        <trans-unit id="ba1a18bfa8b6a24e62dc6f8a2e5508898e614305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;str&lt;/code&gt;, not &lt;code&gt;&amp;amp;Path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; 이 아니라 &lt;code&gt;&amp;amp;Path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26c76a341db428f538063d9949d921df1bd350ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;type&lt;/code&gt;, &lt;code&gt;&amp;amp;mut type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a mut type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;type&lt;/code&gt; , &lt;code&gt;&amp;amp;mut type&lt;/code&gt; , &lt;code&gt;&amp;amp;'a type&lt;/code&gt; , &lt;code&gt;&amp;amp;'a mut type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e46f816411016db64167d67808550c9a4e1de4a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; - the argument is right-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; -인수가 &lt;code&gt;width&lt;/code&gt; 열 에서 오른쪽으로 정렬됩니다</target>
        </trans-unit>
        <trans-unit id="f2b9944b1a3b4ab996e45769e6a7d492f69bd586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f2df8356639a025d9c2c68f00d02b26c7d98800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; -인수가 &lt;code&gt;width&lt;/code&gt; 열 에서 왼쪽 정렬됩니다</target>
        </trans-unit>
        <trans-unit id="1521eb066642c72f0edfb9d98bc93d57ee54bbb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;as&lt;/code&gt;&lt;em&gt;TypePath&lt;/em&gt;)? &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;유형&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;as&lt;/code&gt; &lt;em&gt;TypePath&lt;/em&gt; )? &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31c6a581d48ddd7b26ffd61864801566caa2ead1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dbbaf6a02a43903e03096aff35adf3a1a3b43ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765c9e9bad553a140772da4efd5bf00a80d68666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;u8 as Age&amp;gt;::Mythology&lt;/code&gt; is a trait method, which is definitely not a type. However, the &lt;code&gt;Age&lt;/code&gt; trait provides an associated type &lt;code&gt;Empire&lt;/code&gt; which can be used as a type:</source>
          <target state="translated">&lt;code&gt;&amp;lt;u8 as Age&amp;gt;::Mythology&lt;/code&gt; 는 유형이 아닌 특성 방법입니다. 그러나 &lt;code&gt;Age&lt;/code&gt; 특성은 유형 으로 사용할 수 있는 관련 유형 &lt;code&gt;Empire&lt;/code&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="30bb03e8170ae70fd3ac09af2cb8fd9b9ada49db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;u8 as Rick&amp;gt;::Morty&lt;/code&gt; is an enum variant, you cannot use a variant as a type, you have to use the enum directly:</source>
          <target state="translated">&lt;code&gt;&amp;lt;u8 as Rick&amp;gt;::Morty&lt;/code&gt; 는 열거 형 변형이므로 유형으로 변형을 사용할 수 없으며 열거 형을 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="028839fbf25c4f0df369882e065239cc563d52f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; ( ~[&lt;code&gt;'&lt;/code&gt;&lt;code&gt;\&lt;/code&gt; \n \r \t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; (~ [ &lt;code&gt;'&lt;/code&gt; &lt;code&gt;\&lt;/code&gt; \ n \ r \ t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE) &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c45d46db2c9cb6be797290a1904f27933d568b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="262b1239e297499c69379411bda505caaab17575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9efc2adcc35c3e643a509481004b4dac937306d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'_&lt;/code&gt;, cannot be used as a lifetime identifier because it is a reserved for the anonymous lifetime. To fix this, use a lowercase letter such as 'a, or a series of lowercase letters such as &lt;code&gt;'foo&lt;/code&gt;. For more information, see &lt;a href=&quot;book/appendix-02-operators#non-operator-symbols&quot;&gt;the book&lt;/a&gt;. For more information on using the anonymous lifetime in rust nightly, see &lt;a href=&quot;https://doc.rust-lang.org/nightly/edition-guide/rust-2018/ownership-and-lifetimes/the-anonymous-lifetime.html&quot;&gt;the nightly book&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;'_&lt;/code&gt; 은 (는) 익명 수명을 위해 예약되어 있으므로 수명 식별자로 사용할 수 없습니다. 이를 수정하려면 'a와 같은 소문자 또는 &lt;code&gt;'foo&lt;/code&gt; 와 같은 일련의 소문자를 사용하십시오 . 자세한 내용 &lt;a href=&quot;book/appendix-02-operators#non-operator-symbols&quot;&gt;은 책을&lt;/a&gt; 참조하십시오 . rust nightly에서 익명 수명을 사용하는 방법에 대한 자세한 내용 &lt;a href=&quot;https://doc.rust-lang.org/nightly/edition-guide/rust-2018/ownership-and-lifetimes/the-anonymous-lifetime.html&quot;&gt;은 nightly 책을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf7a1d050349eb0a9405c6fd243d43af7d15ed3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a + trait&lt;/code&gt;, &lt;code&gt;trait + trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'a + trait&lt;/code&gt; , &lt;code&gt;trait + trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe3a2f028142c8a5e43a922d060f7bb6597aba89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; is used for the static lifetime and cannot be used as a generic lifetime parameter</source>
          <target state="translated">&lt;code&gt;'static&lt;/code&gt; 은 정적 수명에 사용되며 일반 수명 매개 변수로 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="e921e8c236df635ceb7f81bd144058177296ca55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; lifetime elision</source>
          <target state="translated">&lt;code&gt;'static&lt;/code&gt; 수명 제거</target>
        </trans-unit>
        <trans-unit id="c5ec56d05d6ab6d5da38345a1ca5bd84376907d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($a:tt $b:tt)* ; )&lt;/code&gt; : legal, because FIRST(&lt;code&gt;$b:tt&lt;/code&gt;) = { &lt;code&gt;$b:tt&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;tt&lt;/code&gt;) = ANYTOKEN, as is FIRST(&lt;code&gt;;&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt; }.</source>
          <target state="translated">&lt;code&gt;( $($a:tt $b:tt)* ; )&lt;/code&gt; : FIRST ( &lt;code&gt;;&lt;/code&gt; ) = { 와 같이 FIRST ( &lt;code&gt;$b:tt&lt;/code&gt; ) = { &lt;code&gt;$b:tt&lt;/code&gt; }가 &amp;sube; FOLLOW ( &lt;code&gt;tt&lt;/code&gt; ) = ANYTOKEN이기 때문에 합법적입니다 . &lt;code&gt;;&lt;/code&gt; }.</target>
        </trans-unit>
        <trans-unit id="f8684b12a0aaa57d30fa673b0fe225241654fd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($t:tt),* , $(t:tt),* )&lt;/code&gt; : legal, (though any attempt to actually use this macro will signal a local ambiguity error during expansion).</source>
          <target state="translated">&lt;code&gt;( $($t:tt),* , $(t:tt),* )&lt;/code&gt; : legal (실제로이 매크로를 사용하려고하면 확장 중에 로컬 모호성 오류가 발생 함)</target>
        </trans-unit>
        <trans-unit id="56547248e7530810d57671a54cda37e9b3352f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($e:expr)*)&lt;/code&gt; : illegal, because expr NTs are not in FOLLOW(expr NT).</source>
          <target state="translated">&lt;code&gt;($($e:expr)*)&lt;/code&gt; : expr NT가 FOLLOW (expr NT)에 있지 않기 때문에 불법입니다.</target>
        </trans-unit>
        <trans-unit id="b55585a8535a57d73d71c16e179bbeb81714a782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($ty:ty)-+)&lt;/code&gt; : illegal, because separator &lt;code&gt;-&lt;/code&gt; is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($($ty:ty)-+)&lt;/code&gt; : 구분 기호 &lt;code&gt;-&lt;/code&gt; 가 FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ) 가 아니므로 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="993f4f862973836c075125ff5c2f713d6d815015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($pa:pat $pb:pat $ty:ty ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$pb:pat $ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$pb:pat&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;), and also FIRST(&lt;code&gt;$ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$ty:ty&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($pa:pat $pb:pat $ty:ty ,)&lt;/code&gt; : FIRST ( &lt;code&gt;$pb:pat $ty:ty ,&lt;/code&gt; ) = { &lt;code&gt;$pb:pat&lt;/code&gt; } ⊈ FOLLOW ( &lt;code&gt;pat&lt;/code&gt; ) 및 FIRST ( &lt;code&gt;$ty:ty ,&lt;/code&gt; ) 때문에 불법입니다 . : ty, ) = { &lt;code&gt;$ty:ty&lt;/code&gt; } ⊈ FOLLOW ( &lt;code&gt;pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="69e74763727a913538df9dabbce72da9e2cf6c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty $(; not sep)* -)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$(; not sep)* -&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; } is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($ty:ty $(; not sep)* -)&lt;/code&gt; : FIRST ( &lt;code&gt;$(; not sep)* -&lt;/code&gt; ) = { &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; }가 FOLLOW ( &lt;code&gt;ty&lt;/code&gt; )에 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f3b057ee5cfe6e8bfec5288c6d4e782ac470fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty &amp;lt; foo ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;&amp;lt; foo ,&lt;/code&gt;) = { &lt;code&gt;&amp;lt;&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;ty&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;($ty:ty &amp;lt; foo ,)&lt;/code&gt; : FIRST ( &lt;code&gt;&amp;lt; foo ,&lt;/code&gt; ) = { &lt;code&gt;&amp;lt;&lt;/code&gt; } ⊈ FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ) 이므로 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="af4ff89d2055a40fe14d24fa4126bffbd9cc45fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty , foo &amp;lt;)&lt;/code&gt; : legal, because FIRST(&lt;code&gt;, foo &amp;lt;&lt;/code&gt;) = { &lt;code&gt;,&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($ty:ty , foo &amp;lt;)&lt;/code&gt; FIRST ( &lt;code&gt;, foo &amp;lt;&lt;/code&gt; ) = { &lt;code&gt;,&lt;/code&gt; }는 &amp;sube; FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ) 이므로 ($ ty : ty, foo &amp;lt;) : legal 입니다.</target>
        </trans-unit>
        <trans-unit id="0539b3c0db4be4abfee21cc9878f98aaa385d3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&amp;amp;str)::Searcher&lt;/code&gt; is not a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because the pattern &lt;code&gt;&quot;aa&quot;&lt;/code&gt; in the haystack &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; matches as either &lt;code&gt;&quot;[aa]a&quot;&lt;/code&gt; or &lt;code&gt;&quot;a[aa]&quot;&lt;/code&gt;, depending from which side it is searched.</source>
          <target state="translated">&lt;code&gt;(&amp;amp;str)::Searcher&lt;/code&gt; 건초 더미 &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; 의 패턴 &lt;code&gt;&quot;aa&quot;&lt;/code&gt; 는 검색되는 측면에 따라 &lt;code&gt;&quot;[aa]a&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;a[aa]&quot;&lt;/code&gt; 와 일치 하므로 (&amp;amp; str) :: Searcher 는 &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="c224991255402dae321bbcfae5fc8d99765a3efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;()&lt;/code&gt; (unit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3270960ea9ef61405038cc8ca9bc030cb6189760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;NamedFunctionParameters&lt;/em&gt; | &lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;NamedFunctionParameters&lt;/em&gt; | &lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7b3166187e8257d7ef06a6c8bf54c27abb02462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eb4b1cb7f078b919498ddacb73676b692438d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8051f59d7a315a8ad3b88e3d66ae9b30745551e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa0ec7fe01991e3f5f7275d59b43c4728e1862f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: the string should be either a string representation of an &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; address as expected by &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a host name.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;, &lt;/code&gt; &lt;a href=&quot;../primitive.u16&quot;&gt; &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; : 문자열은 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 구현에서 예상 &lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt; 주소 의 문자열 표현 이거나 호스트 이름 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c9f2ad445d33233a41450be81a768f5137382954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;associated-items#methods&quot;&gt;&lt;em&gt;SelfParam&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;associated-items#methods&quot;&gt;&lt;em&gt;SelfParam&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TraitFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a23c2be37d0d515c84ac91098b92654bb8e96d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; should be either a string representation of an &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; address as expected by &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a host name. &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt; is the port number.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;, &lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt; &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; : &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 구현에서 예상 하는 &lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt; 주소 의 문자열 표현 이거나 호스트 이름 이어야 합니다. &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt; &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; 은 포트 번호입니다.</target>
        </trans-unit>
        <trans-unit id="5f752d7fa86210a2ae237207713c0a3cd74f1ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96d19ff5ae8cd742a0988f5c24e68538a6f9b2df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b521abe1164dc0ac980c183d64a2b10f3ffbcc3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb6050cd3752fc6923fbffc151a9ef3346eb750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaf7e72fa6acac0009a90d87fb214f638b22a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57523ac3e3d7e480b19a1ea5c9bc5ecb877f8112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d5871fd10034fb1e354bac32de3d2c61906ec0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b55f5c151548403aaa3b478e3ecac044413984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2363c70dc5d2a2b18f346fb77b70abfe460a6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;SelfParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionParam&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;em&gt;SelfParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionParam&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70af26dcd6fad35f4b4fcae06243f12d1f21387b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0be71c00c0efbb926d5d2eb26e5c5a250aed194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06cc40d2a528db267a6648db6a2b72ac9bb006a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08ac5232fc6093780b1acf7241b4e7bab7156e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TypePathFnInputs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt; (&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;em&gt;TypePathFnInputs &lt;/em&gt;&lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt; ( &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;유형&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2e1e8edd41c7002a8ab68852fa5aca6d9a2b0350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(i32, String)&lt;/code&gt; (different type from the previous example)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15179412d8625594c23d62eb76f731a89d6072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(start $foo:expr $($i:ident),\* end)&lt;/code&gt; is a matcher. The whole matcher is a delimited sequence (with open- and close-delimiters &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;), and &lt;code&gt;$foo&lt;/code&gt; and &lt;code&gt;$i&lt;/code&gt; are simple NT's with &lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;ident&lt;/code&gt; as their respective fragment specifiers.</source>
          <target state="translated">&lt;code&gt;(start $foo:expr $($i:ident),\* end)&lt;/code&gt; 는 matcher입니다. 전체 매처는 분리 된 시퀀스 (개방 및 닫기 분리 문자 &lt;code&gt;(&lt;/code&gt; 및 &lt;code&gt;)&lt;/code&gt; 포함 )이며 &lt;code&gt;$foo&lt;/code&gt; 및 &lt;code&gt;$i&lt;/code&gt; 는 &lt;code&gt;expr&lt;/code&gt; 및 &lt;code&gt;ident&lt;/code&gt; 를 각각의 조각 지정자로 사용하는 단순한 NT 입니다.</target>
        </trans-unit>
        <trans-unit id="6d8e0bcd3c877e04636e8e5d2cc120bc201c7ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; &amp;mdash; indicates any number of repetitions.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; &amp;mdash; 반복 횟수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="282e5f6c59b67793cae57d08e6da597177d4c4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; ( &lt;code&gt;mut&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt; ) &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; ( &lt;code&gt;mut&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt; ) &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1193cded4594582953508928c736d3daf7d0988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; All number literals allow &lt;code&gt;_&lt;/code&gt; as a visual separator: &lt;code&gt;1_234.0E+18f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 모든 숫자 리터럴은 &lt;code&gt;_&lt;/code&gt; 를 시각적 구분 기호로 허용합니다 : &lt;code&gt;1_234.0E+18f64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a40702b8b24d39bac688bed4e569511e90dbde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; | &lt;code&gt;+&lt;/code&gt; | &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; | &lt;code&gt;+&lt;/code&gt; | &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee43d15d8efc0763bf888632f5de5af405f54b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b556ae5ded966b100577546007e959b0f58fc09f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7e7b5489f017aedaf04aa71701ce9a7772610d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*T&lt;/code&gt; where &lt;code&gt;T: Sized&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*T&lt;/code&gt; 여기서 &lt;code&gt;T: Sized&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8245cc67913c0555fa10740cfa5f0270bffc311b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*V&lt;/code&gt; 여기서 &lt;code&gt;V: Sized&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9081132c760081d69b04aa7ba3b2618d0f8a6dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;*V&lt;/code&gt; 여기서 &lt;code&gt;V: Sized&lt;/code&gt; *</target>
        </trans-unit>
        <trans-unit id="601f7465e6a41711507a94ee440b07fdd00bb248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*const type&lt;/code&gt;, &lt;code&gt;*mut type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*const type&lt;/code&gt; , &lt;code&gt;*mut type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a728e640ea1abe3301c9e1227384335723dcab5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; but non-zero and covariant.</source>
          <target state="translated">&lt;code&gt;*mut T&lt;/code&gt; 이지만 0이 아니고 공변량.</target>
        </trans-unit>
        <trans-unit id="582c2739d4e8826d3d84328fd57ac1b0847a2665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*mut T&lt;/code&gt; 를 &lt;code&gt;*const T&lt;/code&gt; 로</target>
        </trans-unit>
        <trans-unit id="f67b647c0c8fa1af24503640eb7546e487545e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; &amp;mdash; indicates any number but at least one.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; &amp;mdash; 하나 이상의 숫자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f1ba6bcf257280d5b355dd73ac85086da5cb4e2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; - This is intended for numeric types and indicates that the sign should always be printed. Positive signs are never printed by default, and the negative sign is only printed by default for the &lt;code&gt;Signed&lt;/code&gt; trait. This flag indicates that the correct sign (&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;) should always be printed.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; -숫자 유형을위한 것이며 부호가 항상 인쇄되어야 함을 나타냅니다. 양수 부호는 기본적으로 인쇄되지 않으며 음수 부호는 기본적으로 &lt;code&gt;Signed&lt;/code&gt; 특성에 대해서만 인쇄됩니다 . 이 플래그는 항상 올바른 부호 ( &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; )를 인쇄해야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a58721e317a663f3f70bd919555e501c8280c19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e3474e7e06d60a73bc2968ca4a191e87573a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a120d3aa1b45dbb0a50cb7006f6f73b8ea480013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab5b67e8eb7b4ac2b96fd7bc3a598f810162f6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=bin&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;bin&quot;]&lt;/code&gt; - A runnable executable will be produced. This requires that there is a &lt;code&gt;main&lt;/code&gt; function in the crate which will be run when the program begins executing. This will link in all Rust and native dependencies, producing a distributable binary.</source>
          <target state="translated">&lt;code&gt;--crate-type=bin&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;bin&quot;]&lt;/code&gt; -실행 가능한 실행 파일이 생성됩니다. 이것은 프로그램이 실행을 시작할 때 실행될 크레이트에 &lt;code&gt;main&lt;/code&gt; 기능 이 있어야합니다 . 이것은 모든 Rust와 native 의존성에 연결되어 배포 가능한 바이너리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f63ac98efdf94d2bc7fddfafef0d70a6bff9afed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=cdylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;cdylib&quot;]&lt;/code&gt; - A dynamic system library will be produced. This is used when compiling a dynamic library to be loaded from another language. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on Linux, &lt;code&gt;*.dylib&lt;/code&gt; files on macOS, and &lt;code&gt;*.dll&lt;/code&gt; files on Windows.</source>
          <target state="translated">&lt;code&gt;--crate-type=cdylib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;cdylib&quot;]&lt;/code&gt; -동적 시스템 라이브러리가 생성됩니다. 다른 언어에서로드 할 동적 라이브러리를 컴파일 할 때 사용됩니다. 이 출력 유형은 Linux에서 &lt;code&gt;*.so&lt;/code&gt; 파일, macOS에서 &lt;code&gt;*.dylib&lt;/code&gt; 파일 및 Windows에서 &lt;code&gt;*.dll&lt;/code&gt; 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="703b282fa50bb5a0c4679638926e4bc23a2522d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=dylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;dylib&quot;]&lt;/code&gt; - A dynamic Rust library will be produced. This is different from the &lt;code&gt;lib&lt;/code&gt; output type in that this forces dynamic library generation. The resulting dynamic library can be used as a dependency for other libraries and/or executables. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on linux, &lt;code&gt;*.dylib&lt;/code&gt; files on osx, and &lt;code&gt;*.dll&lt;/code&gt; files on windows.</source>
          <target state="translated">&lt;code&gt;--crate-type=dylib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;dylib&quot;]&lt;/code&gt; -동적 Rust 라이브러리가 생성됩니다. 이는 동적 라이브러리 생성을 강제한다는 점에서 &lt;code&gt;lib&lt;/code&gt; 출력 유형과 다릅니다 . 결과 동적 라이브러리는 다른 라이브러리 및 / 또는 실행 파일에 대한 종속성으로 사용될 수 있습니다. 이 출력 유형은 Linux에서 &lt;code&gt;*.so&lt;/code&gt; 파일, osx에서 &lt;code&gt;*.dylib&lt;/code&gt; 파일 및 Windows에서 &lt;code&gt;*.dll&lt;/code&gt; 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c23ec523239fb33f66c9ffb1db77192fdf59eab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=lib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;lib&quot;]&lt;/code&gt; - A Rust library will be produced. This is an ambiguous concept as to what exactly is produced because a library can manifest itself in several forms. The purpose of this generic &lt;code&gt;lib&lt;/code&gt; option is to generate the &quot;compiler recommended&quot; style of library. The output library will always be usable by rustc, but the actual type of library may change from time-to-time. The remaining output types are all different flavors of libraries, and the &lt;code&gt;lib&lt;/code&gt; type can be seen as an alias for one of them (but the actual one is compiler-defined).</source>
          <target state="translated">&lt;code&gt;--crate-type=lib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;lib&quot;]&lt;/code&gt; -Rust 라이브러리가 생성됩니다. 라이브러리가 여러 형태로 나타날 수 있기 때문에 정확히 무엇이 생산되는지에 대한 모호한 개념입니다. 이 일반 &lt;code&gt;lib&lt;/code&gt; 옵션 의 목적은 &quot;컴파일러 권장&quot;스타일의 라이브러리를 생성하는 것입니다. 출력 라이브러리는 항상 rustc에서 사용할 수 있지만 실제 라이브러리 유형은 수시로 변경 될 수 있습니다. 나머지 출력 유형은 모두 다른 라이브러리 풍미이며, &lt;code&gt;lib&lt;/code&gt; 유형은 그 중 하나의 별명으로 볼 수 있지만 실제 유형은 컴파일러 정의입니다.</target>
        </trans-unit>
        <trans-unit id="426b054cd0b79fc4683fcd9b9699aebe53e66145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=proc-macro&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;proc-macro&quot;]&lt;/code&gt; - The output produced is not specified, but if a &lt;code&gt;-L&lt;/code&gt; path is provided to it then the compiler will recognize the output artifacts as a macro and it can be loaded for a program. Crates compiled with this crate type must only export &lt;a href=&quot;procedural-macros&quot;&gt;procedural macros&lt;/a&gt;. The compiler will automatically set the &lt;code&gt;proc_macro&lt;/code&gt;&lt;a href=&quot;conditional-compilation&quot;&gt;configuration option&lt;/a&gt;. The crates are always compiled with the same target that the compiler itself was built with. For example, if you are executing the compiler from Linux with an &lt;code&gt;x86_64&lt;/code&gt; CPU, the target will be &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; even if the crate is a dependency of another crate being built for a different target.</source>
          <target state="translated">&lt;code&gt;--crate-type=proc-macro&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;proc-macro&quot;]&lt;/code&gt; -생성 된 출력이 지정되지 않았지만 &lt;code&gt;-L&lt;/code&gt; 경로가 제공되면 컴파일러는 출력 아티팩트를 매크로로 인식하고 프로그램을 위해로드 할 수 있습니다. 이 상자 유형으로 컴파일 된 상자는 &lt;a href=&quot;procedural-macros&quot;&gt;절차 매크로&lt;/a&gt; 만 내 보내야 합니다 . 컴파일러는 &lt;code&gt;proc_macro&lt;/code&gt; &lt;a href=&quot;conditional-compilation&quot;&gt;구성 옵션을&lt;/a&gt; 자동으로 설정합니다 . 상자는 항상 컴파일러 자체와 동일한 대상으로 컴파일됩니다. 예를 들어, &lt;code&gt;x86_64&lt;/code&gt; CPU를 사용하여 Linux에서 컴파일러를 실행하는 경우 대상은 &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; 입니다. 상자가 다른 대상에 대해 건설중인 다른 상자의 종속성 인 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="5965747c226601f33886cabe7850717326736605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=rlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;rlib&quot;]&lt;/code&gt; - A &quot;Rust library&quot; file will be produced. This is used as an intermediate artifact and can be thought of as a &quot;static Rust library&quot;. These &lt;code&gt;rlib&lt;/code&gt; files, unlike &lt;code&gt;staticlib&lt;/code&gt; files, are interpreted by the compiler in future linkage. This essentially means that &lt;code&gt;rustc&lt;/code&gt; will look for metadata in &lt;code&gt;rlib&lt;/code&gt; files like it looks for metadata in dynamic libraries. This form of output is used to produce statically linked executables as well as &lt;code&gt;staticlib&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;code&gt;--crate-type=rlib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;rlib&quot;]&lt;/code&gt; - &quot;Rust library&quot;파일이 생성됩니다. 이것은 중간 인공물로 사용되며 &quot;정적 녹 라이브러리&quot;로 생각할 수 있습니다. 이 &lt;code&gt;rlib&lt;/code&gt; 의 파일은, 달리 &lt;code&gt;staticlib&lt;/code&gt; 파일, 향후 결합의 컴파일러에 의해 해석됩니다. 이것은 본질적으로 &lt;code&gt;rustc&lt;/code&gt; 가 동적 라이브러리에서 메타 데이터를 찾는 것처럼 &lt;code&gt;rlib&lt;/code&gt; 파일 에서 메타 데이터를 찾을 것임을 의미합니다 . 이 형식의 출력은 &lt;code&gt;staticlib&lt;/code&gt; 출력 뿐만 아니라 정적으로 링크 된 실행 파일을 생성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0c235658c9abcef8e535a11dc9e0638db29f373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=staticlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - A static system library will be produced. This is different from other library outputs in that the compiler will never attempt to link to &lt;code&gt;staticlib&lt;/code&gt; outputs. The purpose of this output type is to create a static library containing all of the local crate's code along with all upstream dependencies. The static library is actually a &lt;code&gt;*.a&lt;/code&gt; archive on linux and osx and a &lt;code&gt;*.lib&lt;/code&gt; file on windows. This format is recommended for use in situations such as linking Rust code into an existing non-Rust application because it will not have dynamic dependencies on other Rust code.</source>
          <target state="translated">&lt;code&gt;--crate-type=staticlib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; -정적 시스템 라이브러리가 생성됩니다. 컴파일러가 &lt;code&gt;staticlib&lt;/code&gt; 출력 에 연결하려고 시도하지 않는다는 점에서 이것은 다른 라이브러리 출력과 다릅니다 . 이 출력 유형의 목적은 모든 업스트림 종속성과 함께 모든 로컬 크레이트 코드를 포함하는 정적 라이브러리를 만드는 것입니다. 정적 라이브러리는 실제로 Linux 및 osx 의 &lt;code&gt;*.a&lt;/code&gt; 아카이브이고 Windows 의 &lt;code&gt;*.lib&lt;/code&gt; 파일입니다. 이 형식은 Rust 코드를 기존의 Rust 이외의 응용 프로그램에 연결하는 등의 상황에서 다른 Rust 코드에 대한 동적 종속성이 없으므로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="40f209656b9352f76ce73cdb6cc660179c1526de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=staticlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - A static system library will be produced. This is different from other library outputs in that the compiler will never attempt to link to &lt;code&gt;staticlib&lt;/code&gt; outputs. The purpose of this output type is to create a static library containing all of the local crate's code along with all upstream dependencies. The static library is actually a &lt;code&gt;*.a&lt;/code&gt; archive on linux and osx and windows(MinGW), and a &lt;code&gt;*.lib&lt;/code&gt; file on windows(MSVC). This format is recommended for use in situations such as linking Rust code into an existing non-Rust application because it will not have dynamic dependencies on other Rust code.</source>
          <target state="translated">&lt;code&gt;--crate-type=staticlib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; -정적 시스템 라이브러리가 생성됩니다. 이것은 컴파일러가 &lt;code&gt;staticlib&lt;/code&gt; 출력 에 링크를 시도하지 않는다는 점에서 다른 라이브러리 출력과 다릅니다 . 이 출력 유형의 목적은 모든 업스트림 종속성과 함께 로컬 크레이트의 모든 코드를 포함하는 정적 라이브러리를 만드는 것입니다. 정적 라이브러리는 실제로 Linux 및 OSX 및 Windows (MinGW) 의 &lt;code&gt;*.a&lt;/code&gt; 아카이브와 Windows (MSVC) 의 &lt;code&gt;*.lib&lt;/code&gt; 파일입니다. 이 형식은 다른 Rust 코드에 대한 동적 종속성이 없기 때문에 Rust 코드를 기존의 비 Rust 응용 프로그램에 연결하는 것과 같은 상황에서 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ac7c689e1b28b2d6011b88dcfd5fa11a2dc4867e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-0&lt;/code&gt;: this is just due to how floats are encoded. It is semantically equivalent to &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;-0.0 == 0.0&lt;/code&gt; results in &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-0&lt;/code&gt; : 이것은 float가 인코딩되는 방식 때문입니다. 의미 상 &lt;code&gt;0&lt;/code&gt; 과 동일 하며 &lt;code&gt;-0.0 == 0.0&lt;/code&gt; 결과는 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9dead096e4b70a9faed25da037024e64c045d649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1.0&lt;/code&gt; if the number is negative, &lt;code&gt;-0.0&lt;/code&gt; or &lt;code&gt;NEG_INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-1.0&lt;/code&gt; 숫자가 음수이면 -1.0 , &lt;code&gt;-0.0&lt;/code&gt; 또는 &lt;code&gt;NEG_INFINITY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="589c9414c02ace58b0a0f039ffbffedfebf0e0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if the number is negative</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; 숫자가 음수 이면 -1</target>
        </trans-unit>
        <trans-unit id="d9bf1d94259a76276430b45a63099ca8d243d211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; - Currently not used</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 현재는 사용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="d5cf011131be26d1bee8a68adfc2ae7040345794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3f860d0116a88fb25d1c00bf8378a9e15043c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.*&lt;/code&gt; means that this &lt;code&gt;{...}&lt;/code&gt; is associated with &lt;em&gt;two&lt;/em&gt; format inputs rather than one: the first input holds the &lt;code&gt;usize&lt;/code&gt; precision, and the second holds the value to print. Note that in this case, if one uses the format string &lt;code&gt;{&amp;lt;arg&amp;gt;:&amp;lt;spec&amp;gt;.*}&lt;/code&gt;, then the &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; part refers to the &lt;em&gt;value&lt;/em&gt; to print, and the &lt;code&gt;precision&lt;/code&gt; must come in the input preceding &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.*&lt;/code&gt; 는이 &lt;code&gt;{...}&lt;/code&gt; 이 하나가 아닌 &lt;em&gt;두 개의&lt;/em&gt; 형식 입력 과 연관되어 있음을 의미합니다 . 첫 번째 입력은 &lt;code&gt;usize&lt;/code&gt; 정밀도를 보유하고 두 번째는 인쇄 할 값을 보유합니다. 이 경우, 형식 문자열 &lt;code&gt;{&amp;lt;arg&amp;gt;:&amp;lt;spec&amp;gt;.*}&lt;/code&gt; 을 사용하는 경우 &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; 부분은 인쇄 할 &lt;em&gt;값&lt;/em&gt; 을 참조하며 &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; 앞의 입력에 &lt;code&gt;precision&lt;/code&gt; 가 와야합니다 .</target>
        </trans-unit>
        <trans-unit id="3faa709365d20a07db7d880a673ee21fa6785f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...u8&lt;/code&gt;, &lt;code&gt;...i32&lt;/code&gt;, &lt;code&gt;...f64&lt;/code&gt;, &lt;code&gt;...usize&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;...u8&lt;/code&gt; , &lt;code&gt;...i32&lt;/code&gt; , &lt;code&gt;...f64&lt;/code&gt; , &lt;code&gt;...usize&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="9e77e8ba90e2a5ef7a27956fe1edebeabbefebda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;, &lt;code&gt;expr..&lt;/code&gt;, &lt;code&gt;..expr&lt;/code&gt;, &lt;code&gt;expr..expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; , &lt;code&gt;expr..&lt;/code&gt; , &lt;code&gt;..expr&lt;/code&gt; , &lt;code&gt;expr..expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a526f1646ea3a7b488fe557e8d31a2c74d39da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bba69e10bb49e73faa35a5bb3352b8749536585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="170b37b39510ef836b6026bc9cd0fd6c6386e377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="2e9a03838ece4d3cb456c185d151acc103f5a77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a107c2197842219d3ccfc167a7dca700bb702b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="4ce4765390d4da7a503ab0d7bb81bf99eb4e058f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=expr&lt;/code&gt;, &lt;code&gt;expr..=expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..=expr&lt;/code&gt; , &lt;code&gt;expr..=expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="662ada72a5b3a35b3bd30f991d8456edef10b9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.await&lt;/code&gt;ing a future will suspend the current function's execution until the &lt;code&gt;executor&lt;/code&gt; has run the future to completion.</source>
          <target state="translated">&lt;code&gt;.await&lt;/code&gt; ing a future는 실행 &lt;code&gt;executor&lt;/code&gt; future를 실행하여 완료 할 때까지 현재 함수의 실행을 일시 중단합니다 .</target>
        </trans-unit>
        <trans-unit id="7559061b6410a063e7afa4f4ad0690fe4063f9b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.drain_sorted()&lt;/code&gt; is &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)); much slower than &lt;code&gt;.drain()&lt;/code&gt;. You should use the latter for most cases.</source>
          <target state="translated">&lt;code&gt;.drain_sorted()&lt;/code&gt; 는 &lt;em&gt;O&lt;/em&gt; ( &lt;em&gt;n&lt;/em&gt; * log ( &lt;em&gt;n&lt;/em&gt; )); &lt;code&gt;.drain()&lt;/code&gt; 보다 훨씬 느립니다 . 대부분의 경우 후자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="51a3e949ab19958f3ab7174b05a29e935939b6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*!&lt;/code&gt; ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;] )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*!&lt;/code&gt; ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ [ &lt;code&gt;*/&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ]) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18b1da013479634a395d70e05b21a30764a0f30c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/**&lt;/code&gt; (~&lt;code&gt;*&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;])&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/**&lt;/code&gt; (~ &lt;code&gt;*&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ [ &lt;code&gt;*/&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ]) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe8b7134d9abe13e7e7365e6720f73466482e63e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*&lt;/code&gt; (~[&lt;code&gt;*&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;**&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt;) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~&lt;code&gt;*/&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*&lt;/code&gt; (~ [ &lt;code&gt;*&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; ] | &lt;code&gt;**&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ &lt;code&gt;*/&lt;/code&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e7c9e73d2cbe4ae753289c389520b64986cb877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//!&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;//!&lt;/code&gt; ~ [ &lt;code&gt;\n&lt;/code&gt; &lt;em&gt;분리 된 CR&lt;/em&gt; ] &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="629c93bbf9c0b68e100509408b61ca4750affa3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;///&lt;/code&gt; (~&lt;code&gt;/&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;///&lt;/code&gt; (~ &lt;code&gt;/&lt;/code&gt; ~ [ &lt;code&gt;\n&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ] &lt;sup&gt;*&lt;/sup&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3b9b5ddc27888c9abf50f321981ddf4160e4e689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt; (~[&lt;code&gt;/&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;//&lt;/code&gt;) ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; (~ [ &lt;code&gt;/&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; ] | &lt;code&gt;//&lt;/code&gt; ) ~ &lt;code&gt;\n&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="568ea99a199a81fbe37d329517cd35012139953d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - This is used to indicate for integer formats that the padding should both be done with a &lt;code&gt;0&lt;/code&gt; character as well as be sign-aware. A format like &lt;code&gt;{:08}&lt;/code&gt; would yield &lt;code&gt;00000001&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt;, while the same format would yield &lt;code&gt;-0000001&lt;/code&gt; for the integer &lt;code&gt;-1&lt;/code&gt;. Notice that the negative version has one fewer zero than the positive version. Note that padding zeroes are always placed after the sign (if any) and before the digits. When used together with the &lt;code&gt;#&lt;/code&gt; flag, a similar rule applies: padding zeroes are inserted after the prefix but before the digits.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; - 정수 형식의 경우 패딩이 &lt;code&gt;0&lt;/code&gt; 문자로 수행되고 부호를 인식 해야 함을 나타내는 데 사용됩니다 . 같은 형식 &lt;code&gt;{:08}&lt;/code&gt; 얻을 것 &lt;code&gt;00000001&lt;/code&gt; 정수에 대한 &lt;code&gt;1&lt;/code&gt; 과 같은 형식이 얻을 것 동안, &lt;code&gt;-0000001&lt;/code&gt; 을 정수에 대한 &lt;code&gt;-1&lt;/code&gt; . 네거티브 버전은 포지티브 버전보다 0이 적습니다. 패딩 0은 항상 부호 뒤에 (있는 경우) 숫자 앞에 배치됩니다. &lt;code&gt;#&lt;/code&gt; 플래그 와 함께 사용 하면 유사한 규칙이 적용됩니다. 패딩 0은 접두어 뒤에 있지만 숫자 앞에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="49eafd17af63d0226281322d869a6623ed33a1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - This is used to indicate for integer formats that the padding to &lt;code&gt;width&lt;/code&gt; should both be done with a &lt;code&gt;0&lt;/code&gt; character as well as be sign-aware. A format like &lt;code&gt;{:08}&lt;/code&gt; would yield &lt;code&gt;00000001&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt;, while the same format would yield &lt;code&gt;-0000001&lt;/code&gt; for the integer &lt;code&gt;-1&lt;/code&gt;. Notice that the negative version has one fewer zero than the positive version. Note that padding zeros are always placed after the sign (if any) and before the digits. When used together with the &lt;code&gt;#&lt;/code&gt; flag, a similar rule applies: padding zeros are inserted after the prefix but before the digits. The prefix is included in the total width.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; - 정수 형식에 대해 &lt;code&gt;width&lt;/code&gt; 대한 패딩 이 모두 &lt;code&gt;0&lt;/code&gt; 문자로 수행 되어야하고 부호를 인식 해야 함을 나타내는 데 사용됩니다 . 같은 형식 &lt;code&gt;{:08}&lt;/code&gt; 얻을 것 &lt;code&gt;00000001&lt;/code&gt; 정수에 대한 &lt;code&gt;1&lt;/code&gt; 과 같은 형식이 얻을 것 동안, &lt;code&gt;-0000001&lt;/code&gt; 을 정수에 대한 &lt;code&gt;-1&lt;/code&gt; . 음수 버전은 양수 버전보다 0이 하나 적습니다. 패딩 0은 항상 부호 (있는 경우)와 숫자 앞에 배치됩니다. &lt;code&gt;#&lt;/code&gt; 플래그 와 함께 사용 하는 경우 유사한 규칙이 적용됩니다. 패딩 0은 접두사 뒤에 있지만 숫자 앞에 삽입됩니다. 접두사는 총 너비에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="57d3b4f960fab8b951592016be741bd27c2b1554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the number is zero</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 수가 0이면</target>
        </trans-unit>
        <trans-unit id="d30f8b1bf339634e4790b245c5c679cc53cb30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; | NON_ZERO_DEC_DIGIT DEC_DIGIT&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; | NON_ZERO_DEC_DIGIT DEC_DIGIT &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d4789ff4626cf9f8a3e731720085aad5a8da29ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0b&lt;/code&gt; (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; BIN_DIGIT (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0b&lt;/code&gt; (BIN_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; BIN_DIGIT (BIN_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="163f2d22ec0fea83f242b51ab292f17fe1833643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o&lt;/code&gt; (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; OCT_DIGIT (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0o&lt;/code&gt; (OCT_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; OCT_DIGIT (OCT_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a9014b67d02c6a0687cd4bad98dbf84226bb385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; HEX_DIGIT (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; (HEX_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; HEX_DIGIT (HEX_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="128574ba868b01112ed81bf50b65a339b823b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0&lt;/code&gt; if the number is positive, &lt;code&gt;+0.0&lt;/code&gt; or &lt;code&gt;INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1.0&lt;/code&gt; 개수가 긍정적 인 경우, &lt;code&gt;+0.0&lt;/code&gt; 또는 &lt;code&gt;INFINITY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b673697935bd789cb32c1981da35fcd7352e9e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.10/32&lt;/code&gt; is used for NAT traversal (see &lt;a href=&quot;https://tools.ietf.org/html/rfc8155&quot;&gt;IETF RFC 8155&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.10/32&lt;/code&gt; 는 NAT 통과에 사용됩니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc8155&quot;&gt;IETF RFC 8155&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="32aaa1076a63e49b9731869dba6f42ce4d62f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.8/32&lt;/code&gt; is the &quot;IPv4 dummy address&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7600&quot;&gt;IETF RFC 7600&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.8/32&lt;/code&gt; 는 &quot;IPv4 더미 주소&quot;입니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7600&quot;&gt;IETF RFC 7600&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7c2020782007c65be6a3004609a412eab934e74d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.9/32&lt;/code&gt; is the &quot;Port Control Protocol Anycast&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7723&quot;&gt;IETF RFC 7723&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.9/32&lt;/code&gt; 는 &quot;포트 제어 프로토콜 애니 캐스트&quot;입니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7723&quot;&gt;IETF RFC 7723&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e91e1c7bc7ffdb5e7103fddafafdec5f547becff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the number is positive</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 숫자가 양수이면 1</target>
        </trans-unit>
        <trans-unit id="cda9c317ff4ee7c07b54750659d19b2c5bdbb582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;PathExprSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;PathExprSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;PathExprSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c4b8dde90d161683cb64e57970ca01c85f50fade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;SimplePathSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="37c8bc148d00e01e76a79b4049233c66448004ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;TypePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;TypePathSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;TypePathSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7426f75cbfd4f01354a2107d850d8302646f7c85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::ffff:a.b.c.d&lt;/code&gt; becomes &lt;code&gt;a.b.c.d&lt;/code&gt;. All addresses &lt;em&gt;not&lt;/em&gt; starting with &lt;code&gt;::ffff&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;::ffff:a.b.c.d&lt;/code&gt; 는 &lt;code&gt;a.b.c.d&lt;/code&gt; 됩니다. &lt;code&gt;::ffff&lt;/code&gt; 로 시작 &lt;em&gt;하지 않는&lt;/em&gt; 모든 주소 는 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="52d3346b7cb0480509b7b4a937dafaca05264da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8a1301840ae3c7bc54db174e5ca5a64c07aa0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7f4d91e1161fccf09895736e7f69d1d145c93bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3317371770d66af9b594e8415446c62cf9e5d2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;mdash; indicates an optional fragment with zero or one occurrences.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; &amp;mdash; 0 또는 1 회 발생하는 선택적 단편을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c8b5542f0315a1671873fc7475e2d5ed5b7abb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a665e581da78a74589a8d3f4c9945ce4f5040d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; cannot be overloaded.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 오버로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="12095140abf1098f29175c19125eb34ed21aee60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 포맷팅.</target>
        </trans-unit>
        <trans-unit id="0c78908808d0313e75c7d9961adda4cf1bdbe680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; is only used to declare that the &lt;a href=&quot;special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; trait may not be implemented for a type parameter or associated type. &lt;code&gt;?Sized&lt;/code&gt; may not be used as a bound for other types.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; &lt;a href=&quot;special-types-and-traits#sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; 특성이 유형 매개 변수 또는 연관된 유형에 대해 구현 될 수 없음 을 선언하는 데만 사용됩니다 . &lt;code&gt;?Sized&lt;/code&gt; 는 다른 유형의 경계로 사용될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a3344d8564474420070de8ca70623188cd4705ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b9b173c211b337e137665d048d935506be3c498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="204de2a077254b15e9b6591a38c031a2eb4d7a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Add&lt;/code&gt;able points</source>
          <target state="translated">&lt;code&gt;Add&lt;/code&gt; 가능한 포인트 추가</target>
        </trans-unit>
        <trans-unit id="02c1a8a8626c17cd761792798b715028e1b334fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddrParseError&lt;/code&gt; may be thrown because the provided string does not parse as the given type, often because it includes information only handled by a different address type.</source>
          <target state="translated">&lt;code&gt;AddrParseError&lt;/code&gt; 제공된 문자열이 지정된 유형으로 구문 분석되지 않기 때문에 AddrParseError 가 발생할 수 있습니다. 종종 다른 주소 유형으로 처리되는 정보 만 포함하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="23ebd8a64fc7b35ebf40c9c2b659534caeca6f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AllocRef&lt;/code&gt; is designed to be implemented on ZSTs, references, or smart pointers because having an allocator like &lt;code&gt;MyAlloc([u8; N])&lt;/code&gt; cannot be moved, without updating the pointers to the allocated memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef013c0b6cd5ff0e52e22216c885fe1c317cebec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alphabetic&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Alphabetic&lt;/code&gt; 은 &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;유니 코드 표준&lt;/a&gt; 의 4 장 (문자 속성)에 설명되어 있으며 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;유니 코드 문자 데이터베이스 &lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt; &lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt; 에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="474c77bcf98993f2d7df3861dff64b79cf23d925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; itself can be used to get a &lt;code&gt;TypeId&lt;/code&gt;, and has more features when used as a trait object. As &lt;code&gt;&amp;amp;Any&lt;/code&gt; (a borrowed trait object), it has the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;downcast_ref&lt;/code&gt; methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &lt;code&gt;&amp;amp;mut Any&lt;/code&gt;, there is also the &lt;code&gt;downcast_mut&lt;/code&gt; method, for getting a mutable reference to the inner value. &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; adds the &lt;code&gt;downcast&lt;/code&gt; method, which attempts to convert to a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; documentation for the full details.</source>
          <target state="translated">&lt;code&gt;Any&lt;/code&gt; 자체는 얻을하는 데 사용할 수있는 &lt;code&gt;TypeId&lt;/code&gt; , 그리고 특성 개체로 사용하는 경우 더 많은 기능을 가지고 있습니다. 마찬가지로 &lt;code&gt;&amp;amp;Any&lt;/code&gt; (빌린 특성 오브젝트), 그것은이 가지고 &lt;code&gt;is&lt;/code&gt; 및 &lt;code&gt;downcast_ref&lt;/code&gt; 방법, 포함 된 값이 소정의 형태의 경우에 테스트 한 종류로서 내부 값에 대한 참조를 얻을. &lt;code&gt;&amp;amp;mut Any&lt;/code&gt; 로서 , 내부 값에 대한 변경 가능한 참조를 얻기위한 &lt;code&gt;downcast_mut&lt;/code&gt; 메소드 도 있습니다 . &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; 는 &lt;code&gt;downcast&lt;/code&gt; 메소드를 추가하여 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 로 변환을 시도합니다 . 자세한 내용은 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="25a152f6c895c918cc68553da98b968b518b35c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; itself can be used to get a &lt;code&gt;TypeId&lt;/code&gt;, and has more features when used as a trait object. As &lt;code&gt;&amp;amp;dyn Any&lt;/code&gt; (a borrowed trait object), it has the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;downcast_ref&lt;/code&gt; methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &lt;code&gt;&amp;amp;mut dyn Any&lt;/code&gt;, there is also the &lt;code&gt;downcast_mut&lt;/code&gt; method, for getting a mutable reference to the inner value. &lt;code&gt;Box&amp;lt;dyn Any&amp;gt;&lt;/code&gt; adds the &lt;code&gt;downcast&lt;/code&gt; method, which attempts to convert to a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; documentation for the full details.</source>
          <target state="translated">&lt;code&gt;Any&lt;/code&gt; 자체는 얻을하는 데 사용할 수있는 &lt;code&gt;TypeId&lt;/code&gt; , 그리고 특성 개체로 사용하는 경우 더 많은 기능을 가지고 있습니다. 마찬가지로 &lt;code&gt;&amp;amp;dyn Any&lt;/code&gt; (빌린 특성 오브젝트), 그것은이 가지고 &lt;code&gt;is&lt;/code&gt; 및 &lt;code&gt;downcast_ref&lt;/code&gt; 방법, 시험에 포함 된 값을 소정의 형태의 경우와 같은 형태의 내부 값에 대한 참조를 얻을. 마찬가지로 &lt;code&gt;&amp;amp;mut dyn Any&lt;/code&gt; 도가 &lt;code&gt;downcast_mut&lt;/code&gt; 의 내부 값으로 변경 가능한 기준을 얻기위한 방법. &lt;code&gt;Box&amp;lt;dyn Any&amp;gt;&lt;/code&gt; 는 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 로 변환을 시도 하는 &lt;code&gt;downcast&lt;/code&gt; 메서드를 추가합니다 . 자세한 내용은 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="fa020cc1da06375d27e1c0a008a23f94c83e859d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; itself are associated functions, called using &lt;a href=&quot;../../book/ch19-03-advanced-traits#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name&quot;&gt;fully qualified syntax&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0347266b8ca23df94d1eea50c39e297394012091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 에 자동으로 역 참조 &lt;code&gt;T&lt;/code&gt; (비아 &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; 특성), 당신이 호출 할 수 있도록 &lt;code&gt;T&lt;/code&gt; 형의 값에의 방법 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; . 이름이 &lt;code&gt;T&lt;/code&gt; 의 메소드 와 충돌하는 것을 피하기 위해 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 자체 의 메소드는 함수와 같은 구문을 사용하여 호출되는 관련 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c58e5a32606ccc9227d7e5cee3f5ba4531679824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; will implement &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; as long as the &lt;code&gt;T&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;. Why can't you put a non-thread-safe type &lt;code&gt;T&lt;/code&gt; in an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; to make it thread-safe? This may be a bit counter-intuitive at first: after all, isn't the point of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; thread safety? The key is this: &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; makes it thread safe to have multiple ownership of the same data, but it doesn't add thread safety to its data. Consider &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;. &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; isn't &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;, and if &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; was always &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; would be as well. But then we'd have a problem: &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is not thread safe; it keeps track of the borrowing count using non-atomic operations.</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 구현하는 것입니다 &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 만큼 &lt;code&gt;T&lt;/code&gt; 의 구현은 &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; . 스레드로부터 안전하지 않은 타입 &lt;code&gt;T&lt;/code&gt; 를 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 에 넣어 스레드로부터 안전하지 않은 이유는 무엇 입니까? 처음에는 약간 반 직관적 일 수 있습니다. 결국 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 스레드 안전 의 요점이 아닌가? 핵심은 이것입니다. &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 는 동일한 데이터를 여러 번 소유 할 수 있도록 스레드 안전성을 보장하지만 데이터에 스레드 안전성을 추가하지는 않습니다. 고려 &lt;code&gt;Arc&amp;lt;&lt;/code&gt; &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 없는 &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 하는 경우, 그리고 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 항상 있었다&lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Arc&amp;lt;&lt;/code&gt; &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 뿐만 아니라 것이다. 그러나 우리는 문제가있을 것이다 :&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 는 스레드 안전하지 않다; 비원 자적 조작을 사용하여 차용 계수를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="1d9824634a1c4cdacccc5b95bb0c4f9d96d7acd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;'s implementations of traits like &lt;code&gt;Clone&lt;/code&gt; may also be called using fully qualified syntax. Some people prefer to use fully qualified syntax, while others prefer using method-call syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4d76c39e3c91d21d508efeb04ca509a86768a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsMut&lt;/code&gt; auto-dereferences if the inner type is a mutable reference (e.g.: &lt;code&gt;foo.as_mut()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;mut &amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;AsMut&lt;/code&gt; 내부 유형이 변경 가능한 참조 인 경우 AsMut 자동 역 참조 (예 : &lt;code&gt;foo&lt;/code&gt; 유형이 &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;mut &amp;amp;mut Foo&lt;/code&gt; 경우 &lt;code&gt;foo.as_mut()&lt;/code&gt; 가 동일하게 작동 함 )</target>
        </trans-unit>
        <trans-unit id="b32e1af96a8f528edf4fe1a43d0d4239e586669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; auto-dereferences if the inner type is a reference or a mutable reference (e.g.: &lt;code&gt;foo.as_ref()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;&amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;AsRef&lt;/code&gt; 내부 유형이 참조이거나 변경 가능한 참조 인 경우 AsRef가 자동 역 참조됩니다 (예 : &lt;code&gt;foo&lt;/code&gt; 에 &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;&amp;amp;mut Foo&lt;/code&gt; 유형이있는 경우 &lt;code&gt;foo.as_ref()&lt;/code&gt; 가 동일하게 작동 함 )</target>
        </trans-unit>
        <trans-unit id="8612364b449ccaad9467d7771a4667b001d65b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; has the same signature as &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt; is different in few aspects:</source>
          <target state="translated">&lt;code&gt;AsRef&lt;/code&gt; 는 &lt;a href=&quot;../borrow/trait.borrow&quot;&gt; &lt;code&gt;Borrow&lt;/code&gt; &lt;/a&gt; 와 동일한 서명을 갖지만 &lt;a href=&quot;../borrow/trait.borrow&quot;&gt; &lt;code&gt;Borrow&lt;/code&gt; &lt;/a&gt; 는 몇 가지 측면에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="71335601db38af9f595633f1fc7a0e382672c521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; has the same signature as &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Borrow&lt;/code&gt; is different in few aspects:</source>
          <target state="translated">&lt;code&gt;AsRef&lt;/code&gt; 는 &lt;a href=&quot;../borrow/trait.borrow&quot;&gt; &lt;code&gt;Borrow&lt;/code&gt; &lt;/a&gt; 와 동일한 서명을 갖지만 &lt;code&gt;Borrow&lt;/code&gt; 는 몇 가지 측면에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a88b6811da8d1dc2aede6016feb769d59697b85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;BTreeMap&lt;/code&gt; 은 &lt;a href=&quot;#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; 를&lt;/a&gt; 구현 하여 키와 해당 값을 가져오고 설정하고 업데이트하고 제거하는보다 복잡한 방법을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6d3a0e965bd3a3e531ff02538c6aa064edebc614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;../struct.btreemap#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;BTreeMap&lt;/code&gt; 은 또한 키와 그 값을 가져오고, 설정하고, 업데이트하고, 제거하는 더 복잡한 메소드를 허용 하는 &lt;a href=&quot;../struct.btreemap#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; 를&lt;/a&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="5cbe594491a593dcde82c1712c2524cd57bf88fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;struct.btreemap#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;BTreeMap&lt;/code&gt; 은 또한 키와 그 값을 가져오고, 설정하고, 업데이트하고, 제거하는 더 복잡한 메소드를 허용 하는 &lt;a href=&quot;struct.btreemap#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; 를&lt;/a&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a702e2dc9eec81c3300f51b86ef48a55faebb29e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&amp;lt;T&amp;gt;: Unsize&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt;&lt;/code&gt;, if the last field of &lt;code&gt;Foo&lt;/code&gt; has type &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Bar&amp;lt;T&amp;gt;: Unsize&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Foo&lt;/code&gt; 의 마지막 필드에 &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt; 유형이있는 경우 Unsize &amp;lt;Bar &amp;lt;U &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d850a262b1c205e08e5c184fd070770af4b4a1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Borrow&lt;/code&gt; also requires that &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Eq&lt;/code&gt; and &lt;code&gt;Ord&lt;/code&gt; for borrowed value are equivalent to those of the owned value. For this reason, if you want to borrow only a single field of a struct you can implement &lt;code&gt;AsRef&lt;/code&gt;, but not &lt;code&gt;Borrow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Borrow&lt;/code&gt; 은 또한 차입 가치에 대한 &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Eq&lt;/code&gt; 및 &lt;code&gt;Ord&lt;/code&gt; 가 소유 가치와 동일해야합니다. 따라서 구조체의 단일 필드 만 빌리려면 &lt;code&gt;AsRef&lt;/code&gt; 를 구현할 수 있지만 &lt;code&gt;Borrow&lt;/code&gt; 는 구현할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="32758f679236e5bd47c4070dc34a78871f6826ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bound&lt;/code&gt;s are range endpoints:</source>
          <target state="translated">&lt;code&gt;Bound&lt;/code&gt; 는 범위 끝점입니다.</target>
        </trans-unit>
        <trans-unit id="823e83c4cafd4a53a8d81698b9684ab42c618434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at compile time; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; allows only immutable borrows checked at compile time; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at runtime.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 는 컴파일 타임에 불변 또는 변경 가능한 차용을 허용합니다. &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 는 컴파일 타임에 점검 할 수있는 불변의 차용 만 허용합니다. &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 는 런타임시 불변 또는 변경 가능한 차용을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e1fad64290b5103584e9141501ddf617fcaa1a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for allocating values on the heap</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 힙에 값을 할당하기위한 Box &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b361da1c68fefbf2972f5ece3ba3bec6a2786de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, casually referred to as a 'box', provides the simplest form of heap allocation in Rust. Boxes provide ownership for this allocation, and drop their contents when they go out of scope.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 일반적으로 'box'라고하는 Box &amp;lt;T&amp;gt; 는 Rust에서 가장 간단한 형태의 힙 할당을 제공합니다. 상자는이 할당에 대한 소유권을 제공하고 범위를 벗어날 때 내용을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="3f542bc4d35eabefd9e8e45fafc0c38b7e4f4b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;, a 'boxed slice'</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; '박스형 슬라이스' Box &amp;lt;[T]&amp;gt;</target>
        </trans-unit>
        <trans-unit id="801881d69946531837ec71d77061b7afea90f88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; read calls to the same file or network socket. It does not help when reading very large amounts at once, or reading just one or a few times. It also provides no advantage when reading from a source that is already in memory, like a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; 수 있도록 프로그램의 속도를 향상시킬 수있는 &lt;em&gt;소규모&lt;/em&gt; 및 &lt;em&gt;반복&lt;/em&gt; 같은 파일 또는 네트워크 소켓에 대한 읽기 호출. 한 번에 매우 많은 양을 읽거나 한 번 또는 몇 번만 읽을 때는 도움이되지 않습니다. 또한 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; 과 같이 이미 메모리에있는 소스에서 읽을 때 이점을 제공하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7332fc1afe6dc4cd1b0346eac1443d4308c89637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufReader&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; read calls to the same file or network socket. It does not help when reading very large amounts at once, or reading just one or a few times. It also provides no advantage when reading from a source that is already in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufReader&lt;/code&gt; 가 만드는 프로그램의 속도를 향상시킬 수있는 &lt;em&gt;소규모&lt;/em&gt; 및 &lt;em&gt;반복&lt;/em&gt; 같은 파일 또는 네트워크 소켓에 대한 읽기 호출. 한 번에 매우 많은 양을 읽거나 한 번 또는 몇 번만 읽을 때는 도움이되지 않습니다. 또한 &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; 과 같이 이미 메모리에있는 소스에서 읽을 때는 이점이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2281fe635efea165716b7daf0dd5c5edc33b9e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; 수 있도록 프로그램의 속도를 향상시킬 수있는 &lt;em&gt;소규모&lt;/em&gt; 및 &lt;em&gt;반복&lt;/em&gt; 같은 파일 또는 네트워크 소켓에 쓰기 호출을. 한 번에 아주 많은 양을 쓰거나 한 번 또는 몇 번만 쓸 때는 도움이되지 않습니다. 또한 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 처럼 메모리에있는 대상에 쓸 때 이점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b3a8c3a6914902f9c750c203988441eb6dcff67f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a433311968328cd3a97c18edbbeb5f32e62cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufWriter&lt;/code&gt; 가 만드는 프로그램의 속도를 향상시킬 수있는 &lt;em&gt;소규모&lt;/em&gt; 및 &lt;em&gt;반복&lt;/em&gt; 같은 파일 또는 네트워크 소켓에 쓰기 호출을. 한 번에 많은 양을 쓰거나 한두 번만 쓰면 도움이되지 않습니다. 또한 &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; 과 같이 메모리에있는 대상에 쓸 때는 이점이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7e427f05884440b18ca96be2a61cf17fee3e0a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BuildHasherDefault&amp;lt;H&amp;gt;&lt;/code&gt; can be used when a type &lt;code&gt;H&lt;/code&gt; implements &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt;, and you need a corresponding &lt;a href=&quot;trait.buildhasher&quot;&gt;&lt;code&gt;BuildHasher&lt;/code&gt;&lt;/a&gt; instance, but none is defined.</source>
          <target state="translated">&lt;code&gt;BuildHasherDefault&amp;lt;H&amp;gt;&lt;/code&gt; 유형 &lt;code&gt;H&lt;/code&gt; 가 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; 를&lt;/a&gt; 구현할 때 BuildHasherDefault &amp;lt;H&amp;gt;를 사용할 수 있으며 해당 &lt;a href=&quot;trait.buildhasher&quot;&gt; &lt;code&gt;BuildHasher&lt;/code&gt; &lt;/a&gt; 인스턴스 가 필요 하지만 정의 된 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5a08c268371f28820805349860175373a33b1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; implements a &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; method through the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait. This method will give you a &lt;code&gt;*const c_char&lt;/code&gt; which you can feed directly to extern functions that expect a nul-terminated string, like C's &lt;code&gt;strdup()&lt;/code&gt;. Notice that &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; returns a read-only pointer; if the C code writes to it, that causes undefined behavior.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; 특성을 통해 &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; 메소드를 구현합니다 . 이 메소드는 &lt;code&gt;*const c_char&lt;/code&gt; 를 제공하여 C의 &lt;code&gt;strdup()&lt;/code&gt; 과 같이 널로 끝나는 문자열을 예상하는 extern 함수에 직접 피드 할 수 있습니다 . 것을 알 수 &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; 은&lt;/a&gt; 읽기 전용 포인터를 반환; C 코드가 작성되면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4bbfd3a01243f66d2c4567bb5233ec367bea6bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; implements a &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; method through the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait. This method will give you a &lt;code&gt;*const c_char&lt;/code&gt; which you can feed directly to extern functions that expect a nul-terminated string, like C's &lt;code&gt;strdup()&lt;/code&gt;. Notice that &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; returns a read-only pointer; if the C code writes to it, that causes undefined behavior.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; 특성을 통해 &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; 메서드를 구현합니다 . 이 메서드는 C의 &lt;code&gt;strdup()&lt;/code&gt; 과 같이 nul로 끝나는 문자열을 기대하는 extern 함수에 직접 공급할 수 있는 &lt;code&gt;*const c_char&lt;/code&gt; 를 제공합니다 . 것을 알 수 &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; 은&lt;/a&gt; 읽기 전용 포인터를 반환; C 코드가 여기에 쓰면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f3ea63d9370201ac1bfdd27cde7a7640430710b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is intended for working with traditional C-style strings (a sequence of non-nul bytes terminated by a single nul byte); the primary use case for these kinds of strings is interoperating with C-like code. Often you will need to transfer ownership to/from that external code. It is strongly recommended that you thoroughly read through the documentation of &lt;code&gt;CString&lt;/code&gt; before use, as improper ownership management of &lt;code&gt;CString&lt;/code&gt; instances can lead to invalid memory accesses, memory leaks, and other memory errors.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 전통적인 C 스타일 문자열 (단일 nul 바이트로 끝나는 non-nul 바이트의 시퀀스)을 다루기위한 것입니다. 이러한 종류의 문자열에 대한 주요 사용 사례는 C와 유사한 코드와 상호 운용됩니다. 종종 외부 코드와의 소유권을 이전해야합니다. &lt;code&gt;CString&lt;/code&gt; 인스턴스 의 소유권을 부적절하게 관리 하면 유효하지 않은 메모리 액세스, 메모리 누수 및 기타 메모리 오류가 발생할 수 있으므로 사용하기 전에 &lt;code&gt;CString&lt;/code&gt; 설명서를 자세히 읽어 보는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="552bee9f23e932372156da046bc02de61eabbc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is just a wrapper over a buffer of bytes with a nul terminator; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt;&lt;code&gt;CString::into_string&lt;/code&gt;&lt;/a&gt; performs UTF-8 validation on those bytes and may return this error.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 nul 종결자가있는 바이트 버퍼에 대한 래퍼 일뿐입니다. &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt; &lt;code&gt;CString::into_string&lt;/code&gt; &lt;/a&gt; 은 해당 바이트에 대해 UTF-8 유효성 검사를 수행하고이 오류를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81a550be35eb9aaa7c141746a99cd7257172fa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is just a wrapper over a buffer of bytes with a nul terminator; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt;&lt;code&gt;into_string&lt;/code&gt;&lt;/a&gt; performs UTF-8 validation on those bytes and may return this error.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 널 종결자가있는 바이트 버퍼의 랩퍼 일뿐입니다. &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt; &lt;code&gt;into_string&lt;/code&gt; &lt;/a&gt; 은 해당 바이트에서 UTF-8 유효성 검증을 수행 하며이 오류를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e063319f7cc23f7970916db3429671bad4b5a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is to &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;&amp;amp;CStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;&amp;amp;CStr&lt;/code&gt; &lt;/a&gt; 이고 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; . 각 쌍의 전자는 소유 한 문자열입니다. 후자는 빌린 참조입니다.</target>
        </trans-unit>
        <trans-unit id="163b10ccd495353b7e6bab0a58b6dd91a80d6390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is to &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;&amp;amp;CStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 은 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;&amp;amp;CStr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; : 각 쌍의 전자는 소유 된 문자열입니다. 후자는 빌린 참조입니다.</target>
        </trans-unit>
        <trans-unit id="4e4d891119f919e3d7f845218eb14020ba6e6b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeColor&lt;/code&gt; includes three &lt;code&gt;i32&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;ChangeColor&lt;/code&gt; 에는 세 개의 &lt;code&gt;i32&lt;/code&gt; 값이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="7593d5009a5b67a50d84bcc3fa1dd4f49da1fe78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdin&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;ChildStdin&lt;/code&gt; 은 로 변환됩니다 &lt;code&gt;Stdio&lt;/code&gt; 사용 &lt;code&gt;Stdio::from&lt;/code&gt; 후드.</target>
        </trans-unit>
        <trans-unit id="0a91e3d8a4e2fbfaaee5efbc9a26f632756103a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdout&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;ChildStdout&lt;/code&gt; 은 로 변환됩니다 &lt;code&gt;Stdio&lt;/code&gt; 사용 &lt;code&gt;Stdio::from&lt;/code&gt; 후드.</target>
        </trans-unit>
        <trans-unit id="65ec692ea58de6d0af4f012e217c5b68e9f11d4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; can only be implemented for a struct. Unsized types are already able to be coerced without an implementation of &lt;code&gt;CoerceUnsized&lt;/code&gt; whereas a struct containing an unsized type needs to know the unsized type field it's containing is able to be coerced. An &lt;a href=&quot;book/ch19-04-advanced-types#dynamically-sized-types-and-the-sized-trait&quot;&gt;unsized type&lt;/a&gt; is any type that the compiler doesn't know the length or alignment of at compile time. Any struct containing an unsized type is also unsized.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 구조체에 대해서만 구현할 수 있습니다. 크기가 조정되지 않은 유형은 &lt;code&gt;CoerceUnsized&lt;/code&gt; 구현없이 이미 강제 변환 될 수있는 반면, 크기가 조정되지 않은 유형을 포함하는 구조체는 포함 된 크기가 조정되지 않은 유형 필드가 강제 될 수 있음을 알아야합니다. &lt;a href=&quot;book/ch19-04-advanced-types#dynamically-sized-types-and-the-sized-trait&quot;&gt;크기를 지정하지 않은 타입은&lt;/a&gt; 컴파일러가 컴파일시에 길이 또는 정렬을 알고하지 않습니다 어떤 유형입니다. 크기가 지정되지 않은 유형을 포함하는 모든 구조체도 크기가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="838c24d6ca940a21454e98a65ab2bb3085568399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; is used to coerce one struct containing an unsized type into another struct containing a different unsized type. If the struct doesn't have any fields of unsized types then you don't need explicit coercion to get the types you want. To fix this you can either not try to implement &lt;code&gt;CoerceUnsized&lt;/code&gt; or you can add a field that is unsized to the struct.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 크기가 지정되지 않은 유형을 포함하는 하나의 구조체를 다른 크기가 지정되지 않은 유형을 포함하는 다른 구조체로 강제 변환 하는 데 사용됩니다. 구조체에 크기가 조정되지 않은 유형의 필드가 없으면 원하는 유형을 얻기 위해 명시적인 강제가 필요하지 않습니다. 이 문제를 해결하기 위해 &lt;code&gt;CoerceUnsized&lt;/code&gt; 를 구현하려고 시도하지 않거나 구조체에 크기가 조정되지 않은 필드를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e03c9790dd9391a6ff361ba0d424177759ea5092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; only allows for coercion from a structure with a single unsized type field to another struct with a single unsized type field. In fact Rust only allows for a struct to have one unsized type in a struct and that unsized type must be the last field in the struct. So having two unsized types in a single struct is not allowed by the compiler. To fix this use only one field containing an unsized type in the struct and then use multiple structs to manage each unsized type field you need.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 단일 비 크기 유형 필드를 가진 구조에서 단일 비 크기 유형 필드를 가진 다른 구조체로의 강제 변환 만 허용합니다. 실제로 Rust는 구조체가 구조체에서 하나의 크기가 지정되지 않은 유형을 가질 수 있도록 허용하며 크기가 지정되지 않은 유형은 구조체의 마지막 필드 여야합니다. 따라서 단일 구조체에 두 개의 크기가 지정되지 않은 유형을 갖는 것은 컴파일러에서 허용되지 않습니다. 이 문제를 해결하려면 구조체에 크기가 지정되지 않은 유형을 포함하는 하나의 필드 만 사용한 다음 여러 구조체를 사용하여 필요한 각 크기가 지정되지 않은 유형 필드를 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="3a0481acda665fcc12e680c0bbae352311a95e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on a struct which contains more than one field with an unsized type.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 크기가 조정되지 않은 유형의 필드가 두 개 이상 포함 된 구조체에서 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="df8696cc14809713f30b1ec59b171fd238852235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on a struct which does not contain a field with an unsized type.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 크기가 조정되지 않은 유형의 필드를 포함하지 않는 구조체에서 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="f1878960b5f81dbb9a79f23cc0e303d3325ba289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on something that isn't a struct.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; 는 구조체가 아닌 것에 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="1073d32daed568f97d9e146f4c215dce8bfaa24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Command&lt;/code&gt; can be reused to spawn multiple processes. The builder methods change the command without needing to immediately spawn the process.</source>
          <target state="translated">&lt;code&gt;Command&lt;/code&gt; 여러 프로세스를 생성하기 위해 명령 을 재사용 할 수 있습니다. 빌더 메소드는 프로세스를 즉시 생성하지 않고도 명령을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3471ba44d81479036dae8854baeb2e6f135d1969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Drop&lt;/code&gt; are exclusive</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; 및 &lt;code&gt;Drop&lt;/code&gt; 는 독점적입니다.</target>
        </trans-unit>
        <trans-unit id="144f016aa1878881692932e8bea1cb4dfc0ef5da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; can only be implemented for types which do not implement &lt;code&gt;Drop&lt;/code&gt;, and whose fields are all &lt;code&gt;Copy&lt;/code&gt;. For enums, this means all fields of all variants have to be &lt;code&gt;Copy&lt;/code&gt;. For unions, this means all variants have to be &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; 는 &lt;code&gt;Drop&lt;/code&gt; 을 구현하지 않고 필드가 모두 &lt;code&gt;Copy&lt;/code&gt; 인 유형에 대해서만 구현할 수 있습니다 . 열거 형의 경우 이는 모든 변형의 모든 필드가 &lt;code&gt;Copy&lt;/code&gt; 여야 함을 의미합니다 . 공용체의 경우 이는 모든 변형이 &lt;code&gt;Copy&lt;/code&gt; 여야 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="38d854c93bbc2863edbf30a316c49001d3cbeb23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; is implemented by the compiler for</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; 는 컴파일러에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0f2387ecc0d5a1721bf52c01c66152bf11894243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cow&lt;/code&gt; implements &lt;code&gt;Deref&lt;/code&gt;, which means that you can call non-mutating methods directly on the data it encloses. If mutation is desired, &lt;code&gt;to_mut&lt;/code&gt; will obtain a mutable reference to an owned value, cloning if necessary.</source>
          <target state="translated">&lt;code&gt;Cow&lt;/code&gt; 는 &lt;code&gt;Deref&lt;/code&gt; 를 구현 하는데 , 이는 그것이 둘러싸고있는 데이터에 대해 비 돌연변이 메소드를 직접 호출 할 수 있음을 의미합니다. 돌연변이가 필요한 경우, &lt;code&gt;to_mut&lt;/code&gt; 은 필요한 경우 복제하여 소유 한 값에 대한 가변 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="9f6cb943dcd2f8ea9edb4b01e202ed2f4a861da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cursor&lt;/code&gt;s are used with in-memory buffers, anything implementing &lt;a href=&quot;../convert/trait.asref&quot;&gt;&lt;code&gt;AsRef&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;[u8]&amp;gt;&lt;/code&gt;, to allow them to implement &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;, allowing these buffers to be used anywhere you might use a reader or writer that does actual I/O.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 는 메모리 내 버퍼, &lt;a href=&quot;../convert/trait.asref&quot;&gt; &lt;code&gt;AsRef&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;[u8]&amp;gt;&lt;/code&gt; 를 구현하는 모든 것과 함께 사용되어 &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; 를 구현할 수 있으므로 실제 I / O를 수행하는 판독기 또는 기록기를 사용할 수있는 모든 곳에서 이러한 버퍼를 사용할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="123af5ee4d9330c9928262d547fb982dae12cda0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cursor&lt;/code&gt;s are used with in-memory buffers, anything implementing &lt;code&gt;AsRef&amp;lt;[u8]&amp;gt;&lt;/code&gt;, to allow them to implement &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;, allowing these buffers to be used anywhere you might use a reader or writer that does actual I/O.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 는 &lt;code&gt;AsRef&amp;lt;[u8]&amp;gt;&lt;/code&gt; 구현하는 인 메모리 버퍼와 함께 사용되어 &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; 를 구현할 수 있으므로 실제 I / O를 수행하는 리더 또는 라이터를 사용할 수있는 모든 위치에서이 버퍼를 사용할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0837e495407effb23511ed5241a26d901f66c484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; implementations using either &lt;code&gt;derive&lt;/code&gt; or the debug builder API on &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; support pretty-printing using the alternate flag: &lt;code&gt;{:#?}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; &lt;code&gt;derive&lt;/code&gt; 또는 &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 의 디버그 빌더 API를 사용하는 디버그 구현 은 대체 플래그 &lt;code&gt;{:#?}&lt;/code&gt; 를 사용하여 예쁜 인쇄를 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="88324f872814980303a183b3ff52d2c678ca9107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; should format the output in a programmer-facing, debugging context.</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; 는 프로그래머가 직면 한 디버깅 컨텍스트에서 출력 형식을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="408f9113a84210ae9dd2c593e27c8c346bc00a03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; and &lt;code&gt;DerefMut&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; 와 &lt;code&gt;DerefMut&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39ba0409b21585407ae9408db7ad9e55bf9c64ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; behavior</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; 행동 거부</target>
        </trans-unit>
        <trans-unit id="db2797c1c1ada53b430a041163da972e3dd7ebf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display&lt;/code&gt; is similar to &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Display&lt;/code&gt; is for user-facing output, and so cannot be derived.</source>
          <target state="translated">&lt;code&gt;Display&lt;/code&gt; 는 &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 &lt;code&gt;Display&lt;/code&gt; 는 사용자 용 출력용이므로 파생 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="120c39278dac71cbc0cf99e54e14eb4e1185f781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Div&lt;/code&gt;idable rational numbers</source>
          <target state="translated">&lt;code&gt;Div&lt;/code&gt; idable 유리수</target>
        </trans-unit>
        <trans-unit id="050685b0fb6b704f72bc9087b9321bdf96535f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; guarantee</source>
          <target state="translated">&lt;code&gt;Drop&lt;/code&gt; 보증</target>
        </trans-unit>
        <trans-unit id="7b0a242f7c87959c4363b4a8874c792d5134ffb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; implementation</source>
          <target state="translated">&lt;code&gt;Drop&lt;/code&gt; 구현</target>
        </trans-unit>
        <trans-unit id="67a0cf09aa338a7b6c5af601a694c39b935c1d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt;s implement many common traits, including &lt;a href=&quot;../ops/trait.add&quot;&gt;&lt;code&gt;Add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.sub&quot;&gt;&lt;code&gt;Sub&lt;/code&gt;&lt;/a&gt;, and other &lt;a href=&quot;../ops/index&quot;&gt;&lt;code&gt;ops&lt;/code&gt;&lt;/a&gt; traits.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 은 &lt;a href=&quot;../ops/trait.add&quot;&gt; &lt;code&gt;Add&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ops/trait.sub&quot;&gt; &lt;code&gt;Sub&lt;/code&gt; &lt;/a&gt; 및 기타 &lt;a href=&quot;../ops/index&quot;&gt; &lt;code&gt;ops&lt;/code&gt; &lt;/a&gt; 특성을 포함하여 많은 공통 특성을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="fafc43558cff0c7288d8a28e292e138b30c243af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperexp&quot;&gt;&lt;code&gt;UpperExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperexp&quot;&gt; &lt;code&gt;UpperExp&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2333f9d85f9754f529640e6cdf9d8f65254b0c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; 형식.</target>
        </trans-unit>
        <trans-unit id="49c7f75b5d8afe4dfb27f412ebb712a4696dcfcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Equal&lt;/code&gt; becomes &lt;code&gt;Equal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Equal&lt;/code&gt; 은 &lt;code&gt;Equal&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9717679d631a302dbb9bb4e57fe62cbe2f951c7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Err(ParseFloatError)&lt;/code&gt; if the string did not represent a valid number. Otherwise, &lt;code&gt;Ok(n)&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the floating-point number represented by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Err(ParseFloatError)&lt;/code&gt; 문자열이 유효한 숫자를 나타내지 않으면 Err (ParseFloatError) . 그렇지 않으면 &lt;code&gt;Ok(n)&lt;/code&gt; 여기서 &lt;code&gt;n&lt;/code&gt; 은 &lt;code&gt;src&lt;/code&gt; 로 표시되는 부동 소수점 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="307cd046af1477ab94fd9bb2c35318cd3465af83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; is a trait representing the basic expectations for error values, i.e., values of type &lt;code&gt;E&lt;/code&gt; in &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;. Errors must describe themselves through the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../fmt/trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; traits, and may provide cause chain information:</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 오류 값, 즉 입력 값에 대한 기본적인 기대를 나타내는 특성이다 &lt;code&gt;E&lt;/code&gt; 의 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; . 오류는 &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../fmt/trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; 특성을 통해 설명해야 하며 원인 체인 정보를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="012ad78246c1fa110e17ab8f856ccc0b016e8f11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;contravariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; IS &lt;em&gt;contravariant&lt;/em&gt; 이상 &lt;code&gt;T&lt;/code&gt; 경우 &lt;code&gt;T&lt;/code&gt; 는 의 하위 유형 인 &lt;code&gt;U&lt;/code&gt; 는 것을 의미한다 &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; 의 하위 유형 인 &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83ab5ae87cb46b770f2fa820713b250d85127832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;covariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; (subtyping &quot;passes through&quot;)</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; IS &lt;em&gt;공변&lt;/em&gt; 위에 &lt;code&gt;T&lt;/code&gt; 는 경우 &lt;code&gt;T&lt;/code&gt; 는 의 서브 타입 인 &lt;code&gt;U&lt;/code&gt; 는 것을 의미 &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; 의 하위 유형 &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; (하위 유형은 &quot;통과&quot;)</target>
        </trans-unit>
        <trans-unit id="315e125a4dab44bf13aa67b5d693feeda29652db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;invariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; otherwise (no subtyping relation can be derived)</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; IS &lt;em&gt;불변&lt;/em&gt; 위에 &lt;code&gt;T&lt;/code&gt; , 그렇지 않으면 (NO 하위 유형의 관계가 유도 될 수있다)</target>
        </trans-unit>
        <trans-unit id="c519a59507ce8a848d5a9aec95f40f843cd4cc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for a char in string</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; 는 문자열의 문자에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1fa85583181bde0bf3cf500699554c0e1c383e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 로 변환됩니다 &lt;code&gt;Stdio&lt;/code&gt; 사용 &lt;code&gt;Stdio::from&lt;/code&gt; 후드.</target>
        </trans-unit>
        <trans-unit id="e343104a7dd587d988d170bbd65468574b149f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; borrows values from the environment immutably.</source>
          <target state="translated">&lt;code&gt;Fn&lt;/code&gt; 은 환경으로부터 불변의 가치를 빌린다.</target>
        </trans-unit>
        <trans-unit id="ab03fe793e9caead41d64f21baf551347ae2bf93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; is implemented automatically by closures which only take immutable references to captured variables or don't capture anything at all, as well as (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (with some caveats, see their documentation for more details). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;&amp;amp;F&lt;/code&gt; implements &lt;code&gt;Fn&lt;/code&gt;, too.</source>
          <target state="translated">&lt;code&gt;Fn&lt;/code&gt; 은 캡처 된 변수에 대한 불변의 참조 만 취하거나 전혀 캡처하지 않는 클로저에 의해 자동으로 구현됩니다. (안전한) &lt;a href=&quot;../primitive.fn&quot;&gt;함수 포인터&lt;/a&gt; (일부 경고와 함께 자세한 내용은 설명서 참조). 또한, 모든 유형의 &lt;code&gt;F&lt;/code&gt; 그 구현 &lt;code&gt;Fn&lt;/code&gt; , &lt;code&gt;&amp;amp;F&lt;/code&gt; 구현 &lt;code&gt;Fn&lt;/code&gt; , 너무.</target>
        </trans-unit>
        <trans-unit id="17b9ef6427d46f1dc1986b48a964061a03c5df5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; can change the environment because it mutably borrows values.</source>
          <target state="translated">&lt;code&gt;FnMut&lt;/code&gt; 는 값을 변경하여 빌릴 수 있으므로 환경을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e16ca4384cdcbb62b89f104fad6fb04c2fa786f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; is implemented automatically by closures which take mutable references to captured variables, as well as all types that implement &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnMut&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;FnMut&lt;/code&gt;, &lt;code&gt;&amp;amp;mut F&lt;/code&gt; implements &lt;code&gt;FnMut&lt;/code&gt;, too.</source>
          <target state="translated">&lt;code&gt;FnMut&lt;/code&gt; 은 캡처 된 변수 가변 언급을 폐쇄뿐만 아니라 구현하는 모든 종류의에 의해 자동으로 구현되는 &lt;a href=&quot;trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; , 예를 들어, (안전) &lt;a href=&quot;../primitive.fn&quot;&gt;함수 포인터&lt;/a&gt; (이후 &lt;code&gt;FnMut&lt;/code&gt; 이 의 supertrait이다 &lt;a href=&quot;trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; ). 또한, 모든 유형의 &lt;code&gt;F&lt;/code&gt; 그 구현 &lt;code&gt;FnMut&lt;/code&gt; , &lt;code&gt;&amp;amp;mut F&lt;/code&gt; 를 구현 &lt;code&gt;FnMut&lt;/code&gt; , 너무.</target>
        </trans-unit>
        <trans-unit id="c000f4207e0d7915b5876998e9f4fb9b80cc61ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; consumes the variables it captures from its enclosing scope, known as the closure&amp;rsquo;s &lt;em&gt;environment&lt;/em&gt;. To consume the captured variables, the closure must take ownership of these variables and move them into the closure when it is defined. The &lt;code&gt;Once&lt;/code&gt; part of the name represents the fact that the closure can&amp;rsquo;t take ownership of the same variables more than once, so it can be called only once.</source>
          <target state="translated">&lt;code&gt;FnOnce&lt;/code&gt; 는 클로저 &lt;em&gt;환경&lt;/em&gt; 으로 알려진 엔 클로징 범위에서 캡처 한 변수를 사용 &lt;em&gt;합니다&lt;/em&gt; . 캡처 된 변수를 사용하려면 클로저가이 변수의 소유권을 가져 와서 정의 될 때 클로저로 이동해야합니다. 이름 의 &lt;code&gt;Once&lt;/code&gt; 부분은 클로저가 동일한 변수의 소유권을 두 번 이상 소유 할 수 없으므로 한 번만 호출 할 수 있다는 사실을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cd9ddc6fdbd0ced3f264442be06b3b6029a50311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; is implemented automatically by closure that might consume captured variables, as well as all types that implement &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnOnce&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;FnOnce&lt;/code&gt; 는 캡처 된 변수를 소비 할 수있는 클로저와 &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 을 구현하는 모든 유형 (예 : (안전) &lt;a href=&quot;../primitive.fn&quot;&gt;함수 포인터&lt;/a&gt; ( &lt;code&gt;FnOnce&lt;/code&gt; 가 &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 의 상위 특성이므로 ))에 의해 자동으로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="06c78016c2f9097a65385b837081c030222f2db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; is implemented automatically by closures that might consume captured variables, as well as all types that implement &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnOnce&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;FnOnce&lt;/code&gt; 는 캡처 된 변수를 사용할 수있는 클로저뿐만 아니라 &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 을 구현하는 모든 유형 (예 : (안전한) &lt;a href=&quot;../primitive.fn&quot;&gt;함수 포인터&lt;/a&gt; )에 의해 자동으로 구현됩니다 ( &lt;code&gt;FnOnce&lt;/code&gt; 는 &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; 의 상위 특성이므로 ).</target>
        </trans-unit>
        <trans-unit id="2dc3723b12142bb271d60846686451751ed275c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;Foo&amp;lt;..., U, ...&amp;gt;&amp;gt;&lt;/code&gt; if:</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; 는 &lt;code&gt;Unsize&amp;lt;Foo&amp;lt;..., U, ...&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89a48c2bbd2b9e10fe4404a5df11694f8370b513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; to &lt;code&gt;Foo&amp;lt;..., U, ...&amp;gt;&lt;/code&gt;, when:</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Foo&amp;lt;..., U, ...&amp;gt;&lt;/code&gt; 때 :</target>
        </trans-unit>
        <trans-unit id="8923a3fc2992a13f6053d0f427a95dc645f28026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&lt;/code&gt; is a struct.</source>
          <target state="translated">&lt;code&gt;Foo&lt;/code&gt; 구조체입니다.</target>
        </trans-unit>
        <trans-unit id="33267139b253d547e3f89cef15fd011011eee07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;From&amp;lt;T&amp;gt; for U&lt;/code&gt; 의미 &lt;a href=&quot;trait.into&quot;&gt; &lt;code&gt;Into&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddbebe3d839f7eb2b3864ae9f444a47906242efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is reflexive, which means that &lt;code&gt;From&amp;lt;T&amp;gt; for T&lt;/code&gt; is implemented</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; 은 반사적이므로 &lt;code&gt;From&amp;lt;T&amp;gt; for T&lt;/code&gt; 가 구현 됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="383319f7f95c134a88460b2ead3c30903bc8d0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromIterator&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_iter&quot;&gt;&lt;code&gt;from_iter&lt;/code&gt;&lt;/a&gt; is rarely called explicitly, and is instead used through &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt;'s documentation for more examples.</source>
          <target state="translated">&lt;code&gt;FromIterator&lt;/code&gt; 의 &lt;a href=&quot;#tymethod.from_iter&quot;&gt; &lt;code&gt;from_iter&lt;/code&gt; &lt;/a&gt; 는 명시 적으로 호출되는 경우가 거의 없으며 대신 &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;trait.iterator#method.collect&quot;&gt; &lt;code&gt;collect&lt;/code&gt; &lt;/a&gt; 메소드를 통해 사용됩니다 . 더 많은 예는 &lt;a href=&quot;trait.iterator#method.collect&quot;&gt; &lt;code&gt;collect&lt;/code&gt; &lt;/a&gt; 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75846f53aff08074ef6c72fc49fa1c4fe8797481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt; does not have a lifetime parameter, and so you can only parse types that do not contain a lifetime parameter themselves. In other words, you can parse an &lt;code&gt;i32&lt;/code&gt; with &lt;code&gt;FromStr&lt;/code&gt;, but not a &lt;code&gt;&amp;amp;i32&lt;/code&gt;. You can parse a struct that contains an &lt;code&gt;i32&lt;/code&gt;, but not one that contains an &lt;code&gt;&amp;amp;i32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FromStr&lt;/code&gt; 에는 수명 매개 변수가 없으므로 수명 매개 변수 자체를 포함하지 않는 유형 만 구문 분석 할 수 있습니다. 즉, &lt;code&gt;&amp;amp;i32&lt;/code&gt; &lt;code&gt;FromStr&lt;/code&gt; 을 제외 하고 FromStr 로 &lt;code&gt;i32&lt;/code&gt; 를 구문 분석 할 수 있습니다 . &lt;code&gt;i32&lt;/code&gt; 가 포함 된 구조체는 구문 분석 할 수 있지만 &lt;code&gt;&amp;amp;i32&lt;/code&gt; 가 포함 된 구조체는 구문 분석 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66aa0c9e89ef02c67092cfddaaec72bd30d8b28d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; method is often used implicitly, through &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;'s documentation for examples.</source>
          <target state="translated">&lt;code&gt;FromStr&lt;/code&gt; 의 &lt;a href=&quot;#tymethod.from_str&quot;&gt; &lt;code&gt;from_str&lt;/code&gt; &lt;/a&gt; 메소드는 종종 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 메소드를 통해 암시 적으로 사용됩니다 . 예제는 &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e127c143f849da86b8f030508294a284ad3a073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt;'s &lt;a href=&quot;trait.fromstr#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; method is often used implicitly, through &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;'s documentation for examples.</source>
          <target state="translated">&lt;code&gt;FromStr&lt;/code&gt; 의 &lt;a href=&quot;trait.fromstr#tymethod.from_str&quot;&gt; &lt;code&gt;from_str&lt;/code&gt; &lt;/a&gt; 메소드는 종종 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 메소드를 통해 암시 적으로 사용됩니다 . 예제는 &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05c26176925aefb6818763fda5280ee8ce487f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Greater&lt;/code&gt; becomes &lt;code&gt;Less&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Greater&lt;/code&gt; 하게 &lt;code&gt;Less&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="655598f674f605df53f4d9a6bfe46ada76406c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 와 &lt;code&gt;Eq&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe79dedf221cf2858e17af245fc79b091ba756e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HashMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; 은 &lt;a href=&quot;#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; 를&lt;/a&gt; 구현 하여 키와 해당 값을 가져오고 설정하고 업데이트하고 제거하는보다 복잡한 방법을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="5b19dbc4b9c8d751ad4499657d279e35039800d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hasher&lt;/code&gt; provides a fairly basic interface for retrieving the generated hash (with &lt;a href=&quot;#tymethod.finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt;), and writing integers as well as slices of bytes into an instance (with &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.write_u8&quot;&gt;&lt;code&gt;write_u8&lt;/code&gt;&lt;/a&gt; etc.). Most of the time, &lt;code&gt;Hasher&lt;/code&gt; instances are used in conjunction with the &lt;a href=&quot;trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">&lt;code&gt;Hasher&lt;/code&gt; 는 생성 된 해시를 검색하고 ( &lt;a href=&quot;#tymethod.finish&quot;&gt; &lt;code&gt;finish&lt;/code&gt; &lt;/a&gt; 와 함께 ) 정수와 바이트 조각을 인스턴스에 &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; ( write 및 &lt;a href=&quot;#method.write_u8&quot;&gt; &lt;code&gt;write_u8&lt;/code&gt; &lt;/a&gt; 등) 상당히 기본적인 인터페이스를 제공합니다 . 대부분의 경우 &lt;code&gt;Hasher&lt;/code&gt; 인스턴스는 &lt;a href=&quot;trait.hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 특성 과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="41a65d63299c400aa49770060d19f27c7ffc2fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hasher&lt;/code&gt; provides a fairly basic interface for retrieving the generated hash (with &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt;), and writing integers as well as slices of bytes into an instance (with &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.hasher#method.write_u8&quot;&gt;&lt;code&gt;write_u8&lt;/code&gt;&lt;/a&gt; etc.). Most of the time, &lt;code&gt;Hasher&lt;/code&gt; instances are used in conjunction with the &lt;a href=&quot;trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">&lt;code&gt;Hasher&lt;/code&gt; 는 생성 된 해시 ( &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt; &lt;code&gt;finish&lt;/code&gt; 사용&lt;/a&gt; ) 를 검색하고 정수와 바이트 조각을 인스턴스 ( &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.hasher#method.write_u8&quot;&gt; &lt;code&gt;write_u8&lt;/code&gt; &lt;/a&gt; 등)에 쓰기 위한 매우 기본적인 인터페이스를 제공합니다 . 대부분의 경우 &lt;code&gt;Hasher&lt;/code&gt; 인스턴스는 &lt;a href=&quot;trait.hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 특성 과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="72fb536154c8819c191606675325456145440dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntoIterator&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;Option&lt;/code&gt; are always the standard library items here, not whatever those names resolve to in the current scope. The variable names &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;iter&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; are for exposition only, they do not actually have names the user can type.</source>
          <target state="translated">&lt;code&gt;IntoIterator&lt;/code&gt; , &lt;code&gt;Iterator&lt;/code&gt; 및 &lt;code&gt;Option&lt;/code&gt; 은 항상 현재 범위에서 해당 이름으로 해석되는 것이 아니라 항상 표준 라이브러리 항목입니다. &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;iter&lt;/code&gt; 및 &lt;code&gt;val&lt;/code&gt; 변수 이름 은 박람회 용 이며 실제로 사용자가 입력 할 수있는 이름이 없습니다.</target>
        </trans-unit>
        <trans-unit id="bac80e960ac3526c0d1f15e58fd495dcb9ae71bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntoIterator&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt;, and &lt;code&gt;Option&lt;/code&gt; are always the standard library items here, not whatever those names resolve to in the current scope. The variable names &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;iter&lt;/code&gt;, and &lt;code&gt;val&lt;/code&gt; are for exposition only, they do not actually have names the user can type.</source>
          <target state="translated">&lt;code&gt;IntoIterator&lt;/code&gt; , &lt;code&gt;Iterator&lt;/code&gt; 및 &lt;code&gt;Option&lt;/code&gt; 은 항상 여기에서 표준 라이브러리 항목이며 현재 범위에서 해당 이름이 확인되는 항목이 아닙니다. &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;iter&lt;/code&gt; 및 &lt;code&gt;val&lt;/code&gt; 변수 이름 은 설명 전용이며 실제로 사용자가 입력 할 수있는 이름이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a588c668ba26d92c7b732ba0ff06810bcb85062d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IpAddrKind&lt;/code&gt; is now a custom data type that we can use elsewhere in our code.</source>
          <target state="translated">&lt;code&gt;IpAddrKind&lt;/code&gt; 는 이제 코드의 다른 곳에서 사용할 수있는 사용자 지정 데이터 형식입니다.</target>
        </trans-unit>
        <trans-unit id="ae7f415c5a109455a86645cb6ea78d4911189621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv4Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. The four octets are in decimal notation, divided by &lt;code&gt;.&lt;/code&gt; (this is called &quot;dot-decimal notation&quot;).</source>
          <target state="translated">&lt;code&gt;Ipv4Addr&lt;/code&gt; 은 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 구현을 제공합니다 . 네 개의 옥텟은 십진수 표기법으로 나누어집니다 &lt;code&gt;.&lt;/code&gt; 이것을 &quot;점 십진법 표기법&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="25d3a7db8b0872ae22dd1527ee4728bd11774d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv6Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. There are many ways to represent an IPv6 address in text, but in general, each segments is written in hexadecimal notation, and segments are separated by &lt;code&gt;:&lt;/code&gt;. For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;IETF RFC 5952&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Ipv6Addr&lt;/code&gt; 은 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 구현을 제공합니다 . 이 텍스트의 IPv6 주소를 표현하는 방법에는 여러 가지가 있지만 일반적으로, 각 세그먼트는 16 진수로 작성하고, 세그먼트로 구분됩니다 &lt;code&gt;:&lt;/code&gt; . 자세한 정보는 &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;IETF RFC 5952를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e02eeb04c8aeb9136109b80aaa26b5de83ba7b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Item&lt;/code&gt; in trait &lt;code&gt;Iterator&lt;/code&gt; cannot be specified multiple times for struct &lt;code&gt;Foo&lt;/code&gt;. To fix this, create a new trait that is a combination of the desired traits and specify the associated type with the new trait.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 특성 &lt;code&gt;Iterator&lt;/code&gt; 의항목 은 struct &lt;code&gt;Foo&lt;/code&gt; 에 대해 여러 번 지정할 수 없습니다 . 이 문제를 해결하려면 원하는 특성의 조합 인 새 특성을 만들고 새 특성과 관련된 유형을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5dc39b9ce26cf3dd51514d0ac255e7e6d7f67fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Layout&lt;/code&gt; queries and calculations in general must be correct. Callers of this trait are allowed to rely on the contracts defined on each method, and implementors must ensure such contracts remain true.</source>
          <target state="translated">&lt;code&gt;Layout&lt;/code&gt; 쿼리 및 계산은 일반적으로 정확해야합니다. 이 특성의 호출자는 각 방법에 정의 된 계약에 의존 할 수 있으며, 구현자는 그러한 계약이 성립되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="83555e7cbe36ad60ad279ac0629e9090346e6073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Less&lt;/code&gt; becomes &lt;code&gt;Greater&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Less&lt;/code&gt; 수록 &lt;code&gt;Greater&lt;/code&gt; 커 집니다 .</target>
        </trans-unit>
        <trans-unit id="a00bd8fe18ddd9b2eda94fb5e27c80380f09132d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lowercase&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Lowercase&lt;/code&gt; 는 &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;유니 코드 표준&lt;/a&gt; 의 4 장 (문자 속성)에 설명되어 있으며 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;유니 코드 문자 데이터베이스 &lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt; &lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt; 에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a0178329d137f2adfc18f37f0a346d39d244bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBE&lt;/code&gt;: macro-by-example, a macro defined by &lt;code&gt;macro_rules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBE&lt;/code&gt; : 매크로별로 예를 들어, 매크로에 의해 정의 &lt;code&gt;macro_rules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a12cc17b8174f7d8693a6ae17cb026ece822fccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; is subject to the same layout optimizations as &lt;code&gt;T&lt;/code&gt;. As a consequence, it has &lt;em&gt;no effect&lt;/em&gt; on the assumptions that the compiler makes about all values being initialized at their type. In particular, initializing a &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; with &lt;a href=&quot;fn.zeroed&quot;&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;&lt;/a&gt; is undefined behavior. If you need to handle uninitialized data, use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; 과 동일한 레이아웃을 최적화 될 &lt;code&gt;T&lt;/code&gt; . 결과적으로 컴파일러는 모든 값이 해당 유형으로 초기화된다는 가정에 &lt;em&gt;영향&lt;/em&gt; 을 &lt;em&gt;미치지 않습니다&lt;/em&gt; . 특히 &lt;a href=&quot;fn.zeroed&quot;&gt; &lt;code&gt;mem::zeroed&lt;/code&gt; &lt;/a&gt; 하여 &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 을 초기화하는 것은 정의되지 않은 동작입니다. 초기화되지 않은 데이터를 처리해야하는 경우 &lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9dfe58bc34e31dd5fa77bea574eb0915c849f9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; is subject to the same layout optimizations as &lt;code&gt;T&lt;/code&gt;. As a consequence, it has &lt;em&gt;no effect&lt;/em&gt; on the assumptions that the compiler makes about its contents. For example, initializing a &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; with &lt;a href=&quot;fn.zeroed&quot;&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;&lt;/a&gt; is undefined behavior. If you need to handle uninitialized data, use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; 과 동일한 레이아웃을 최적화 될 &lt;code&gt;T&lt;/code&gt; . 결과적으로 컴파일러가 내용에 대해 만드는 가정 &lt;em&gt;에는 영향&lt;/em&gt; 을 &lt;em&gt;미치지 않습니다&lt;/em&gt; . 예를 들어, &lt;a href=&quot;fn.zeroed&quot;&gt; &lt;code&gt;mem::zeroed&lt;/code&gt; &lt;/a&gt; 로 &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 를 초기화하는 것은 정의되지 않은 동작입니다. 초기화되지 않은 데이터를 처리해야하는 경우에는 &lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 대신 사용 하세요 .</target>
        </trans-unit>
        <trans-unit id="23dd11b2d9c31e419098f46e2b46860299084499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&lt;/code&gt; and drop order.</source>
          <target state="translated">&lt;code&gt;ManuallyDrop&lt;/code&gt; 드롭 및 드롭 주문.</target>
        </trans-unit>
        <trans-unit id="a20bd9642814d5945a1377f0eb788bd7d5874828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&lt;/code&gt; robustly prevents double-free because we disable &lt;code&gt;v&lt;/code&gt;'s destructor before doing anything else. &lt;code&gt;mem::forget()&lt;/code&gt; doesn't allow this because it consumes its argument, forcing us to call it only after extracting anything we need from &lt;code&gt;v&lt;/code&gt;. Even if a panic were introduced between construction of &lt;code&gt;ManuallyDrop&lt;/code&gt; and building the string (which cannot happen in the code as shown), it would result in a leak and not a double free. In other words, &lt;code&gt;ManuallyDrop&lt;/code&gt; errs on the side of leaking instead of erring on the side of (double-)dropping.</source>
          <target state="translated">&lt;code&gt;ManuallyDrop&lt;/code&gt; 은 우리가 비활성화 때문에 견고 더블 프리 방지 &lt;code&gt;v&lt;/code&gt; 의 소멸자 전에 다른 아무것도. &lt;code&gt;mem::forget()&lt;/code&gt; 은 인수를 소비하므로 &lt;code&gt;v&lt;/code&gt; 에서 필요한 것을 추출한 후에 만 ​​호출하도록 강제하기 때문에이를 허용하지 않습니다 . 패닉이 건설 사이에 도입되었다하더라도 &lt;code&gt;ManuallyDrop&lt;/code&gt; 과 (와 같이 코드에서 일어날 수) 문자열을 구축, 그것은 누수가 발생하고 이중 무료하지 않을 것입니다. 즉, &lt;code&gt;ManuallyDrop&lt;/code&gt; 가 누출 아니라 (이중) 적하 측에 실수를 범 측에 잘못한다.</target>
        </trans-unit>
        <trans-unit id="ac7be5255721703bf2a7217d3b0692596360f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; can be used to initialize a large array element-by-element:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용하여 요소별로 큰 배열을 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31daa1c8e82b9004085b19cefd5259e1e13e6df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is guaranteed to have the same size, alignment, and ABI as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 와 같은 크기, 정렬, 및 ABI가 보장 &lt;code&gt;T&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="0367dbf80d1202f89cd18ec11ce47396c22ecf8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; serves to enable unsafe code to deal with uninitialized data. It is a signal to the compiler indicating that the data here might &lt;em&gt;not&lt;/em&gt; be initialized:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 는 안전하지 않은 코드가 초기화되지 않은 데이터를 처리 할 수 ​​있도록합니다. 여기에 데이터 가 초기화 &lt;em&gt;되지 않았&lt;/em&gt; 음을 나타내는 신호가 컴파일러에 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b33ad928c15c4da9b0715ea0b6157806e30e123a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Move&lt;/code&gt; includes an anonymous struct inside it.</source>
          <target state="translated">&lt;code&gt;Move&lt;/code&gt; 에는 익명의 구조체가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aa57fa54bfe82ae00367e667533cb5dc06e6bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mul&lt;/code&gt;tipliable rational numbers</source>
          <target state="translated">&lt;code&gt;Mul&lt;/code&gt; tipliable 유리수</target>
        </trans-unit>
        <trans-unit id="7d7959a136ea4b63039b7e2f3e911b1544014ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAN&lt;/code&gt; if the number is &lt;code&gt;NAN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NAN&lt;/code&gt; 숫자가 NAN 인 경우 &lt;code&gt;NAN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7db30cc3f5c77b82d9c32d074801cc91e5a3c601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NT&lt;/code&gt;: non-terminal, the various &quot;meta-variables&quot; or repetition matchers that can appear in a matcher, specified in MBE syntax with a leading &lt;code&gt;$&lt;/code&gt; character.</source>
          <target state="translated">&lt;code&gt;NT&lt;/code&gt; : 비 터미널, 매칭에 나타날 수있는 다양한 &quot;메타 변수&quot;또는 반복 매처 . 선행 &lt;code&gt;$&lt;/code&gt; 문자 로 MBE 구문에 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0656d4205f56a744d390c28618c3f2de6418a1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 은 &lt;code&gt;0&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8af4fad001f4ddd0b0dc1936058a444336074665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Send&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="translated">&lt;code&gt;NonNull&lt;/code&gt; 포인터는 참조하는 데이터의 별칭이 지정 될 수 있으므로 &lt;code&gt;Send&lt;/code&gt; 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="783f4012f263c6d38d1e6e5902a75bd66d94c784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Sync&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="translated">&lt;code&gt;NonNull&lt;/code&gt; 포인터는 참조하는 데이터의 별칭이 지정 될 수 있으므로 &lt;code&gt;Sync&lt;/code&gt; 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="11aafbb7d832b9c7331aeec723b4939e40d973e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 경우 &lt;code&gt;predicate&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23eeefc5377ad42d7348cfcb4d65bd70faa5f4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; will be mapped to &lt;code&gt;Ok(None)&lt;/code&gt;. &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt; will be mapped to &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 매핑되지 않습니다 &lt;code&gt;Ok(None)&lt;/code&gt; . &lt;code&gt;Some(Ok(_))&lt;/code&gt; 및 &lt;code&gt;Some(Err(_))&lt;/code&gt; 은 &lt;code&gt;Ok(Some(_))&lt;/code&gt; 및 &lt;code&gt;Err(_)&lt;/code&gt; 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="915fe41279fa519186a0735c633ac7fe9d481748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: the end of the input was reached unexpectedly. &lt;code&gt;self.valid_up_to()&lt;/code&gt; is 1 to 3 bytes from the end of the input. If a byte stream (such as a file or a network socket) is being decoded incrementally, this could be a valid &lt;code&gt;char&lt;/code&gt; whose UTF-8 byte sequence is spanning multiple chunks.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; : 입력 끝에 예기치 않게 도달했습니다. &lt;code&gt;self.valid_up_to()&lt;/code&gt; 는 입력 끝에서 1-3 바이트입니다. 바이트 스트림 (예 : 파일 또는 네트워크 소켓)을 증분 디코딩 하는 경우 UTF-8 바이트 시퀀스가 ​​여러 청크에 걸쳐 있는 유효한 &lt;code&gt;char&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10b8d9eda27eb8d4bd5f3d04ac9401f4b91750c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ok(None)&lt;/code&gt; will be mapped to &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt; will be mapped to &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ok(None)&lt;/code&gt; 에 매핑되지 않습니다 &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;Ok(Some(_))&lt;/code&gt; 및 &lt;code&gt;Err(_)&lt;/code&gt; 은 &lt;code&gt;Some(Ok(_))&lt;/code&gt; 및 &lt;code&gt;Some(Err(_))&lt;/code&gt; 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="969b36ec72e09ea63b446c8743ff1d8e122c4c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ord&lt;/code&gt; requires that the type also be &lt;a href=&quot;trait.partialord&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt; (which requires &lt;a href=&quot;trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Ord&lt;/code&gt; 는 유형도 &lt;a href=&quot;trait.partialord&quot;&gt; &lt;code&gt;PartialOrd&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.eq&quot;&gt; &lt;code&gt;Eq&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt; 필요) 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="b50d3586e6c9243f2516d60ce5cb260352ecca01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ord&lt;/code&gt; requires that the type also be &lt;code&gt;PartialOrd&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt; (which requires &lt;code&gt;PartialEq&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Ord&lt;/code&gt; 에서는 형식도 &lt;code&gt;PartialOrd&lt;/code&gt; 및 &lt;code&gt;Eq&lt;/code&gt; ( &lt;code&gt;PartialEq&lt;/code&gt; 가 필요) 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="156171edab2619ca1f591634d596d0390d1448a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; and &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; bridge this gap by simultaneously representing Rust and platform-native string values, and in particular allowing a Rust string to be converted into an &quot;OS&quot; string with no cost if possible. A consequence of this is that &lt;code&gt;OsString&lt;/code&gt; instances are &lt;em&gt;not&lt;/em&gt;&lt;code&gt;NUL&lt;/code&gt; terminated; in order to pass to e.g., Unix system call, you should create a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; 과 &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; 은 Rust와 플랫폼 고유 문자열 값을 동시에 표시하고 특히 Rust 문자열을 가능한 경우 비용없이 &quot;OS&quot;문자열로 변환 할 수 있도록하여 이러한 격차를 해소합니다. 그 결과 &lt;code&gt;OsString&lt;/code&gt; 인스턴스는 &lt;code&gt;NUL&lt;/code&gt; 로 종료 &lt;em&gt;되지 않습니다&lt;/em&gt; . 예를 들어 Unix 시스템 호출에 전달하려면 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; 을&lt;/a&gt; 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="dab6ecc524aeedeb6977fa8e601878b3f968350c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; is to &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; 은 &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt; 이고 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; . 각 쌍의 전자는 소유 한 문자열입니다. 후자는 빌린 참조입니다.</target>
        </trans-unit>
        <trans-unit id="59bb60f6b5010a24dfca76c86f52bfa51f74ef89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; is to &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; 은 &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; : 각 쌍의 전자는 소유 된 문자열입니다. 후자는 빌린 참조입니다.</target>
        </trans-unit>
        <trans-unit id="71d78c5d1c02d65262ec97b4d65b29498f3d873b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsStringExt&lt;/code&gt; and &lt;code&gt;OsStrExt&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OsStringExt&lt;/code&gt; 및 &lt;code&gt;OsStrExt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0a4a583cad72c98dc82bd9bdcd03b3c1ffc4439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PanicInfo&lt;/code&gt; structure is passed to a panic hook set by the &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;PanicInfo&lt;/code&gt; 구조는 &lt;a href=&quot;fn.set_hook&quot;&gt; &lt;code&gt;set_hook&lt;/code&gt; &lt;/a&gt; 함수에 의해 설정된 패닉 후크로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="cec45b75d6860995a7203e50ae3a962a9ef7808d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialEq&lt;/code&gt; only requires the &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;&lt;code&gt;eq&lt;/code&gt;&lt;/a&gt; method to be implemented; &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt; is defined in terms of it by default. Any manual implementation of &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt;&lt;em&gt;must&lt;/em&gt; respect the rule that &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;&lt;code&gt;eq&lt;/code&gt;&lt;/a&gt; is a strict inverse of &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt;; that is, &lt;code&gt;!(a == b)&lt;/code&gt; if and only if &lt;code&gt;a != b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PartialEq&lt;/code&gt; 는 &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt; &lt;code&gt;eq&lt;/code&gt; &lt;/a&gt; 메소드 만 구현하면됩니다. &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt; &lt;code&gt;ne&lt;/code&gt; &lt;/a&gt; 는 기본적으로 정의됩니다. &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt; &lt;code&gt;ne&lt;/code&gt; 의&lt;/a&gt; 수동 구현은 &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt; &lt;code&gt;eq&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt; &lt;code&gt;ne&lt;/code&gt; &lt;/a&gt; 의 엄격한 역수 라는 규칙을 준수 &lt;em&gt;해야합니다&lt;/em&gt; . 즉, &lt;code&gt;!(a == b)&lt;/code&gt; &lt;code&gt;a != b&lt;/code&gt; 경우에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="de7b303db05a509f2209139e4934153105923236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; only requires implementation of the &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;&lt;code&gt;partial_cmp&lt;/code&gt;&lt;/a&gt; method, with the others generated from default implementations.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; 는 &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt; &lt;code&gt;partial_cmp&lt;/code&gt; &lt;/a&gt; 메소드 만 구현 하면되고 나머지는 기본 구현에서 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5355736e95ea9f89f34c24a16f0da9ff491cc24c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; only requires implementation of the &lt;code&gt;partial_cmp&lt;/code&gt; method, with the others generated from default implementations.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; 는 &lt;code&gt;partial_cmp&lt;/code&gt; 메소드 만 구현 하면되고 나머지는 기본 구현에서 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5a9209cb7c8805d392d1c3005b4077f80a83bde7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; requires your type to be &lt;a href=&quot;trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; 에서는 유형이 &lt;a href=&quot;trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; 여야&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7c163a31b293bc0f90dbc0d3d9ad213bf0fa8b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; requires your type to be &lt;code&gt;PartialEq&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; 가 될 당신의 유형을 필요로 &lt;code&gt;PartialEq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0000dadfbd8d07c0837fb6341b4995596c3f66f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Quit&lt;/code&gt; has no data associated with it at all.</source>
          <target state="translated">&lt;code&gt;Quit&lt;/code&gt; 에는 관련 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="90625a74a49a58f6c7d9228e88bafebc0042f7a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RUST_BACKTRACE&lt;/code&gt; - if &lt;code&gt;RUST_LIB_BACKTRACE&lt;/code&gt; is not set, then this variable is consulted with the same rules of &lt;code&gt;RUST_LIB_BACKTRACE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e29480d889cb110bf837e334b1275f7e322243a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RUST_LIB_BACKTRACE&lt;/code&gt; - if this is set to &lt;code&gt;0&lt;/code&gt; then &lt;code&gt;Backtrace::capture&lt;/code&gt; will never capture a backtrace. Any other value this is set to will enable &lt;code&gt;Backtrace::capture&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe41136840c4e5771f4fe8a6b1a7f6ec68cc9a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomState&lt;/code&gt; is the default state for &lt;a href=&quot;../struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">&lt;code&gt;RandomState&lt;/code&gt; 는 &lt;a href=&quot;../struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 유형 의 기본 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="477368f614c73c4be43d992ee9d7a086ded6132f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomState&lt;/code&gt; is the default state for &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">&lt;code&gt;RandomState&lt;/code&gt; 는 &lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 유형 의 기본 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="300e865358f1f64dc664450490b9d983ca1d9f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeBounds&lt;/code&gt; is implemented by Rust's built-in range types, produced by range syntax like &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;a..&lt;/code&gt;, &lt;code&gt;..b&lt;/code&gt;, &lt;code&gt;..=c&lt;/code&gt;, &lt;code&gt;d..e&lt;/code&gt;, or &lt;code&gt;f..=g&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RangeBounds&lt;/code&gt; 는 Rust의 내장 범위 유형에 의해 구현되며 &lt;code&gt;..&lt;/code&gt; , &lt;code&gt;a..&lt;/code&gt; , &lt;code&gt;..b&lt;/code&gt; , &lt;code&gt;..=c&lt;/code&gt; , &lt;code&gt;d..e&lt;/code&gt; 또는 &lt;code&gt;f..=g&lt;/code&gt; 와 같은 범위 구문으로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1faca3408d5c131744d9b932a5c73012f3d7de47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeFull&lt;/code&gt; is primarily used as a &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;slicing index&lt;/a&gt;, its shorthand is &lt;code&gt;..&lt;/code&gt;. It cannot serve as an &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; because it doesn't have a starting point.</source>
          <target state="translated">&lt;code&gt;RangeFull&lt;/code&gt; 은 주로 &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;슬라이싱 인덱스&lt;/a&gt; 로 사용되며 그 약칭은 &lt;code&gt;..&lt;/code&gt; 입니다. 시작점이 없기 때문에 &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 로 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c11e3c6794acc2af61d2caf398c736fabd1f7214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeFull&lt;/code&gt; is primarily used as a &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;slicing index&lt;/a&gt;, its shorthand is &lt;code&gt;..&lt;/code&gt;. It cannot serve as an &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; because it doesn't have a starting point.</source>
          <target state="translated">&lt;code&gt;RangeFull&lt;/code&gt; 은 주로 &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;슬라이싱 인덱스&lt;/a&gt; 로 사용되며 약칭은 &lt;code&gt;..&lt;/code&gt; 입니다. 시작점이 없기 때문에 &lt;a href=&quot;../iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 역할을 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0b8c02b304aa344d5fc4c8d8f6d7c4139519d6bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; itself are associated functions, called using [fully qualified syntax]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a42f09004e96cf6202905726dbe7dcd6ccc932c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 에 자동으로 역 참조 &lt;code&gt;T&lt;/code&gt; (비아 &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; 특성), 당신이 호출 할 수 있도록 &lt;code&gt;T&lt;/code&gt; 형의 값에의 방법 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; . 이름이 &lt;code&gt;T&lt;/code&gt; 의 메소드 와 충돌하지 않도록 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 자체 의 메소드는 함수와 유사한 구문을 사용하여 호출되는 연관된 함수입니다.</target>
        </trans-unit>
        <trans-unit id="35f7a75054dc4c36a2bc2db0dffdcdd788f598ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; enables multiple owners of the same data; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; have single owners.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 는 동일한 데이터의 여러 소유자를 가능하게합니다. &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 및 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 에는 단일 소유자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5cb4f4949725149d48da279ac9533244b6ac6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;'s implementations of traits like &lt;code&gt;Clone&lt;/code&gt; may also be called using fully qualified syntax. Some people prefer to use fully qualified syntax, while others prefer using method-call syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831558b739e532085ab6201badbe8889d3c9e71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, a reference counting type that enables multiple ownership</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 다중 소유권을 가능하게하는 참조 카운팅 유형 인 Rc &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="978d0ef1c9d7d27ecdcc7b7ab39455a46f40b737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefMut&amp;lt;T&amp;gt;&lt;/code&gt;, accessed through &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, a type that enforces the borrowing rules at runtime instead of compile time</source>
          <target state="translated">&lt;code&gt;Ref&amp;lt;T&amp;gt;&lt;/code&gt; 와 &lt;code&gt;RefMut&amp;lt;T&amp;gt;&lt;/code&gt; 를 통해 액세스 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , 컴파일 시간 대신 런타임에 차입 규칙을 적용하는 유형</target>
        </trans-unit>
        <trans-unit id="b2052eaf25ad74826ae3983e8206bd7160340800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; uses Rust's lifetimes to implement 'dynamic borrowing', a process whereby one can claim temporary, exclusive, mutable access to the inner value. Borrows for &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;s are tracked 'at runtime', unlike Rust's native reference types which are entirely tracked statically, at compile time. Because &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; borrows are dynamic it is possible to attempt to borrow a value that is already mutably borrowed; when this happens it results in thread panic.</source>
          <target state="translated">&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 는 Rust의 수명을 사용하여 내부 가치에 대한 일시적이고 배타적이며 변경 가능한 액세스를 주장 할 수있는 '동적 차용'을 구현합니다. 대한 차용 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 의 완전히 컴파일시에 정적 추적 녹의 기본 참조 유형과는 달리, '실행시'추적됩니다. &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 차용은 동적 이기 때문에 이미 변경 가능하게 차용 한 값을 차용하려고 시도 할 수 있습니다. 이 경우 스레드 패닉이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50836f42761b93ecdbdac8100e6aca1a0f43b1f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Result&lt;/code&gt; is a type that represents either success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) or failure (&lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; 는 성공 ( &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; ) 또는 실패 ( &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; ) 를 나타내는 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="cbbdee5b44d902aa97ed736428f72afba13f6fb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sea&lt;/code&gt; is not a module, therefore it is invalid to use it in a visibility path. To fix this error we need to ensure &lt;code&gt;Sea&lt;/code&gt; is a module.</source>
          <target state="translated">&lt;code&gt;Sea&lt;/code&gt; 는 모듈이 아니므로 가시성 경로에서 사용하는 것은 유효하지 않습니다. 이 오류를 수정하려면 &lt;code&gt;Sea&lt;/code&gt; 가 모듈 인지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="73d8e6a1f4953bc20e73c3f8710d8ad67773fb16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; - a type alias for the type implementing a trait</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; -특성을 구현하는 유형의 유형 별명</target>
        </trans-unit>
        <trans-unit id="e7e5183606a553c8d51db12554a0f937635e2c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; - a type alias for the type we are defining or implementing</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; - 정의하거나 구현하는 유형의 유형 별칭</target>
        </trans-unit>
        <trans-unit id="f7ad95f6e9cfdf323163cfd3b048d2504d3f7047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; &lt;code&gt;::&lt;/code&gt; 를 앞에 두지 않고 Self 를 첫 번째 세그먼트로만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6d693ccf52aaf5695067d6c3c0bed48de9af9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt;, with a capital &quot;S&quot;, is used to refer to the implementing type within &lt;a href=&quot;items/traits&quot;&gt;traits&lt;/a&gt; and &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; 대문자 &quot;S&quot;를 갖는 Self 는 &lt;a href=&quot;items/traits&quot;&gt;특성&lt;/a&gt; 과 &lt;a href=&quot;items/implementations&quot;&gt;구현&lt;/a&gt; 내에서 구현 유형을 나타내는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a098ae52f47bddf77e085753871e1316217a9a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sized&lt;/code&gt; or &lt;a href=&quot;../trait-bounds#sized&quot;&gt;&lt;code&gt;?Sized&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Sized&lt;/code&gt; 또는 &lt;a href=&quot;../trait-bounds#sized&quot;&gt; &lt;code&gt;?Sized&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38b74787cd7ab814efe04b896e2616124e83aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(len)&lt;/code&gt;: an unexpected byte was encountered. The length provided is that of the invalid byte sequence that starts at the index given by &lt;code&gt;valid_up_to()&lt;/code&gt;. Decoding should resume after that sequence (after inserting a &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;&lt;/a&gt;) in case of lossy decoding.</source>
          <target state="translated">&lt;code&gt;Some(len)&lt;/code&gt; : 예기치 않은 바이트가 발생했습니다. 제공된 길이는 &lt;code&gt;valid_up_to()&lt;/code&gt; 의해 제공된 색인에서 시작하는 유효하지 않은 바이트 시퀀스의 길이 입니다. 디코딩이 손실되는 경우, 시퀀스 이후 ( &lt;a href=&quot;../char/constant.replacement_character&quot;&gt; &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; &lt;/a&gt; 삽입 후) 디코딩이 재개되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="04f4ec3935609d0a1340a6fe98f067507f55e64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(t)&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; (where &lt;code&gt;t&lt;/code&gt; is the wrapped value), and</source>
          <target state="translated">&lt;code&gt;Some(t)&lt;/code&gt; &lt;code&gt;predicate&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 ( &lt;code&gt;t&lt;/code&gt; 는 랩핑 된 값) 일부 (t)</target>
        </trans-unit>
        <trans-unit id="2c324f343e7048cc1fe190e81ae4db7e76fba532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Step::backward_unchecked(a, n)&lt;/code&gt; is equivalent to &lt;code&gt;Step::backward(a, n)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Step::backward_unchecked(a, n)&lt;/code&gt; 는 &lt;code&gt;Step::backward(a, n)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ed89f2d84dae7a5a507029d87f1142303ef565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Step::forward_unchecked(a, n)&lt;/code&gt; is equivalent to &lt;code&gt;Step::forward(a, n)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Step::forward_unchecked(a, n)&lt;/code&gt; 는 &lt;code&gt;Step::forward(a, n)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb371bcb42db156cc20c9b2539c5bd112f770f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s are always valid UTF-8. This has a few implications, the first of which is that if you need a non-UTF-8 string, consider &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. It is similar, but without the UTF-8 constraint. The second implication is that you cannot index into a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 항상 유효한 UTF-8입니다. 여기에는 몇 가지 의미가 있습니다. 첫 번째는 비 UTF-8 문자열이 필요한 경우 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; 을&lt;/a&gt; 고려 하십시오 . UTF-8 제약 조건은 없지만 비슷합니다. 두 번째 의미는 &lt;code&gt;String&lt;/code&gt; 으로 색인을 생성 할 수 없다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="90ca11bc923ad94c1f81ca12133091fdf7fb3e9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s have an internal buffer to hold their data. The capacity is the length of that buffer, and can be queried with the &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; method. This method creates an empty &lt;code&gt;String&lt;/code&gt;, but one with an initial buffer that can hold &lt;code&gt;capacity&lt;/code&gt; bytes. This is useful when you may be appending a bunch of data to the &lt;code&gt;String&lt;/code&gt;, reducing the number of reallocations it needs to do.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에는 데이터를 보유하기위한 내부 버퍼가 있습니다. 용량은 해당 버퍼의 길이이며 &lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; 방법 으로 쿼리 할 수 ​​있습니다 . 이 메소드는 비어있는 &lt;code&gt;String&lt;/code&gt; 을 작성 하지만 &lt;code&gt;capacity&lt;/code&gt; 바이트를 보유 할 수있는 초기 버퍼를 가진 하나를 작성합니다 . 이는 많은 데이터를 &lt;code&gt;String&lt;/code&gt; 에 추가하여 필요한 재 할당 횟수를 줄일 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="c5406795f4f42a8cf094777b32bf249729909b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s have an internal buffer to hold their data. The capacity is the length of that buffer, and can be queried with the &lt;a href=&quot;struct.string#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; method. This method creates an empty &lt;code&gt;String&lt;/code&gt;, but one with an initial buffer that can hold &lt;code&gt;capacity&lt;/code&gt; bytes. This is useful when you may be appending a bunch of data to the &lt;code&gt;String&lt;/code&gt;, reducing the number of reallocations it needs to do.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에는 데이터를 보관할 내부 버퍼가 있습니다. 용량은 해당 버퍼의 길이이며 &lt;a href=&quot;struct.string#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; 방법 으로 쿼리 할 수 ​​있습니다 . 이 메서드는 빈 &lt;code&gt;String&lt;/code&gt; 을 생성 하지만 &lt;code&gt;capacity&lt;/code&gt; 바이트를 보유 할 수있는 초기 버퍼가있는 하나를 생성합니다 . 이것은 &lt;code&gt;String&lt;/code&gt; 에 많은 데이터를 추가 하여 수행해야하는 재 할당 횟수를 줄일 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="4d31a0f49bc10c2c8b7f59ea2435dec22c6da899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s implement &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Target=str&amp;gt;&lt;/code&gt;, and so inherit all of &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s methods. In addition, this means that you can pass a &lt;code&gt;String&lt;/code&gt; to a function which takes a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; by using an ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;Target=str&amp;gt;&lt;/code&gt; 을 구현 하므로 모든 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 메소드를 상속합니다 . 또한 이는 앰퍼샌드 ( &lt;code&gt;&amp;amp;&lt;/code&gt; )를 사용하여 &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; 을 사용하는 함수에 &lt;code&gt;String&lt;/code&gt; 을 전달할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="616f59747afb4096178feec1378bc12c2c0ee16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sub&lt;/code&gt;tractable points</source>
          <target state="translated">&lt;code&gt;Sub&lt;/code&gt; 다루기 쉬운 점</target>
        </trans-unit>
        <trans-unit id="12a9778b6f44e77e521ded615fc1882560f44a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T: 'a&lt;/code&gt; means that all lifetime parameters of &lt;code&gt;T&lt;/code&gt; outlive &lt;code&gt;'a&lt;/code&gt;. For example if &lt;code&gt;'a&lt;/code&gt; is an unconstrained lifetime parameter then &lt;code&gt;i32: 'static&lt;/code&gt; and &lt;code&gt;&amp;amp;'static str: 'a&lt;/code&gt; are satisfied but &lt;code&gt;Vec&amp;lt;&amp;amp;'a ()&amp;gt;: 'static&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;T: 'a&lt;/code&gt; 모든 평생 매개 변수 것을 의미 &lt;code&gt;T&lt;/code&gt; 가 오래 살 &lt;code&gt;'a&lt;/code&gt; . 예를 들어 &lt;code&gt;'a&lt;/code&gt; 가 제한되지 않은 수명 매개 변수 인 경우 &lt;code&gt;i32: 'static&lt;/code&gt; 및 &lt;code&gt;&amp;amp;'static str: 'a&lt;/code&gt; 는 만족하지만 &lt;code&gt;Vec&amp;lt;&amp;amp;'a ()&amp;gt;: 'static&lt;/code&gt; 은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="459321b2a9a0d46f2b93aa237d46d7fa1575a399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="3df70334b96e838c208442527493940829a7f1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (immutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;U&lt;/code&gt; 유형의 모든 (불변의) 메소드를 암시 적으로 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="a8d4eb013434bfef79667e4806b748592289401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (mutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;U&lt;/code&gt; 유형의 모든 (변경 가능) 메소드를 암시 적으로 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="8d8a68b56cb5c034ba3c86ed6d0f7016d3a97d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;dyn Trait&amp;gt;&lt;/code&gt; when &lt;code&gt;T: Trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; &lt;code&gt;T: Trait&lt;/code&gt; 경우 T 는 &lt;code&gt;Unsize&amp;lt;dyn Trait&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7121c00e015ba8b560db77196ee3ca1b24ea1e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not part of the type of any other fields</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 다른 필드 유형의 일부가 아닙니다</target>
        </trans-unit>
        <trans-unit id="1f5ebb2139955b181a602337432d3269eb411e99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; needs to have the same size and alignment as what &lt;code&gt;ptr&lt;/code&gt; was allocated with. (&lt;code&gt;T&lt;/code&gt; having a less strict alignment is not sufficient, the alignment really needs to be equal to satisfy the &lt;a href=&quot;../alloc/trait.globalalloc#tymethod.dealloc&quot;&gt;&lt;code&gt;dealloc&lt;/code&gt;&lt;/a&gt; requirement that memory must be allocated and deallocated with the same layout.)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;ptr&lt;/code&gt; 이 할당 된 것과 동일한 크기와 정렬을 가져야합니다 . ( &lt;code&gt;T&lt;/code&gt; 는 덜 엄격한 정렬을 갖는 충분하지, 배향 실제로 만족 동일 할 필요가 &lt;a href=&quot;../alloc/trait.globalalloc#tymethod.dealloc&quot;&gt; &lt;code&gt;dealloc&lt;/code&gt; &lt;/a&gt; 메모리 할당과 동일한 레이아웃을 해제해야 함을 요구한다.)</target>
        </trans-unit>
        <trans-unit id="fd841fdf1c9576488040e963cfff46216f7f88ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a &lt;a href=&quot;subtyping&quot;&gt;subtype&lt;/a&gt; of &lt;code&gt;U&lt;/code&gt; (&lt;em&gt;reflexive case&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;U&lt;/code&gt; 의 &lt;a href=&quot;subtyping&quot;&gt;하위 유형&lt;/a&gt; 인 경우 &lt;code&gt;T&lt;/code&gt; 에서 &lt;code&gt;U&lt;/code&gt; ( &lt;em&gt;재귀 사례&lt;/em&gt; )&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61515edc51de8ef5e91841306c65e35babceaccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a subtype of &lt;code&gt;U&lt;/code&gt; (&lt;em&gt;reflexive case&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;U&lt;/code&gt; 의 하위 유형 인 경우 &lt;code&gt;T&lt;/code&gt; 에서 &lt;code&gt;U&lt;/code&gt; 로 ( &lt;em&gt;반사 경우&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f4b3e0994f3c0ba54fa6a0a7c157de1659a4226e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt;, when &lt;code&gt;U&lt;/code&gt; is a trait object type and either &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;U&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; is a trait object for a subtrait of &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 에 &lt;code&gt;U&lt;/code&gt; , &lt;code&gt;U&lt;/code&gt; 는 형질의 개체 형식이며, 하나 &lt;code&gt;T&lt;/code&gt; 의 구현 &lt;code&gt;U&lt;/code&gt; 또는 &lt;code&gt;T&lt;/code&gt; 는 의 subtrait의 특성 개체입니다 &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb0a402546639d1f725eff610791b967c3560cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;dyn U&lt;/code&gt;, when &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;U + Sized&lt;/code&gt;, and &lt;code&gt;U&lt;/code&gt; is &lt;a href=&quot;items/traits#object-safety&quot;&gt;object safe&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;dyn U&lt;/code&gt; , &lt;code&gt;T&lt;/code&gt; 가 &lt;code&gt;U + Sized&lt;/code&gt; 구현 하고 &lt;code&gt;U&lt;/code&gt; 가 &lt;a href=&quot;items/traits#object-safety&quot;&gt;객체에 안전 할 때&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="298803983d7a40457357f8582fc151ce8dd27899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;'s inherent methods (methods implemented directly on &lt;code&gt;T&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 의 고유 메소드 ( &lt;code&gt;T&lt;/code&gt; 에 직접 구현 된 메소드 )</target>
        </trans-unit>
        <trans-unit id="b132400d295073db220415b7d295816af763bfd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T_1&lt;/code&gt; to &lt;code&gt;T_3&lt;/code&gt; where &lt;code&gt;T_1&lt;/code&gt; coerces to &lt;code&gt;T_2&lt;/code&gt; and &lt;code&gt;T_2&lt;/code&gt; coerces to &lt;code&gt;T_3&lt;/code&gt; (&lt;em&gt;transitive case&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;T_1&lt;/code&gt; 에서 &lt;code&gt;T_3&lt;/code&gt; 로 , 여기서 &lt;code&gt;T_1&lt;/code&gt; 은 &lt;code&gt;T_2&lt;/code&gt; 로 , &lt;code&gt;T_2&lt;/code&gt; 는 &lt;code&gt;T_3&lt;/code&gt; 으로 강제 ( &lt;em&gt;전이 사례&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="dda06ebb8f19034175258803196529658f366d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Trait&lt;/code&gt; is a &lt;a href=&quot;../glossary#local-trait&quot;&gt;local trait&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Trait&lt;/code&gt; 은 &lt;a href=&quot;../glossary#local-trait&quot;&gt;지역 특성입니다&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="717ecb3d8358231a31f184dade54b32195c64495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TraitObject&lt;/code&gt; is guaranteed to match layouts, but it is not the type of trait objects (e.g., the fields are not directly accessible on a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;) nor does it control that layout (changing the definition will not change the layout of a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;). It is only designed to be used by unsafe code that needs to manipulate the low-level details.</source>
          <target state="translated">&lt;code&gt;TraitObject&lt;/code&gt; 는 레이아웃과 일치하도록 보장되지만 특성 객체의 유형이 아닙니다 (예 : 필드는 &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; 에서 직접 액세스 할 수 없음 )하거나 해당 레이아웃을 제어하지 않습니다 (정의를 변경해도 &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; 의 레이아웃은 변경되지 않습니다 ). 하위 수준의 세부 정보를 조작해야하는 안전하지 않은 코드에서만 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="1dde1ee20034361adb4cfe29aeec1b5ab72354b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TraitObject&lt;/code&gt; is guaranteed to match layouts, but it is not the type of trait objects (e.g., the fields are not directly accessible on a &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt;) nor does it control that layout (changing the definition will not change the layout of a &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt;). It is only designed to be used by unsafe code that needs to manipulate the low-level details.</source>
          <target state="translated">&lt;code&gt;TraitObject&lt;/code&gt; 는 레이아웃과 일치하도록 보장 되지만 트레이 트 개체의 유형이 아닙니다 (예 : 필드는 &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt; 에서 직접 액세스 할 수 없음 ) 또는 해당 레이아웃을 제어하지 않습니다 (정의를 변경해도 &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt; 의 레이아웃이 변경되지 않음 ). . 낮은 수준의 세부 정보를 조작해야하는 안전하지 않은 코드에서만 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="2614973a3f96d521b7753283f54483e26f0f27d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TryFrom&amp;lt;T&amp;gt; for U&lt;/code&gt; &lt;a href=&quot;trait.tryinto&quot;&gt; &lt;code&gt;TryInto&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt; 의미합니다.</target>
        </trans-unit>
        <trans-unit id="262c3578f5bc85ed6705e91099903717cf6ab0ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt;&lt;/code&gt; can be implemented as follows:</source>
          <target state="translated">&lt;code&gt;TryFrom&amp;lt;T&amp;gt;&lt;/code&gt; 는 다음과 같이 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f500c3e10d9f1c53160e520c60fcf93d9f0d8dc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0009&lt;/code&gt; (horizontal tab, &lt;code&gt;'\t'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+0009&lt;/code&gt; (가로 탭, &lt;code&gt;'\t'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0eee371b065164c50fc78edf6a91510999663db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000A&lt;/code&gt; (line feed, &lt;code&gt;'\n'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+000A&lt;/code&gt; (줄 바꿈, &lt;code&gt;'\n'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e254e5f09bc8e41e5fff183f48730d4887bab90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000B&lt;/code&gt; (vertical tab)</source>
          <target state="translated">&lt;code&gt;U+000B&lt;/code&gt; (수직 탭)</target>
        </trans-unit>
        <trans-unit id="60b67d8e4ab5ad057e66f3ef97b1b20995c8e588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000C&lt;/code&gt; (form feed)</source>
          <target state="translated">&lt;code&gt;U+000C&lt;/code&gt; (양식 피드)</target>
        </trans-unit>
        <trans-unit id="13303bc8e2167053bc8b070c03cbab754f8efc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000D&lt;/code&gt; (carriage return, &lt;code&gt;'\r'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+000D&lt;/code&gt; (캐리지 리턴, &lt;code&gt;'\r'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ffedd7f81712ec4095c8437506cc5c5d894b252b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0020&lt;/code&gt; (space, &lt;code&gt;' '&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+0020&lt;/code&gt; (공백, &lt;code&gt;' '&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9e6e484290e68200d792b8e5c7559c03888b646b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0085&lt;/code&gt; (next line)</source>
          <target state="translated">&lt;code&gt;U+0085&lt;/code&gt; (다음 줄)</target>
        </trans-unit>
        <trans-unit id="b098899ac0fd9b28e8a3283063bef0993f71a603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200E&lt;/code&gt; (left-to-right mark)</source>
          <target state="translated">&lt;code&gt;U+200E&lt;/code&gt; (왼쪽에서 오른쪽으로 표시)</target>
        </trans-unit>
        <trans-unit id="7387c90d6570a18e4ef3f831c6218976f9de9544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200F&lt;/code&gt; (right-to-left mark)</source>
          <target state="translated">&lt;code&gt;U+200F&lt;/code&gt; (오른쪽에서 왼쪽으로 표시)</target>
        </trans-unit>
        <trans-unit id="b820fd5b508f4cad2f1823a9001f061008054109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2028&lt;/code&gt; (line separator)</source>
          <target state="translated">&lt;code&gt;U+2028&lt;/code&gt; (선 구분 기호)</target>
        </trans-unit>
        <trans-unit id="ef829c2c981395adf912e910538e5a3686cb3a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2029&lt;/code&gt; (paragraph separator)</source>
          <target state="translated">&lt;code&gt;U+2029&lt;/code&gt; (단락 구분 기호)</target>
        </trans-unit>
        <trans-unit id="7f8cead9a1dbbe85fed8f27401392602cee3455e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; (�) is used in Unicode to represent a decoding error.</source>
          <target state="translated">&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; ()는 유니 코드로 사용되어 디코딩 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6195c16a97daf5384a4b9aed4a907cef021630de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpin&lt;/code&gt; has no consequence at all for non-pinned data. In particular, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; happily moves &lt;code&gt;!Unpin&lt;/code&gt; data (it works for any &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, not just when &lt;code&gt;T: Unpin&lt;/code&gt;). However, you cannot use &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; on data wrapped inside a &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; because you cannot get the &lt;code&gt;&amp;amp;mut T&lt;/code&gt; you need for that, and &lt;em&gt;that&lt;/em&gt; is what makes this system work.</source>
          <target state="translated">&lt;code&gt;Unpin&lt;/code&gt; 는 고정 되지 않은 데이터에 전혀 영향을 미치지 않습니다. 특히 &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; 행복하게 &lt;code&gt;!Unpin&lt;/code&gt; 데이터를 이동 시킵니다 ( &lt;code&gt;T: Unpin&lt;/code&gt; 일 때뿐만 아니라 모든 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 에서 작동 합니다 ). 그러나, 당신은 사용할 수 없습니다 &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; 돌며 포장 데이터에 &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; 당신이 얻을 수 없기 때문에 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 당신이 필요한, 그리고 &lt;em&gt;그&lt;/em&gt; 이 시스템 작업을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d393f4f108119cf541b6e488c9f66e8555533941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpin&lt;/code&gt; has no consequence at all for non-pinned data. In particular, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; happily moves &lt;code&gt;!Unpin&lt;/code&gt; data (it works for any &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, not just when &lt;code&gt;T: Unpin&lt;/code&gt;). However, you cannot use &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; on data wrapped inside a &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; because you cannot get the &lt;code&gt;&amp;amp;mut T&lt;/code&gt; you need for that, and &lt;em&gt;that&lt;/em&gt; is what makes this system work.</source>
          <target state="translated">&lt;code&gt;Unpin&lt;/code&gt; 는 고정 되지 않은 데이터에 대해 전혀 영향을주지 않습니다. 특히 &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; 행복하게 데이터를 이동합니다 &lt;code&gt;!Unpin&lt;/code&gt; 데이터 ( &lt;code&gt;T: Unpin&lt;/code&gt; 때뿐만 아니라 모든 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 에서도 작동 합니다 ). 그러나, 당신은 사용할 수 없습니다 &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; 돌며 포장 데이터에 &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; 당신이 얻을 수 없기 때문에 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 당신이 필요한, 그리고 &lt;em&gt;그&lt;/em&gt; 이 시스템 작업을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="efff079b40f2baf685ae584c91dd28f267624b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; is a type that wraps some &lt;code&gt;T&lt;/code&gt; and indicates unsafe interior operations on the wrapped type. Types with an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; field are considered to have an 'unsafe interior'. The &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; type is the only legal way to obtain aliasable data that is considered mutable. In general, transmuting an &lt;code&gt;&amp;amp;T&lt;/code&gt; type into an &lt;code&gt;&amp;amp;mut T&lt;/code&gt; is considered undefined behavior.</source>
          <target state="translated">&lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; 은 일부 &lt;code&gt;T&lt;/code&gt; 를 감싸는 유형이며 포장 된 유형의 안전하지 않은 내부 작업을 나타냅니다. &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; 필드가 있는 유형 은 '안전하지 않은 내부'로 간주됩니다. &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; 유형 변경할 간주 aliasable 데이터를 획득하는 유일한 법적 방법이다. 일반적으로 &lt;code&gt;&amp;amp;T&lt;/code&gt; 유형을 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 로 변환하는 것은 정의되지 않은 동작으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3e4346125b6b7807fdd36f09c881261f6029bbe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is implemented for:</source>
          <target state="translated">&lt;code&gt;Unsize&lt;/code&gt; 는 다음을 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="84b98d5ffecb70c0c02d694c53fc82fd0138d0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is used along with &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt;&lt;code&gt;ops::CoerceUnsized&lt;/code&gt;&lt;/a&gt; to allow &quot;user-defined&quot; containers such as &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; to contain dynamically-sized types. See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;Unsize&lt;/code&gt; 는 &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt; &lt;code&gt;ops::CoerceUnsized&lt;/code&gt; &lt;/a&gt; 와 함께 사용 되어 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;사용자 정의&quot;컨테이너 가 동적 크기의 유형을 포함 할 수 있도록 합니다. 자세한 내용은 &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST 강제 RFC&lt;/a&gt; 및 &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;강제에&lt;/a&gt; 대한 nomicon 항목 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e1d63e0fbda6d98ae184316db47dce145c405831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is used along with &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt;&lt;code&gt;ops::CoerceUnsized&lt;/code&gt;&lt;/a&gt; to allow &quot;user-defined&quot; containers such as &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;rc::Rc&lt;/code&gt;&lt;/a&gt; to contain dynamically-sized types. See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;Unsize&lt;/code&gt; 는 &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt; &lt;code&gt;ops::CoerceUnsized&lt;/code&gt; &lt;/a&gt; 와 함께 사용 되어 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;rc::Rc&lt;/code&gt; &lt;/a&gt; 와 같은 &quot;사용자 정의&quot;컨테이너에 동적 크기 유형을 포함 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST 강제 RFC&lt;/a&gt; 및 &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;강제에&lt;/a&gt; 대한 nomicon 항목 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1d5848a85b15f827f6fdeae6545b4e39ec090f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uppercase&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Uppercase&lt;/code&gt; 는 &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;유니 코드 표준&lt;/a&gt; 의 4 장 (문자 속성)에 설명되어 있으며 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;유니 코드 문자 데이터베이스 &lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt; &lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt; 에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c038f2912a5d6313a3fd98da687fed06b926624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not currently guarantee the order in which elements are dropped. The order has changed in the past and may change again.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 은 현재 요소가 떨어지는 순서를 보장하지 않습니다. 과거에 주문이 변경되었으며 다시 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0842430b9dc722bdd51043a8a8a1dedc6cfbc53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not guarantee any particular growth strategy when reallocating when full, nor when &lt;a href=&quot;struct.vec#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; is called. The current strategy is basic and it may prove desirable to use a non-constant growth factor. Whatever strategy is used will of course guarantee &lt;code&gt;O(1)&lt;/code&gt; amortized &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 은 배가 가득 차거나 &lt;a href=&quot;struct.vec#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 특정 성장 전략을 보장하지 않습니다 . 현재 전략은 기본적이며 일정하지 않은 성장 인자를 사용하는 것이 바람직 할 수 있습니다. 어떤 전략을 사용하든 &lt;code&gt;O(1)&lt;/code&gt; 상각 &lt;a href=&quot;struct.vec#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; 보장 됩니다.</target>
        </trans-unit>
        <trans-unit id="c7c44d40d0794512328708f35774c981315f5431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not guarantee any particular growth strategy when reallocating when full, nor when &lt;a href=&quot;struct.vec#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; is called. The current strategy is basic and it may prove desirable to use a non-constant growth factor. Whatever strategy is used will of course guarantee &lt;em&gt;O&lt;/em&gt;(1) amortized &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2045d6d707efc5c8342c60437b1aef36bf90f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never automatically shrink itself, even if completely empty. This ensures no unnecessary allocations or deallocations occur. Emptying a &lt;code&gt;Vec&lt;/code&gt; and then filling it back up to the same &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; should incur no calls to the allocator. If you wish to free up unused memory, use &lt;a href=&quot;struct.vec#method.shrink_to_fit&quot;&gt;&lt;code&gt;shrink_to_fit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 은 완전히 비워도 자동으로 축소되지 않습니다. 이렇게하면 불필요한 할당이나 할당 해제가 발생하지 않습니다. 비우기 &lt;code&gt;Vec&lt;/code&gt; 하고는 동일하게 백업 작성 &lt;a href=&quot;struct.vec#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; 할당 자에는 호출이 발생할 없습니다. 사용하지 않는 메모리를 &lt;a href=&quot;struct.vec#method.shrink_to_fit&quot;&gt; &lt;code&gt;shrink_to_fit&lt;/code&gt; &lt;/a&gt; 려면 shrink_to_fit을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c138e62037a41259d18bb337a8b3813b4503afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never perform a &quot;small optimization&quot; where elements are actually stored on the stack for two reasons:</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 은 다음 두 가지 이유로 요소가 실제로 스택에 저장되는 &quot;작은 최적화&quot;를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa1995a9cd88dc9bc07c96596b6994906d449977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will not specifically overwrite any data that is removed from it, but also won't specifically preserve it. Its uninitialized memory is scratch space that it may use however it wants. It will generally just do whatever is most efficient or otherwise easy to implement. Do not rely on removed data to be erased for security purposes. Even if you drop a &lt;code&gt;Vec&lt;/code&gt;, its buffer may simply be reused by another &lt;code&gt;Vec&lt;/code&gt;. Even if you zero a &lt;code&gt;Vec&lt;/code&gt;'s memory first, that may not actually happen because the optimizer does not consider this a side-effect that must be preserved. There is one case which we will not break, however: using &lt;code&gt;unsafe&lt;/code&gt; code to write to the excess capacity, and then increasing the length to match, is always valid.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 은 제거 된 모든 데이터를 구체적으로 덮어 쓰지 않고이를 보존하지는 않습니다. 초기화되지 않은 메모리는 원하는 스크래치 공간입니다. 일반적으로 가장 효율적이거나 구현하기 쉬운 작업을 수행합니다. 보안을 위해 삭제 된 데이터를 삭제하지 마십시오. &lt;code&gt;Vec&lt;/code&gt; 을 삭제하더라도 다른 &lt;code&gt;Vec&lt;/code&gt; 에서 해당 버퍼를 재사용 할 수 있습니다 . &lt;code&gt;Vec&lt;/code&gt; 의 메모리를 먼저 0으로 설정하더라도 옵티마이 저는이를 보존해야하는 부작용으로 간주하지 않기 때문에 실제로 발생하지 않을 수 있습니다. 그러나 &lt;code&gt;unsafe&lt;/code&gt; 코드를 사용 하여 초과 용량을 쓴 다음 일치하는 길이를 늘리는 것이 항상 유효합니다.</target>
        </trans-unit>
        <trans-unit id="d4ee2e04173c939700002545fd065e41231a2d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed allocation. The allocation is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; 은 관리 할당에 대한 비 소유 참조를 보유하는 &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; 버전입니다 . 할당은 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 반환하는 &lt;code&gt;Weak&lt;/code&gt; 포인터에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="4bb3b0e05d73114df2df4ae4191f2651cf500746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; 은 관리되는 값에 대한 소유하지 않은 참조를 보유하는 &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; 버전입니다 . 이 값은 &lt;code&gt;Weak&lt;/code&gt; 포인터에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출하여 액세스 하며 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf8d3fa2913630148a7c94d05eccf0fd619f2356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed allocation. The allocation is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; 은 관리 할당에 대한 비 소유 참조를 보유하는 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; 버전입니다 . 할당은 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 반환하는 &lt;code&gt;Weak&lt;/code&gt; 포인터에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="c854167f674817e7e2de19bb245e924fdad956f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; 은 관리되는 값에 대한 비 소유 참조를 보유하는 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; 버전입니다 . 이 값은 &lt;code&gt;Weak&lt;/code&gt; 포인터에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출하여 액세스되며 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4fc57320ad35456f5be1c472a78582ad6252a7db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;White_Space&lt;/code&gt; is specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt&quot;&gt;&lt;code&gt;PropList.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;White_Space&lt;/code&gt; 는 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database &lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt&quot;&gt; &lt;code&gt;PropList.txt&lt;/code&gt; 에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb59f191736e86bda790823d721bf254904d63c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Write&lt;/code&gt; includes a single &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; 에는 단일 &lt;code&gt;String&lt;/code&gt; 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="e8baa7d8ca586d34e346b689f942a7f8f4bf972c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperhex&quot;&gt;&lt;code&gt;UpperHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperhex&quot;&gt; &lt;code&gt;UpperHex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7a8b92bdff1c5b19de16d72892759bdc4ccc055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 형식.</target>
        </trans-unit>
        <trans-unit id="0ff29fd323ba01b60e1508eddcf6f34256380d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with upper-case hexadecimal integers</source>
          <target state="translated">&lt;code&gt;X?&lt;/code&gt; &amp;rArr; 대문자 16 진 정수로 &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbc583d8cf6721f3d3948d82304abe45ae3702d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="429917b2fa19fc7d9c387c7fea97018669352a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74d282f16d5a862c7eba2396135aaf979e09b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65c13c020f3ab6f9ac3bfc9026ccfce808c33adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;패턴&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;*은 &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e6133de9165856bec31a963923494e952b07a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77033b38f8a1d2b5c1d70a793320df0a734bbe08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;em&gt;SlicePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;em&gt;SlicePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98369e91ab28104a3ef6d5c09ad0caf7644282c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; N]&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T; N]&lt;/code&gt; 은 &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt; 가 없습니다 &amp;lt;[T]&amp;gt;</target>
        </trans-unit>
        <trans-unit id="850e65c4e16490294eac7e4adabff47857d4f401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; n]&lt;/code&gt; to &lt;code&gt;[T]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[T; n]&lt;/code&gt; ~ &lt;code&gt;[T]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="20de50777f1e5c511744c9e88dd1c983a0dfc8f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T]&lt;/code&gt; and &lt;code&gt;[T; n]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T]&lt;/code&gt; 와 &lt;code&gt;[T; n]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19cdfcb8e35ace357e164f0ea3be68e0e1513bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]&amp;gt;&lt;/code&gt; - the argument is right-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;[fill]&amp;gt;&lt;/code&gt; -인수가 &lt;code&gt;width&lt;/code&gt; 열 에서 오른쪽 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="a53ebba1ad04ff1655f21eedec8c4884b4f0921f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;[fill]&amp;lt;&lt;/code&gt; -인수가 &lt;code&gt;width&lt;/code&gt; 열 에서 왼쪽 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="e132cbaaef31011a1629babcdb2722d2ebad1dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;[fill]^&lt;/code&gt; -인수가 &lt;code&gt;width&lt;/code&gt; 열 에서 가운데 ​​정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="846683b8124bfad974b84f7fc9e39451ea401d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0188d46c969099ec650ba736f85a9eff66c95ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;em&gt;followed by&lt;/em&gt; \n</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; &lt;em&gt;다음에&lt;/em&gt; \ n</target>
        </trans-unit>
        <trans-unit id="e1e0c067924632f3f30abfaccf8c2bbb3ddf0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{&lt;/code&gt; ( HEX_DIGIT &lt;code&gt;_&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt; )&lt;sup&gt;1..6&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u{&lt;/code&gt; (HEX_DIGIT &lt;code&gt;_&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt; ) &lt;sup&gt;1..6 &lt;/sup&gt; &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bfa60964b39253167d48d4743520e2dbebadd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="776836237567e80ae21f14d79d75a578ed148885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="00300a7210e800449737f4642ef57d12724ef0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; -인수는 &lt;code&gt;width&lt;/code&gt; 열의 가운데 정렬</target>
        </trans-unit>
        <trans-unit id="01c21f9f1ecd54e3162bbf94eb10f3ea34601934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_first&lt;/code&gt; is declared first and &lt;code&gt;_second&lt;/code&gt; is declared second, so &lt;code&gt;main&lt;/code&gt; will print &lt;code&gt;Declared second!&lt;/code&gt; and then &lt;code&gt;Declared first!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_first&lt;/code&gt; 가 먼저 선언되고 &lt;code&gt;_second&lt;/code&gt; 가 두 번째로 선언되므로 &lt;code&gt;main&lt;/code&gt; 은 &lt;code&gt;Declared second!&lt;/code&gt; 를 인쇄합니다 ! 그런 다음 &lt;code&gt;Declared first!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ead7d5541adaf8ebdf41a6d508ba49b3657a05af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; is equivalent to &lt;code&gt;a = b.clone()&lt;/code&gt; in functionality, but can be overridden to reuse the resources of &lt;code&gt;a&lt;/code&gt; to avoid unnecessary allocations.</source>
          <target state="translated">&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; 는 &lt;code&gt;a = b.clone()&lt;/code&gt; 과 동일 하지만 불필요한 할당을 피하기 위해 &lt;code&gt;a&lt;/code&gt; 의 자원을 재사용하도록 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bffa81ddece0c699f61e73446e0e7a7aa7574e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is an address of the remote host. Anything which implements &lt;a href=&quot;trait.tosocketaddrs&quot;&gt;&lt;code&gt;ToSocketAddrs&lt;/code&gt;&lt;/a&gt; trait can be supplied for the address; see this trait documentation for concrete examples.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; 은 원격 호스트의 주소입니다. 주소에 &lt;a href=&quot;trait.tosocketaddrs&quot;&gt; &lt;code&gt;ToSocketAddrs&lt;/code&gt; &lt;/a&gt; 특성 을 구현하는 모든 것을 제공 할 수 있습니다. 구체적인 예는이 특성 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e907f6b793f616d0554d1ef812dbaab556e6f22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by(n)&lt;/code&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(())&lt;/code&gt;&lt;/a&gt; if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(k)&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050a75bfb5226a182a624df4e6beaa31f13e9244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;advance_back_by(n)&lt;/code&gt; [리턴 &lt;code&gt;Ok(())&lt;/code&gt; 반복자 성공적으로 진행하는 경우] &lt;code&gt;n&lt;/code&gt; 원소, 또는 [ &lt;code&gt;Err(k)&lt;/code&gt; ] 경우 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 발생되지 않으며, &lt;code&gt;k&lt;/code&gt; 부족하기 전에 의해 소자의 수는 반복자 전진 요소 (즉, 반복기의 길이). 참고 &lt;code&gt;k&lt;/code&gt; 는 보다 항상 작 &lt;code&gt;n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb1090bbbf988d5db8fe1e7d4310304d4eab0a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by&lt;/code&gt; is the reverse version of &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt;&lt;code&gt;advance_by&lt;/code&gt;&lt;/a&gt;. This method will eagerly skip &lt;code&gt;n&lt;/code&gt; elements starting from the back by calling &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;&lt;code&gt;next_back&lt;/code&gt;&lt;/a&gt; up to &lt;code&gt;n&lt;/code&gt; times until &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered.</source>
          <target state="translated">&lt;code&gt;advance_back_by&lt;/code&gt; 은 의 반대 버전입니다 &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt; &lt;code&gt;advance_by&lt;/code&gt; &lt;/a&gt; . 이 메소드는 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 만날 때까지 &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt; &lt;code&gt;next_back&lt;/code&gt; 을&lt;/a&gt; 최대 &lt;code&gt;n&lt;/code&gt; 번 호출하여 뒤에서 시작하여 &lt;code&gt;n&lt;/code&gt; 개의 요소 를 간절히 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="88702021128bb05d1549ac38f9e0418e729d6a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_by(n)&lt;/code&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(())&lt;/code&gt;&lt;/a&gt; if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(k)&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3df060974d3be2ff9687905004b7556deccac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;advance_by(n)&lt;/code&gt; [리턴 &lt;code&gt;Ok(())&lt;/code&gt; 반복자 성공적으로 진행하는 경우] &lt;code&gt;n&lt;/code&gt; 원소, 또는 [ &lt;code&gt;Err(k)&lt;/code&gt; ] 경우 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 발생되지 않으며, &lt;code&gt;k&lt;/code&gt; 부족하기 전에 의해 소자의 수는 반복자 전진 요소 (즉, 반복기의 길이). 참고 &lt;code&gt;k&lt;/code&gt; 는 보다 항상 작 &lt;code&gt;n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc47904170ab5b0947d6455163b2615103c6272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_n_and_return_first&lt;/code&gt; is the equivalent of:</source>
          <target state="translated">&lt;code&gt;advance_n_and_return_first&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7334bdce0fb332ca2b9eb380c9d263285a648deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must be a power of two,</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; 은 2의 거듭 제곱이어야합니다.</target>
        </trans-unit>
        <trans-unit id="81f86fa079c8f6138b2948bc3a466198e0c28aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must not be zero,</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; 은 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e5d8088472d9b9ae5fe911581a8175e25768bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; representation hint was incorrectly declared.</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; 표현 힌트가 잘못 선언되었습니다.</target>
        </trans-unit>
        <trans-unit id="6fab09c70c7b6a56c907190780229e35909a10b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;false&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; 이 단락되었습니다. 다시 말해, 다른 일이 발생하더라도 결과도 &lt;code&gt;false&lt;/code&gt; 이된다는 &lt;code&gt;false&lt;/code&gt; 을 감안할 때 거짓을 발견하자마자 처리를 중단 합니다.</target>
        </trans-unit>
        <trans-unit id="f1fdfe232439033a2e4566ec9bed261742cfd878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if they all return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;all()&lt;/code&gt;. If any of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; 은 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 클로저를 사용합니다 . 이 반복자의 각 요소에이 폐쇄를 적용, 그들은 모두 반환하는 경우 &lt;code&gt;true&lt;/code&gt; , 그때 그렇게 &lt;code&gt;all()&lt;/code&gt; . 둘 중 하나라도 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4b1ea7e4ca546145c30e0a3fd9f9951b3652afa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; with a comma separated list of configuration predicates. It is false if at least one predicate is false. If there are no predicates, it is true.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; 쉼표로 구분 된 구성 술어 목록이있는 all () . 하나 이상의 술어가 거짓이면 거짓입니다. 술어가 없으면 사실입니다.</target>
        </trans-unit>
        <trans-unit id="93f015cbe9a59d008db093f857475ae77d4f61b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46b8ce0cfccf0e88b3ec867444fdf83d7309de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow(C)&lt;/code&gt; overrides the check for &lt;code&gt;C&lt;/code&gt; so that violations will go unreported,</source>
          <target state="translated">&lt;code&gt;allow(C)&lt;/code&gt; 에 대한 검사를 우선 &lt;code&gt;C&lt;/code&gt; 그 위반이보고되지 않도록,</target>
        </trans-unit>
        <trans-unit id="fab10c9c448596fc24766cf727d854d069d7fbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; 는 단락입니다. 그것은 발견으로 즉, 즉시 처리를 중지합니다 &lt;code&gt;true&lt;/code&gt; 다른 무슨 상관없이, 결과도 될 것이라고 주어진 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45232bdd9c1061a33a2956e0f63f7a3b670af6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;any()&lt;/code&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 클로저를 사용합니다 . 이 반복자의 각 요소에이 폐쇄를 적용하고, 그 중 하나가 반환하는 경우 &lt;code&gt;true&lt;/code&gt; , 그때 그렇게 &lt;code&gt;any()&lt;/code&gt; . 모두 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8003eeaf86431d6298a4799cddebf1b8310bb6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; with a comma separated list of configuration predicates. It is true if at least one predicate is true. If there are no predicates, it is false.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; 쉼표로 구분 된 구성 술어 목록이있는 any () . 최소한 하나의 술어가 참이면 참입니다. 술어가 없으면 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="d8252602ecba2599bff29ba4c7c605c0da224c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6f7408dc17f99f8be4ae7d8fca02fa880f9bdb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cf8b787affc576d7693662632771a998f7ba8558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; - perform primitive casting, disambiguate the specific trait containing an item, or rename items in &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;extern crate&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; - 원시 주조를 수행 항목을 포함하는 특정의 특성을 명확하게, 또는 항목의 이름을 변경 &lt;code&gt;use&lt;/code&gt; 및 &lt;code&gt;extern crate&lt;/code&gt; 문을</target>
        </trans-unit>
        <trans-unit id="aeaa965c6322de30e3e4c0f88de200e922739361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; can be used to explicitly perform &lt;a href=&quot;../type-coercions&quot;&gt;coercions&lt;/a&gt;, as well as the following additional casts. Here &lt;code&gt;*T&lt;/code&gt; means either &lt;code&gt;*const T&lt;/code&gt; or &lt;code&gt;*mut T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 하는 데 사용할 수있는 명시 적으로 수행 &lt;a href=&quot;../type-coercions&quot;&gt;강제 변환&lt;/a&gt; 뿐만 아니라 다음과 같은 추가 캐스트를. 여기서 &lt;code&gt;*T&lt;/code&gt; 는 &lt;code&gt;*const T&lt;/code&gt; 또는 &lt;code&gt;*mut T&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="cb6fedd67841708883a0821ef41026220a4d6e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is also used to rename imports in &lt;a href=&quot;keyword.use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyword.crate&quot;&gt;&lt;code&gt;extern crate&lt;/code&gt;&lt;/a&gt; statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd35a3eaa74331985536515255fb948db60d6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is most commonly used to turn primitive types into other primitive types, but it has other uses that include turning pointers into addresses, addresses into pointers, and pointers into other pointers.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 가장 일반적으로 다른 기본 유형으로 기본 유형을 설정하는 데 사용하지만, 그것은 다른 포인터로 전환 주소로 포인터, 포인터에 주소 및 포인터를 포함 다른 용도가있다.</target>
        </trans-unit>
        <trans-unit id="a09afe36b467f7c38f3053b22ca1b3f46bf36da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;/&lt;code&gt;impl trait&lt;/code&gt; return type cannot contain a projection or &lt;code&gt;Self&lt;/code&gt; that references lifetimes from a parent scope.</source>
          <target state="translated">&lt;code&gt;async fn&lt;/code&gt; / &lt;code&gt;impl trait&lt;/code&gt; 반환 유형은 부모 범위의 수명을 참조 하는 프로젝션 또는 &lt;code&gt;Self&lt;/code&gt; 를 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4180a92bc7b5e3193a04834544243fe6b863130a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;s are not yet supported in traits in Rust.</source>
          <target state="translated">&lt;code&gt;async fn&lt;/code&gt; 은 Rust의 트레이 트에서 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80980b9623b77cdece74aa97b22fddf4ef8e3eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;s return an &lt;code&gt;impl Future&lt;/code&gt;, making the following two examples equivalent:</source>
          <target state="translated">&lt;code&gt;async fn&lt;/code&gt; s는 &lt;code&gt;impl Future&lt;/code&gt; 를 반환 하여 다음 두 예제를 동일하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="04b25451b9f27f4533a477c955598a0c5b93298d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; - return a &lt;code&gt;Future&lt;/code&gt; instead of blocking the current thread</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; - 현재 스레드를 차단하는 대신 &lt;code&gt;Future&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe59ee1c3316fa2333f095e6a45aeae3f61dac28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; is a keyword from the 2018 edition onwards.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 는 2018 년 버전 이후의 키워드입니다.</target>
        </trans-unit>
        <trans-unit id="7cb8cd323a72522cf21c08e8f67bfc8b7e7d8d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; non-&lt;code&gt;move&lt;/code&gt; closures with parameters are currently not supported.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 매개 변수가있는 비동기 비 &lt;code&gt;move&lt;/code&gt; 클로저는 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32595b725bf6d6a52b6031ce1217209e5a16592d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; with non-move is currently not supported with the current version, you can use successfully by using move:</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 이동이 아닌 비동기 는 현재 현재 버전에서 지원되지 않습니다. 이동을 사용하여 성공적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ebc63ea105c8a2c9ae440a603c2bdafa5e5de4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="092a940caffbe0906d5be7e67de7db15d3d8c3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt;&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba0f7539d49254147a21268fd587007ed43c552e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; - suspend execution until the result of a &lt;code&gt;Future&lt;/code&gt; is ready</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; - &lt;code&gt;Future&lt;/code&gt; 의 결과 가 준비 될 때까지 실행을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="f54a0afad477bc8d263345346554d4199d4ced24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; is a keyword from the 2018 edition onwards.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 는 2018 년판 이후의 키워드입니다.</target>
        </trans-unit>
        <trans-unit id="0475a9c790352afea85606e3a2f0253eafd3d770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&quot;&lt;/code&gt; ( ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b&quot;&lt;/code&gt; (ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="357cc0ea4f6c2e9ad4f7141bf09487897efa2375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'&lt;/code&gt; ( ASCII_FOR_CHAR | BYTE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b'&lt;/code&gt; (ASCII_FOR_CHAR | BYTE_ESCAPE) &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b35ff15cc54c4c0deeedc5a4e82da6015895f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0613c183b879d81b0e8fae69d3fd046a9b6a2887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 형식.</target>
        </trans-unit>
        <trans-unit id="89206d3ef618fadc40cb3722fac94c14af954f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must be byte positions within the string slice.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 는 문자열 슬라이스 내에서 바이트 위치 여야합니다.</target>
        </trans-unit>
        <trans-unit id="4a2c09c340ed2826d14ffd0dbef2f7454022fbb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must lie on UTF-8 sequence boundaries.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 은 UTF-8 시퀀스 경계에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3a3e233163d179b69b52a9ca206e309212607ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; must come before &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 하기 전에 &lt;code&gt;end&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5ec197dab27c5ca976338f815679b8fee1395bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; must not exceed &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; 은 &lt;code&gt;end&lt;/code&gt; 초과하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="bdce75ceab50c820ea00390df58dce8a3fe576b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; | &lt;code&gt;expr&lt;/code&gt; | &lt;code&gt;ident&lt;/code&gt; | &lt;code&gt;item&lt;/code&gt; | &lt;code&gt;lifetime&lt;/code&gt; | &lt;code&gt;literal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; | &lt;code&gt;expr&lt;/code&gt; | &lt;code&gt;ident&lt;/code&gt; | &lt;code&gt;item&lt;/code&gt; | &lt;code&gt;lifetime&lt;/code&gt; | &lt;code&gt;literal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e23d2e85acbaa31cd6476f62fbdac21e846aa86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt;: a &lt;a href=&quot;expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; : 블록 &lt;a href=&quot;expressions/block-expr&quot;&gt;&lt;em&gt;표현&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6af537efa449f86652366dbccb6b304bc9b013d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; implements various traits, such as &lt;a href=&quot;ops/trait.bitand&quot;&gt;&lt;code&gt;BitAnd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.bitor&quot;&gt;&lt;code&gt;BitOr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.not&quot;&gt;&lt;code&gt;Not&lt;/code&gt;&lt;/a&gt;, etc., which allow us to perform boolean operations using &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 은 &lt;a href=&quot;ops/trait.bitand&quot;&gt; &lt;code&gt;BitAnd&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ops/trait.bitor&quot;&gt; &lt;code&gt;BitOr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ops/trait.not&quot;&gt; &lt;code&gt;Not&lt;/code&gt; &lt;/a&gt; 등과 같은 다양한 특성을 구현 하여 &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; 그리고 &lt;code&gt;!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c868f2edb1830849f09690bfbf6074c6cf7e4a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 또는 &lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69c0189a6ed72034cc572024f62efafca7e9350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&quot;...&quot;&lt;/code&gt;, &lt;code&gt;br#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;br##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;br&quot;...&quot;&lt;/code&gt; , &lt;code&gt;br#&quot;...&quot;#&lt;/code&gt; , &lt;code&gt;br##&quot;...&quot;##&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="3495df73aacf73612f41eef0eae4d64842977c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&lt;/code&gt; RAW_BYTE_STRING_CONTENT</source>
          <target state="translated">&lt;code&gt;br&lt;/code&gt; RAW_BYTE_STRING_CONTENT</target>
        </trans-unit>
        <trans-unit id="1415f75d8141c087ecbb64adf109fe5800330af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - exit a loop immediately</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; -즉시 루프를 종료</target>
        </trans-unit>
        <trans-unit id="c4163b08d828dcfb747f95cc2ffb4d2aedbbb408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; keywords can be used as normal inside closures as long as they are also contained within a loop. To halt the execution of a closure you should instead use a return statement. Example:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 및 &lt;code&gt;continue&lt;/code&gt; 키워드는 루프 내에 포함되어 있으면 일반적인 내부 클로저로 사용할 수 있습니다. 클로저 실행을 중단하려면 대신 return 문을 사용해야합니다. 예:</target>
        </trans-unit>
        <trans-unit id="879c6cd1cd83ed4c5e732ee5de34df4cca12090e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and loop values</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 및 루프 값</target>
        </trans-unit>
        <trans-unit id="1c8d47f15ad7f4c5aad4feabd00f8d968cb73853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 표현을 끊다</target>
        </trans-unit>
        <trans-unit id="33c055593df1011bf377fb4e1c055eda6704fcde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; keywords were used in a condition of a &lt;code&gt;while&lt;/code&gt; loop without a label.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 키워드가 레이블이없는 &lt;code&gt;while&lt;/code&gt; 루프 조건에서 사용되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ef76ab866ec310493cb4db41e682cd8d8b9ce839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; must include a label when used in the condition of a &lt;code&gt;while&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 는 &lt;code&gt;while&lt;/code&gt; 루프 조건에서 사용될 때 레이블을 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="367aea6a45bacadea76f3d04aaf6f94a411b972d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; expressions also have type &lt;code&gt;!&lt;/code&gt;. For example we are allowed to write:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; 및 &lt;code&gt;return&lt;/code&gt; 표현식에도 유형이 있습니다 &lt;code&gt;!&lt;/code&gt; . 예를 들어 다음과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa523fa95169e180a28c499ce226b2602b4f994e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="56c451f1ed7f4e9f32871e1b89f15458878ceff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s File Location</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 의 파일 위치</target>
        </trans-unit>
        <trans-unit id="6621293517f69acbfc27071a2e1bc022f97cb122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s Module Path</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 의 모듈 경로</target>
        </trans-unit>
        <trans-unit id="a9ec0f562729ffc6b7935d10cab9335e027674fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was called, but has not yet completed,</source>
          <target state="translated">&lt;code&gt;call_once&lt;/code&gt; 가 호출되었지만 아직 완료되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3ddd88f28edefd6a01cc85e1dd075eae23df30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was not called at all,</source>
          <target state="translated">&lt;code&gt;call_once&lt;/code&gt; 는 전혀 호출되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="fc7e7debfc26cbb9d1a6b86d7f8f085262ebce65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the capacity that the pointer was allocated with.</source>
          <target state="translated">&lt;code&gt;capacity&lt;/code&gt; 는 포인터가 할당 된 용량이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ec326518d31ce666e8a53c21a4b0c6e6f5844a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the correct value.</source>
          <target state="translated">&lt;code&gt;capacity&lt;/code&gt; 은 올바른 값이어야합니다.</target>
        </trans-unit>
        <trans-unit id="cab51cc0e82e607d6f82dfb31ce92c9ad2949a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg!&lt;/code&gt;, unlike &lt;code&gt;#[cfg]&lt;/code&gt;, does not remove any code and only evaluates to true or false. For example, all blocks in an if/else expression need to be valid when &lt;code&gt;cfg!&lt;/code&gt; is used for the condition, regardless of what &lt;code&gt;cfg!&lt;/code&gt; is evaluating.</source>
          <target state="translated">&lt;code&gt;cfg!&lt;/code&gt; &lt;code&gt;#[cfg]&lt;/code&gt; 와 달리 코드를 제거하지 않고 true 또는 false로만 평가합니다. 예를 들어 if / else 표현식의 모든 블록은 &lt;code&gt;cfg!&lt;/code&gt; 일 때 유효해야합니다 . &lt;code&gt;cfg!&lt;/code&gt; 상관없이 조건에 사용됩니다 ! 평가 중입니다.</target>
        </trans-unit>
        <trans-unit id="e45d1df9ba27e19707e079c2120795b398f3983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca23ba2a4dbea64080c773166d35b0ed16d74a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3bf2408893e79c0578315d534c26bc24b41dfe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chain()&lt;/code&gt; will return a new iterator which will first iterate over values from the first iterator and then over values from the second iterator.</source>
          <target state="translated">&lt;code&gt;chain()&lt;/code&gt; 은 새로운 반복자를 반환합니다.이 반복자는 먼저 첫 번째 반복자의 값을 반복 한 다음 두 번째 반복자의 값을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="17bb725af33a5fe3bf725eb329cd8d2300796541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char::Searcher&lt;/code&gt; is a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because searching for a &lt;a href=&quot;../../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; only requires looking at one at a time, which behaves the same from both ends.</source>
          <target state="translated">&lt;code&gt;char::Searcher&lt;/code&gt; 는 &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; 입니다. &lt;a href=&quot;../../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; 를&lt;/a&gt; 검색 하려면 한 번에 하나씩 만 볼 필요가 있기 때문에 양쪽 끝에서 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ad66e7abb0a2d2a54689cb041c669b7c7fc9711e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char::Searcher&lt;/code&gt; is a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because searching for a &lt;code&gt;char&lt;/code&gt; only requires looking at one at a time, which behaves the same from both ends.</source>
          <target state="translated">&lt;code&gt;char::Searcher&lt;/code&gt; 는 &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; 입니다. &lt;code&gt;char&lt;/code&gt; 을 검색 하려면 한 번에 하나씩 만보 고 있으면 양쪽 끝에서 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5e26a30a33af896db21fcd418384804b3ae0828c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; casts to the value of the code point, then uses a numeric cast if needed.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 은 코드 포인트의 값으로 캐스트 한 다음 필요한 경우 숫자 캐스트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b719e31245d824b02c35e8d26f7746c620db22a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; is always four bytes in size. This is a different representation than a given character would have as part of a &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 의 크기는 항상 4 바이트입니다. 이것은 주어진 문자가 &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 의&lt;/a&gt; 일부로 가질 수있는 것과는 다른 표현 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d274791f61f08274ced2ead9795968e9729f1af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; and &lt;a href=&quot;types/never&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; 그리고 &lt;a href=&quot;types/never&quot;&gt; &lt;code&gt;!&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f5961c50e551eb8e946337181297787628d3f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, and &lt;a href=&quot;types/never&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; 및 &lt;a href=&quot;types/never&quot;&gt; &lt;code&gt;!&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="898b1df644fa14ac00e90b9a7df56f8b6e1ec80e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collect()&lt;/code&gt; can also create instances of types that are not typical collections. For example, a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; can be built from &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s, and an iterator of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt; items can be collected into &lt;code&gt;Result&amp;lt;Collection&amp;lt;T&amp;gt;, E&amp;gt;&lt;/code&gt;. See the examples below for more.</source>
          <target state="translated">&lt;code&gt;collect()&lt;/code&gt; 는 또한 일반적인 컬렉션이 아닌 유형의 인스턴스를 만들 수 있습니다. 예를 들어 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 에서 빌드 할 수 있으며 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; 항목 의 반복자는 &lt;code&gt;Result&amp;lt;Collection&amp;lt;T&amp;gt;, E&amp;gt;&lt;/code&gt; 수집 할 수 있습니다 . 자세한 내용은 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c6cbac6d455a56de8f9eacec13e52059b85da18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collect()&lt;/code&gt; can take anything iterable, and turn it into a relevant collection. This is one of the more powerful methods in the standard library, used in a variety of contexts.</source>
          <target state="translated">&lt;code&gt;collect()&lt;/code&gt; 는 반복 가능한 것을 취하여 관련 컬렉션으로 바꿀 수 있습니다. 이것은 다양한 상황에서 사용되는 표준 라이브러리에서 가장 강력한 방법 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="5c2669bb73e6b1d612983f6cd72c4c2b94cc9b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_and_swap&lt;/code&gt; also takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Notice that even when using &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt;&lt;code&gt;AcqRel&lt;/code&gt;&lt;/a&gt;, the operation might fail and hence just perform an &lt;code&gt;Acquire&lt;/code&gt; load, but not have &lt;code&gt;Release&lt;/code&gt; semantics. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; if it happens, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compare_and_swap&lt;/code&gt; 은이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수 도 사용 합니다. &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt; &lt;code&gt;AcqRel&lt;/code&gt; 을&lt;/a&gt; 사용하는 경우에도 작업이 실패 할 수 있으며 &lt;code&gt;Acquire&lt;/code&gt; 로드 만 수행 하지만 &lt;code&gt;Release&lt;/code&gt; 의미 는 없습니다 . &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 을 사용하면 이 조작의 상점 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 되면 이완 되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="8cb78629997fe1d57ec115a672b2032c050ad20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="translated">&lt;code&gt;compare_exchange&lt;/code&gt; 는 이 연산의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 성공하면 필요한 순서를 설명하고 두 번째는 작업이 실패 할 때 필요한 순서를 설명합니다. 사용하여 &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 성공 주문이 작업의 저장 부분을 만들면서 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , 그리고 사용 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 성공적으로로드하게 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; . 실패 순서는 &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 일&lt;/a&gt; 수 있으며 성공 순서와 같거나 약해야합니다.</target>
        </trans-unit>
        <trans-unit id="a45f64040fa6d1dde8548ee9d2d6b5ff234606cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange_weak&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="translated">&lt;code&gt;compare_exchange_weak&lt;/code&gt; 는 이 연산의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 성공하면 필요한 순서를 설명하고 두 번째는 작업이 실패 할 때 필요한 순서를 설명합니다. 사용하여 &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 성공 주문이 작업의 저장 부분을 만들면서 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , 그리고 사용 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 성공적으로로드하게 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; . 실패 순서는 &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 일&lt;/a&gt; 수 있으며 성공 순서와 같거나 약해야합니다.</target>
        </trans-unit>
        <trans-unit id="86e1cf70d1ca30178a0d573e5ad551798d54df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; does not emit any machine code, but restricts the kinds of memory re-ordering the compiler is allowed to do. Specifically, depending on the given &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; semantics, the compiler may be disallowed from moving reads or writes from before or after the call to the other side of the call to &lt;code&gt;compiler_fence&lt;/code&gt;. Note that it does &lt;strong&gt;not&lt;/strong&gt; prevent the &lt;em&gt;hardware&lt;/em&gt; from doing such re-ordering. This is not a problem in a single-threaded, execution context, but when other threads may modify memory at the same time, stronger synchronization primitives such as &lt;a href=&quot;fn.fence&quot;&gt;&lt;code&gt;fence&lt;/code&gt;&lt;/a&gt; are required.</source>
          <target state="translated">&lt;code&gt;compiler_fence&lt;/code&gt; 는 머신 코드를 방출하지 않지만 컴파일러가 수행 할 수있는 메모리 순서를 제한합니다. 즉, 주어진 따라 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 동화상 읽거나 또는 이전에 통화 상대방의 호출 이후부터 쓰기 의미에서, 컴파일러는 허용 될 수 &lt;code&gt;compiler_fence&lt;/code&gt; . &lt;em&gt;하드웨어&lt;/em&gt; 가 이러한 순서를 변경하는 것을 방해 하지는 &lt;strong&gt;않습니다&lt;/strong&gt; . 이것은 단일 스레드 실행 컨텍스트에서 문제가되지 않지만 다른 스레드가 동시에 메모리를 수정할 수있는 경우 &lt;a href=&quot;fn.fence&quot;&gt; &lt;code&gt;fence&lt;/code&gt; &lt;/a&gt; 와 같은 더 강력한 동기화 기본 요소 가 필요합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cad798660616379b0e659fc9aea1fbd6cc6514d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; is generally only useful for preventing a thread from racing &lt;em&gt;with itself&lt;/em&gt;. That is, if a given thread is executing one piece of code, and is then interrupted, and starts executing code elsewhere (while still in the same thread, and conceptually still on the same core). In traditional programs, this can only occur when a signal handler is registered. In more low-level code, such situations can also arise when handling interrupts, when implementing green threads with pre-emption, etc. Curious readers are encouraged to read the Linux kernel's discussion of &lt;a href=&quot;https://www.kernel.org/doc/Documentation/memory-barriers.txt&quot;&gt;memory barriers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compiler_fence&lt;/code&gt; 는 일반적으로 스레드 &lt;em&gt;가 자신과&lt;/em&gt; 경쟁하지 못하도록하는 데만 유용 &lt;em&gt;합니다&lt;/em&gt; . 즉, 주어진 스레드가 한 조각의 코드를 실행하고 중단 된 다음 다른 곳에서 코드를 실행하기 시작합니다 (아직 동일한 스레드에 있고 개념적으로 여전히 동일한 코어에 있음). 기존 프로그램에서는 신호 핸들러가 등록 된 경우에만 발생할 수 있습니다. 보다 낮은 수준의 코드에서 인터럽트를 처리 할 때, 선점 형으로 녹색 스레드를 구현할 때 등의 상황이 발생할 수도 있습니다. 궁금한 독자는 Linux 커널의 &lt;a href=&quot;https://www.kernel.org/doc/Documentation/memory-barriers.txt&quot;&gt;메모리 장벽에&lt;/a&gt; 대한 토론을 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="c02e4bab50b4f981a1c7e7e32d74e516ea367f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complex NT&lt;/code&gt;: a repetition matching non-terminal, specified via repetition operators (&lt;code&gt;\*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;complex NT&lt;/code&gt; : 반복 연산자로 지정된 반복 매칭 비 종단 ( &lt;code&gt;\*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b3869485a500fc75cacbdba4b9f8c404da090dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;유형&lt;/em&gt;&lt;/a&gt; &lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;표현식&lt;/em&gt;&lt;/a&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1549ff374b5ebdcea81375e3f343804f5b3c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; - define constant items or constant raw pointers</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; - 상수 항목 또는 상수 원시 포인터 정의</target>
        </trans-unit>
        <trans-unit id="340758aa22cfd73950ac0e13e516bd1cec191c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; mean different things. A &lt;code&gt;const&lt;/code&gt; is a compile-time constant, an alias for a literal value. This property means you can match it directly within a pattern.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 와 &lt;code&gt;static&lt;/code&gt; 은 다른 것을 의미합니다. &lt;code&gt;const&lt;/code&gt; 컴파일 타임 상수, 리터럴 값의 별칭입니다. 이 속성은 패턴 내에서 직접 일치시킬 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9f6a1bc6096f9736ea70cf62ff2965d0e325818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; items looks remarkably similar to &lt;code&gt;static&lt;/code&gt; items, which introduces some confusion as to which one should be used at which times. To put it simply, constants are inlined wherever they're used, making using them identical to simply replacing the name of the &lt;code&gt;const&lt;/code&gt; with its value. Static variables, on the other hand, point to a single location in memory, which all accesses share. This means that, unlike with constants, they can't have destructors, and act as a single value across the entire codebase.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 항목은 &lt;code&gt;static&lt;/code&gt; 항목 과 매우 유사하여 어떤 항목을 어느 시간에 사용해야하는지에 대해 약간의 혼란을 야기합니다. 간단히 말해서 상수는 사용되는 곳마다 인라인되어 단순히 &lt;code&gt;const&lt;/code&gt; 이름을 값으로 바꾸는 것과 동일하게 사용합니다 . 반면에 정적 변수는 모든 액세스가 공유하는 메모리의 단일 위치를 가리 킵니다. 이는 상수와 달리 소멸자를 가질 수 없으며 전체 코드베이스에서 단일 값으로 작동 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e61e289f776ced5df93e5b0a37771110bf9fc3d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; items looks remarkably similar to &lt;code&gt;static&lt;/code&gt; items, which introduces some confusion as to which one should be used at which times. To put it simply, constants are inlined wherever they're used, making using them identical to simply replacing the name of the const with its value. Static variables on the other hand point to a single location in memory, which all accesses share. This means that, unlike with constants, they can't have destructors, and act as a single value across the entire codebase.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 항목은 &lt;code&gt;static&lt;/code&gt; 항목 과 매우 유사 해 어떤 시점에 어떤 항목을 사용해야하는지 혼동을 일으 킵니다. 간단히 말해 상수는 사용되는 곳마다 인라인되어 있으므로 상수를 사용하여 const 이름을 값으로 바꾸는 것과 동일하게 만듭니다. 반면 정적 변수는 모든 액세스가 공유하는 메모리의 단일 위치를 가리 킵니다. 이는 상수와 달리 소멸자를 가질 수 없으며 전체 코드베이스에서 단일 값으로 작동 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="27f67751d6c2a0da9be462a3eb2622352c2bd588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt; &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;유형&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;표현식&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="841cbcdeeab66fb4722b7b0400f1bb8e2de851cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;code&gt;extern&lt;/code&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;unsafe&lt;/code&gt; &lt;sup&gt;않습니까? &lt;/sup&gt;( &lt;code&gt;extern&lt;/code&gt; &lt;em&gt;Abi &lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6edbd1e6db32e0b534caaa28cd5a2bec38d70299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index(index)&lt;/code&gt;, but only when used as an immutable value. If a mutable value is requested, &lt;a href=&quot;trait.indexmut&quot;&gt;&lt;code&gt;IndexMut&lt;/code&gt;&lt;/a&gt; is used instead. This allows nice things such as &lt;code&gt;let value = v[index]&lt;/code&gt; if the type of &lt;code&gt;value&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;container[index]&lt;/code&gt; 는 실제로 &lt;code&gt;*container.index(index)&lt;/code&gt; 구문 설탕 이지만 변경할 수없는 값으로 사용될 때만 해당됩니다. 변경 가능한 값이 요청되면 &lt;a href=&quot;trait.indexmut&quot;&gt; &lt;code&gt;IndexMut&lt;/code&gt; &lt;/a&gt; 이 대신 사용됩니다. 이 같은 좋은 일 수 있습니다 &lt;code&gt;let value = v[index]&lt;/code&gt; 의 입력하면 &lt;code&gt;value&lt;/code&gt; 구현은 &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7922f6af9504dc9e782af79c29fcec29f07a47bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index_mut(index)&lt;/code&gt;, but only when used as a mutable value. If an immutable value is requested, the &lt;a href=&quot;trait.index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; trait is used instead. This allows nice things such as &lt;code&gt;v[index] = value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;container[index]&lt;/code&gt; 는 실제로 &lt;code&gt;*container.index_mut(index)&lt;/code&gt; 구문 설탕 이지만 변경 가능한 값으로 사용되는 경우에만 해당됩니다. 불변 값이 요청되면 대신 &lt;a href=&quot;trait.index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; 특성이 사용됩니다. 이것은 &lt;code&gt;v[index] = value&lt;/code&gt; 와 같은 멋진 것들을 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="1ffabd242f9d8704e26604953ecba9b24de0815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; - continue to the next loop iteration</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; -다음 루프 반복으로 계속</target>
        </trans-unit>
        <trans-unit id="0696cb116b57c6eb9b11a807f253157cd13a3a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="0beeb61ae0d4aaed192160e85d023c0240a1ddb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2138b0c04148fc58311ffc550ac7f06c1bdc9071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memmove&quot;&gt;&lt;code&gt;memmove&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped. Copying takes place as if the bytes were copied from &lt;code&gt;src&lt;/code&gt; to a temporary array and then copied from the array to &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; 는 의미 적으로 C의 &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memmove&quot;&gt; &lt;code&gt;memmove&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 인수 순서가 바뀌 었습니다. 바이트가 &lt;code&gt;src&lt;/code&gt; 에서 임시 배열로 복사 된 다음 배열에서 &lt;code&gt;dst&lt;/code&gt; 로 복사 된 것처럼 복사가 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5280138888afc90db0844cf27c061078c4fda42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy_nonoverlapping&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memcpy&quot;&gt;&lt;code&gt;memcpy&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped.</source>
          <target state="translated">&lt;code&gt;copy_nonoverlapping&lt;/code&gt; 은 의미 적으로 C의 &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memcpy&quot;&gt; &lt;code&gt;memcpy&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 인수 순서가 바뀌 었습니다.</target>
        </trans-unit>
        <trans-unit id="3f3b0484871a409017a3046e83cc932f818725ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is in units of T; e.g., a &lt;code&gt;count&lt;/code&gt; of 3 represents a pointer offset of &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 는 T 단위입니다. 예를 들어, &lt;code&gt;count&lt;/code&gt; 3은 &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 의 포인터 오프셋을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="39e364d3d805cbae7765e75b78c4fcbd794d85ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; - link an external crate or a macro variable representing the crate in which the macro is defined</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; -외부 상자 또는 매크로가 정의 된 상자를 나타내는 매크로 변수를 연결합니다</target>
        </trans-unit>
        <trans-unit id="a63bcddfba903216c2dd02c2cd1c9eca5434e078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; can also be used as in conjunction with &lt;code&gt;pub&lt;/code&gt; to signify that the item it's attached to is public only to other members of the same crate it's in.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; 는 &lt;code&gt;pub&lt;/code&gt; 와 함께 사용하여 연결된 항목이 같은 크레이트의 다른 구성원에게만 공개된다는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4e1b1a11c74c128aef1900df332f0bcea17de4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; is also used as in conjunction with &lt;code&gt;pub&lt;/code&gt; to signify that the item it's attached to is public only to other members of the same crate it's in.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; 는 &lt;code&gt;pub&lt;/code&gt; 과 함께 사용되어 연결된 항목이 동일한 크레이트의 다른 구성원에게만 공개됨 을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="598d8f9c01b86300cde6cf04124a56a86445bb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; is also used to represent the absolute path of a module, where &lt;code&gt;crate&lt;/code&gt; refers to the root of the current crate. For instance, &lt;code&gt;crate::foo::bar&lt;/code&gt; refers to the name &lt;code&gt;bar&lt;/code&gt; inside the module &lt;code&gt;foo&lt;/code&gt;, from anywhere else in the same crate.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; 는 모듈의 절대 경로를 나타내는데도 사용됩니다. 여기서 &lt;code&gt;crate&lt;/code&gt; 는 현재 상자의 루트를 나타냅니다. 예를 들어, &lt;code&gt;crate::foo::bar&lt;/code&gt; 이름을 참조 &lt;code&gt;bar&lt;/code&gt; 모듈 내부 &lt;code&gt;foo&lt;/code&gt; 는 같은 상자에 다른 곳에서.</target>
        </trans-unit>
        <trans-unit id="9ffb90a99ca4ad20d943dc5f20252cb967816477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; resolves the path relative to the current crate. &lt;code&gt;crate&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; 는 현재 크레이트에 상대적인 경로를 해결합니다. &lt;code&gt;crate&lt;/code&gt; 는 선행 &lt;code&gt;::&lt;/code&gt; 없이 첫 번째 세그먼트로만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f017b1a8225840fa63dd258af080a13ba8cd6e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for boths reads and writes for &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; many bytes, and it must be properly aligned. This means in particular:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 많은 바이트의 읽기 및 쓰기 모두에 &lt;a href=&quot;../ptr/index#safety&quot;&gt;유효&lt;/a&gt; 해야하며 올바르게 정렬되어야합니다. 이것은 특히 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b7c034eb8868ff6752497cc351dd650ef13f0403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads for &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; many bytes, and it must be properly aligned. This means in particular:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 많은 바이트에 대한 읽기에 &lt;a href=&quot;../ptr/index#safety&quot;&gt;유효&lt;/a&gt; 해야하며 올바르게 정렬되어야합니다. 이것은 특히 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="78d2a0f578efcf7eb330b7937555c08fdecc6ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be non-null and aligned even for zero-length slices. One reason for this is that enum layout optimizations may rely on references (including slices of any length) being aligned and non-null to distinguish them from other data. You can obtain a pointer that is usable as &lt;code&gt;data&lt;/code&gt; for zero-length slices using &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 는 널이 아니어야하며 길이가 0 인 슬라이스의 경우에도 정렬되어야합니다. 한 가지 이유는 열거 형 레이아웃 최적화가 다른 데이터와 구별하기 위해 정렬되고 널이 아닌 참조 (모든 길이의 슬라이스 포함)에 의존 할 수 있기 때문입니다. &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt; &lt;code&gt;NonNull::dangling()&lt;/code&gt; &lt;/a&gt; 사용하여 길이가 0 인 슬라이스에 대한 &lt;code&gt;data&lt;/code&gt; 로 사용할 수있는 포인터를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d894a77e0c2b3d3320a6b0b693417d5746924d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be non-null and aligned, even for zero-length slices. One reason for this is that enum layout optimizations may rely on references (including slices of any length) being aligned and non-null to distinguish them from other data. You can obtain a pointer that is usable as &lt;code&gt;data&lt;/code&gt; for zero-length slices using &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 길이가 0 인 슬라이스의 경우에도 데이터 는 null이 아니고 정렬되어야합니다. 그 이유 중 하나는 열거 형 레이아웃 최적화가 다른 데이터와 구별하기 위해 정렬되고 null이 아닌 참조 (모든 길이의 슬라이스 포함)에 의존 할 수 있기 때문입니다. &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt; &lt;code&gt;NonNull::dangling()&lt;/code&gt; &lt;/a&gt; 사용하여 길이가 0 인 슬라이스에 대한 &lt;code&gt;data&lt;/code&gt; 로 사용할 수있는 포인터를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1180afb66886fd8d65c4d5fa126deb1f675d85db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must point to &lt;code&gt;len&lt;/code&gt; consecutive properly initialized values of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 유형의 &lt;code&gt;len&lt;/code&gt; 연속적으로 적절하게 초기화 된 값을 가리켜 야합니다 .</target>
        </trans-unit>
        <trans-unit id="f19de63111f9469b121b61357f666702da60da31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;#method.to_string-4&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;default fn &lt;a href=&quot;#method.to_string-4&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a46b1bd3f31c790051e2f9d596618ff2ad86f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;../../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;default fn &lt;a href=&quot;../../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16b1548ac86b04e80d77460f971c9cb004e87b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;default fn &lt;a href=&quot;../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e85dfd2fefb1e456711204d8c749fd02db9ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;default fn &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e8ec98a724df9476a349e1a8736e2ca8608def1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;default fn &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52d4673a84f7b28e406f0fc9af95309afee4bdc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimited sequence&lt;/code&gt;: a sequence of token trees with appropriate open- and close-delimiters at the start and end of the sequence.</source>
          <target state="translated">&lt;code&gt;delimited sequence&lt;/code&gt; : 시퀀스의 시작과 끝에 적절한 열기 및 닫기 구분 기호가있는 토큰 트리 시퀀스.</target>
        </trans-unit>
        <trans-unit id="7a79f15887cb90c07b9ee24e25d320935f6738e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter token&lt;/code&gt;: a token that is meant to divide the end of one fragment and the start of the next fragment.</source>
          <target state="translated">&lt;code&gt;delimiter token&lt;/code&gt; : 한 조각의 끝과 다음 조각의 시작을 나누는 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="f73c7ab087b23c5e5dec3f19d99f0f663fa6e00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deny(C)&lt;/code&gt; signals an error after encountering a violation of &lt;code&gt;C&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;deny(C)&lt;/code&gt; 위반 발생한 후 오류 신호 &lt;code&gt;C&lt;/code&gt; 를 ,</target>
        </trans-unit>
        <trans-unit id="9b817753a2a3c36dba0b52cb148a1d21d3330091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated = &quot;message&quot;&lt;/code&gt; &amp;mdash; Includes the given string in the deprecation message.</source>
          <target state="translated">&lt;code&gt;deprecated = &quot;message&quot;&lt;/code&gt; &amp;mdash; 지원 중단 메시지에 지정된 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="8feb3b2ad69d6c31751b70259c15452b126e5e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt; &amp;mdash; Issues a generic message.</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; &amp;mdash; 일반 메시지를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="0e6b5724fa0485aeadd8c4027a06e4f3e95b6c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;derive&lt;/code&gt; was applied on something which is not a struct, a union or an enum.</source>
          <target state="translated">&lt;code&gt;derive&lt;/code&gt; 는 구조체, 공용체 또는 열거 형이 아닌 것에 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="d62cbd52bbe281b1702d615a7e288f1d94adb2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; &amp;mdash; Specifies documentation. See &lt;a href=&quot;https://doc.rust-lang.org/rustdoc/the-doc-attribute.html&quot;&gt;The Rustdoc Book&lt;/a&gt; for more information. &lt;a href=&quot;comments#doc-comments&quot;&gt;Doc comments&lt;/a&gt; are transformed into &lt;code&gt;doc&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; &amp;mdash; 문서를 지정합니다. 자세한 내용 &lt;a href=&quot;https://doc.rust-lang.org/rustdoc/the-doc-attribute.html&quot;&gt;은 Rustdoc Book&lt;/a&gt; 을 참조하십시오. &lt;a href=&quot;comments#doc-comments&quot;&gt;문서 주석은 &lt;/a&gt; &lt;code&gt;doc&lt;/code&gt; 속성 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="43933bacc6b89a9f817b7115ae0c9b2c7936ef8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 쓰기에 dst 가 &lt;a href=&quot;../ptr/index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c931f48276f8f024284b0c801c02fcd5f796845c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for both reads and writes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; 는 읽기 및 쓰기 모두에 &lt;a href=&quot;index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b028ef783ca568905a249a0d460a81e83c0bc5a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 쓰기에 dst 가 &lt;a href=&quot;index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de4ab832bf8bb7436095248fbd5bba34d72eb11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; 는 쓰기에 &lt;a href=&quot;index#safety&quot;&gt;유효&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="96e81d94a5cf609b14de81727277d5527705074d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; 가 올바르게 정렬되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d9e5a1b33f89214de414f25bebe0ad6bc131388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.write_unaligned&quot;&gt;&lt;code&gt;write_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; 가 올바르게 정렬되어야합니다. &lt;a href=&quot;fn.write_unaligned&quot;&gt; &lt;code&gt;write_unaligned&lt;/code&gt; &lt;/a&gt; 않은 경우 write_unaligned를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="261b3932be37ec0055eca3cd7989a210c36349b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must point to a properly initialized value of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 유형의 적절하게 초기화 된 값을 가리켜 야합니다 .</target>
        </trans-unit>
        <trans-unit id="6acc52d89a95930039e7e1e99b5e670f54ac7ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dylib&lt;/code&gt; &amp;mdash; Indicates a dynamic library. This is the default if &lt;code&gt;kind&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;code&gt;dylib&lt;/code&gt; &amp;mdash; 동적 라이브러리를 나타냅니다. &lt;code&gt;kind&lt;/code&gt; 가 지정되지 않은 경우 이것이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="034a6ce0d70ca3e940a1fc63bf893f750f9f1711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn 'static + Trait&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dyn 'static + Trait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea02327924e29324ada9c0424537a40b3b2305cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn Trait&lt;/code&gt; metadata is invalid if it is not a pointer to a vtable for &lt;code&gt;Trait&lt;/code&gt; that matches the actual dynamic trait the pointer or reference points to.</source>
          <target state="translated">&lt;code&gt;dyn Trait&lt;/code&gt; 메타 데이터는 포인터 또는 참조가 가리키는 실제 동적 특성과 일치하는 &lt;code&gt;Trait&lt;/code&gt; 의 vtable에 대한 포인터가 아닌 경우 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="23e340fb4a4b0caa32b7d2e8ad15494aa86512dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn Trait&lt;/code&gt; types</source>
          <target state="translated">&lt;code&gt;dyn Trait&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="827f9f7bd5f1051a386e0868226b58eb2eda3f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt; - dynamic dispatch to a trait object</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt; - 특성 객체에 동적 디스패치</target>
        </trans-unit>
        <trans-unit id="3cb07d7d8980667939a3bf4535c9ef1196022493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt; is a prefix of a &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;'s type.</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt; 은 &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;특성 개체&lt;/a&gt; 유형 의 접두사입니다 .</target>
        </trans-unit>
        <trans-unit id="f0a10f1bed70878fd0ba7e8e9181ab78c7bfe373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1be40e01959ab68fc84f5e952837b0e0708fd058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6bb65230c2b93b9d2d927f2b34828791b16e81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddba4749cbc07e8be9397562ec53f287ea168934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerexp&quot;&gt;&lt;code&gt;LowerExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerexp&quot;&gt; &lt;code&gt;LowerExp&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd1452095a075a24ee1ad4d6d68ffe669400e190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 서식.</target>
        </trans-unit>
        <trans-unit id="7f6a572ec5fe3819e41313ce8ae770420befd475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; - fallback for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;if let&lt;/code&gt; control flow constructs</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; - &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;if let&lt;/code&gt; 제어 흐름 구성에 대한 대체</target>
        </trans-unit>
        <trans-unit id="d4a4fa94d46ab690b56f979c2b91a7554583ffa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; expressions are optional. When no else expressions are supplied it is assumed to evaluate to the unit type &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 표현식은 선택 사항입니다. 다른 표현식이 제공되지 않으면 단위 유형 &lt;code&gt;()&lt;/code&gt; 으로 평가되는 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="94b8fd749dd504215bb0cdf1bb6624abc4dc8440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty fragment&lt;/code&gt;: The class of invisible Rust syntax that separates tokens, i.e. whitespace, or (in some lexical contexts), the empty token sequence.</source>
          <target state="translated">&lt;code&gt;empty fragment&lt;/code&gt; : 토큰, 즉 공백이나 (일부 어휘 문맥에서) 빈 토큰 시퀀스를 분리하는 보이지 않는 Rust 구문 클래스.</target>
        </trans-unit>
        <trans-unit id="4355176137b0192fb3f628dd27ea1caed4fe3f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; - define an enumeration</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; -열거 형 정의</target>
        </trans-unit>
        <trans-unit id="ea8832e95d01a4faaf4212c64c70282a2c070cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea3e56fd591be6044f03d9bd0d61079d7ba5b448" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerate()&lt;/code&gt; keeps its count as a &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;. If you want to count by a different sized integer, the &lt;a href=&quot;#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; function provides similar functionality.</source>
          <target state="translated">&lt;code&gt;enumerate()&lt;/code&gt; 는 카운트를 &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; 로 유지합니다 . 다른 크기의 정수로 계산하려는 경우 &lt;a href=&quot;#method.zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt; 함수는 유사한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ef32b716e27a370dccaad4614513fb26deef1bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerate()&lt;/code&gt; keeps its count as a &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;. If you want to count by a different sized integer, the &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; function provides similar functionality.</source>
          <target state="translated">&lt;code&gt;enumerate()&lt;/code&gt; 는 카운트를 &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; 로 유지합니다 . 다른 크기의 정수로 계산하려면 &lt;a href=&quot;trait.iterator#method.zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt; 함수가 유사한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6bd2e5af21d049a4452c5fb8ab4704b5f8208c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exec&lt;/code&gt; not returning has the same implications as calling &lt;a href=&quot;../../../process/fn.exit&quot;&gt;&lt;code&gt;process::exit&lt;/code&gt;&lt;/a&gt; &amp;ndash; no destructors on the current stack or any other thread&amp;rsquo;s stack will be run. Therefore, it is recommended to only call &lt;code&gt;exec&lt;/code&gt; at a point where it is fine to not run any destructors. Note, that the &lt;code&gt;execvp&lt;/code&gt; syscall independently guarantees that all memory is freed and all file descriptors with the &lt;code&gt;CLOEXEC&lt;/code&gt; option (set by default on all file descriptors opened by the standard library) are closed.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 반환하지 않는 exec 는 &lt;a href=&quot;../../../process/fn.exit&quot;&gt; &lt;code&gt;process::exit&lt;/code&gt; &lt;/a&gt; 호출과 같은 의미를 갖습니다. &amp;ndash; 현재 스택이나 다른 스레드 스택에서 소멸자가 실행되지 않습니다. 따라서 소멸자를 실행하지 않는 것이 좋은 시점 에서만 &lt;code&gt;exec&lt;/code&gt; 를 호출하는 것이 좋습니다 . 참고 것을 &lt;code&gt;execvp&lt;/code&gt; 는의 콜 독립적으로 모든 메모리가 해제되는 것을 보장하고 모든 파일 설명 &lt;code&gt;CLOEXEC&lt;/code&gt; 옵션 (표준 라이브러리에 의해 열린 모든 파일 기술자에 기본적으로 설정)이 닫혀있다.</target>
        </trans-unit>
        <trans-unit id="ab28125fd037c386267b67a9a34848916b30f004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export_name&lt;/code&gt; attributes may not contain null characters (&lt;code&gt;\0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;export_name&lt;/code&gt; 속성은 널 문자 ( &lt;code&gt;\0&lt;/code&gt; )를 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5c417cae1cabbe8c4d775d30bddeccbba842d7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr.0&lt;/code&gt;, &lt;code&gt;expr.1&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;expr.0&lt;/code&gt; , &lt;code&gt;expr.1&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="a1abeb015eeec94ebb32cf39bdbed03229503438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;stmt&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, or &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 및 &lt;code&gt;stmt&lt;/code&gt; 단지 하나의 뒤에는 수 &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , 또는 &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a909b8761907098afd07f60822603767fd676c6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt;: an &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; : &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;표현식&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77cc4ba05cbcfdd985069e0752d2e3e53bb2f4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr[..]&lt;/code&gt;, &lt;code&gt;expr[a..]&lt;/code&gt;, &lt;code&gt;expr[..b]&lt;/code&gt;, &lt;code&gt;expr[a..b]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expr[..]&lt;/code&gt; , &lt;code&gt;expr[a..]&lt;/code&gt; , &lt;code&gt;expr[..b]&lt;/code&gt; , &lt;code&gt;expr[a..b]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52b26b6f9ae54748308286769ddeb2d2987b5340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;ABI&quot; { ... }&lt;/code&gt; blocks declare functions with ABI &quot;ABI&quot;. The default here is &quot;C&quot;, i.e., functions declared in an &lt;code&gt;extern {...}&lt;/code&gt; block have &quot;C&quot; ABI.</source>
          <target state="translated">&lt;code&gt;extern &quot;ABI&quot; { ... }&lt;/code&gt; 블록은 ABI &quot;ABI&quot;로 함수를 선언합니다. 여기서 기본값은 &quot;C&quot;입니다. 즉, &lt;code&gt;extern {...}&lt;/code&gt; 블록에 선언 된 함수 에는 &quot;C&quot;ABI가 있습니다.</target>
        </trans-unit>
        <trans-unit id="43776c58871f631946b9d5f6b5d715885ee8184c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;C&quot;&lt;/code&gt; -- This is the same as &lt;code&gt;extern fn foo()&lt;/code&gt;; whatever the default your C compiler supports.</source>
          <target state="translated">&lt;code&gt;extern &quot;C&quot;&lt;/code&gt; &lt;code&gt;extern fn foo()&lt;/code&gt; 과 동일합니다. fn foo () ; C 컴파일러가 지원하는 기본값이 무엇이든.</target>
        </trans-unit>
        <trans-unit id="5b334c4a5aeb36c61ea7f5a6818b2713eb85d492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;Rust&quot;&lt;/code&gt; -- The default ABI when you write a normal &lt;code&gt;fn foo()&lt;/code&gt; in any Rust code.</source>
          <target state="translated">&lt;code&gt;extern &quot;Rust&quot;&lt;/code&gt; -Rust 코드에서 일반 &lt;code&gt;fn foo()&lt;/code&gt; 를 쓸 때 기본 ABI 입니다.</target>
        </trans-unit>
        <trans-unit id="735f8df84f7dac6186d48a60dde78f9b38763118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;aapcs&quot;&lt;/code&gt; -- The default for ARM.</source>
          <target state="translated">&lt;code&gt;extern &quot;aapcs&quot;&lt;/code&gt; -ARM 의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="2c0970f24833633c0d00ee34ad271a2a4c723a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;cdecl&quot;&lt;/code&gt; -- The default for x86_32 C code.</source>
          <target state="translated">&lt;code&gt;extern &quot;cdecl&quot;&lt;/code&gt; -x86_32 C 코드의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="d3e9d24e2f4403852a174e00b796145c7f315402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;fastcall&quot;&lt;/code&gt; -- The &lt;code&gt;fastcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__fastcall&lt;/code&gt; and GCC and clang's &lt;code&gt;__attribute__((fastcall))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;fastcall&quot;&lt;/code&gt; - &lt;code&gt;fastcall&lt;/code&gt; ABI - MSVC의에 해당 &lt;code&gt;__fastcall&lt;/code&gt; 및 GCC와 그 소리의 &lt;code&gt;__attribute__((fastcall))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3f0cebe929c94d3119bff41cd45a3d2c03bccd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;platform-intrinsic&quot;&lt;/code&gt; -- Specific platform intrinsics -- like, for example, &lt;code&gt;sqrt&lt;/code&gt; -- have this ABI. You should never have to deal with it.</source>
          <target state="translated">&lt;code&gt;extern &quot;platform-intrinsic&quot;&lt;/code&gt; &lt;code&gt;sqrt&lt;/code&gt; 와 같은 특정 플랫폼 내장 은이 ABI를 갖습니다. 당신은 그것을 다루지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="4e9f664c97a6a9cf351469a86c8d20269aa52712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d67c908dae180a926945fb06ebde6ea9dc390669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call-1&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call-1&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d40a25b1dd82d7760c6614b5fc2b757a225487bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8e32c01fe2be88693306f1ecc9a8c919b9be1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-1&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-1&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6fec7d49f7b35bb51cf1aee7f23297673d17ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-2&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-2&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="655db096f8c466c5514d23293ea6c7054302f1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2065a21ba0e09d1ff858f6bff973de9663ff1f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-1&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-1&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a18da09fffc67f7b2c132690ca260193a47cdb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-2&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-2&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47c412e0b3a6707ce3be771b1b0d8a4b52a8c66e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-3&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-3&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1a10e2e6a113444245e8f62845faccf3791b6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-3&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812237c365475580f32cc03a95b8039099f9738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae792767c60daff89ea3225e05693ebdf1c77bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d50a90ab82c680013374390a4ec710968724b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb668b8e18b4b6fcbb28c5e73c0d407969cd322a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade2cf695a43004fb29865be9619b537d565bc51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="509a0610edb5841305c650ae89da273b6ded7f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7df0d23e0b7a4fb5b06f606f4e2599459b64e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d876b7a16aecbe27172467a230d278d15bb11ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6528250955eeacf7b289a8df27f8570fbbc35b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9630d859ad4cbb2bea4bace68f4178cd38dfefc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="428786e953acb8b96029b0dccd4c593f0d095153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot;&lt;/code&gt; -- The ABI of the Fn::call trait functions.</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot;&lt;/code&gt; -Fn :: call 특성 기능의 ABI.</target>
        </trans-unit>
        <trans-unit id="d661ceb0aed3aa193f98f99dda38ad58d52f5a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-intrinsic&quot;&lt;/code&gt; -- The ABI of rustc intrinsics.</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-intrinsic&quot;&lt;/code&gt; -rustc 내장 함수의 ABI</target>
        </trans-unit>
        <trans-unit id="8c1c12cdae3f4c1ed808e5f5f909374b6fe94167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;stdcall&quot;&lt;/code&gt; -- The default for the Win32 API on x86_32.</source>
          <target state="translated">&lt;code&gt;extern &quot;stdcall&quot;&lt;/code&gt; -x86_32의 Win32 API에 대한 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="582098149272d3e61d4dbad6f8da32061f8d22d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;system&quot;&lt;/code&gt; -- Usually the same as &lt;code&gt;extern &quot;C&quot;&lt;/code&gt;, except on Win32, in which case it's &lt;code&gt;&quot;stdcall&quot;&lt;/code&gt;, or what you should use to link to the Windows API itself</source>
          <target state="translated">&lt;code&gt;extern &quot;system&quot;&lt;/code&gt; &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; 제외하고는 일반적으로 extern &quot;C&quot; 와 동일합니다.이 경우 &lt;code&gt;&quot;stdcall&quot;&lt;/code&gt; 또는 Windows API 자체에 연결하는 데 사용해야하는 항목</target>
        </trans-unit>
        <trans-unit id="569db8c0e4f6efa7eb6a5332cb6d307342fdd23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;sysv64&quot;&lt;/code&gt; -- The default for C code on non-Windows x86_64.</source>
          <target state="translated">&lt;code&gt;extern &quot;sysv64&quot;&lt;/code&gt; -Windows x86_64 이외의 C 코드에 대한 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="153147a056a8508db6fa16a89d5f9f14114c629e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;vectorcall&quot;&lt;/code&gt; -- The &lt;code&gt;vectorcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__vectorcall&lt;/code&gt; and clang's &lt;code&gt;__attribute__((vectorcall))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;vectorcall&quot;&lt;/code&gt; - &lt;code&gt;vectorcall&lt;/code&gt; ABI - MSVC의에 해당 &lt;code&gt;__vectorcall&lt;/code&gt; 와 그 소리의 &lt;code&gt;__attribute__((vectorcall))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a787bb78fff68ce38f6681f8b3b78c7d578cf9c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;win64&quot;&lt;/code&gt; -- The default for C code on x86_64 Windows.</source>
          <target state="translated">&lt;code&gt;extern &quot;win64&quot;&lt;/code&gt; -x86_64 Windows에서 C 코드의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="153d6d8fe757226499396ffcefb6e51783cd0ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern crate&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;extern crate&lt;/code&gt; 선언</target>
        </trans-unit>
        <trans-unit id="95b8f128f80d62929b887ea9b46a530971f6a396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; - link an external crate, function, or variable</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; - 외부 상자, 기능 또는 변수 연결</target>
        </trans-unit>
        <trans-unit id="22fc48f7e4b779695041bd9e280cac32de319ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; 블록</target>
        </trans-unit>
        <trans-unit id="681614578876835068081e0c5a8a64ca3637d9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used in two different contexts within FFI. The first is in the form of external blocks, for declaring function interfaces that Rust code can call foreign code by.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; 은 FFI 내의 두 가지 다른 컨텍스트에서 사용됩니다. 첫 번째는 Rust 코드가 외부 코드를 호출 할 수있는 함수 인터페이스를 선언하기위한 외부 블록 형식입니다.</target>
        </trans-unit>
        <trans-unit id="8bfd6b1bcda6eb33f7e94c519a6cd4fc28e3475e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58b6ac8604fa45768a7e53ca42728a3ba2b55999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34e5016203ba56bf279e73ecef5551a33aa074d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt; | &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; | &lt;code&gt;f64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec2140d9054ef990bc25506d73da564cfaf9a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; , &lt;code&gt;f64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4711a5f48e98b2dde4c760b6dc9bc8f0b89eb745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - Boolean false literal</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - 부울 거짓 리터럴</target>
        </trans-unit>
        <trans-unit id="2b3d6551e1901ed6879f8189236628146c6e0b8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; casts to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; casts to &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 는 &lt;code&gt;0&lt;/code&gt; 으로 , &lt;code&gt;true&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 로 캐스트</target>
        </trans-unit>
        <trans-unit id="bd0cdf4b97c132b2c5d1c766846cf8e2d6b30d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is the logical opposite of &lt;a href=&quot;keyword.true&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 는 &lt;a href=&quot;keyword.true&quot;&gt; &lt;code&gt;true&lt;/code&gt; &lt;/a&gt; 의 논리적 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="7178d13c12363318fa78ea24f5512ec134b9cf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;feature&lt;/code&gt; &amp;mdash; Used to enable unstable or experimental compiler features. See &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/index.html&quot;&gt;The Unstable Book&lt;/a&gt; for features implemented in &lt;code&gt;rustc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;feature&lt;/code&gt; &amp;mdash; 불안정하거나 실험적인 컴파일러 기능을 활성화하는 데 사용됩니다. &lt;code&gt;rustc&lt;/code&gt; 에 구현 된 기능 &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/index.html&quot;&gt;은 불안정한 책&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5aa9e9cd828ae38380f8bd8601a8c31b914c4db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_add&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_add&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="8c59e533b3d06a5d947c681280ea9e78733da4a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_and&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_and&lt;/code&gt; 는 이 연산의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="a1d9ace641701080aaea3228bb93bb99a39b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_max&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_max&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="5cd82f562fc0ea950b7943c47003a6708273f1d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_min&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_min&lt;/code&gt; 은이 작업 의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="31c1ac608c51edf9a6a68131d1c3f36902e7f133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_nand&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_nand&lt;/code&gt; 는 이 연산의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c02b89baa32a94ffc60d1b1d20326ac55aa3b73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_or&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_or&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="831e311e7133bfc96d832f51d13479a90fa5f6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_sub&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_sub&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="678e4e22af7936d0f120f5f8f5890cfe9fe36c3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for loads and failed updates while the second describes the required ordering when the operation finally succeeds. Beware that this is different from the two modes in &lt;a href=&quot;#method.compare_exchange&quot;&gt;&lt;code&gt;compare_exchange&lt;/code&gt;&lt;/a&gt;!</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는로드 및 실패한 업데이트에 필요한 순서를 설명하고 두 번째는 작업이 성공적으로 완료 될 때 필요한 순서를 설명합니다. 이것은 &lt;a href=&quot;#method.compare_exchange&quot;&gt; &lt;code&gt;compare_exchange&lt;/code&gt; &lt;/a&gt; 의 두 모드와 다르다는 것을 명심하십시오 !</target>
        </trans-unit>
        <trans-unit id="254e216689dbf965118d4c3344befd71b2609d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicbool#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicBool::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3093439a4889127e656a75cc6bfc25c103ff87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici16#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI16::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomici16#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicI16::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="6d183030f03026790e737234e42cfcafd573feb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici32#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI32::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomici32#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicI32::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="98d47bf7feedd6e7142df4367288c814d841abb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici64#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI64::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomici64#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicI64::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="afd04d4cb029cf57c89de44702b6c5bce0ea2ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici8#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI8::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomici8#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicI8::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="6bd90df1e4d3aa12ce79deddbf57734c47d9a607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicisize#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicIsize::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이들은 각각 &lt;a href=&quot;struct.atomicisize#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicIsize::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="42d07bbf486b315e029b543060e37d43845798b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicptr#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicPtr::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d94fad7c9dea97518418c161bf1cc50fa751492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu16#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU16::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이들은 각각 &lt;a href=&quot;struct.atomicu16#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicU16::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="a52a7609c74dc1eb320af3da138c4895397d54e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu32#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU32::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomicu32#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicU32::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0bc0c32d541c80d93bc979fb39be47ce546104fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu64#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU64::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이는 각각 &lt;a href=&quot;struct.atomicu64#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicU64::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="278e82c49bf8bea540134252919c7e966b4da42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu8#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU8::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이들은 각각 &lt;a href=&quot;struct.atomicu8#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicU8::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="aee00032edab463aa5ee17506231eb2916ba4515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicusize#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicUsize::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; 는 이 작업의 메모리 순서를 설명하기 위해 두 개의 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 첫 번째는 작업이 마침내 성공할 때 필요한 순서를 설명하고 두 번째는로드에 필요한 순서를 설명합니다. 이들은 각각 &lt;a href=&quot;struct.atomicusize#method.compare_exchange&quot;&gt; &lt;code&gt;AtomicUsize::compare_exchange&lt;/code&gt; &lt;/a&gt; 의 성공 및 실패 순서에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0a93055d2678cf2b8c8cb6f50fb72a30b7ce3724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_xor&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_xor&lt;/code&gt; 는 이 작업의 메모리 순서를 설명 하는 &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; 인수를 사용합니다. 모든 주문 모드가 가능합니다. &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 를 사용 하면이 작업의 저장소 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 가되고 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 를&lt;/a&gt; 사용하면로드 부분이 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0a53d4e55ecb9010d2ca250bb8469bf3338d388d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_map&lt;/code&gt; can be used to make chains of &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; more concise. The example below shows how a &lt;code&gt;map().filter().map()&lt;/code&gt; can be shortened to a single call to &lt;code&gt;filter_map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter_map&lt;/code&gt; 은 &lt;a href=&quot;trait.iterator#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 체인 과 &lt;a href=&quot;trait.iterator#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 보다 간결하게 만드는 데 사용할 수 있습니다 . 아래 예제는 &lt;code&gt;map().filter().map()&lt;/code&gt; 을 &lt;code&gt;filter_map&lt;/code&gt; 에 대한 단일 호출로 단축 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="76488373fdd9cdeeb3a1412d0e027eed75bc39dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; 가 단락되었습니다. 즉, 클로저가 &lt;code&gt;true&lt;/code&gt; 를 반환하자마자 처리를 중지 합니다 .</target>
        </trans-unit>
        <trans-unit id="ed4493e45dcee50fa0f542cf4d41d7d6d6298031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;find()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 클로저를 사용합니다 . 이 클로저를 반복자의 각 요소에 적용하고 그중 하나가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;find()&lt;/code&gt; 는 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(element)&lt;/code&gt; &lt;/a&gt; 반환합니다 . 모두 &lt;code&gt;false&lt;/code&gt; 를 반환하면 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7f27ba1c533216075116e91c889637e3dd866059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fmt::Display&lt;/code&gt; vs &lt;code&gt;fmt::Debug&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fmt::Display&lt;/code&gt; vs &lt;code&gt;fmt::Debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1351b60959f86467ca672d58a9d279e40c09252a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.access_mode&quot;&gt;access_mode&lt;/a&gt;(&amp;amp;mut self, access: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#263-266&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.access_mode&quot;&gt;access_mode&lt;/a&gt;(&amp;amp;mut self, access: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#263-266&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2931222c9dc09a9e9695b3faa5630e47b54e0a67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec2f6dd556f49261647cf5d2bae806fcae183806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a47dc3282fc5f9645146a9f3b4a75d89bf7b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-10&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-10&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99e2669953f6223501a028ea7834a20c4981d511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-100&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-100&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6af7749af1b873cb53d2f0bca1850856c2846453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-101&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-101&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc1fb13c480dfed17cc455a718ed6fca703de917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-102&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-102&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d054b0396218e604d396f1b15490ca60a1c61ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-103&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-103&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb418c4e1a12a9a187907c6b8a4bd9d29f337cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-104&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-104&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="149ec42a2cb068e42b9bf578d93720ccbd7e379a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-105&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-105&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e59e88f39f32b29850c5741784152ba0acaeeeea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-106&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-106&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98b5046a23bf101db818f397dc2222ba6ab5a3aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-107&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-107&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0995661b17371b1c38e3b3e7be979cee7bd23a95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-108&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-108&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64c81020c9f799450c10d3f782a53972774b5e5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-109&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-109&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69b0415a9b2eb2f25413bdce1617d17e18ecaf5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-11&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-11&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5af348bc4de4609cdb750ab3cdf27e988d6eb312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-12&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-12&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9adf33b9baf64eb1d119d86fb18303aab0f6708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-13&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-13&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f06c3314b721332703fc84f1d76ec8d0fb2e1662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-14&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-14&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc75bc9bc40f1c3d43e181fb34402f7443e47b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-15&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-15&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="451690856e64cbd10b06a01284afaf43c061adcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-16&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-16&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de71af1082516588868328eb58d795f2f3fc43f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-17&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-17&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b8e890ef56becc80d44d3179f29ce2cbb6dcef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-18&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-18&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdea44acf76d0f75ce724e6ca0a23f6cfd13bd08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-19&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-19&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25eec71eb2b0001dce0263f81a0fed995bf8e2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-2&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-2&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40e2632aee741c70e638232fbaf51043b203dfe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-20&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-20&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e061bf992d23a656556059c1ff1b713b42e7a45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-21&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-21&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afc9cedc26a627f9e7eaeb61b795f786f9de0e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-22&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-22&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="121d5b92693ddd77d1670043b4ba4dfd4aa840be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-23&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-23&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="728dd2e1a465a885f0f621ec90f249780d50903b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-24&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-24&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d72a497aa42c6a7d806c861780c6650036a1d73c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-25&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-25&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aaea05baa28d976af875b5d4dba72ef6cf134067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-26&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#878-880&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-26&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#878-880&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d12e6f797d500840f891ecea79a42059eaa25758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#367-369&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#367-369&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="543cc37c4c74e54f3f74a003cd73e03f1502a32b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#377-379&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f280eab6c6b2c712f8547857e82d3f2abda5abd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#532-534&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb0c9dfb09d23d57ca1c459b5ab89d81732ecc89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#542-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efa13f007cf0716e184fd8bf1f6437e04f7ba6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-29&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-29&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95984cf87e43b74c4ba1bd6b1331160bca92b8f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-3&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-3&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79be5983cd3c2cb1d0fbbdbac6a0f70e24d0de5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-30&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-30&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4ca0b4ecb4e2592512a3bd440a9d56f949740bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-31&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-31&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae3517529a0f5a8c723f3516ead6cda2b4c67592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-32&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-32&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="059e66e9156c1dc7b2630c2eb7c63bd22ba48eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-33&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-33&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d89750c775c91ea0e08ef1a550efd800a1fcdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-34&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-34&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64f83997a71b7d3297fdf41a502639ddb65e6f49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-35&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-35&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b90623b2d38e8c697cdbe4d1f0a414fca7aa1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-36&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-36&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c34c0ed1cc8ab983a0ee32c43dd9282661d9576f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-37&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2009-2012&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-37&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2009-2012&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="874bcb20103ec31ce539b2ff567ff9cfe101875f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-38&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-38&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac811bd320eba9fcf09df7ba2f96fcdfa8300d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-39&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-39&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="322cebba3be27dfeca25e56928984ba8153ad92b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-4&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-4&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9fd5959337d8a46be917da753bbcb5ce311a94d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-40&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-40&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="364c73b8d0f4d0ad13f7713642941c1f49db93bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-41&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-41&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd1bf4a82a513ab20461d8c85a54b7b671e91adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-42&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-42&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fec8b28e381d6d9de03e13252ec8a250af7ae3ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-43&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-43&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1cff7c481970b94b57774646c65c3f939aed185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-44&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-44&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f581546379ba8ad8edb7d4e612a2549f10674c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-45&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-45&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4f2832beababf38bcb0f47cbad117c2c94c6537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-46&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-46&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a248e1d55ea3360c16f3a16a4ede36102e6c7f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-47&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-47&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06d133186fafb9b2a3454a43d84180bc71f9fca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-48&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-48&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69650170aca1c6a31d55af84a77d2c8ffc0b05cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-49&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-49&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f6a27ae46067557ba371b84dd1468b296f1dd5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-5&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-5&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3085c82c0e3cb1d41278eca39b9c8d3a1c5d672d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-50&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-50&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e4d387d34c18250992d227fa90703a341b3c5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-51&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-51&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40c15f839e06147bed1735d57f65075468003585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-52&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-52&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1722d02c89475a8dca30c8902185510a6d39268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-53&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-53&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="435410f7c49d39fb09051e06188f7a62bd8ae1b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-54&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-54&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5acbca0043b7a4b50dcb7a8c71e5adff533cf6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-55&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-55&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cc8426c295d806e060754a6a95c72b3b93f71ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-56&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-56&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07d166c8420cf49ad5377301065b714750f5a61a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-57&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-57&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b39094f40be0daf6d382262dda56c63088ff19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-58&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-58&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb8dc7d3e14c76e4766452b13275d94f57053db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-59&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-59&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b3543785f135c48ac44c9d5786190e277656510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-6&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-6&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a65053c623b682cc57792466977054ff768df39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-60&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-60&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fe2fc6ad9b919bf2eecf09e87b0fb68876faa5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-61&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-61&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb0c0a36f6f9985d7987b4ebba0012857f5a5f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-62&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-62&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c265d41ca908b7470aa00658142f58d1001e3224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-63&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-63&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aab6e095e550c6ef6e44e784b2da1ba97fd0fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-64&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-64&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4b8c91719656a16d5cfdfe9dcae2f47d7299d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-65&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-65&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7cac1bb5f69f5822f9819784beac93d55d8ad02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-66&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-66&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fec5c38951d0eea8cde3006b05c60f12453c4d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-67&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-67&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f4ed479bbfa9bd5d8146b68936a37915e5e70d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-68&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-68&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d1ab536a0dcc7f36971ff6071f3cc0a3ff4c5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-69&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-69&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52695bb7706ed4391967d8a26cb65283e41e3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-7&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-7&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fde8718b5be0584ffa5e02963275f57c6e5c94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-70&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-70&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e49fb71202620cbf80859ffeefd8ccfb309e736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-71&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-71&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b51273d4cd139bc79595cf823798a21a5296c22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-72&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-72&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21bf761223e3f2d35916d9a2adaf9c976441248b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-73&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-73&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15f3e2082b92a03a3e2cbfb1c6dd73d7ced1cbac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-74&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-74&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06565401ab4db05211de457a33c052d5329e154a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-75&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-75&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e101d6af297a0bbabf37ddb512dd9fc431d5054b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-76&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-76&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27cd61c67944e1c65ac66af9b6e9478cf2050309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-77&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-77&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfc28989818fbe85bbb673c398e3844342d810b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-78&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-78&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8bb69f2b600103660af9d4906d830a10549e062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-79&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-79&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4888095d1e90b5144464a9ec8e6cd7df751cfd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-8&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-8&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5a45b04fccc4e22e640840625784f72e4546057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-80&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-80&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baeea318c0b02ec623d4e4512739969abb45f6ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-81&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-81&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dad232cc4e351882ab64787e4594bf415245d95c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-82&quot;&gt;add&lt;/a&gt;(self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#431-434&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-82&quot;&gt;add&lt;/a&gt;(self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#431-434&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3852d52a42771a0b93a1b50c82f034df42496c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-83&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#442-445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-83&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#442-445&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af9bdc684b05d8d89c94c0f806a4eed1ed42a5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-84&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-84&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4be94e166ff74b15313358f533e25704089b381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-85&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-85&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b8de1e654afb120723212bbbbb339bf4eed5263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-86&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-86&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a048b82e45700bc1f155f0079cb35d091bab2ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-87&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-87&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b788d4becd05049a797cbbc4f218f799e8a8d8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-88&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-88&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1da7332dba22cbca6ad9196e71398cd03544d4e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-89&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-89&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d292b12ae4c07fc3f29c22d8e3933bb55939a130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-9&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-9&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="983b5ba926d154e5750e6c86e5b61114e1d0346a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-90&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-90&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f54fa387a1ef8ffc9298e68563f0218424a56766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-91&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-91&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e864894d1aefa801105110da5870e2c6e33a7ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-92&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-92&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b71f0ebfb424e343dbba31ee8a6b9468b9b6b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-93&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-93&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63dc978521aa8f591e9c4d04e2a94f1449df81eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-94&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-94&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6605939993934bbd8404c63cc5d414b9306de43b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-95&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-95&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ce7df6b239d3c1a26627f099f6b7cf70e3ecffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-96&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-96&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e38c986ff80aea25254b941d9ad03163413d5e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-97&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-97&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3295edc890e612dd0d01608f662d1d15218d3e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-98&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-98&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a061e3980e869f9b567f023bdc910359175ed8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-99&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add-99&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c2d6d8ddd89f78b6cf7c10f8ad23bcb6f17858d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb27ad0b8bdfad38394cd86628a8c8f02825250e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-1&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-1&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="334562f63a073ad8b43956a270c9e9e42a19d781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-10&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-10&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d275a6fc41ee8950da475e8dadd206a7b57d308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-11&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-11&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeb52519db802979ec0e44086c205af1027aebf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-12&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-12&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3d8bca8f0269c46429750c5f3f1964f19ff6739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-13&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-13&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b195d03099e5091334c3741c5bebf7efae37a072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-14&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-14&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="723669b7aee784654221fcfe8edf06148bb27cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-15&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-15&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8be240cfc527f08344e6ecc64b6f5bbc4d4269a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-16&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-16&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8869c0698c5c2ce0fcabc9f63ba19a3e706c7447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-17&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-17&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7072a4d6be7a528f806a35946d619aba87bbe2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-18&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-18&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b960f01359f34867c784c6a7d3abe295459ab312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-19&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-19&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0455f498e684c28a77742da21656724dae2150d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-2&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-2&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bec6886c57cc51939283e15a49c3e6c37226bc37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-20&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-20&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76165ecaf06025de6ba298fbc13e1ccb8917fb07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-21&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-21&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e29efef58c8a1ae901e540c813e2c342c58f97d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-22&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-22&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26ce04a46440c1ef63bb08389e22592d21c0e340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-23&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-23&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c41bd94a25b9bb6301a174a324bb191788f033b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-24&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-24&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d7cc8cafbcaf01169a7e7af94a0a9afb7fd64bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-25&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-25&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3a78c3b41325fb457bb2f29f002c4a0ccfb3ba3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-26&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#885-887&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-26&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#885-887&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b6f07b60967bd62cd65fc7fba7913ab93aa9c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#374-376&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#374-376&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51f0b1928ad2fb89333e894cec2d941d5eed9d6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ca9803b6100ddbf99395923d3cd9e77e060673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#539-541&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#539-541&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca637fa14e7f105dcf99b4ebb85244d7a24de7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#549-551&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4f79dfd0c5bab9fc4ba84a06da8223cb5db46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-29&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-29&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47a92e4208c41b26baafc322e87f0a35799af2cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-3&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-3&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="899a742ef7414f8f763c50d8f9a41ad0b7756f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-30&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-30&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91ca2ece405ca3bd2596d1acd22fcb722d297d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-31&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-31&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96b6e2e354ab3880001524d2a77f9854dfaf25b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-32&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-32&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e3d2f81c9f26450e3d1f72aa88373ea3f6c32da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-33&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-33&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63bd74bfb257d5fc7c0933265a16654545b5ccea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-34&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-34&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a89da78a9b36426742081b0ef02487f9ba2d655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-35&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-35&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4d6056fb02c367d3552318f5623fc828e7a5d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-36&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-36&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a35c359b8133636e63c368eb758e0d3b790fa447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-37&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2021-2023&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-37&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2021-2023&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7f771f6b8de6b439b3797205b340b2700e75e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-38&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-38&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4ecaf65f541efd14b9243da22a6a33ff74b5459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-39&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-39&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7f5f3a6baca65dd6e3da2260e7d599124fc1bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-4&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-4&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="446cae21b16c9192468aea899e581578cdc2f9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-40&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-40&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="182524b13416d910feb99e655f5ccfc67665712f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-41&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-41&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8541b2541a402e698fe5f517e0370a8ad1e65bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-42&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-42&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="107b2ce5e18341b4cd744cfa20660f86a64b3cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-43&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-43&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bca3ca5e8c20d18534025b7c2f403ca02629a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-44&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-44&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8c83e53cc6d6bf8abb407b0f1139b663eba4dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-45&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-45&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2bc830571bad666339eb5810693b3f00d5c11ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-46&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-46&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8e67503a7a6b745988fe2382ddd6913f8c0403c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-47&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-47&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4444911403232e20585ea4c6a1cc41dec36cac1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-48&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-48&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d26c30cd98a99543fa892f0f2d46c063af81f8c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-49&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-49&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8359816a9a54c1654556c222e89e2d78d89f7ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-5&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-5&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7e402f0b39c70244e917cc54768d3cee3f3b889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-50&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-50&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87de7ec6488d96377260fd2aa38a2348fa449a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-51&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-51&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e84796cf9432561ba8b1ff7fae8e564989ab7eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-52&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-52&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec0d5e41835271733f9fa2e7b582d5a5d1c192f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-53&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-53&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9107530be80baa39bc1c8bad6d1c1305e40ecb0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-54&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-54&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dceee170ff92ba9c5e716d13b12772c6c7c6acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-55&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-55&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f98f502beda4727171706474c4c5daf38881a9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-56&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#450-461&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-56&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#450-461&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d382c92051d1a966c95a3244e566f956464bd265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-57&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#466-477&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-57&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#466-477&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="872ed53df58f8fa149a03f4ad41fd5bfd4c18b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-6&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-6&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc251ce08849a695483095d85dce053d733ddbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-7&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-7&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="461f828c292246b9d26a1acf7c053145271a27cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-8&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-8&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="937baee1a6f9708599d508f82502c6c69b9f1d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-9&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-9&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f5074fbef1fb0e0b322daaab26dfdbe13cc0d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-1&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#354-356&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-1&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#354-356&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="688a6c2b3e709ec59b7c4b870b2bcd757afb6b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-2&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#173-175&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-2&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#173-175&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="629de39a6b1660a5f5f8fafe108ca3d9da7a3655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-1&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#3297-3299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-1&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#3297-3299&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba777c4cb1c36d5d905786e18ecb5024c331872f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-2&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#128-130&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-2&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#128-130&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcfba64f8a8d05d3e7ee2c222fda4f4035eb8282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-1&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#239-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.all-1&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#239-244&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="922873c7e65946ccbd1f82696ed99de38ec4fd04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-2&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.all-2&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63184d43f17930347d463c02ba55a795243a8698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-3&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.all-3&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8945bd6ae9d2637b8414a3c72305ee2116e91c32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.alloc-1&quot;&gt;alloc&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#205-207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12abf1210323206557902931f11825948a0cc4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.alloc_zeroed-2&quot;&gt;alloc_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#210-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980fe1a200090ef2237c5c0802437e3bb5e6c1b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-1&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#247-252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.any-1&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#247-252&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e0f548d27f42c853e7d99ea8d55e35a14d91dc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-2&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.any-2&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86535d31e2a3704279c12ad1281f9b0716da2d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-3&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.any-3&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e83368767fa23b3000d85cd9841edb01778aa711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.arg0&quot;&gt;arg0&lt;/a&gt;&amp;lt;S&amp;gt;(&amp;amp;mut self, arg: S) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S: &lt;a href=&quot;../../../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#140-146&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.arg0&quot;&gt;arg0&lt;/a&gt;&amp;lt;S&amp;gt;(&amp;amp;mut self, arg: S) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S: &lt;a href=&quot;../../../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#140-146&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="639b879dac5387f22a5af36b261828c03187c9f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.arg0&quot;&gt;arg0&lt;/a&gt;&amp;lt;S&amp;gt;(&amp;amp;mut self, arg: S) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S: &lt;a href=&quot;../../../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#156-162&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94015d9d9b17754557425f90e8a69478a38199b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_bytes&quot;&gt;as_bytes&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys_common/os_str_bytes.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_bytes&quot;&gt;as_bytes&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sys_common/os_str_bytes.rs.html#283-285&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9a9806433a2241b20524668bcbfb211a6bd64e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2251-2253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2251-2253&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4172915e94b38f35815de6c2273e292e834eed80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-1&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;U&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#525-527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-1&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;U&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#525-527&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3b497d795ba5d7eae3972861f8f185685ff1274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-2&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#612-614&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-2&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#612-614&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e382f9f706fe2e3ace08a4c8aa3f2debea7e67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-3&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2680-2682&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-3&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2680-2682&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="367795eb6cc965adb3637b65c526bdc3b57b8764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-4&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2666-2668&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-4&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2666-2668&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f587ad7d3e9662de22aea3a692ccbe6207186f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-5&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1111-1113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-5&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1111-1113&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
