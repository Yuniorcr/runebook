<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="08cd4d7276034ce4fb54ef404f77f04a4bf925e3" translate="yes" xml:space="preserve">
          <source>Listing 14-3: An &lt;code&gt;art&lt;/code&gt; library with items organized into &lt;code&gt;kinds&lt;/code&gt; and &lt;code&gt;utils&lt;/code&gt; modules</source>
          <target state="translated">Listing 14-3 : &lt;code&gt;kinds&lt;/code&gt; 와 &lt;code&gt;utils&lt;/code&gt; 모듈 로 구성된 아이템이 있는 &lt;code&gt;art&lt;/code&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="18652571126ad8386cecac32ff97a3b38f9bc500" translate="yes" xml:space="preserve">
          <source>Listing 14-4: A crate using the &lt;code&gt;art&lt;/code&gt; crate&amp;rsquo;s items with its internal structure exported</source>
          <target state="translated">목록 14-4 : 내부 구조를 내 보낸 &lt;code&gt;art&lt;/code&gt; 상자 항목을 사용하는 상자</target>
        </trans-unit>
        <trans-unit id="6a570b6b6186a46bce3ac4aacbabe088d013d0f3" translate="yes" xml:space="preserve">
          <source>Listing 14-5: Adding &lt;code&gt;pub use&lt;/code&gt; statements to re-export items</source>
          <target state="translated">Listing 14-5 : &lt;code&gt;pub use&lt;/code&gt; 문을 추가 하여 아이템을 다시 내보내기</target>
        </trans-unit>
        <trans-unit id="d6312f93c5be154192161b883eed38925109f013" translate="yes" xml:space="preserve">
          <source>Listing 14-6: A program using the re-exported items from the &lt;code&gt;art&lt;/code&gt; crate</source>
          <target state="translated">리스팅 14-6 : &lt;code&gt;art&lt;/code&gt; 크레이트 에서 재수출 된 아이템을 사용하는 프로그램</target>
        </trans-unit>
        <trans-unit id="0fb0cc53aeca164991b29eb0d8ab6b1af71d3326" translate="yes" xml:space="preserve">
          <source>Listing 14-7: Using the &lt;code&gt;add-one&lt;/code&gt; library crate from the &lt;code&gt;adder&lt;/code&gt; crate</source>
          <target state="translated">코드 14-7 : &lt;code&gt;adder&lt;/code&gt; 상자 에서 &lt;code&gt;add-one&lt;/code&gt; 라이브러리 상자 사용</target>
        </trans-unit>
        <trans-unit id="d17fa866aef39e9d7d0c17f7358038f314c318c1" translate="yes" xml:space="preserve">
          <source>Listing 15-1 shows how to use a box to store an &lt;code&gt;i32&lt;/code&gt; value on the heap:</source>
          <target state="translated">Listing 15-1은 상자를 사용 하여 힙에 &lt;code&gt;i32&lt;/code&gt; 값 을 저장하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0d4242924fb6c785f162a09bc5d2fe1ca847e116" translate="yes" xml:space="preserve">
          <source>Listing 15-10: Implementing &lt;code&gt;Deref&lt;/code&gt; on &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">리스팅 15-10 : &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Deref&lt;/code&gt; 구현하기</target>
        </trans-unit>
        <trans-unit id="1a37d11ccc3798c8adeb9d5bd2484dc552c633d9" translate="yes" xml:space="preserve">
          <source>Listing 15-11: A &lt;code&gt;hello&lt;/code&gt; function that has the parameter &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;&amp;amp;str&lt;/code&gt;</source>
          <target state="translated">코드 15-11 : &lt;code&gt;&amp;amp;str&lt;/code&gt; 유형 의 매개 변수 &lt;code&gt;name&lt;/code&gt; 을 가진 &lt;code&gt;hello&lt;/code&gt; 함수</target>
        </trans-unit>
        <trans-unit id="5568aa245c3ca44a1e76ee65f95d3578696c3468" translate="yes" xml:space="preserve">
          <source>Listing 15-12: Calling &lt;code&gt;hello&lt;/code&gt; with a reference to a &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; value, which works because of deref coercion</source>
          <target state="translated">Listing 15-12 : &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; 값에 대한 참조로 &lt;code&gt;hello&lt;/code&gt; 호출 하기</target>
        </trans-unit>
        <trans-unit id="6c024965fb7532f846db55d2fce103e6ef71bc94" translate="yes" xml:space="preserve">
          <source>Listing 15-13: The code we would have to write if Rust didn&amp;rsquo;t have deref coercion</source>
          <target state="translated">Listing 15-13 : Rust가 역 참조를하지 않으면 작성해야 할 코드</target>
        </trans-unit>
        <trans-unit id="adff6d0cc3f4fa1a4ed3e66ddcf814db60a02d4f" translate="yes" xml:space="preserve">
          <source>Listing 15-14 shows a &lt;code&gt;CustomSmartPointer&lt;/code&gt; struct whose only custom functionality is that it will print &lt;code&gt;Dropping CustomSmartPointer!&lt;/code&gt; when the instance goes out of scope. This example demonstrates when Rust runs the &lt;code&gt;drop&lt;/code&gt; function.</source>
          <target state="translated">15-14 쇼 목록 &lt;code&gt;CustomSmartPointer&lt;/code&gt; 의 그의 유일한 사용자 정의 기능은 인쇄 것입니다 구조체 &lt;code&gt;Dropping CustomSmartPointer!&lt;/code&gt; 인스턴스가 범위를 벗어난 경우 이 예제는 Rust가 &lt;code&gt;drop&lt;/code&gt; 함수를 실행할 때를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="52d47c448cdc64e5a91e1c4aca16ea47ef0beae3" translate="yes" xml:space="preserve">
          <source>Listing 15-14: A &lt;code&gt;CustomSmartPointer&lt;/code&gt; struct that implements the &lt;code&gt;Drop&lt;/code&gt; trait where we would put our cleanup code</source>
          <target state="translated">Listing 15-14 : 정리 코드를 넣을 &lt;code&gt;Drop&lt;/code&gt; 특성 을 구현 하는 &lt;code&gt;CustomSmartPointer&lt;/code&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="ec4aa44fb09e06c7ceb13b695dde967f5f1ef075" translate="yes" xml:space="preserve">
          <source>Listing 15-15: Attempting to call the &lt;code&gt;drop&lt;/code&gt; method from the &lt;code&gt;Drop&lt;/code&gt; trait manually to clean up early</source>
          <target state="translated">Listing 15-15 : &lt;code&gt;Drop&lt;/code&gt; 특성 에서 &lt;code&gt;drop&lt;/code&gt; 메소드를 수동으로 호출하여 조기 정리</target>
        </trans-unit>
        <trans-unit id="2f40ac96f3ccd291a6c6fe1c9540aec6b3f9c290" translate="yes" xml:space="preserve">
          <source>Listing 15-16: Calling &lt;code&gt;std::mem::drop&lt;/code&gt; to explicitly drop a value before it goes out of scope</source>
          <target state="translated">코드 15-16 : &lt;code&gt;std::mem::drop&lt;/code&gt; 을 호출 하여 값이 범위를 벗어나기 전에 명시 적으로 삭제</target>
        </trans-unit>
        <trans-unit id="5329453e171ad9ee51b2ac0e7343fd6536e1d7d4" translate="yes" xml:space="preserve">
          <source>Listing 15-17: Demonstrating we&amp;rsquo;re not allowed to have two lists using &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; that try to share ownership of a third list</source>
          <target state="translated">Listing 15-17 : &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용하여 세 번째 목록의 소유권을 공유하려는 두 개의 목록을 가질 수 없음을 시연</target>
        </trans-unit>
        <trans-unit id="c433ad64df45e2defd53333d59e3199258515577" translate="yes" xml:space="preserve">
          <source>Listing 15-18: A definition of &lt;code&gt;List&lt;/code&gt; that uses &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 15-18 : &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용 하는 &lt;code&gt;List&lt;/code&gt; 의 정의</target>
        </trans-unit>
        <trans-unit id="d261e75633f42f6dc65090559e1101742762de87" translate="yes" xml:space="preserve">
          <source>Listing 15-19: Printing the reference count</source>
          <target state="translated">리스팅 15-19 : 참조 카운트 인쇄</target>
        </trans-unit>
        <trans-unit id="93277309dd71d80340ae8cdbc4d8dcde0239642c" translate="yes" xml:space="preserve">
          <source>Listing 15-1: Storing an &lt;code&gt;i32&lt;/code&gt; value on the heap using a box</source>
          <target state="translated">Listing 15-1 : 상자를 사용하여 힙에 &lt;code&gt;i32&lt;/code&gt; 값 저장</target>
        </trans-unit>
        <trans-unit id="97eb3e5299e49169210e147956f4d2e6505373a4" translate="yes" xml:space="preserve">
          <source>Listing 15-2 contains an enum definition for a cons list. Note that this code won&amp;rsquo;t compile yet because the &lt;code&gt;List&lt;/code&gt; type doesn&amp;rsquo;t have a known size, which we&amp;rsquo;ll demonstrate.</source>
          <target state="translated">Listing 15-2에는 단점 목록에 대한 열거 형 정의가 포함되어 있습니다. &lt;code&gt;List&lt;/code&gt; 유형의 크기가 알려지지 않았으므로이 코드는 아직 컴파일 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb67b3e6a05499f9fa0c058da14b25fa79ce9ca2" translate="yes" xml:space="preserve">
          <source>Listing 15-20: A library to keep track of how close a value is to a maximum value and warn when the value is at certain levels</source>
          <target state="translated">코드 15-20 : 값이 최대 값에 얼마나 가까운 지 추적하고 값이 특정 레벨에있을 때 경고하는 라이브러리</target>
        </trans-unit>
        <trans-unit id="141fe822d1303f26d8ebe1f7c46b8da90b350088" translate="yes" xml:space="preserve">
          <source>Listing 15-21: An attempt to implement a &lt;code&gt;MockMessenger&lt;/code&gt; that isn&amp;rsquo;t allowed by the borrow checker</source>
          <target state="translated">Listing 15-21 : 빌리 체커가 허용하지 않는 &lt;code&gt;MockMessenger&lt;/code&gt; 를 구현하려는 시도</target>
        </trans-unit>
        <trans-unit id="dfe14058820e9ed9b4226d26f07c498f5696cf00" translate="yes" xml:space="preserve">
          <source>Listing 15-22: Using &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; to mutate an inner value while the outer value is considered immutable</source>
          <target state="translated">Listing 15-22 : &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용 하여 내부 값을 변경하고 외부 값은 변경 불가능한 것으로 간주</target>
        </trans-unit>
        <trans-unit id="266fca035b941bba83ca32885d5d4117eab995c6" translate="yes" xml:space="preserve">
          <source>Listing 15-23: Creating two mutable references in the same scope to see that &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; will panic</source>
          <target state="translated">Listing 15-23 : &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 이 패닉 상태 가 되도록 동일한 범위에서 두 개의 가변 참조 생성</target>
        </trans-unit>
        <trans-unit id="d6cf153a700dd2365ffdecaf10f183c9db90ffbd" translate="yes" xml:space="preserve">
          <source>Listing 15-24: Using &lt;code&gt;Rc&amp;lt;RefCell&amp;lt;i32&amp;gt;&amp;gt;&lt;/code&gt; to create a &lt;code&gt;List&lt;/code&gt; that we can mutate</source>
          <target state="translated">Listing 15-24 : &lt;code&gt;Rc&amp;lt;RefCell&amp;lt;i32&amp;gt;&amp;gt;&lt;/code&gt; 를 사용하여 변경 가능한 &lt;code&gt;List&lt;/code&gt; 생성</target>
        </trans-unit>
        <trans-unit id="6af6872cc0a942bf5139e47e216845b27497ede4" translate="yes" xml:space="preserve">
          <source>Listing 15-25: A cons list definition that holds a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; so we can modify what a &lt;code&gt;Cons&lt;/code&gt; variant is referring to</source>
          <target state="translated">Listing 15-25 : &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 하는 &lt;code&gt;Cons&lt;/code&gt; 목록 정의 로 Cons 변형이 참조하는 것을 수정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="3a094be147b7c64eca30f8e42d1612142f388e50" translate="yes" xml:space="preserve">
          <source>Listing 15-26: Creating a reference cycle of two &lt;code&gt;List&lt;/code&gt; values pointing to each other</source>
          <target state="translated">Listing 15-26 : 서로를 가리키는 두 &lt;code&gt;List&lt;/code&gt; 값 의 참조주기 생성</target>
        </trans-unit>
        <trans-unit id="2b292b9e3cc1d351a84971007501fea9cfdf3e8b" translate="yes" xml:space="preserve">
          <source>Listing 15-27: Creating a &lt;code&gt;leaf&lt;/code&gt; node with no children and a &lt;code&gt;branch&lt;/code&gt; node with &lt;code&gt;leaf&lt;/code&gt; as one of its children</source>
          <target state="translated">15-27 리스팅하십시오 만들기 &lt;code&gt;leaf&lt;/code&gt; 자녀가없는 노드와 &lt;code&gt;branch&lt;/code&gt; 와 노드 &lt;code&gt;leaf&lt;/code&gt; 의 아이 중 하나를</target>
        </trans-unit>
        <trans-unit id="4850f36c959e35928aff734682b70b668ef71d6d" translate="yes" xml:space="preserve">
          <source>Listing 15-28: A &lt;code&gt;leaf&lt;/code&gt; node with a weak reference to its parent node &lt;code&gt;branch&lt;/code&gt;</source>
          <target state="translated">Listing 15-28 : 상위 노드 &lt;code&gt;branch&lt;/code&gt; 대한 참조가 약한 &lt;code&gt;leaf&lt;/code&gt; 노드</target>
        </trans-unit>
        <trans-unit id="25aad53c5c945f94794c65dc3226cacbda5a3baf" translate="yes" xml:space="preserve">
          <source>Listing 15-29: Creating &lt;code&gt;branch&lt;/code&gt; in an inner scope and examining strong and weak reference counts</source>
          <target state="translated">Listing 15-29 : 내부 범위에서 &lt;code&gt;branch&lt;/code&gt; 를 생성 하고 강력하고 약한 참조 카운트 검사</target>
        </trans-unit>
        <trans-unit id="c6497eba51055bb620a815c36e345353e4a2ed22" translate="yes" xml:space="preserve">
          <source>Listing 15-2: The first attempt at defining an enum to represent a cons list data structure of &lt;code&gt;i32&lt;/code&gt; values</source>
          <target state="translated">Listing 15-2 : &lt;code&gt;i32&lt;/code&gt; 값 의 cons 목록 데이터 구조를 나타 내기 위해 열거를 정의하려는 첫 번째 시도</target>
        </trans-unit>
        <trans-unit id="18a28eccb4368989461114ac735559ffeda1ae5d" translate="yes" xml:space="preserve">
          <source>Listing 15-3: Using the &lt;code&gt;List&lt;/code&gt; enum to store the list &lt;code&gt;1, 2, 3&lt;/code&gt;</source>
          <target state="translated">Listing 15-3 : &lt;code&gt;List&lt;/code&gt; 열거 형을 사용하여 목록 &lt;code&gt;1, 2, 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c9e2eacb25fd51c5f9aa6cab37ed11e4904210" translate="yes" xml:space="preserve">
          <source>Listing 15-4: The error we get when attempting to define a recursive enum</source>
          <target state="translated">Listing 15-4 : 재귀 열거 형을 정의 할 때 발생하는 오류</target>
        </trans-unit>
        <trans-unit id="9b95eec03025f86a4b7c65652e8650c21c75dcf1" translate="yes" xml:space="preserve">
          <source>Listing 15-5: Definition of &lt;code&gt;List&lt;/code&gt; that uses &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; in order to have a known size</source>
          <target state="translated">Listing 15-5 : 알려진 크기를 얻기 위해 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용 하는 &lt;code&gt;List&lt;/code&gt; 의 정의</target>
        </trans-unit>
        <trans-unit id="db518804f21a5ed0346fef393226cf0ad66acbbb" translate="yes" xml:space="preserve">
          <source>Listing 15-6: Using the dereference operator to follow a reference to an &lt;code&gt;i32&lt;/code&gt; value</source>
          <target state="translated">Listing 15-6 : 역 참조 연산자를 사용하여 &lt;code&gt;i32&lt;/code&gt; 값에 대한 참조 수행</target>
        </trans-unit>
        <trans-unit id="8c02623422daee0586c70cf6a359e0861d9f1b06" translate="yes" xml:space="preserve">
          <source>Listing 15-7: Using the dereference operator on a &lt;code&gt;Box&amp;lt;i32&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 15-7 : &lt;code&gt;Box&amp;lt;i32&amp;gt;&lt;/code&gt; 에서 역 참조 연산자 사용</target>
        </trans-unit>
        <trans-unit id="fa36d540c04da6649b5d6b1c22bcef700a30ebdf" translate="yes" xml:space="preserve">
          <source>Listing 15-8: Defining a &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; type</source>
          <target state="translated">Listing 15-8 : &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 타입 정의</target>
        </trans-unit>
        <trans-unit id="d36831d626698b1a2a5afad342468e8d5abc296e" translate="yes" xml:space="preserve">
          <source>Listing 15-9: Attempting to use &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; in the same way we used references and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 15-9 : 레퍼런스와 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 사용한 것과 같은 방식으로 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="d143c5026e771bdcccc60743806891ca08f66e55" translate="yes" xml:space="preserve">
          <source>Listing 16-10: Sending multiple messages and pausing between each</source>
          <target state="translated">Listing 16-10 : 여러 메시지 보내기와 각 메시지 사이에 일시 중지</target>
        </trans-unit>
        <trans-unit id="3eef54e3734b51cf6e6ecfea094438d79e4e019b" translate="yes" xml:space="preserve">
          <source>Listing 16-11: Sending multiple messages from multiple producers</source>
          <target state="translated">Listing 16-11 : 여러 제작자로부터 여러 메시지 보내기</target>
        </trans-unit>
        <trans-unit id="19b196c633c201dfd93feaef8a0419886e1e93ac" translate="yes" xml:space="preserve">
          <source>Listing 16-12: Exploring the API of &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; in a single-threaded context for simplicity</source>
          <target state="translated">Listing 16-12 : 단순성을 위해 단일 스레드 컨텍스트에서 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 의 API 탐색</target>
        </trans-unit>
        <trans-unit id="d56dbf3e369ad2af3540bb140a7f2f160cce5bd9" translate="yes" xml:space="preserve">
          <source>Listing 16-13: Ten threads each increment a counter guarded by a &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 16-13 : 각각 10 개의 스레드가 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 의해 보호되는 카운터를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="e59ce5d5fc1d8f6572bb99a6381037738df73f26" translate="yes" xml:space="preserve">
          <source>Listing 16-14: Attempting to use &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; to allow multiple threads to own the &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 16-14 : &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용하여 여러 스레드가 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 를 소유 하려고 시도</target>
        </trans-unit>
        <trans-unit id="9e895f072015f06fead0b93e19086e73b96613c3" translate="yes" xml:space="preserve">
          <source>Listing 16-15: Using an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; to wrap the &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; to be able to share ownership across multiple threads</source>
          <target state="translated">Listing 16-15 : &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용 하여 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 를 감싸서 여러 스레드에서 소유권을 공유 할 수 있음</target>
        </trans-unit>
        <trans-unit id="57b4aee93626458741b433d91d9361d5dad177bd" translate="yes" xml:space="preserve">
          <source>Listing 16-1: Creating a new thread to print one thing while the main thread prints something else</source>
          <target state="translated">Listing 16-1 : 메인 스레드가 다른 것을 인쇄하는 동안 하나를 인쇄하기 위해 새 스레드 작성</target>
        </trans-unit>
        <trans-unit id="12b5c01907f295f047c10aa39f8c1176ebcbef5e" translate="yes" xml:space="preserve">
          <source>Listing 16-2: Saving a &lt;code&gt;JoinHandle&lt;/code&gt; from &lt;code&gt;thread::spawn&lt;/code&gt; to guarantee the thread is run to completion</source>
          <target state="translated">Listing 16-2 : 스레드가 완료 될 때 까지 &lt;code&gt;thread::spawn&lt;/code&gt; 에서 &lt;code&gt;JoinHandle&lt;/code&gt; 저장</target>
        </trans-unit>
        <trans-unit id="0e4bc84471eecfbbd51f5d5fcb65303d39e0056a" translate="yes" xml:space="preserve">
          <source>Listing 16-3: Attempting to use a vector created by the main thread in another thread</source>
          <target state="translated">Listing 16-3 : 다른 스레드에서 메인 스레드에 의해 생성 된 벡터를 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="3f4840d59493ebbe6c316eb6dc48412a423666ec" translate="yes" xml:space="preserve">
          <source>Listing 16-4 provides a scenario that&amp;rsquo;s more likely to have a reference to &lt;code&gt;v&lt;/code&gt; that won&amp;rsquo;t be valid:</source>
          <target state="translated">리스팅 16-4는 유효하지 않은 &lt;code&gt;v&lt;/code&gt; 에 대한 참조를 가질 가능성이 높은 시나리오를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="2f52a1d931528f94a1108b3ee0c94c630b939635" translate="yes" xml:space="preserve">
          <source>Listing 16-4: A thread with a closure that attempts to capture a reference to &lt;code&gt;v&lt;/code&gt; from a main thread that drops &lt;code&gt;v&lt;/code&gt;</source>
          <target state="translated">16-4 목록 : 스레드를 폐쇄로하는 시도에 대한 참조를 캡처하는 것을 &lt;code&gt;v&lt;/code&gt; 떨어 메인 스레드에서 &lt;code&gt;v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68f36abd65cb9617fabc96bec1214eb384c2e559" translate="yes" xml:space="preserve">
          <source>Listing 16-5: Using the &lt;code&gt;move&lt;/code&gt; keyword to force a closure to take ownership of the values it uses</source>
          <target state="translated">Listing 16-5 : &lt;code&gt;move&lt;/code&gt; 키워드를 사용하여 클로저가 사용하는 값의 소유권을 갖도록 강제</target>
        </trans-unit>
        <trans-unit id="65c3c68257b787d358e1d7e814f67e1c00947c24" translate="yes" xml:space="preserve">
          <source>Listing 16-6: Creating a channel and assigning the two halves to &lt;code&gt;tx&lt;/code&gt; and &lt;code&gt;rx&lt;/code&gt;</source>
          <target state="translated">Listing 16-6 : 채널을 만들고 두 반쪽을 &lt;code&gt;tx&lt;/code&gt; 와 &lt;code&gt;rx&lt;/code&gt; 에 할당</target>
        </trans-unit>
        <trans-unit id="b1b5995d0b3553dd50483e1b1dd727985f856aa6" translate="yes" xml:space="preserve">
          <source>Listing 16-7: Moving &lt;code&gt;tx&lt;/code&gt; to a spawned thread and sending &amp;ldquo;hi&amp;rdquo;</source>
          <target state="translated">Listing 16-7 : &lt;code&gt;tx&lt;/code&gt; 를 생성 된 스레드로 옮기고 &quot;hi&quot;</target>
        </trans-unit>
        <trans-unit id="1c6ea482518596009c65da1decd55a62b5a09488" translate="yes" xml:space="preserve">
          <source>Listing 16-8: Receiving the value &amp;ldquo;hi&amp;rdquo; in the main thread and printing it</source>
          <target state="translated">Listing 16-8 : 메인 스레드에서&amp;ldquo;hi&amp;rdquo;값을 받아서 출력</target>
        </trans-unit>
        <trans-unit id="1321b4024ee76a7d19ba0581eab40c25717ed32c" translate="yes" xml:space="preserve">
          <source>Listing 16-9: Attempting to use &lt;code&gt;val&lt;/code&gt; after we&amp;rsquo;ve sent it down the channel</source>
          <target state="translated">Listing 16-9 : &lt;code&gt;val&lt;/code&gt; 을 채널로 보낸 후 val 을 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="9f53b0bfbe1f71798882606e57ac86baae11de72" translate="yes" xml:space="preserve">
          <source>Listing 17-10: Attempting to use a type that doesn&amp;rsquo;t implement the trait object&amp;rsquo;s trait</source>
          <target state="translated">Listing 17-10 : 특성 객체의 특성을 구현하지 않는 유형을 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="616b6032949e86e604e03baeb242990f1a755bad" translate="yes" xml:space="preserve">
          <source>Listing 17-11 showed that we want to be able to call a method named &lt;code&gt;add_text&lt;/code&gt; and pass it a &lt;code&gt;&amp;amp;str&lt;/code&gt; that is then added to the text content of the blog post. We implement this as a method rather than exposing the &lt;code&gt;content&lt;/code&gt; field as &lt;code&gt;pub&lt;/code&gt;. This means we can implement a method later that will control how the &lt;code&gt;content&lt;/code&gt; field&amp;rsquo;s data is read. The &lt;code&gt;add_text&lt;/code&gt; method is pretty straightforward, so let&amp;rsquo;s add the implementation in Listing 17-13 to the &lt;code&gt;impl Post&lt;/code&gt; block:</source>
          <target state="translated">Listing 17-11에서는 &lt;code&gt;add_text&lt;/code&gt; 라는 메소드를 호출 하고 &lt;code&gt;&amp;amp;str&lt;/code&gt; 을 전달한 다음 블로그 게시물의 텍스트 컨텐츠에 추가 할 수 있음을 보여 주었다 . &lt;code&gt;content&lt;/code&gt; 필드를 &lt;code&gt;pub&lt;/code&gt; 로 노출시키지 않고 메소드로 구현합니다 . 즉, &lt;code&gt;content&lt;/code&gt; 필드의 데이터를 읽는 방법을 제어하는 ​​메소드를 나중에 구현할 수 있습니다 . &lt;code&gt;add_text&lt;/code&gt; 의 방법은 그래서이 리스팅을 17-13의 구현을 추가 할 수 있도록, 매우 간단 &lt;code&gt;impl Post&lt;/code&gt; 블록 :</target>
        </trans-unit>
        <trans-unit id="9146f8d1f83432c6766686b385badbf73153717d" translate="yes" xml:space="preserve">
          <source>Listing 17-11 shows this workflow in code form: this is an example usage of the API we&amp;rsquo;ll implement in a library crate named &lt;code&gt;blog&lt;/code&gt;. This won&amp;rsquo;t compile yet because we haven&amp;rsquo;t implemented the &lt;code&gt;blog&lt;/code&gt; crate yet.</source>
          <target state="translated">Listing 17-11은이 워크 플로우를 코드 형식으로 보여준다. 이것은 &lt;code&gt;blog&lt;/code&gt; 라는 라이브러리 상자에서 구현할 API 사용법의 예제이다 . &lt;code&gt;blog&lt;/code&gt; 상자를 아직 구현하지 않았기 때문에 아직 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e503a37b208823b1fe53cabe8334c7ca42c80dba" translate="yes" xml:space="preserve">
          <source>Listing 17-11: Code that demonstrates the desired behavior we want our &lt;code&gt;blog&lt;/code&gt; crate to have</source>
          <target state="translated">코드 17-11 : &lt;code&gt;blog&lt;/code&gt; 상자에 원하는 동작을 보여주는 코드</target>
        </trans-unit>
        <trans-unit id="f1620b3de9e638fc5e39afeef2145569e6847def" translate="yes" xml:space="preserve">
          <source>Listing 17-12: Definition of a &lt;code&gt;Post&lt;/code&gt; struct and a &lt;code&gt;new&lt;/code&gt; function that creates a new &lt;code&gt;Post&lt;/code&gt; instance, a &lt;code&gt;State&lt;/code&gt; trait, and a &lt;code&gt;Draft&lt;/code&gt; struct</source>
          <target state="translated">17-12 리스팅하십시오의 정의 &lt;code&gt;Post&lt;/code&gt; 구조체와 &lt;code&gt;new&lt;/code&gt; 새로운 생성 기능 &lt;code&gt;Post&lt;/code&gt; 예를하는 &lt;code&gt;State&lt;/code&gt; 특성을, 그리고 &lt;code&gt;Draft&lt;/code&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="771eeb1af445ce7599b9b49829f583fe06060e94" translate="yes" xml:space="preserve">
          <source>Listing 17-13: Implementing the &lt;code&gt;add_text&lt;/code&gt; method to add text to a post&amp;rsquo;s &lt;code&gt;content&lt;/code&gt;</source>
          <target state="translated">Listing 17-13 : &lt;code&gt;add_text&lt;/code&gt; 메소드를 구현하여 게시물의 &lt;code&gt;content&lt;/code&gt; 텍스트 추가</target>
        </trans-unit>
        <trans-unit id="7247d1c523b6527219b67cc4b27e57c78e329f65" translate="yes" xml:space="preserve">
          <source>Listing 17-14: Adding a placeholder implementation for the &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; that always returns an empty string slice</source>
          <target state="translated">Listing 17-14 : 항상 빈 문자열 슬라이스를 리턴하는 &lt;code&gt;Post&lt;/code&gt; 의 &lt;code&gt;content&lt;/code&gt; 메소드에 대한 플레이스 홀더 구현 추가</target>
        </trans-unit>
        <trans-unit id="7e2baf957d0f7561fcdd554cf11ea8c05c575b7f" translate="yes" xml:space="preserve">
          <source>Listing 17-15: Implementing &lt;code&gt;request_review&lt;/code&gt; methods on &lt;code&gt;Post&lt;/code&gt; and the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">Listing 17-15 : &lt;code&gt;Post&lt;/code&gt; 및 &lt;code&gt;State&lt;/code&gt; 특성 에 &lt;code&gt;request_review&lt;/code&gt; 메소드 구현</target>
        </trans-unit>
        <trans-unit id="cdbb4624526d447f365d0c2c9d058213c72af6f1" translate="yes" xml:space="preserve">
          <source>Listing 17-16: Implementing the &lt;code&gt;approve&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; and the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">Listing 17-16 : &lt;code&gt;Post&lt;/code&gt; 및 &lt;code&gt;State&lt;/code&gt; 특성 에 대한 &lt;code&gt;approve&lt;/code&gt; 방법 구현</target>
        </trans-unit>
        <trans-unit id="7f4eb5c03e760160f8826b08a4d43cdb29409364" translate="yes" xml:space="preserve">
          <source>Listing 17-17: Updating the &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;Post&lt;/code&gt; to delegate to a &lt;code&gt;content&lt;/code&gt; method on &lt;code&gt;State&lt;/code&gt;</source>
          <target state="translated">Listing 17-17 : &lt;code&gt;Post&lt;/code&gt; 의 &lt;code&gt;content&lt;/code&gt; 메소드를 업데이트하여 &lt;code&gt;State&lt;/code&gt; 의 &lt;code&gt;content&lt;/code&gt; 메소드에 위임</target>
        </trans-unit>
        <trans-unit id="a326b346b73e4afdc2a1733c02f0e9fd20e8b7d5" translate="yes" xml:space="preserve">
          <source>Listing 17-18: Adding the &lt;code&gt;content&lt;/code&gt; method to the &lt;code&gt;State&lt;/code&gt; trait</source>
          <target state="translated">Listing 17-18 : &lt;code&gt;State&lt;/code&gt; 특성에 &lt;code&gt;content&lt;/code&gt; 메소드 추가</target>
        </trans-unit>
        <trans-unit id="a7b8a363eb5ab143105af7e7ab0e366d9e8e76c3" translate="yes" xml:space="preserve">
          <source>Listing 17-19: A &lt;code&gt;Post&lt;/code&gt; with a &lt;code&gt;content&lt;/code&gt; method and a &lt;code&gt;DraftPost&lt;/code&gt; without a &lt;code&gt;content&lt;/code&gt; method</source>
          <target state="translated">17 ~ 19 목록, &amp;bull; &lt;code&gt;Post&lt;/code&gt; A의 &lt;code&gt;content&lt;/code&gt; 방법 및 &lt;code&gt;DraftPost&lt;/code&gt; 없이 &lt;code&gt;content&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="20fae4c7b40d2fe79a0f2f5ecda0ff6fbf94e76b" translate="yes" xml:space="preserve">
          <source>Listing 17-1: An &lt;code&gt;AveragedCollection&lt;/code&gt; struct that maintains a list of integers and the average of the items in the collection</source>
          <target state="translated">Listing 17-1 : 정수 목록과 컬렉션의 항목 평균을 유지 하는 &lt;code&gt;AveragedCollection&lt;/code&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="b1b1a0c2ff1d0c5537eceea61cc356e7c360c7f4" translate="yes" xml:space="preserve">
          <source>Listing 17-20: A &lt;code&gt;PendingReviewPost&lt;/code&gt; that gets created by calling &lt;code&gt;request_review&lt;/code&gt; on &lt;code&gt;DraftPost&lt;/code&gt; and an &lt;code&gt;approve&lt;/code&gt; method that turns a &lt;code&gt;PendingReviewPost&lt;/code&gt; into a published &lt;code&gt;Post&lt;/code&gt;</source>
          <target state="translated">Listing 17-20 : &lt;code&gt;DraftPost&lt;/code&gt; 에서 &lt;code&gt;request_review&lt;/code&gt; 를 호출하여 생성 된 &lt;code&gt;PendingReviewPost&lt;/code&gt; 및 &lt;code&gt;PendingReviewPost&lt;/code&gt; 를 게시 된 &lt;code&gt;Post&lt;/code&gt; 로 바꾸는 &lt;code&gt;approve&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="58dea3744e2c0be352925a0e7cd74ffdedb9028f" translate="yes" xml:space="preserve">
          <source>Listing 17-21: Modifications to &lt;code&gt;main&lt;/code&gt; to use the new implementation of the blog post workflow</source>
          <target state="translated">Listing 17-21 : &lt;code&gt;main&lt;/code&gt; 수정 블로그 포스트 워크 플로우의 새로운 구현을 사용</target>
        </trans-unit>
        <trans-unit id="834ba7425b4ceae322feab13f35479b714e61ef1" translate="yes" xml:space="preserve">
          <source>Listing 17-2: Implementations of the public methods &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;average&lt;/code&gt; on &lt;code&gt;AveragedCollection&lt;/code&gt;</source>
          <target state="translated">public 메소드의 구현은 : 17-2 목록 &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;remove&lt;/code&gt; 하고, &lt;code&gt;average&lt;/code&gt; 에 &lt;code&gt;AveragedCollection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af397fd71809e54f0083b7e608d6c0b4c9b0bf08" translate="yes" xml:space="preserve">
          <source>Listing 17-3 shows how to define a trait named &lt;code&gt;Draw&lt;/code&gt; with one method named &lt;code&gt;draw&lt;/code&gt;:</source>
          <target state="translated">Listing 17-3은 &lt;code&gt;draw&lt;/code&gt; 라는 하나의 메소드 를 사용하여 &lt;code&gt;Draw&lt;/code&gt; 라는 특성을 정의하는 방법을 보여줍니다. .</target>
        </trans-unit>
        <trans-unit id="4f10326f38470efd1f683c6be6bac4e63a3ff831" translate="yes" xml:space="preserve">
          <source>Listing 17-3: Definition of the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">리스팅 17-3 : &lt;code&gt;Draw&lt;/code&gt; 정의 특성의</target>
        </trans-unit>
        <trans-unit id="53f4d30f17cd4871bb579fc6d6ab9fa64fdf9e11" translate="yes" xml:space="preserve">
          <source>Listing 17-4: Definition of the &lt;code&gt;Screen&lt;/code&gt; struct with a &lt;code&gt;components&lt;/code&gt; field holding a vector of trait objects that implement the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">Listing 17-4 : &lt;code&gt;Draw&lt;/code&gt; 특성 을 구현하는 특성 오브젝트의 벡터를 보유하는 &lt;code&gt;components&lt;/code&gt; 필드를 가진 &lt;code&gt;Screen&lt;/code&gt; 구조체의 정의</target>
        </trans-unit>
        <trans-unit id="b367bafd62da00b39f0f29178ba139044ac6e392" translate="yes" xml:space="preserve">
          <source>Listing 17-5: A &lt;code&gt;run&lt;/code&gt; method on &lt;code&gt;Screen&lt;/code&gt; that calls the &lt;code&gt;draw&lt;/code&gt; method on each component</source>
          <target state="translated">Listing 17-5 : 각 컴포넌트 에서 &lt;code&gt;draw&lt;/code&gt; 메소드 를 호출하는 &lt;code&gt;Screen&lt;/code&gt; 의 &lt;code&gt;run&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="deeebbdce767d8f16391b9fb2bdfc0e4741a956c" translate="yes" xml:space="preserve">
          <source>Listing 17-6: An alternate implementation of the &lt;code&gt;Screen&lt;/code&gt; struct and its &lt;code&gt;run&lt;/code&gt; method using generics and trait bounds</source>
          <target state="translated">Listing 17-6 : 제네릭과 특성 경계를 사용하여 &lt;code&gt;Screen&lt;/code&gt; 구조체와 &lt;code&gt;run&lt;/code&gt; 메소드 의 대체 구현</target>
        </trans-unit>
        <trans-unit id="b8a2b70499d48a841aff1d4e0201a4639e08dfd3" translate="yes" xml:space="preserve">
          <source>Listing 17-7: A &lt;code&gt;Button&lt;/code&gt; struct that implements the &lt;code&gt;Draw&lt;/code&gt; trait</source>
          <target state="translated">코드 17-7 : &lt;code&gt;Draw&lt;/code&gt; 특성 을 구현 하는 &lt;code&gt;Button&lt;/code&gt; 구조체</target>
        </trans-unit>
        <trans-unit id="f85ea6c0e85c436b267fdc78309b821b846f93e5" translate="yes" xml:space="preserve">
          <source>Listing 17-8: Another crate using &lt;code&gt;gui&lt;/code&gt; and implementing the &lt;code&gt;Draw&lt;/code&gt; trait on a &lt;code&gt;SelectBox&lt;/code&gt; struct</source>
          <target state="translated">Listing 17-8 : &lt;code&gt;gui&lt;/code&gt; 를 사용 하고 &lt;code&gt;SelectBox&lt;/code&gt; 구조체 에 &lt;code&gt;Draw&lt;/code&gt; 특성을 구현하는 또 다른 상자</target>
        </trans-unit>
        <trans-unit id="cc429d3edf954109de11b803bc39958b6b784d5b" translate="yes" xml:space="preserve">
          <source>Listing 17-9: Using trait objects to store values of different types that implement the same trait</source>
          <target state="translated">코드 17-9 : 특성 오브젝트를 사용하여 동일한 특성을 구현하는 다른 유형의 값 저장</target>
        </trans-unit>
        <trans-unit id="ddfe1c7f701b93852d2a31044c55db0f52b05397" translate="yes" xml:space="preserve">
          <source>Listing 18-1 shows that it&amp;rsquo;s also possible to mix and match &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, and &lt;code&gt;else if let&lt;/code&gt; expressions. Doing so gives us more flexibility than a &lt;code&gt;match&lt;/code&gt; expression in which we can express only one value to compare with the patterns. Also, the conditions in a series of &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else if let&lt;/code&gt; arms aren&amp;rsquo;t required to relate to each other.</source>
          <target state="translated">Listing 18-1은 &lt;code&gt;if let&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; , &lt;code&gt;else if let&lt;/code&gt; 식 을 혼합하여 사용할 수도 있음을 보여줍니다 . 그렇게하면 패턴과 비교하기 위해 하나의 값만 표현할 수 있는 &lt;code&gt;match&lt;/code&gt; 표현식 보다 유연성이 더 커집니다 . 또한 일련의 &lt;code&gt;if let&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; , &lt;code&gt;else if let&lt;/code&gt; arm이 서로 관련 될 필요가없는 경우 의 조건 .</target>
        </trans-unit>
        <trans-unit id="6144661c623085286d9e6c1f25f8fba184c50d92" translate="yes" xml:space="preserve">
          <source>Listing 18-10: Attempting to use an irrefutable pattern with &lt;code&gt;if let&lt;/code&gt;</source>
          <target state="translated">Listing 18-10 : &lt;code&gt;if let&lt;/code&gt; 과 함께 반박 할 수없는 패턴을 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="4fb327bd75f9cb8728aaf90ca3b872fcf04c7b03" translate="yes" xml:space="preserve">
          <source>Listing 18-11: A &lt;code&gt;match&lt;/code&gt; expression with an arm that introduces a shadowed variable &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">코드 18-11 : 그림자 변수 &lt;code&gt;y&lt;/code&gt; 를 도입하는 팔과 &lt;code&gt;match&lt;/code&gt; 표현식</target>
        </trans-unit>
        <trans-unit id="9c2b55120c0d8dc746b9a11845e36ee6b0454a61" translate="yes" xml:space="preserve">
          <source>Listing 18-12 shows a &lt;code&gt;Point&lt;/code&gt; struct with two fields, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, that we can break apart using a pattern with a &lt;code&gt;let&lt;/code&gt; statement.</source>
          <target state="translated">Listing 18-12는 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 라는 두 개의 필드를 가진 &lt;code&gt;Point&lt;/code&gt; 구조체를 보여 주며 &lt;code&gt;let&lt;/code&gt; 문과 함께 패턴을 사용하여 분리 할 수있다 .</target>
        </trans-unit>
        <trans-unit id="8fcd90b374859cce38828ebaf8d6bead41442a33" translate="yes" xml:space="preserve">
          <source>Listing 18-12: Destructuring a struct&amp;rsquo;s fields into separate variables</source>
          <target state="translated">Listing 18-12 : 구조체의 필드를 별도의 변수로 구조화</target>
        </trans-unit>
        <trans-unit id="4ffbbc6877a6d05b9d9c472765b5d7903d9e7479" translate="yes" xml:space="preserve">
          <source>Listing 18-13: Destructuring struct fields using struct field shorthand</source>
          <target state="translated">Listing 18-13 : 구조체 필드 속기를 사용하여 구조체 필드 구조화</target>
        </trans-unit>
        <trans-unit id="11235cfa0778ac436ff2f043900aa97ca456308b" translate="yes" xml:space="preserve">
          <source>Listing 18-14 shows a &lt;code&gt;match&lt;/code&gt; expression that separates &lt;code&gt;Point&lt;/code&gt; values into three cases: points that lie directly on the &lt;code&gt;x&lt;/code&gt; axis (which is true when &lt;code&gt;y = 0&lt;/code&gt;), on the &lt;code&gt;y&lt;/code&gt; axis (&lt;code&gt;x = 0&lt;/code&gt;), or neither.</source>
          <target state="translated">18-14 프로그램리스트 &lt;code&gt;match&lt;/code&gt; 분리 식 &lt;code&gt;Point&lt;/code&gt; 상의 직접 놓여 점의 세 가지 경우로 값을 &lt;code&gt;x&lt;/code&gt; 축 (true로되는 &lt;code&gt;y = 0&lt;/code&gt; 온) &lt;code&gt;y&lt;/code&gt; 축 ( &lt;code&gt;x = 0&lt;/code&gt; ), 또는 어느 쪽도.</target>
        </trans-unit>
        <trans-unit id="fb8ab1d9675afe7b1be1ae05d4ffa8df574bad5c" translate="yes" xml:space="preserve">
          <source>Listing 18-14: Destructuring and matching literal values in one pattern</source>
          <target state="translated">코드 18-14 : 하나의 패턴으로 리터럴 값을 파괴하고 일치시키기</target>
        </trans-unit>
        <trans-unit id="2c53ca816acb5a98311e74b746cebc27259ca9cd" translate="yes" xml:space="preserve">
          <source>Listing 18-15: Destructuring enum variants that hold different kinds of values</source>
          <target state="translated">Listing 18-15 : 다른 종류의 값을 보유하는 열거 형 변형 파괴</target>
        </trans-unit>
        <trans-unit id="8d017024ad074a5a0b7ed0110f548b4814b94a7f" translate="yes" xml:space="preserve">
          <source>Listing 18-16: Matching on nested enums</source>
          <target state="translated">Listing 18-16 : 중첩 된 열거 형에서 일치</target>
        </trans-unit>
        <trans-unit id="f6f8fe0574320b6bc647539f95a9151cef4615db" translate="yes" xml:space="preserve">
          <source>Listing 18-17: Using &lt;code&gt;_&lt;/code&gt; in a function signature</source>
          <target state="translated">코드 18-17 : 함수 서명에서 &lt;code&gt;_&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="8578bd30c83decb05fa742779b0e3e4b88f7c284" translate="yes" xml:space="preserve">
          <source>Listing 18-18: Using an underscore within patterns that match &lt;code&gt;Some&lt;/code&gt; variants when we don&amp;rsquo;t need to use the value inside the &lt;code&gt;Some&lt;/code&gt;</source>
          <target state="translated">18-18 목록 : 일치하는 패턴 내에서 밑줄을 사용하여 &lt;code&gt;Some&lt;/code&gt; 우리가 내부의 값을 사용할 필요가 없습니다 때 변형 &lt;code&gt;Some&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37c8915871f50b9721bed2e69eaf1a05338e87bd" translate="yes" xml:space="preserve">
          <source>Listing 18-19: Ignoring multiple parts of a tuple</source>
          <target state="translated">Listing 18-19 : 튜플의 여러 부분 무시</target>
        </trans-unit>
        <trans-unit id="04e7b01d790581aedba062883153a4872da1e4bc" translate="yes" xml:space="preserve">
          <source>Listing 18-1: Mixing &lt;code&gt;if let&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else if let&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt;</source>
          <target state="translated">혼합 : 18-1 리스팅 &lt;code&gt;if let&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; , &lt;code&gt;else if let&lt;/code&gt; , 그리고 &lt;code&gt;else&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0192d0fe46e2149dd08840da1d83030a4ae539d" translate="yes" xml:space="preserve">
          <source>Listing 18-20: Starting a variable name with an underscore to avoid getting unused variable warnings</source>
          <target state="translated">Listing 18-20 : 밑줄로 변수 이름을 시작하여 사용되지 않은 변수 경고를 피하는 방법</target>
        </trans-unit>
        <trans-unit id="b01ab99d779b491e654cdd969c4904697cb0151a" translate="yes" xml:space="preserve">
          <source>Listing 18-21: An unused variable starting with an underscore still binds the value, which might take ownership of the value</source>
          <target state="translated">Listing 18-21 : 밑줄로 시작하는 사용되지 않은 변수는 여전히 값을 바인딩하며, 이는 값의 소유권을 가질 수 있습니다</target>
        </trans-unit>
        <trans-unit id="02ba42be73f9aaf4aecf0fb121bd2897610211e9" translate="yes" xml:space="preserve">
          <source>Listing 18-22: Using an underscore does not bind the value</source>
          <target state="translated">목록 18-22 : 밑줄을 사용하면 값이 바인딩되지 않습니다</target>
        </trans-unit>
        <trans-unit id="84f4057dde8da9e2423dedf021ccca0489c6ac8b" translate="yes" xml:space="preserve">
          <source>Listing 18-23: Ignoring all fields of a &lt;code&gt;Point&lt;/code&gt; except for &lt;code&gt;x&lt;/code&gt; by using &lt;code&gt;..&lt;/code&gt;</source>
          <target state="translated">Listing 18-23 : &lt;code&gt;..&lt;/code&gt; 를 사용하여 &lt;code&gt;x&lt;/code&gt; 를 제외한 &lt;code&gt;Point&lt;/code&gt; 의 모든 필드 무시</target>
        </trans-unit>
        <trans-unit id="3275bf1924f1fbc7d62858e211ba0873cc0669da" translate="yes" xml:space="preserve">
          <source>Listing 18-24: Matching only the first and last values in a tuple and ignoring all other values</source>
          <target state="translated">Listing 18-24 : 튜플의 첫 번째 값과 마지막 값만 일치시키고 다른 모든 값은 무시</target>
        </trans-unit>
        <trans-unit id="0e55fccc60bd6fc7526f10678d21072747686831" translate="yes" xml:space="preserve">
          <source>Listing 18-25: An attempt to use &lt;code&gt;..&lt;/code&gt; in an ambiguous way</source>
          <target state="translated">Listing 18-25 : &lt;code&gt;..&lt;/code&gt; 을 모호하게 사용하려는 시도</target>
        </trans-unit>
        <trans-unit id="97cebea2424bf45c8bf6c663a2503dbf6d8034ad" translate="yes" xml:space="preserve">
          <source>Listing 18-26: Adding a match guard to a pattern</source>
          <target state="translated">Listing 18-26 : 패턴에 매치 가드 추가</target>
        </trans-unit>
        <trans-unit id="f95d9bacb005429d46b172980ece5949fe65c37d" translate="yes" xml:space="preserve">
          <source>Listing 18-27: Using a match guard to test for equality with an outer variable</source>
          <target state="translated">Listing 18-27 : 매치 가드를 사용하여 외부 변수와의 동등성 테스트</target>
        </trans-unit>
        <trans-unit id="0704830d46f846b74b5397dfd28e0cc52ee3748c" translate="yes" xml:space="preserve">
          <source>Listing 18-28: Combining multiple patterns with a match guard</source>
          <target state="translated">Listing 18-28 : 여러 패턴을 매치 가드와 결합</target>
        </trans-unit>
        <trans-unit id="7e4e4163a76cf16ed52305f58c5002629978394b" translate="yes" xml:space="preserve">
          <source>Listing 18-29: Using &lt;code&gt;@&lt;/code&gt; to bind to a value in a pattern while also testing it</source>
          <target state="translated">Listing 18-29 : &lt;code&gt;@&lt;/code&gt; 를 사용하여 테스트하면서 패턴의 값에 바인딩</target>
        </trans-unit>
        <trans-unit id="23efe349dec0a7214e63201a66162129b04c6e4c" translate="yes" xml:space="preserve">
          <source>Listing 18-2: Using a &lt;code&gt;while let&lt;/code&gt; loop to print values for as long as &lt;code&gt;stack.pop()&lt;/code&gt; returns &lt;code&gt;Some&lt;/code&gt;</source>
          <target state="translated">Listing 18-2 : &lt;code&gt;while let&lt;/code&gt; 루프를 사용하여 &lt;code&gt;stack.pop()&lt;/code&gt; 이 &lt;code&gt;Some&lt;/code&gt; 를 반환하는 한 값을 인쇄</target>
        </trans-unit>
        <trans-unit id="442e4a943f8db50a444be69278c2e7871bcc0a79" translate="yes" xml:space="preserve">
          <source>Listing 18-3 demonstrates how to use a pattern in a &lt;code&gt;for&lt;/code&gt; loop to destructure, or break apart, a tuple as part of the &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">18-3 목록 것은에서 패턴을 사용하는 방법을 보여줍니다 &lt;code&gt;for&lt;/code&gt; 의 일환으로 튜플을 destructure에 루프, 또는 떨어져 휴식 &lt;code&gt;for&lt;/code&gt; 루프.</target>
        </trans-unit>
        <trans-unit id="50a3b88c90e0ff821d1a59ab4a6da154261b1017" translate="yes" xml:space="preserve">
          <source>Listing 18-3: Using a pattern in a &lt;code&gt;for&lt;/code&gt; loop to destructure a tuple</source>
          <target state="translated">Listing 18-3 : &lt;code&gt;for&lt;/code&gt; 루프 에서 패턴을 사용 하여 튜플 구조화</target>
        </trans-unit>
        <trans-unit id="e1d043e4088371824844d59ed215594c594ada98" translate="yes" xml:space="preserve">
          <source>Listing 18-4: Using a pattern to destructure a tuple and create three variables at once</source>
          <target state="translated">Listing 18-4 : 패턴을 사용하여 튜플을 구조화하고 한 번에 세 개의 변수 생성</target>
        </trans-unit>
        <trans-unit id="e661b97edf1bb133ffbc7fc27e8a7bb308aef2f6" translate="yes" xml:space="preserve">
          <source>Listing 18-5: Incorrectly constructing a pattern whose variables don&amp;rsquo;t match the number of elements in the tuple</source>
          <target state="translated">Listing 18-5 : 변수가 튜플의 요소 수와 일치하지 않는 패턴을 잘못 구성</target>
        </trans-unit>
        <trans-unit id="a385d299c12c18dc1cff0477057573295b51144e" translate="yes" xml:space="preserve">
          <source>Listing 18-6: A function signature uses patterns in the parameters</source>
          <target state="translated">코드 18-6 : 함수 시그니처는 매개 변수의 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d3aee3d1bb78e1ecec2ead5910893a0623b90b19" translate="yes" xml:space="preserve">
          <source>Listing 18-7: A function with parameters that destructure a tuple</source>
          <target state="translated">코드 18-7 : 터플을 구조화하는 매개 변수가있는 함수</target>
        </trans-unit>
        <trans-unit id="21e573f160e40fcf18eb94c2061a631cb291a5f6" translate="yes" xml:space="preserve">
          <source>Listing 18-8: Attempting to use a refutable pattern with &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">Listing 18-8 : &lt;code&gt;let&lt;/code&gt; 과 함께 반박 가능한 패턴을 사용하려고 시도</target>
        </trans-unit>
        <trans-unit id="675529134474b9f9be7b4829f297213ca94319fa" translate="yes" xml:space="preserve">
          <source>Listing 18-9: Using &lt;code&gt;if let&lt;/code&gt; and a block with refutable patterns instead of &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">18-10 목록 : 사용 &lt;code&gt;if let&lt;/code&gt; 대신의 논박 패턴 블록 &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf63cbd65b20995fab2c3177f0bdf18c81ec5bba" translate="yes" xml:space="preserve">
          <source>Listing 19-1 shows how to create an immutable and a mutable raw pointer from references.</source>
          <target state="translated">Listing 19-1은 참조로부터 불변의 가변 포인터를 만드는 방법을 보여준다.</target>
        </trans-unit>
        <trans-unit id="1c28635772518e1ad661ea27fce0ffdf6d63713e" translate="yes" xml:space="preserve">
          <source>Listing 19-10: Reading from or writing to a mutable static variable is unsafe</source>
          <target state="translated">코드 19-10 : 가변 정적 변수 읽기 또는 쓰기는 안전하지 않습니다</target>
        </trans-unit>
        <trans-unit id="9e5c9abfc65b6f4d1aa6e66f7ef07fe278c65c7d" translate="yes" xml:space="preserve">
          <source>Listing 19-11: Defining and implementing an unsafe trait</source>
          <target state="translated">Listing 19-11 : 안전하지 않은 특성 정의 및 구현</target>
        </trans-unit>
        <trans-unit id="97e7d182f69683a4f3a68c22cc9d9c54c17d0703" translate="yes" xml:space="preserve">
          <source>Listing 19-12: The definition of the &lt;code&gt;Iterator&lt;/code&gt; trait that has an associated type &lt;code&gt;Item&lt;/code&gt;</source>
          <target state="translated">Listing 19-12 : 연관된 유형 &lt;code&gt;Item&lt;/code&gt; 을 갖는 &lt;code&gt;Iterator&lt;/code&gt; 특성 의 정의</target>
        </trans-unit>
        <trans-unit id="4e26c92b1d14183f38e41790c29afe868e637f42" translate="yes" xml:space="preserve">
          <source>Listing 19-13: A hypothetical definition of the &lt;code&gt;Iterator&lt;/code&gt; trait using generics</source>
          <target state="translated">Listing 19-13 : 제네릭을 사용한 &lt;code&gt;Iterator&lt;/code&gt; 특성 의 가상 정의</target>
        </trans-unit>
        <trans-unit id="a6225ec091be9ac5ca264bd8b927cc4c37328abc" translate="yes" xml:space="preserve">
          <source>Listing 19-14: Implementing the &lt;code&gt;Add&lt;/code&gt; trait to overload the &lt;code&gt;+&lt;/code&gt; operator for &lt;code&gt;Point&lt;/code&gt; instances</source>
          <target state="translated">Listing 19-14 : &lt;code&gt;Add&lt;/code&gt; 특성을 구현하여 &lt;code&gt;Point&lt;/code&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자 를 오버로드</target>
        </trans-unit>
        <trans-unit id="8e21c1e69cc727098d370a83f01461649e24252b" translate="yes" xml:space="preserve">
          <source>Listing 19-15: Implementing the &lt;code&gt;Add&lt;/code&gt; trait on &lt;code&gt;Millimeters&lt;/code&gt; to add &lt;code&gt;Millimeters&lt;/code&gt; to &lt;code&gt;Meters&lt;/code&gt;</source>
          <target state="translated">19-15 리스팅 다음 구현 &lt;code&gt;Add&lt;/code&gt; 에 대한 특성 &lt;code&gt;Millimeters&lt;/code&gt; 추가 &lt;code&gt;Millimeters&lt;/code&gt; 하는 &lt;code&gt;Meters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8cfa717336348c447e94e7f1e44c3038c63118f" translate="yes" xml:space="preserve">
          <source>Listing 19-16: Two traits are defined to have a &lt;code&gt;fly&lt;/code&gt; method and are implemented on the &lt;code&gt;Human&lt;/code&gt; type, and a &lt;code&gt;fly&lt;/code&gt; method is implemented on &lt;code&gt;Human&lt;/code&gt; directly</source>
          <target state="translated">Listing 19-16 : 두 가지 특성이 &lt;code&gt;fly&lt;/code&gt; 메소드 를 갖도록 정의되고 &lt;code&gt;Human&lt;/code&gt; 유형에 구현되고 &lt;code&gt;fly&lt;/code&gt; 메소드가 &lt;code&gt;Human&lt;/code&gt; 구현된다 직접</target>
        </trans-unit>
        <trans-unit id="db633a5a017661e7a7146fde17cdac691e8db4a1" translate="yes" xml:space="preserve">
          <source>Listing 19-17: Calling &lt;code&gt;fly&lt;/code&gt; on an instance of &lt;code&gt;Human&lt;/code&gt;</source>
          <target state="translated">Listing 19-17 : &lt;code&gt;Human&lt;/code&gt; 인스턴스에서 &lt;code&gt;fly&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="23834c33f73df40768a1dd5e5beec6df8bf7b48e" translate="yes" xml:space="preserve">
          <source>Listing 19-18: Specifying which trait&amp;rsquo;s &lt;code&gt;fly&lt;/code&gt; method we want to call</source>
          <target state="translated">Listing 19-18 : 호출 할 특성의 &lt;code&gt;fly&lt;/code&gt; 메소드 지정</target>
        </trans-unit>
        <trans-unit id="0a1f4647a45d92385555a03bf4ecb4d0623b48a1" translate="yes" xml:space="preserve">
          <source>Listing 19-19: A trait with an associated function and a type with an associated function of the same name that also implements the trait</source>
          <target state="translated">Listing 19-19 : 관련 함수가있는 특성과 특성을 구현하는 동일한 이름의 관련 함수가있는 유형</target>
        </trans-unit>
        <trans-unit id="192efdc88660736ee00124c16674e9b849c2f715" translate="yes" xml:space="preserve">
          <source>Listing 19-1: Creating raw pointers from references</source>
          <target state="translated">Listing 19-1 : 참조에서 raw 포인터 만들기</target>
        </trans-unit>
        <trans-unit id="8d83b1ebdf623a809ae1dbc744f5cfb736315160" translate="yes" xml:space="preserve">
          <source>Listing 19-20: Attempting to call the &lt;code&gt;baby_name&lt;/code&gt; function from the &lt;code&gt;Animal&lt;/code&gt; trait, but Rust doesn&amp;rsquo;t know which implementation to use</source>
          <target state="translated">Listing 19-20 : &lt;code&gt;Animal&lt;/code&gt; 특성 에서 &lt;code&gt;baby_name&lt;/code&gt; 함수 를 호출하려고 시도 하지만 Rust가 어떤 구현을 사용해야하는지 모른다</target>
        </trans-unit>
        <trans-unit id="ac581d7a4053cba32c760b99f0af0222300b5bb1" translate="yes" xml:space="preserve">
          <source>Listing 19-21: Using fully qualified syntax to specify that we want to call the &lt;code&gt;baby_name&lt;/code&gt; function from the &lt;code&gt;Animal&lt;/code&gt; trait as implemented on &lt;code&gt;Dog&lt;/code&gt;</source>
          <target state="translated">Listing 19-21 : 정규화 된 구문을 사용 하여 &lt;code&gt;Dog&lt;/code&gt; 에 구현 된대로 &lt;code&gt;Animal&lt;/code&gt; 특성 에서 &lt;code&gt;baby_name&lt;/code&gt; 함수 를 호출하도록 지정</target>
        </trans-unit>
        <trans-unit id="8205ecf7d4f5d4f3830c5045853af8331fa47133" translate="yes" xml:space="preserve">
          <source>Listing 19-22: Implementing the &lt;code&gt;OutlinePrint&lt;/code&gt; trait that requires the functionality from &lt;code&gt;Display&lt;/code&gt;</source>
          <target state="translated">Listing 19-22 : &lt;code&gt;Display&lt;/code&gt; 의 기능이 필요한 &lt;code&gt;OutlinePrint&lt;/code&gt; 특성 구현</target>
        </trans-unit>
        <trans-unit id="c5e43e2c666b627080372728cabf0cc1d1c6ff63" translate="yes" xml:space="preserve">
          <source>Listing 19-23: Creating a &lt;code&gt;Wrapper&lt;/code&gt; type around &lt;code&gt;Vec&amp;lt;String&amp;gt;&lt;/code&gt; to implement &lt;code&gt;Display&lt;/code&gt;</source>
          <target state="translated">Listing 19-23 : &lt;code&gt;Vec&amp;lt;String&amp;gt;&lt;/code&gt; 주위에 &lt;code&gt;Wrapper&lt;/code&gt; 유형을 생성하여 &lt;code&gt;Display&lt;/code&gt; 구현</target>
        </trans-unit>
        <trans-unit id="1131b7eb93a0bacee5469c6f2b5469b17091340d" translate="yes" xml:space="preserve">
          <source>Listing 19-24: Using a long type in many places</source>
          <target state="translated">Listing 19-24 : 여러 장소에서 긴 타입 사용하기</target>
        </trans-unit>
        <trans-unit id="1987562b13a9a144a67a61660918cc709b89a4d7" translate="yes" xml:space="preserve">
          <source>Listing 19-25: Introducing a type alias &lt;code&gt;Thunk&lt;/code&gt; to reduce repetition</source>
          <target state="translated">Listing 19-25 : 타입 별칭 소개 반복을 줄이기위한 &lt;code&gt;Thunk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad147945642e08a211cbe9d3bd11a5fcd950dc97" translate="yes" xml:space="preserve">
          <source>Listing 19-26: A &lt;code&gt;match&lt;/code&gt; with an arm that ends in &lt;code&gt;continue&lt;/code&gt;</source>
          <target state="translated">Listing 19-26 : &lt;code&gt;continue&lt;/code&gt; 암과 의 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66fc36103a8a4f76e0bc69209e8f9d1bde9445a7" translate="yes" xml:space="preserve">
          <source>Listing 19-27: Using the &lt;code&gt;fn&lt;/code&gt; type to accept a function pointer as an argument</source>
          <target state="translated">Listing 19-27 : &lt;code&gt;fn&lt;/code&gt; 유형을 사용하여 함수 포인터를 인수로 허용</target>
        </trans-unit>
        <trans-unit id="769c84eb503c23780b93699d2159e4cf8959b7f5" translate="yes" xml:space="preserve">
          <source>Listing 19-28 shows a slightly simplified definition of the &lt;code&gt;vec!&lt;/code&gt; macro.</source>
          <target state="translated">Listing 19-28은 약간 단순화 된 정의를 보여준다. &lt;code&gt;vec!&lt;/code&gt; 매크로.</target>
        </trans-unit>
        <trans-unit id="60ab4c545d5a0a14c36d0f048ed889fbad1b867a" translate="yes" xml:space="preserve">
          <source>Listing 19-28: A simplified version of the &lt;code&gt;vec!&lt;/code&gt; macro definition</source>
          <target state="translated">Listing 19-28 : 단순화 된 버전 &lt;code&gt;vec!&lt;/code&gt; 매크로 정의</target>
        </trans-unit>
        <trans-unit id="97631e592572572bb56effe84f77bb58203d289e" translate="yes" xml:space="preserve">
          <source>Listing 19-29: An example of using a procedural macro</source>
          <target state="translated">Listing 19-29 : 절차 적 매크로를 사용하는 예제</target>
        </trans-unit>
        <trans-unit id="83ea168fb44a9c48159cac238fc94515fe3427d1" translate="yes" xml:space="preserve">
          <source>Listing 19-2: Creating a raw pointer to an arbitrary memory address</source>
          <target state="translated">Listing 19-2 : 임의의 메모리 주소에 대한 raw 포인터 만들기</target>
        </trans-unit>
        <trans-unit id="eb0cf59c32c33cd655b69f707870bf310b1c110b" translate="yes" xml:space="preserve">
          <source>Listing 19-30: The code a user of our crate will be able to write when using our procedural macro</source>
          <target state="translated">코드 19-30 : 프로 시저 매크로를 사용할 때 상자의 사용자가 작성할 수있는 코드</target>
        </trans-unit>
        <trans-unit id="3c1a2c71019296d6475855f5967a82c656b5e4de" translate="yes" xml:space="preserve">
          <source>Listing 19-31: Code that most procedural macro crates will require in order to process Rust code</source>
          <target state="translated">Listing 19-31 : Rust 코드를 처리하기 위해 대부분의 절차 적 매크로 상자에 필요한 코드</target>
        </trans-unit>
        <trans-unit id="e7d6f9e676482d1db15035f09578f137f1526cbb" translate="yes" xml:space="preserve">
          <source>Listing 19-32: The &lt;code&gt;DeriveInput&lt;/code&gt; instance we get when parsing the code that has the macro&amp;rsquo;s attribute in Listing 19-30</source>
          <target state="translated">리스팅 19-32 : &lt;code&gt;DeriveInput&lt;/code&gt; Listing 19-30에서 매크로 속성을 가진 코드를 파싱 할 때 얻는 인스턴스</target>
        </trans-unit>
        <trans-unit id="4397782d319dbdc638cec0fd47d1fda0eee85db9" translate="yes" xml:space="preserve">
          <source>Listing 19-33: Implementing the &lt;code&gt;HelloMacro&lt;/code&gt; trait using the parsed Rust code</source>
          <target state="translated">Listing &lt;code&gt;HelloMacro&lt;/code&gt; : HelloMacro 구현 파싱 ​​된 Rust 코드를 사용하여 특성</target>
        </trans-unit>
        <trans-unit id="d539ea03dc90a8cca36f3eccb659307c38fa618f" translate="yes" xml:space="preserve">
          <source>Listing 19-3: Dereferencing raw pointers within an &lt;code&gt;unsafe&lt;/code&gt; block</source>
          <target state="translated">Listing 19-3 : &lt;code&gt;unsafe&lt;/code&gt; 원시 포인터 역 참조 블록</target>
        </trans-unit>
        <trans-unit id="e1edf730fefc0104cc30acf2b246856d97d9d073" translate="yes" xml:space="preserve">
          <source>Listing 19-4: Using the safe &lt;code&gt;split_at_mut&lt;/code&gt; function</source>
          <target state="translated">Listing 19-4 : 안전한 &lt;code&gt;split_at_mut&lt;/code&gt; 함수 사용</target>
        </trans-unit>
        <trans-unit id="f23a70c40857b6360828ef033504db89b40caa91" translate="yes" xml:space="preserve">
          <source>Listing 19-5: An attempted implementation of &lt;code&gt;split_at_mut&lt;/code&gt; using only safe Rust</source>
          <target state="translated">Listing 19-5 : 안전한 Rust 만 사용하여 &lt;code&gt;split_at_mut&lt;/code&gt; 구현 시도</target>
        </trans-unit>
        <trans-unit id="b16487162d78fe10005b7a33219b8cdbf681490c" translate="yes" xml:space="preserve">
          <source>Listing 19-6 shows how to use an &lt;code&gt;unsafe&lt;/code&gt; block, a raw pointer, and some calls to unsafe functions to make the implementation of &lt;code&gt;split_at_mut&lt;/code&gt; work.</source>
          <target state="translated">Listing 19-6은 &lt;code&gt;unsafe&lt;/code&gt; 블록, 원시 포인터 및 안전하지 않은 함수에 대한 일부 호출을 사용하여 &lt;code&gt;split_at_mut&lt;/code&gt; 의 구현을 작동 시키는 방법을 보여 줍니다.</target>
        </trans-unit>
        <trans-unit id="7c4d157139d16d96be67cd8da8488a5e81f88057" translate="yes" xml:space="preserve">
          <source>Listing 19-6: Using unsafe code in the implementation of the &lt;code&gt;split_at_mut&lt;/code&gt; function</source>
          <target state="translated">Listing 19-6 : &lt;code&gt;split_at_mut&lt;/code&gt; 함수 구현에 안전하지 않은 코드 사용</target>
        </trans-unit>
        <trans-unit id="64cec9a7a8da122e95db8329b6350a018c6c3b45" translate="yes" xml:space="preserve">
          <source>Listing 19-7: Creating a slice from an arbitrary memory location</source>
          <target state="translated">Listing 19-7 : 임의의 메모리 위치에서 슬라이스 생성</target>
        </trans-unit>
        <trans-unit id="b7c3d4646ff2dd9b36dc16b78f39d822eb6a30ba" translate="yes" xml:space="preserve">
          <source>Listing 19-8 demonstrates how to set up an integration with the &lt;code&gt;abs&lt;/code&gt; function from the C standard library. Functions declared within &lt;code&gt;extern&lt;/code&gt; blocks are always unsafe to call from Rust code. The reason is that other languages don&amp;rsquo;t enforce Rust&amp;rsquo;s rules and guarantees, and Rust can&amp;rsquo;t check them, so responsibility falls on the programmer to ensure safety.</source>
          <target state="translated">Listing 19-8 은 C 표준 라이브러리에서 &lt;code&gt;abs&lt;/code&gt; 함수 와의 통합을 설정하는 방법을 보여줍니다 . &lt;code&gt;extern&lt;/code&gt; 내에서 선언 된 함수 블록 Rust 코드에서 호출하는 것이 항상 안전하지 않습니다. 그 이유는 다른 언어는 Rust의 규칙과 보증을 시행하지 않으며 Rust가이를 확인할 수 없기 때문에 안전을 보장 할 책임은 프로그래머에게 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d7de98a6e48ac42520eafd23cc5b99e287c6f4c" translate="yes" xml:space="preserve">
          <source>Listing 19-8: Declaring and calling an &lt;code&gt;extern&lt;/code&gt; function defined in another language</source>
          <target state="translated">코드 19-8 : 다른 언어로 정의 된 &lt;code&gt;extern&lt;/code&gt; 함수 선언 및 호출</target>
        </trans-unit>
        <trans-unit id="02f5f37df24f5c7f8252fdc4fd720c05520b5ccb" translate="yes" xml:space="preserve">
          <source>Listing 19-9: Defining and using an immutable static variable</source>
          <target state="translated">Listing 19-9 : 불변 정적 변수 정의 및 사용</target>
        </trans-unit>
        <trans-unit id="906850d60d2bfc7a434b9df477636efeaef160de" translate="yes" xml:space="preserve">
          <source>Listing 2-1: Code that gets a guess from the user and prints it</source>
          <target state="translated">Listing 2-1 : 사용자로부터 추측하여 출력하는 코드</target>
        </trans-unit>
        <trans-unit id="e55456b745b2d799b62d95f492ba0fa4228d6a0d" translate="yes" xml:space="preserve">
          <source>Listing 2-2: The output from running &lt;code&gt;cargo build&lt;/code&gt; after adding the rand crate as a dependency</source>
          <target state="translated">리스팅 2-2 : 랜드 상자를 종속성으로 추가 한 후 &lt;code&gt;cargo build&lt;/code&gt; 실행 결과</target>
        </trans-unit>
        <trans-unit id="a5914c0d7edb00b8b1ca144c272f874cd675df48" translate="yes" xml:space="preserve">
          <source>Listing 2-3: Adding code to generate a random number</source>
          <target state="translated">Listing 2-3 : 난수를 생성하는 코드 추가</target>
        </trans-unit>
        <trans-unit id="af8d17e9229f2c43969b2a69094d2f3e5fe3e655" translate="yes" xml:space="preserve">
          <source>Listing 2-4: Handling the possible return values of comparing two numbers</source>
          <target state="translated">Listing 2-4 : 두 숫자를 비교할 수있는 리턴 값 처리</target>
        </trans-unit>
        <trans-unit id="33a15234f088792400d37a594c696c9143e6c6ec" translate="yes" xml:space="preserve">
          <source>Listing 2-5: Ignoring a non-number guess and asking for another guess instead of crashing the program</source>
          <target state="translated">코드 2-5 : 숫자가 아닌 추측을 무시하고 프로그램을 중단시키는 대신 다른 추측을 요구</target>
        </trans-unit>
        <trans-unit id="0d0918b00c7ec6bb184545ca63e60fa4939bef0d" translate="yes" xml:space="preserve">
          <source>Listing 2-6: Complete guessing game code</source>
          <target state="translated">코드 2-6 : 완전한 추측 게임 코드</target>
        </trans-unit>
        <trans-unit id="6186619545c6ee347071e7ca7d304239cefd9d87" translate="yes" xml:space="preserve">
          <source>Listing 20-10: Simulating a slow request by recognizing &lt;em&gt;/sleep&lt;/em&gt; and sleeping for 5 seconds</source>
          <target state="translated">Listing 20-10 : 5 초 동안 &lt;em&gt;/ sleep&lt;/em&gt; 및 &lt;em&gt;sleep&lt;/em&gt; 을 인식하여 느린 요청 시뮬레이션</target>
        </trans-unit>
        <trans-unit id="c77c5f9f8216534967e6aa65016f2ce1e522d44b" translate="yes" xml:space="preserve">
          <source>Listing 20-11: Spawning a new thread for each stream</source>
          <target state="translated">Listing 20-11 : 각 스트림에 새로운 스레드 생성</target>
        </trans-unit>
        <trans-unit id="490b74dd78fbac67e3686c02aa9503e4dfb82b08" translate="yes" xml:space="preserve">
          <source>Listing 20-12: Our ideal &lt;code&gt;ThreadPool&lt;/code&gt; interface</source>
          <target state="translated">Listing 20-12 : 이상적인 &lt;code&gt;ThreadPool&lt;/code&gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="2522ba33dbd20be373e69103631f87861291c162" translate="yes" xml:space="preserve">
          <source>Listing 20-13: Implementing &lt;code&gt;ThreadPool::new&lt;/code&gt; to panic if &lt;code&gt;size&lt;/code&gt; is zero</source>
          <target state="translated">Listing 20-13 : &lt;code&gt;ThreadPool::new&lt;/code&gt; 구현 :: &lt;code&gt;size&lt;/code&gt; 가 0 인 경우 공황 상태에 빠짐</target>
        </trans-unit>
        <trans-unit id="17f32c438999cbe2243fdcfe5e366cb33ba2affa" translate="yes" xml:space="preserve">
          <source>Listing 20-14: Creating a vector for &lt;code&gt;ThreadPool&lt;/code&gt; to hold the threads</source>
          <target state="translated">Listing 20-14 : 스레드를 보유 할 &lt;code&gt;ThreadPool&lt;/code&gt; 용 벡터 만들기</target>
        </trans-unit>
        <trans-unit id="9da4f1d3e6c1f786010f397f2fd75fddc7491385" translate="yes" xml:space="preserve">
          <source>Listing 20-15: Modifying &lt;code&gt;ThreadPool&lt;/code&gt; to hold &lt;code&gt;Worker&lt;/code&gt; instances instead of holding threads directly</source>
          <target state="translated">Listing 20-15 : 스레드를 직접 유지하는 대신 &lt;code&gt;Worker&lt;/code&gt; 인스턴스 를 유지하도록 &lt;code&gt;ThreadPool&lt;/code&gt; 수정</target>
        </trans-unit>
        <trans-unit id="56fbc0b9cc0275a64d6a40c9a37ce081653cc6f5" translate="yes" xml:space="preserve">
          <source>Listing 20-16: Modifying &lt;code&gt;ThreadPool&lt;/code&gt; to store the sending end of a channel that sends &lt;code&gt;Job&lt;/code&gt; instances</source>
          <target state="translated">Listing 20-16 : &lt;code&gt;Job&lt;/code&gt; 인스턴스 를 전송하는 채널의 전송 끝을 저장하도록 &lt;code&gt;ThreadPool&lt;/code&gt; 수정</target>
        </trans-unit>
        <trans-unit id="f85cb389f568fb1fa76f6154929625041a887ad1" translate="yes" xml:space="preserve">
          <source>Listing 20-17: Passing the receiving end of the channel to the workers</source>
          <target state="translated">Listing 20-17 : 채널의 수신 끝을 작업자에게 전달</target>
        </trans-unit>
        <trans-unit id="d30a183ff11a61e9b38867b8a86d78ca2fa07d93" translate="yes" xml:space="preserve">
          <source>Listing 20-18: Sharing the receiving end of the channel among the workers using &lt;code&gt;Arc&lt;/code&gt; and &lt;code&gt;Mutex&lt;/code&gt;</source>
          <target state="translated">Listing 20-18 : &lt;code&gt;Arc&lt;/code&gt; 와 &lt;code&gt;Mutex&lt;/code&gt; 를 사용하여 작업자들 사이에서 채널의 수신단 공유</target>
        </trans-unit>
        <trans-unit id="841cf9bc324d23f260e6d9ec8f63c8e66b6e6aae" translate="yes" xml:space="preserve">
          <source>Listing 20-19: Creating a &lt;code&gt;Job&lt;/code&gt; type alias for a &lt;code&gt;Box&lt;/code&gt; that holds each closure and then sending the job down the channel</source>
          <target state="translated">목록 20-19 : 각 클로저를 보유한 &lt;code&gt;Box&lt;/code&gt; 에 대한 &lt;code&gt;Job&lt;/code&gt; 유형 별명 작성 후 작업을 채널로 전송</target>
        </trans-unit>
        <trans-unit id="0a2d9c3b8202a9c489e5874aab92dcbb628c7914" translate="yes" xml:space="preserve">
          <source>Listing 20-1: Listening for incoming streams and printing a message when we receive a stream</source>
          <target state="translated">Listing 20-1 : 수신 스트림 수신 및 스트림 수신시 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="4d16d200911e1c27e67c19a6df63099563502faf" translate="yes" xml:space="preserve">
          <source>Listing 20-20: Receiving and executing the jobs in the worker&amp;rsquo;s thread</source>
          <target state="translated">Listing 20-20 : 작업자 스레드에서 작업 수신 및 실행</target>
        </trans-unit>
        <trans-unit id="647644f5eafb20cf48cea22601269ed2b77605f4" translate="yes" xml:space="preserve">
          <source>Listing 20-21: Adding a new trait &lt;code&gt;FnBox&lt;/code&gt; to work around the current limitations of &lt;code&gt;Box&amp;lt;FnOnce()&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 20-21 : &lt;code&gt;Box&amp;lt;FnOnce()&amp;gt;&lt;/code&gt; 의 현재 한계를 해결하기 위해 새로운 특성 &lt;code&gt;FnBox&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="b7ce8f7a4b9223ab75f3a0d79b7b0cfb48ad0809" translate="yes" xml:space="preserve">
          <source>Listing 20-21: An alternative implementation of &lt;code&gt;Worker::new&lt;/code&gt; using &lt;code&gt;while let&lt;/code&gt;</source>
          <target state="translated">목록 20-21 : 다른 구현 &lt;code&gt;Worker::new&lt;/code&gt; 사용 &lt;code&gt;while let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9951af4e66c939c862100b93f3e377ad1bab764f" translate="yes" xml:space="preserve">
          <source>Listing 20-22: An alternative implementation of &lt;code&gt;Worker::new&lt;/code&gt; using &lt;code&gt;while let&lt;/code&gt;</source>
          <target state="translated">Listing 20-22 : &lt;code&gt;while let&lt;/code&gt; 을 사용하여 &lt;code&gt;Worker::new&lt;/code&gt; 의 대체 구현</target>
        </trans-unit>
        <trans-unit id="2d09a00b2f6c7708a05aff5e7b9697cffa40d67f" translate="yes" xml:space="preserve">
          <source>Listing 20-22: Joining each thread when the thread pool goes out of scope</source>
          <target state="translated">목록 20-22 : 스레드 풀이 범위를 벗어날 때 각 스레드 결합</target>
        </trans-unit>
        <trans-unit id="a296253ebec40fe8302bfd2243313af4f8547a4e" translate="yes" xml:space="preserve">
          <source>Listing 20-23: Joining each thread when the thread pool goes out of scope</source>
          <target state="translated">Listing 20-23 : 스레드 풀이 범위를 벗어날 때 각 스레드 결합</target>
        </trans-unit>
        <trans-unit id="9b22686838aacbc9e57545b76a48f6eb54b3fbbe" translate="yes" xml:space="preserve">
          <source>Listing 20-23: Sending and receiving &lt;code&gt;Message&lt;/code&gt; values and exiting the loop if a &lt;code&gt;Worker&lt;/code&gt; receives &lt;code&gt;Message::Terminate&lt;/code&gt;</source>
          <target state="translated">목록 20-23 : &lt;code&gt;Worker&lt;/code&gt; 수신 하는 경우 &lt;code&gt;Message&lt;/code&gt; 값 송수신 및 루프 종료 &lt;code&gt;Message::Terminate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21ba4cb1a9d207e86986a91e29b5c0edb2efd0c3" translate="yes" xml:space="preserve">
          <source>Listing 20-24: Sending &lt;code&gt;Message::Terminate&lt;/code&gt; to the workers before calling &lt;code&gt;join&lt;/code&gt; on each worker thread</source>
          <target state="translated">Listing 20-24 : &lt;code&gt;join&lt;/code&gt; 호출하기 전에 워커에게 &lt;code&gt;Message::Terminate&lt;/code&gt; 보내기 각 작업자 스레드에서 을</target>
        </trans-unit>
        <trans-unit id="c4ce0ae841f01e7178673adbbf0ad07461277ddc" translate="yes" xml:space="preserve">
          <source>Listing 20-24: Sending and receiving &lt;code&gt;Message&lt;/code&gt; values and exiting the loop if a &lt;code&gt;Worker&lt;/code&gt; receives &lt;code&gt;Message::Terminate&lt;/code&gt;</source>
          <target state="translated">Listing 20-24 : &lt;code&gt;Worker&lt;/code&gt; 가 &lt;code&gt;Message::Terminate&lt;/code&gt; 수신 하면 &lt;code&gt;Message&lt;/code&gt; 값을 주고 받고 루프를 종료한다</target>
        </trans-unit>
        <trans-unit id="29d2ea0bbc5319f33a55cd0b85d771dffd7474e4" translate="yes" xml:space="preserve">
          <source>Listing 20-25: Sending &lt;code&gt;Message::Terminate&lt;/code&gt; to the workers before calling &lt;code&gt;join&lt;/code&gt; on each worker thread</source>
          <target state="translated">Listing 20-25 : 각 작업자 스레드에서 &lt;code&gt;join&lt;/code&gt; 을 호출하기 전에 &lt;code&gt;Message::Terminate&lt;/code&gt; 보내기 :: 종료</target>
        </trans-unit>
        <trans-unit id="ae8cc5a7cf07b2270161c49e58dcfe19c9ee4304" translate="yes" xml:space="preserve">
          <source>Listing 20-25: Shut down the server after serving two requests by exiting the loop</source>
          <target state="translated">목록 20-25 : 루프를 종료하여 두 개의 요청을 처리 한 후 서버 종료</target>
        </trans-unit>
        <trans-unit id="e608ac3da55b751debf169a89c8e9a8691843148" translate="yes" xml:space="preserve">
          <source>Listing 20-26: Shut down the server after serving two requests by exiting the loop</source>
          <target state="translated">Listing 20-26 : 루프를 종료하여 두 개의 요청을 처리 한 후 서버 종료</target>
        </trans-unit>
        <trans-unit id="f173c615ede21211278d9807de835c93a5e1f4ea" translate="yes" xml:space="preserve">
          <source>Listing 20-2: Reading from the &lt;code&gt;TcpStream&lt;/code&gt; and printing the data</source>
          <target state="translated">Listing 20-2 : &lt;code&gt;TcpStream&lt;/code&gt; 에서 읽고 데이터 인쇄하기</target>
        </trans-unit>
        <trans-unit id="fd05c1361038c612312e8cc1d37b42ca715be238" translate="yes" xml:space="preserve">
          <source>Listing 20-3: Writing a tiny successful HTTP response to the stream</source>
          <target state="translated">Listing 20-3 : 스트림에 작은 성공적인 HTTP 응답 작성</target>
        </trans-unit>
        <trans-unit id="a8a7e3303b2df74786cd8877ab67f397f5337c03" translate="yes" xml:space="preserve">
          <source>Listing 20-4: A sample HTML file to return in a response</source>
          <target state="translated">Listing 20-4 : 응답으로 반환 할 샘플 HTML 파일</target>
        </trans-unit>
        <trans-unit id="00ae38e218c5bb3f97a75cad8df12e9b0d020593" translate="yes" xml:space="preserve">
          <source>Listing 20-5: Sending the contents of &lt;em&gt;hello.html&lt;/em&gt; as the body of the response</source>
          <target state="translated">Listing 20-5 : &lt;em&gt;hello.html&lt;/em&gt; 의 내용을 응답 본문으로 보내기</target>
        </trans-unit>
        <trans-unit id="9d1f02cb4b09980a87d79d0547c49358fc614eb0" translate="yes" xml:space="preserve">
          <source>Listing 20-6: Matching the request and handling requests to &lt;em&gt;/&lt;/em&gt; differently from other requests</source>
          <target state="translated">Listing 20-6 : 요청 일치 및 다른 요청과 다르게 &lt;em&gt;/&lt;/em&gt; 요청 처리</target>
        </trans-unit>
        <trans-unit id="f8348546992791302bf0d85900165079b1714256" translate="yes" xml:space="preserve">
          <source>Listing 20-7: Responding with status code 404 and an error page if anything other than &lt;em&gt;/&lt;/em&gt; was requested</source>
          <target state="translated">Listing 20-7 : 상태 코드 404로 응답하고 &lt;em&gt;/&lt;/em&gt; 이외의 요청이있는 경우 오류 페이지</target>
        </trans-unit>
        <trans-unit id="b07ae72c083b1a899a2a424356f010f0e77e0f78" translate="yes" xml:space="preserve">
          <source>Listing 20-8: Sample content for the page to send back with any 404 response</source>
          <target state="translated">리스팅 20-8 : 페이지가 404 응답으로 다시 보낼 샘플 컨텐츠</target>
        </trans-unit>
        <trans-unit id="979c0bf09be8b693a0b7eb5bf1b313cf1df5527a" translate="yes" xml:space="preserve">
          <source>Listing 20-9: Refactoring the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; blocks to contain only the code that differs between the two cases</source>
          <target state="translated">Listing 20-9 : &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;else&lt;/code&gt; 블록을 리팩토링 하여 두 경우간에 다른 코드 만 포함</target>
        </trans-unit>
        <trans-unit id="9b9fceb9eb03a3f9c4e1d74cfa6029d7dcce46bb" translate="yes" xml:space="preserve">
          <source>Listing 3-1: A &lt;code&gt;main&lt;/code&gt; function declaration containing one statement</source>
          <target state="translated">Listing 3-1 : 하나의 문장을 포함 하는 &lt;code&gt;main&lt;/code&gt; 함수 선언</target>
        </trans-unit>
        <trans-unit id="e6d53ab22ffb27dcb257a8700d46cbd5dfced9fc" translate="yes" xml:space="preserve">
          <source>Listing 3-2: Assigning the result of an &lt;code&gt;if&lt;/code&gt; expression to a variable</source>
          <target state="translated">Listing 3-2 : &lt;code&gt;if&lt;/code&gt; 표현식 의 결과를 변수에 할당</target>
        </trans-unit>
        <trans-unit id="ff679afd5d6d867cbcc39b449d2a998a25435cd2" translate="yes" xml:space="preserve">
          <source>Listing 3-3: Using a &lt;code&gt;while&lt;/code&gt; loop to run code while a condition holds true</source>
          <target state="translated">Listing 3-3 : 조건을 만족 하는 &lt;code&gt;while&lt;/code&gt; 루프를 사용하여 코드 실행</target>
        </trans-unit>
        <trans-unit id="583d2039afeb95cdf5c7e0b2a32879f9b935cc5f" translate="yes" xml:space="preserve">
          <source>Listing 3-4: Looping through each element of a collection using a &lt;code&gt;while&lt;/code&gt; loop</source>
          <target state="translated">Listing 3-4 : &lt;code&gt;while&lt;/code&gt; 루프를 사용하여 컬렉션의 각 요소 를 반복</target>
        </trans-unit>
        <trans-unit id="87438bb574a616fffd251f60fd596f3c3d541ee3" translate="yes" xml:space="preserve">
          <source>Listing 3-5: Looping through each element of a collection using a &lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="translated">Listing 3-5 : &lt;code&gt;for&lt;/code&gt; 루프를 사용하여 컬렉션의 각 요소 를 반복</target>
        </trans-unit>
        <trans-unit id="071776e108222090fe7e34b6b12a0635af1ea613" translate="yes" xml:space="preserve">
          <source>Listing 4-1: A variable and the scope in which it is valid</source>
          <target state="translated">Listing 4-1 : 변수와 ​​변수의 유효 범위</target>
        </trans-unit>
        <trans-unit id="a8bd4a8ada8ca53b2cd329e28cf012af8595d26c" translate="yes" xml:space="preserve">
          <source>Listing 4-2: Assigning the integer value of variable &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">Listing 4-2 : 변수 &lt;code&gt;x&lt;/code&gt; 의 정수 값 을 &lt;code&gt;y&lt;/code&gt; 에 할당</target>
        </trans-unit>
        <trans-unit id="f80135eeedb7d42bfb604d43634f10e56b9276d8" translate="yes" xml:space="preserve">
          <source>Listing 4-3: Functions with ownership and scope annotated</source>
          <target state="translated">Listing 4-3 : 소유권과 범위가 주석이 달린 함수</target>
        </trans-unit>
        <trans-unit id="08743211367b36a2bf28bc72aee62ce3d8e0a427" translate="yes" xml:space="preserve">
          <source>Listing 4-4: Transferring ownership of return values</source>
          <target state="translated">Listing 4-4 ​​: 반환 값의 소유권 이전</target>
        </trans-unit>
        <trans-unit id="c4cdffa6571f231b7e6fd5e7bf3f5073aceb67af" translate="yes" xml:space="preserve">
          <source>Listing 4-5: Returning ownership of parameters</source>
          <target state="translated">Listing 4-5 : 매개 변수 소유권 반환</target>
        </trans-unit>
        <trans-unit id="3222eb0c315d3632f2a93aa2c946727b3f3aa187" translate="yes" xml:space="preserve">
          <source>Listing 4-6: Attempting to modify a borrowed value</source>
          <target state="translated">리스팅 4-6 : 빌린 값 수정</target>
        </trans-unit>
        <trans-unit id="e224cd6b255dc9146281f3ef7b7408c55d16c747" translate="yes" xml:space="preserve">
          <source>Listing 4-7: The &lt;code&gt;first_word&lt;/code&gt; function that returns a byte index value into the &lt;code&gt;String&lt;/code&gt; parameter</source>
          <target state="translated">Listing 4-7 : 바이트 인덱스 값을 &lt;code&gt;String&lt;/code&gt; 매개 변수 로 반환하는 &lt;code&gt;first_word&lt;/code&gt; 함수</target>
        </trans-unit>
        <trans-unit id="5d0609b7dcfd67002e143a43f1ddecb06483b85d" translate="yes" xml:space="preserve">
          <source>Listing 4-8: Storing the result from calling the &lt;code&gt;first_word&lt;/code&gt; function and then changing the &lt;code&gt;String&lt;/code&gt; contents</source>
          <target state="translated">Listing 4-8 : &lt;code&gt;first_word&lt;/code&gt; 함수 를 호출 한 후 &lt;code&gt;String&lt;/code&gt; 내용 을 변경 한 결과 저장</target>
        </trans-unit>
        <trans-unit id="87c1cb4aabafa6069efb32d5af61cd0fb08e6796" translate="yes" xml:space="preserve">
          <source>Listing 4-9: Improving the &lt;code&gt;first_word&lt;/code&gt; function by using a string slice for the type of the &lt;code&gt;s&lt;/code&gt; parameter</source>
          <target state="translated">코드 4-9 : &lt;code&gt;s&lt;/code&gt; 매개 변수 유형에 문자열 슬라이스를 사용하여 &lt;code&gt;first_word&lt;/code&gt; 함수 개선</target>
        </trans-unit>
        <trans-unit id="f5936c4459ffd7d02b56c5c0e59e5f7deb06c81b" translate="yes" xml:space="preserve">
          <source>Listing 5-10: Defining a &lt;code&gt;Rectangle&lt;/code&gt; struct</source>
          <target state="translated">리스팅 5-10 : &lt;code&gt;Rectangle&lt;/code&gt; 구조체 정의</target>
        </trans-unit>
        <trans-unit id="215d7b48452bb1a7e4e29de9b63af2a7536d6502" translate="yes" xml:space="preserve">
          <source>Listing 5-11: Attempting to print a &lt;code&gt;Rectangle&lt;/code&gt; instance</source>
          <target state="translated">Listing 5-11 : &lt;code&gt;Rectangle&lt;/code&gt; 인스턴스 인쇄 시도</target>
        </trans-unit>
        <trans-unit id="51e4581a0a69246f469790078df639c28316484a" translate="yes" xml:space="preserve">
          <source>Listing 5-12: Adding the annotation to derive the &lt;code&gt;Debug&lt;/code&gt; trait and printing the &lt;code&gt;Rectangle&lt;/code&gt; instance using debug formatting</source>
          <target state="translated">코드 5-12 : &lt;code&gt;Debug&lt;/code&gt; 특성 을 도출하기 위해 주석 추가 및 디버그 형식을 사용하여 &lt;code&gt;Rectangle&lt;/code&gt; 인스턴스 인쇄</target>
        </trans-unit>
        <trans-unit id="699bc91c771ab1aa757989a11761198687ddb028" translate="yes" xml:space="preserve">
          <source>Listing 5-13: Defining an &lt;code&gt;area&lt;/code&gt; method on the &lt;code&gt;Rectangle&lt;/code&gt; struct</source>
          <target state="translated">Listing 5-13 : &lt;code&gt;Rectangle&lt;/code&gt; 구조체 에서 &lt;code&gt;area&lt;/code&gt; 메서드 정의</target>
        </trans-unit>
        <trans-unit id="a7947d12bdeedd386158963338c53b8bc7ffe517" translate="yes" xml:space="preserve">
          <source>Listing 5-14: Using the as-yet-unwritten &lt;code&gt;can_hold&lt;/code&gt; method</source>
          <target state="translated">Listing 5-14 : 아직 기록되지 않은 &lt;code&gt;can_hold&lt;/code&gt; 메소드 사용</target>
        </trans-unit>
        <trans-unit id="ac5804944047dd0d4d02603d3156bc632d3eb2b1" translate="yes" xml:space="preserve">
          <source>Listing 5-15: Implementing the &lt;code&gt;can_hold&lt;/code&gt; method on &lt;code&gt;Rectangle&lt;/code&gt; that takes another &lt;code&gt;Rectangle&lt;/code&gt; instance as a parameter</source>
          <target state="translated">Listing 5-15 : 다른 &lt;code&gt;Rectangle&lt;/code&gt; 인스턴스를 매개 변수로 사용하는 &lt;code&gt;Rectangle&lt;/code&gt; 에서 &lt;code&gt;can_hold&lt;/code&gt; 메소드 구현</target>
        </trans-unit>
        <trans-unit id="c33d8fdde14f54cb5966c1287889cdff4840627d" translate="yes" xml:space="preserve">
          <source>Listing 5-16: Rewriting Listing 5-15 using multiple &lt;code&gt;impl&lt;/code&gt; blocks</source>
          <target state="translated">Listing 5-16 : 여러 &lt;code&gt;impl&lt;/code&gt; 블록을 사용하여 Listing 5-15 재 작성</target>
        </trans-unit>
        <trans-unit id="0d520975db988eb4fce4d70d69c7071a6ef03266" translate="yes" xml:space="preserve">
          <source>Listing 5-1: A &lt;code&gt;User&lt;/code&gt; struct definition</source>
          <target state="translated">Listing 5-1 : &lt;code&gt;User&lt;/code&gt; 구조체 정의</target>
        </trans-unit>
        <trans-unit id="8977673d81d2f7d288e8671e5db4e29f849d9ecf" translate="yes" xml:space="preserve">
          <source>Listing 5-2: Creating an instance of the &lt;code&gt;User&lt;/code&gt; struct</source>
          <target state="translated">Listing 5-2 : &lt;code&gt;User&lt;/code&gt; 구조체 의 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="1f41e38c696b4c7289ac53c56e434aedcaeb6f66" translate="yes" xml:space="preserve">
          <source>Listing 5-3: Changing the value in the &lt;code&gt;email&lt;/code&gt; field of a &lt;code&gt;User&lt;/code&gt; instance</source>
          <target state="translated">Listing 5-3 : &lt;code&gt;User&lt;/code&gt; 인스턴스 의 &lt;code&gt;email&lt;/code&gt; 필드 에서 값 변경</target>
        </trans-unit>
        <trans-unit id="db94d7ba29205268f6081fc57937619cd38d7b59" translate="yes" xml:space="preserve">
          <source>Listing 5-4 shows a &lt;code&gt;build_user&lt;/code&gt; function that returns a &lt;code&gt;User&lt;/code&gt; instance with the given email and username. The &lt;code&gt;active&lt;/code&gt; field gets the value of &lt;code&gt;true&lt;/code&gt;, and the &lt;code&gt;sign_in_count&lt;/code&gt; gets a value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">리스트 5-4는 주어진 이메일과 사용자 이름 으로 &lt;code&gt;User&lt;/code&gt; 인스턴스 를 반환 하는 &lt;code&gt;build_user&lt;/code&gt; 함수를 보여줍니다 . &lt;code&gt;active&lt;/code&gt; 필드의 값을 얻을 &lt;code&gt;true&lt;/code&gt; , 그리고 &lt;code&gt;sign_in_count&lt;/code&gt; 값 얻는다 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6180049bbfd730536060167de16372ef8ac3e4b9" translate="yes" xml:space="preserve">
          <source>Listing 5-4: A &lt;code&gt;build_user&lt;/code&gt; function that takes an email and username and returns a &lt;code&gt;User&lt;/code&gt; instance</source>
          <target state="translated">Listing 5-4 : 이메일과 사용자 이름을 &lt;code&gt;build_user&lt;/code&gt; &lt;code&gt;User&lt;/code&gt; 인스턴스를 반환하는 build_user 함수</target>
        </trans-unit>
        <trans-unit id="34728d882e237dc7414c13bed692d3b4929c4000" translate="yes" xml:space="preserve">
          <source>Listing 5-5: A &lt;code&gt;build_user&lt;/code&gt; function that uses field init shorthand because the &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; parameters have the same name as struct fields</source>
          <target state="translated">Listing 5-5 : &lt;code&gt;email&lt;/code&gt; 및 &lt;code&gt;username&lt;/code&gt; 매개 변수의 이름이 struct 필드 와 같기 때문에 field init 속기를 사용 하는 &lt;code&gt;build_user&lt;/code&gt; 함수</target>
        </trans-unit>
        <trans-unit id="ec811ef73f249a9f5effaa4a387e2b4034ee1f33" translate="yes" xml:space="preserve">
          <source>Listing 5-6: Creating a new &lt;code&gt;User&lt;/code&gt; instance using some of the values from &lt;code&gt;user1&lt;/code&gt;</source>
          <target state="translated">Listing 5-6 : &lt;code&gt;user1&lt;/code&gt; 의 일부 값을 사용하여 새 &lt;code&gt;User&lt;/code&gt; 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="b1042745496de77683494947cb9ddb8ceed34b79" translate="yes" xml:space="preserve">
          <source>Listing 5-7: Using struct update syntax to set new &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; values for a &lt;code&gt;User&lt;/code&gt; instance but use the rest of the values from the fields of the instance in the &lt;code&gt;user1&lt;/code&gt; variable</source>
          <target state="translated">Listing 5-7 : struct update 구문을 사용 하여 &lt;code&gt;User&lt;/code&gt; 인스턴스에 새 &lt;code&gt;email&lt;/code&gt; 및 &lt;code&gt;username&lt;/code&gt; 값 을 설정 하지만 &lt;code&gt;user1&lt;/code&gt; 변수 에있는 인스턴스 필드의 나머지 값을 사용</target>
        </trans-unit>
        <trans-unit id="e14121427e21bb563614dab69325b3429a192108" translate="yes" xml:space="preserve">
          <source>Listing 5-8: Calculating the area of a rectangle specified by separate width and height variables</source>
          <target state="translated">코드 5-8 : 별도의 너비 및 높이 변수로 지정된 사각형의 면적 계산</target>
        </trans-unit>
        <trans-unit id="7bbfc498e81af47ae5c6d73043fae00ce626556b" translate="yes" xml:space="preserve">
          <source>Listing 5-9 shows another version of our program that uses tuples.</source>
          <target state="translated">리스트 5-9는 튜플을 사용하는 다른 버전의 프로그램을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6a953b763de90df2dde4e24bf54ab976b248c596" translate="yes" xml:space="preserve">
          <source>Listing 5-9: Specifying the width and height of the rectangle with a tuple</source>
          <target state="translated">Listing 5-9 : 튜플로 사각형의 너비와 높이 지정</target>
        </trans-unit>
        <trans-unit id="317a48edaf28b6e0bc990dd7fdac683d53540196" translate="yes" xml:space="preserve">
          <source>Listing 6-1: Storing the data and &lt;code&gt;IpAddrKind&lt;/code&gt; variant of an IP address using a &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">Listing 6-1 : &lt;code&gt;struct&lt;/code&gt; 사용하여 IP 주소 의 데이터 및 &lt;code&gt;IpAddrKind&lt;/code&gt; 변형 저장</target>
        </trans-unit>
        <trans-unit id="1601efc6142f63b762ff62527eea307503181b6a" translate="yes" xml:space="preserve">
          <source>Listing 6-2: A &lt;code&gt;Message&lt;/code&gt; enum whose variants each store different amounts and types of values</source>
          <target state="translated">Listing 6-2 : 변형마다 각각 다른 양과 유형의 값을 저장 하는 &lt;code&gt;Message&lt;/code&gt; 열거 형</target>
        </trans-unit>
        <trans-unit id="bb2eab7c4a0535ef9e635c657b2617ba75b207b2" translate="yes" xml:space="preserve">
          <source>Listing 6-3: An enum and a &lt;code&gt;match&lt;/code&gt; expression that has the variants of the enum as its patterns</source>
          <target state="translated">Listing 6-3 : 열거 형 의 변형을 패턴으로 갖는 열거 형 및 &lt;code&gt;match&lt;/code&gt; 표현식</target>
        </trans-unit>
        <trans-unit id="d6c517233a50d5aa0d34c931713369f59c96a142" translate="yes" xml:space="preserve">
          <source>Listing 6-4: A &lt;code&gt;Coin&lt;/code&gt; enum in which the &lt;code&gt;Quarter&lt;/code&gt; variant also holds a &lt;code&gt;UsState&lt;/code&gt; value</source>
          <target state="translated">리스팅 6-4 : &lt;code&gt;Quarter&lt;/code&gt; 변형이 &lt;code&gt;UsState&lt;/code&gt; 값을 보유한 &lt;code&gt;Coin&lt;/code&gt; 열거 형</target>
        </trans-unit>
        <trans-unit id="366c8a5cb8f6569790b9502993e020f80e58e7d9" translate="yes" xml:space="preserve">
          <source>Listing 6-5: A function that uses a &lt;code&gt;match&lt;/code&gt; expression on an &lt;code&gt;Option&amp;lt;i32&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Listing 6-5 : &lt;code&gt;Option&amp;lt;i32&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;match&lt;/code&gt; 표현식 을 사용하는 함수</target>
        </trans-unit>
        <trans-unit id="b44856bc0b2ade67a9a9034ba41c6088eb8b5876" translate="yes" xml:space="preserve">
          <source>Listing 6-6: A &lt;code&gt;match&lt;/code&gt; that only cares about executing code when the value is &lt;code&gt;Some(3)&lt;/code&gt;</source>
          <target state="translated">코드 6-6 : 값이 &lt;code&gt;Some(3)&lt;/code&gt; 경우 코드 실행에만 관심이 있는 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aea56a1642523d4f586445bbbe1e6df04bda515" translate="yes" xml:space="preserve">
          <source>Listing 7-10: Designating an enum as public makes all its variants public</source>
          <target state="translated">Listing 7-10 : 열거 형을 퍼블릭으로 지정하면 모든 변형이 공개됩니다</target>
        </trans-unit>
        <trans-unit id="bf59002e067b4260f78026ae1cbff2f4c945bcd3" translate="yes" xml:space="preserve">
          <source>Listing 7-11: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt;</source>
          <target state="translated">코드 7-11 : &lt;code&gt;use&lt;/code&gt; 범위 내에서 모듈 가져 오기</target>
        </trans-unit>
        <trans-unit id="627f0fb141903559b8c35dc9a30c45aa787531ae" translate="yes" xml:space="preserve">
          <source>Listing 7-12: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt; and a relative path</source>
          <target state="translated">목록 7-12 : &lt;code&gt;use&lt;/code&gt; 및 상대 경로 를 사용 하여 모듈을 범위로 가져 오기</target>
        </trans-unit>
        <trans-unit id="2eaa640be3385f0ca9c0fa9e7ba534043bef56b3" translate="yes" xml:space="preserve">
          <source>Listing 7-12: Bringing a module into scope with &lt;code&gt;use&lt;/code&gt; and a relative path starting with &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">코드 7-12 : 모듈을 범위 내에서 &lt;code&gt;use&lt;/code&gt; 하고 &lt;code&gt;self&lt;/code&gt; 로 시작하는 상대 경로</target>
        </trans-unit>
        <trans-unit id="7307f72b192d3253733cf7ac65bc967e5201e698" translate="yes" xml:space="preserve">
          <source>Listing 7-13: Bringing the &lt;code&gt;add_to_waitlist&lt;/code&gt; function into scope with &lt;code&gt;use&lt;/code&gt;, which is unidiomatic</source>
          <target state="translated">7-13 리스팅 다음 가져 오는 &lt;code&gt;add_to_waitlist&lt;/code&gt; 과 범위에 기능을 &lt;code&gt;use&lt;/code&gt; , unidiomatic이다</target>
        </trans-unit>
        <trans-unit id="4bfe10f5f56827d0c30e6d426efc295cb82f3011" translate="yes" xml:space="preserve">
          <source>Listing 7-14: Bringing &lt;code&gt;HashMap&lt;/code&gt; into scope in an idiomatic way</source>
          <target state="translated">Listing 7-14 : 관용적 방식으로 &lt;code&gt;HashMap&lt;/code&gt; 을 범위 내로 가져 오기</target>
        </trans-unit>
        <trans-unit id="13cc4e98f442cfec3a674fc14b744bd81731e983" translate="yes" xml:space="preserve">
          <source>Listing 7-15: Bringing two types with the same name into the same scope requires using their parent modules.</source>
          <target state="translated">예제 7-15 : 이름이 같은 두 유형을 같은 범위로 가져 오려면 상위 모듈을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="84d695a06193ab052dbc08a9625b8eec61fc744f" translate="yes" xml:space="preserve">
          <source>Listing 7-16: Renaming a type when it&amp;rsquo;s brought into scope with the &lt;code&gt;as&lt;/code&gt; keyword</source>
          <target state="translated">예제 7-16 : &lt;code&gt;as&lt;/code&gt; 키워드를 사용하여 유형을 가져올 때 유형 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="b9a4845143b70c35aeb28053a3eeca0d2c48207c" translate="yes" xml:space="preserve">
          <source>Listing 7-17 shows the code in Listing 7-11 with &lt;code&gt;use&lt;/code&gt; in the root module changed to &lt;code&gt;pub use&lt;/code&gt;.</source>
          <target state="translated">함께 목록 7-11 7-17 쇼 코드 목록 &lt;code&gt;use&lt;/code&gt; 루트 모듈로 변경 &lt;code&gt;pub use&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5775bbe7f173f5b092d3b5595e5501b634454927" translate="yes" xml:space="preserve">
          <source>Listing 7-17: Making a name available for any code to use from a new scope with &lt;code&gt;pub use&lt;/code&gt;</source>
          <target state="translated">코드 7-17 : &lt;code&gt;pub use&lt;/code&gt; 하여 새 범위에서 모든 코드를 사용할 수 있도록 이름 만들기</target>
        </trans-unit>
        <trans-unit id="912681010ae055ad4a4e14893b49ef9e67bf7a57" translate="yes" xml:space="preserve">
          <source>Listing 7-18: Specifying a nested path to bring multiple items with the same prefix into scope</source>
          <target state="translated">Listing 7-18 : 접두사가 동일한 여러 항목을 범위로 가져 오기 위해 중첩 경로 지정</target>
        </trans-unit>
        <trans-unit id="7929ee4086c93140005baff67b15092af266a6f9" translate="yes" xml:space="preserve">
          <source>Listing 7-19: Two &lt;code&gt;use&lt;/code&gt; statements where one is a subpath of the other</source>
          <target state="translated">Listing 7-19 : 하나는 다른 것의 서브 패스 인 두 개의 &lt;code&gt;use&lt;/code&gt; 문장</target>
        </trans-unit>
        <trans-unit id="a2aaaa4b01d1723ea36359ddbffb4df019af229b" translate="yes" xml:space="preserve">
          <source>Listing 7-1: A &lt;code&gt;front_of_house&lt;/code&gt; module containing other modules that then contain functions</source>
          <target state="translated">Listing 7-1 : 함수를 포함하는 다른 모듈을 포함 하는 &lt;code&gt;front_of_house&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="7ace7d42180fea41417a89f31ff66a7a735c654d" translate="yes" xml:space="preserve">
          <source>Listing 7-2 shows the module tree for the structure in Listing 7-1.</source>
          <target state="translated">목록 7-2는 목록 7-1의 구조에 대한 모듈 트리를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5cce3b1fe3cef4127713826e0a1511402930e99e" translate="yes" xml:space="preserve">
          <source>Listing 7-20: Combining the paths in Listing 7-19 into one &lt;code&gt;use&lt;/code&gt; statement</source>
          <target state="translated">Listing 7-20 : Listing 7-19의 경로를 하나의 &lt;code&gt;use&lt;/code&gt; 문 으로 결합</target>
        </trans-unit>
        <trans-unit id="0657fcf2cf161292e1ede5fad919e1df2f0ae319" translate="yes" xml:space="preserve">
          <source>Listing 7-21: Declaring the &lt;code&gt;front_of_house&lt;/code&gt; module whose body will be in &lt;em&gt;src/front_of_house.rs&lt;/em&gt;</source>
          <target state="translated">Listing 7-21 : 본문이 &lt;em&gt;src / front_of_house.rs&lt;/em&gt; 에 있는 &lt;code&gt;front_of_house&lt;/code&gt; 모듈 선언&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12fed27a189eb7e953d8431926a31688a62084bf" translate="yes" xml:space="preserve">
          <source>Listing 7-22: Definitions inside the &lt;code&gt;front_of_house&lt;/code&gt; module in &lt;em&gt;src/front_of_house.rs&lt;/em&gt;</source>
          <target state="translated">Listing 7-22 : &lt;em&gt;src / front_of_house.rs&lt;/em&gt; 의 &lt;code&gt;front_of_house&lt;/code&gt; 모듈 내부 정의&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c69834f077cc0ac84e532ef8edf36827562c8532" translate="yes" xml:space="preserve">
          <source>Listing 7-2: The module tree for the code in Listing 7-1</source>
          <target state="translated">Listing 7-2 : Listing 7-1의 코드를위한 모듈 트리</target>
        </trans-unit>
        <trans-unit id="17c05eb6de82b1aab0786252e0e077ec97ff008c" translate="yes" xml:space="preserve">
          <source>Listing 7-3: Calling the &lt;code&gt;add_to_waitlist&lt;/code&gt; function using absolute and relative paths</source>
          <target state="translated">Listing 7-3 : 절대 및 상대 경로를 사용하여 &lt;code&gt;add_to_waitlist&lt;/code&gt; 함수 호출</target>
        </trans-unit>
        <trans-unit id="138953296933de5b725582f9130d0b608bf9580f" translate="yes" xml:space="preserve">
          <source>Listing 7-4: Compiler errors from building the code in Listing 7-3</source>
          <target state="translated">코드 7-4 : 코드 7-3에서 코드를 빌드 할 때 발생하는 컴파일러 오류</target>
        </trans-unit>
        <trans-unit id="5358874765e3618db092d71798863b6af357d074" translate="yes" xml:space="preserve">
          <source>Listing 7-5: Declaring the &lt;code&gt;hosting&lt;/code&gt; module as &lt;code&gt;pub&lt;/code&gt; to use it from &lt;code&gt;eat_at_restaurant&lt;/code&gt;</source>
          <target state="translated">Listing 7-5 : &lt;code&gt;hosting&lt;/code&gt; 모듈을 &lt;code&gt;pub&lt;/code&gt; 으로 선언하여 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 에서 사용하기</target>
        </trans-unit>
        <trans-unit id="dbd4236a7438fe70ec1b7611b01adfc75ff00c6f" translate="yes" xml:space="preserve">
          <source>Listing 7-6: Compiler errors from building the code in Listing 7-5</source>
          <target state="translated">코드 7-6 : 코드 7-5에서 코드를 빌드 할 때 발생하는 컴파일러 오류</target>
        </trans-unit>
        <trans-unit id="c3941587d9eaf9be7f1ce3c3583d7701dc52a95d" translate="yes" xml:space="preserve">
          <source>Listing 7-7: Adding the &lt;code&gt;pub&lt;/code&gt; keyword to &lt;code&gt;mod hosting&lt;/code&gt; and &lt;code&gt;fn add_to_waitlist&lt;/code&gt; lets us call the function from &lt;code&gt;eat_at_restaurant&lt;/code&gt;</source>
          <target state="translated">7-7 목록 : 추가 중 &lt;code&gt;pub&lt;/code&gt; 에 키워드를 &lt;code&gt;mod hosting&lt;/code&gt; 및 &lt;code&gt;fn add_to_waitlist&lt;/code&gt; 우리의 함수를 호출 할 수 있습니다 &lt;code&gt;eat_at_restaurant&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="a76fe093faad5f27e1a067c78c0aafcf4b039312" translate="yes" xml:space="preserve">
          <source>Listing 7-8: Calling a function using a relative path starting with &lt;code&gt;super&lt;/code&gt;</source>
          <target state="translated">코드 7-8 : &lt;code&gt;super&lt;/code&gt; 로 시작하는 상대 경로를 사용하여 함수 호출</target>
        </trans-unit>
        <trans-unit id="26a8780dbfd1610ed031bd14769f19fc17e857a7" translate="yes" xml:space="preserve">
          <source>Listing 7-9: A struct with some public fields and some private fields</source>
          <target state="translated">Listing 7-9 : 일부 공개 필드와 일부 개인 필드가있는 구조체</target>
        </trans-unit>
        <trans-unit id="ec9e6adb30859e7e4f29693403f451b5e7def42d" translate="yes" xml:space="preserve">
          <source>Listing 8-10: Defining an &lt;code&gt;enum&lt;/code&gt; to store values of different types in one vector</source>
          <target state="translated">리스팅 8-10 : 하나의 벡터에 다른 유형의 값을 저장 하기위한 &lt;code&gt;enum&lt;/code&gt; 정의</target>
        </trans-unit>
        <trans-unit id="cea93b472282b28767ac501d12597afbe6576f40" translate="yes" xml:space="preserve">
          <source>Listing 8-11: Creating a new, empty &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">Listing 8-11 : 비어있는 새 &lt;code&gt;String&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="449bcdecf538f70bac98718626559a9dec686219" translate="yes" xml:space="preserve">
          <source>Listing 8-12: Using the &lt;code&gt;to_string&lt;/code&gt; method to create a &lt;code&gt;String&lt;/code&gt; from a string literal</source>
          <target state="translated">8-12 리스팅 다음 사용 &lt;code&gt;to_string&lt;/code&gt; 의 만드는 방법을 &lt;code&gt;String&lt;/code&gt; 문자열 리터럴에서을</target>
        </trans-unit>
        <trans-unit id="525ec57ebd9d64b742269ef80a5a9e1a1645f7b6" translate="yes" xml:space="preserve">
          <source>Listing 8-13: Using the &lt;code&gt;String::from&lt;/code&gt; function to create a &lt;code&gt;String&lt;/code&gt; from a string literal</source>
          <target state="translated">8-13 리스팅 다음 사용하여 &lt;code&gt;String::from&lt;/code&gt; 생성하는 기능을 &lt;code&gt;String&lt;/code&gt; 문자열 리터럴에서</target>
        </trans-unit>
        <trans-unit id="d906213ccce95be9469d5e7e1272b3c261eb636e" translate="yes" xml:space="preserve">
          <source>Listing 8-14: Storing greetings in different languages in strings</source>
          <target state="translated">코드 8-14 : 인사말을 다른 언어로 문자열에 저장</target>
        </trans-unit>
        <trans-unit id="4e16d57b32c6bb58e6e98758f0d5544954c88fbe" translate="yes" xml:space="preserve">
          <source>Listing 8-15: Appending a string slice to a &lt;code&gt;String&lt;/code&gt; using the &lt;code&gt;push_str&lt;/code&gt; method</source>
          <target state="translated">8-15 목록 : A를 문자열 조각을 덧붙이 &lt;code&gt;String&lt;/code&gt; 은 Using &lt;code&gt;push_str&lt;/code&gt; 의 방법을</target>
        </trans-unit>
        <trans-unit id="895983d0f0dfd6b316691d0a283fc6f26b14574d" translate="yes" xml:space="preserve">
          <source>Listing 8-16: Using a string slice after appending its contents to a &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">8-16 목록 : A와 내용을 추가 한 후 문자열 조각을 사용하여 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be1c3cc71d267147b47e57349e732c62e6e14554" translate="yes" xml:space="preserve">
          <source>Listing 8-17: Adding one character to a &lt;code&gt;String&lt;/code&gt; value using &lt;code&gt;push&lt;/code&gt;</source>
          <target state="translated">코드 8-17 : &lt;code&gt;push&lt;/code&gt; 를 사용하여 하나의 문자를 &lt;code&gt;String&lt;/code&gt; 값에 추가</target>
        </trans-unit>
        <trans-unit id="8e49cdf5a7dd6bf63cd0813321de49b8b65881bd" translate="yes" xml:space="preserve">
          <source>Listing 8-18: Using the &lt;code&gt;+&lt;/code&gt; operator to combine two &lt;code&gt;String&lt;/code&gt; values into a new &lt;code&gt;String&lt;/code&gt; value</source>
          <target state="translated">Listing 8-18 : &lt;code&gt;+&lt;/code&gt; 연산자를 사용하여 두 개의 &lt;code&gt;String&lt;/code&gt; 값을 새로운 &lt;code&gt;String&lt;/code&gt; 값 으로 결합</target>
        </trans-unit>
        <trans-unit id="5330837200303e59f08e75f294793b7ee402fe39" translate="yes" xml:space="preserve">
          <source>Listing 8-19: Attempting to use indexing syntax with a String</source>
          <target state="translated">코드 8-19 : 문자열과 함께 색인 구문 사용</target>
        </trans-unit>
        <trans-unit id="223eba8ee062db2b78f2b0de95ae46f68365d0b3" translate="yes" xml:space="preserve">
          <source>Listing 8-1: Creating a new, empty vector to hold values of type &lt;code&gt;i32&lt;/code&gt;</source>
          <target state="translated">목록 8-1 : &lt;code&gt;i32&lt;/code&gt; 유형의 값을 보유 할 비어있는 새 벡터 만들기</target>
        </trans-unit>
        <trans-unit id="74238a9658332d19668b2827615b25fb5c8271c5" translate="yes" xml:space="preserve">
          <source>Listing 8-20: Creating a new hash map and inserting some keys and values</source>
          <target state="translated">코드 8-20 : 새로운 해시 맵 생성 및 일부 키와 값 삽입</target>
        </trans-unit>
        <trans-unit id="05be5b643eed350dd5cafe3fdd6536c472f47ed7" translate="yes" xml:space="preserve">
          <source>Listing 8-21: Creating a hash map from a list of teams and a list of scores</source>
          <target state="translated">목록 8-21 : 팀 목록과 점수 목록에서 해시 맵 작성</target>
        </trans-unit>
        <trans-unit id="c1972681fe611d0dc8b4a05a054a71a52a976fa0" translate="yes" xml:space="preserve">
          <source>Listing 8-22: Showing that keys and values are owned by the hash map once they&amp;rsquo;re inserted</source>
          <target state="translated">Listing 8-22 : 키와 값이 삽입되면 해시 맵이 소유하고 있음을 보여줌</target>
        </trans-unit>
        <trans-unit id="e3917d0559c741a7086f2a76463784d8190476d3" translate="yes" xml:space="preserve">
          <source>Listing 8-23: Accessing the score for the Blue team stored in the hash map</source>
          <target state="translated">목록 8-23 : 해시 맵에 저장된 Blue 팀의 점수에 액세스</target>
        </trans-unit>
        <trans-unit id="2c2c2fb6f8789b4a667ac47de037219e5bfa607d" translate="yes" xml:space="preserve">
          <source>Listing 8-24: Replacing a value stored with a particular key</source>
          <target state="translated">코드 8-24 : 특정 키로 저장된 값 바꾸기</target>
        </trans-unit>
        <trans-unit id="da51f9790954bb7ba88a08baf3bbfb3c719c031b" translate="yes" xml:space="preserve">
          <source>Listing 8-25: Using the &lt;code&gt;entry&lt;/code&gt; method to only insert if the key does not already have a value</source>
          <target state="translated">코드 8-25 : &lt;code&gt;entry&lt;/code&gt; 방법을 사용하여 키에 값이없는 경우에만 삽입</target>
        </trans-unit>
        <trans-unit id="0728ab93b8e476a6cb26b8c39bda73e6af7fad94" translate="yes" xml:space="preserve">
          <source>Listing 8-26: Counting occurrences of words using a hash map that stores words and counts</source>
          <target state="translated">코드 8-26 : 단어와 개수를 저장하는 해시 맵을 사용하여 단어의 개수 계산</target>
        </trans-unit>
        <trans-unit id="5b801284224f3b692ce8aba962be2604afe8af86" translate="yes" xml:space="preserve">
          <source>Listing 8-2: Creating a new vector containing values</source>
          <target state="translated">Listing 8-2 : 값을 포함하는 새로운 벡터 만들기</target>
        </trans-unit>
        <trans-unit id="5ec25985edb7d257137523f2e85542597e022b7c" translate="yes" xml:space="preserve">
          <source>Listing 8-3: Using the &lt;code&gt;push&lt;/code&gt; method to add values to a vector</source>
          <target state="translated">Listing 8-3 : &lt;code&gt;push&lt;/code&gt; 메소드를 사용하여 벡터에 값 추가</target>
        </trans-unit>
        <trans-unit id="156f483c8c709fefaaa433516c634cc9665e65bd" translate="yes" xml:space="preserve">
          <source>Listing 8-4: Showing where the vector and its elements are dropped</source>
          <target state="translated">Listing 8-4 : 벡터와 요소가 놓인 위치 표시</target>
        </trans-unit>
        <trans-unit id="f15358ebeb06032f8545e418cd9bf9d9b52e722b" translate="yes" xml:space="preserve">
          <source>Listing 8-5 shows both methods of accessing a value in a vector, either with indexing syntax or the &lt;code&gt;get&lt;/code&gt; method.</source>
          <target state="translated">리스팅 8-5는 색인 구문 또는 &lt;code&gt;get&lt;/code&gt; 메소드 를 사용하여 벡터의 값에 액세스하는 두 가지 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="475e3ef70b582308fcd81d0204ad1d386df12e13" translate="yes" xml:space="preserve">
          <source>Listing 8-5: Using indexing syntax or the &lt;code&gt;get&lt;/code&gt; method to access an item in a vector</source>
          <target state="translated">Listing 8-5 : 색인 구문 또는 &lt;code&gt;get&lt;/code&gt; 메소드를 사용하여 벡터의 항목에 액세스</target>
        </trans-unit>
        <trans-unit id="b50a442cace32e79598ac4b4608fcfde6c143dd2" translate="yes" xml:space="preserve">
          <source>Listing 8-6: Attempting to access the element at index 100 in a vector containing five elements</source>
          <target state="translated">Listing 8-6 : 다섯 개의 요소를 포함하는 벡터의 인덱스 100에서 요소에 액세스하려고 시도</target>
        </trans-unit>
        <trans-unit id="bb8bfe9b988191756b3150651d6052a13005b6d8" translate="yes" xml:space="preserve">
          <source>Listing 8-7: Attempting to add an element to a vector while holding a reference to an item</source>
          <target state="translated">목록 8-7 : 항목에 대한 참조를 유지하면서 벡터에 요소를 추가하려고 시도</target>
        </trans-unit>
        <trans-unit id="4f50ef1e57a7d65ae00af617aaadd291853ff28f" translate="yes" xml:space="preserve">
          <source>Listing 8-8: Printing each element in a vector by iterating over the elements using a &lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="translated">Listing 8-8 : &lt;code&gt;for&lt;/code&gt; 루프를 사용하여 요소를 반복하여 벡터의 각 요소 인쇄</target>
        </trans-unit>
        <trans-unit id="dca8580f66c3e936ba07ecc234ef4bdeafdcb3eb" translate="yes" xml:space="preserve">
          <source>Listing 8-9: Iterating over mutable references to elements in a vector</source>
          <target state="translated">Listing 8-9 : 벡터의 요소에 대한 가변 참조에 대한 반복</target>
        </trans-unit>
        <trans-unit id="6cc132939bab570f42d87e47a7642c3f25c61e61" translate="yes" xml:space="preserve">
          <source>Listing 9-10: A &lt;code&gt;Guess&lt;/code&gt; type that will only continue with values between 1 and 100</source>
          <target state="translated">예제 9-10 : 1과 100 사이의 값으로 만 계속되는 &lt;code&gt;Guess&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="4c2e59eaf97a41a1a63401fdbff79c890dd98f4e" translate="yes" xml:space="preserve">
          <source>Listing 9-1: Attempting to access an element beyond the end of a vector, which will cause a call to &lt;code&gt;panic!&lt;/code&gt;</source>
          <target state="translated">Listing 9-1 : 벡터 끝 이외의 요소에 액세스하려고하면 호출이 &lt;code&gt;panic!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="582171a62a2171fac9838d42c4fd1d2f090cbd88" translate="yes" xml:space="preserve">
          <source>Listing 9-2: The backtrace generated by a call to &lt;code&gt;panic!&lt;/code&gt; displayed when the environment variable &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; is set</source>
          <target state="translated">리스팅 9-2 : &lt;code&gt;panic!&lt;/code&gt; 에 대한 호출에 의해 생성 된 역 추적 ! 환경 변수 &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; 가 설정 되면 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="036c67bd6abf8505561ce1f6632e697e4db21dff" translate="yes" xml:space="preserve">
          <source>Listing 9-3: Opening a file</source>
          <target state="translated">Listing 9-3 : 파일 열기</target>
        </trans-unit>
        <trans-unit id="564e77476cbfc201bd8532f0aa35b867559d7dc1" translate="yes" xml:space="preserve">
          <source>Listing 9-4: Using a &lt;code&gt;match&lt;/code&gt; expression to handle the &lt;code&gt;Result&lt;/code&gt; variants that might be returned</source>
          <target state="translated">Listing 9-4 : &lt;code&gt;match&lt;/code&gt; 표현식을 사용하여 반환 될 수 있는 &lt;code&gt;Result&lt;/code&gt; 변형 처리</target>
        </trans-unit>
        <trans-unit id="f7ff4b6392fc3709756a7aad7bdbd5c0684d1e92" translate="yes" xml:space="preserve">
          <source>Listing 9-5: Handling different kinds of errors in different ways</source>
          <target state="translated">코드 9-5 : 다양한 방식으로 다양한 종류의 오류 처리</target>
        </trans-unit>
        <trans-unit id="9fc8faf439c8af703e6a0f9b1214df4e47fbaae9" translate="yes" xml:space="preserve">
          <source>Listing 9-6: A function that returns errors to the calling code using &lt;code&gt;match&lt;/code&gt;</source>
          <target state="translated">코드 9-6 : &lt;code&gt;match&lt;/code&gt; 를 사용하여 호출 코드에 오류를 반환하는 함수</target>
        </trans-unit>
        <trans-unit id="45a1042ad1f9e9c0e92fd770a77a7ce6f879369b" translate="yes" xml:space="preserve">
          <source>Listing 9-7 shows an implementation of &lt;code&gt;read_username_from_file&lt;/code&gt; that has the same functionality as it had in Listing 9-6, but this implementation uses the &lt;code&gt;?&lt;/code&gt; operator.</source>
          <target state="translated">Listing 9-7은 Listing 9-6 에서와 동일한 기능을 가진 &lt;code&gt;read_username_from_file&lt;/code&gt; 의 구현을 보여 주지만이 구현은 &lt;code&gt;?&lt;/code&gt; 운영자.</target>
        </trans-unit>
        <trans-unit id="1b41b326b2c47edfb23652f3a3e5c56b62eebefe" translate="yes" xml:space="preserve">
          <source>Listing 9-7: A function that returns errors to the calling code using the &lt;code&gt;?&lt;/code&gt; operator</source>
          <target state="translated">코드 9-7 : &lt;code&gt;?&lt;/code&gt; 를 사용하여 호출 코드에 오류를 반환하는 함수 운영자</target>
        </trans-unit>
        <trans-unit id="90eaec2e8c17e57c827774a3de0679e7b72594d6" translate="yes" xml:space="preserve">
          <source>Listing 9-8: Chaining method calls after the &lt;code&gt;?&lt;/code&gt; operator</source>
          <target state="translated">코드 9-8 : &lt;code&gt;?&lt;/code&gt; 뒤에 체인 메소드 호출 운영자</target>
        </trans-unit>
        <trans-unit id="c49300b204d24f4d50d859027f56937d5db530ef" translate="yes" xml:space="preserve">
          <source>Listing 9-9: Using &lt;code&gt;fs::read_to_string&lt;/code&gt; instead of opening and then reading the file</source>
          <target state="translated">코드 9-9 : 파일을 열고 &lt;code&gt;fs::read_to_string&lt;/code&gt; 대신 fs :: read_to_string 사용</target>
        </trans-unit>
        <trans-unit id="927a3229b33488046e185d2eb8d7db010dbdbc8a" translate="yes" xml:space="preserve">
          <source>Literal Examples:</source>
          <target state="translated">리터럴 예 :</target>
        </trans-unit>
        <trans-unit id="9919907746fd6b7c7a456650766c572064bd9e4b" translate="yes" xml:space="preserve">
          <source>Literal expressions</source>
          <target state="translated">리터럴 표현</target>
        </trans-unit>
        <trans-unit id="7f5a73aa50395bb3fad4e850b2c352c0ecd8a3f6" translate="yes" xml:space="preserve">
          <source>Literal expressions in meta items must not include integer or float type suffixes.</source>
          <target state="translated">메타 항목의 리터럴 표현식에는 정수 또는 부동 유형 접미 부가 포함되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c0ba27c437e0ce3b461bf46459f4604a52e37849" translate="yes" xml:space="preserve">
          <source>Literal patterns</source>
          <target state="translated">리터럴 패턴</target>
        </trans-unit>
        <trans-unit id="82e462e8f97c8bdd6276f4b5c373ba583b4f9370" translate="yes" xml:space="preserve">
          <source>Literal patterns are always refutable.</source>
          <target state="translated">리터럴 패턴은 항상 반박 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="9bbdaa21e6555e891cb763804578f26091a26229" translate="yes" xml:space="preserve">
          <source>Literals in attributes are new and largely unsupported in built-in attributes. Work to support literals where appropriate is ongoing. Try using an unquoted name instead:</source>
          <target state="translated">속성의 리터럴은 새로운 속성이며 기본적으로 내장 속성에서 지원되지 않습니다. 적절한 경우 리터럴을 지원하도록 노력하십시오. 따옴표없는 이름을 대신 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="dbc8c5decc9f83fed394247a86e8a4ca9e1d7d8b" translate="yes" xml:space="preserve">
          <source>Loading content...</source>
          <target state="translated">콘텐츠로드 중 ...</target>
        </trans-unit>
        <trans-unit id="7febd461607e330888c39c4c3dd6d9b42a80af25" translate="yes" xml:space="preserve">
          <source>Loads a value from the atomic integer.</source>
          <target state="translated">원자 정수에서 값을로드합니다.</target>
        </trans-unit>
        <trans-unit id="fb84f17c620d261c4856d3c111914ab16da7ffce" translate="yes" xml:space="preserve">
          <source>Loads a value from the bool.</source>
          <target state="translated">부울에서 값을로드합니다.</target>
        </trans-unit>
        <trans-unit id="7943a687e92d5ccd3fba97225b68ef38f3dab8b9" translate="yes" xml:space="preserve">
          <source>Loads a value from the pointer.</source>
          <target state="translated">포인터에서 값을로드합니다.</target>
        </trans-unit>
        <trans-unit id="499843b110d742760d4d0c2a5bdb0fce66483737" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer.</source>
          <target state="translated">포인터의 현재 값을로드합니다.</target>
        </trans-unit>
        <trans-unit id="547dc7d8078ab1ae5287beebc8050b70c988e773" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::Acquire&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포인터의 현재 값을로드합니다. 이 내장 함수의 안정화 된 버전은 &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::Acquire&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;order&lt;/code&gt; 로 전달 하여 &lt;code&gt;load&lt;/code&gt; 방법을 통해 &lt;code&gt;std::sync::atomic&lt;/code&gt; 유형에서 사용 가능합니다 . 예를 들어, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3dae14c51da8e1782cd500b2c3aa7b9a70d4fafd" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포인터의 현재 값을로드합니다. 이 내장 함수의 안정화 된 버전은 &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;order&lt;/code&gt; 로 전달 하여 &lt;code&gt;load&lt;/code&gt; 방법을 통해 &lt;code&gt;std::sync::atomic&lt;/code&gt; 유형에서 사용 가능합니다 . 예를 들어, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af1bca8bbc6e2d920e534d675597f2249024f02b" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포인터의 현재 값을로드합니다. 이 내장 함수의 안정화 된 버전은 &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;order&lt;/code&gt; 로 전달 하여 &lt;code&gt;load&lt;/code&gt; 방법을 통해 &lt;code&gt;std::sync::atomic&lt;/code&gt; 유형에서 사용 가능합니다 . 예를 들어, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="941e9ffed9c95e1ea8344edfe59e65e40e4aeabc" translate="yes" xml:space="preserve">
          <source>Local Documentation</source>
          <target state="translated">지역 문서</target>
        </trans-unit>
        <trans-unit id="16eb226bdb0b2f8a9b4b77740cac4ee8957c3268" translate="yes" xml:space="preserve">
          <source>Local trait</source>
          <target state="translated">지역 특성</target>
        </trans-unit>
        <trans-unit id="7875c6daf8bab38e1a44c86ed1d0cfff1fb46f2c" translate="yes" xml:space="preserve">
          <source>Local type</source>
          <target state="translated">지역 유형</target>
        </trans-unit>
        <trans-unit id="d41199dfcb8b15e548fa69da859ee2a75aebcf49" translate="yes" xml:space="preserve">
          <source>Local variables are immutable unless declared otherwise. For example: &lt;code&gt;let mut x = ...&lt;/code&gt;.</source>
          <target state="translated">달리 선언하지 않는 한 지역 변수는 변경할 수 없습니다. 예를 들면 다음과 같습니다 &lt;code&gt;let mut x = ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b5802818ead588f51a1f91daa65fd2c4a74ea9" translate="yes" xml:space="preserve">
          <source>Local variables are not initialized when allocated. Instead, the entire frame worth of local variables are allocated, on frame-entry, in an uninitialized state. Subsequent statements within a function may or may not initialize the local variables. Local variables can be used only after they have been initialized through all reachable control flow paths.</source>
          <target state="translated">지역 변수는 할당 될 때 초기화되지 않습니다. 대신, 로컬 변수의 전체 프레임 가치는 초기화되지 않은 상태로 프레임 입력에 할당됩니다. 함수 내의 후속 명령문은 로컬 변수를 초기화하거나 초기화하지 않을 수 있습니다. 지역 변수는 도달 가능한 모든 제어 흐름 경로를 통해 초기화 된 후에 만 ​​사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="296cfd3580dfd613671d291555e1c1698e02ce35" translate="yes" xml:space="preserve">
          <source>Local variables declared in a &lt;code&gt;let&lt;/code&gt; statement are associated to the scope of the block that contains the &lt;code&gt;let&lt;/code&gt; statement. Local variables declared in a &lt;code&gt;match&lt;/code&gt; expression are associated to the arm scope of the &lt;code&gt;match&lt;/code&gt; arm that they are declared in.</source>
          <target state="translated">A의 선언 된 지역 변수 &lt;code&gt;let&lt;/code&gt; 문이 들어있는 블록의 범위에 관련되는 &lt;code&gt;let&lt;/code&gt; 문을. A의 선언 된 지역 변수 &lt;code&gt;match&lt;/code&gt; 표현의 팔 범위에 관련되어 &lt;code&gt;match&lt;/code&gt; 가 선언되는 암.</target>
        </trans-unit>
        <trans-unit id="24db2be24235176cea7a6a0080946e9e4814f0fd" translate="yes" xml:space="preserve">
          <source>Local variables, function parameters and temporaries are all dropped before the end of the function body. So a reference to them cannot be returned.</source>
          <target state="translated">지역 변수, 함수 매개 변수 및 임시는 모두 함수 본문이 끝나기 전에 삭제됩니다. 따라서 참조를 반환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b57f356d98e7b91fbe063da29276cb354247c06a" translate="yes" xml:space="preserve">
          <source>LocalKey</source>
          <target state="translated">LocalKey</target>
        </trans-unit>
        <trans-unit id="1a79b2e2221bebfe90a3ef9537c59ac43612dcbe" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow</source>
          <target state="translated">LocalKey::borrow</target>
        </trans-unit>
        <trans-unit id="3b9417d916bc3a3d747f53586258cc56e7c849f2" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow_mut</source>
          <target state="translated">LocalKey::borrow_mut</target>
        </trans-unit>
        <trans-unit id="768de79806df1b58e4582bceae4a562c725b710a" translate="yes" xml:space="preserve">
          <source>LocalKey::fmt</source>
          <target state="translated">LocalKey::fmt</target>
        </trans-unit>
        <trans-unit id="04db5bfa62eafd4f90e1a16ca6df970a09ea95bf" translate="yes" xml:space="preserve">
          <source>LocalKey::from</source>
          <target state="translated">LocalKey::from</target>
        </trans-unit>
        <trans-unit id="66396cd5cf67dc7801926e9745215b0456deef7b" translate="yes" xml:space="preserve">
          <source>LocalKey::into</source>
          <target state="translated">LocalKey::into</target>
        </trans-unit>
        <trans-unit id="cc21a18a97944363056d0fa4e6071c4bb8782051" translate="yes" xml:space="preserve">
          <source>LocalKey::try_from</source>
          <target state="translated">LocalKey::try_from</target>
        </trans-unit>
        <trans-unit id="e500db7b861442f8600e95f67099831683ceec87" translate="yes" xml:space="preserve">
          <source>LocalKey::try_into</source>
          <target state="translated">LocalKey::try_into</target>
        </trans-unit>
        <trans-unit id="309bb438f79f8e518c86850c1b3d05f00f6bafd1" translate="yes" xml:space="preserve">
          <source>LocalKey::try_with</source>
          <target state="translated">LocalKey::try_with</target>
        </trans-unit>
        <trans-unit id="3817b1685d6cc5c6708aa6297cac9391932b8ae0" translate="yes" xml:space="preserve">
          <source>LocalKey::type_id</source>
          <target state="translated">LocalKey::type_id</target>
        </trans-unit>
        <trans-unit id="4247f14d0fda1ef40e2b23dbb4fcb4e5a24deebc" translate="yes" xml:space="preserve">
          <source>LocalKey::with</source>
          <target state="translated">LocalKey::with</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="de8e3479056d230460e3d065cadbbb3e88b9e0a1" translate="yes" xml:space="preserve">
          <source>Location::borrow</source>
          <target state="translated">Location::borrow</target>
        </trans-unit>
        <trans-unit id="1d9e53c65b573e90d70ad87be11180d0ded0def9" translate="yes" xml:space="preserve">
          <source>Location::borrow_mut</source>
          <target state="translated">Location::borrow_mut</target>
        </trans-unit>
        <trans-unit id="06f7857fae6348ebddb7925de15be023ff302293" translate="yes" xml:space="preserve">
          <source>Location::column</source>
          <target state="translated">Location::column</target>
        </trans-unit>
        <trans-unit id="9fb181d2c69e2035b76e3ee310eed5924685b399" translate="yes" xml:space="preserve">
          <source>Location::file</source>
          <target state="translated">Location::file</target>
        </trans-unit>
        <trans-unit id="ec687275a890211ca3e866f1220c998706144cc6" translate="yes" xml:space="preserve">
          <source>Location::fmt</source>
          <target state="translated">Location::fmt</target>
        </trans-unit>
        <trans-unit id="60120cb59b875444b733ef5f228a29149ea9b6c5" translate="yes" xml:space="preserve">
          <source>Location::from</source>
          <target state="translated">Location::from</target>
        </trans-unit>
        <trans-unit id="b6980837efc63ab1c2ec1f3155219869677cee35" translate="yes" xml:space="preserve">
          <source>Location::into</source>
          <target state="translated">Location::into</target>
        </trans-unit>
        <trans-unit id="efa58fc8c7e3ad70a14072fba0190415c7dbb3ad" translate="yes" xml:space="preserve">
          <source>Location::line</source>
          <target state="translated">Location::line</target>
        </trans-unit>
        <trans-unit id="9c9f6004c28a00f9a92ccf386a3208c153f86d7b" translate="yes" xml:space="preserve">
          <source>Location::to_string</source>
          <target state="translated">Location::to_string</target>
        </trans-unit>
        <trans-unit id="efab285ec70c363438a49f6d908e951d125ddf5c" translate="yes" xml:space="preserve">
          <source>Location::try_from</source>
          <target state="translated">Location::try_from</target>
        </trans-unit>
        <trans-unit id="84e4f49094e8dfe9c876d276615f6aa496dc6c2b" translate="yes" xml:space="preserve">
          <source>Location::try_into</source>
          <target state="translated">Location::try_into</target>
        </trans-unit>
        <trans-unit id="5ebbd6025914da908b121a8e402d26c288533b08" translate="yes" xml:space="preserve">
          <source>Location::type_id</source>
          <target state="translated">Location::type_id</target>
        </trans-unit>
        <trans-unit id="1240d9496629774bebbf2088261a9f110654375b" translate="yes" xml:space="preserve">
          <source>LockResult</source>
          <target state="translated">LockResult</target>
        </trans-unit>
        <trans-unit id="973f5f3e39546b3553d2987086d61fa219ab8dac" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input into the specified buffer.</source>
          <target state="translated">이 핸들을 잠그고 지정된 버퍼로 입력 라인을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="3b8eda572be35f6bbbdfd0a9fcbf5c187366d189" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input, appending it to the specified buffer.</source>
          <target state="translated">이 핸들을 잠그고 입력 한 줄을 읽고 지정된 버퍼에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1ad4d3a2b606aa7060e1a91cf488d094b1348484" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard error stream, returning a writable guard.</source>
          <target state="translated">이 핸들을 표준 오류 스트림에 잠그고 쓰기 가능한 가드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="15f06fe991e3f223535bf849d1c1cc252a2456f8" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard input stream, returning a readable guard.</source>
          <target state="translated">이 핸들을 표준 입력 스트림에 잠그고 읽을 수있는 가드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="782ff8719cb8b6960732a41787ca938c115b040f" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard output stream, returning a writable guard.</source>
          <target state="translated">이 핸들을 표준 출력 스트림에 고정 해, 쓰기 가능한 가드를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="0c8592e141df4b4bfc0222b0946f49bc89c81c2d" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with exclusive write access, blocking the current thread until it can be acquired.</source>
          <target state="translated">독점적 인 쓰기 액세스로이 rwlock을 잠그고 현재 스레드를 확보 할 수있을 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="597e7ee91c82cf5999ea71d9dea5b733c88212bd" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with shared read access, blocking the current thread until it can be acquired.</source>
          <target state="translated">공유 읽기 액세스로이 rwlock을 잠그고 현재 스레드를 확보 할 수있을 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="db804819fe316197c87a07887ca38ba5bc608df0" translate="yes" xml:space="preserve">
          <source>Logging errors before discarding them:</source>
          <target state="translated">삭제하기 전에 로깅 오류 :</target>
        </trans-unit>
        <trans-unit id="ee9e48c47419cad9fed4445a06222f604e817eeb" translate="yes" xml:space="preserve">
          <source>Logical &quot;and&quot; with a boolean value.</source>
          <target state="translated">부울 값이있는 논리 &quot;and&quot;</target>
        </trans-unit>
        <trans-unit id="f9d91b6f27e396f96bc7e4d5c176995f52cb3df3" translate="yes" xml:space="preserve">
          <source>Logical &quot;nand&quot; with a boolean value.</source>
          <target state="translated">부울 값이있는 논리 &quot;nand&quot;</target>
        </trans-unit>
        <trans-unit id="c80813e42e08f1c9f8127158014a106210689d6f" translate="yes" xml:space="preserve">
          <source>Logical &quot;or&quot; with a boolean value.</source>
          <target state="translated">부울 값이있는 논리 &quot;또는&quot;</target>
        </trans-unit>
        <trans-unit id="99150192e85afda9231de9dfbcc0991931e0b296" translate="yes" xml:space="preserve">
          <source>Logical &quot;xor&quot; with a boolean value.</source>
          <target state="translated">부울 값이있는 논리 &quot;xor&quot;</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">논리 AND</target>
        </trans-unit>
        <trans-unit id="e7e803ba6df9ebf5f542bc2b7ce91db2dc559f7e" translate="yes" xml:space="preserve">
          <source>Logical NOT</source>
          <target state="translated">논리 NOT</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">논리 OR</target>
        </trans-unit>
        <trans-unit id="93425a1fb1ee61afdd5c8bde53ad3e437fa5c378" translate="yes" xml:space="preserve">
          <source>Logical XOR</source>
          <target state="translated">논리 XOR</target>
        </trans-unit>
        <trans-unit id="7fe7fed5d2180339a03ebc2bbe54c97c8777625e" translate="yes" xml:space="preserve">
          <source>Logically &lt;code&gt;true&lt;/code&gt; is not equal to &lt;a href=&quot;keyword.false&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">논리적으로 &lt;code&gt;true&lt;/code&gt; 는 &lt;a href=&quot;keyword.false&quot;&gt; &lt;code&gt;false&lt;/code&gt; 와&lt;/a&gt; 같지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a94122f802a61cca6ca880b82b748cd175aece3a" translate="yes" xml:space="preserve">
          <source>Longer code examples are in a syntax highlighted box that has controls for copying, executing, and showing hidden lines in the top right corner.</source>
          <target state="translated">더 긴 코드 예제는 구문 강조 상자에 있으며 오른쪽 위 모서리에 은선을 복사, 실행 및 표시하기위한 컨트롤이 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa73733853589d673d333c74fe5abae906356928" translate="yes" xml:space="preserve">
          <source>Look at the generated &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="translated">생성 된 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일을보십시오.</target>
        </trans-unit>
        <trans-unit id="f85711ffe46c9fb58f69ce5d1973d7acbb710f52" translate="yes" xml:space="preserve">
          <source>Looking at the request line data we received from running our program so far, we see that &lt;code&gt;GET&lt;/code&gt; is the method, &lt;em&gt;/&lt;/em&gt; is the request URI, and &lt;code&gt;HTTP/1.1&lt;/code&gt; is the version.</source>
          <target state="translated">지금까지 프로그램을 실행하여 수신 한 요청 라인 데이터를 살펴보면 &lt;code&gt;GET&lt;/code&gt; 이 메소드이고 &lt;em&gt;/&lt;/em&gt; 는 요청 URI이며 &lt;code&gt;HTTP/1.1&lt;/code&gt; 입니다. 이 버전임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52462e9d8cfe0534f0c444d216cecaa174866ab3" translate="yes" xml:space="preserve">
          <source>Looks good! Now let&amp;rsquo;s introduce a bug in our code by removing the condition that the &lt;code&gt;new&lt;/code&gt; function will panic if the value is greater than 100:</source>
          <target state="translated">좋아 보인다! 이제 값이 100보다 큰 경우 &lt;code&gt;new&lt;/code&gt; 함수가 패닉 상태를 제거하여 코드에 버그를 도입 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="ab842a980e44426037703edaca40e816d1bc12c6" translate="yes" xml:space="preserve">
          <source>Looks like that still works! Now, let&amp;rsquo;s run the program with &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; but with the same query &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">여전히 작동하는 것 같습니다! 이제 &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; 를 &lt;code&gt;1&lt;/code&gt; 로 설정 하고 같은 쿼리 &lt;code&gt;to&lt;/code&gt; 하여 프로그램을 실행 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="02c45b0f7d3c1dd9b57ad06eaf274c8641f5e41b" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements in a slice of pairs sorted by their second elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">두 번째 요소를 기준으로 한 쌍의 슬라이스에서 일련의 4 가지 요소를 찾습니다. 첫 번째는 고유하게 결정된 위치로 발견됩니다. 두 번째와 세 번째는 찾을 수 없습니다. 네 번째는 &lt;code&gt;[1, 4]&lt;/code&gt; 모든 위치와 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe6ce8703b6504f9854c260e42a417c77143b940" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">일련의 네 가지 요소를 찾습니다. 첫 번째는 고유하게 결정된 위치로 발견됩니다. 두 번째와 세 번째는 찾을 수 없습니다. 네 번째는 &lt;code&gt;[1, 4]&lt;/code&gt; 모든 위치와 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f34585a43eb20d762a66a3fa82814993a65ae4f4" translate="yes" xml:space="preserve">
          <source>Loop bodies (&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">루프 본문 ( &lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="146e4f6cadda9361ba6dd2659cb14c387bbabff7" translate="yes" xml:space="preserve">
          <source>Loop indefinitely.</source>
          <target state="translated">무기한 반복합니다.</target>
        </trans-unit>
        <trans-unit id="910baeda8a78b7fdbccdb9b95411cc6f09c93072" translate="yes" xml:space="preserve">
          <source>Loop label</source>
          <target state="translated">루프 라벨</target>
        </trans-unit>
        <trans-unit id="8ceed8c250a89a0eef89445e73e6213e28957b27" translate="yes" xml:space="preserve">
          <source>Loop labels</source>
          <target state="translated">루프 라벨</target>
        </trans-unit>
        <trans-unit id="67f6007e968fdc453361267f6ef12b769dbb1f4d" translate="yes" xml:space="preserve">
          <source>Loop while a condition is upheld.</source>
          <target state="translated">조건이 유지되는 동안 루프합니다.</target>
        </trans-unit>
        <trans-unit id="983e951f3609eb8366a28b4678803cdb5faf2344" translate="yes" xml:space="preserve">
          <source>Looping Through a Collection with &lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt; 를 사용하여 컬렉션 반복</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="82f9a94d3567f8b48be0a89547b5a502496697d3" translate="yes" xml:space="preserve">
          <source>Loops that dynamically terminate.</source>
          <target state="translated">동적으로 종료되는 루프.</target>
        </trans-unit>
        <trans-unit id="7a10d86424203ece50b876ab703fbf8511a44eb3" translate="yes" xml:space="preserve">
          <source>Low level implementations of things like collections, which need to manually drop their data, should use this function to avoid unnecessarily trying to drop all their contents when they are destroyed. This might not make a difference in release builds (where a loop that has no side-effects is easily detected and eliminated), but is often a big win for debug builds.</source>
          <target state="translated">데이터를 수동으로 삭제해야하는 콜렉션과 같은 저수준 구현은이 기능을 사용하여 모든 컨텐츠가 파괴 될 때 불필요하게 모든 컨텐츠를 삭제하지 않도록해야합니다. 이로 인해 릴리스 빌드 (부작용이없는 루프를 쉽게 감지 및 제거)에서 차이를 만들 수는 없지만 디버그 빌드에서 큰 승리를 거두는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="4c4c04816367b618249cf624dd23204ea48a2ca0" translate="yes" xml:space="preserve">
          <source>Low-intensity workout plans will recommend a number of push-ups and sit-ups based on the complex algorithm we&amp;rsquo;re simulating.</source>
          <target state="translated">저 강도 운동 계획은 시뮬레이션중인 복잡한 알고리즘을 기반으로 여러 팔 굽혀 펴기와 윗몸 일으키기를 권장합니다.</target>
        </trans-unit>
        <trans-unit id="6b1ede9bf060e1ecd9cc0282a8fdc16b5797d80a" translate="yes" xml:space="preserve">
          <source>LowerExp</source>
          <target state="translated">LowerExp</target>
        </trans-unit>
        <trans-unit id="e465df3a2e8bac6e03c650115f311c8cf3119812" translate="yes" xml:space="preserve">
          <source>LowerExp::fmt</source>
          <target state="translated">LowerExp::fmt</target>
        </trans-unit>
        <trans-unit id="5d91084dfc80f601e5d058842fda3944bfa31f05" translate="yes" xml:space="preserve">
          <source>LowerHex</source>
          <target state="translated">LowerHex</target>
        </trans-unit>
        <trans-unit id="6487af46ece97a6dff859b02884a2d7af105ba28" translate="yes" xml:space="preserve">
          <source>LowerHex::fmt</source>
          <target state="translated">LowerHex::fmt</target>
        </trans-unit>
        <trans-unit id="f41a055096fba2f5ebbddc8916d81727739dbdb3" translate="yes" xml:space="preserve">
          <source>Lt</source>
          <target state="translated">Lt</target>
        </trans-unit>
        <trans-unit id="da61d0dd8b2c285f06eeb2dd41678c18a2b332e0" translate="yes" xml:space="preserve">
          <source>Luckily, Rust has a solution to this problem: string slices.</source>
          <target state="translated">운좋게도 Rust는이 문제에 대한 해결책을 가지고 있습니다 : 문자열 슬라이스.</target>
        </trans-unit>
        <trans-unit id="e6ceaa126b03ac34bb0e0b13dff478218c35e1e0" translate="yes" xml:space="preserve">
          <source>M matches &amp;beta;,</source>
          <target state="translated">M은 &amp;beta;와 일치하고</target>
        </trans-unit>
        <trans-unit id="213da531ac0923945abaf2dc2942d501e202b6c8" translate="yes" xml:space="preserve">
          <source>MAIN_SEPARATOR</source>
          <target state="translated">MAIN_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="eee9360f4b93f57def5c15bd6ae691f1478ff551" translate="yes" xml:space="preserve">
          <source>MANTISSA_DIGITS</source>
          <target state="translated">MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="6968182b7ddb75495db1d95a77b0e45847ee26f5" translate="yes" xml:space="preserve">
          <source>MAX_10_EXP</source>
          <target state="translated">MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="a339add390e7a87f01f39970f8d80d34d56891c9" translate="yes" xml:space="preserve">
          <source>MAX_EXP</source>
          <target state="translated">MAX_EXP</target>
        </trans-unit>
        <trans-unit id="04e66352aa8f9c4c5f26b71bf380973ada994760" translate="yes" xml:space="preserve">
          <source>MIN</source>
          <target state="translated">MIN</target>
        </trans-unit>
        <trans-unit id="3a02ac2670621244b8a3fc445809cf4d21c72fca" translate="yes" xml:space="preserve">
          <source>MIN_10_EXP</source>
          <target state="translated">MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="cb4eece303b67f51c9c2c8b3e7de70d833dfe224" translate="yes" xml:space="preserve">
          <source>MIN_EXP</source>
          <target state="translated">MIN_EXP</target>
        </trans-unit>
        <trans-unit id="a0bd516b99da79f578eb0a04fc4a312b707a19ff" translate="yes" xml:space="preserve">
          <source>MIN_POSITIVE</source>
          <target state="translated">MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="c13543311f46a50ff427d8868b100b68e78eb3ab" translate="yes" xml:space="preserve">
          <source>ML Kit, Cyclone: region based memory management</source>
          <target state="translated">ML 키트, 사이클론 : 지역 기반 메모리 관리</target>
        </trans-unit>
        <trans-unit id="24bdfb38558728e0acc797866530efdca1ba0bef" translate="yes" xml:space="preserve">
          <source>Machine-dependent integer types</source>
          <target state="translated">기계 종속 정수 유형</target>
        </trans-unit>
        <trans-unit id="2659290a82d88237585af5f472bc1ac313e43ce0" translate="yes" xml:space="preserve">
          <source>Macro Invocation</source>
          <target state="translated">매크로 호출</target>
        </trans-unit>
        <trans-unit id="9e730842d2f7a25329bbe5cfb07dcdf0d39c81ff" translate="yes" xml:space="preserve">
          <source>Macro attributes</source>
          <target state="translated">매크로 속성</target>
        </trans-unit>
        <trans-unit id="b1e739693999a37495960fe83d99415a95be52b3" translate="yes" xml:space="preserve">
          <source>Macro authors need to be careful to ensure their macros work in as many contexts as possible given this limitation. This often includes using absolute paths to items in libraries (for example, &lt;code&gt;::std::option::Option&lt;/code&gt; instead of &lt;code&gt;Option&lt;/code&gt;) or by ensuring that generated functions have names that are unlikely to clash with other functions (like &lt;code&gt;__internal_foo&lt;/code&gt; instead of &lt;code&gt;foo&lt;/code&gt;).</source>
          <target state="translated">매크로 작성자는 이러한 제한이 주어지면 매크로가 가능한 한 많은 컨텍스트에서 작동하도록주의해야합니다. 이것은 종종 (예를 들어 도서관에서 항목에 절대 경로를 사용하여 포함 &lt;code&gt;::std::option::Option&lt;/code&gt; 대신 &lt;code&gt;Option&lt;/code&gt; ) 또는 생성 기능 (같은 다른 기능과 충돌 할 가능성이 이름을 가지고 있음을 보장함으로써 &lt;code&gt;__internal_foo&lt;/code&gt; 대신 &lt;code&gt;foo&lt;/code&gt; 는 )을 .</target>
        </trans-unit>
        <trans-unit id="3c67805f00d2045185be06759bad2344ffccbcb7" translate="yes" xml:space="preserve">
          <source>Macro capture</source>
          <target state="translated">매크로 캡처</target>
        </trans-unit>
        <trans-unit id="a44b5f0e39bbc761353368be4a96890b94a75063" translate="yes" xml:space="preserve">
          <source>Macro expansion</source>
          <target state="translated">매크로 확장</target>
        </trans-unit>
        <trans-unit id="ae933d8a4781e5105243afefc15101f8a2c8287f" translate="yes" xml:space="preserve">
          <source>Macro import declaration was malformed.</source>
          <target state="translated">매크로 가져 오기 선언이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="41a72c642fcf8114343e8c949ed168a43b64c413" translate="yes" xml:space="preserve">
          <source>Macro import declarations were malformed.</source>
          <target state="translated">매크로 가져 오기 선언이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd9aa77628f4b1ec118826262de0ca28626e59d7" translate="yes" xml:space="preserve">
          <source>Macro invocation</source>
          <target state="translated">매크로 호출</target>
        </trans-unit>
        <trans-unit id="433dbd0aed916c8f4209de792ed63fa554a2240d" translate="yes" xml:space="preserve">
          <source>Macro placeholders</source>
          <target state="translated">매크로 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="6f9585989499055c950f0a1cea9ea35eab211a07" translate="yes" xml:space="preserve">
          <source>Macro repetition</source>
          <target state="translated">매크로 반복</target>
        </trans-unit>
        <trans-unit id="6bf8e1253f5bfdd2b376a7a473244315ed08859d" translate="yes" xml:space="preserve">
          <source>Macro std::asm</source>
          <target state="translated">매크로 std :: asm</target>
        </trans-unit>
        <trans-unit id="11f058360dbba18a3c9f77a849989539cec6306a" translate="yes" xml:space="preserve">
          <source>Macro std::assert</source>
          <target state="translated">매크로 std :: assert</target>
        </trans-unit>
        <trans-unit id="f000aa0f88374a6c56665c06a8c607808c0582af" translate="yes" xml:space="preserve">
          <source>Macro std::assert_eq</source>
          <target state="translated">매크로 std :: assert_eq</target>
        </trans-unit>
        <trans-unit id="26ec6afffddbd2b766331235eb12a65ccaed119d" translate="yes" xml:space="preserve">
          <source>Macro std::assert_ne</source>
          <target state="translated">매크로 std :: assert_ne</target>
        </trans-unit>
        <trans-unit id="0a6f62a4d46be57d97ef44f55d11e47c88244874" translate="yes" xml:space="preserve">
          <source>Macro std::cfg</source>
          <target state="translated">매크로 std :: cfg</target>
        </trans-unit>
        <trans-unit id="5b1da2fc3d6c63a8a94a2c677e11168ebecb51d6" translate="yes" xml:space="preserve">
          <source>Macro std::clone::Clone</source>
          <target state="translated">매크로 std :: clone :: Clone</target>
        </trans-unit>
        <trans-unit id="c39772ee2d9f0c0278ec923084cb041e5da952b3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Eq</source>
          <target state="translated">매크로 std :: cmp :: Eq</target>
        </trans-unit>
        <trans-unit id="e877ae1439ca9c726ebd135e649f5b7ca4c7b811" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Ord</source>
          <target state="translated">매크로 std :: cmp :: Ord</target>
        </trans-unit>
        <trans-unit id="1e425e67e8014b07972fbe5912e9c5c6b80f20cc" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialEq</source>
          <target state="translated">매크로 std :: cmp :: PartialEq</target>
        </trans-unit>
        <trans-unit id="00e2b89b994cff94c4b95827866a952752d72fe3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialOrd</source>
          <target state="translated">매크로 std :: cmp :: PartialOrd</target>
        </trans-unit>
        <trans-unit id="bfc3353d435f62be42330b50878e3da5db2c0ebf" translate="yes" xml:space="preserve">
          <source>Macro std::column</source>
          <target state="translated">매크로 std :: column</target>
        </trans-unit>
        <trans-unit id="8269c763b50aa38775a2c7cb4b26145e32e4874c" translate="yes" xml:space="preserve">
          <source>Macro std::compile_error</source>
          <target state="translated">매크로 std :: compile_error</target>
        </trans-unit>
        <trans-unit id="15c727a0d120c4960a5206dfd7af2c20bdd517dc" translate="yes" xml:space="preserve">
          <source>Macro std::concat</source>
          <target state="translated">매크로 std :: concat</target>
        </trans-unit>
        <trans-unit id="df9ffe481ee3d242913fbac3b2dc97e3be05c8cc" translate="yes" xml:space="preserve">
          <source>Macro std::concat_idents</source>
          <target state="translated">매크로 std :: concat_idents</target>
        </trans-unit>
        <trans-unit id="1d922e73017d104fe46ceb5c4220f8ea3271a322" translate="yes" xml:space="preserve">
          <source>Macro std::dbg</source>
          <target state="translated">매크로 std :: dbg</target>
        </trans-unit>
        <trans-unit id="a90c90eae394db424024f268470fa895b3873ccd" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert</source>
          <target state="translated">매크로 std :: debug_assert</target>
        </trans-unit>
        <trans-unit id="8e74b5bd11d5d45437c1c09fd22f126276ff08d6" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_eq</source>
          <target state="translated">매크로 std :: debug_assert_eq</target>
        </trans-unit>
        <trans-unit id="4dc1eec2b9f87d8b7da901765d50ea403fdbf99b" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_ne</source>
          <target state="translated">매크로 std :: debug_assert_ne</target>
        </trans-unit>
        <trans-unit id="ba169214991fc2e32da613dd8e35cb373c6ba0dc" translate="yes" xml:space="preserve">
          <source>Macro std::default::Default</source>
          <target state="translated">매크로 std :: default :: Default</target>
        </trans-unit>
        <trans-unit id="cf29f83996c4fac331e1f5ba5b531aba1c1c6d23" translate="yes" xml:space="preserve">
          <source>Macro std::env</source>
          <target state="translated">매크로 std :: env</target>
        </trans-unit>
        <trans-unit id="aba939d2bf68b43edae33ec09ebbd714b2d6987c" translate="yes" xml:space="preserve">
          <source>Macro std::eprint</source>
          <target state="translated">매크로 std :: eprint</target>
        </trans-unit>
        <trans-unit id="6ffb1f04cc34f8411495e5f8ebb85e8a15409308" translate="yes" xml:space="preserve">
          <source>Macro std::eprintln</source>
          <target state="translated">매크로 std :: eprintln</target>
        </trans-unit>
        <trans-unit id="c6bfe7e4fa137ef90068b684e50c67e41d606764" translate="yes" xml:space="preserve">
          <source>Macro std::file</source>
          <target state="translated">매크로 std :: file</target>
        </trans-unit>
        <trans-unit id="491c90c3bda044306071e14b9c8a4fa10b1e7782" translate="yes" xml:space="preserve">
          <source>Macro std::fmt::Debug</source>
          <target state="translated">매크로 std :: fmt :: Debug</target>
        </trans-unit>
        <trans-unit id="e14394b9c26c15c0b3312ed06d14291ed3726b29" translate="yes" xml:space="preserve">
          <source>Macro std::format</source>
          <target state="translated">매크로 std :: format</target>
        </trans-unit>
        <trans-unit id="dd107af8410c93f9885e0bcf221cd750b3983786" translate="yes" xml:space="preserve">
          <source>Macro std::format_args</source>
          <target state="translated">매크로 std :: format_args</target>
        </trans-unit>
        <trans-unit id="9b2f7ae3773485eb4a95ce3b2d9d979e1397281b" translate="yes" xml:space="preserve">
          <source>Macro std::format_args_nl</source>
          <target state="translated">매크로 std :: format_args_nl</target>
        </trans-unit>
        <trans-unit id="72b78145ec9d014d9f3be2b89cc19c2819319afb" translate="yes" xml:space="preserve">
          <source>Macro std::global_asm</source>
          <target state="translated">매크로 std :: global_asm</target>
        </trans-unit>
        <trans-unit id="f1f0f0276731bf5a943740728b2a4d9e8d9311ea" translate="yes" xml:space="preserve">
          <source>Macro std::hash::Hash</source>
          <target state="translated">매크로 std :: hash :: Hash</target>
        </trans-unit>
        <trans-unit id="2b4f30c9cc31a223b1f4745e8265d159c78f6d54" translate="yes" xml:space="preserve">
          <source>Macro std::include</source>
          <target state="translated">매크로 std :: include</target>
        </trans-unit>
        <trans-unit id="f78f89f7fc1bec378f1151165dbb68895d22a8c6" translate="yes" xml:space="preserve">
          <source>Macro std::include_bytes</source>
          <target state="translated">매크로 std :: include_bytes</target>
        </trans-unit>
        <trans-unit id="7bd0028a712b614e4315a9416e07d5bcac8d4159" translate="yes" xml:space="preserve">
          <source>Macro std::include_str</source>
          <target state="translated">매크로 std :: include_str</target>
        </trans-unit>
        <trans-unit id="537e36d2d2ad3fbbb990e6d081f9a1f6bfb6c7ee" translate="yes" xml:space="preserve">
          <source>Macro std::is_aarch64_feature_detected</source>
          <target state="translated">매크로 std :: is_aarch64_feature_detected</target>
        </trans-unit>
        <trans-unit id="1709caf08a9d4114d479c826e9f270f25a4438cf" translate="yes" xml:space="preserve">
          <source>Macro std::is_arm_feature_detected</source>
          <target state="translated">매크로 std :: is_arm_feature_detected</target>
        </trans-unit>
        <trans-unit id="444bc0075b65384ad493e53d06b947d0a6982b9f" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips64_feature_detected</source>
          <target state="translated">매크로 std :: is_mips64_feature_detected</target>
        </trans-unit>
        <trans-unit id="15cb20dbc2a3ff0fed9508f4bc148aa082229773" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips_feature_detected</source>
          <target state="translated">매크로 std :: is_mips_feature_detected</target>
        </trans-unit>
        <trans-unit id="37b5ae59c5f1ef8a3b8e22937bb56921b20a8ca3" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc64_feature_detected</source>
          <target state="translated">매크로 std :: is_powerpc64_feature_detected</target>
        </trans-unit>
        <trans-unit id="155e3dbc931dc2bf21378e8d9285a8e305f3f1e6" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc_feature_detected</source>
          <target state="translated">매크로 std :: is_powerpc_feature_detected</target>
        </trans-unit>
        <trans-unit id="c0fd68c1457055c7bddcb10c03ea35839bdace1d" translate="yes" xml:space="preserve">
          <source>Macro std::is_x86_feature_detected</source>
          <target state="translated">매크로 std :: is_x86_feature_detected</target>
        </trans-unit>
        <trans-unit id="39ce5d75824d32f564b1ccd0dea600d21e870a23" translate="yes" xml:space="preserve">
          <source>Macro std::line</source>
          <target state="translated">매크로 std :: line</target>
        </trans-unit>
        <trans-unit id="38f4201b011987c888b975ac8bae265607691cd4" translate="yes" xml:space="preserve">
          <source>Macro std::llvm_asm</source>
          <target state="translated">매크로 std :: llvm_asm</target>
        </trans-unit>
        <trans-unit id="e5ebce41e30105a7e8b0bb180fd3ef13677f6073" translate="yes" xml:space="preserve">
          <source>Macro std::log_syntax</source>
          <target state="translated">매크로 std :: log_syntax</target>
        </trans-unit>
        <trans-unit id="0c26c6abfa84b03c939f7a1ab38ac24077e0391e" translate="yes" xml:space="preserve">
          <source>Macro std::marker::Copy</source>
          <target state="translated">매크로 std :: marker :: Copy</target>
        </trans-unit>
        <trans-unit id="66b9aaef0eccf3e0af6f2d1d5e113ee16766123b" translate="yes" xml:space="preserve">
          <source>Macro std::matches</source>
          <target state="translated">매크로 std :: matches</target>
        </trans-unit>
        <trans-unit id="8f90aa7d77c7e0afa2f4b43c2ff5e0b6df3b9c86" translate="yes" xml:space="preserve">
          <source>Macro std::module_path</source>
          <target state="translated">매크로 std :: module_path</target>
        </trans-unit>
        <trans-unit id="3d2ebea8fd7f8696f7403dfb7d8b231c68a49d1b" translate="yes" xml:space="preserve">
          <source>Macro std::option_env</source>
          <target state="translated">매크로 std :: option_env</target>
        </trans-unit>
        <trans-unit id="6f4c465e8a552f41ced3b86d9467af7400898ea0" translate="yes" xml:space="preserve">
          <source>Macro std::panic</source>
          <target state="translated">매크로 std :: panic</target>
        </trans-unit>
        <trans-unit id="d7c5619ee3c7e37065c6348f596afee18812e904" translate="yes" xml:space="preserve">
          <source>Macro std::print</source>
          <target state="translated">매크로 std :: print</target>
        </trans-unit>
        <trans-unit id="204a418c0077187d8cc0f577443c7e7fa541ff0e" translate="yes" xml:space="preserve">
          <source>Macro std::println</source>
          <target state="translated">매크로 std :: println</target>
        </trans-unit>
        <trans-unit id="49b5cd28b30251f10af2a2a90db5636dbc06c78f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_const</source>
          <target state="translated">매크로 std :: ptr :: raw_const</target>
        </trans-unit>
        <trans-unit id="94efa33950d8639a2632508a96f54528f0f4892f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_mut</source>
          <target state="translated">매크로 std :: ptr :: raw_mut</target>
        </trans-unit>
        <trans-unit id="f96af0500399ede902072159d4a56f1154cec983" translate="yes" xml:space="preserve">
          <source>Macro std::stringify</source>
          <target state="translated">매크로 std :: stringify</target>
        </trans-unit>
        <trans-unit id="0046668cc33f70012c2ac60da4e82f57bc0eae5c" translate="yes" xml:space="preserve">
          <source>Macro std::task::ready</source>
          <target state="translated">매크로 std :: task :: ready</target>
        </trans-unit>
        <trans-unit id="68d6e8f0ed1c6779a250baacf32ce34713bc747e" translate="yes" xml:space="preserve">
          <source>Macro std::thread_local</source>
          <target state="translated">매크로 std :: thread_local</target>
        </trans-unit>
        <trans-unit id="9baf7587c5afbc5de300cb0d4bf1a784ace4fa43" translate="yes" xml:space="preserve">
          <source>Macro std::todo</source>
          <target state="translated">매크로 std :: todo</target>
        </trans-unit>
        <trans-unit id="8235c2be6e7598983a06912a0f7475d0ca841096" translate="yes" xml:space="preserve">
          <source>Macro std::trace_macros</source>
          <target state="translated">매크로 std :: trace_macros</target>
        </trans-unit>
        <trans-unit id="45339975a30497b8aa678e5782dd85d0d6524c52" translate="yes" xml:space="preserve">
          <source>Macro std::try</source>
          <target state="translated">매크로 std :: try</target>
        </trans-unit>
        <trans-unit id="30819b013032d5b56dd171479c78004eb8506424" translate="yes" xml:space="preserve">
          <source>Macro std::unimplemented</source>
          <target state="translated">매크로 std :: unimplemented</target>
        </trans-unit>
        <trans-unit id="af90d4d175741e7c682c9a76c40bcbf22e038351" translate="yes" xml:space="preserve">
          <source>Macro std::unreachable</source>
          <target state="translated">매크로 std :: unreachable</target>
        </trans-unit>
        <trans-unit id="6cb76d941b106a5984361c746233e091f3eb7268" translate="yes" xml:space="preserve">
          <source>Macro std::vec</source>
          <target state="translated">매크로 std :: vec</target>
        </trans-unit>
        <trans-unit id="7dfa6a5a74afbe5370bea7ee37dfc0cf4b7a5b7a" translate="yes" xml:space="preserve">
          <source>Macro std::write</source>
          <target state="translated">매크로 std :: write</target>
        </trans-unit>
        <trans-unit id="6a165588c7cdc25e45e0ccfbbb1e4233fccbef59" translate="yes" xml:space="preserve">
          <source>Macro std::writeln</source>
          <target state="translated">매크로 std :: writeln</target>
        </trans-unit>
        <trans-unit id="fc574c4feb9eb58a0dcac94d6fe7f033e148ad50" translate="yes" xml:space="preserve">
          <source>Macro substitution</source>
          <target state="translated">매크로 대체</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="ea985fb52970be4df72a617484744fdc16a5c018" translate="yes" xml:space="preserve">
          <source>Macros By Example</source>
          <target state="translated">예를 들어 매크로</target>
        </trans-unit>
        <trans-unit id="890c8b86dee76287900f5de49ded629e47a1eff2" translate="yes" xml:space="preserve">
          <source>Macros can be declared and used locally inside functions as well, and work similarly:</source>
          <target state="translated">매크로는 함수 내에서 로컬로 선언하고 사용할 수 있으며 비슷하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="99213c2eae5f4b5b5261d6ead8683782ce8b74da" translate="yes" xml:space="preserve">
          <source>Macros labeled with &lt;code&gt;#[macro_export]&lt;/code&gt; are always &lt;code&gt;pub&lt;/code&gt; and can be referred to by other crates, either by path or by &lt;code&gt;#[macro_use]&lt;/code&gt; as described above.</source>
          <target state="translated">&lt;code&gt;#[macro_export]&lt;/code&gt; 로 표시된 매크로 는 항상 &lt;code&gt;pub&lt;/code&gt; 이며 위에서 설명한대로 경로 나 &lt;code&gt;#[macro_use]&lt;/code&gt; 로 다른 상자에서 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92e8814276dffd676e7f646da635908018045437" translate="yes" xml:space="preserve">
          <source>Macros to be imported with &lt;code&gt;#[macro_use]&lt;/code&gt; must be exported with &lt;code&gt;#[macro_export]&lt;/code&gt;, which is described below.</source>
          <target state="translated">&lt;code&gt;#[macro_use]&lt;/code&gt; 로 가져올 매크로 는 아래 설명 된 &lt;code&gt;#[macro_export]&lt;/code&gt; 로 내 보내야 합니다.</target>
        </trans-unit>
        <trans-unit id="1c9a2176dfeeea79d9e3e32de9c2c5a99269809e" translate="yes" xml:space="preserve">
          <source>Macros: ways to define code that defines more code at compile time</source>
          <target state="translated">매크로 : 컴파일 타임에 더 많은 코드를 정의하는 코드를 정의하는 방법</target>
        </trans-unit>
        <trans-unit id="cd76d64707087c171bdd458df7294e3865fa1eaf" translate="yes" xml:space="preserve">
          <source>Magic intrinsic that derives its meaning from attributes attached to the function.</source>
          <target state="translated">함수에 첨부 된 속성에서 그 의미를 이끌어내는 마법의 본질.</target>
        </trans-unit>
        <trans-unit id="d0ddf4609657c9fc7a5a760b623591e2b8c06955" translate="yes" xml:space="preserve">
          <source>Main Functions</source>
          <target state="translated">주요 기능</target>
        </trans-unit>
        <trans-unit id="65915636886ad9b418e5053522e9bb186aaffa57" translate="yes" xml:space="preserve">
          <source>Major version.</source>
          <target state="translated">메이저 버전.</target>
        </trans-unit>
        <trans-unit id="f56204cba2ee3c4f2fb7f50188e73508c869d62b" translate="yes" xml:space="preserve">
          <source>Make an item visible to others.</source>
          <target state="translated">다른 사람이 볼 수 있도록 항목을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5c4b994a73f6ca91c56b5e39a0519626ed63946d" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;break value;&lt;/code&gt; statements only occur in &lt;code&gt;loop&lt;/code&gt; loops:</source>
          <target state="translated">&lt;code&gt;break value;&lt;/code&gt; 확인하십시오 ; 문은 &lt;code&gt;loop&lt;/code&gt; 루프 에서만 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="7ea8a95eb24800ac0c84a828db1e4421635b78f0" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;impl Trait&lt;/code&gt; only appears in return-type position.</source>
          <target state="translated">&lt;code&gt;impl Trait&lt;/code&gt; 이 리턴 형 위치에만 나타나는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ba401c0c9cfac171b760a1ce41525fd66059bdc" translate="yes" xml:space="preserve">
          <source>Make sure that you have defined the associated type in the trait body. Also, verify that you used the right trait or you didn't misspell the associated type name. Example:</source>
          <target state="translated">특성 본문에 관련 유형을 정의했는지 확인하십시오. 또한 올바른 특성을 사용했는지 또는 연관된 유형 이름의 철자를 틀리지 않았는지 확인하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="13ea5ceb8177b1d40f0f669f0ff85244195769c5" translate="yes" xml:space="preserve">
          <source>Make sure the crate has been added as a dependency in &lt;code&gt;Cargo.toml&lt;/code&gt;.</source>
          <target state="translated">상자가 &lt;code&gt;Cargo.toml&lt;/code&gt; 에 종속성으로 추가되었는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="785fdbeb8403e3c205c309d50d0c4627b6a13510" translate="yes" xml:space="preserve">
          <source>Make sure to always label the &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 에 항상 레이블을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="03635492e49dd51aa8427fce3fe33f477a9049d7" translate="yes" xml:space="preserve">
          <source>Make sure you're using one of the supported options:</source>
          <target state="translated">지원되는 옵션 중 하나를 사용하고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="74f86a9c8187dd0e3d1a42a2d66b7afdce31f0bd" translate="yes" xml:space="preserve">
          <source>Make the changes in Listing 20-12 to &lt;em&gt;src/main.rs&lt;/em&gt;, and then let&amp;rsquo;s use the compiler errors from &lt;code&gt;cargo check&lt;/code&gt; to drive our development. Here is the first error we get:</source>
          <target state="translated">Listing 20-12에서 &lt;em&gt;src / main.rs&lt;/em&gt; 를 변경 한 다음 &lt;code&gt;cargo check&lt;/code&gt; 의 컴파일러 오류를 사용하여 개발을 &lt;em&gt;추진해&lt;/em&gt; 보자 . 우리가 얻는 첫 번째 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4e82ef8f9077ff004c9fab509d5821910979336" translate="yes" xml:space="preserve">
          <source>Make the item public:</source>
          <target state="translated">항목을 공개하십시오.</target>
        </trans-unit>
        <trans-unit id="d06ec9954ea419a6b38edc1bf1a2a6dcc02a5258" translate="yes" xml:space="preserve">
          <source>Make the variable binding mutable:</source>
          <target state="translated">변수 바인딩을 변경 가능하게 만드십시오.</target>
        </trans-unit>
        <trans-unit id="bc48084236d12cb5600cc26b44a2d290edf453b1" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Arc&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;code&gt;Arc&lt;/code&gt; 포인터 의 복제본을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0c4e31ca7d1bf4da5b4f8ddc228662ab3f004b62" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Rc&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;code&gt;Rc&lt;/code&gt; 포인터 의 복제본을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="594571d4a3af8b84956baaf9ead2a966c2e5f3b0" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same allocation.</source>
          <target state="translated">동일한 할당을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 의 복제본을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="da0d43f1a301c05257ea292524b54ea56af3ec64" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same value.</source>
          <target state="translated">같은 값을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 의 복제본을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="95e1b1bca3d2f7d7acb2f9c78011570f45ba8b35" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent.</source>
          <target state="translated">ASCII 소문자 값의 사본을 동등하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c2f78dac175677e088f8d9587c48e1e5deed4b7e" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ASCII 소문자 값의 사본을 동등하게 만듭니다. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a98184763dce8b9abdd98e8311b0e6e7ba1eb23" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent.</source>
          <target state="translated">ASCII 대문자로 값의 사본을 동등하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4d3c8e93f271e4b9119862f73dd68d30760c691b" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ASCII 대문자로 값의 사본을 동등하게 만듭니다. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21b449d04022c2cb71ab03b6cb465f521b25f3f" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Arc&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;Arc&lt;/code&gt; 에 대한 변경 가능한 참조를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c80eeefe8e089abbe6fc15570a328083977a6eae" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Rc&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Rc&lt;/code&gt; 에 변경 가능한 참조를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="6b45ab7ad58abf01267fb6d691762feb9e77a2f6" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;BTreeSet&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">합리적인 B를 선택 하여 새로운 &lt;code&gt;BTreeSet&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a781f5d796d1c37fbc01362e95835e22088ff170" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;Ref&lt;/code&gt; for a component of the borrowed data.</source>
          <target state="translated">빌린 데이터의 구성 요소에 대한 새로운 &lt;code&gt;Ref&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="278e1cc774975411f6e08d7aebe6c4b4e9c25568" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;RefMut&lt;/code&gt; for a component of the borrowed data, e.g., an enum variant.</source>
          <target state="translated">빌린 데이터의 구성 요소 (예 : 열거 형 변형)에 대한 새로운 &lt;code&gt;RefMut&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="283aa1fed88c10ebb8edc51655bd6a83920089a2" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap with a reasonable choice for B.</source>
          <target state="translated">B를위한 합리적인 선택으로 비어있는 BTreeMap을 새로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="540d9e49b40fedaea8393e2653dc20ecf4dc809a" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap.</source>
          <target state="translated">비어있는 새 BTreeMap을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="edde01f6a4b5f1312a7262cef981ed1114e0076e" translate="yes" xml:space="preserve">
          <source>Makes a new, empty &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">비어있는 새 &lt;code&gt;BTreeMap&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4151fd28b8674ccc304f000820c74d1089644f4d" translate="yes" xml:space="preserve">
          <source>Makes a new, empty &lt;code&gt;BTreeSet&lt;/code&gt;.</source>
          <target state="translated">비어있는 새 &lt;code&gt;BTreeSet&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2185704ef8fdb0964925f4ab6a6fcc6a90f32392" translate="yes" xml:space="preserve">
          <source>Makes an empty &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">B를 적절히 선택 하여 빈 &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fa4f9a96a9969672dc553ff0f59ac09bc8fd1d4b" translate="yes" xml:space="preserve">
          <source>Making Code Clearer with Iterator Adaptors</source>
          <target state="translated">반복자 어댑터로 코드를 더 명확하게 만들기</target>
        </trans-unit>
        <trans-unit id="0be549adec6c4078f9192f2037937c6ed7dc4414" translate="yes" xml:space="preserve">
          <source>Making Structs and Enums Public</source>
          <target state="translated">구조체와 열거 형 공개</target>
        </trans-unit>
        <trans-unit id="f726c18b4c7efce9ac3b84c7741581c3646b1ec5" translate="yes" xml:space="preserve">
          <source>Making Useful Documentation Comments</source>
          <target state="translated">유용한 문서 주석 작성</target>
        </trans-unit>
        <trans-unit id="1c3b5a5bc06c23419d77d273dc1f5cd6abe50ac2" translate="yes" xml:space="preserve">
          <source>Making programmers annotate the types in these small, anonymous functions would be annoying and largely redundant with the information the compiler already has available.</source>
          <target state="translated">프로그래머가 이러한 작고 익명 인 함수의 형식에 주석을 달도록 만드는 것은 컴파일러가 이미 사용할 수있는 정보로 인해 성 가시고 중복 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3cb970fe3641fbfc89185e2ed186cc580150a10" translate="yes" xml:space="preserve">
          <source>Making your own:</source>
          <target state="translated">자신을 만들기 :</target>
        </trans-unit>
        <trans-unit id="d14d90edf49e39f5bd2a9db025048da3c7bdc65a" translate="yes" xml:space="preserve">
          <source>Malformed inline assembly rejected by LLVM.</source>
          <target state="translated">LLVM에서 잘못된 인라인 어셈블리를 거부했습니다.</target>
        </trans-unit>
        <trans-unit id="fa459cf08953bcf4efc4e2de46a7eb88331c909b" translate="yes" xml:space="preserve">
          <source>Management of mutexes can be incredibly tricky to get right, which is why so many people are enthusiastic about channels. However, thanks to Rust&amp;rsquo;s type system and ownership rules, you can&amp;rsquo;t get locking and unlocking wrong.</source>
          <target state="translated">뮤텍스를 관리하는 것은 매우 까다로울 수 있기 때문에 많은 사람들이 채널에 열광적 인 이유입니다. 그러나 Rust의 유형 시스템 및 소유권 규칙으로 인해 잠금 및 잠금 해제가 잘못 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="32669800cbcfbb3c25b1d2dca7e0647a969d2310" translate="yes" xml:space="preserve">
          <source>Managing Growing Projects with Packages, Crates, and Modules</source>
          <target state="translated">패키지, 상자 및 모듈을 사용하여 성장하는 프로젝트 관리</target>
        </trans-unit>
        <trans-unit id="bac0c6db61c690d85ce8891466d311628def1204" translate="yes" xml:space="preserve">
          <source>Manual cleanup by explicitly running the destructor and deallocating the memory:</source>
          <target state="translated">소멸자를 명시 적으로 실행하고 메모리 할당을 해제하여 수동 정리 :</target>
        </trans-unit>
        <trans-unit id="4bb0f5664832e7d5b5156b1f9a49ed8f9963a4c6" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the global allocator:</source>
          <target state="translated">전역 할당자를 사용하여 처음부터 &lt;code&gt;Box&lt;/code&gt; 를 수동으로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="95b428f28bdeb53004768b2b632b7999a8e7e2ed" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the system allocator:</source>
          <target state="translated">시스템 할당자를 사용하여 처음부터 수동으로 &lt;code&gt;Box&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5ae74603719e41d33e01446b92c34f34abab1e8d" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value.</source>
          <target state="translated">포함 된 값을 수동으로 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="fb7bce2897ed79f90e7bc1c68e59dd547267e3cf" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value. This is exactly equivalent to calling &lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt;&lt;code&gt;ptr::drop_in_place&lt;/code&gt;&lt;/a&gt; with a pointer to the contained value. As such, unless the contained value is a packed struct, the destructor will be called in-place without moving the value, and thus can be used to safely drop &lt;a href=&quot;../pin/index&quot;&gt;pinned&lt;/a&gt; data.</source>
          <target state="translated">포함 된 값을 수동으로 삭제합니다. 이것은 포함 된 값에 대한 포인터로 &lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt; &lt;code&gt;ptr::drop_in_place&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 정확히 동일 합니다. 따라서 포함 된 값이 패킹 된 구조체가 아니면 소멸자는 값을 이동하지 않고 제자리에서 호출되므로 &lt;a href=&quot;../pin/index&quot;&gt;고정 된&lt;/a&gt; 데이터 를 안전하게 삭제하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5d3e558818238f853cd41590676e6b0ae84ca10" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../mem/fn.swap&quot;&gt;&lt;code&gt;mem::swap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../mem/fn.swap&quot;&gt; &lt;code&gt;mem::swap&lt;/code&gt; &lt;/a&gt; 수동으로 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="81e1d8d8d28791b682c9dd5fafecf45c98c894b0" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt;&lt;code&gt;Vec::append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt; &lt;code&gt;Vec::append&lt;/code&gt; &lt;/a&gt; 수동으로 구현 하십시오 .</target>
        </trans-unit>
        <trans-unit id="540ff29bf252e98c28d525edf6412a6a1783a89f" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;&amp;ldquo;The Rustonomicon&amp;rdquo;&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">이러한 특성을 수동으로 구현하려면 안전하지 않은 Rust 코드를 구현해야합니다. 19 장에서 안전하지 않은 Rust 코드를 사용하는 것에 대해 이야기 할 것입니다. 현재 중요한 정보는 &lt;code&gt;Send&lt;/code&gt; 및 &lt;code&gt;Sync&lt;/code&gt; 부분 으로 구성되지 않은 새로운 동시 유형을 구축 하려면 안전 보장을 유지하기 위해 신중한 고려가 필요하다는 것입니다. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;&amp;ldquo;The Rustonomicon&amp;rdquo;&lt;/a&gt; 에는 이러한 보증과이를 유지하는 방법에 대한 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fef3e11606bd60261d9a5caddcd97763d588f6c" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;The Rustonomicon&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">이러한 특성을 수동으로 구현하려면 안전하지 않은 Rust 코드를 구현해야합니다. 우리는 19 장에서 안전하지 않은 Rust 코드를 사용하는 것에 대해 이야기 할 것이다; 현재 중요한 정보는 &lt;code&gt;Send&lt;/code&gt; 및 &lt;code&gt;Sync&lt;/code&gt; 파트 로 구성되지 않은 새로운 동시 유형을 빌드 하려면 안전 보장을 준수하기 위해 신중한 생각이 필요하다는 것입니다. &lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt; 에는 이러한 보증 및이를 준수하는 방법에 대한 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6875772c5ce142246241ada5c6db0fbc4121917a" translate="yes" xml:space="preserve">
          <source>Manually implementing:</source>
          <target state="translated">수동 구현 :</target>
        </trans-unit>
        <trans-unit id="c76cf1bc5487111c7ff7f07658b0600d36759821" translate="yes" xml:space="preserve">
          <source>Manually manage memory through raw pointers.</source>
          <target state="translated">원시 포인터를 통해 메모리를 수동으로 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="bb52de8f06ed1791910717e6e139f7255684bfa4" translate="yes" xml:space="preserve">
          <source>Manually remove the last item from a vector:</source>
          <target state="translated">벡터에서 마지막 항목을 수동으로 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="75a5eb8b2241198d901330cf1baaeb049af418bb" translate="yes" xml:space="preserve">
          <source>ManuallyDrop</source>
          <target state="translated">ManuallyDrop</target>
        </trans-unit>
        <trans-unit id="0ff49992553914f35e95f678e4651c519531be19" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow</source>
          <target state="translated">ManuallyDrop::borrow</target>
        </trans-unit>
        <trans-unit id="e5866233ecb81d35fc4c06e7aa867877316062f7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow_mut</source>
          <target state="translated">ManuallyDrop::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bb4bc8cef32d3dd1adb9b671371b51ee97a7372a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clamp</source>
          <target state="translated">ManuallyDrop::clamp</target>
        </trans-unit>
        <trans-unit id="a258f3620afb6729be4732891e11a8c3a4960b35" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone</source>
          <target state="translated">ManuallyDrop::clone</target>
        </trans-unit>
        <trans-unit id="05e63ab6d29a7a5ebd15711613d2e33238d33c5c" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_from</source>
          <target state="translated">ManuallyDrop::clone_from</target>
        </trans-unit>
        <trans-unit id="27ce3992f06bab23ef7ecdc00e69e69c64222ba5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_into</source>
          <target state="translated">ManuallyDrop::clone_into</target>
        </trans-unit>
        <trans-unit id="9aea997c1c52a9eb2bb803351c7dca247a166a2f" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::cmp</source>
          <target state="translated">ManuallyDrop::cmp</target>
        </trans-unit>
        <trans-unit id="747a3b572684b844c2a4c3556b8949e29fea34ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::default</source>
          <target state="translated">ManuallyDrop::default</target>
        </trans-unit>
        <trans-unit id="79d46a552813ce7815952b600c48e5b93c95ef87" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref</source>
          <target state="translated">ManuallyDrop::deref</target>
        </trans-unit>
        <trans-unit id="5d9d451b9a7433a5c92ed5e5b380480b0f9132bd" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref_mut</source>
          <target state="translated">ManuallyDrop::deref_mut</target>
        </trans-unit>
        <trans-unit id="3401a5ca235ecfd9ff38182608c65bbd70928805" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::drop</source>
          <target state="translated">ManuallyDrop::drop</target>
        </trans-unit>
        <trans-unit id="cffffdcd791ba0dfd910260ec733c70393dfc2cc" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::eq</source>
          <target state="translated">ManuallyDrop::eq</target>
        </trans-unit>
        <trans-unit id="4c085ca90dbc1eab8ccf43a0009f0ab3086cb5f8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::fmt</source>
          <target state="translated">ManuallyDrop::fmt</target>
        </trans-unit>
        <trans-unit id="9825f9a0deb90ddba8b0dd90214596371285c92a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::from</source>
          <target state="translated">ManuallyDrop::from</target>
        </trans-unit>
        <trans-unit id="342b69fedd01afaf0f1b87bab9d8cee14185af05" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ge</source>
          <target state="translated">ManuallyDrop::ge</target>
        </trans-unit>
        <trans-unit id="2dfb7a4c123b39c58646c84396fae274126ca87a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::gt</source>
          <target state="translated">ManuallyDrop::gt</target>
        </trans-unit>
        <trans-unit id="2f7911193372b76c4c437a07fe7c1a80f89642c6" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash</source>
          <target state="translated">ManuallyDrop::hash</target>
        </trans-unit>
        <trans-unit id="307abb97d7a83c9cd8613613885c4d1695a785af" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash_slice</source>
          <target state="translated">ManuallyDrop::hash_slice</target>
        </trans-unit>
        <trans-unit id="58c2a06e97cbbfc5ea6ad890b23262056bc15050" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into</source>
          <target state="translated">ManuallyDrop::into</target>
        </trans-unit>
        <trans-unit id="e49ff403586f091fb5a7449bf767effb956ba0cf" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into_inner</source>
          <target state="translated">ManuallyDrop::into_inner</target>
        </trans-unit>
        <trans-unit id="84250d05114c51d17952cb262ee0278e1a84a8a5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::le</source>
          <target state="translated">ManuallyDrop::le</target>
        </trans-unit>
        <trans-unit id="9d64d7de989098ce0554a7c48ed7c5bfe51622e8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::lt</source>
          <target state="translated">ManuallyDrop::lt</target>
        </trans-unit>
        <trans-unit id="14e565f729cf4f2941482964c6f3f00d9b8a29b7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::max</source>
          <target state="translated">ManuallyDrop::max</target>
        </trans-unit>
        <trans-unit id="05d11d60a8ff6f9820cc7d4611b2a51f3cb4d4a4" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::min</source>
          <target state="translated">ManuallyDrop::min</target>
        </trans-unit>
        <trans-unit id="a790ef37ec80d8b2ad924d14b5d7e2e5176578ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ne</source>
          <target state="translated">ManuallyDrop::ne</target>
        </trans-unit>
        <trans-unit id="dec7845815f60658c15281c1f79fb29a12700422" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::new</source>
          <target state="translated">ManuallyDrop::new</target>
        </trans-unit>
        <trans-unit id="1687c7f86ad3a66dcfa37560f79c6f09e76e7e01" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::partial_cmp</source>
          <target state="translated">ManuallyDrop::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ac4a9c56d7567f613d40ab18d47ec612a4a7257a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::take</source>
          <target state="translated">ManuallyDrop::take</target>
        </trans-unit>
        <trans-unit id="3745dcb1c49b08d18b087f92e1e6a66b6b2bd928" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::to_owned</source>
          <target state="translated">ManuallyDrop::to_owned</target>
        </trans-unit>
        <trans-unit id="c5ff516c9244a2f6aff068058ab94e3870f6da6e" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_from</source>
          <target state="translated">ManuallyDrop::try_from</target>
        </trans-unit>
        <trans-unit id="4e9b867ee8ca49c0141fa4c441ec1d6b64d20709" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_into</source>
          <target state="translated">ManuallyDrop::try_into</target>
        </trans-unit>
        <trans-unit id="d032a4ae2e222fee9a81b0c504905787d1cffc97" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::type_id</source>
          <target state="translated">ManuallyDrop::type_id</target>
        </trans-unit>
        <trans-unit id="0484839de4fe3406648b41928f1dde69deca9b74" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;s don't know how many times they will iterate, but some do. If an iterator knows how many times it can iterate, providing access to that information can be useful. For example, if you want to iterate backwards, a good start is to know where the end is.</source>
          <target state="translated">많은 &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 는 반복 횟수를 모르지만 일부는 반복합니다. 반복자가 반복 할 수있는 횟수를 알고 있으면 해당 정보에 대한 액세스를 제공하는 것이 유용 할 수 있습니다. 예를 들어, 거꾸로 반복하려면 끝이 어디 있는지 아는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c0580adef286548602a7c6b76f2902b81639f53c" translate="yes" xml:space="preserve">
          <source>Many I/O functions throughout the standard library are documented to indicate what various library or syscalls they are delegated to. This is done to help applications both understand what's happening under the hood as well as investigate any possibly unclear semantics. Note, however, that this is informative, not a binding contract. The implementation of many of these functions are subject to change over time and may call fewer or more syscalls/library functions.</source>
          <target state="translated">표준 라이브러리 전체의 많은 I / O 함수가 위임 된 다양한 라이브러리 또는 syscall을 표시하기 위해 문서화되어 있습니다. 이것은 응용 프로그램이 후드에서 일어나는 일을 이해하고 명확하지 않은 의미를 조사하는 데 도움을주기 위해 수행됩니다. 그러나 이것은 구속력있는 계약이 아니라 유익한 정보입니다. 이러한 많은 기능의 구현은 시간이 지남에 따라 변경 될 수 있으며 더 적거나 더 많은 syscalls / library 함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc24a04fe684f5f353db22858c0879621d2c150e" translate="yes" xml:space="preserve">
          <source>Many collections provide several constructors and methods that refer to &quot;capacity&quot;. These collections are generally built on top of an array. Optimally, this array would be exactly the right size to fit only the elements stored in the collection, but for the collection to do this would be very inefficient. If the backing array was exactly the right size at all times, then every time an element is inserted, the collection would have to grow the array to fit it. Due to the way memory is allocated and managed on most computers, this would almost surely require allocating an entirely new array and copying every single element from the old one into the new one. Hopefully you can see that this wouldn't be very efficient to do on every operation.</source>
          <target state="translated">많은 컬렉션은 &quot;용량&quot;을 참조하는 여러 생성자와 메서드를 제공합니다. 이러한 컬렉션은 일반적으로 배열 위에 구축됩니다. 최적의 경우,이 배열은 컬렉션에 저장된 요소에만 맞도록 정확한 크기이지만 컬렉션을 위해서는 매우 비효율적입니다. 배킹 배열이 항상 정확한 크기라면, 요소가 삽입 될 때마다 컬렉션은 배열에 맞게 배열을 확장해야합니다. 대부분의 컴퓨터에서 메모리를 할당하고 관리하는 방식으로 인해 완전히 새로운 배열을 할당하고 이전의 모든 요소를 ​​기존의 새 요소로 복사해야합니다. 바라건대 모든 작업에서 이것이 효율적이지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76b19e79175576e6cab7093093e0ddb1fd52809f" translate="yes" xml:space="preserve">
          <source>Many functions in this module take raw pointers as arguments and read from or write to them. For this to be safe, these pointers must be &lt;em&gt;valid&lt;/em&gt;. Whether a pointer is valid depends on the operation it is used for (read or write), and the extent of the memory that is accessed (i.e., how many bytes are read/written). Most functions use &lt;code&gt;*mut T&lt;/code&gt; and &lt;code&gt;*const T&lt;/code&gt; to access only a single value, in which case the documentation omits the size and implicitly assumes it to be &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">이 모듈의 많은 함수는 원시 포인터를 인수로 사용하여 읽거나 씁니다. 이것이 안전하려면이 포인터가 &lt;em&gt;유효&lt;/em&gt; 해야 &lt;em&gt;합니다&lt;/em&gt; . 포인터가 유효한지 여부는 포인터가 사용되는 작업 (읽기 또는 쓰기) 및 액세스되는 메모리의 범위 (즉, 읽거나 쓰는 바이트 수)에 따라 다릅니다. 대부분의 함수는 &lt;code&gt;*mut T&lt;/code&gt; 및 &lt;code&gt;*const T&lt;/code&gt; 를 사용하여 단일 값에만 액세스합니다.이 경우 문서에서 크기를 생략하고 암시 적으로 &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 바이트 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="13d014fff5ec1912fa9a9184bedfeb8068f9c08d" translate="yes" xml:space="preserve">
          <source>Many languages are dogmatic about the solutions they offer for handling concurrent problems. For example, Erlang has elegant functionality for message-passing concurrency but has only obscure ways to share state between threads. Supporting only a subset of possible solutions is a reasonable strategy for higher-level languages, because a higher-level language promises benefits from giving up some control to gain abstractions. However, lower-level languages are expected to provide the solution with the best performance in any given situation and have fewer abstractions over the hardware. Therefore, Rust offers a variety of tools for modeling problems in whatever way is appropriate for your situation and requirements.</source>
          <target state="translated">많은 언어는 동시 문제를 처리하기 위해 제공하는 솔루션에 대해 독단적입니다. 예를 들어, Erlang은 메시지 전달 동시성 기능이 뛰어나지 만 스레드간에 상태를 공유하는 방법은 모호합니다. 높은 수준의 언어는 추상화를 얻기 위해 제어권을 포기함으로써 이점을 얻을 수 있기 때문에 가능한 솔루션의 일부만 지원하는 것은 고급 언어에 대한 합리적인 전략입니다. 그러나 하위 수준의 언어는 특정 상황에서 최상의 성능을 제공하고 하드웨어에 대한 추상화가 적을 것으로 예상됩니다. 따라서 Rust는 상황과 요구 사항에 적합한 방식으로 문제를 모델링 할 수있는 다양한 도구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d4c938f1a7f4caf7f410216dbf9505989bc2be65" translate="yes" xml:space="preserve">
          <source>Many of the following operators and expressions can also be overloaded for other types using traits in &lt;code&gt;std::ops&lt;/code&gt; or &lt;code&gt;std::cmp&lt;/code&gt;. These traits also exist in &lt;code&gt;core::ops&lt;/code&gt; and &lt;code&gt;core::cmp&lt;/code&gt; with the same names.</source>
          <target state="translated">&lt;code&gt;std::ops&lt;/code&gt; 또는 &lt;code&gt;std::cmp&lt;/code&gt; 특성을 사용하여 다른 유형에 대해 다음 연산자와 표현식 중 다수가 과부하 될 수 있습니다 . 이러한 특성은 &lt;code&gt;core::ops&lt;/code&gt; 및 &lt;code&gt;core::cmp&lt;/code&gt; 에도 같은 이름으로 존재합니다.</target>
        </trans-unit>
        <trans-unit id="5b90bc029a171633a89b2034a09fb0706d49bed6" translate="yes" xml:space="preserve">
          <source>Many of the operators take their operands by value. In non-generic contexts involving built-in types, this is usually not a problem. However, using these operators in generic code, requires some attention if values have to be reused as opposed to letting the operators consume them. One option is to occasionally use &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;. Another option is to rely on the types involved providing additional operator implementations for references. For example, for a user-defined type &lt;code&gt;T&lt;/code&gt; which is supposed to support addition, it is probably a good idea to have both &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; implement the traits &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt;&lt;/a&gt; so that generic code can be written without unnecessary cloning.</source>
          <target state="translated">많은 연산자가 값으로 피연산자를 가져옵니다. 내장 유형과 관련된 일반이 아닌 상황에서는 일반적으로 문제가되지 않습니다. 그러나 일반 코드에서 이러한 연산자를 사용하면 연산자가 값을 소비하게하는 대신 값을 다시 사용해야하는 경우 약간의주의가 필요합니다. 한 가지 옵션은 때때로 &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; 을&lt;/a&gt; 사용하는 것 입니다. 또 다른 옵션은 참조를 위해 추가 연산자 구현을 제공하는 것과 관련된 유형에 의존하는 것입니다. 예를 들어, 추가를 지원해야하는 사용자 정의 유형 &lt;code&gt;T&lt;/code&gt; 의 경우 &lt;code&gt;T&lt;/code&gt; 와 &lt;code&gt;&amp;amp;T&lt;/code&gt; 모두 &lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 특성을 구현하여 불필요한 일반 코드를 작성할 수 있도록 하는 것이 좋습니다. 복제.</target>
        </trans-unit>
        <trans-unit id="068d0085110695f778d351f46b177f0bbabef680" translate="yes" xml:space="preserve">
          <source>Many of the same operations available with &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; are available with &lt;code&gt;String&lt;/code&gt; as well, starting with the &lt;code&gt;new&lt;/code&gt; function to create a string, shown in Listing 8-11.</source>
          <target state="translated">&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 와 함께 사용할 수있는 동일한 작업 중 다수가 &lt;code&gt;String&lt;/code&gt; 과 함께 사용 가능 하며 &lt;code&gt;new&lt;/code&gt; 함수 부터 시작하여 목록 8-11에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="3254468e9df291d0c506cf9f47d3052afb8cf80e" translate="yes" xml:space="preserve">
          <source>Many programming languages provide their own special implementation of threads. Programming language-provided threads are known as &lt;em&gt;green&lt;/em&gt; threads, and languages that use these green threads will execute them in the context of a different number of operating system threads. For this reason, the green-threaded model is called the &lt;em&gt;M:N&lt;/em&gt; model: there are &lt;code&gt;M&lt;/code&gt; green threads per &lt;code&gt;N&lt;/code&gt; operating system threads, where &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; are not necessarily the same number.</source>
          <target state="translated">많은 프로그래밍 언어는 고유 한 스레드 구현을 제공합니다. 프로그래밍 언어 제공 스레드를 &lt;em&gt;녹색&lt;/em&gt; 스레드 라고하며 이러한 녹색 스레드를 사용하는 언어는 다른 수의 운영 체제 스레드 컨텍스트에서 스레드를 실행합니다. 이러한 이유로 녹색 스레드 모델을 &lt;em&gt;M : N&lt;/em&gt; 모델 이라고합니다 &lt;em&gt;. &lt;/em&gt; &lt;code&gt;N&lt;/code&gt; 운영 체제 스레드 당 &lt;code&gt;M&lt;/code&gt; 개의 녹색 스레드 가 있으며 여기서 &lt;code&gt;M&lt;/code&gt; 과 &lt;code&gt;N&lt;/code&gt; 은 반드시 같은 수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="8963e190dad9b5c2c0a517c43746d1a72fc75e7c" translate="yes" xml:space="preserve">
          <source>Many shared smart pointer types, including &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;, provide containers that can be cloned and shared between multiple parties. Because the contained values may be multiply-aliased, they can only be borrowed with &lt;code&gt;&amp;amp;&lt;/code&gt;, not &lt;code&gt;&amp;amp;mut&lt;/code&gt;. Without cells it would be impossible to mutate data inside of these smart pointers at all.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 및 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 포함한 많은 공유 스마트 포인터 유형 은 여러 당사자간에 복제 및 공유 할 수있는 컨테이너를 제공합니다. 포함 된 값을 곱셈 앨리어싱 수 있기 때문에, 그들은 단지로 차용 될 수 &lt;code&gt;&amp;amp;&lt;/code&gt; ,하지 &lt;code&gt;&amp;amp;mut&lt;/code&gt; . 셀이 없으면 이러한 스마트 포인터 내부의 데이터를 전혀 변형 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="08c077e60b3acb5d875cec7cb9d6d59f52db0053" translate="yes" xml:space="preserve">
          <source>Many threads may call &lt;code&gt;get_or_init&lt;/code&gt; concurrently with different initializing functions, but it is guaranteed that only one function will be executed.</source>
          <target state="translated">많은 스레드가 다른 초기화 함수와 동시에 &lt;code&gt;get_or_init&lt;/code&gt; 를 호출 할 수 있지만 하나의 함수 만 실행되도록 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="360c8791842766a3afd1e2bb160420977a6612f7" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;a href=&quot;../primitive.bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; function identically, as do &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">많은 유형은 고정 된 경우에도 항상 자유롭게 이동할 수 있습니다. 이는 안정적인 주소에 의존하지 않기 때문입니다. 여기에는 모든 기본 유형 (예 : &lt;a href=&quot;../primitive.bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.i32&quot;&gt; &lt;code&gt;i32&lt;/code&gt; &lt;/a&gt; 및 참조)과 이러한 유형으로 만 구성된 유형이 포함됩니다. 고정에 신경 쓰지 않는 유형 은 &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 효과를 취소하는 &lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt; 자동 트레이 트를 구현합니다 . 들면 &lt;code&gt;T: Unpin&lt;/code&gt; , &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 함수는 동일,과 같이 &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96524e6fb50cd6e78bd3a49b9cef3f18568b875d" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; function identically, as do &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">고정 된 주소에 의존하지 않기 때문에 고정 된 경우에도 많은 유형이 항상 자유롭게 이동할 수 있습니다. 여기에는 모든 기본 유형 (예 : &lt;code&gt;bool&lt;/code&gt; , &lt;code&gt;i32&lt;/code&gt; 및 reference)과 이러한 유형으로 만 구성된 유형이 포함됩니다. 고정에 신경 쓰지 않는 유형은 &lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt; 자동 특성을 구현하여 &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 효과를 취소합니다 . 들면 &lt;code&gt;T: Unpin&lt;/code&gt; , &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 함수는 동일,과 같이 &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="df29122b53f448bfbd8df7d684e45a356a48d53a" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to a &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the bound.</source>
          <target state="translated">&lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 의 내용을 복제하여 Bound &amp;lt;&amp;amp; T&amp;gt; 를 &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; 에 매핑합니다 .</target>
        </trans-unit>
        <trans-unit id="1a58a81fddddcc9b42869ed27a566238e1a8c6d5" translate="yes" xml:space="preserve">
          <source>Map::all</source>
          <target state="translated">Map::all</target>
        </trans-unit>
        <trans-unit id="03a745f35f9d4e2b9b8920e51c8b975225024525" translate="yes" xml:space="preserve">
          <source>Map::any</source>
          <target state="translated">Map::any</target>
        </trans-unit>
        <trans-unit id="e27fd38da04382eeb1d09c2169581e27980d8965" translate="yes" xml:space="preserve">
          <source>Map::borrow</source>
          <target state="translated">Map::borrow</target>
        </trans-unit>
        <trans-unit id="8008fa72e2540ba9977ec160e11c30c29db689ee" translate="yes" xml:space="preserve">
          <source>Map::borrow_mut</source>
          <target state="translated">Map::borrow_mut</target>
        </trans-unit>
        <trans-unit id="630e5d943b1b99e5b6e1c5dde655dc59ab5ead67" translate="yes" xml:space="preserve">
          <source>Map::by_ref</source>
          <target state="translated">Map::by_ref</target>
        </trans-unit>
        <trans-unit id="f9153e36a7758a4c6c8165b792439aca160eae94" translate="yes" xml:space="preserve">
          <source>Map::chain</source>
          <target state="translated">Map::chain</target>
        </trans-unit>
        <trans-unit id="88f217332993f3ef5853b6036404a9b04eb5d0ac" translate="yes" xml:space="preserve">
          <source>Map::clone</source>
          <target state="translated">Map::clone</target>
        </trans-unit>
        <trans-unit id="b396fbb67f91e6a12e22a206a5dfb999efbc0df4" translate="yes" xml:space="preserve">
          <source>Map::clone_from</source>
          <target state="translated">Map::clone_from</target>
        </trans-unit>
        <trans-unit id="e76e1d2031241d6c1bfa8fbbd9d13afe6324ebf9" translate="yes" xml:space="preserve">
          <source>Map::clone_into</source>
          <target state="translated">Map::clone_into</target>
        </trans-unit>
        <trans-unit id="b4397f4a58cb5d1944076bd352733820732697bd" translate="yes" xml:space="preserve">
          <source>Map::cloned</source>
          <target state="translated">Map::cloned</target>
        </trans-unit>
        <trans-unit id="db371665e696808903fcf4889430504c79ae21fc" translate="yes" xml:space="preserve">
          <source>Map::cmp</source>
          <target state="translated">Map::cmp</target>
        </trans-unit>
        <trans-unit id="f8b2a982a2812ec678253c38d1d30209727e2bc7" translate="yes" xml:space="preserve">
          <source>Map::collect</source>
          <target state="translated">Map::collect</target>
        </trans-unit>
        <trans-unit id="f1c1d9b76187baf3d0320022636c2f0e5e69889f" translate="yes" xml:space="preserve">
          <source>Map::copied</source>
          <target state="translated">Map::copied</target>
        </trans-unit>
        <trans-unit id="4a1e3f85e9de5cc61392d0a34fa79e32ccb95b3e" translate="yes" xml:space="preserve">
          <source>Map::count</source>
          <target state="translated">Map::count</target>
        </trans-unit>
        <trans-unit id="72b2b5c0b54a8363747a5badec2258979b6f7450" translate="yes" xml:space="preserve">
          <source>Map::cycle</source>
          <target state="translated">Map::cycle</target>
        </trans-unit>
        <trans-unit id="75eb992b5af7c74e94707b08a42500a0bdbe5987" translate="yes" xml:space="preserve">
          <source>Map::enumerate</source>
          <target state="translated">Map::enumerate</target>
        </trans-unit>
        <trans-unit id="993d6a08bb24f1190f8b7dde7f20470f1c97017c" translate="yes" xml:space="preserve">
          <source>Map::eq</source>
          <target state="translated">Map::eq</target>
        </trans-unit>
        <trans-unit id="a9e5ac2366e118220418421b0caa9bee4fba383a" translate="yes" xml:space="preserve">
          <source>Map::filter</source>
          <target state="translated">Map::filter</target>
        </trans-unit>
        <trans-unit id="b442c2b2361ea72b048219f3e26a5f18e537332f" translate="yes" xml:space="preserve">
          <source>Map::filter_map</source>
          <target state="translated">Map::filter_map</target>
        </trans-unit>
        <trans-unit id="f63418aeba4241d5162fbcce56cc0644c14f1d1c" translate="yes" xml:space="preserve">
          <source>Map::find</source>
          <target state="translated">Map::find</target>
        </trans-unit>
        <trans-unit id="f6144d3320c6dfea791d10217e3e8079952c660e" translate="yes" xml:space="preserve">
          <source>Map::find_map</source>
          <target state="translated">Map::find_map</target>
        </trans-unit>
        <trans-unit id="635fe84f8ddb9aa9bafea1e6c25c86a9ed0e9b4b" translate="yes" xml:space="preserve">
          <source>Map::flat_map</source>
          <target state="translated">Map::flat_map</target>
        </trans-unit>
        <trans-unit id="df8c7d56d90eb915ddece209e0ed60e910cf5810" translate="yes" xml:space="preserve">
          <source>Map::flatten</source>
          <target state="translated">Map::flatten</target>
        </trans-unit>
        <trans-unit id="741d7f7e9bdb0a0542cd59e99d6a8f4cdaf7f84d" translate="yes" xml:space="preserve">
          <source>Map::fmt</source>
          <target state="translated">Map::fmt</target>
        </trans-unit>
        <trans-unit id="ae44712f04dab2122840dd77dd590fa9b454de37" translate="yes" xml:space="preserve">
          <source>Map::fold</source>
          <target state="translated">Map::fold</target>
        </trans-unit>
        <trans-unit id="112cae751955c6b50967e1a0a3cc5f382a9d83ef" translate="yes" xml:space="preserve">
          <source>Map::for_each</source>
          <target state="translated">Map::for_each</target>
        </trans-unit>
        <trans-unit id="34c8999abc6581153960b6dc7ac11211aeeb887f" translate="yes" xml:space="preserve">
          <source>Map::from</source>
          <target state="translated">Map::from</target>
        </trans-unit>
        <trans-unit id="8c3b295e4b4bb67a51c785cb5890d343a0fe3a35" translate="yes" xml:space="preserve">
          <source>Map::fuse</source>
          <target state="translated">Map::fuse</target>
        </trans-unit>
        <trans-unit id="bb5c0aa6766f65baaad20d564cd25d5b3652c7c5" translate="yes" xml:space="preserve">
          <source>Map::ge</source>
          <target state="translated">Map::ge</target>
        </trans-unit>
        <trans-unit id="148bbbf71d9210e5c6e2d74d7b37d6a4959732ae" translate="yes" xml:space="preserve">
          <source>Map::gt</source>
          <target state="translated">Map::gt</target>
        </trans-unit>
        <trans-unit id="59a3caad759408198d5ff6b63ffab02c7f0d0109" translate="yes" xml:space="preserve">
          <source>Map::inspect</source>
          <target state="translated">Map::inspect</target>
        </trans-unit>
        <trans-unit id="0c414c474aadfea661298e12c8c1893a0877e27f" translate="yes" xml:space="preserve">
          <source>Map::into</source>
          <target state="translated">Map::into</target>
        </trans-unit>
        <trans-unit id="be46558bc25fe8b488a966057d9a20b90705b693" translate="yes" xml:space="preserve">
          <source>Map::into_iter</source>
          <target state="translated">Map::into_iter</target>
        </trans-unit>
        <trans-unit id="aa4767aede3957f624bc911847b8de1f51f6759c" translate="yes" xml:space="preserve">
          <source>Map::is_empty</source>
          <target state="translated">Map::is_empty</target>
        </trans-unit>
        <trans-unit id="06ac53014021288c74158a733397c0235d2512ac" translate="yes" xml:space="preserve">
          <source>Map::is_sorted</source>
          <target state="translated">Map::is_sorted</target>
        </trans-unit>
        <trans-unit id="adebe865ede9926f64d1d6ed334e7f319bb11f62" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by</source>
          <target state="translated">Map::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ce8087aab9316ebfe810681e115dc046b013c6b0" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by_key</source>
          <target state="translated">Map::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="fddd4a9e9f359e6b02a370e6da729aa214300ae4" translate="yes" xml:space="preserve">
          <source>Map::last</source>
          <target state="translated">Map::last</target>
        </trans-unit>
        <trans-unit id="3794995c0f5bba6ab4b90ce6c82a5e83207a1571" translate="yes" xml:space="preserve">
          <source>Map::le</source>
          <target state="translated">Map::le</target>
        </trans-unit>
        <trans-unit id="26586aaae30ff20d50715692987bf1a4d7716e8c" translate="yes" xml:space="preserve">
          <source>Map::len</source>
          <target state="translated">Map::len</target>
        </trans-unit>
        <trans-unit id="25ef7d621a5ac63c0fda76bac9dd97d2d2700cd6" translate="yes" xml:space="preserve">
          <source>Map::lt</source>
          <target state="translated">Map::lt</target>
        </trans-unit>
        <trans-unit id="40cac0b5fd45dddd282e0ee446680c17c5c623d7" translate="yes" xml:space="preserve">
          <source>Map::map</source>
          <target state="translated">Map::map</target>
        </trans-unit>
        <trans-unit id="48b5b8f8f6251126a880cc4ab4b3b2011c64448b" translate="yes" xml:space="preserve">
          <source>Map::max</source>
          <target state="translated">Map::max</target>
        </trans-unit>
        <trans-unit id="6fb150f3d87aa0a6ddb9c71c96b522bb70871171" translate="yes" xml:space="preserve">
          <source>Map::max_by</source>
          <target state="translated">Map::max_by</target>
        </trans-unit>
        <trans-unit id="5e6536c48e7829b8ff885ec31d8681a3ced9a901" translate="yes" xml:space="preserve">
          <source>Map::max_by_key</source>
          <target state="translated">Map::max_by_key</target>
        </trans-unit>
        <trans-unit id="68233d057ba78c0b7a8e0a61b6680d3717ba4150" translate="yes" xml:space="preserve">
          <source>Map::min</source>
          <target state="translated">Map::min</target>
        </trans-unit>
        <trans-unit id="8a9341a8b777321cda6d7fcd4082aa0671c4fe1b" translate="yes" xml:space="preserve">
          <source>Map::min_by</source>
          <target state="translated">Map::min_by</target>
        </trans-unit>
        <trans-unit id="921c6c43f49d77c68b806d0e548ee1cef1a992ec" translate="yes" xml:space="preserve">
          <source>Map::min_by_key</source>
          <target state="translated">Map::min_by_key</target>
        </trans-unit>
        <trans-unit id="4d8988fbd101fbf8e6c94aa5288cf45fab81e964" translate="yes" xml:space="preserve">
          <source>Map::ne</source>
          <target state="translated">Map::ne</target>
        </trans-unit>
        <trans-unit id="bd95bbe906046a49dc9810190d741e1bd68bbc39" translate="yes" xml:space="preserve">
          <source>Map::next</source>
          <target state="translated">Map::next</target>
        </trans-unit>
        <trans-unit id="39e2008f43536663d0ca35066c739e6e3ebadc47" translate="yes" xml:space="preserve">
          <source>Map::next_back</source>
          <target state="translated">Map::next_back</target>
        </trans-unit>
        <trans-unit id="bc8224e378d580c52513c9c59784964d8f54fe1a" translate="yes" xml:space="preserve">
          <source>Map::nth</source>
          <target state="translated">Map::nth</target>
        </trans-unit>
        <trans-unit id="ce0694a97b324829d9ed31f3b6e2cc31e3a513e0" translate="yes" xml:space="preserve">
          <source>Map::nth_back</source>
          <target state="translated">Map::nth_back</target>
        </trans-unit>
        <trans-unit id="6dc78fd299f1bfef5c724073e84810a0ebf43ea3" translate="yes" xml:space="preserve">
          <source>Map::partial_cmp</source>
          <target state="translated">Map::partial_cmp</target>
        </trans-unit>
        <trans-unit id="fd07c390ff46f9dcd32482c98f66d65c6fddcc9e" translate="yes" xml:space="preserve">
          <source>Map::partition</source>
          <target state="translated">Map::partition</target>
        </trans-unit>
        <trans-unit id="37114f4f80d49293573e7c92509d712b2a2e49ba" translate="yes" xml:space="preserve">
          <source>Map::peekable</source>
          <target state="translated">Map::peekable</target>
        </trans-unit>
        <trans-unit id="9b4d7af93bb9bdf0426605707f0b34a9ff7e2daa" translate="yes" xml:space="preserve">
          <source>Map::position</source>
          <target state="translated">Map::position</target>
        </trans-unit>
        <trans-unit id="3d27eb47b8bdd3a8842e3f21315f7117954ca629" translate="yes" xml:space="preserve">
          <source>Map::product</source>
          <target state="translated">Map::product</target>
        </trans-unit>
        <trans-unit id="47c5c4644d5a03d1a05f0fbb573d4f9546fc7eda" translate="yes" xml:space="preserve">
          <source>Map::rev</source>
          <target state="translated">Map::rev</target>
        </trans-unit>
        <trans-unit id="98eeaa4cd728ab7a6cea0c95712fbc4770918b02" translate="yes" xml:space="preserve">
          <source>Map::rfind</source>
          <target state="translated">Map::rfind</target>
        </trans-unit>
        <trans-unit id="7f3aad1b4b83a46d17d2320a509b0bca35196ddc" translate="yes" xml:space="preserve">
          <source>Map::rfold</source>
          <target state="translated">Map::rfold</target>
        </trans-unit>
        <trans-unit id="602b0edc5518aae4fa0c05975ed09058fc128538" translate="yes" xml:space="preserve">
          <source>Map::rposition</source>
          <target state="translated">Map::rposition</target>
        </trans-unit>
        <trans-unit id="c6c10105cff31b60a7f7d97985eee0e40ee6b580" translate="yes" xml:space="preserve">
          <source>Map::scan</source>
          <target state="translated">Map::scan</target>
        </trans-unit>
        <trans-unit id="6600c2d56964d5ec64f83bb9495bd9cb7812154f" translate="yes" xml:space="preserve">
          <source>Map::size_hint</source>
          <target state="translated">Map::size_hint</target>
        </trans-unit>
        <trans-unit id="923e99f72130f5a97cac9c41715a3476d75c8951" translate="yes" xml:space="preserve">
          <source>Map::skip</source>
          <target state="translated">Map::skip</target>
        </trans-unit>
        <trans-unit id="9611218973349584a7bfbfb37c26e1ef38fb218f" translate="yes" xml:space="preserve">
          <source>Map::skip_while</source>
          <target state="translated">Map::skip_while</target>
        </trans-unit>
        <trans-unit id="37f15143aefd854a8af3e39ab55c70a5a192f8d8" translate="yes" xml:space="preserve">
          <source>Map::step_by</source>
          <target state="translated">Map::step_by</target>
        </trans-unit>
        <trans-unit id="7f04c8c1b54f17f3163e839e0042fa9006757120" translate="yes" xml:space="preserve">
          <source>Map::sum</source>
          <target state="translated">Map::sum</target>
        </trans-unit>
        <trans-unit id="87a9e6e637b04e1927a2c2eeae5ce601d8133256" translate="yes" xml:space="preserve">
          <source>Map::take</source>
          <target state="translated">Map::take</target>
        </trans-unit>
        <trans-unit id="f840d3533ded62863a4a0980e694e739563fdcc6" translate="yes" xml:space="preserve">
          <source>Map::take_while</source>
          <target state="translated">Map::take_while</target>
        </trans-unit>
        <trans-unit id="b22c8ca3fc8de8258f5c9cd3b2dc713ff6fcfb77" translate="yes" xml:space="preserve">
          <source>Map::to_owned</source>
          <target state="translated">Map::to_owned</target>
        </trans-unit>
        <trans-unit id="e9e6303270d6b2a52a8c06e6ea872d1081d4b3d0" translate="yes" xml:space="preserve">
          <source>Map::try_fold</source>
          <target state="translated">Map::try_fold</target>
        </trans-unit>
        <trans-unit id="2f933b05d507f1d3229a0fe286c9a34e8d46fa7c" translate="yes" xml:space="preserve">
          <source>Map::try_for_each</source>
          <target state="translated">Map::try_for_each</target>
        </trans-unit>
        <trans-unit id="bcd71f7fed78903d5ba372cc2b24eff4b81cfb7c" translate="yes" xml:space="preserve">
          <source>Map::try_from</source>
          <target state="translated">Map::try_from</target>
        </trans-unit>
        <trans-unit id="377418caebd9f1c884f3b21ab42fefd1a732ed86" translate="yes" xml:space="preserve">
          <source>Map::try_into</source>
          <target state="translated">Map::try_into</target>
        </trans-unit>
        <trans-unit id="39f1bb6fc690aefbc861e9a1fcc04ae870ca5342" translate="yes" xml:space="preserve">
          <source>Map::try_rfold</source>
          <target state="translated">Map::try_rfold</target>
        </trans-unit>
        <trans-unit id="7981573889b59d44592e7cd96024ff52ab0f2d02" translate="yes" xml:space="preserve">
          <source>Map::type_id</source>
          <target state="translated">Map::type_id</target>
        </trans-unit>
        <trans-unit id="28a8fad3b6d7b8e3263b1c130ee318dddf630612" translate="yes" xml:space="preserve">
          <source>Map::unzip</source>
          <target state="translated">Map::unzip</target>
        </trans-unit>
        <trans-unit id="0c9357ee56278da444fa47d2152d6415837f2772" translate="yes" xml:space="preserve">
          <source>Map::zip</source>
          <target state="translated">Map::zip</target>
        </trans-unit>
        <trans-unit id="e756756cc8409d6509546ae5d3bd850bcef76291" translate="yes" xml:space="preserve">
          <source>MapWhile</source>
          <target state="translated">MapWhile</target>
        </trans-unit>
        <trans-unit id="83cefc6377d7fddbe40b4eec70dcd5e0779d80d1" translate="yes" xml:space="preserve">
          <source>Mapping and then flattening:</source>
          <target state="translated">매핑 및 병합 :</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="14641b96d419633d95de2065c3d26825c594b3f9" translate="yes" xml:space="preserve">
          <source>Maps &lt;code&gt;ControlFlow&amp;lt;B, C&amp;gt;&lt;/code&gt; to &lt;code&gt;ControlFlow&amp;lt;T, C&amp;gt;&lt;/code&gt; by applying a function to the break value in case it exists.</source>
          <target state="translated">지도 &lt;code&gt;ControlFlow&amp;lt;B, C&amp;gt;&lt;/code&gt; 에 &lt;code&gt;ControlFlow&amp;lt;T, C&amp;gt;&lt;/code&gt; 존재하는 경우에 브레이크 값에 함수를 적용함으로써.</target>
        </trans-unit>
        <trans-unit id="7dfca1c39dc2005ffa58f05878051dfb7ab133c0" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">에 맵 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; A와 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 의 내용을 복제하여 &lt;code&gt;Ok&lt;/code&gt; 부.</target>
        </trans-unit>
        <trans-unit id="d25505fbe1870538ccc1572575cda9f420028758" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">맵합니다 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; A와 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 의 내용을 복사하여 &lt;code&gt;Ok&lt;/code&gt; 부분.</target>
        </trans-unit>
        <trans-unit id="26ddf84303b0a1a0f206dd98bc1ca95bc7fd61f9" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">에 맵 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; A와 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 의 내용을 복제하여 &lt;code&gt;Ok&lt;/code&gt; 부.</target>
        </trans-unit>
        <trans-unit id="75078b53df865555f845fe3a893c127ababf9294" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">맵합니다 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; A와 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 의 내용을 복사하여 &lt;code&gt;Ok&lt;/code&gt; 부분.</target>
        </trans-unit>
        <trans-unit id="734564b861ed03b0aefe58885560fbc7857a1738" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">지도는 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 하기 &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; 함유에 함수를 적용함으로써 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 남아 있는지, 값 &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; 본래 값.</target>
        </trans-unit>
        <trans-unit id="ad065da187875e2c9f2477c5e59a007924643b31" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">포함 된 &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; 값에 함수를 적용 하고 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 값을 그대로 유지 하여 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 를 &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; 에 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="f936d32399d16bbfe67702c38935926ed5468164" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, or a fallback function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">포함 된 &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; 값에 함수를 적용 하거나 포함 된 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 값에 폴백 함수를 적용 하여 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 를 &lt;code&gt;U&lt;/code&gt; 에 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="797fbd17d80382efa5086a8df9508fbdca0a1060" translate="yes" xml:space="preserve">
          <source>Maps a byte in 0x00..=0xFF to a &lt;code&gt;char&lt;/code&gt; whose code point has the same value, in U+0000..=U+00FF.</source>
          <target state="translated">0x00 .. = 0xFF의 바이트를 U + 0000 .. = U + 00FF의 코드 포인트 값이 같은 &lt;code&gt;char&lt;/code&gt; 로 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="2e352145a0cdb19a335300b9369b89fbd8a25ef7" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">매핑하는 &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 옵션의 내용을 복제하여.</target>
        </trans-unit>
        <trans-unit id="93de5376733896baa45e538f72efc3d420f82590" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">매핑하는 &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 옵션의 내용을 복사하여.</target>
        </trans-unit>
        <trans-unit id="489e927771bbcdbcf304af0a46f6f0a2cfc0e463" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">매핑하는 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 옵션의 내용을 복제하여.</target>
        </trans-unit>
        <trans-unit id="c891415b6b09551729b3ef9fb44bbf6a6f502c69" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">매핑하는 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 옵션의 내용을 복사하여.</target>
        </trans-unit>
        <trans-unit id="6625245129c5cc0b5428454a5f4ec750a28d7f63" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; by applying a function to a contained value.</source>
          <target state="translated">포함 된 값에 함수를 적용 하여 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; 에 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="ce763bb51ba6bc3f09a0b1b9904ceb8306ffe54d" translate="yes" xml:space="preserve">
          <source>Maps: &lt;a href=&quot;hash_map/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">지도 : &lt;a href=&quot;hash_map/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e0db9965b9d8c070fe6ab5a20105fd94f41e462" translate="yes" xml:space="preserve">
          <source>Maps: &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">지도 : &lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25037497682a833510188b5ecdcc39064438926" translate="yes" xml:space="preserve">
          <source>Marking elements as &lt;code&gt;unsafe&lt;/code&gt;</source>
          <target state="translated">요소를 &lt;code&gt;unsafe&lt;/code&gt; 것으로 표시</target>
        </trans-unit>
        <trans-unit id="799115430a273023c28ac0e7dc5ce0b69eca5421" translate="yes" xml:space="preserve">
          <source>Marks the struct as non-exhaustive, indicating to the reader that there are some other fields that are not shown in the debug representation.</source>
          <target state="translated">구조체를 완전하지 않은 것으로 표시하여 독자에게 디버그 표현에 표시되지 않은 다른 필드가 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5d2cb06099639fbea64185538fa2f9ba651babda" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a &lt;code&gt;bool&lt;/code&gt;-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword.</source>
          <target state="translated">매치 암은 &lt;em&gt;매치 가드&lt;/em&gt; 를 수용 하여 케이스 매칭 기준을 더욱 세분화 할 수 있습니다 . 패턴 가드는 패턴 뒤에 나타나며 &lt;code&gt;if&lt;/code&gt; 키워드 다음에 나오는 &lt;code&gt;bool&lt;/code&gt; 형식의 표현식 으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7ef7934adf8c801d44bf69adf1806707e1b590a" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a bool-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword. A pattern guard may refer to the variables bound within the pattern they follow.</source>
          <target state="translated">성냥 암은 &lt;em&gt;성냥 가드&lt;/em&gt; 를 수용 하여 사건 일치에 대한 기준을 더욱 세분화 할 수 있습니다 . 패턴 가드는 패턴 다음에 나타나며 &lt;code&gt;if&lt;/code&gt; 키워드 다음에 부울 형식 표현식으로 구성됩니다 . 패턴 가드는 패턴에 따라 달라지는 변수를 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82dbbba4b754bd91fe25a2303476d2bbf40a1588" translate="yes" xml:space="preserve">
          <source>Match arms with guard conditions.</source>
          <target state="translated">가드 조건과 팔을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="705c230fc6ae75bfa567a56930852133f1ba462b" translate="yes" xml:space="preserve">
          <source>Match arms:</source>
          <target state="translated">성냥 팔 :</target>
        </trans-unit>
        <trans-unit id="29c22bededda367b5ee4a04d29831608c006bc68" translate="yes" xml:space="preserve">
          <source>Match condition</source>
          <target state="translated">경기 조건</target>
        </trans-unit>
        <trans-unit id="0282881bf64b96224fa36c4b271c429100fee5e9" translate="yes" xml:space="preserve">
          <source>Match guards</source>
          <target state="translated">가드 매치</target>
        </trans-unit>
        <trans-unit id="442ae912e5bf400cd7a06fdbd1cc99f277c5045b" translate="yes" xml:space="preserve">
          <source>Match inside the loop instead:</source>
          <target state="translated">대신 루프 내에서 일치하십시오.</target>
        </trans-unit>
        <trans-unit id="3739f6f123a862ea5412abd3d0679f165957e53c" translate="yes" xml:space="preserve">
          <source>MatchIndices</source>
          <target state="translated">MatchIndices</target>
        </trans-unit>
        <trans-unit id="7c0c01a14aad4ca86387f3507273def6a3cf0b5d" translate="yes" xml:space="preserve">
          <source>MatchIndices::all</source>
          <target state="translated">MatchIndices::all</target>
        </trans-unit>
        <trans-unit id="6b76c9e862a027cab6fcec93f08aebfc4d529237" translate="yes" xml:space="preserve">
          <source>MatchIndices::any</source>
          <target state="translated">MatchIndices::any</target>
        </trans-unit>
        <trans-unit id="02aeeb6f73d6644372f844a5d08ae7c1ad25533b" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow</source>
          <target state="translated">MatchIndices::borrow</target>
        </trans-unit>
        <trans-unit id="b0b39a03296952fb25f2b50c8b6722eebfb7261f" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow_mut</source>
          <target state="translated">MatchIndices::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2f345fb24654ed82e91d8ac8467f8f30c4bc0bef" translate="yes" xml:space="preserve">
          <source>MatchIndices::by_ref</source>
          <target state="translated">MatchIndices::by_ref</target>
        </trans-unit>
        <trans-unit id="7bcbb5083968690c1ca1cc9942df87127b2049fd" translate="yes" xml:space="preserve">
          <source>MatchIndices::chain</source>
          <target state="translated">MatchIndices::chain</target>
        </trans-unit>
        <trans-unit id="c701a3c91470a2cb8c46024cd84462cdb941eff5" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone</source>
          <target state="translated">MatchIndices::clone</target>
        </trans-unit>
        <trans-unit id="b0db6347a398c0d36c24c5e5f31ef74d6bf115ca" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_from</source>
          <target state="translated">MatchIndices::clone_from</target>
        </trans-unit>
        <trans-unit id="9075b3ad377aae3bdb3b83754cfb1468e97248e7" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_into</source>
          <target state="translated">MatchIndices::clone_into</target>
        </trans-unit>
        <trans-unit id="757c60bfbfeda7ff54ff552a04999ace62a28ddb" translate="yes" xml:space="preserve">
          <source>MatchIndices::cloned</source>
          <target state="translated">MatchIndices::cloned</target>
        </trans-unit>
        <trans-unit id="74bc1bc3ac32f736e9ea21ac4deeb6498b8d7799" translate="yes" xml:space="preserve">
          <source>MatchIndices::cmp</source>
          <target state="translated">MatchIndices::cmp</target>
        </trans-unit>
        <trans-unit id="f4bb5929c6110cfa542fbadab3093a0794871a1f" translate="yes" xml:space="preserve">
          <source>MatchIndices::collect</source>
          <target state="translated">MatchIndices::collect</target>
        </trans-unit>
        <trans-unit id="9fb056458d0be8f451f5aeda3cd7b8ceb8b0f74a" translate="yes" xml:space="preserve">
          <source>MatchIndices::copied</source>
          <target state="translated">MatchIndices::copied</target>
        </trans-unit>
        <trans-unit id="930e8200a6895bbc7e075dc0a7fd4f9d44780000" translate="yes" xml:space="preserve">
          <source>MatchIndices::count</source>
          <target state="translated">MatchIndices::count</target>
        </trans-unit>
        <trans-unit id="143eb1f700da8cf5aae0dd4a729b79290ec10b2b" translate="yes" xml:space="preserve">
          <source>MatchIndices::cycle</source>
          <target state="translated">MatchIndices::cycle</target>
        </trans-unit>
        <trans-unit id="39fccef48dab1f3fc05706219bfd31fd34f04217" translate="yes" xml:space="preserve">
          <source>MatchIndices::enumerate</source>
          <target state="translated">MatchIndices::enumerate</target>
        </trans-unit>
        <trans-unit id="83dd639bfdfbf1b4e77bd2d8087dd98ee30fd7e2" translate="yes" xml:space="preserve">
          <source>MatchIndices::eq</source>
          <target state="translated">MatchIndices::eq</target>
        </trans-unit>
        <trans-unit id="259b55c869ea052cb365e557e96672d0213d2b93" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter</source>
          <target state="translated">MatchIndices::filter</target>
        </trans-unit>
        <trans-unit id="4ed78bfae8f63df5c8348a6634e914e2623500d4" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter_map</source>
          <target state="translated">MatchIndices::filter_map</target>
        </trans-unit>
        <trans-unit id="b452e8e82fa71eb809418b8c3d82a85ac8e7f300" translate="yes" xml:space="preserve">
          <source>MatchIndices::find</source>
          <target state="translated">MatchIndices::find</target>
        </trans-unit>
        <trans-unit id="5066cb793c580d5e99d9f3e72076420df852a3ce" translate="yes" xml:space="preserve">
          <source>MatchIndices::find_map</source>
          <target state="translated">MatchIndices::find_map</target>
        </trans-unit>
        <trans-unit id="32f41be00b97eddbee56f06e0cc743acc0fa1781" translate="yes" xml:space="preserve">
          <source>MatchIndices::flat_map</source>
          <target state="translated">MatchIndices::flat_map</target>
        </trans-unit>
        <trans-unit id="b44aed96a3a677020d0c5e466d55940493f6a771" translate="yes" xml:space="preserve">
          <source>MatchIndices::flatten</source>
          <target state="translated">MatchIndices::flatten</target>
        </trans-unit>
        <trans-unit id="be9072fce8c1c8b1d608e2a6376a42143199290b" translate="yes" xml:space="preserve">
          <source>MatchIndices::fmt</source>
          <target state="translated">MatchIndices::fmt</target>
        </trans-unit>
        <trans-unit id="59f5816f4df1065953ab5e8e96de08a2f5b8c0af" translate="yes" xml:space="preserve">
          <source>MatchIndices::fold</source>
          <target state="translated">MatchIndices::fold</target>
        </trans-unit>
        <trans-unit id="b31fa990a3df79fb105a5e710721d9f935c9c97b" translate="yes" xml:space="preserve">
          <source>MatchIndices::for_each</source>
          <target state="translated">MatchIndices::for_each</target>
        </trans-unit>
        <trans-unit id="3b2b8851365c2d9263607ae5431ceb335c33430c" translate="yes" xml:space="preserve">
          <source>MatchIndices::from</source>
          <target state="translated">MatchIndices::from</target>
        </trans-unit>
        <trans-unit id="f0cb1d25b686f277b736f73628eadc3976c50e30" translate="yes" xml:space="preserve">
          <source>MatchIndices::fuse</source>
          <target state="translated">MatchIndices::fuse</target>
        </trans-unit>
        <trans-unit id="eb595e7b82cb227143f7d4c2a48acdc7fbae9b38" translate="yes" xml:space="preserve">
          <source>MatchIndices::ge</source>
          <target state="translated">MatchIndices::ge</target>
        </trans-unit>
        <trans-unit id="14c10296be221ae8bcda163e2cac0af0fda7612f" translate="yes" xml:space="preserve">
          <source>MatchIndices::gt</source>
          <target state="translated">MatchIndices::gt</target>
        </trans-unit>
        <trans-unit id="76ec672bbeb01f886568824d13941fb70441a5af" translate="yes" xml:space="preserve">
          <source>MatchIndices::inspect</source>
          <target state="translated">MatchIndices::inspect</target>
        </trans-unit>
        <trans-unit id="1b9f739731ad3a5d5d8f1ba65f8f102b3c42b9e3" translate="yes" xml:space="preserve">
          <source>MatchIndices::into</source>
          <target state="translated">MatchIndices::into</target>
        </trans-unit>
        <trans-unit id="aead44f955338c2dea3080f6f046288cf282389c" translate="yes" xml:space="preserve">
          <source>MatchIndices::into_iter</source>
          <target state="translated">MatchIndices::into_iter</target>
        </trans-unit>
        <trans-unit id="aaca048678ac9cb09d17b6f19dccfa3f8cbd8a68" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted</source>
          <target state="translated">MatchIndices::is_sorted</target>
        </trans-unit>
        <trans-unit id="494ccebc2573bc8ae8e822653128501799daee31" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by</source>
          <target state="translated">MatchIndices::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="10969064cde7db281b3bf5ae0d8074ddbe5b2057" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by_key</source>
          <target state="translated">MatchIndices::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="b207e7a0e0f65362244472856341f08e7b5f968e" translate="yes" xml:space="preserve">
          <source>MatchIndices::last</source>
          <target state="translated">MatchIndices::last</target>
        </trans-unit>
        <trans-unit id="1f0c1804be730a595793157eee0b5899468a57fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::le</source>
          <target state="translated">MatchIndices::le</target>
        </trans-unit>
        <trans-unit id="714c1040165e446023bdb25a0d7a5b62b88a2827" translate="yes" xml:space="preserve">
          <source>MatchIndices::lt</source>
          <target state="translated">MatchIndices::lt</target>
        </trans-unit>
        <trans-unit id="c2c7317c42e1128c61257980f67d6e48c552e06e" translate="yes" xml:space="preserve">
          <source>MatchIndices::map</source>
          <target state="translated">MatchIndices::map</target>
        </trans-unit>
        <trans-unit id="aee4229db0b745c9bce9e251b061d1df09093478" translate="yes" xml:space="preserve">
          <source>MatchIndices::max</source>
          <target state="translated">MatchIndices::max</target>
        </trans-unit>
        <trans-unit id="fa0986e2f1af3e5f1bc0450062f53561e6c81ddd" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by</source>
          <target state="translated">MatchIndices::max_by</target>
        </trans-unit>
        <trans-unit id="9f23e12ae79451b15c7c916bd3225e0027c45e8a" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by_key</source>
          <target state="translated">MatchIndices::max_by_key</target>
        </trans-unit>
        <trans-unit id="2e39560ff99878ffc39fd296cda924c5b2c03981" translate="yes" xml:space="preserve">
          <source>MatchIndices::min</source>
          <target state="translated">MatchIndices::min</target>
        </trans-unit>
        <trans-unit id="92f4db568851f93dab54705599c319ed015f3650" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by</source>
          <target state="translated">MatchIndices::min_by</target>
        </trans-unit>
        <trans-unit id="65abf9fc033ef993ad3616561604bc6168d2ccbe" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by_key</source>
          <target state="translated">MatchIndices::min_by_key</target>
        </trans-unit>
        <trans-unit id="07fc13c698bd94933a040c5a662601d3baa2e9fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::ne</source>
          <target state="translated">MatchIndices::ne</target>
        </trans-unit>
        <trans-unit id="310938ae31ecec7a264e7277687593734d44568f" translate="yes" xml:space="preserve">
          <source>MatchIndices::next</source>
          <target state="translated">MatchIndices::next</target>
        </trans-unit>
        <trans-unit id="c31cf9fcd888382ae0ea7f383f70a3b44d3ec196" translate="yes" xml:space="preserve">
          <source>MatchIndices::next_back</source>
          <target state="translated">MatchIndices::next_back</target>
        </trans-unit>
        <trans-unit id="96ef6e6af4fd7d98ef4e1e43a8b441ed1e0c34cc" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth</source>
          <target state="translated">MatchIndices::nth</target>
        </trans-unit>
        <trans-unit id="7d368eba8c884cae30ca39ce974f4608867e96d3" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth_back</source>
          <target state="translated">MatchIndices::nth_back</target>
        </trans-unit>
        <trans-unit id="ab962565ed9fafac9d7ff2b1a2e63f1fd3710d5e" translate="yes" xml:space="preserve">
          <source>MatchIndices::partial_cmp</source>
          <target state="translated">MatchIndices::partial_cmp</target>
        </trans-unit>
        <trans-unit id="57254eb362bbbf8b679504cfd2a2d5e3ec1f0dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::partition</source>
          <target state="translated">MatchIndices::partition</target>
        </trans-unit>
        <trans-unit id="1e7e9422949dcdc28a75d0836c9aebd087900b8c" translate="yes" xml:space="preserve">
          <source>MatchIndices::peekable</source>
          <target state="translated">MatchIndices::peekable</target>
        </trans-unit>
        <trans-unit id="12be4b9a10cadd68ecaf54663c00f4a34b5f4ecc" translate="yes" xml:space="preserve">
          <source>MatchIndices::position</source>
          <target state="translated">MatchIndices::position</target>
        </trans-unit>
        <trans-unit id="348fe66eb091edea41f27fba3b3e350602376bed" translate="yes" xml:space="preserve">
          <source>MatchIndices::product</source>
          <target state="translated">MatchIndices::product</target>
        </trans-unit>
        <trans-unit id="1963aa77d2e51a1cd8995d3a7783963289df1dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::rev</source>
          <target state="translated">MatchIndices::rev</target>
        </trans-unit>
        <trans-unit id="0a8c8a9860d2936ff3103a39728b1f7122a37be7" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfind</source>
          <target state="translated">MatchIndices::rfind</target>
        </trans-unit>
        <trans-unit id="f68b89eb92b49e5293f3bc6009baae718e58a00e" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfold</source>
          <target state="translated">MatchIndices::rfold</target>
        </trans-unit>
        <trans-unit id="315b4220cbd8e0c545f07547765f5832a9c86221" translate="yes" xml:space="preserve">
          <source>MatchIndices::rposition</source>
          <target state="translated">MatchIndices::rposition</target>
        </trans-unit>
        <trans-unit id="2ab2384d0375db50c9c56dc9c650d7a18fc9cfca" translate="yes" xml:space="preserve">
          <source>MatchIndices::scan</source>
          <target state="translated">MatchIndices::scan</target>
        </trans-unit>
        <trans-unit id="2b77624dba127ee70a08d8deb81afce43d4451ff" translate="yes" xml:space="preserve">
          <source>MatchIndices::size_hint</source>
          <target state="translated">MatchIndices::size_hint</target>
        </trans-unit>
        <trans-unit id="e11016fd82a8ae6b1cc4431c096024383cd55289" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip</source>
          <target state="translated">MatchIndices::skip</target>
        </trans-unit>
        <trans-unit id="66537225c0c97f9b5ed8f0b1d276134fb031158a" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip_while</source>
          <target state="translated">MatchIndices::skip_while</target>
        </trans-unit>
        <trans-unit id="ea0d009d45cb6d7e6d3bb7b20ed5bcea6fc3295b" translate="yes" xml:space="preserve">
          <source>MatchIndices::step_by</source>
          <target state="translated">MatchIndices::step_by</target>
        </trans-unit>
        <trans-unit id="a281813e58bcc4fe4ecfc5f52608eaa03bea658a" translate="yes" xml:space="preserve">
          <source>MatchIndices::sum</source>
          <target state="translated">MatchIndices::sum</target>
        </trans-unit>
        <trans-unit id="096f4326ed06e3754c6af15c4a48de95d9807c80" translate="yes" xml:space="preserve">
          <source>MatchIndices::take</source>
          <target state="translated">MatchIndices::take</target>
        </trans-unit>
        <trans-unit id="dd509dc4aa10cbf86aa0cedca0fb11bb8d228ba4" translate="yes" xml:space="preserve">
          <source>MatchIndices::take_while</source>
          <target state="translated">MatchIndices::take_while</target>
        </trans-unit>
        <trans-unit id="7ba6b4d532f5fe105f4c17cfa277856ecc93cc91" translate="yes" xml:space="preserve">
          <source>MatchIndices::to_owned</source>
          <target state="translated">MatchIndices::to_owned</target>
        </trans-unit>
        <trans-unit id="d53bd53761ca88b3d4f96c0e1da7e805ecc1a162" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_fold</source>
          <target state="translated">MatchIndices::try_fold</target>
        </trans-unit>
        <trans-unit id="e55d2c69102746bda08c66c4290fa28c373fe4d1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_for_each</source>
          <target state="translated">MatchIndices::try_for_each</target>
        </trans-unit>
        <trans-unit id="ce0fcc30049ca458576119cb2101ceaf48da4b9a" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_from</source>
          <target state="translated">MatchIndices::try_from</target>
        </trans-unit>
        <trans-unit id="591ae842ca203ad1f776a040ba0ef67aa76a60e1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_into</source>
          <target state="translated">MatchIndices::try_into</target>
        </trans-unit>
        <trans-unit id="f087c03238f8f86bc47404dfad613d4c63b4e2e0" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_rfold</source>
          <target state="translated">MatchIndices::try_rfold</target>
        </trans-unit>
        <trans-unit id="5ce0bb4829d8b7bbb7369d2b9ae77a51efbf54f6" translate="yes" xml:space="preserve">
          <source>MatchIndices::type_id</source>
          <target state="translated">MatchIndices::type_id</target>
        </trans-unit>
        <trans-unit id="52c4c724db47afc62f2fdf9a014929e13ed5bbba" translate="yes" xml:space="preserve">
          <source>MatchIndices::unzip</source>
          <target state="translated">MatchIndices::unzip</target>
        </trans-unit>
        <trans-unit id="a0fd217e64097f5938d4a8d5755e5fced6da54a0" translate="yes" xml:space="preserve">
          <source>MatchIndices::zip</source>
          <target state="translated">MatchIndices::zip</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="5cc6987e7ed2a2b2e62c548b42089341976209aa" translate="yes" xml:space="preserve">
          <source>Matches Are Exhaustive</source>
          <target state="translated">경기는 철저하다</target>
        </trans-unit>
        <trans-unit id="3a0d932544aa8e3d9374e99e6710f8a85f6c0c7d" translate="yes" xml:space="preserve">
          <source>Matches::all</source>
          <target state="translated">Matches::all</target>
        </trans-unit>
        <trans-unit id="16fb890dd8ce7dfcb5a0e63ba8978c2471f380a3" translate="yes" xml:space="preserve">
          <source>Matches::any</source>
          <target state="translated">Matches::any</target>
        </trans-unit>
        <trans-unit id="5e4f547e5a9c68b04b7459d87531f3392cef812c" translate="yes" xml:space="preserve">
          <source>Matches::borrow</source>
          <target state="translated">Matches::borrow</target>
        </trans-unit>
        <trans-unit id="eb7a33e738fd491a8440d0e486d0da0f4b7357df" translate="yes" xml:space="preserve">
          <source>Matches::borrow_mut</source>
          <target state="translated">Matches::borrow_mut</target>
        </trans-unit>
        <trans-unit id="442cbd680df62a68364c435a1bb0ae46b79a7eac" translate="yes" xml:space="preserve">
          <source>Matches::by_ref</source>
          <target state="translated">Matches::by_ref</target>
        </trans-unit>
        <trans-unit id="20dfc02cc86de67d6fdaf58ce4461b2fd5815f11" translate="yes" xml:space="preserve">
          <source>Matches::chain</source>
          <target state="translated">Matches::chain</target>
        </trans-unit>
        <trans-unit id="e26629789994660e4224d4cebf44f28566fa8954" translate="yes" xml:space="preserve">
          <source>Matches::clone</source>
          <target state="translated">Matches::clone</target>
        </trans-unit>
        <trans-unit id="4c01d6dc1417a885eff4cea68ae3c49c30339c23" translate="yes" xml:space="preserve">
          <source>Matches::clone_from</source>
          <target state="translated">Matches::clone_from</target>
        </trans-unit>
        <trans-unit id="908070155acaacd57ea50bc0c693a8d4d38e9084" translate="yes" xml:space="preserve">
          <source>Matches::clone_into</source>
          <target state="translated">Matches::clone_into</target>
        </trans-unit>
        <trans-unit id="f1039a5bd9dd87408160a7bc89f5aee247baed0e" translate="yes" xml:space="preserve">
          <source>Matches::cloned</source>
          <target state="translated">Matches::cloned</target>
        </trans-unit>
        <trans-unit id="19c9fd0279baa24b411e3947534ec46f6b80b29b" translate="yes" xml:space="preserve">
          <source>Matches::cmp</source>
          <target state="translated">Matches::cmp</target>
        </trans-unit>
        <trans-unit id="b28a79700065ba26a75e2535566b0111e766961d" translate="yes" xml:space="preserve">
          <source>Matches::collect</source>
          <target state="translated">Matches::collect</target>
        </trans-unit>
        <trans-unit id="23a42c659f214505d85c65acf90795a53cbbd9c7" translate="yes" xml:space="preserve">
          <source>Matches::copied</source>
          <target state="translated">Matches::copied</target>
        </trans-unit>
        <trans-unit id="8ddc41164c9c903c75ffabc4216778ab2b92a07b" translate="yes" xml:space="preserve">
          <source>Matches::count</source>
          <target state="translated">Matches::count</target>
        </trans-unit>
        <trans-unit id="c5bb9e45a2d04384d39504bf8fed06af4eb949f4" translate="yes" xml:space="preserve">
          <source>Matches::cycle</source>
          <target state="translated">Matches::cycle</target>
        </trans-unit>
        <trans-unit id="25d821be5ab0c31669a0c65bee52e76ca6e2dfda" translate="yes" xml:space="preserve">
          <source>Matches::enumerate</source>
          <target state="translated">Matches::enumerate</target>
        </trans-unit>
        <trans-unit id="8fe87f5ab4c69eee8b3e42d4ef7d3f0bc9b6bd46" translate="yes" xml:space="preserve">
          <source>Matches::eq</source>
          <target state="translated">Matches::eq</target>
        </trans-unit>
        <trans-unit id="bd6c3e4a09141a6b1687bc6edcbc4725f14d6e9b" translate="yes" xml:space="preserve">
          <source>Matches::filter</source>
          <target state="translated">Matches::filter</target>
        </trans-unit>
        <trans-unit id="f28215c08cf52a08c1113104ff10156614b2d4dc" translate="yes" xml:space="preserve">
          <source>Matches::filter_map</source>
          <target state="translated">Matches::filter_map</target>
        </trans-unit>
        <trans-unit id="7e979d935feb5504226bf8fd99bc7ddddbae73ed" translate="yes" xml:space="preserve">
          <source>Matches::find</source>
          <target state="translated">Matches::find</target>
        </trans-unit>
        <trans-unit id="f417888fb6c581ab01ae22da17789e08d5d30a43" translate="yes" xml:space="preserve">
          <source>Matches::find_map</source>
          <target state="translated">Matches::find_map</target>
        </trans-unit>
        <trans-unit id="aac48d806deb17c5fb6f87226315aa3b6f58319d" translate="yes" xml:space="preserve">
          <source>Matches::flat_map</source>
          <target state="translated">Matches::flat_map</target>
        </trans-unit>
        <trans-unit id="0721b37fe4fd2773176992136934d02d73295f86" translate="yes" xml:space="preserve">
          <source>Matches::flatten</source>
          <target state="translated">Matches::flatten</target>
        </trans-unit>
        <trans-unit id="a82571e1d46a7c4bd3c2adc55d5ec1e13ef469b7" translate="yes" xml:space="preserve">
          <source>Matches::fmt</source>
          <target state="translated">Matches::fmt</target>
        </trans-unit>
        <trans-unit id="81d2cf00372eb5d8702e03ec8c630dd8ec00c4bb" translate="yes" xml:space="preserve">
          <source>Matches::fold</source>
          <target state="translated">Matches::fold</target>
        </trans-unit>
        <trans-unit id="1fbe90aeae0d2764bf797ea002efc575a587c806" translate="yes" xml:space="preserve">
          <source>Matches::for_each</source>
          <target state="translated">Matches::for_each</target>
        </trans-unit>
        <trans-unit id="b935cf9ba4ffa6f06d97d64621e3d2de0895f4ba" translate="yes" xml:space="preserve">
          <source>Matches::from</source>
          <target state="translated">Matches::from</target>
        </trans-unit>
        <trans-unit id="4d32cbce51a48f695b8fea902b09c284a29cde2e" translate="yes" xml:space="preserve">
          <source>Matches::fuse</source>
          <target state="translated">Matches::fuse</target>
        </trans-unit>
        <trans-unit id="9b2e7ede1acc6f67900d4a4d3ab2c98e1aaad7f8" translate="yes" xml:space="preserve">
          <source>Matches::ge</source>
          <target state="translated">Matches::ge</target>
        </trans-unit>
        <trans-unit id="31fe4a3fccced0fe0c71960e54c70b3121c12d76" translate="yes" xml:space="preserve">
          <source>Matches::gt</source>
          <target state="translated">Matches::gt</target>
        </trans-unit>
        <trans-unit id="9a91adab19d2f651b421bcb0b782f148955b87df" translate="yes" xml:space="preserve">
          <source>Matches::inspect</source>
          <target state="translated">Matches::inspect</target>
        </trans-unit>
        <trans-unit id="cdaa2f6866b152ff52f54f63d328297e95ffefc9" translate="yes" xml:space="preserve">
          <source>Matches::into</source>
          <target state="translated">Matches::into</target>
        </trans-unit>
        <trans-unit id="fbfdb405e53ca49b4f0a6aa96e0707e0b10af640" translate="yes" xml:space="preserve">
          <source>Matches::into_iter</source>
          <target state="translated">Matches::into_iter</target>
        </trans-unit>
        <trans-unit id="b86a1a91695e60a826f9cbcbe7744cdd9377aa24" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted</source>
          <target state="translated">Matches::is_sorted</target>
        </trans-unit>
        <trans-unit id="88b5d9a696f322ca51982376a518e086721e6020" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by</source>
          <target state="translated">Matches::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3af6013a8cdc222cc7dcf468759ca7a196ae2a35" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by_key</source>
          <target state="translated">Matches::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="19db6decfee88589fa49e71164a6c424bfab43c4" translate="yes" xml:space="preserve">
          <source>Matches::last</source>
          <target state="translated">Matches::last</target>
        </trans-unit>
        <trans-unit id="2b3c79eaacf0da1aceb94340410e1bf3e66ed35d" translate="yes" xml:space="preserve">
          <source>Matches::le</source>
          <target state="translated">Matches::le</target>
        </trans-unit>
        <trans-unit id="dc89550af976d29f1cd838ad118281c1c59ff27c" translate="yes" xml:space="preserve">
          <source>Matches::lt</source>
          <target state="translated">Matches::lt</target>
        </trans-unit>
        <trans-unit id="82f4602ea6fb73360443d9745b09df18459d58b6" translate="yes" xml:space="preserve">
          <source>Matches::map</source>
          <target state="translated">Matches::map</target>
        </trans-unit>
        <trans-unit id="c8d9d7e742cfadc7e42da43df1666f94b32c56dd" translate="yes" xml:space="preserve">
          <source>Matches::max</source>
          <target state="translated">Matches::max</target>
        </trans-unit>
        <trans-unit id="381ae5d9564473d6e8dd9a2749230d133255ad00" translate="yes" xml:space="preserve">
          <source>Matches::max_by</source>
          <target state="translated">Matches::max_by</target>
        </trans-unit>
        <trans-unit id="eb15db6391ca1dcfb4eb7997be38ea7ac31e86d5" translate="yes" xml:space="preserve">
          <source>Matches::max_by_key</source>
          <target state="translated">Matches::max_by_key</target>
        </trans-unit>
        <trans-unit id="2a7f00fe010cb33ba0a91dd9c43d06d20c3144c3" translate="yes" xml:space="preserve">
          <source>Matches::min</source>
          <target state="translated">Matches::min</target>
        </trans-unit>
        <trans-unit id="0511629eee2ebb309e8d692bfafa7146e73ab99a" translate="yes" xml:space="preserve">
          <source>Matches::min_by</source>
          <target state="translated">Matches::min_by</target>
        </trans-unit>
        <trans-unit id="92b4e0376aa22e37c9b2a710dfa2ea1a89fb5ad8" translate="yes" xml:space="preserve">
          <source>Matches::min_by_key</source>
          <target state="translated">Matches::min_by_key</target>
        </trans-unit>
        <trans-unit id="d1e00a92c27dc4a08ef517bcbb3c16d1d7c73fa2" translate="yes" xml:space="preserve">
          <source>Matches::ne</source>
          <target state="translated">Matches::ne</target>
        </trans-unit>
        <trans-unit id="80100501d955233d0aad678a7a0522b50d083d41" translate="yes" xml:space="preserve">
          <source>Matches::next</source>
          <target state="translated">Matches::next</target>
        </trans-unit>
        <trans-unit id="f87ed28aa3c643fcff8c2a323261a5ab3c47af41" translate="yes" xml:space="preserve">
          <source>Matches::next_back</source>
          <target state="translated">Matches::next_back</target>
        </trans-unit>
        <trans-unit id="06e8a5ed4403652966532401d85cecb2a059ab86" translate="yes" xml:space="preserve">
          <source>Matches::nth</source>
          <target state="translated">Matches::nth</target>
        </trans-unit>
        <trans-unit id="2d97ef2f69ba88eadeb3c0a353560d47aa8d892d" translate="yes" xml:space="preserve">
          <source>Matches::nth_back</source>
          <target state="translated">Matches::nth_back</target>
        </trans-unit>
        <trans-unit id="1e59a6c73ae29a25bdcf2a99e065e71f8bb68764" translate="yes" xml:space="preserve">
          <source>Matches::partial_cmp</source>
          <target state="translated">Matches::partial_cmp</target>
        </trans-unit>
        <trans-unit id="10bc67bf25acda7fdf7709fb020ef7093757f048" translate="yes" xml:space="preserve">
          <source>Matches::partition</source>
          <target state="translated">Matches::partition</target>
        </trans-unit>
        <trans-unit id="ca97a164faa6e48e7f0155c295145750469b483d" translate="yes" xml:space="preserve">
          <source>Matches::peekable</source>
          <target state="translated">Matches::peekable</target>
        </trans-unit>
        <trans-unit id="cb6e62672281dd6247bc9a5dfdecde19ffbc8916" translate="yes" xml:space="preserve">
          <source>Matches::position</source>
          <target state="translated">Matches::position</target>
        </trans-unit>
        <trans-unit id="8541181e1bc4494e2d6b28d4f7775de0da6559c4" translate="yes" xml:space="preserve">
          <source>Matches::product</source>
          <target state="translated">Matches::product</target>
        </trans-unit>
        <trans-unit id="7aa9e259d1203fa5740a53d399d7183277702354" translate="yes" xml:space="preserve">
          <source>Matches::rev</source>
          <target state="translated">Matches::rev</target>
        </trans-unit>
        <trans-unit id="e02709763e2207e61e4d933e858c99b7a28d8bcb" translate="yes" xml:space="preserve">
          <source>Matches::rfind</source>
          <target state="translated">Matches::rfind</target>
        </trans-unit>
        <trans-unit id="a9cc66b976865799bd4716ff397f93b4a843b5ae" translate="yes" xml:space="preserve">
          <source>Matches::rfold</source>
          <target state="translated">Matches::rfold</target>
        </trans-unit>
        <trans-unit id="04c297da099729a5b43001f9d0063ee6a901e844" translate="yes" xml:space="preserve">
          <source>Matches::rposition</source>
          <target state="translated">Matches::rposition</target>
        </trans-unit>
        <trans-unit id="91a658d8a0294b7bd18e5d0570dba1b46dc2ddb4" translate="yes" xml:space="preserve">
          <source>Matches::scan</source>
          <target state="translated">Matches::scan</target>
        </trans-unit>
        <trans-unit id="bff98e95d244b87dfd471f3aa1b0b9776052e73a" translate="yes" xml:space="preserve">
          <source>Matches::size_hint</source>
          <target state="translated">Matches::size_hint</target>
        </trans-unit>
        <trans-unit id="ea769d36db0ecdf9a449becbbea0e918770b1961" translate="yes" xml:space="preserve">
          <source>Matches::skip</source>
          <target state="translated">Matches::skip</target>
        </trans-unit>
        <trans-unit id="96627df75057a48d2e0d9c40c523b84e3b33c7af" translate="yes" xml:space="preserve">
          <source>Matches::skip_while</source>
          <target state="translated">Matches::skip_while</target>
        </trans-unit>
        <trans-unit id="4ca4138e4a3268a198c5cdc5a737a6380795549e" translate="yes" xml:space="preserve">
          <source>Matches::step_by</source>
          <target state="translated">Matches::step_by</target>
        </trans-unit>
        <trans-unit id="721b319e30617315060e55781f7380c841c6ace9" translate="yes" xml:space="preserve">
          <source>Matches::sum</source>
          <target state="translated">Matches::sum</target>
        </trans-unit>
        <trans-unit id="f9e758615e71ff38d6f7a5c65eecde2590e23098" translate="yes" xml:space="preserve">
          <source>Matches::take</source>
          <target state="translated">Matches::take</target>
        </trans-unit>
        <trans-unit id="af24995f9c4fd5dd2457e65743d9a60e9e9ffcde" translate="yes" xml:space="preserve">
          <source>Matches::take_while</source>
          <target state="translated">Matches::take_while</target>
        </trans-unit>
        <trans-unit id="1565bfd09bd2f23c0095b4606ab9e834a51712c8" translate="yes" xml:space="preserve">
          <source>Matches::to_owned</source>
          <target state="translated">Matches::to_owned</target>
        </trans-unit>
        <trans-unit id="50cf72084a8dfa7ad581505a5ddcd33faf655fa9" translate="yes" xml:space="preserve">
          <source>Matches::try_fold</source>
          <target state="translated">Matches::try_fold</target>
        </trans-unit>
        <trans-unit id="549e63df22456e9fa5caee460202dea317cd527f" translate="yes" xml:space="preserve">
          <source>Matches::try_for_each</source>
          <target state="translated">Matches::try_for_each</target>
        </trans-unit>
        <trans-unit id="91833652262591b5f00ea537d289de5b67c4c727" translate="yes" xml:space="preserve">
          <source>Matches::try_from</source>
          <target state="translated">Matches::try_from</target>
        </trans-unit>
        <trans-unit id="c0c530573a1f2dab2a0a124a457144714f1af70b" translate="yes" xml:space="preserve">
          <source>Matches::try_into</source>
          <target state="translated">Matches::try_into</target>
        </trans-unit>
        <trans-unit id="1d6807a096cceb3f086a98b72caed6864b350d48" translate="yes" xml:space="preserve">
          <source>Matches::try_rfold</source>
          <target state="translated">Matches::try_rfold</target>
        </trans-unit>
        <trans-unit id="4ed84d268d517902f1ee835907ba616731437e78" translate="yes" xml:space="preserve">
          <source>Matches::type_id</source>
          <target state="translated">Matches::type_id</target>
        </trans-unit>
        <trans-unit id="82df0ef498c0500087358c2ad708f2591ff13a74" translate="yes" xml:space="preserve">
          <source>Matches::unzip</source>
          <target state="translated">Matches::unzip</target>
        </trans-unit>
        <trans-unit id="4f51ed1bb8aedce5983b27a82ba200a62553b0de" translate="yes" xml:space="preserve">
          <source>Matches::zip</source>
          <target state="translated">Matches::zip</target>
        </trans-unit>
        <trans-unit id="50c7753425f81366ad955ad648ef1402bbd0bdcd" translate="yes" xml:space="preserve">
          <source>Matching Literals</source>
          <target state="translated">일치하는 리터럴</target>
        </trans-unit>
        <trans-unit id="a4b76dc421c21dad908aceac8ef24107ed076e94" translate="yes" xml:space="preserve">
          <source>Matching Named Variables</source>
          <target state="translated">명명 된 변수 일치</target>
        </trans-unit>
        <trans-unit id="116c1a129c8dd758e30ed686c4946011c26b8dc1" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</source>
          <target state="translated">값 범위 일치 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85dbe67c3ce6228be02004258ed55391b9cbf81e" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt;</source>
          <target state="translated">값 범위를 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt; 와 일치</target>
        </trans-unit>
        <trans-unit id="d07b8ccde1bae5f429be81f6528205564b8930b4" translate="yes" xml:space="preserve">
          <source>Matching on Different Errors</source>
          <target state="translated">다른 오류에 일치</target>
        </trans-unit>
        <trans-unit id="3ac1a688c9f9a53fc22834e447e836a1464d2897" translate="yes" xml:space="preserve">
          <source>Matching on unions</source>
          <target state="translated">유니온 매칭</target>
        </trans-unit>
        <trans-unit id="5c23b58f42105349394b72c44a9e0c8e30cfb1c7" translate="yes" xml:space="preserve">
          <source>Matching with &lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 와 일치</target>
        </trans-unit>
        <trans-unit id="6746eb65af6871e0e05e248c440e5aefea8b6fc2" translate="yes" xml:space="preserve">
          <source>Matching with the wrong number of fields has no sensible interpretation:</source>
          <target state="translated">잘못된 수의 필드와 일치하는 것은 현명한 해석이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e962ad60673258d2f89e18021a55117503f9d972" translate="yes" xml:space="preserve">
          <source>Mathematically significant numbers are provided in the &lt;code&gt;consts&lt;/code&gt; sub-module.</source>
          <target state="translated">수학적으로 중요한 숫자는 &lt;code&gt;consts&lt;/code&gt; 서브 모듈에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="24ecf2527de68fa30e51892809349a8c5974beff" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent.</source>
          <target state="translated">최대 지수 10의 거듭 제곱.</target>
        </trans-unit>
        <trans-unit id="9b80b0220e2a1cfba556bc68a3ae18dd04ca555f" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f32::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f32::MAX_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="14a9a3e421ae4adf1ac38d3d026e245423621fd6" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f64::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f64::MAX_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="86392c8e5a7e87515616425adb01dd9226d9dffe" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent.</source>
          <target state="translated">최대 2의 거듭 제곱</target>
        </trans-unit>
        <trans-unit id="9aa9636d9f2be0da47be065e0c7d353d7567c7eb" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f32::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f32::MAX_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b256bdd9a7e1cdc07523395c526401d41fbaa024" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f64::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f64::MAX_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="766be5e052191ff8eba5c2e3f2b1a1b838f4d50a" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using a signed comparison.</source>
          <target state="translated">부호있는 비교를 사용하는 현재 값의 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="9351d4078eb47c9b5544bef45a78aaa02d855e4e" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using an unsigned comparison.</source>
          <target state="translated">부호없는 비교를 사용하는 현재 값의 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="f7750430a3882e92eb8337af201fa180c2fbb566" translate="yes" xml:space="preserve">
          <source>Maximum with the current value.</source>
          <target state="translated">현재 값으로 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="f19c24c7e8b87604106489a66b28772b598f6b35" translate="yes" xml:space="preserve">
          <source>Maybe you just misspelled the lint name or the lint doesn't exist anymore. Either way, try to update/remove it in order to fix the error.</source>
          <target state="translated">아마 보풀 이름을 잘못 입력했거나 보푸라기가 더 이상 존재하지 않을 수 있습니다. 어느 쪽이든, 오류를 수정하려면 업데이트 / 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="22c5a738f61d1560d21875d83c8951314a7f1948" translate="yes" xml:space="preserve">
          <source>MaybeUninit</source>
          <target state="translated">MaybeUninit</target>
        </trans-unit>
        <trans-unit id="a44ab7dbe0cde09757fb1b4dd939c97aee493195" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_mut_ptr</source>
          <target state="translated">MaybeUninit::as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="2e8f9abe8f0c08c924ac4559ea36a2868edf193c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_ptr</source>
          <target state="translated">MaybeUninit::as_ptr</target>
        </trans-unit>
        <trans-unit id="e1dd151013280c4f30271f0f104514aec380c95c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::assume_init</source>
          <target state="translated">MaybeUninit::assume_init</target>
        </trans-unit>
        <trans-unit id="b1d1838a31c2c75fa59b89a7ab49435bba63a56d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow</source>
          <target state="translated">MaybeUninit::borrow</target>
        </trans-unit>
        <trans-unit id="a4bd23ea05be7819a23ca240934851baaf368f66" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow_mut</source>
          <target state="translated">MaybeUninit::borrow_mut</target>
        </trans-unit>
        <trans-unit id="00da197228ec4cbebb9a48bf7d0d5d3897d0f688" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone</source>
          <target state="translated">MaybeUninit::clone</target>
        </trans-unit>
        <trans-unit id="796164cb8ea5a1c4d0c3e89dc0dfc3140435eea9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_from</source>
          <target state="translated">MaybeUninit::clone_from</target>
        </trans-unit>
        <trans-unit id="19917792b095268faeb706604925e2b6e4601cdc" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_into</source>
          <target state="translated">MaybeUninit::clone_into</target>
        </trans-unit>
        <trans-unit id="6aaeccae7a8603cf84871ff7d9f6d72bbae00843" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr</source>
          <target state="translated">MaybeUninit::first_ptr</target>
        </trans-unit>
        <trans-unit id="b2731997cc044a29850216c34ed7b2af6f757272" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr_mut</source>
          <target state="translated">MaybeUninit::first_ptr_mut</target>
        </trans-unit>
        <trans-unit id="ee80e55e0462f555d62ecf479729778c2792940a" translate="yes" xml:space="preserve">
          <source>MaybeUninit::from</source>
          <target state="translated">MaybeUninit::from</target>
        </trans-unit>
        <trans-unit id="68ed3d2ac72b021d64280ccfce1d512f796b7866" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_mut</source>
          <target state="translated">MaybeUninit::get_mut</target>
        </trans-unit>
        <trans-unit id="f1a2a1267ae897ec9afd26b0801711626f42622c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_ref</source>
          <target state="translated">MaybeUninit::get_ref</target>
        </trans-unit>
        <trans-unit id="b7ce4c445d543adc399f6af5ed234119732fcd7d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::into</source>
          <target state="translated">MaybeUninit::into</target>
        </trans-unit>
        <trans-unit id="bdcb34ac76eeb0b6ab305cf39705377f28d916a3" translate="yes" xml:space="preserve">
          <source>MaybeUninit::new</source>
          <target state="translated">MaybeUninit::new</target>
        </trans-unit>
        <trans-unit id="7134280ee1359eff29bec32e4670d803b9181af9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::read</source>
          <target state="translated">MaybeUninit::read</target>
        </trans-unit>
        <trans-unit id="a887e0697a801d5760dd067e4907b33cac927028" translate="yes" xml:space="preserve">
          <source>MaybeUninit::to_owned</source>
          <target state="translated">MaybeUninit::to_owned</target>
        </trans-unit>
        <trans-unit id="7dc9f792640725a6cecb6f81a4e42e83461a6abe" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_from</source>
          <target state="translated">MaybeUninit::try_from</target>
        </trans-unit>
        <trans-unit id="8b12b56b9f617d5d7f3945aef0bc3328d56d0391" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_into</source>
          <target state="translated">MaybeUninit::try_into</target>
        </trans-unit>
        <trans-unit id="5e34c0cc0c05d1c11d92d758dfd9eb546ac718be" translate="yes" xml:space="preserve">
          <source>MaybeUninit::type_id</source>
          <target state="translated">MaybeUninit::type_id</target>
        </trans-unit>
        <trans-unit id="6d196fc5db7278a9d9758ce0ec7ef03ec5379e9c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::uninit</source>
          <target state="translated">MaybeUninit::uninit</target>
        </trans-unit>
        <trans-unit id="2f8fd2d121ed93f168b51c2d802af7d29e8bc671" translate="yes" xml:space="preserve">
          <source>MaybeUninit::write</source>
          <target state="translated">MaybeUninit::write</target>
        </trans-unit>
        <trans-unit id="be630dd4779c289571757af988e536f8c58f8978" translate="yes" xml:space="preserve">
          <source>MaybeUninit::zeroed</source>
          <target state="translated">MaybeUninit::zeroed</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="d880b0db33396f09e94ad458e37bf499710140d0" translate="yes" xml:space="preserve">
          <source>Member access</source>
          <target state="translated">회원 액세스</target>
        </trans-unit>
        <trans-unit id="711aeb171229297561befc7fcf7c64be1c7bad67" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items from their crates into scope.</source>
          <target state="translated">Rust 커뮤니티의 구성원은 &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; 에서 많은 패키지를 사용할 수 있도록 만들었으며 패키지 로 가져 오려면 패키지의 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일에 &lt;em&gt;나열&lt;/em&gt; 하고 사용하여 상자에서 항목을 범위로 가져 오는 데 사용 &lt;code&gt;use&lt;/code&gt; 것과 동일한 단계가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="146533db3fc38f7b706b77ba72e7df0357d2e39f" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items into scope.</source>
          <target state="translated">Rust 커뮤니티 회원은 &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; 에서 많은 패키지를 사용할 수있게 만들었으며 패키지에 패키지 를 가져 오려면 패키지의 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일에 패키지를 나열하고 항목을 범위로 가져 오는 데 사용 &lt;code&gt;use&lt;/code&gt; 것과 동일한 단계를 &lt;em&gt;거쳐야&lt;/em&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d6f4ca6e81d6132b393ed23c50a82522bb4eb19" translate="yes" xml:space="preserve">
          <source>Memory accesses will never be reordered across this barrier by the compiler, but no instructions will be emitted for it. This is appropriate for operations on the same thread that may be preempted, such as when interacting with signal handlers.</source>
          <target state="translated">메모리 액세스는 컴파일러에 의해이 장벽을 넘어서 다시 정렬되지는 않지만 이에 대한 명령어는 생성되지 않습니다. 이는 신호 처리기와 상호 작용할 때와 같이 선점 될 수있는 동일한 스레드에서의 작업에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="b6bee5018a7e72cff7d1df71077553bda7588c2a" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs</source>
          <target state="translated">메모리 할당 API</target>
        </trans-unit>
        <trans-unit id="cde66bb647521e32ce185032147ad253c9aee7da" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs.</source>
          <target state="translated">메모리 할당 API.</target>
        </trans-unit>
        <trans-unit id="9be755c16f3fbdbf43ec9463cafab25c253fea10" translate="yes" xml:space="preserve">
          <source>Memory allocation and lifetime</source>
          <target state="translated">메모리 할당 및 수명</target>
        </trans-unit>
        <trans-unit id="78f88c2700a9711b2514c20dff02f5f5982c250e" translate="yes" xml:space="preserve">
          <source>Memory and Allocation</source>
          <target state="translated">메모리 및 할당</target>
        </trans-unit>
        <trans-unit id="bf742dc53a39d7b88626c322f9ed405b349b0ec4" translate="yes" xml:space="preserve">
          <source>Memory blocks returned from an allocator must point to valid memory and retain their validity until the instance and all of its clones are dropped,</source>
          <target state="translated">할당 자에서 반환 된 메모리 블록은 유효한 메모리를 가리켜 야하며 인스턴스와 모든 복제본이 삭제 될 때까지 유효성을 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec9a362f08612fb77b9f0b713369a332f48651a9" translate="yes" xml:space="preserve">
          <source>Memory can be &quot;invalidated&quot; by deallocation, but also by replacing a &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; by &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or calling &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt;&lt;code&gt;Vec::set_len&lt;/code&gt;&lt;/a&gt; to &quot;kill&quot; some elements off of a vector. It can be repurposed by using &lt;a href=&quot;../ptr/fn.write&quot;&gt;&lt;code&gt;ptr::write&lt;/code&gt;&lt;/a&gt; to overwrite it without calling the destructor first. None of this is allowed for pinned data without calling &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리는 할당 해제에 의해 &quot;무효화&quot;될 수 있지만 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 으로 바꾸 거나 &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt; &lt;code&gt;Vec::set_len&lt;/code&gt; &lt;/a&gt; 을 호출 하여 벡터에서 일부 요소를 &quot;죽일&quot;수도 있습니다. &lt;a href=&quot;../ptr/fn.write&quot;&gt; &lt;code&gt;ptr::write&lt;/code&gt; &lt;/a&gt; 를 사용 하여 소멸자를 먼저 호출하지 않고 덮어 쓰는 방식 으로 용도를 변경할 수 있습니다 . &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 을 호출하지 않고 고정 된 데이터에는이 중 어느 것도 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6537b839fc70c4da7309dad24d6cd1a0b7bfff39" translate="yes" xml:space="preserve">
          <source>Memory fitting</source>
          <target state="translated">메모리 피팅</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="translated">메모리 레이아웃</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="translated">메모리 모델</target>
        </trans-unit>
        <trans-unit id="64f050cf8ce861fb451d8ebe7ed180d3e0b08ad3" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">메모리 순서는 원자 연산이 메모리를 동기화하는 방법을 지정합니다. 가장 약한 &lt;a href=&quot;#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 에서는 작업이 직접 터치 한 메모리 만 동기화됩니다. 반면, &lt;a href=&quot;#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; 작업 의 저장소로드 쌍은 다른 스레드를 동기화하면서 모든 스레드에서 이러한 작업의 총 순서를 추가로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="03e2538c8eaa31e61eba2183330660d56415ebcf" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">메모리 순서는 원자 적 작업이 메모리를 동기화하는 방식을 지정합니다. 가장 약한 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt; 에서는 작업에 의해 직접 접촉 된 메모리 만 동기화됩니다. 반면에 &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt; 작업 의 저장로드 쌍은 모든 스레드에서 이러한 작업의 전체 순서를 추가로 유지하면서 다른 메모리를 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="22c02bdcac42d16560e88c9cdab7cac8538ffbcb" translate="yes" xml:space="preserve">
          <source>Memory ownership</source>
          <target state="translated">메모리 소유권</target>
        </trans-unit>
        <trans-unit id="b70cefd0a9c3186fc3ad2fca9d8f59f0972163e5" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">메시지 전달은 동시성을 처리하는 좋은 방법이지만 유일한 방법은 아닙니다. Go 언어 문서의 슬로건 중이 부분을 다시 생각해보십시오.&amp;ldquo;메모리를 공유하여 의사 소통하십시오.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a03a90d59c75d716e1941e5fb5b8746472062e0e" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;do not communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">메시지 전달은 동시성을 처리하는 좋은 방법이지만 유일한 방법은 아닙니다. Go 언어 문서의 슬로건의이 부분을 다시 고려하십시오. &quot;메모리를 공유하여 통신하지 마십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="d47924059f378f859c3137ecc92f3018c8554c48" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 로이 채널을 통해 메시지를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d56b67df96e3223775707154a8618c734f2b8a7b" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt;&lt;code&gt;try_send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt; &lt;code&gt;try_send&lt;/code&gt; &lt;/a&gt; 와 함께이 채널을 통해 메시지를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5fc413e41d8882a3983a228d24cde55dfc6fca3" translate="yes" xml:space="preserve">
          <source>Messages sent to the channel can be retrieved using &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">채널로 전송 된 메시지는 &lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f57866593059968e971f86172293e7f4c20bbf7f" translate="yes" xml:space="preserve">
          <source>Meta Item Attribute Syntax</source>
          <target state="translated">메타 항목 속성 구문</target>
        </trans-unit>
        <trans-unit id="073695a20c371f27457f6aab051f26f7536b49bf" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. Each key may only be used once in each attribute.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 각 키는 각 속성에서 한 번만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da50cb07b82024b80368e7f1d0d9ee941c6a68a0" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. The keys provided must be one of the valid keys for the specified attribute.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 제공된 키는 지정된 속성에 유효한 키 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ded036d51fe4b3fb3eddc611d6778ba8e4dcef98" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix these issues you need to give required key-value pairs.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 이러한 문제를 해결하려면 필수 키-값 쌍을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="fda66a74788b36b4a9cc97c2d88181628e7d03cd" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix this issue, you need to give a value to the &lt;code&gt;note&lt;/code&gt; key. Example:</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 이 문제를 해결하려면 &lt;code&gt;note&lt;/code&gt; 키에 값을 제공해야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="6fbea655dc155b182628eb902f62724120a1efca" translate="yes" xml:space="preserve">
          <source>Metadata information about a file.</source>
          <target state="translated">파일에 대한 메타 데이터 정보.</target>
        </trans-unit>
        <trans-unit id="084830b6199879b13e88117f115361f568aadfed" translate="yes" xml:space="preserve">
          <source>Metadata::accessed</source>
          <target state="translated">Metadata::accessed</target>
        </trans-unit>
        <trans-unit id="ea03a6d8c078cad675d89ba6e750f9418bc0c495" translate="yes" xml:space="preserve">
          <source>Metadata::as_raw_stat</source>
          <target state="translated">Metadata::as_raw_stat</target>
        </trans-unit>
        <trans-unit id="c0545109dd814c2f2913abc28479e6d94ee0114d" translate="yes" xml:space="preserve">
          <source>Metadata::atime</source>
          <target state="translated">Metadata::atime</target>
        </trans-unit>
        <trans-unit id="50367585ad74ed80fa1cbe2b541c19bd0b2de90e" translate="yes" xml:space="preserve">
          <source>Metadata::atime_nsec</source>
          <target state="translated">Metadata::atime_nsec</target>
        </trans-unit>
        <trans-unit id="a680da2613a5aedd0f376ab10667b053d5d40a97" translate="yes" xml:space="preserve">
          <source>Metadata::blksize</source>
          <target state="translated">Metadata::blksize</target>
        </trans-unit>
        <trans-unit id="233007abda8ced2d64fc02c99f7a9b937493f947" translate="yes" xml:space="preserve">
          <source>Metadata::blocks</source>
          <target state="translated">Metadata::blocks</target>
        </trans-unit>
        <trans-unit id="0c9cb348d31160eb04b04dc9d0a8c9a6c7bb3082" translate="yes" xml:space="preserve">
          <source>Metadata::borrow</source>
          <target state="translated">Metadata::borrow</target>
        </trans-unit>
        <trans-unit id="fb7e7385698a1d59ac894814c418b5e972ac017f" translate="yes" xml:space="preserve">
          <source>Metadata::borrow_mut</source>
          <target state="translated">Metadata::borrow_mut</target>
        </trans-unit>
        <trans-unit id="81bdb5794047e85d36b507a5703800ac21e7b116" translate="yes" xml:space="preserve">
          <source>Metadata::clone</source>
          <target state="translated">Metadata::clone</target>
        </trans-unit>
        <trans-unit id="6063837d957ee30e1e495b46a1c85b6125b18ecc" translate="yes" xml:space="preserve">
          <source>Metadata::clone_from</source>
          <target state="translated">Metadata::clone_from</target>
        </trans-unit>
        <trans-unit id="9e01066e110fc02d3274390539e97c3ce87be38e" translate="yes" xml:space="preserve">
          <source>Metadata::clone_into</source>
          <target state="translated">Metadata::clone_into</target>
        </trans-unit>
        <trans-unit id="24bc22c259e7b47fee155cccf102870ea5319289" translate="yes" xml:space="preserve">
          <source>Metadata::created</source>
          <target state="translated">Metadata::created</target>
        </trans-unit>
        <trans-unit id="0a5fa59a9bdd4af484124f7b881a605786b1c5fc" translate="yes" xml:space="preserve">
          <source>Metadata::creation_time</source>
          <target state="translated">Metadata::creation_time</target>
        </trans-unit>
        <trans-unit id="eb8ad0815aeb8f84922c1ba42934ea060392d848" translate="yes" xml:space="preserve">
          <source>Metadata::ctime</source>
          <target state="translated">Metadata::ctime</target>
        </trans-unit>
        <trans-unit id="34107d78458895bc36cb2a586370e9a33f001d4e" translate="yes" xml:space="preserve">
          <source>Metadata::ctime_nsec</source>
          <target state="translated">Metadata::ctime_nsec</target>
        </trans-unit>
        <trans-unit id="4de93a5e1be0a62280e753f74aead534158e32fa" translate="yes" xml:space="preserve">
          <source>Metadata::dev</source>
          <target state="translated">Metadata::dev</target>
        </trans-unit>
        <trans-unit id="1ddf7b6dcaac670ecb58c655d7c29e7efcc7b976" translate="yes" xml:space="preserve">
          <source>Metadata::file_attributes</source>
          <target state="translated">Metadata::file_attributes</target>
        </trans-unit>
        <trans-unit id="d0242558abd414a74f34089244fa5d62391b4237" translate="yes" xml:space="preserve">
          <source>Metadata::file_size</source>
          <target state="translated">Metadata::file_size</target>
        </trans-unit>
        <trans-unit id="a80334eec47f4ec592f2356b1c15e66616fe6d79" translate="yes" xml:space="preserve">
          <source>Metadata::file_type</source>
          <target state="translated">Metadata::file_type</target>
        </trans-unit>
        <trans-unit id="8c5b2aa68de07863010f75c33869a67231d8a86c" translate="yes" xml:space="preserve">
          <source>Metadata::fmt</source>
          <target state="translated">Metadata::fmt</target>
        </trans-unit>
        <trans-unit id="22c4729ff6931a968eb928ba73151ec865e539bd" translate="yes" xml:space="preserve">
          <source>Metadata::from</source>
          <target state="translated">Metadata::from</target>
        </trans-unit>
        <trans-unit id="9aecb9b26fb5e2f5ecf3ae7fec8ad1913791d4fb" translate="yes" xml:space="preserve">
          <source>Metadata::gid</source>
          <target state="translated">Metadata::gid</target>
        </trans-unit>
        <trans-unit id="2dfe494860d779fdeab8e4a5d4ab49c9979a2c22" translate="yes" xml:space="preserve">
          <source>Metadata::ino</source>
          <target state="translated">Metadata::ino</target>
        </trans-unit>
        <trans-unit id="36d9dbdaea92dec9fd9a367943daf11c2968a4d9" translate="yes" xml:space="preserve">
          <source>Metadata::into</source>
          <target state="translated">Metadata::into</target>
        </trans-unit>
        <trans-unit id="29f1788d2917dee377c894e5f697e2f775dbe3c2" translate="yes" xml:space="preserve">
          <source>Metadata::is_dir</source>
          <target state="translated">Metadata::is_dir</target>
        </trans-unit>
        <trans-unit id="3aa539a19a6b3e2c584510ba64204dfdd9773023" translate="yes" xml:space="preserve">
          <source>Metadata::is_file</source>
          <target state="translated">Metadata::is_file</target>
        </trans-unit>
        <trans-unit id="afa64cd752db362df2a19d1dc5a178b5cc2f28bb" translate="yes" xml:space="preserve">
          <source>Metadata::last_access_time</source>
          <target state="translated">Metadata::last_access_time</target>
        </trans-unit>
        <trans-unit id="eaad95ea1d9df1f852c79a83a750592a287faefd" translate="yes" xml:space="preserve">
          <source>Metadata::last_write_time</source>
          <target state="translated">Metadata::last_write_time</target>
        </trans-unit>
        <trans-unit id="f9881c504082a9c98f72732ac253d46ddfcdd091" translate="yes" xml:space="preserve">
          <source>Metadata::len</source>
          <target state="translated">Metadata::len</target>
        </trans-unit>
        <trans-unit id="a1e80cdaa5a7c4b60866de711876b3a869fae063" translate="yes" xml:space="preserve">
          <source>Metadata::mode</source>
          <target state="translated">Metadata::mode</target>
        </trans-unit>
        <trans-unit id="7ccfeed6204cf299fd71093fa88a387e2f40cf29" translate="yes" xml:space="preserve">
          <source>Metadata::modified</source>
          <target state="translated">Metadata::modified</target>
        </trans-unit>
        <trans-unit id="fed36d469e25519f5d756495cbef355ed7e91ebc" translate="yes" xml:space="preserve">
          <source>Metadata::mtime</source>
          <target state="translated">Metadata::mtime</target>
        </trans-unit>
        <trans-unit id="f89d0ee281fc80e82b34a04d9ec5669992f853fe" translate="yes" xml:space="preserve">
          <source>Metadata::mtime_nsec</source>
          <target state="translated">Metadata::mtime_nsec</target>
        </trans-unit>
        <trans-unit id="7ea3185afb2cc66c1d1c43bb7e0c9431a71d5c0f" translate="yes" xml:space="preserve">
          <source>Metadata::nlink</source>
          <target state="translated">Metadata::nlink</target>
        </trans-unit>
        <trans-unit id="af6dc5bc6a15bc877f1b97832fdbaad7638e9e01" translate="yes" xml:space="preserve">
          <source>Metadata::permissions</source>
          <target state="translated">Metadata::permissions</target>
        </trans-unit>
        <trans-unit id="b8f0501a86acbf9b1c6ecec7d4736817cdf817cd" translate="yes" xml:space="preserve">
          <source>Metadata::rdev</source>
          <target state="translated">Metadata::rdev</target>
        </trans-unit>
        <trans-unit id="4d6596297451f34a3f748901f33eeaf5ca1ce581" translate="yes" xml:space="preserve">
          <source>Metadata::size</source>
          <target state="translated">Metadata::size</target>
        </trans-unit>
        <trans-unit id="e9067cb7fc933272c2ee73372bde8b5d793cec95" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime</source>
          <target state="translated">Metadata::st_atime</target>
        </trans-unit>
        <trans-unit id="340d2deeb996099feda8b2e71ceee4746a54e895" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime_nsec</source>
          <target state="translated">Metadata::st_atime_nsec</target>
        </trans-unit>
        <trans-unit id="0ae9039ec88beb8fc2f0f3bd1bb8ef8e5c525cab" translate="yes" xml:space="preserve">
          <source>Metadata::st_blksize</source>
          <target state="translated">Metadata::st_blksize</target>
        </trans-unit>
        <trans-unit id="a25bdcb2eb0e69a91b6e2eff09a462eca581884d" translate="yes" xml:space="preserve">
          <source>Metadata::st_blocks</source>
          <target state="translated">Metadata::st_blocks</target>
        </trans-unit>
        <trans-unit id="e8b580c6f030ddce2f3b41279b8814a4d974c39d" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime</source>
          <target state="translated">Metadata::st_ctime</target>
        </trans-unit>
        <trans-unit id="fdbb925376f8fb42348d70bd8f7efc024fe60076" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime_nsec</source>
          <target state="translated">Metadata::st_ctime_nsec</target>
        </trans-unit>
        <trans-unit id="b757b695e74311ba3c6e636e55b5ad9fdd73dd6b" translate="yes" xml:space="preserve">
          <source>Metadata::st_dev</source>
          <target state="translated">Metadata::st_dev</target>
        </trans-unit>
        <trans-unit id="6105b8b71960b47bdcdea43e0b8e7952849ef7c3" translate="yes" xml:space="preserve">
          <source>Metadata::st_gid</source>
          <target state="translated">Metadata::st_gid</target>
        </trans-unit>
        <trans-unit id="3db7b256e8dd1ff1c7ca3b4ec363649b620ce482" translate="yes" xml:space="preserve">
          <source>Metadata::st_ino</source>
          <target state="translated">Metadata::st_ino</target>
        </trans-unit>
        <trans-unit id="ccf6656b53d7732815f828000bde9df01154c5f7" translate="yes" xml:space="preserve">
          <source>Metadata::st_mode</source>
          <target state="translated">Metadata::st_mode</target>
        </trans-unit>
        <trans-unit id="a4761c3748e8e19cc614ab97572a55d03b74ded1" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime</source>
          <target state="translated">Metadata::st_mtime</target>
        </trans-unit>
        <trans-unit id="577eec1f21e7645e8b3ba3b96112265814eaab93" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime_nsec</source>
          <target state="translated">Metadata::st_mtime_nsec</target>
        </trans-unit>
        <trans-unit id="4af1b80839dea5a20a8f02919825911bfcfe6451" translate="yes" xml:space="preserve">
          <source>Metadata::st_nlink</source>
          <target state="translated">Metadata::st_nlink</target>
        </trans-unit>
        <trans-unit id="69d962fce72392be8edddc9a53681e0f08b9b69f" translate="yes" xml:space="preserve">
          <source>Metadata::st_rdev</source>
          <target state="translated">Metadata::st_rdev</target>
        </trans-unit>
        <trans-unit id="5faa5088298b4ae9ae7b08b3962a9a150635dfec" translate="yes" xml:space="preserve">
          <source>Metadata::st_size</source>
          <target state="translated">Metadata::st_size</target>
        </trans-unit>
        <trans-unit id="f4f89d23b5f0cd7c330566cf669e3a00205d72a7" translate="yes" xml:space="preserve">
          <source>Metadata::st_uid</source>
          <target state="translated">Metadata::st_uid</target>
        </trans-unit>
        <trans-unit id="1db7c9309be564ff6bf65531b173171534332f43" translate="yes" xml:space="preserve">
          <source>Metadata::to_owned</source>
          <target state="translated">Metadata::to_owned</target>
        </trans-unit>
        <trans-unit id="6732c96994bf6d2c0e20506c4bb4e662b9256862" translate="yes" xml:space="preserve">
          <source>Metadata::try_from</source>
          <target state="translated">Metadata::try_from</target>
        </trans-unit>
        <trans-unit id="73fe4168a94e1f02fc1b289a25908017bcf2159f" translate="yes" xml:space="preserve">
          <source>Metadata::try_into</source>
          <target state="translated">Metadata::try_into</target>
        </trans-unit>
        <trans-unit id="a718e80ede3faf1769107826f6fe239c5ded8be3" translate="yes" xml:space="preserve">
          <source>Metadata::type_id</source>
          <target state="translated">Metadata::type_id</target>
        </trans-unit>
        <trans-unit id="1d7387a664bb0cc1f5c78326600bd1342e97632f" translate="yes" xml:space="preserve">
          <source>Metadata::uid</source>
          <target state="translated">Metadata::uid</target>
        </trans-unit>
        <trans-unit id="1a9ddfb0caa33f4742d361d8a2f00bef568db02a" translate="yes" xml:space="preserve">
          <source>MetadataExt</source>
          <target state="translated">MetadataExt</target>
        </trans-unit>
        <trans-unit id="40b8dd00df3d6447af8e9e83e083a7745c1c189d" translate="yes" xml:space="preserve">
          <source>Metaprogramming is useful for reducing the amount of code you have to write and maintain, which is also one of the roles of functions. However, macros have some additional powers that functions don&amp;rsquo;t.</source>
          <target state="translated">메타 프로그래밍은 작성하고 유지 관리해야하는 코드의 양을 줄이는 데 유용하며 이는 기능의 역할 중 하나이기도합니다. 그러나 매크로에는 작동하지 않는 몇 가지 추가 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cbf3f8dcb1e2f43e65d88ac0f8a6b93a1658631" translate="yes" xml:space="preserve">
          <source>Metavariables</source>
          <target state="translated">Metavariables</target>
        </trans-unit>
        <trans-unit id="076edf57211eeac67aa1aad417b7d7a1ffc8d699" translate="yes" xml:space="preserve">
          <source>Method Syntax</source>
          <target state="translated">메소드 구문</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">메소드 호출</target>
        </trans-unit>
        <trans-unit id="db3e2af666e649fa244ecde8200f6f3e54c8deaf" translate="yes" xml:space="preserve">
          <source>Method has generic type parameters</source>
          <target state="translated">메소드에는 일반 유형 매개 변수가 있습니다</target>
        </trans-unit>
        <trans-unit id="9fe2b64db1642155c9d0f52ba05e45faefa0cb4b" translate="yes" xml:space="preserve">
          <source>Method has no receiver</source>
          <target state="translated">메소드에 수신자가 없습니다</target>
        </trans-unit>
        <trans-unit id="9fbefc33104f8433b35bf7c08d6416988a59e97a" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its arguments or return type</source>
          <target state="translated">메소드 는 인수 또는 리턴 유형에서 &lt;code&gt;Self&lt;/code&gt; 유형을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="2e20e820f64e959b3049d8c2e89b632aa89d87d7" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its parameters or return type</source>
          <target state="translated">메서드 는 매개 변수 또는 반환 유형에서 &lt;code&gt;Self&lt;/code&gt; 유형을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="4caa5dd0258db2dcd504dc2546dbae39450d3d76" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items.</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="0bfbad119f3cf91e8a3caba0dfc0e91aabd256df" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49c93b99f5d6fa2929221bf68c97c440d6e08d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea69507e1801650f83f78a153ac7b6a2ad0138d3" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items.</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="73a5734b7c8ee797666395ff82c8551e1baecbfd" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05e078fee77d9f52059120342f63434db6b130d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92d08f589c40b54496b3a1fbc8d96e770e0ced7" translate="yes" xml:space="preserve">
          <source>Method-call expressions</source>
          <target state="translated">메소드 호출 표현식</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="ee8ca348ec57b6e6b019969d4eed66807417ce83" translate="yes" xml:space="preserve">
          <source>Methods can be chained on it in order to configure it.</source>
          <target state="translated">구성하기 위해 메소드를 체인화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b021a05f7c2a7c30d999e3a3dbfdfbb325ce5b50" translate="yes" xml:space="preserve">
          <source>Methods for Iterating Over Strings</source>
          <target state="translated">문자열을 반복하는 방법</target>
        </trans-unit>
        <trans-unit id="00dd2d8a3c6af309cfff5d80bf81a66f5911b4af" translate="yes" xml:space="preserve">
          <source>Methods for string slices.</source>
          <target state="translated">문자열 슬라이스 방법.</target>
        </trans-unit>
        <trans-unit id="c07aa4ee0c7df87d7696c4013a8c13bb9865c6c1" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = CStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = CStr&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="52ba76ad3be01e9c1922f800d6dd033b03df424a" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = OsStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = OsStr&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="2c4d2afb0c4f85edb3758b4b74f07ed37559c41d" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = Path&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = Path&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="4fe785a58d64e13b3eb4b5b3048abd19034b85d5" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = VaListImpl&amp;lt;'f&amp;gt;&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = VaListImpl &amp;lt; 'f &amp;gt;&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="886ed7558512e092a63227354a168c0f7c713bf8" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [T]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [T]&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="aeaea61088adeb05abf57ffbd37dfaa9942f2c9c" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [u8]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [u8]&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="2d000ac3199600cab3d62328aab7e663fe156377" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = str&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = str&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="15acf73029decb61b9edc8c57e095d1568d02f80" translate="yes" xml:space="preserve">
          <source>Methods take a special first parameter, of which there are three variants: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, and &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. These are syntactic sugar for &lt;code&gt;self: Self&lt;/code&gt;, &lt;code&gt;self: &amp;amp;Self&lt;/code&gt;, and &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; respectively.</source>
          <target state="translated">메소드는 특별한 첫 번째 매개 변수를 취하며, 그중 &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;&amp;amp;self&lt;/code&gt; 및 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 세 가지 변형이 있습니다 . &lt;code&gt;self: Self&lt;/code&gt; , &lt;code&gt;self: &amp;amp;Self&lt;/code&gt; 및 &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; 대한 구문 설탕입니다 .</target>
        </trans-unit>
        <trans-unit id="fe4104ca2fabda0b7616f0224304804e72d4ac2a" translate="yes" xml:space="preserve">
          <source>Methods that Consume the Iterator</source>
          <target state="translated">반복자를 소비하는 메소드</target>
        </trans-unit>
        <trans-unit id="043d81030ec2d2447aaee9862fecf17f9a5197d0" translate="yes" xml:space="preserve">
          <source>Methods that Produce Other Iterators</source>
          <target state="translated">다른 반복자를 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="679313b3ec5d9213f11610dd488f1716be31fd55" translate="yes" xml:space="preserve">
          <source>Methods that call &lt;code&gt;next&lt;/code&gt; are called &lt;em&gt;consuming adaptors&lt;/em&gt;, because calling them uses up the iterator. One example is the &lt;code&gt;sum&lt;/code&gt; method, which takes ownership of the iterator and iterates through the items by repeatedly calling &lt;code&gt;next&lt;/code&gt;, thus consuming the iterator. As it iterates through, it adds each item to a running total and returns the total when iteration is complete. Listing 13-16 has a test illustrating a use of the &lt;code&gt;sum&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 에 호출 &lt;em&gt;하는&lt;/em&gt; 메소드를 호출 &lt;em&gt;어댑터&lt;/em&gt; 라고 합니다. 호출하면 이터레이터가 사용되기 때문입니다. 한 가지 예는 &lt;code&gt;sum&lt;/code&gt; 메소드입니다.이 메소드는 반복자의 소유권을 가져오고 &lt;code&gt;next&lt;/code&gt; 를 반복적으로 호출하여 항목을 반복 하여 반복자를 소비합니다. 반복 될 때 각 항목을 누적 합계에 추가하고 반복이 완료되면 합계를 반환합니다. Listing 13-16에는 &lt;code&gt;sum&lt;/code&gt; 메소드 사용을 보여주는 테스트가있다 .</target>
        </trans-unit>
        <trans-unit id="3ee9e7dcc3b812dd7c3d130ea59dea4e2ffafdfc" translate="yes" xml:space="preserve">
          <source>Methods that do not take a &lt;code&gt;self&lt;/code&gt; parameter can't be called since there won't be a way to get a pointer to the method table for them.</source>
          <target state="translated">테이크하지 않는 방법 &lt;code&gt;self&lt;/code&gt; 그 방법 테이블에 대한 포인터를 얻을 수있는 방법이 없을 것이기 때문에 매개 변수는 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ae3a1f0113af9f3ea9e116941ce0ea3243f869f0" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt;, and return properties of a type, like &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt;&lt;code&gt;size_of()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt; 와 같은 인수를받지 않고 &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt; &lt;code&gt;size_of()&lt;/code&gt; &lt;/a&gt; 와 같은 유형의 속성을 반환하는 메서드</target>
        </trans-unit>
        <trans-unit id="f508ce51136df60a01c2c9efd3801fc4a432141c" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;code&gt;default()&lt;/code&gt;, and return properties of a type, like &lt;code&gt;size_of()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default()&lt;/code&gt; 와 같은 인수를 취하지 않고 &lt;code&gt;size_of()&lt;/code&gt; 와 같은 유형의 속성을 반환하는 메서드</target>
        </trans-unit>
        <trans-unit id="511541816029367d0abeb46600cba6c7968497a0" translate="yes" xml:space="preserve">
          <source>Methods with More Parameters</source>
          <target state="translated">더 많은 매개 변수를 가진 메소드</target>
        </trans-unit>
        <trans-unit id="802461e6fd7e65d5e9a22bd62f94115d8960193a" translate="yes" xml:space="preserve">
          <source>Micro (or Update) version.</source>
          <target state="translated">마이크로 (또는 업데이트) 버전.</target>
        </trans-unit>
        <trans-unit id="1d43f011780167b829f8c795b301b234700476ad" translate="yes" xml:space="preserve">
          <source>Might panic if the index of the element overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">요소의 인덱스가 &lt;code&gt;usize&lt;/code&gt; 오버플로하면 패닉이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb10d4d5a8dbd1865d2894f56f1c7c91d1e068f" translate="yes" xml:space="preserve">
          <source>Migrating to &lt;code&gt;compare_exchange&lt;/code&gt; and &lt;code&gt;compare_exchange_weak&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;compare_exchange&lt;/code&gt; 및 &lt;code&gt;compare_exchange_weak&lt;/code&gt; 으로 마이그레이션</target>
        </trans-unit>
        <trans-unit id="779f4caecdf181b1f5c98a94586ba57d3d722311" translate="yes" xml:space="preserve">
          <source>Min-heap</source>
          <target state="translated">Min-heap</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="9686035ca169e7d2c603263a9dbe434de5abc91a" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent.</source>
          <target state="translated">10 지수의 최소 가능 정규 출력.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
