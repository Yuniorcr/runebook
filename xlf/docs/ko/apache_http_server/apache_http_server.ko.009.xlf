<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="8756a987e4626cbc150ea90cde893c53ad4cc39d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxThreads&lt;/code&gt; directive sets the desired maximum number worker threads allowable. The default value is also the compiled in hard limit. Therefore it can only be lowered, for example:</source>
          <target state="translated">&lt;code&gt;MaxThreads&lt;/code&gt; 지시어 세트는 원하는 최대 수의 작업자 스레드로 허용. 기본값은 하드 제한으로 컴파일됩니다. 따라서 다음과 같이 낮출 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd6d119b3a51a6f6abe14d4bbff1d67e47275c10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MimeMagicFile&lt;/code&gt; directive can be used to enable this module, the default file is distributed at &lt;code&gt;conf/magic&lt;/code&gt;. Non-rooted paths are relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. Virtual hosts will use the same file as the main server unless a more specific setting is used, in which case the more specific setting overrides the main server's file.</source>
          <target state="translated">&lt;code&gt;MimeMagicFile&lt;/code&gt; 의 지시어는이 모듈을 활성화하는 데 사용할 수있는 기본 파일로 배포됩니다 &lt;code&gt;conf/magic&lt;/code&gt; . 루트가 아닌 경로는 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 와 관련이 있습니다. 보다 구체적인 설정을 사용하지 않는 한 가상 호스트는 주 서버와 동일한 파일을 사용합니다.이 경우 더 구체적인 설정이 주 서버의 파일보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="37a63ef02527eb11f7ba2607d3309dc21ca0e8b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MinSpareServers&lt;/code&gt; directive sets the desired minimum number of &lt;em&gt;idle&lt;/em&gt; child server processes. An idle process is one which is not handling a request. If there are fewer than &lt;code&gt;MinSpareServers&lt;/code&gt; idle, then the parent process creates new children: It will spawn one, wait a second, then spawn two, wait a second, then spawn four, and it will continue exponentially until it is spawning 32 children per second. It will stop whenever it satisfies the &lt;code&gt;MinSpareServers&lt;/code&gt; setting.</source>
          <target state="translated">&lt;code&gt;MinSpareServers&lt;/code&gt; 설정을 원하는 최소 번호 지시어 &lt;em&gt;유휴&lt;/em&gt; 자식 서버 프로세스를. 유휴 프로세스는 요청을 처리하지 않는 프로세스입니다. 유휴 &lt;code&gt;MinSpareServers&lt;/code&gt; 보다 적은 수 의 부모 프로세스는 새로운 자식을 생성합니다. 하나의 자식을 생성하고, 1 초간 기다린 후 2 개를 생성하고, 1 초간 기다린 다음, 4 개를 생성하며, 초당 32 개의 자식을 생성 할 때까지 기하 급수적으로 계속됩니다 . &lt;code&gt;MinSpareServers&lt;/code&gt; 설정을 만족할 때마다 중지됩니다 .</target>
        </trans-unit>
        <trans-unit id="a39d9126c94dbac6b8178b32fe80bb04df2be254" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; directive is used to combine the filename with the &lt;code&gt;path_info&lt;/code&gt; URL component to apply &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt;'s directives to the request. The default value is &lt;code&gt;Off&lt;/code&gt; - therefore, the &lt;code&gt;path_info&lt;/code&gt; component is ignored.</source>
          <target state="translated">&lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; 의 지시어는와 파일 이름을 결합하는 데 사용됩니다 &lt;code&gt;path_info&lt;/code&gt; 적용 할 URL 구성 요소를 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; 이 요청에의 지시를. 기본값은 &lt;code&gt;Off&lt;/code&gt; . 따라서 &lt;code&gt;path_info&lt;/code&gt; 구성 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a242de3e43bd169a351b111ef9110c5d893663cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive can be used to change the underlying implementation used for mutexes, in order to relieve functional or performance problems with &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;'s default choice.</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; 지시어와 기능이나 성능 문제를 완화하기 위해, 뮤텍스에 사용되는 기본이되는 구현을 변경하는 데 사용할 수 있습니다 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;4월&lt;/a&gt; 의 기본 선택합니다.</target>
        </trans-unit>
        <trans-unit id="df8b98e4bb74d6c8ceef3f4e236769ff929b7720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive is typically used in the following exceptional situations:</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; 지침은 일반적으로 다음과 같은 예외적 인 상황에서 사용된다 :</target>
        </trans-unit>
        <trans-unit id="855ba960702ac258fb09fad1f9a712de86e138e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive sets the mechanism, and optionally the lock file location, that httpd and modules use to serialize access to resources. Specify &lt;code&gt;default&lt;/code&gt; as the second argument to change the settings for all mutexes; specify a mutex name (see table below) as the second argument to override defaults only for that mutex.</source>
          <target state="translated">&lt;code&gt;Mutex&lt;/code&gt; 지시어는 아파치와 모듈 자원에 대한 직렬화 액세스에 사용하는 것이, 메커니즘, 선택적으로 잠금 파일 위치를 설정합니다. 모든 뮤텍스의 설정을 변경하려면 &lt;code&gt;default&lt;/code&gt; 를 두 번째 인수로 지정 하십시오. 뮤텍스 이름 (아래 표 참조)을 두 번째 인수로 지정하여 해당 뮤텍스에 대해서만 기본값을 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="b8a82757b936b82a2fb81837eacdd53a7d36d784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameWidth&lt;/code&gt; keyword allows you to specify the width of the filename column in bytes.</source>
          <target state="translated">&lt;code&gt;NameWidth&lt;/code&gt; 의 키워드는 바이트 단위로 파일명 열의 폭을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf652253d2658dc6dd02d33373dbf346ecd67732" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NegotiatedOnly&lt;/code&gt; option provides that every extension following the base name must correlate to a recognized &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; extension for content negotiation, &lt;em&gt;e.g.&lt;/em&gt; Charset, Content-Type, Language, or Encoding. This is the strictest implementation with the fewest unexpected side effects, and is the default behavior.</source>
          <target state="translated">&lt;code&gt;NegotiatedOnly&lt;/code&gt; 의 옵션은 기본 이름을 다음 모든 확장자는 인식에 상관 관계가 있어야합니다 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; 이의 내용 협상에 대한 확장, &lt;em&gt;예를 들어&lt;/em&gt; 캐릭터 세트, 콘텐츠 형식, 언어 또는 인코딩. 이것은 예상치 못한 부작용이 가장 적은 가장 엄격한 구현이며 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="52c9993765ba5c194ab54d2997f26f486ae5425d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Off&lt;/code&gt; setting, which is the default, suppresses the footer line (and is therefore compatible with the behavior of Apache-1.2 and below). The &lt;code&gt;On&lt;/code&gt; setting simply adds a line with the server version number and &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the serving virtual host, and the &lt;code&gt;EMail&lt;/code&gt; setting additionally creates a &quot;mailto:&quot; reference to the &lt;code&gt;&lt;a href=&quot;#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; of the referenced document.</source>
          <target state="translated">&lt;code&gt;Off&lt;/code&gt; 기본값 설정, 바닥 글 행을 억제 (따라서 아래의 아파치 1.2의 동작과 호환됩니다). &lt;code&gt;On&lt;/code&gt; 간단하게 설정을 서버 버전 번호와 함께 추가 광고 &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 서빙 가상 호스트를 상기 &lt;code&gt;EMail&lt;/code&gt; 별도로 설정은 &quot;MAILTO :&quot;만드는 참조 &lt;code&gt;&lt;a href=&quot;#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; 참조 문서를.</target>
        </trans-unit>
        <trans-unit id="58b2be23f10b16e376a727a7d3c19c27b51c0641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OmitPID&lt;/code&gt; keyword suppresses the addition of the httpd parent process id from the lock file name.</source>
          <target state="translated">&lt;code&gt;OmitPID&lt;/code&gt; 키워드 억압 잠금 파일 이름에서 아파치의 부모 프로세스 ID의 추가.</target>
        </trans-unit>
        <trans-unit id="469b774a02b89cab7e30f3a204c7b32e7dd8bd2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Options&lt;/code&gt; directive controls which server features are available in a particular directory.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; 서버 기능이 특정 디렉토리에서 사용할 수있는 지시어를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="f5c740835079b24daee0cfc6b038cae6ce5fd04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive controls the order of access directive processing only within each phase of the server's configuration processing. This implies, for example, that an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section will always be evaluated after an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section or &lt;code&gt;.htaccess&lt;/code&gt; file, regardless of the setting of the &lt;code&gt;Order&lt;/code&gt; directive. For details on the merging of configuration sections, see the documentation on &lt;a href=&quot;../sections&quot;&gt;How Directory, Location and Files sections work&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; 지시어 제어 서버의 구성 처리의 각 단계 내에서만 처리 엑세스 지시의 순서. 이것은 그 예를 들어, 의미 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시어 A의 발생 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 항상이 후 평가됩니다 섹션을 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 하거나 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시어 A의 발생 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 또는 &lt;code&gt;.htaccess&lt;/code&gt; 에 관계없이의 설정, 파일을 &lt;code&gt;Order&lt;/code&gt; 지시어. 구성 섹션 병합에 대한 자세한 내용은 &lt;a href=&quot;../sections&quot;&gt;디렉토리, 위치 및 파일 섹션 작동 방법에&lt;/a&gt; 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="207bc357beb72a07c77745f5ab04464adf46ad23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive, along with the &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, controls a three-pass access control system. The first pass processes either all &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or all &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, as specified by the &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directive. The second pass parses the rest of the directives (&lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;). The third pass applies to all requests which do not match either of the first two.</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; 지시어는 함께 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시어는 3 패스 액세스 제어 시스템을 제어합니다. 첫 번째 단계 는 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 지시문에 지정된대로 모든 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 또는 All &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시문을 처리합니다 . 두 번째 패스는 나머지 지시문 ( &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; )을 구문 분석합니다 . 세 번째 단계는 처음 두 가지 중 하나와 일치하지 않는 모든 요청에 ​​적용됩니다.</target>
        </trans-unit>
        <trans-unit id="48927642bad1dbcb462ae859bef010c13854f2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OutputSed&lt;/code&gt; directive specifies the &lt;code&gt;sed&lt;/code&gt; command to execute on the response.</source>
          <target state="translated">는 &lt;code&gt;OutputSed&lt;/code&gt; 지정 지정 께 &lt;code&gt;sed&lt;/code&gt; 응답 실행 시키도록 명령한다.</target>
        </trans-unit>
        <trans-unit id="94c2978780147c4c5795aee4fb3e08caa7fd6f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PT&lt;/code&gt; flag implies the &lt;code&gt;L&lt;/code&gt; flag: rewriting will be stopped in order to pass the request to the next phase of processing.</source>
          <target state="translated">&lt;code&gt;PT&lt;/code&gt; 의 플래그는 암시 &lt;code&gt;L&lt;/code&gt; 의 플래그 : 처리의 다음 단계로 요청을 전달하기 위해 중단 될 재기록.</target>
        </trans-unit>
        <trans-unit id="a0ff01d8e7ff8ac6f2fa074f205ba57883b34783" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PeerExtList(&lt;em&gt;object-ID&lt;/em&gt;)&lt;/code&gt; function expects to find zero or more instances of the X.509 certificate extension identified by the given &lt;em&gt;object ID&lt;/em&gt; (OID) in the client certificate. The expression evaluates to true if the left-hand side string matches exactly against the value of an extension identified with this OID. (If multiple extensions with the same OID are present, at least one extension must match).</source>
          <target state="translated">&lt;code&gt;PeerExtList(&lt;em&gt;object-ID&lt;/em&gt;)&lt;/code&gt; 기능이 기대는 주어진에 의해 식별되는 X.509 인증서 확장의 0 개 이상의 인스턴스 찾을 &lt;em&gt;개체 ID&lt;/em&gt; 클라이언트 인증서 (OID)를. 왼쪽 문자열이이 OID로 식별 된 확장의 값과 정확히 일치하면 표현식은 true로 평가됩니다. 동일한 OID를 가진 여러 개의 내선이있는 경우 하나 이상의 내선이 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddd965d7691e70338d0469f9a3625debed77cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; directive sets the file to which the server records the process id of the daemon. If the filename is not absolute then it is assumed to be relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PidFile&lt;/code&gt; 의 지시어는 서버가 데몬의 프로세스 ID를 기록하는에 파일을 설정합니다. 파일 이름이 절대적이지 않으면 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="76e7b1a8f3e7d0d92481816fc797a410cebd477a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; is subject to the same warnings about log file placement and &lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;security&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PidFile&lt;/code&gt; 는 로그 파일 위치와 거의 같은 경고의 적용을받습니다 &lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;보안&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de06118d58b504228b24c69c4f2a18979f822cc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreservesContentLength&lt;/code&gt; keyword specifies that the filter preserves the content length. This is not the default, as most filters change the content length. In the event that the filter doesn't modify the length, this keyword should be specified.</source>
          <target state="translated">&lt;code&gt;PreservesContentLength&lt;/code&gt; 필터가 내용 길이를 유지하는 것이 키워드 지정합니다. 대부분의 필터가 내용 길이를 변경하기 때문에 이것이 기본값이 아닙니다. 필터가 길이를 수정하지 않으면이 키워드를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6baacdfe63b6eb368df66a9386a7d5d560891d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrivilegesMode&lt;/code&gt; directive allows you to select either &lt;var&gt;FAST&lt;/var&gt; or &lt;var&gt;SECURE&lt;/var&gt; mode. You can mix modes, using &lt;var&gt;FAST&lt;/var&gt; mode for trusted users and fully-audited code paths, while imposing SECURE mode where an untrusted user has scope to introduce code.</source>
          <target state="translated">&lt;code&gt;PrivilegesMode&lt;/code&gt; 의 지시자는 당신이 중 하나를 선택할 수 있습니다 &lt;var&gt;FAST&lt;/var&gt; 또는 &lt;var&gt;SECURE&lt;/var&gt; 모드. 신뢰할 수없는 사용자와 완전 감사 된 코드 경로에 &lt;var&gt;FAST&lt;/var&gt; 모드를 사용하여 모드를 혼합 할 수 있으며, 신뢰할 수없는 사용자가 코드를 도입 할 범위가있는 SECURE 모드를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1527722f657eab31d1b2106ccc0badb4ec20789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProtocolEcho&lt;/code&gt; directive enables or disables the echo server.</source>
          <target state="translated">&lt;code&gt;ProtocolEcho&lt;/code&gt; 의 지시어는 활성화 또는 에코 서버를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4045ad0738598223f1baf290cc56f16213c2475b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBadHeader&lt;/code&gt; directive determines the behavior of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; if it receives syntactically invalid response header lines (&lt;em&gt;i.e.&lt;/em&gt; containing no colon) from the origin server. The following arguments are possible:</source>
          <target state="translated">&lt;code&gt;ProxyBadHeader&lt;/code&gt; 의 지시자의 동작 판정 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 를가 그것이 잘못된 구문 응답 헤더 라인을 수신하는 경우 ( &lt;em&gt;즉,&lt;/em&gt; 원 서버로부터 대장을 포함하지 않음). 다음과 같은 인수가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="978f50a7a4d11fa6ec90c37f8fd99f34f41c888f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBlock&lt;/code&gt; directive specifies a list of words, hosts and/or domains, separated by spaces. HTTP, HTTPS, and FTP document requests to sites whose names contain matched words, hosts or domains are &lt;em&gt;blocked&lt;/em&gt; by the proxy server. The proxy module will also attempt to determine IP addresses of list items which may be hostnames during startup, and cache them for match test as well. That may slow down the startup time of the server.</source>
          <target state="translated">&lt;code&gt;ProxyBlock&lt;/code&gt; 의 지시자는 공백으로 구분 즉, 호스트 및 / 또는 도메인의리스트를 지정한다. 이름에 일치하는 단어, 호스트 또는 도메인이 포함 된 사이트에 대한 HTTP, HTTPS 및 FTP 문서 요청 은 프록시 서버에 의해 &lt;em&gt;차단&lt;/em&gt; 됩니다. 또한 프록시 모듈은 시작 중에 호스트 이름 일 수있는 목록 항목의 IP 주소를 판별하고 일치 테스트를 위해이를 캐시합니다. 서버 시작 시간이 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bd6cb629e4911e631c6079eb55a93088666f26f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMFile&lt;/code&gt; directive points to the location of the Express map DBM file. This file serves to map the incoming server name, obtained from the Host: header, to a backend URL.</source>
          <target state="translated">&lt;code&gt;ProxyExpressDBMFile&lt;/code&gt; 의 익스프레스 맵 DBM 파일의 위치에 대한 지시를 가리 킵니다. 이 파일은 Host : 헤더에서 얻은 수신 서버 이름을 백엔드 URL에 맵핑하는 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="df4a3563619867849bac584e307099d96cefe2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMType&lt;/code&gt; directive controls the DBM type expected by the module. The default is the default DBM type created with &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyExpressDBMType&lt;/code&gt; 의 지시어는 모듈에 의해 예상되는 DBM 유형을 제어합니다. 기본값은 &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; 으로 작성된 기본 DBM 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="92eb7ee34a93af990ddb39d906088f81afd5aa79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressEnable&lt;/code&gt; directive controls whether the module will be active.</source>
          <target state="translated">&lt;code&gt;ProxyExpressEnable&lt;/code&gt; 지시어 컨트롤 모듈이 활성화할지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="446053fbb2d7ac3ddbdf68da7e1968d31ed35b5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpDirCharset&lt;/code&gt; directive defines the character set to be set for FTP directory listings in HTML generated by &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyFtpDirCharset&lt;/code&gt; 의 지시에 의해 생성 된 HTML에서 FTP의 디렉토리 목록을 설정할 수있는 문자 집합 정의 &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="6ce78758313c9b35047cac1c0ee77244969e2a65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpEscapeWildcards&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames are escaped with backslash before sending them to the FTP server. That is the default behavior, but many FTP servers don't know about the escaping and try to serve the literal filenames they were sent, including the backslashes in the names.</source>
          <target state="translated">&lt;code&gt;ProxyFtpEscapeWildcards&lt;/code&gt; 지시 여부를 제어 와일드 카드 문자 ( &quot;*? [{~&quot;) 요청 파일 이름은 FTP 서버로 보내기 전에 백 슬래시로 이스케이프됩니다에. 이것이 기본 동작이지만 많은 FTP 서버는 이스케이프에 대해 알지 못하고 이름에 백 슬래시를 포함하여 전송 된 리터럴 파일 이름을 제공하려고합니다.</target>
        </trans-unit>
        <trans-unit id="aa80f7a5601790221401e6771c57ddc89a5c598e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpListOnWildcard&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames cause &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; to return a listing of files instead of downloading a file. By default (value on), they do.</source>
          <target state="translated">&lt;code&gt;ProxyFtpListOnWildcard&lt;/code&gt; 의 와일드 카드 문자 ( &quot;*? [{~&quot;) 원인 요청 파일 이름의 여부를 지시 컨트롤 &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; 파일의 목록 대신 파일을 다운로드를 돌아갑니다. 기본적으로 (값 설정) 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d810ef116b0d8d9ad66887ba204114c4c98dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCExpr&lt;/code&gt; directive allows for creating a named condition expression that checks the response headers of the backend server to determine its health. This named condition can then be assigned to balancer members via the &lt;code&gt;hcexpr&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;ProxyHCExpr&lt;/code&gt; 의 지시는 백엔드 서버의 응답 헤더의 상태를 확인하기 위해 검사하는 이름 조건 식을 만들 수 있습니다. 이 명명 된 조건은 &lt;code&gt;hcexpr&lt;/code&gt; 매개 변수 를 통해 밸런서 멤버에 할당 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ce318cb530bc0f759078bf0660069da794da5b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCTemplate&lt;/code&gt; directive allows for creating a named set (template) of health check parameters that can then be assigned to balancer members via the &lt;code&gt;hctemplate&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;ProxyHCTemplate&lt;/code&gt; 의 지침은 다음을 통해 균형 회원에 할당 할 수있는 상태 점검 매개 변수의 명명 된 집합 (템플릿) 생성을 허용 &lt;code&gt;hctemplate&lt;/code&gt; 의 매개 변수를.</target>
        </trans-unit>
        <trans-unit id="b33a2b8a7be08fcbaf30aeb0d102ca567ff4c2e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyIOBufferSize&lt;/code&gt; directive adjusts the size of the internal buffer which is used as a scratchpad for the data between input and output. The size must be at least &lt;code&gt;512&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProxyIOBufferSize&lt;/code&gt; 의 지시는 입력과 출력 사이의 데이터의 스크래치 패드로서 사용하는 내부 버퍼의 크기를 조절한다. 크기는 &lt;code&gt;512&lt;/code&gt; 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e185b02916358aeff4d52556a1d270bd9f7cd480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyMaxForwards&lt;/code&gt; directive specifies the maximum number of proxies through which a request may pass if there's no &lt;code&gt;Max-Forwards&lt;/code&gt; header supplied with the request. This may be set to prevent infinite proxy loops or a DoS attack.</source>
          <target state="translated">&lt;code&gt;ProxyMaxForwards&lt;/code&gt; 결코 존재하지 않는 경우는 지정 지정 프록시의 최대 번호 통해 요청이 전달있다 &lt;code&gt;Max-Forwards&lt;/code&gt; 헤더 요청과 함께 공급된다. 이는 무한 프록시 루프 또는 DoS 공격을 방지하도록 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="146b8f5c5b583a1efc65e9fa44b07bbf6178f8a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; directive specifies an explicit (TCP/IP) network buffer size for proxied HTTP and FTP connections, for increased throughput. It has to be greater than &lt;code&gt;512&lt;/code&gt; or set to &lt;code&gt;0&lt;/code&gt; to indicate that the system's default buffer size should be used.</source>
          <target state="translated">&lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; 지시어를 지정 처리량 증대를위한 프록시 HTTP 및 FTP 연결에 대한 명시 적 (TCP / IP) 네트워크 버퍼 크기. 시스템의 기본 버퍼 크기를 사용해야 함을 나타내 려면 &lt;code&gt;512&lt;/code&gt; 보다 크 거나 &lt;code&gt;0&lt;/code&gt; 으로 설정 해야합니다.</target>
        </trans-unit>
        <trans-unit id="edb4e4ae64a5d1c78dfd7ed938a960715054ca65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyRemoteMatch&lt;/code&gt; is identical to the &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; directive, except that the first argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; match against the requested URL.</source>
          <target state="translated">&lt;code&gt;ProxyRemoteMatch&lt;/code&gt; 는 받는 사람과 동일 &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; 의 첫 번째 인수는 점을 제외, 지시어 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규 표현식&lt;/a&gt; 요청 된 URL에 대한 일치합니다.</target>
        </trans-unit>
        <trans-unit id="aa084d8828ecacafedd572f431e2fb8ab5a2f6cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGIInternalRedirect&lt;/code&gt; enables the backend to internally redirect the gateway to a different URL. This feature originates in &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, which internally redirects the response if the response status is &lt;code&gt;OK&lt;/code&gt; (&lt;code&gt;200&lt;/code&gt;) and the response contains a &lt;code&gt;Location&lt;/code&gt; (or configured alternate header) and its value starts with a slash (&lt;code&gt;/&lt;/code&gt;). This value is interpreted as a new local URL that Apache httpd internally redirects to.</source>
          <target state="translated">&lt;code&gt;ProxySCGIInternalRedirect&lt;/code&gt; 는 내부적으로 다른 URL로 게이트웨이를 리디렉션 백엔드 수 있습니다. 이 기능은 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 에서 시작 합니다. 응답 상태가 &lt;code&gt;OK&lt;/code&gt; ( &lt;code&gt;200&lt;/code&gt; )이고 응답에 &lt;code&gt;Location&lt;/code&gt; (또는 구성된 대체 헤더)이 있고 해당 값이 슬래시 ( &lt;code&gt;/&lt;/code&gt; )로 시작 하면 내부적으로 응답을 리디렉션합니다 . 이 값은 Apache httpd가 내부적으로 리디렉션하는 새로운 로컬 URL로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="741a9d147882b9d7d924ecb1b6e46913b2896731" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; argument determines the gateway behaviour:</source>
          <target state="translated">&lt;code&gt;ProxySCGISendfile&lt;/code&gt; 의 인수는 게이트웨이의 동작을 결정한다 :</target>
        </trans-unit>
        <trans-unit id="49882af03eb55d05451faea7724ab17b01657e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; directive enables the SCGI backend to let files be served directly by the gateway. This is useful for performance purposes &amp;mdash; httpd can use &lt;code&gt;sendfile&lt;/code&gt; or other optimizations, which are not possible if the file comes over the backend socket. Additionally, the file contents are not transmitted twice.</source>
          <target state="translated">&lt;code&gt;ProxySCGISendfile&lt;/code&gt; 의 지시어는 파일이 게이트웨이에 의해 직접 제공 될 수 있도록하기 위해 SCGI 백엔드를 할 수 있습니다. 이는 성능 목적에 유용합니다. httpd는 &lt;code&gt;sendfile&lt;/code&gt; 또는 기타 최적화를 사용할 수 있으며 파일이 백엔드 소켓을 통해 제공되는 경우에는 불가능합니다. 또한 파일 내용이 두 번 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f163e8e6321eac0a97541af0a8c72e8206d8319c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RLimit&lt;/code&gt;* directives are used to limit the amount of resources which can be used by processes forked off from the httpd children. In particular, this will control resources used by CGI scripts and SSI exec commands.</source>
          <target state="translated">&lt;code&gt;RLimit&lt;/code&gt; 는 * 지시어는 아파치 아동으로부터 갈래의 프로세스에 의해 사용 할 수있는 자원의 양을 제한하는 데 사용됩니다. 특히 CGI 스크립트 및 SSI exec 명령에 사용되는 리소스를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="831e0c0010b9edcb4e8f63f1bf1b21cad9c7bcaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReadmeName&lt;/code&gt; directive sets the name of the file that will be appended to the end of the index listing. &lt;var&gt;Filename&lt;/var&gt; is the name of the file to include, and is taken to be relative to the location being indexed. If &lt;var&gt;Filename&lt;/var&gt; begins with a slash, as in example 2, it will be taken to be relative to the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ReadmeName&lt;/code&gt; 은의 지시어는 목록 인덱스의 끝에 추가 될 파일의 이름을 설정합니다. &lt;var&gt;Filename&lt;/var&gt; 은 포함 할 파일의 이름이며 색인이 생성되는 위치를 기준으로합니다. 경우 &lt;var&gt;Filename&lt;/var&gt; 실시 예 2와 슬래시, 시작, 상대적으로 수행 될 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="469f0f35ec8e6ed0f301d1bef84b93e1cbbabdb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Redirect&lt;/code&gt; directive maps an old URL into a new one by asking the client to refetch the resource at the new location.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; 지시어는 새 위치에서 자원을 재 취득하기 위해 클라이언트 요청에 의해 이전 URL을 새로운 URL로 대응한다.</target>
        </trans-unit>
        <trans-unit id="5fe78c451560ba9010d052d464d137d0b8399929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegisteredMethods&lt;/code&gt; option should &lt;strong&gt;not&lt;/strong&gt; be toggled for forward proxy hosts, as the methods supported by the origin servers are unknown to the proxy server.</source>
          <target state="translated">&lt;code&gt;RegisteredMethods&lt;/code&gt; 의 옵션은해야 &lt;strong&gt;하지&lt;/strong&gt; 원래 서버에서 지원하는 방법은 프록시 서버에 알 수없는만큼, 앞으로 프록시 호스트에 대해 전환 될 수있다.</target>
        </trans-unit>
        <trans-unit id="64350918c017f0e3bdc4ce615f7af67e0515a3b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. If enabled with the &lt;code&gt;On&lt;/code&gt; flag, the upstream client &lt;em&gt;must&lt;/em&gt; send the header every time it opens a connection or the connection will be aborted unless it is in the list of disabled hosts provided by the &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocolexceptions&quot;&gt;RemoteIPProxyProtocolExceptions&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; 의 지시문을 활성화하거나 독서를 비활성화하고 프록시 프로토콜 연결 헤더 처리. &lt;code&gt;On&lt;/code&gt; 플래그로 활성화 된 경우 업스트림 클라이언트 &lt;em&gt;는&lt;/em&gt; 연결을 열 때마다 헤더 &lt;em&gt;를&lt;/em&gt; 보내야합니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocolexceptions&quot;&gt;RemoteIPProxyProtocolExceptions&lt;/a&gt;&lt;/code&gt; 지시문에서 제공하는 비활성화 된 호스트 목록에없는 경우 연결이 중단됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8ffa9c340f19c6199a33dac5ce42f70acfa99dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. Sometimes it is desirable to require clients to provide the PROXY header, but permit other clients to connect without it. This directive allows a server administrator to configure a single host or CIDR range of hosts that may do so. This is generally useful for monitoring and administrative traffic to a virtual host direct to the server behind the upstream load balancer.</source>
          <target state="translated">&lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; 의 지시문을 활성화하거나 독서를 비활성화하고 프록시 프로토콜 연결 헤더 처리. 때때로 클라이언트가 PROXY 헤더를 제공하도록 요구하지만 다른 클라이언트가 헤더없이 연결하도록 허용하는 것이 바람직합니다. 이 지정 문을 통해 서버 관리자는 단일 호스트 또는 CIDR 범위의 호스트를 구성 할 수 있습니다. 이는 일반적으로 업스트림로드 밸런서 뒤의 서버로 직접 연결되는 가상 호스트로의 트래픽을 모니터링하고 관리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ae5d227503f00da08ff20e2a9939e4b54fa74c76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveCharset&lt;/code&gt; directive removes any character set associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveCharset&lt;/code&gt; 의 지시어는 특정 확장자를 가진 파일에 대한 모든 문자 집합 연결을 제거합니다. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을.</target>
        </trans-unit>
        <trans-unit id="69b4a1cd54a7542b44670f3215ca2d5fa8e67e5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveEncoding&lt;/code&gt; directive removes any encoding associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveEncoding&lt;/code&gt; 지시어는 특정 확장자를 가진 파일에 대한 모든 인코딩 연결을 제거합니다. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을. 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4a5e8dc4cd1086dc1762f4e655ce6973e61a7c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveHandler&lt;/code&gt; directive removes any handler associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveHandler&lt;/code&gt; 의 지시어는 특정 확장자를 가진 파일에 대한 모든 핸들러 연결을 제거합니다. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을. 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c964cbda619d88084dcbcced8fc7ebed80dd896d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveInputFilter&lt;/code&gt; directive removes any input &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveInputFilter&lt;/code&gt; 의 지침은 모든 입력 제거 &lt;a href=&quot;../filter&quot;&gt;필터&lt;/a&gt; 가 지정된 확장자를 가진 파일에 대한 연결을. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을.</target>
        </trans-unit>
        <trans-unit id="067e40d40a9add74d02e5617c937a640845971cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveLanguage&lt;/code&gt; directive removes any language associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveLanguage&lt;/code&gt; 의 지시어는 특정 확장자를 가진 파일에 대한 모든 언어의 연결을 제거합니다. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을.</target>
        </trans-unit>
        <trans-unit id="f82c512d1dab46f2925e480a7738a3c60032ee37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveOutputFilter&lt;/code&gt; directive removes any output &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="translated">&lt;code&gt;RemoveOutputFilter&lt;/code&gt; 의 지침은 모든 출력 제거 &lt;a href=&quot;../filter&quot;&gt;필터&lt;/a&gt; 가 지정된 확장자를 가진 파일에 대한 연결을. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을.</target>
        </trans-unit>
        <trans-unit id="92c60cbfeb10085f7e085f9dd8dbe9195a913a0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveType&lt;/code&gt; directive removes any &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media type&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="translated">&lt;code&gt;RemoveType&lt;/code&gt; 의 지침은 제거 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;미디어 유형&lt;/a&gt; 지정된 확장자를 가진 파일에 대한 연결을. 이를 통해 &lt;code&gt;.htaccess&lt;/code&gt; 상위 디렉토리 나 서버 설정 파일에서 상속 된 모든 연결을 취소 할 하위 디렉토리에있는 파일을. 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="713f70c6e6443a921374045e32b3edfa3e60722d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RequestHeader&lt;/code&gt; directive may be followed by an additional argument, which may be any of:</source>
          <target state="translated">&lt;code&gt;RequestHeader&lt;/code&gt; 지시어 중 일 수있는 추가적인 인수 하였다 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="243b03130625c7468a074d3de07b183ccca5169a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-attribute&lt;/code&gt; directive allows the administrator to grant access based on attributes of the authenticated user in the LDAP directory. If the attribute in the directory matches the value given in the configuration, access is granted.</source>
          <target state="translated">는 &lt;code&gt;Require ldap-attribute&lt;/code&gt; 지시어는 LDAP 디렉토리에 인증 된 사용자의 속성을 기반으로 액세스 권한을 부여하는 관리자를 할 수 있습니다. 디렉토리의 속성이 구성에 제공된 값과 일치하면 액세스 권한이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="4d236ee0f6eb912cb62f3c598015f64c66860c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-dn&lt;/code&gt; directive allows the administrator to grant access based on distinguished names. It specifies a DN that must match for access to be granted. If the distinguished name that was retrieved from the directory server matches the distinguished name in the &lt;code&gt;Require ldap-dn&lt;/code&gt;, then authorization is granted. Note: do not surround the distinguished name with quotes.</source>
          <target state="translated">는 &lt;code&gt;Require ldap-dn&lt;/code&gt; 지시어는 고유 이름을 기반으로 액세스 권한을 부여하는 관리자를 할 수 있습니다. 액세스 권한이 부여 되려면 일치해야하는 DN을 지정합니다. 디렉토리 서버에서 검색된 식별 이름이 &lt;code&gt;Require ldap-dn&lt;/code&gt; 의 식별 이름과 일치하면 권한이 부여됩니다. 참고 : 식별 이름을 따옴표로 묶지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fbe9021e5c8640a0e4e3bd2ec557717967ae7bb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-filter&lt;/code&gt; directive allows the administrator to grant access based on a complex LDAP search filter. If the dn returned by the filter search matches the authenticated user dn, access is granted.</source>
          <target state="translated">는 &lt;code&gt;Require ldap-filter&lt;/code&gt; 지시문은 복잡한 LDAP 검색 필터를 기반으로 액세스 권한을 부여하는 관리자를 할 수 있습니다. 필터 검색에서 반환 된 dn이 인증 된 사용자 dn과 일치하면 액세스 권한이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="5ef88e5123b08953dd5e184d8f555ee39fb22c40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-user&lt;/code&gt; directive specifies what usernames can access the resource. Once &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; has retrieved a unique DN from the directory, it does an LDAP compare operation using the username specified in the &lt;code&gt;Require ldap-user&lt;/code&gt; to see if that username is part of the just-fetched LDAP entry. Multiple users can be granted access by putting multiple usernames on the line, separated with spaces. If a username has a space in it, then it must be surrounded with double quotes. Multiple users can also be granted access by using multiple &lt;code&gt;Require ldap-user&lt;/code&gt; directives, with one user per line. For example, with a &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;ldap://ldap/o=Example?cn&lt;/code&gt; (i.e., &lt;code&gt;cn&lt;/code&gt; is used for searches), the following Require directives could be used to restrict access:</source>
          <target state="translated">는 &lt;code&gt;Require ldap-user&lt;/code&gt; 사용자 이름은 리소스에 액세스 할 수있는 지시어를 지정합니다. 일단 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 이 디렉토리에서 고유 DN을 검색 한, 그것은 LDAP가 지정된 사용자 이름 사용하여 비교 작업 수행 &lt;code&gt;Require ldap-user&lt;/code&gt; 해당 사용자 이름이 방금 가져온 LDAP 항목의 일부가 있는지. 공백으로 구분하여 여러 사용자 이름을 줄에 두어 여러 사용자에게 액세스 권한을 부여 할 수 있습니다. 사용자 이름에 공백이 있으면 큰 따옴표로 묶어야합니다. 한 줄에 한 명의 사용자와 함께 여러 &lt;code&gt;Require ldap-user&lt;/code&gt; 지시문 을 사용하여 여러 사용자 에게 액세스 권한을 부여 할 수도 있습니다 . 예를 들어 &lt;code&gt;ldap://ldap/o=Example?cn&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; 을 사용하면 (예 : &lt;code&gt;cn&lt;/code&gt; ) 검색에 사용되는 경우) 다음 필수 지시문을 사용하여 액세스를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ce414fb159ae14c3d70b751923bf486df3ea44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteBase&lt;/code&gt; directive specifies the URL prefix to be used for per-directory (htaccess) &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives that substitute a relative path.</source>
          <target state="translated">&lt;code&gt;RewriteBase&lt;/code&gt; 의 URL 접두사는 디렉토리 별 (htaccess로)에 사용되는 지시어를 지정 &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시 대신 상대 경로를 그.</target>
        </trans-unit>
        <trans-unit id="d0f0d14bdb86ea947f4f38920ee65518563161b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteCond&lt;/code&gt; directive defines a rule condition. One or more &lt;code&gt;RewriteCond&lt;/code&gt; can precede a &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive. The following rule is then only used if both the current state of the URI matches its pattern, &lt;strong&gt;and&lt;/strong&gt; if these conditions are met.</source>
          <target state="translated">&lt;code&gt;RewriteCond&lt;/code&gt; 지시어는 규칙 조건을 정의합니다. 하나 이상의 &lt;code&gt;RewriteCond&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문 앞에 올 수 있습니다 . 다음 규칙은 URI의 현재 상태 모두의 패턴과 일치하는 경우 만 사용, &lt;strong&gt;그리고&lt;/strong&gt; 이러한 조건이 충족되는 경우.</target>
        </trans-unit>
        <trans-unit id="56a552381de520bf80bb3e059c66a9bc2921f095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteEngine&lt;/code&gt; directive enables or disables the runtime rewriting engine. If it is set to &lt;code&gt;off&lt;/code&gt; this module does no runtime processing at all. It does not even update the &lt;code&gt;SCRIPT_URx&lt;/code&gt; environment variables.</source>
          <target state="translated">&lt;code&gt;RewriteEngine&lt;/code&gt; 지시어는 활성화 또는 런타임 재 작성 엔진을 사용하지 않습니다. 가로 설정되어있는 경우 &lt;code&gt;off&lt;/code&gt; 이 모듈 전혀 런타임 처리를하지 않습니다. &lt;code&gt;SCRIPT_URx&lt;/code&gt; 환경 변수 도 업데이트하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1b9670cd0760982afc3779130c37c8069f52beff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteMap&lt;/code&gt; directive defines a &lt;em&gt;Rewriting Map&lt;/em&gt; which can be used inside rule substitution strings by the mapping-functions to insert/substitute fields through a key lookup. The source of this lookup can be of various types.</source>
          <target state="translated">&lt;code&gt;RewriteMap&lt;/code&gt; 지시문은 정의 &lt;em&gt;다시 쓰기 맵&lt;/em&gt; 키를 통해 룩업 / 대체 필드를 삽입하여, 맵핑 기능 규칙 교체 문자열 내에서 사용될 수있다. 이 조회의 출처는 다양한 유형일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c92685ac24c0b2506efe1e5934f88cc414f2b08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteOptions&lt;/code&gt; directive sets some special options for the current per-server or per-directory configuration. The &lt;em&gt;Option&lt;/em&gt; string can currently only be one of the following:</source>
          <target state="translated">&lt;code&gt;RewriteOptions&lt;/code&gt; 지침 세트를 현재 서버 별 또는 디렉토리 구성을위한 특별한 옵션을 제공합니다. &lt;em&gt;옵션&lt;/em&gt; 문자열은 현재 다음 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="85f960d06e41d2fd8dcd316784d2939f44322000" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteRule&lt;/code&gt; directive is the real rewriting workhorse. The directive can occur more than once, with each instance defining a single rewrite rule. The order in which these rules are defined is important - this is the order in which they will be applied at run-time.</source>
          <target state="translated">&lt;code&gt;RewriteRule&lt;/code&gt; 지시어는 실제 재 작성 주력이다. 지시문은 각 인스턴스가 단일 재 작성 규칙을 정의하여 두 번 이상 발생할 수 있습니다. 이러한 규칙이 정의 된 순서는 중요합니다. 이는 런타임에 적용되는 순서입니다.</target>
        </trans-unit>
        <trans-unit id="8fc59b3abfd7475187e5c82df250cf88faf15383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIETag&lt;/code&gt; directive suppresses this behaviour, and allows the server to generate an &lt;code&gt;ETag&lt;/code&gt; header. This can be used to enable caching of the output. Note that a backend server or dynamic content generator may generate an ETag of its own, ignoring &lt;code&gt;no-etag&lt;/code&gt;, and this ETag will be passed by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; regardless of the value of this setting. &lt;code&gt;SSIETag&lt;/code&gt; can take on the following values:</source>
          <target state="translated">&lt;code&gt;SSIETag&lt;/code&gt; 의 지시는이 동작을 억제하고 생성 할 수 있도록 서버 &lt;code&gt;ETag&lt;/code&gt; 헤더. 출력 캐싱을 활성화하는 데 사용할 수 있습니다. 백엔드 서버 또는 동적 컨텐츠 생성기는 &lt;code&gt;no-etag&lt;/code&gt; 를 무시하고 자체 ETag를 생성 할 수 있으며이 ETag는 이 설정의 값에 관계없이 &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 에 의해 전달됩니다 . &lt;code&gt;SSIETag&lt;/code&gt; 는 다음 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c62153d56a94e14cb5ba8d7b8e86f764b4e3df10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIErrorMsg&lt;/code&gt; directive changes the error message displayed when &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; encounters an error. For production servers you may consider changing the default error message to &lt;code&gt;&quot;&amp;lt;!-- Error --&amp;gt;&quot;&lt;/code&gt; so that the message is not presented to the user.</source>
          <target state="translated">&lt;code&gt;SSIErrorMsg&lt;/code&gt; 의 지시어 때 오류 메시지가 표시 변경 &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 의이 오류가 발생. 프로덕션 서버의 경우 메시지가 사용자에게 표시되지 않도록 기본 오류 메시지를 &lt;code&gt;&quot;&amp;lt;!-- Error --&amp;gt;&quot;&lt;/code&gt; 변경하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="07c745a2589d38b38daaaef30a33dc9acbc14e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSILastModified&lt;/code&gt; directive overrides this behaviour, and allows the &lt;code&gt;Last-Modified&lt;/code&gt; header to be respected if already present, or set if the header is not already present. This can be used to enable caching of the output. &lt;code&gt;SSILastModified&lt;/code&gt; can take on the following values:</source>
          <target state="translated">는 &lt;code&gt;SSILastModified&lt;/code&gt; 이 동작 지시 재정의를하고 있습니다 &lt;code&gt;Last-Modified&lt;/code&gt; 헤더가 존재하지 않는 경우에 헤더가 이미 존재하는 경우에 존경하거나 설정 할 수 있습니다. 출력 캐싱을 활성화하는 데 사용할 수 있습니다. &lt;code&gt;SSILastModified&lt;/code&gt; 는 다음 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d46109fbeaeda0f4b6a7bee26de973ddc50665e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSL_SECURE_RENEG&lt;/code&gt; environment variable can be used from an SSI or CGI script to determine whether secure renegotiation is supported for a given SSL connection.</source>
          <target state="translated">&lt;code&gt;SSL_SECURE_RENEG&lt;/code&gt; 의 환경 변수는 보안 재협상이 주어진 SSL 연결에 대한 지원 여부를 결정하는 SSI 나 CGI 스크립트에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de9234e34e039cbd2cce88e7045d4de005c36c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptAlias&lt;/code&gt; directive has the same behavior as the &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive, except that in addition it marks the target directory as containing CGI scripts that will be processed by &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;'s cgi-script handler. URLs with a case-sensitive (%-decoded) path beginning with &lt;var&gt;URL-path&lt;/var&gt; will be mapped to scripts beginning with the second argument, which is a full pathname in the local filesystem.</source>
          <target state="translated">&lt;code&gt;ScriptAlias&lt;/code&gt; 지시어는 동일한 동작 갖는다 &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; , 지시어 이외에는 첨가에 표시 처리한다 CGI 스크립트를 포함하는 것으로 대상 디렉토리 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 를 집 CGI 스크립트 처리기. URL 경로로 시작하는 대소 문자 구분 (% 디코딩) 경로가있는 &lt;var&gt;URL-path&lt;/var&gt; 은 로컬 파일 시스템의 전체 경로 이름 인 두 번째 인수로 시작하는 스크립트에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="68acc0d42490bf582d6f9e6753ece18e1a299f88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptLog&lt;/code&gt; directive sets the CGI script error logfile. If no &lt;code&gt;ScriptLog&lt;/code&gt; is given, no error log is created. If given, any CGI errors are logged into the filename given as argument. If this is a relative file or path it is taken relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptLog&lt;/code&gt; 선언 지시어는 CGI 스크립트 오류 로그 파일을 설정합니다. 어떤 경우 &lt;code&gt;ScriptLog&lt;/code&gt; 값이 주어지지, 오류 로그가 생성되지 않습니다. 주어진 경우 모든 CGI 오류는 인수로 제공된 파일 이름에 기록됩니다. 이 파일이 상대 파일이거나 경로 인 경우 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 를 기준으로합니다 .</target>
        </trans-unit>
        <trans-unit id="b85563f489b494dd0649c84db9666544afbc5ab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAdmin&lt;/code&gt; sets the contact address that the server includes in any error messages it returns to the client. If the &lt;code&gt;httpd&lt;/code&gt; doesn't recognize the supplied argument as an URL, it assumes, that it's an &lt;var&gt;email-address&lt;/var&gt; and prepends it with &lt;code&gt;mailto:&lt;/code&gt; in hyperlink targets. However, it's recommended to actually use an email address, since there are a lot of CGI scripts that make that assumption. If you want to use an URL, it should point to another server under your control. Otherwise users may not be able to contact you in case of errors.</source>
          <target state="translated">&lt;code&gt;ServerAdmin&lt;/code&gt; 서버가 클라이언트에 반환하는 모든 오류 메시지에 포함되어있는 연락처 주소를 설정합니다. 경우 &lt;code&gt;httpd&lt;/code&gt; URL로 제공된 인수를 인식하지 못하는, 그것은이 있다고 가정하고 &lt;var&gt;email-address&lt;/var&gt; 그것과 앞에 추가 &lt;code&gt;mailto:&lt;/code&gt; 하이퍼 링크 대상에. 그러나 실제로는 CGI 스크립트가 많기 때문에 실제로 전자 메일 주소를 사용하는 것이 좋습니다. URL을 사용하려면 제어중인 다른 서버를 가리켜 야합니다. 그렇지 않으면 오류가 발생할 경우 사용자가 연락하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a79115a05069fe02e06b3b78b6c9f833777341e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAlias&lt;/code&gt; directive sets the alternate names for a host, for use with &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;. The &lt;code&gt;ServerAlias&lt;/code&gt; may include wildcards, if appropriate.</source>
          <target state="translated">&lt;code&gt;ServerAlias&lt;/code&gt; 에는 사용하기 위해, 호스트에 대한 설정을 대체 이름을 지시문 &lt;a href=&quot;../vhosts/name-based&quot;&gt;이름 기반 가상 호스트&lt;/a&gt; . &lt;code&gt;ServerAlias&lt;/code&gt; 에는 와일드 카드, 해당되는 경우를 포함 할 수있다.</target>
        </trans-unit>
        <trans-unit id="2d6ec5a2eeab9c9f2e0aaa9be5377be801378073" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive may appear anywhere within the definition of a server. However, each appearance overrides the previous appearance (within that server).</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; 지시어는 서버의 정의 내 어디서든 나타날 수 있습니다. 그러나 각 모양은 해당 서버 내에서 이전 모양보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="b4496b84e94af2335c447b8949ed7b550d61558c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive sets the request scheme, hostname and port that the server uses to identify itself.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; 지시자는 서버가 사용 자체를 식별 할 것을 요청 방식, 호스트 이름 및 포트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9d3122af841d6fb35cea31c44dc05186784ba6e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerPath&lt;/code&gt; directive sets the legacy URL pathname for a host, for use with &lt;a href=&quot;../vhosts/index&quot;&gt;name-based virtual hosts&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ServerPath&lt;/code&gt; 지시문을 사용하기 위해, 호스트에 대한 기존의 URL 경로 이름을 설정 &lt;a href=&quot;../vhosts/index&quot;&gt;이름 기반 가상 호스트&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="447c006b438923833d051bdf3e7f7c92a8d7c7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerRoot&lt;/code&gt; directive sets the directory in which the server lives. Typically it will contain the subdirectories &lt;code&gt;conf/&lt;/code&gt; and &lt;code&gt;logs/&lt;/code&gt;. Relative paths in other configuration directives (such as &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;, for example) are taken as relative to this directory.</source>
          <target state="translated">&lt;code&gt;ServerRoot&lt;/code&gt; 지시어 세트 서버가 살고있는 디렉토리. 일반적으로 하위 디렉토리 &lt;code&gt;conf/&lt;/code&gt; 및 &lt;code&gt;logs/&lt;/code&gt; 됩니다. 다른 구성 지시문의 상대 경로 (예 : &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; 등)는이 디렉토리를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="9419ead675b5023fb59e852cbdbfda02581ade73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerSignature&lt;/code&gt; directive allows the configuration of a trailing footer line under server-generated documents (error messages, &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; ftp directory listings, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; output, ...). The reason why you would want to enable such a footer line is that in a chain of proxies, the user often has no possibility to tell which of the chained servers actually produced a returned error message.</source>
          <target state="translated">&lt;code&gt;ServerSignature&lt;/code&gt; 의 지시어는 서버가 생성 한 문서 (오류 메시지, 아래에 후행 바닥 글 라인의 구성 할 수 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 를 FTP 디렉토리 목록, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; 를의 출력을, ...). 이러한 바닥 글 라인을 사용하려는 이유는 프록시 체인에서 사용자가 체인 된 서버 중 실제로 리턴 된 오류 메시지를 생성 한 것을 알 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="87d7a656dfbfa8f77cfc60799ae0419051b12b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Session&lt;/code&gt; directive enables a session for the directory or location container. Further directives control where the session will be stored and how privacy is maintained.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 지시어는 디렉토리 또는 위치 컨테이너의 세션을 가능하게한다. 추가 지시문은 세션을 저장할 위치와 개인 정보 보호 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="3581218c8006dba78b105a8a57fa59c1d26a7efe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName2&lt;/code&gt; directive specifies the name and optional attributes of an RFC2965 compliant cookie inside which the session will be stored. RFC2965 cookies are set using the &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionCookieName2&lt;/code&gt; 의 지시어는 이름과 세션이 저장 될 것이다 RFC2965을 준수 쿠키 내부의 선택적 속성을 지정합니다. RFC2965 쿠키는 &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP 헤더를 사용하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="73eb531e517f03332ca3f819a512afe742aa0c25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName&lt;/code&gt; directive specifies the name and optional attributes of an RFC2109 compliant cookie inside which the session will be stored. RFC2109 cookies are set using the &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionCookieName&lt;/code&gt; 의 지시어는 이름과 세션이 저장 될 것이다 RFC2109을 준수 쿠키 내부의 선택적 속성을 지정합니다. RFC2109 쿠키는 &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP 헤더를 사용하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="3ceda7bf6c33969658896de8929697901b953a46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieRemove&lt;/code&gt; flag controls whether the cookies containing the session will be removed from the headers during request processing.</source>
          <target state="translated">&lt;code&gt;SessionCookieRemove&lt;/code&gt; 의 세션 쿠키를 포함하는 요청을 처리하는 동안 헤더를 제거할지 여부를 제어 플래그.</target>
        </trans-unit>
        <trans-unit id="7f386d77442a21c2f57fef72d7ac2d54f295033f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoCipher&lt;/code&gt; directive allows the cipher to be used during encryption. If not specified, the cipher defaults to &lt;code&gt;aes256&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SessionCryptoCipher&lt;/code&gt; 의 지시자는 암호 암호화 중에 사용되는 것을 허용한다. 지정하지 않으면 암호의 기본값은 &lt;code&gt;aes256&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6da9fa22befc785c4869ea1efda287df125572b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoDriver&lt;/code&gt; directive specifies the name of the crypto driver to be used for encryption. If not specified, the driver defaults to the recommended driver compiled into APR-util.</source>
          <target state="translated">&lt;code&gt;SessionCryptoDriver&lt;/code&gt; 크립토 드라이버의 지시 지정 이름은 암호화에 사용합니다. 지정하지 않은 경우 드라이버는 APR-util로 컴파일 된 권장 드라이버로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="eacedf2736a086ef64645b67445cd7b94e720876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoPassphrase&lt;/code&gt; directive specifies the keys to be used to enable symmetrical encryption on the contents of the session before writing the session, or decrypting the contents of the session after reading the session.</source>
          <target state="translated">&lt;code&gt;SessionCryptoPassphrase&lt;/code&gt; 의 지시어는 키가 세션을 작성하거나 세션을 읽은 후 세션의 내용을 해독하기 전에 세션의 내용에 대칭 암호화를 사용하려면 사용을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4e1365726ee510c6c8b0715f63fd9a6629d6d3a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoPassphraseFile&lt;/code&gt; directive specifies the name of a configuration file containing the keys to use for encrypting or decrypting the session, specified one per line. The file is read on server start, and a graceful restart will be necessary for httpd to pick up changes to the keys.</source>
          <target state="translated">&lt;code&gt;SessionCryptoPassphraseFile&lt;/code&gt; 세션을 암호화 또는 암호 해독에 사용하는 키를 포함하는 구성 파일의 지시어 지정 이름이 한 줄에 하나씩 지정했습니다. 서버 시작시 파일을 읽으며 httpd가 키 변경 사항을 가져 오려면 정상적으로 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2f2de4030d06bf6501cad515273c56a046ac703" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieName2&lt;/code&gt; directive specifies the name and optional attributes of an RFC2965 compliant cookie inside which the session ID will be stored. RFC2965 cookies are set using the &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieName2&lt;/code&gt; 의 지시어는 이름과 세션 ID가 저장 될 것 RFC2965을 준수 쿠키 내부의 선택적 속성을 지정합니다. RFC2965 쿠키는 &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP 헤더를 사용하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="df076efb5147f0c9a9a0d07415109a24d70cf925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieName&lt;/code&gt; directive specifies the name and optional attributes of an RFC2109 compliant cookie inside which the session ID will be stored. RFC2109 cookies are set using the &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieName&lt;/code&gt; 의 지시어는 이름과 세션 ID가 저장 될 것 RFC2109을 준수 쿠키 내부의 선택적 속성을 지정합니다. RFC2109 쿠키는 &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP 헤더를 사용하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="59b5061d2deeeb9851a128bdb9758d76ec212bc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDCookieRemove&lt;/code&gt; flag controls whether the cookies containing the session ID will be removed from the headers during request processing.</source>
          <target state="translated">&lt;code&gt;SessionDBDCookieRemove&lt;/code&gt; 의 세션 ID를 포함하는 쿠키가 요청을 처리하는 동안 헤더를 제거할지 여부를 제어 플래그.</target>
        </trans-unit>
        <trans-unit id="d618abcad6d8f9e99317882843d38c6240234b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDDeleteLabel&lt;/code&gt; directive sets the default delete query label to be used to delete an expired or empty session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDDeleteLabel&lt;/code&gt; 지침 세트를 기본 삭제 쿼리 레이블이 만료되거나 빈 세션을 삭제하는 데 사용합니다. 이 레이블은 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 미리 정의되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="88f5fa1c9f370c76bcbf56ab96591328a94314d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDInsertLabel&lt;/code&gt; directive sets the default insert query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDInsertLabel&lt;/code&gt; 의 지시어는 쿼리 라벨 삽입 기본 세션에서 부하에 사용할 수 있도록 설정합니다. 이 레이블은 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 미리 정의되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2276874a805b84a42841912972186fca2c4c03d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDPerUser&lt;/code&gt; flag enables a per user session keyed against the user's login name. If the user is not logged in, this directive will be ignored.</source>
          <target state="translated">&lt;code&gt;SessionDBDPerUser&lt;/code&gt; 의 플래그는 사용자의 로그인 이름에 키가 사용자 당 세션을 할 수 있습니다. 사용자가 로그인하지 않은 경우이 지시문은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="52cb411b91e422c41dded13fba7d4deb2153925e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDSelectLabel&lt;/code&gt; directive sets the default select query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDSelectLabel&lt;/code&gt; 지침 세트 기본 선택 쿼리의 레이블은 세션에서로드 할 수 있습니다. 이 레이블은 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 미리 정의되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a4997676098abf3160f0788257f8f906c801e2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionDBDUpdateLabel&lt;/code&gt; directive sets the default update query label to be used to load in a session. This label must have been previously defined using the &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionDBDUpdateLabel&lt;/code&gt; 의 지시어는 세션에서 부하에 사용되는 기본 업데이트 쿼리 레이블을 설정합니다. 이 레이블은 &lt;code&gt;&lt;a href=&quot;mod_dbd#dbdpreparesql&quot;&gt;DBDPrepareSQL&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 미리 정의되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5c0368dbeb1bb238dd385f5257dd009e5d79134d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionExclude&lt;/code&gt; directive allows sessions to be disabled relative to URL prefixes only. This can be used to make a website more efficient, by targeting a more precise URL space for which a session should be maintained. By default, all URLs within the directory or location are included in the session. The &lt;code&gt;&lt;a href=&quot;#sessionexclude&quot;&gt;SessionExclude&lt;/a&gt;&lt;/code&gt; directive takes precedence over the &lt;code&gt;&lt;a href=&quot;#sessioninclude&quot;&gt;SessionInclude&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SessionExclude&lt;/code&gt; 의 지시어는 세션 URL 접두사 만에 장애인 상대 할 수 있습니다. 세션을 유지해야하는보다 정확한 URL 공간을 대상으로하여 웹 사이트를보다 효율적으로 만드는 데 사용할 수 있습니다. 기본적으로 디렉토리 또는 위치 내의 모든 URL이 세션에 포함됩니다. &lt;code&gt;&lt;a href=&quot;#sessionexclude&quot;&gt;SessionExclude&lt;/a&gt;&lt;/code&gt; 의 지시어는보다 우선합니다 &lt;code&gt;&lt;a href=&quot;#sessioninclude&quot;&gt;SessionInclude&lt;/a&gt;&lt;/code&gt; 의 지시어.</target>
        </trans-unit>
        <trans-unit id="3aadee58f7c07ff41f0f07eee0270b335fc3445a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionHeader&lt;/code&gt; directive defines the name of an HTTP response header which, if present, will be parsed and written to the current session.</source>
          <target state="translated">&lt;code&gt;SessionHeader&lt;/code&gt; 의 지시가있는 경우, 구문 분석하고 현재 세션에 기록, HTTP 응답 헤더의 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="92795b37001c7cacc90951227203b7f52b278ef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionInclude&lt;/code&gt; directive allows sessions to be made valid for specific URL prefixes only. This can be used to make a website more efficient, by targeting a more precise URL space for which a session should be maintained. By default, all URLs within the directory or location are included in the session.</source>
          <target state="translated">&lt;code&gt;SessionInclude&lt;/code&gt; 의 지시어는 세션이 특정의 URL 접두사에만 유효 할 수 있습니다. 세션을 유지해야하는보다 정확한 URL 공간을 대상으로하여 웹 사이트를보다 효율적으로 만드는 데 사용할 수 있습니다. 기본적으로 디렉토리 또는 위치 내의 모든 URL이 세션에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="77662fb79cca01c16b4f2859ca89b5ac1c8155cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionMaxAge&lt;/code&gt; directive defines a time limit for which a session will remain valid. When a session is saved, this time limit is reset and an existing session can be continued. If a session becomes older than this limit without a request to the server to refresh the session, the session will time out and be removed. Where a session is used to stored user login details, this has the effect of logging the user out automatically after the given time.</source>
          <target state="translated">&lt;code&gt;SessionMaxAge&lt;/code&gt; 의 지시어는 세션이 유효합니다되는 시간 제한을 정의합니다. 세션이 저장되면이 시간 제한이 재설정되고 기존 세션을 계속할 수 있습니다. 서버에 세션을 새로 고치도록 요청하지 않고 세션이이 제한보다 오래된 경우 세션이 시간 초과되고 제거됩니다. 세션이 사용자 로그인 세부 사항을 저장하는 데 사용되는 경우 지정된 시간이 지나면 사용자를 자동으로 로그 아웃시키는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb229e01799a21ddfb26be466fea2d9da76ec618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIf&lt;/code&gt; directive defines environment variables based on attributes of the request. The &lt;em&gt;attribute&lt;/em&gt; specified in the first argument can be one of four things:</source>
          <target state="translated">&lt;code&gt;SetEnvIf&lt;/code&gt; 지시어는 요청의 성질에 따라 환경 변수를 정의합니다. &lt;em&gt;속성&lt;/em&gt; 첫 번째 인수에 지정된는 네 가지 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9653913b74053d6c1d36afd5624fb12e581fa730" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIfExpr&lt;/code&gt; directive defines environment variables based on an &lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ap_expr&lt;/code&gt;. These expressions will be evaluated at runtime, and applied &lt;em&gt;env-variable&lt;/em&gt; in the same fashion as &lt;code&gt;SetEnvIf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetEnvIfExpr&lt;/code&gt; 의 온 기반 지시자 정의 환경 변수 &lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ap_expr&lt;/code&gt; . 이러한 식은 런타임에 평가 되며 &lt;code&gt;SetEnvIf&lt;/code&gt; 와 동일한 방식으로 &lt;em&gt;env-variable이&lt;/em&gt; 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d6a82718219864af7c49b35d37f6a5e548b0c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetEnvIfNoCase&lt;/code&gt; is semantically identical to the &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; directive, and differs only in that the regular expression matching is performed in a case-insensitive manner. For example:</source>
          <target state="translated">&lt;code&gt;SetEnvIfNoCase&lt;/code&gt; 을 받는 동일한 의미 &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; 지정, 단지 정규 표현 매칭은 대소 문자 구별하게 행하는 점에서 다르다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30501663822b7f60c3d56e77f606e280985e0275" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetInputFilter&lt;/code&gt; directive sets the filter or filters which will process client requests and POST input when they are received by the server. This is in addition to any filters defined elsewhere, including the &lt;code&gt;&lt;a href=&quot;mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SetInputFilter&lt;/code&gt; 지시자는 상기 필터 또는 상기 서버로부터 수신 될 때 클라이언트 요청과 POST 입력을 처리 할 필터를 설정한다. 이것은 &lt;code&gt;&lt;a href=&quot;mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; 지시문을 포함하여 다른 곳에 정의 된 모든 필터에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6d50a18f8631909e728134cf29089f64db65f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetOutputFilter&lt;/code&gt; directive sets the filters which will process responses from the server before they are sent to the client. This is in addition to any filters defined elsewhere, including the &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SetOutputFilter&lt;/code&gt; 지시어는 클라이언트로 전송되기 전에 서버에서 응답을 처리 할 필터를 설정합니다. 이것은 &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 지시문을 포함하여 다른 곳에 정의 된 모든 필터에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f7bc3db80fe7a2dfced2969c73c74f359580ad9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StartServers&lt;/code&gt; directive sets the number of child server processes created on startup. As the number of processes is dynamically controlled depending on the load, (see &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt;) there is usually little reason to adjust this parameter.</source>
          <target state="translated">&lt;code&gt;StartServers&lt;/code&gt; 를이 세트를 시작할 때 생성 된 자식 서버 프로세스의 수를 지시문. 프로세스 수는로드에 따라 동적으로 제어되므로 ( &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;prefork#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt; 참조 ) 일반적으로이 매개 변수를 조정할 이유가 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="661d82065fc50618737a34b6fe73d080f7b53cae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Substitute&lt;/code&gt; directive specifies a search and replace pattern to apply to the response body.</source>
          <target state="translated">&lt;code&gt;Substitute&lt;/code&gt; 지시어는 응답 본문에 적용 할 검색 및 대체 패턴을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7070a45fcfc396c8a4641ed990917fda5fb4ccec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SuexecUserGroup&lt;/code&gt; directive allows you to specify a user and group for CGI programs to run as. Non-CGI requests are still processed with the user specified in the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;SuexecUserGroup&lt;/code&gt; 의 지시자는 CGI 프로그램으로 실행하기위한 사용자 및 그룹을 지정할 수 있습니다. CGI 이외의 요청은 여전히 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 지시문에 지정된 사용자로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="af6f75080721e51d30caea97364b7e7395f62cb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadStackSize&lt;/code&gt; directive sets the size of the stack (for autodata) of threads which handle client connections and call modules to help process those connections. In most cases the operating system default for stack size is reasonable, but there are some conditions where it may need to be adjusted:</source>
          <target state="translated">&lt;code&gt;ThreadStackSize&lt;/code&gt; 스레드의 지침 세트 (오토 데이터에 대한) 스택의 크기가 어떤 도움 프로세스 핸들 클라이언트 연결 및 전화 모듈은 이러한 연결. 대부분의 경우 스택 크기의 운영 체제 기본값은 합리적이지만 조정해야 할 조건이 있습니다.</target>
        </trans-unit>
        <trans-unit id="395884148f1c8dc6d263b01b713cf222216c6842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeOut&lt;/code&gt; directive defines the length of time Apache httpd will wait for I/O in various circumstances:</source>
          <target state="translated">&lt;code&gt;TimeOut&lt;/code&gt; 지시어는 I / 다양한 상황에서 O를 위해 대기하는 시간 아파치 아파치의 길이를 정의한다 :</target>
        </trans-unit>
        <trans-unit id="dffb7a859d8f5c1753551bbd087b8f3753f39d66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Type&lt;/code&gt; keyword allows you to specify the MIME content-type of the generated page. The default is &lt;var&gt;text/html&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 키워드를 사용하면 생성 된 페이지의 MIME 내용 유형을 지정할 수 있습니다. 기본값은 &lt;var&gt;text/html&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fe74dadd13532eba738a1017a1451a723e874bd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypesConfig&lt;/code&gt; directive sets the location of the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media types&lt;/a&gt; configuration file. &lt;var&gt;File-path&lt;/var&gt; is relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. This file sets the default list of mappings from filename extensions to content types. Most administrators use the &lt;code&gt;mime.types&lt;/code&gt; file provided by their OS, which associates common filename extensions with the official list of IANA registered media types maintained at &lt;a href=&quot;http://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt; as well as a large number of unofficial types. This simplifies the &lt;code&gt;httpd.conf&lt;/code&gt; file by providing the majority of media-type definitions, and may be overridden by &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives as needed. You should not edit the &lt;code&gt;mime.types&lt;/code&gt; file, because it may be replaced when you upgrade your server.</source>
          <target state="translated">&lt;code&gt;TypesConfig&lt;/code&gt; 의 지시어는의 위치 설정 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;미디어 유형의&lt;/a&gt; 구성 파일을. &lt;var&gt;File-path&lt;/var&gt; 는 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 에 상대적 입니다. 이 파일은 파일 이름 확장자에서 컨텐츠 유형으로의 기본 맵핑 목록을 설정합니다. 대부분의 관리자 는 OS에서 제공 하는 &lt;code&gt;mime.types&lt;/code&gt; 파일을 사용합니다.이 파일은 &lt;a href=&quot;http://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt; 에서도 유지 관리되는 IANA 등록 미디어 유형의 공식 목록과 공통 파일 이름 확장자를 연결 합니다. 많은 비공식 유형으로. 이는 대부분의 미디어 유형 정의를 제공 하여 &lt;code&gt;httpd.conf&lt;/code&gt; 파일을 단순화하며 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; 으로 재정의 될 수 있습니다.필요에 따라 지시. &lt;code&gt;mime.types&lt;/code&gt; 파일은 서버를 업그레이드 할 때 교체 될 수 있으므로 편집해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="2dd7003f19d2654f2242b05fc894ff130176dcec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypesConfig&lt;/code&gt; directive sets the location of the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media types&lt;/a&gt; configuration file. &lt;var&gt;File-path&lt;/var&gt; is relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. This file sets the default list of mappings from filename extensions to content types. Most administrators use the &lt;code&gt;mime.types&lt;/code&gt; file provided by their OS, which associates common filename extensions with the official list of IANA registered media types maintained at &lt;a href=&quot;https://www.iana.org/assignments/media-types/index.html&quot;&gt;http://www.iana.org/assignments/media-types/index.html&lt;/a&gt; as well as a large number of unofficial types. This simplifies the &lt;code&gt;httpd.conf&lt;/code&gt; file by providing the majority of media-type definitions, and may be overridden by &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives as needed. You should not edit the &lt;code&gt;mime.types&lt;/code&gt; file, because it may be replaced when you upgrade your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d58d4fdb1e17ba09081eb178e2fca0f198d20d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNIQUE_ID&lt;/code&gt; environment variable is constructed by encoding the 144-bit (32-bit IP address, 32 bit pid, 32 bit time stamp, 16 bit counter, 32 bit thread index) quadruple using the alphabet &lt;code&gt;[A-Za-z0-9@-]&lt;/code&gt; in a manner similar to MIME base64 encoding, producing 24 characters. The MIME base64 alphabet is actually &lt;code&gt;[A-Za-z0-9+/]&lt;/code&gt; however &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; need to be specially encoded in URLs, which makes them less desirable. All values are encoded in network byte ordering so that the encoding is comparable across architectures of different byte ordering. The actual ordering of the encoding is: time stamp, IP address, pid, counter. This ordering has a purpose, but it should be emphasized that applications should not dissect the encoding. Applications should treat the entire encoded &lt;code&gt;UNIQUE_ID&lt;/code&gt; as an opaque token, which can be compared against other &lt;code&gt;UNIQUE_ID&lt;/code&gt;s for equality only.</source>
          <target state="translated">&lt;code&gt;UNIQUE_ID&lt;/code&gt; 의 환경 변수는 알파벳을 이용하여 144 비트 (32 비트 IP 주소, 32 비트의 PID, 32 비트 시간, 16 비트 카운터 32 비트 스레드 인덱스) 배를 인코딩함으로써 생성된다 &lt;code&gt;[A-Za-z0-9@-]&lt;/code&gt; MIME base64 인코딩과 유사한 방식으로 24자를 생성합니다. MIME base64 알파벳은 실제로 &lt;code&gt;[A-Za-z0-9+/]&lt;/code&gt; 이지만 &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;/&lt;/code&gt; URL로 특수하게 인코딩해야하므로 덜 바람직합니다. 모든 값은 네트워크 바이트 순서로 인코딩되므로 다른 바이트 순서의 아키텍처에서 인코딩을 비교할 수 있습니다. 인코딩의 실제 순서는 타임 스탬프, IP 주소, pid, 카운터입니다. 이 순서는 목적이 있지만 응용 프로그램에서 인코딩을 분석해서는 안된다는 점을 강조해야합니다. 애플리케이션은 인코딩 된 전체 &lt;code&gt;UNIQUE_ID&lt;/code&gt; 를 불투명 토큰으로 취급해야하며 , 이는 다른 &lt;code&gt;UNIQUE_ID&lt;/code&gt; 와 비교하여 동일하게 만 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e4551453abddb502bb59e340697e4eb6102d571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USR1&lt;/code&gt; or &lt;code&gt;graceful&lt;/code&gt; signal causes the parent process to &lt;em&gt;advise&lt;/em&gt; the children to exit after their current request (or to exit immediately if they're not serving anything). The parent re-reads its configuration files and re-opens its log files. As each child dies off the parent replaces it with a child from the new &lt;em&gt;generation&lt;/em&gt; of the configuration, which begins serving new requests immediately.</source>
          <target state="translated">&lt;code&gt;USR1&lt;/code&gt; 또는 &lt;code&gt;graceful&lt;/code&gt; 신호가있는 부모 프로세스가 발생 &lt;em&gt;조언&lt;/em&gt; 현재 요청 이후 출구 아이들 (혹은 현재 아무것도 처리하지 않을 경우 즉시 종료합니다). 부모는 구성 파일을 다시 읽고 로그 파일을 다시 엽니 다. 각 하위 항목이 종료되면 상위 구성 요소를 새로 &lt;em&gt;생성&lt;/em&gt; 한 구성 의 하위 항목으로 대체하여 새 요청을 즉시 제공합니다.</target>
        </trans-unit>
        <trans-unit id="eab3f96b1dceb7f15371b26b82413db8ecea1174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndefMacro&lt;/code&gt; directive undefines a macro which has been defined before hand.</source>
          <target state="translated">&lt;code&gt;UndefMacro&lt;/code&gt; 지시문 은 미리 정의 된 매크로를 정의 해제합니다.</target>
        </trans-unit>
        <trans-unit id="8751e152a533d0f2a265bd4dab53c0f1fc3b709f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Use&lt;/code&gt; directive controls the use of a macro. The specified macro is expanded. It must be given the same number of arguments as in the macro definition. The provided values are associated to their corresponding initial parameters and are substituted before processing.</source>
          <target state="translated">&lt;code&gt;Use&lt;/code&gt; 지침 컨트롤 매크로의 사용. 지정된 매크로가 확장됩니다. 매크로 정의에서와 동일한 수의 인수를 제공해야합니다. 제공된 값은 해당 초기 매개 변수와 연관되며 처리 전에 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="2336db4488ca47fcd3b9530b19a07a8aac9879e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;User&lt;/code&gt; directive sets the user ID as which the server will answer requests. In order to use this directive, the server must be run initially as &lt;code&gt;root&lt;/code&gt;. If you start the server as a non-root user, it will fail to change to the lesser privileged user, and will instead continue to run as that original user. If you do start the server as &lt;code&gt;root&lt;/code&gt;, then it is normal for the parent process to remain running as root. &lt;var&gt;Unix-userid&lt;/var&gt; is one of:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 지시어는 서버가 요청에 응답 할로 사용자 ID를 설정합니다. 이 지정 문을 사용하려면 서버를 초기에 &lt;code&gt;root&lt;/code&gt; 로 실행해야합니다 . 루트가 아닌 사용자로 서버를 시작하면 권한이 낮은 사용자로 변경되지 않고 원래 사용자로 계속 실행됩니다. 서버를 &lt;code&gt;root&lt;/code&gt; 로 시작하면 상위 프로세스가 루트로 실행되는 것이 정상입니다. &lt;var&gt;Unix-userid&lt;/var&gt; 는 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="b14c4cb9943a8831d01b690a2705edc11edab234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserDir&lt;/code&gt; directive sets the real directory in a user's home directory to use when a request for a document for a user is received. &lt;em&gt;Directory-filename&lt;/em&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;UserDir&lt;/code&gt; 을의 사용자의 문서에 대한 요청을 수신 할 때 지시어 사용에 대한 사용자의 홈 디렉토리에있는 실제 디렉토리를 설정합니다. &lt;em&gt;디렉토리 파일 이름&lt;/em&gt; 은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="7c5d5edcc599540d9f89a552f1c424981843aaa4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VHostGroup&lt;/code&gt; directive sets the Unix group under which the server will process requests to a virtualhost. The group is set before the request is processed and reset afterwards using &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;. Since the setting applies to the &lt;em&gt;process&lt;/em&gt;, this is not compatible with threaded MPMs.</source>
          <target state="translated">&lt;code&gt;VHostGroup&lt;/code&gt; 의 지시어는 서버가 가상 호스트에 대한 요청을 처리 할에서 유닉스 그룹을 설정합니다. 그룹은 요청이 처리되기 전에 설정되고 나중에 &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges를&lt;/a&gt; 사용하여 재설정 됩니다. 설정 이 &lt;em&gt;프로세스에&lt;/em&gt; 적용되므로 스레드 MPM과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fae1a6f48441fbe2b6013040d031d75b85df7781" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VHostUser&lt;/code&gt; directive sets the Unix userid under which the server will process requests to a virtualhost. The userid is set before the request is processed and reset afterwards using &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges&lt;/a&gt;. Since the setting applies to the &lt;em&gt;process&lt;/em&gt;, this is not compatible with threaded MPMs.</source>
          <target state="translated">&lt;code&gt;VHostUser&lt;/code&gt; 의 지시어는 서버가 가상 호스트에 대한 요청을 처리 할에서 유닉스 사용자 ID를 설정합니다. 사용자 ID는 요청이 처리되기 전에 설정되고 나중에 &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;Solaris Privileges를&lt;/a&gt; 사용하여 재설정 됩니다. 설정 이 &lt;em&gt;프로세스에&lt;/em&gt; 적용되므로 스레드 MPM과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4c9e075f2dbe3fea86c0f1a92c0e9de4e56ca7b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VersionSort&lt;/code&gt; keyword causes files containing version numbers to sort in a natural way. Strings are sorted as usual, except that substrings of digits in the name and description are compared according to their numeric value.</source>
          <target state="translated">&lt;code&gt;VersionSort&lt;/code&gt; 의 키워드는 자연적인 방법으로 종류에 버전 번호를 포함하는 파일을 발생합니다. 문자열은 이름과 설명에서 숫자의 하위 문자열이 숫자 값에 따라 비교되는 것을 제외하고는 평소와 같이 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="444ede4b5731332d9079d33327f1eebe36ba4fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; directive allows you to determine where Apache HTTP Server will find your documents based on the value of the server name. The result of expanding &lt;em&gt;interpolated-directory&lt;/em&gt; is used as the root of the document tree in a similar manner to the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive's argument. If &lt;em&gt;interpolated-directory&lt;/em&gt; is &lt;code&gt;none&lt;/code&gt; then &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; is turned off. This directive cannot be used in the same context as &lt;code&gt;&lt;a href=&quot;#virtualdocumentrootip&quot;&gt;VirtualDocumentRootIP&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VirtualDocumentRoot&lt;/code&gt; 지시어는 아파치 HTTP 서버 서버 이름의 값을 기반으로 문서를 찾을 위치를 확인할 수 있습니다. &lt;em&gt;보간 디렉토리&lt;/em&gt; 를 확장 한 결과 는 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 지시문의 인수 와 유사한 방식으로 문서 트리의 루트로 사용됩니다 . 경우 &lt;em&gt;보간 디렉토리가&lt;/em&gt; 있다 &lt;code&gt;none&lt;/code&gt; 다음 &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; 해제되지 않습니다. 이 지시문은 &lt;code&gt;&lt;a href=&quot;#virtualdocumentrootip&quot;&gt;VirtualDocumentRootIP&lt;/a&gt;&lt;/code&gt; 와 동일한 컨텍스트에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="917afe268f9c520c1fa0671a469c4bb372d1b62d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualDocumentRootIP&lt;/code&gt; directive is like the &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; directive, except that it uses the IP address of the server end of the connection for directory interpolation instead of the server name.</source>
          <target state="translated">&lt;code&gt;VirtualDocumentRootIP&lt;/code&gt; 지시어는 비슷 &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; 이 디렉토리 보간 대신 서버 이름에 대한 연결의 서버 측의 IP 주소를 사용하는 것을 제외하고, 지시어.</target>
        </trans-unit>
        <trans-unit id="da97c50277fc450af2d3ac974a7d672263c1a759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualScriptAlias&lt;/code&gt; directive allows you to determine where Apache httpd will find CGI scripts in a similar manner to &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; does for other documents. It matches requests for URIs starting &lt;code&gt;/cgi-bin/&lt;/code&gt;, much like &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt;&lt;code&gt;/cgi-bin/&lt;/code&gt; would.</source>
          <target state="translated">&lt;code&gt;VirtualScriptAlias&lt;/code&gt; 의 지시어에 아파치 아파치는 유사한 방식으로 CGI 스크립트를 찾을 위치를 확인할 수 있습니다 &lt;code&gt;&lt;a href=&quot;#virtualdocumentroot&quot;&gt;VirtualDocumentRoot&lt;/a&gt;&lt;/code&gt; 다른 문서에 대한 않습니다. &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; &lt;code&gt;/cgi-bin/&lt;/code&gt; 과 마찬가지로 &lt;code&gt;/cgi-bin/&lt;/code&gt; 시작하는 URI 요청과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="6e1606072017371433371432f98aead2ec403356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VirtualScriptAliasIP&lt;/code&gt; directive is like the &lt;code&gt;&lt;a href=&quot;#virtualscriptalias&quot;&gt;VirtualScriptAlias&lt;/a&gt;&lt;/code&gt; directive, except that it uses the IP address of the server end of the connection for directory interpolation instead of the server name.</source>
          <target state="translated">&lt;code&gt;VirtualScriptAliasIP&lt;/code&gt; 의 지시어는 같다 &lt;code&gt;&lt;a href=&quot;#virtualscriptalias&quot;&gt;VirtualScriptAlias&lt;/a&gt;&lt;/code&gt; 의 이 디렉토리 보간 대신 서버 이름에 대한 연결의 서버 측의 IP 주소를 사용하는 것을 제외하고, 지시어.</target>
        </trans-unit>
        <trans-unit id="734b3fb50208490ea0e8adaf520c427f34439803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WINCH&lt;/code&gt; or &lt;code&gt;graceful-stop&lt;/code&gt; signal causes the parent process to &lt;em&gt;advise&lt;/em&gt; the children to exit after their current request (or to exit immediately if they're not serving anything). The parent will then remove its &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; and cease listening on all ports. The parent will continue to run, and monitor children which are handling requests. Once all children have finalised and exited or the timeout specified by the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#gracefulshutdowntimeout&quot;&gt;GracefulShutdownTimeout&lt;/a&gt;&lt;/code&gt; has been reached, the parent will also exit. If the timeout is reached, any remaining children will be sent the &lt;code&gt;TERM&lt;/code&gt; signal to force them to exit.</source>
          <target state="translated">&lt;code&gt;WINCH&lt;/code&gt; 또는 &lt;code&gt;graceful-stop&lt;/code&gt; 신호가 부모 프로세스가 발생 &lt;em&gt;조언&lt;/em&gt; 현재 요청 이후 출구 아이들 (혹은 현재 아무것도 처리하지 않을 경우 즉시 종료합니다). 그러면 부모는 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; 을 제거하고 모든 포트에서 수신을 중단합니다. 부모는 계속 실행되며 요청을 처리하는 자식을 모니터링합니다. 모든 자식이 종료되고 종료되거나 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#gracefulshutdowntimeout&quot;&gt;GracefulShutdownTimeout&lt;/a&gt;&lt;/code&gt; 에 지정된 시간 초과 에 도달하면 부모도 종료됩니다. 시간 초과에 도달하면 나머지 어린이에게는 &lt;code&gt;TERM&lt;/code&gt; 신호 가 전송 되어 강제 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="c03f2bbc0779bd2e9065d3bd33c20444c3a88d0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XBitHack&lt;/code&gt; directive controls the parsing of ordinary html documents. This directive only affects files associated with the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIME-type&lt;/a&gt;&lt;code&gt;text/html&lt;/code&gt;. &lt;code&gt;XBitHack&lt;/code&gt; can take on the following values:</source>
          <target state="translated">&lt;code&gt;XBitHack&lt;/code&gt; 에 지시 컨트롤 일반 HTML 문서의 구문 분석. 이 지시문은 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIME 유형 &lt;/a&gt; &lt;code&gt;text/html&lt;/code&gt; 과 관련된 파일에만 영향을줍니다 . &lt;code&gt;XBitHack&lt;/code&gt; 은 다음 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c01566797ac73afcd10f2302cf0d94fbce4187a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XHTML&lt;/code&gt; keyword forces &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to emit XHTML 1.0 code instead of HTML 3.2. &lt;strong&gt;This option only has an effect if &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt; is also enabled.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;XHTML&lt;/code&gt; 키워드 힘은 &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; 가 대신 HTML 3.2의 XHTML 1.0 코드를 방출 할 수 있습니다. &lt;strong&gt;이 옵션은 &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt; &lt;code&gt;FancyIndexing&lt;/code&gt; &lt;/a&gt; 이 활성화 된 경우에만 적용됩니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a35c73a1ef64c13f1bc627aa47c5b884acbc2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[F]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; flag causes a 403 Forbidden response to be sent. Using this, you can deny access to a resource based on arbitrary criteria.</source>
          <target state="translated">&lt;code&gt;[F]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 의의 플래그는 403 금지 응답이 전송되도록한다. 이를 사용하면 임의의 기준에 따라 리소스에 대한 액세스를 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bd0333c0ee0046fa6c1cda8f702dbf34d032136" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all&lt;/code&gt; provider mimics the functionality that was previously provided by the 'Allow from all' and 'Deny from all' directives. This provider can take one of two arguments which are 'granted' or 'denied'. The following examples will grant or deny access to all requests.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; 공급자 모방 이전에 '모두에서 허용'을 제공하고 지침 '모두로부터 거부'된 기능을 제공합니다. 이 제공자는 '부여 된'또는 '거부 된'두 가지 인수 중 하나를 취할 수 있습니다. 다음 예제는 모든 요청에 ​​대한 액세스 권한을 부여하거나 거부합니다.</target>
        </trans-unit>
        <trans-unit id="bd0b79b0079949c892c972fa3ebc1cead05f6e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apachectl&lt;/code&gt; script can operate in two modes. First, it can act as a simple front-end to the &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command that simply sets any necessary environment variables and then invokes &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;, passing through any command line arguments. Second, &lt;code&gt;apachectl&lt;/code&gt; can act as a SysV init script, taking simple one-word arguments like &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, and &lt;code&gt;stop&lt;/code&gt;, and translating them into appropriate signals to &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apachectl&lt;/code&gt; 스크립트는 두 가지 모드로 작동 할 수 있습니다. 먼저, 필요한 환경 변수를 설정 한 다음 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 를 호출 하여 명령 행 인수를 전달 하는 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 명령 의 간단한 프론트 엔드 역할을 할 수 있습니다 . 둘째, &lt;code&gt;apachectl&lt;/code&gt; 은 SysV init 스크립트로 작동하여 &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;restart&lt;/code&gt; 및 &lt;code&gt;stop&lt;/code&gt; 과 같은 간단한 한 단어 인수를 취하여 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 에 적절한 신호로 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a99f4d6f5915d4c4c7f69951d653f85ca77a86dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apachectl&lt;/code&gt; script returns a 0 exit value on success, and &amp;gt;0 if an error occurs. For more details, view the comments in the script.</source>
          <target state="translated">&lt;code&gt;apachectl&lt;/code&gt; 오류가 발생하면 스크립트&amp;gt; 0 성공에 0 종료 값을 반환합니다. 자세한 내용은 스크립트에서 주석을보십시오.</target>
        </trans-unit>
        <trans-unit id="4220cb5bca1d9c24b575c682310eb73f1c8db4be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; are optional and have the following structure:</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; 선택 사항이며 다음과 같은 구조를 가지고 :</target>
        </trans-unit>
        <trans-unit id="a0828c6b1804f3d34408417d028b717ea554f273" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;balancer://&lt;/code&gt; scheme is what tells httpd that we are creating a balancer set, with the name &lt;em&gt;myset&lt;/em&gt;. It includes 2 backend servers, which httpd calls &lt;em&gt;BalancerMembers&lt;/em&gt;. In this case, any requests for &lt;code&gt;/images&lt;/code&gt; will be proxied to &lt;em&gt;one&lt;/em&gt; of the 2 backends. The &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; directive specifies that the &lt;em&gt;myset&lt;/em&gt; Balancer use a load balancing algorithm that balances based on I/O bytes.</source>
          <target state="translated">&lt;code&gt;balancer://&lt;/code&gt; 체계는 우리가 이름과 더불어, 균형 세트를 만드는 것을 아파치 알 것입니다 &lt;em&gt;요소인지&lt;/em&gt; . httpd가 &lt;em&gt;BalancerMembers를&lt;/em&gt; 호출하는 2 개의 백엔드 서버를 포함합니다 . 이 경우 &lt;code&gt;/images&lt;/code&gt; 요청 은 두 백엔드 &lt;em&gt;중 하나로&lt;/em&gt; 프록시됩니다 . &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; 의 것을 지시 지정하는 &lt;em&gt;요소인지&lt;/em&gt; 분산 잔액이 / O 바이트 I를 기반으로하는로드 밸런싱 알고리즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d63d27e77d3a712de9a0bb56620d0a03af45f238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brk(2)&lt;/code&gt; calls allocate memory from the heap. It is rare to see these in a system call trace, because the httpd uses custom memory allocators (&lt;code&gt;apr_pool&lt;/code&gt; and &lt;code&gt;apr_bucket_alloc&lt;/code&gt;) for most request processing. In this trace, the httpd has just been started, so it must call &lt;code&gt;malloc(3)&lt;/code&gt; to get the blocks of raw memory with which to create the custom memory allocators.</source>
          <target state="translated">&lt;code&gt;brk(2)&lt;/code&gt; 호출은 힙에서 메모리를 할당합니다. httpd는 대부분의 요청 처리에 사용자 정의 메모리 할당 자 ( &lt;code&gt;apr_pool&lt;/code&gt; 및 &lt;code&gt;apr_bucket_alloc&lt;/code&gt; )를 사용하기 때문에 시스템 호출 추적에서이를 볼 수 없습니다 . 이 추적에서 httpd가 방금 시작되었으므로 &lt;code&gt;malloc(3)&lt;/code&gt; 을 호출 하여 사용자 정의 메모리 할당자를 작성할 원시 메모리 블록을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="c225021d791963e9c8d4e3984033a3d5a33c8b5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_forensic&lt;/code&gt; script takes as its argument the name of the logfile. It looks for those &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt; ID pairs and complains if a request was not completed.</source>
          <target state="translated">&lt;code&gt;check_forensic&lt;/code&gt; 스크립트의 인수로 로그 파일의 이름을 사용합니다. 그것은 사람을 찾습니다 &lt;code&gt;+&lt;/code&gt; / &lt;code&gt;-&lt;/code&gt; ID 쌍과 요청이 완료되지 않은 경우를 뿌려줍니다.</target>
        </trans-unit>
        <trans-unit id="517fd8345fddc43d0a96b2c95bcf594db5bdae2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_forensic&lt;/code&gt; script, which can be found in the distribution's support directory, may be helpful in evaluating the forensic log output.</source>
          <target state="translated">&lt;code&gt;check_forensic&lt;/code&gt; 분포의 지원 디렉토리에서 찾을 수 있습니다 스크립트, 법의학 로그 출력을 평가하는데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c30a9b0597bd0bc03d77d8ab64e3a2be6211833a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmd=&lt;/code&gt; keyword allows you to specify the external command to run. If there are arguments after the program name, the command line should be surrounded in quotation marks (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;cmd=&quot;/bin/mypgm arg1 arg2&quot;&lt;/code&gt;.) Normal shell quoting is not necessary since the program is run directly, bypassing the shell. Program arguments are blank-delimited. A backslash can be used to escape blanks which should be part of a program argument. Any backslashes which are part of the argument must be escaped with backslash themselves. In addition to the standard CGI environment variables, DOCUMENT_URI, DOCUMENT_PATH_INFO, and QUERY_STRING_UNESCAPED will also be set for the program.</source>
          <target state="translated">&lt;code&gt;cmd=&lt;/code&gt; 키워드는 외부 명령을 실행하는 데 지정할 수 있습니다. 프로그램 이름 뒤에 인자가있는 경우, 명령 줄은 따옴표로 묶어야한다 ( &lt;em&gt;예를 들어&lt;/em&gt; , &lt;code&gt;cmd=&quot;/bin/mypgm arg1 arg2&quot;&lt;/code&gt; .)이 쉘을 거치지 않고 직접 프로그램을 실행하기 때문에 인용 일반 쉘이 필요하지 않습니다를. 프로그램 인수는 공백으로 구분됩니다. 백 슬래시는 프로그램 인수의 일부인 공백을 이스케이프 처리하는 데 사용할 수 있습니다. 인수의 일부인 모든 백 슬래시는 백 슬래시 자체로 이스케이프되어야합니다. 표준 CGI 환경 변수 외에도 DOCUMENT_URI, DOCUMENT_PATH_INFO 및 QUERY_STRING_UNESCAPED도 프로그램에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b0c4e063dffd8cd18c84ddf8b6f43f39803a69e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; script configures the source tree for compiling and installing the Apache HTTP Server on your particular platform. Various options allow the compilation of a server corresponding to your personal requirements.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 스크립트를 컴파일하고 특정 플랫폼에서 아파치 HTTP 서버를 설치하기 위해 소스 트리를 구성한다. 다양한 옵션을 통해 개인 요구 사항에 맞는 서버를 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c6f2beb1809646b94763ccdf31aab0e8ac9a625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; script is run normally but does not create output files. This is useful to check the test results before generating makefiles for compilation.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 스크립트를 정상적으로 실행하지만, 출력 파일을 생성하지 않습니다. 컴파일 할 메이크 파일을 생성하기 전에 테스트 결과를 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0dcdc1ff3efae35adbb8d3b18d2ff20ab30b5724" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content-length&lt;/code&gt; header is extremely important. If it is present and non-zero, the container assumes that the request has a body (a POST request, for example), and immediately reads a separate packet off the input stream to get that body.</source>
          <target state="translated">&lt;code&gt;content-length&lt;/code&gt; 헤더는 매우 중요합니다. 존재하고 0이 아닌 경우 컨테이너는 요청에 본문 (예 : POST 요청)이 있다고 가정하고 해당 본문을 가져 오기 위해 입력 스트림에서 별도의 패킷을 즉시 읽습니다.</target>
        </trans-unit>
        <trans-unit id="c0d8a6c49e42f57c893847a8cde57153acfbec80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;servlet_path&lt;/code&gt; are not currently set by the C code, and most of the Java code completely ignores whatever is sent over for those fields (and some of it will actually break if a string is sent along after one of those codes). I don't know if this is a bug or an unimplemented feature or just vestigial code, but it's missing from both sides of the connection.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 및 &lt;code&gt;servlet_path&lt;/code&gt; 는 현재 C 코드로 설정하고 있지 않습니다 그 필드를 통해 전송됩니다 (그리고 문자열이 그 코드 중 하나를 한 뒤, 전송되는 경우 중 일부는 실제로 휴식 것입니다) 어떤 자바 코드의 대부분을 완전히 무시합니다. 이것이 버그인지 또는 구현되지 않은 기능인지 또는 흔적 코드인지는 알 수 없지만 연결의 양쪽에서 누락되었습니다.</target>
        </trans-unit>
        <trans-unit id="91dde60dc9fc4e6193d0fa157a264990acdd2fa9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective.</source>
          <target state="translated">&lt;code&gt;decoding&lt;/code&gt; 특성이 있어야 &lt;em&gt;앞에&lt;/em&gt; 해당 &lt;code&gt;var&lt;/code&gt; 에 효과가 속성을.</target>
        </trans-unit>
        <trans-unit id="c44af2f4ceeb2eceb930dad21f49aa27871a4408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disabled&lt;/code&gt; argument is available in version 2.4.4 and later</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; 인수 버전에서 사용할 수 2.4.4 이상</target>
        </trans-unit>
        <trans-unit id="9d7df019108123d0423c259fe0b6fcc986c7f8e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;echo&lt;/code&gt; function just spits out the value of a variable. There are a number of standard variables, which include the whole set of environment variables that are available to CGI programs. Also, you can define your own variables with the &lt;code&gt;set&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; 기능은 변수의 값을 그대로 출력한다. CGI 프로그램에 사용 가능한 전체 환경 변수 세트를 포함하는 여러 표준 변수가 있습니다. 또한 &lt;code&gt;set&lt;/code&gt; 함수를 사용하여 고유 한 변수를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="600ef0db97a7c5a2c3ce893884083d04c2328908" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elif&lt;/code&gt; or &lt;code&gt;else&lt;/code&gt; statements are used to put text into the output stream if the original &lt;var&gt;test_condition&lt;/var&gt; was false. These elements are optional.</source>
          <target state="translated">&lt;code&gt;elif&lt;/code&gt; 또는 &lt;code&gt;else&lt;/code&gt; 원래의 경우 문은 출력 스트림에 텍스트를 넣어하는 데 사용됩니다 &lt;var&gt;test_condition&lt;/var&gt; 은 거짓이었다. 이 요소는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="bbf5dd2b990a3662f2dbdbdd1d3ba0c365c97507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; 속성이 있어야 &lt;em&gt;앞에&lt;/em&gt; 해당 &lt;code&gt;var&lt;/code&gt; 에 효과가 속성을.</target>
        </trans-unit>
        <trans-unit id="ba9cdd8b1f37a7503adddf9b4e109212d894410c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endif&lt;/code&gt; element ends the &lt;code&gt;if&lt;/code&gt; element and is required.</source>
          <target state="translated">&lt;code&gt;endif&lt;/code&gt; 요소 양단 &lt;code&gt;if&lt;/code&gt; 요소 및 요구된다.</target>
        </trans-unit>
        <trans-unit id="6e9c20e7e3d615209388db5d7ad9e239c075ac1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; provider allows access to the server to be controlled based on the existence of an &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;. When &lt;code&gt;Require env env-variable&lt;/code&gt; is specified, then the request is allowed access if the environment variable &lt;var&gt;env-variable&lt;/var&gt; exists. The server provides the ability to set environment variables in a flexible way based on characteristics of the client request using the directives provided by &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt;. Therefore, this directive can be used to allow access based on such factors as the clients &lt;code&gt;User-Agent&lt;/code&gt; (browser type), &lt;code&gt;Referer&lt;/code&gt;, or other HTTP request header fields.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 제공자는 서버에 대한 액세스가 존재에 기초하여 제어 할 수 있도록 &lt;a href=&quot;../env&quot;&gt;환경 변수&lt;/a&gt; . 때 &lt;code&gt;Require env env-variable&lt;/code&gt; 지정된 환경 변수의 경우, 요청은 액세스가 허용 된 &lt;var&gt;env-variable&lt;/var&gt; 존재한다. 서버는 &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; 가 제공하는 지시문을 사용하여 클라이언트 요청의 특성에 따라 유연한 방식으로 환경 변수를 설정하는 기능을 제공합니다 . 따라서이 지시문은 클라이언트 &lt;code&gt;User-Agent&lt;/code&gt; (브라우저 유형), &lt;code&gt;Referer&lt;/code&gt; 또는 기타 HTTP 요청 헤더 필드 와 같은 요소를 기반으로 액세스를 허용하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d5d02467532d68463fe512d3c1476fa1342f6bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exec&lt;/code&gt; command executes a given shell command or CGI script. It requires &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; to be present in the server. If &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;IncludesNOEXEC&lt;/code&gt; is set, this command is completely disabled. The valid attributes are:</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 명령은 주어진 쉘 명령이나 CGI 스크립트를 실행합니다. 그것은 필요 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 를이 서버에 존재하는. 경우 &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; &lt;code&gt;IncludesNOEXEC&lt;/code&gt; 가 설정되어,이 명령은 완전히 비활성화됩니다. 유효한 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b9f0f2278bf82c467b635f441d7b549c32db75b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expr&lt;/code&gt; provider allows basing authorization decisions on arbitrary expressions.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 제공자는 임의의 표현에 대한 권한 결정을 근거로 허용한다.</target>
        </trans-unit>
        <trans-unit id="519ffa7460ce3877670103f04a4f0d801bd2abe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;f&lt;/code&gt; flag causes &lt;code&gt;mod_substitute&lt;/code&gt; to flatten the result of a substitution allowing for later substitutions to take place on the boundary of this one. This is the default.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 플래그 원인은 &lt;code&gt;mod_substitute&lt;/code&gt; 나중에 대체이 하나의 경계에 자리를 차지할 허용 대체의 결과를 평평하게. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="9ed8659d7321a3dcffdd6b1b98528d5b91f49d3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider allows access to the server to be controlled based on simple host names. When &lt;code&gt;Require forward-dns host-name&lt;/code&gt; is specified, all IP addresses corresponding to &lt;code&gt;host-name&lt;/code&gt; are allowed access.</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; 제공자는 서버에 대한 액세스가 간단한 호스트 이름에 기초하여 제어 될 수있다. 때 &lt;code&gt;Require forward-dns host-name&lt;/code&gt; 지정,에 해당하는 모든 IP 주소 &lt;code&gt;host-name&lt;/code&gt; 액세스가 허용된다.</target>
        </trans-unit>
        <trans-unit id="287683b88d48a7fc90a3507327b921f2d5d2b377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider was addded in 2.4.19</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; 제공자는 2.4.19에를 CH3OH했다</target>
        </trans-unit>
        <trans-unit id="0d08c53d2de1bb3e380909571012bd962aa736d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward-dns&lt;/code&gt; provider was added in 2.4.19.</source>
          <target state="translated">&lt;code&gt;forward-dns&lt;/code&gt; 제공자는 2.4.19에서 추가되었다.</target>
        </trans-unit>
        <trans-unit id="bad9c009b00fbfad81fcb426a6001dfa6bea37d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;graceful-stop&lt;/code&gt; signal allows you to run multiple identically configured instances of &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; at the same time. This is a powerful feature when performing graceful upgrades of httpd, however it can also cause deadlocks and race conditions with some configurations.</source>
          <target state="translated">&lt;code&gt;graceful-stop&lt;/code&gt; 신호는 여러 개의 동일하게 구성된 경우 실행할 수있는 &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 동시에. 이는 httpd를 정상적으로 업그레이드 할 때 강력한 기능이지만 일부 구성에서는 교착 상태 및 경쟁 조건이 발생할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dee12235896af424f5a5b8b7bffbf0d894bc79b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gzip&lt;/code&gt; encoding is the only one supported to ensure complete compatibility with old browser implementations. The &lt;code&gt;deflate&lt;/code&gt; encoding is not supported, please check the &lt;a href=&quot;http://www.gzip.org/zlib/zlib_faq.html#faq38&quot;&gt;zlib's documentation&lt;/a&gt; for a complete explanation.</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; 인코딩은 오래된 브라우저 구현과 완벽한 호환성을 보장하기 위해 지원되는 유일한 하나입니다. &lt;code&gt;deflate&lt;/code&gt; 인코딩이 지원되지 않습니다 확인하시기 바랍니다 &lt;a href=&quot;http://www.gzip.org/zlib/zlib_faq.html#faq38&quot;&gt;ZLIB의 문서를&lt;/a&gt; 완전한 설명.</target>
        </trans-unit>
        <trans-unit id="36768e72ac001f70728fbb40249dfe916f2b77fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host&lt;/code&gt; provider allows access to the server to be controlled based on the host name of the remote client. When &lt;code&gt;Require host host-name&lt;/code&gt; is specified, then the request is allowed access if the host name matches.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 공급자가 서버에 대한 액세스가 원격 클라이언트의 호스트 이름을 기반으로 제어 할 수 있습니다. 때 &lt;code&gt;Require host host-name&lt;/code&gt; 지정하면 요청은 호스트 이름과 일치하면 액세스가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="f760aefdaec17a0b57d8dac3c5afc75a969f21c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpd.conf&lt;/code&gt; should contain the following:</source>
          <target state="translated">&lt;code&gt;httpd.conf&lt;/code&gt; 다음을 포함한다 :</target>
        </trans-unit>
        <trans-unit id="0e5f9eb28c2d13d76a9ee5f25314e3118737ccd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpd&lt;/code&gt; RPM is the only RPM necessary to get a basic server to run. Install it as follows:</source>
          <target state="translated">&lt;code&gt;httpd&lt;/code&gt; RPM은 기본 서버가 실행에 도착하는 데 필요한 유일한 RPM입니다. 다음과 같이 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e6647b85dccf2c127f8f4ea48d03ed4614f09367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpready&lt;/code&gt; accept filter buffers entire HTTP requests at the kernel level. Once an entire request is received, the kernel then sends it to the server. See the &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt; accf_http(9)&lt;/a&gt; man page for more details. Since HTTPS requests are encrypted, only the &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt; accf_data(9)&lt;/a&gt; filter is used.</source>
          <target state="translated">&lt;code&gt;httpready&lt;/code&gt; 커널 수준에서 필터 버퍼를 받아 전체 HTTP 요청. 전체 요청이 수신되면 커널은 요청을 서버로 보냅니다. 자세한 내용은 &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt;accf_http (9)&lt;/a&gt; 매뉴얼 페이지를 참조하십시오. HTTPS 요청은 암호화되므로 &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt;accf_data (9)&lt;/a&gt; 필터 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d9b575ff20e5cc20e80db3e1a6ee787f275c29bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;httpready&lt;/code&gt; accept filter buffers entire HTTP requests at the kernel level. Once an entire request is received, the kernel then sends it to the server. See the &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_http&amp;amp;sektion=9&quot;&gt; accf_http(9)&lt;/a&gt; man page for more details. Since HTTPS requests are encrypted, only the &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=accf_data&amp;amp;sektion=9&quot;&gt; accf_data(9)&lt;/a&gt; filter is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417f65e59a3fa1d74a869960621e550a319b5ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; element works like an if statement in a programming language. The test condition is evaluated and if the result is true, then the text until the next &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; or &lt;code&gt;endif&lt;/code&gt; element is included in the output stream.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 요소는 프로그래밍 언어의 if 문처럼 작동합니다. 테스트 조건을 평가하고 평가 결과에 해당하는 경우, 그 다음까지 텍스트 &lt;code&gt;elif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; 또는 &lt;code&gt;endif&lt;/code&gt; 요소는 출력 스트림에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffa2a51a5df563dabf521d45298f54768d41470c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip&lt;/code&gt; provider allows access to the server to be controlled based on the IP address of the remote client. When &lt;code&gt;Require ip ip-address&lt;/code&gt; is specified, then the request is allowed access if the IP address matches.</source>
          <target state="translated">&lt;code&gt;ip&lt;/code&gt; 공급자가 서버에 대한 액세스가 원격 클라이언트의 IP 주소를 기반으로 제어 할 수 있습니다. 때 &lt;code&gt;Require ip ip-address&lt;/code&gt; 지정하면 요청은 IP 주소와 일치 할 경우 액세스가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="b39040b0e170c28feb000270a626b492afe4b569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jvm_route&lt;/code&gt;, is used to support sticky sessions -- associating a user's sesson with a particular Tomcat instance in the presence of multiple, load-balancing servers.</source>
          <target state="translated">&lt;code&gt;jvm_route&lt;/code&gt; 는 여러로드 밸런싱 서버의 존재에서 특정 톰캣 인스턴스 사용자의 sesson을 연결 - 끈적 세션을 지원하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad730cd9c16042cbd2cffd586d8c8fa3c0a6746d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local&lt;/code&gt; provider allows access to the server if any of the following conditions is true:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 다음 조건 중 하나에 해당하는 경우 공급자가 서버에 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="706675c546c2f0db644ce1fb2529aab5cf637d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; provider allows using the HTTP method in authorization decisions. The GET and HEAD methods are treated as equivalent. The TRACE method is not available to this provider, use &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 제공자는 권한 부여 결정에 HTTP 방법을 사용 할 수 있습니다. GET 및 HEAD 방법은 동등한 것으로 취급됩니다. 이 제공자는 TRACE 메소드를 사용할 수 없습니다 . 대신 &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="69db8b7e947cc6b392579214b9e173880f9f1332" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;monitor&lt;/code&gt; and &lt;code&gt;fatal_exception&lt;/code&gt; hooks are not currently implemented.</source>
          <target state="translated">&lt;code&gt;monitor&lt;/code&gt; 및 &lt;code&gt;fatal_exception&lt;/code&gt; 후크는 현재 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e4ba792e9efba5f926a7e5deaea1e31ae52e5e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;no-cache&lt;/code&gt; environment variable can be set to disable caching on a finer grained set of resources in versions 2.2.12 and later.</source>
          <target state="translated">&lt;code&gt;no-cache&lt;/code&gt; 환경 변수는 버전 2.2.12 이후에 자원의 미세한 그레인 세트 캐시를 사용하지 않도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="706c2f9ab497081a825579c8400d01f21dd4bae6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;none&lt;/code&gt; keyword resets any already set options.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 키워드 재설정은 이미 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eecb89ed75e26637ed01710db8949895927b7470" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plus&lt;/code&gt; keyword is optional. &lt;var&gt;num&lt;/var&gt; should be an integer value [acceptable to &lt;code&gt;atoi()&lt;/code&gt;], and &lt;var&gt;type&lt;/var&gt; is one of:</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; 키워드는 선택 사항입니다. &lt;var&gt;num&lt;/var&gt; 은 [ &lt;code&gt;atoi()&lt;/code&gt; 허용되는 ] 정수 값이어야하며 &lt;var&gt;type&lt;/var&gt; 은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="a2ad6ca23580371aebffe259759e6ff5adc299d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;q&lt;/code&gt; flag causes &lt;code&gt;mod_substitute&lt;/code&gt; to not flatten the buckets after each substitution. This can result in much faster response and a decrease in memory utilization, but should only be used if there is no possibility that the result of one substitution will ever match a pattern or regex of a subsequent one.</source>
          <target state="translated">&lt;code&gt;q&lt;/code&gt; 플래그 원인은 &lt;code&gt;mod_substitute&lt;/code&gt; 각 교체 후 버킷을 평평하지. 이로 인해 응답 속도가 훨씬 빨라지고 메모리 사용률이 감소 할 수 있지만 한 번의 대체 결과가 후속 패턴의 정규식이나 정규식과 일치 할 가능성이없는 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5721ac1905e9cd28438ea0eba7811e35672cbe4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_string&lt;/code&gt;, &lt;code&gt;ssl_cert&lt;/code&gt;, &lt;code&gt;ssl_cipher&lt;/code&gt;, and &lt;code&gt;ssl_session&lt;/code&gt; refer to the corresponding pieces of HTTP and HTTPS.</source>
          <target state="translated">&lt;code&gt;query_string&lt;/code&gt; , &lt;code&gt;ssl_cert&lt;/code&gt; , &lt;code&gt;ssl_cipher&lt;/code&gt; 및 &lt;code&gt;ssl_session&lt;/code&gt; 는 HTTP 및 HTTPS의 해당 부분을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="999a58bfee7a645cbfa15db71fb1835185812f02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote_user&lt;/code&gt; and &lt;code&gt;auth_type&lt;/code&gt; presumably refer to HTTP-level authentication, and communicate the remote user's username and the type of authentication used to establish their identity (e.g. Basic, Digest).</source>
          <target state="translated">&lt;code&gt;remote_user&lt;/code&gt; 및 &lt;code&gt;auth_type&lt;/code&gt; 아마도 HTTP 수준 인증을 참조하고, 원격 사용자의 사용자 이름을 전달하고 인증 유형은 자신의 정체성 (예 : 기본, 다이제스트)를 설정하는 데 사용.</target>
        </trans-unit>
        <trans-unit id="56e382f0fa2baa2c97ff152fbc56b983a8113d6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;req_novary&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt; is available for versions 2.4.4 and later.</source>
          <target state="translated">&lt;code&gt;req_novary&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;기능은&lt;/a&gt; 버전 2.4.4 이상에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6628c6c034fad21ad9e625b988f60a87703c38f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request_headers&lt;/code&gt; have the following structure:</source>
          <target state="translated">&lt;code&gt;request_headers&lt;/code&gt; 는 다음과 같은 구조를 가지고 :</target>
        </trans-unit>
        <trans-unit id="455b85eb8eaf542606e802f14c49dc6b9d32653a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;server-status&lt;/code&gt; page may be used as a starting place for troubleshooting a situation where your server is consuming all available resources (CPU or memory), and you wish to identify which requests or clients are causing the problem.</source>
          <target state="translated">&lt;code&gt;server-status&lt;/code&gt; 페이지는 서버가 사용 가능한 모든 자원 (CPU 또는 메모리)이 소요되는 상황을 해결하기위한 출발점으로 사용할 수 있으며, 당신이 요청하거나 클라이언트가 문제의 원인이되는 확인하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="fb0c0d84617e2c992cdbb35f909b653ad4455497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;server.csr&lt;/code&gt; file is no longer needed.</source>
          <target state="translated">&lt;code&gt;server.csr&lt;/code&gt; 의 파일은 더 이상 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f016567432e419f64d52ebea75592fdc18d6a77a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setrlimit(RLIMIT_NOFILE)&lt;/code&gt; call does not function on your system (such as Solaris 2.3)</source>
          <target state="translated">시스템에서 &lt;code&gt;setrlimit(RLIMIT_NOFILE)&lt;/code&gt; 호출이 작동하지 않습니다 (예 : Solaris 2.3)</target>
        </trans-unit>
        <trans-unit id="4e66e077f88db0dae4140d62240bb756cf358a86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl-cache&lt;/code&gt; mutex is used to serialize access to the session cache to prevent corruption. This mutex can be configured using the &lt;code&gt;&lt;a href=&quot;core#mutex&quot;&gt;Mutex&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ssl-cache&lt;/code&gt; 뮤텍스는 손상을 방지하기 위해 세션 캐시에 직렬화 액세스하는 데 사용됩니다. 이 뮤텍스는 &lt;code&gt;&lt;a href=&quot;core#mutex&quot;&gt;Mutex&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79cc764fefff45c747b4faa9c805f20ba277eeed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; provider allows access if the user is authenticated with a valid client certificate. This is only useful if &lt;code&gt;SSLVerifyClient optional&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 사용자가 유효한 클라이언트 인증서로 인증 된 경우 제공자는 액세스 할 수 있습니다. 이것은 &lt;code&gt;SSLVerifyClient optional&lt;/code&gt; 이 유효한 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="ea8f99064b946aeb7bcabd7d6d6e5fe53dd5e843" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; provider denies access if a connection is not encrypted with SSL. This is similar to the &lt;code&gt;SSLRequireSSL&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 연결이 SSL로 암호화되어 있지 않은 경우 제공자는 액세스를 거부합니다. 이것은 &lt;code&gt;SSLRequireSSL&lt;/code&gt; 지시문 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="525b5915e105c2ff61d3e7687af46610b61db10d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vhost.map&lt;/code&gt; file should look something like this:</source>
          <target state="translated">&lt;code&gt;vhost.map&lt;/code&gt; 의 파일은 다음과 같이 보일 것이다 :</target>
        </trans-unit>
        <trans-unit id="9bbbc6c26883b9b91bd55d94e69575c2083d04b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;virtual&lt;/code&gt; modifier and handler passing were introduced in Apache 2.1</source>
          <target state="translated">&lt;code&gt;virtual&lt;/code&gt; 수정 자와 핸들러는 아파치 2.1 도입</target>
        </trans-unit>
        <trans-unit id="20f0deb611dfc8e62e2f027e493c80c19e17c460" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;IP lookup&lt;/em&gt; described above is only done &lt;em&gt;once&lt;/em&gt; for a particular TCP/IP session while the &lt;em&gt;name lookup&lt;/em&gt; is done on &lt;em&gt;every&lt;/em&gt; request during a KeepAlive/persistent connection. In other words, a client may request pages from different name-based vhosts during a single persistent connection.</source>
          <target state="translated">&lt;em&gt;조회 IP&lt;/em&gt; 위에서 설명한 만 완료 &lt;em&gt;되면&lt;/em&gt; 그동안 특정 TCP / IP 세션 &lt;em&gt;이름 조회가&lt;/em&gt; 이루어집니다 &lt;em&gt;모든&lt;/em&gt; 킵 얼라이브 / 영구 연결시 요청. 즉, 클라이언트는 단일 영구 연결 중에 다른 이름 기반 가상 호스트에서 페이지를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb425937891118904ccde0916208ad803ca0c49f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically greater than or equal to the &lt;em&gt;CondPattern&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . 경우는 true &lt;em&gt;TestString에이&lt;/em&gt; 받는 같거나보다 큰 수치의 &lt;em&gt;CondPattern&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="50e5480fb38241d8dd3d5b454cafc92275040b9c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically greater than the &lt;em&gt;CondPattern&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . 경우는 true &lt;em&gt;TestString에이&lt;/em&gt; 댄 큰 수치의 &lt;em&gt;CondPattern&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="eea6a176750d95890ee1193974ac2146b1fb86f2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically less than or equal to the &lt;em&gt;CondPattern&lt;/em&gt;. Avoid confusion with the &lt;strong&gt;-l&lt;/strong&gt; by using the &lt;strong&gt;-L&lt;/strong&gt; or &lt;strong&gt;-h&lt;/strong&gt; variant.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . 경우는 true &lt;em&gt;TestString에이&lt;/em&gt; 보다 작은 수치의 나에 동일 &lt;em&gt;CondPattern&lt;/em&gt; . &lt;strong&gt;-L&lt;/strong&gt; 또는 &lt;strong&gt;-h&lt;/strong&gt; 변형 을 사용하여 &lt;strong&gt;-l&lt;/strong&gt; 과 혼동하지 마십시오 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1a3c3278373d068bcbd4d99f70ef3714f3a6a2c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the &lt;em&gt;TestString&lt;/em&gt; is numerically less than the &lt;em&gt;CondPattern&lt;/em&gt;. Avoid confusion with the &lt;strong&gt;-l&lt;/strong&gt; by using the &lt;strong&gt;-L&lt;/strong&gt; or &lt;strong&gt;-h&lt;/strong&gt; variant.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . &lt;em&gt;TestString&lt;/em&gt; 이 숫자가 &lt;em&gt;CondPattern&lt;/em&gt; 보다 작은 경우 True 입니다. &lt;strong&gt;-L&lt;/strong&gt; 또는 &lt;strong&gt;-h&lt;/strong&gt; 변형 을 사용하여 &lt;strong&gt;-l&lt;/strong&gt; 과 혼동하지 마십시오 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8d2a29e95c0e2bf5a1738e21928b19a648f1291" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the two are numerically different. This is equivalent to &lt;code&gt;!-eq&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . 두 숫자가 다른 경우 true입니다. 이것은 &lt;code&gt;!-eq&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a29932a5887bb1e6fa4f11eac74a59329683d0f1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;TestString&lt;/em&gt; is treated as an integer, and is numerically compared to the &lt;em&gt;CondPattern&lt;/em&gt;. True if the two are numerically equal.</source>
          <target state="translated">&lt;em&gt;TestString에가&lt;/em&gt; 정수로 간주되고, 수치와 비교된다 &lt;em&gt;CondPattern&lt;/em&gt; . 두 숫자가 같으면 참입니다.</target>
        </trans-unit>
        <trans-unit id="b104f058235232ed464d9c9e50bb33150918d09a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ap_expr&lt;/em&gt; expression is intended to replace most other expression variants in HTTPD. For example, the deprecated &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; expressions can be replaced by &lt;a href=&quot;mod/mod_authz_core#reqexpr&quot;&gt;Require expr&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ap_expr의&lt;/em&gt; 발현은 대부분의 다른 표현 HTTPD 변종 대체하기위한 것입니다. 예를 들어, 더 이상 사용되지 않는 &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; 표현식은 &lt;a href=&quot;mod/mod_authz_core#reqexpr&quot;&gt;expr 필요&lt;/a&gt; 로 대체 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afee8b0c0d99cb5425b2aa3abed9966b361760c7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ap_expr&lt;/em&gt; syntax is mostly a superset of the syntax of the deprecated &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; directive. The differences are described in &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt;'s documentation.</source>
          <target state="translated">&lt;em&gt;ap_expr의&lt;/em&gt; 구문은 대부분 사용되지 않는 구문의 상위 집합입니다 &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; 의 지시어. 차이점은 &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; 문서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="50684dc8361d08dc442328f3a3c00fd209914a84" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dir&lt;/em&gt; argument to &lt;code&gt;INSTDIR&lt;/code&gt; provides the installation directory; it can be omitted if Apache is to be installed into &lt;code&gt;\Apache22&lt;/code&gt; (of the current drive).</source>
          <target state="translated">&lt;em&gt;디렉터리&lt;/em&gt; 에 인수 &lt;code&gt;INSTDIR&lt;/code&gt; 은 설치 디렉토리를 제공한다; Apache가 현재 드라이브의 &lt;code&gt;\Apache22&lt;/code&gt; 설치되는 경우 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e9a20a01b6c5c55f1638681a3a804ef4fb4e3b3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; is parsed into an internal machine representation when the configuration is loaded, and then evaluated during request processing. In .htaccess context, the &lt;em&gt;expression&lt;/em&gt; is both parsed and executed each time the .htaccess file is encountered during request processing.</source>
          <target state="translated">&lt;em&gt;식은&lt;/em&gt; 구성을로드하고 요청 처리 동안 평가 될 때 내부 시스템 표현으로 해석된다. .htaccess 컨텍스트에서, 요청 처리 중에 .htaccess 파일이 발견 될 때마다 &lt;em&gt;표현식&lt;/em&gt; 이 구문 분석되고 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="35a9034e28d47656397b9564f477fabfacdd1831" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; must match the following syntax (given as a BNF grammar notation):</source>
          <target state="translated">&lt;em&gt;표현은&lt;/em&gt; 다음 구문을 (A BNF 문법 표기법으로 주어)와 일치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="31287d76b4fe769d9569a255b0b5f36ae1b5e719" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filesystem&lt;/em&gt; path to the directory containing the &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;, suffixed by the relative substitution is also valid as a URL path on the server (this is rare).</source>
          <target state="translated">상대 대체로 접미사가 붙은 &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 을 포함하는 디렉토리 의 &lt;em&gt;파일 시스템&lt;/em&gt; 경로 는 서버의 URL 경로로도 유효합니다 (드문 경우).</target>
        </trans-unit>
        <trans-unit id="f9733ceb8bb33cd6697076e3a378731d07f5f0d5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flag&lt;/em&gt;&lt;code&gt;no_crl_for_cert_ok&lt;/code&gt; allows to restore previous behaviour.</source>
          <target state="translated">&lt;em&gt;플래그 &lt;/em&gt; &lt;code&gt;no_crl_for_cert_ok&lt;/code&gt; 는 이전 동작을 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e7d72685a5d824b8baa2b6f9335254ddf0af646" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ldap-attribute&lt;/em&gt;, &lt;em&gt;ldap-user&lt;/em&gt;, and &lt;em&gt;ldap-group&lt;/em&gt; (single-level only) authorization checks use comparisons.</source>
          <target state="translated">&lt;em&gt;LDAP-특성&lt;/em&gt; , &lt;em&gt;LDAP 사용자&lt;/em&gt; 및 &lt;em&gt;LDAP 그룹&lt;/em&gt; (단일 레벨에만) 인증 체크는 비교를 사용한다.</target>
        </trans-unit>
        <trans-unit id="e432aeaa54add6211e15a36a282f1ef780f87609" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ldap-filter&lt;/em&gt; and &lt;em&gt;ldap-dn&lt;/em&gt; authorization checks use searches.</source>
          <target state="translated">&lt;em&gt;LDAP 필터&lt;/em&gt; 및 &lt;em&gt;LDAP DN-&lt;/em&gt; 인증 체크는 검색어를 사용한다.</target>
        </trans-unit>
        <trans-unit id="09c4ba4c5210f411757f7908935454d7f4377e09" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;suEXEC&lt;/strong&gt; feature provides users of the Apache HTTP Server the ability to run &lt;strong&gt;CGI&lt;/strong&gt; and &lt;strong&gt;SSI&lt;/strong&gt; programs under user IDs different from the user ID of the calling web server. Normally, when a CGI or SSI program executes, it runs as the same user who is running the web server.</source>
          <target state="translated">&lt;strong&gt;은 suEXEC&lt;/strong&gt; 기능은 아파치 HTTP 서버의 사용자가 실행할 수있는 기능 제공 &lt;strong&gt;CGI&lt;/strong&gt; 와 &lt;strong&gt;SSI&lt;/strong&gt; 호출하는 웹 서버의 사용자 ID와 다른 사용자 ID에서 프로그램을. 일반적으로 CGI 또는 SSI 프로그램이 실행될 때 웹 서버를 실행하는 동일한 사용자로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1190636d6f3f165590ba4f82e4f1f3bebcd90b2d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Headername&lt;/var&gt; feature is available in version 2.4.13 and later</source>
          <target state="translated">&lt;var&gt;Headername&lt;/var&gt; 기능은 버전에서 사용할 수 있습니다 2.4.13 이후</target>
        </trans-unit>
        <trans-unit id="56289106c13855859e77142a4d1b5ae5561a43d0" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;NSS&lt;/var&gt; crypto driver might have already been configured by another part of the server, for example from &lt;code&gt;mod_nss&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt;. If found to have already been configured, a warning will be logged, and the existing configuration will have taken affect. To avoid this warning, use the noinit parameter as follows.</source>
          <target state="translated">&lt;var&gt;NSS&lt;/var&gt; 의 암호화 드라이버가 이미에서 예를 들어, 서버의 다른 부분으로 구성되어 있습니다 &lt;code&gt;mod_nss&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; 이 . 이미 구성된 것으로 확인되면 경고가 기록되고 기존 구성이 적용됩니다. 이 경고를 피하려면 다음과 같이 noinit 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5614ad834b87f53e611597a1206c6cf64dcc2f06" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;NSS&lt;/var&gt; crypto driver requires some parameters for configuration, which are specified as parameters with optional values after the driver name.</source>
          <target state="translated">&lt;var&gt;NSS&lt;/var&gt; 암호화 드라이버는 드라이버 이름 뒤에 옵션 값을 매개 변수로 지정된 구성을위한 몇 가지 매개 변수를 필요로한다.</target>
        </trans-unit>
        <trans-unit id="c042d741e011f962cd0cadb2733abdabfa3cd93b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Pattern&lt;/var&gt; is a &lt;a href=&quot;#regex&quot;&gt;regular expression&lt;/a&gt;. It is initially (for the first rewrite rule or until a substitution occurs) matched against the URL-path of the incoming request (the part after the hostname but before any question mark indicating the beginning of a query string) or, in per-directory context, against the request's path relative to the directory for which the rule is defined. Once a substitution has occurred, the rules that follow are matched against the substituted value.</source>
          <target state="translated">&lt;var&gt;Pattern&lt;/var&gt; A는 &lt;a href=&quot;#regex&quot;&gt;정규 표현식&lt;/a&gt; . 수신 요청의 URL 경로 (호스트 이름 뒤에 있지만 쿼리 문자열의 시작을 나타내는 물음표 앞에있는 부분) 또는 디렉토리별로 일치하는 것이 처음 (첫 번째 다시 쓰기 규칙의 경우 또는 대체가 발생할 때까지)입니다. 규칙이 정의 된 디렉토리에 상대적인 요청 경로에 대한 컨텍스트. 대체가 발생하면 다음 규칙이 대체 된 값과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="60ebf2061929b183010fcad3e8d44ac3fd676181" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Substitution&lt;/var&gt; can also contain &lt;em&gt;back-references&lt;/em&gt; to parts of the incoming URL-path matched by the &lt;var&gt;Pattern&lt;/var&gt;. Consider the following:</source>
          <target state="translated">&lt;var&gt;Substitution&lt;/var&gt; 도 포함 할 수 &lt;em&gt;백 참조&lt;/em&gt; 에 의해 일치하는 들어오는 URL 경로의 부분에 &lt;var&gt;Pattern&lt;/var&gt; . 다음을 고려하세요:</target>
        </trans-unit>
        <trans-unit id="73151aa90edaa1dec8868d77f6937cb5b6ca58ea" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Substitution&lt;/var&gt; can itself be one of three things:</source>
          <target state="translated">&lt;var&gt;Substitution&lt;/var&gt; 자체는 세 가지 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d641c04db8bff7a4a0c16dd44b3e4c220fae3776" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;balancerurl&lt;/var&gt; is only needed when not within a &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; container directive. It corresponds to the url of a balancer defined in &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;var&gt;balancerurl&lt;/var&gt; 은 오직 필요한 경우가 아닌 내 &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; 컨테이너 지시어. &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 지시문에 정의 된 밸런서의 URL에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="ffa49ddbb5ce04477d8c4ac2da0faf9b93d98198" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;default&lt;/var&gt; parameter is available in Apache 2.4.7 and later</source>
          <target state="translated">&lt;var&gt;default&lt;/var&gt; 매개 변수는 아파치 2.4.7 이후로 볼 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e2312641e3e9d0a9dd7eeb7753bb292f7b570c43" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;directive-type&lt;/var&gt; can be one of the following groupings of directives. (See the &lt;a href=&quot;overrides&quot;&gt;override class index&lt;/a&gt; for an up-to-date listing of which directives are enabled by each &lt;var&gt;directive-type&lt;/var&gt;.)</source>
          <target state="translated">&lt;var&gt;directive-type&lt;/var&gt; 지침의 다음 그룹 중 하나가 될 수 있습니다. ( 각 &lt;var&gt;directive-type&lt;/var&gt; 의해 사용 가능한 지시문의 최신 목록은 &lt;a href=&quot;overrides&quot;&gt;재정의 클래스 색인&lt;/a&gt; 을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="ac08bb650b9dfca355f8fe2ff6da49e90415d33e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;extension&lt;/var&gt; argument is case-insensitive and can be specified with or without a leading dot.</source>
          <target state="translated">&lt;var&gt;extension&lt;/var&gt; 인수는 대소 문자를 구분와 함께 또는 선행 점없이 지정 될 수있다.</target>
        </trans-unit>
        <trans-unit id="f56ea56e4b2763d85e041fce41ef7f0ee3f0ed5b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;extension&lt;/var&gt; argument is case-insensitive and can be specified with or without a leading dot. Filenames may have &lt;a href=&quot;#multipleext&quot;&gt;multiple extensions&lt;/a&gt; and the &lt;var&gt;extension&lt;/var&gt; argument will be compared against each of them.</source>
          <target state="translated">&lt;var&gt;extension&lt;/var&gt; 인수는 대소 문자를 구분와 함께 또는 선행 점없이 지정 될 수있다. 파일 이름에는 &lt;a href=&quot;#multipleext&quot;&gt;여러 개의 확장자&lt;/a&gt; 가있을 수 있으며 &lt;var&gt;extension&lt;/var&gt; 인수는 각 확장자 와 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="bf155597f02581a7268c136737947f5f20f95078" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;filename&lt;/var&gt; argument should include a filename, or a wild-card string, where &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; 인수는 파일 이름 또는 와일드 카드 문자열을 포함해야한다 &lt;code&gt;?&lt;/code&gt; 모든 단일 문자와 일치 하고 &lt;code&gt;*&lt;/code&gt; 는 모든 문자 시퀀스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0d5dd061ffb6bc4dc25c31eab0fda4a5315d6aa6" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;filename&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfFile&amp;gt;&lt;/code&gt; section directive can take the same forms as the &lt;var&gt;test&lt;/var&gt; variable in the &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; section, i.e. the test can be negated if the &lt;code&gt;!&lt;/code&gt; character is placed directly before &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; 에서 &lt;code&gt;&amp;lt;IfFile&amp;gt;&lt;/code&gt; 섹션 지시어는 같은 형태를 취할 수 &lt;var&gt;test&lt;/var&gt; 변수 &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션, 즉 시험 경우 무효화 될 수있다 &lt;code&gt;!&lt;/code&gt; 문자는 &lt;var&gt;filename&lt;/var&gt; 바로 앞에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="f554d0be8de47cf813f829e75dde171a8d2900e9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;host&lt;/var&gt; arguments to the &lt;code&gt;NoProxy&lt;/code&gt; directive are one of the following type list:</source>
          <target state="translated">&lt;code&gt;NoProxy&lt;/code&gt; 지시문에 대한 &lt;var&gt;host&lt;/var&gt; 인수 는 다음 유형 목록 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="658945b859793a6e07bb969a0fcf33d0e5245cc8" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;module&lt;/var&gt; argument can be either the module identifier or the file name of the module, at the time it was compiled. For example, &lt;code&gt;rewrite_module&lt;/code&gt; is the identifier and &lt;code&gt;mod_rewrite.c&lt;/code&gt; is the file name. If a module consists of several source files, use the name of the file containing the string &lt;code&gt;STANDARD20_MODULE_STUFF&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;module&lt;/var&gt; 인수는 모듈 식별자 또는 컴파일 시점에 모듈의 파일 이름이 될 수 있습니다. 예를 들어, &lt;code&gt;rewrite_module&lt;/code&gt; 은 식별자이고 &lt;code&gt;mod_rewrite.c&lt;/code&gt; 는 파일 이름입니다. 모듈이 여러 소스 파일로 구성된 경우 문자열 &lt;code&gt;STANDARD20_MODULE_STUFF&lt;/code&gt; 를 포함하는 파일 이름을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c323ba3489be1bd450dc8a53d15c2e661c1def1d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;name&lt;/var&gt; of the Apache httpd service to signal.</source>
          <target state="translated">신호를 보낼 Apache httpd 서비스 의 &lt;var&gt;name&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c347869fc32f7a414dfe8e83464a76f4d71f56fc" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;openssl&lt;/var&gt; crypto driver supports an optional parameter to specify the engine to be used for encryption.</source>
          <target state="translated">&lt;var&gt;openssl&lt;/var&gt; 암호화 드라이버는 암호화에 사용되는 엔진을 지정하는 선택적 매개 변수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e2a7edacbbdfcbed6a366555f4f58552f9e33603" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;parameter-name&lt;/var&gt; argument is a define as given on the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command line via &lt;code&gt;-Dparameter&lt;/code&gt; at the time the server was started or by the &lt;code&gt;&lt;a href=&quot;#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;var&gt;parameter-name&lt;/var&gt; 인수는에 주어진으로 정의이다 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 통해 명령 줄 &lt;code&gt;-Dparameter&lt;/code&gt; 서버가 시작된 시점에 또는에 의해 &lt;code&gt;&lt;a href=&quot;#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; 지시어.</target>
        </trans-unit>
        <trans-unit id="b87037d66a9d1a9a54ba5b38e3a742170c6c8172" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;protocol&lt;/var&gt; argument was added in 2.1.5</source>
          <target state="translated">&lt;var&gt;protocol&lt;/var&gt; 인수는 2.1.5에서 추가되었다</target>
        </trans-unit>
        <trans-unit id="b4a703a2f4600f87205d2e17dc65c89a21230bba" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;section-name&lt;/var&gt; must be specified without either the leading &quot;&amp;lt;&quot; or closing &quot;&amp;gt;&quot;. The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; section can be one of two forms:</source>
          <target state="translated">&lt;var&gt;section-name&lt;/var&gt; 선두 &quot;&amp;lt;&quot;또는 폐쇄 &quot;&amp;gt;&quot;중 하나없이 지정해야합니다. &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; 섹션 의 &lt;var&gt;test&lt;/var&gt; 는 다음 두 가지 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98caf9ffc77345b5bb46fce970043fbbe1c0e717" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;size&lt;/var&gt; is normally expressed in Bytes, but you may follow the number with a &lt;code&gt;K&lt;/code&gt; or an &lt;code&gt;M&lt;/code&gt; to express your value as KBytes or MBytes. For example, the following directives are all equivalent:</source>
          <target state="translated">&lt;var&gt;size&lt;/var&gt; 보통 바이트 단위이지만, 당신은과 수에 따라 수 있습니다 &lt;code&gt;K&lt;/code&gt; 또는 &lt;code&gt;M&lt;/code&gt; 을 KBytes 나 MBytes를 나타낼 수 있습니다. 예를 들어 다음 지시문은 모두 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ebc5ca39afe179371cddd079aa7dc1f7cb91847a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;substitution&lt;/var&gt; is may contain literal text and regular expression backreferences</source>
          <target state="translated">&lt;var&gt;substitution&lt;/var&gt; 문자 텍스트 및 정규 표현식 역 참조를 포함 할 수있다</target>
        </trans-unit>
        <trans-unit id="e4a1067db932f3c75ff55cd098d7d2444aec8c49" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; section directive can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; 섹션 지시문 의 &lt;var&gt;test&lt;/var&gt; 는 다음 두 가지 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3264307b3f5b778b34966268bfc42f734c660e3" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfDirective&amp;gt;&lt;/code&gt; section can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfDirective&amp;gt;&lt;/code&gt; 섹션 의 &lt;var&gt;test&lt;/var&gt; 는 다음 두 가지 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbcadaa8accd5a1658d1c782fe32c2264c9f3e49" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test&lt;/var&gt; in the &lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; section directive can be one of two forms:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; 섹션 지시문 의 &lt;var&gt;test&lt;/var&gt; 는 다음 두 가지 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06309a0760876c6c1f1dcb9dd94d113422b60b48" translate="yes" xml:space="preserve">
          <source>The ACME protocol provides two methods to verify domain ownership: one that uses port 80 and one for port 443. If your server is not reachable by at least one of the two, ACME will not work for you.</source>
          <target state="translated">ACME 프로토콜은 도메인 소유권을 확인하는 두 가지 방법, 즉 포트 80을 사용하는 방법과 포트 443을위한 방법을 제공합니다. 둘 중 하나 이상으로 서버에 연결할 수 없으면 ACME가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e9af6a977653747ab3837daf773ebad55d36590" translate="yes" xml:space="preserve">
          <source>The API provides the following functions:</source>
          <target state="translated">API는 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1d6490296a8fbbadc4d124c92849e789245c68f8" translate="yes" xml:space="preserve">
          <source>The AllowOverride options applied to the current request.</source>
          <target state="translated">AllowOverride 옵션이 현재 요청에 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="cb00dc6d0173a55603a62be8fb56eb20f09f864e" translate="yes" xml:space="preserve">
          <source>The Apache EBCDIC Port</source>
          <target state="translated">아파치 EBCDIC 포트</target>
        </trans-unit>
        <trans-unit id="e4630eec6dbc65014e39c02273cab7774ae82e3e" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server Project itself does not provide binary releases of software, only source code. Individual committers &lt;em&gt;may&lt;/em&gt; provide binary packages as a convenience, but it is not a release deliverable.</source>
          <target state="translated">Apache HTTP Server Project 자체는 바이너리 버전의 소프트웨어를 제공하지 않으며 소스 코드 만 제공합니다. 개별 커미터 &lt;em&gt;는&lt;/em&gt; 편의를 위해 이진 패키지를 제공 &lt;em&gt;할&lt;/em&gt; 수 있지만 배포 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="41a3d5e0b4ebf90aedacb5c5488f3f548fa7e636" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server can be downloaded from the &lt;a href=&quot;http://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Server download site&lt;/a&gt;, which lists several mirrors. Most users of Apache on unix-like systems will be better off downloading and compiling a source version. The build process (described below) is easy, and it allows you to customize your server to suit your needs. In addition, binary releases are often not up to date with the latest source releases. If you do download a binary, follow the instructions in the &lt;code&gt;INSTALL.bindist&lt;/code&gt; file inside the distribution.</source>
          <target state="translated">Apache HTTP Server는 &lt;a href=&quot;http://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Server 다운로드 사이트&lt;/a&gt; 에서 다운로드 할 수 있으며 여기에는 여러 미러가 나열되어 있습니다. 유닉스 계열 시스템에서 Apache를 사용하는 대부분의 사용자는 소스 버전을 다운로드하고 컴파일하는 것이 좋습니다. 빌드 프로세스 (아래 설명 참조)는 간단하며 필요에 따라 서버를 사용자 정의 할 수 있습니다. 또한 바이너리 릴리스는 최신 소스 릴리스로 최신 상태가 아닌 경우가 많습니다. 바이너리를 다운로드하는 경우 배포판 의 &lt;code&gt;INSTALL.bindist&lt;/code&gt; 파일 에있는 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="e778f8b3db5fa8ec6587a2c2b66af88b2eac7e9b" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server can be downloaded from the &lt;a href=&quot;https://httpd.apache.org/download.cgi&quot;&gt;Apache HTTP Server download site&lt;/a&gt;, which lists several mirrors. Most users of Apache on unix-like systems will be better off downloading and compiling a source version. The build process (described below) is easy, and it allows you to customize your server to suit your needs. In addition, binary releases are often not up to date with the latest source releases. If you do download a binary, follow the instructions in the &lt;code&gt;INSTALL.bindist&lt;/code&gt; file inside the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae744855f68fe9af0b4aae155c1f9223dc127338" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server handles requests in several phases. At each of these phases, one or more modules may be called upon to handle that portion of the request lifecycle. Phases include things like URL-to-filename translation, authentication, authorization, content, and logging. (This is not an exhaustive list.)</source>
          <target state="translated">Apache HTTP Server는 여러 단계로 요청을 처리합니다. 이들 단계 각각에서, 요청 라이프 사이클의 해당 부분을 처리하기 위해 하나 이상의 모듈이 호출 될 수있다. 단계에는 URL- 파일 이름 변환, 인증, 권한 부여, 컨텐츠 및 로깅과 같은 것이 포함됩니다. (전체 목록은 아닙니다.)</target>
        </trans-unit>
        <trans-unit id="72d11b98a27b8f5a18fb0d8d9703303074e0841c" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server has a good record for security and a developer community highly concerned about security issues. But it is inevitable that some problems -- small or large -- will be discovered in software after it is released. For this reason, it is crucial to keep aware of updates to the software. If you have obtained your version of the HTTP Server directly from Apache, we highly recommend you subscribe to the &lt;a href=&quot;http://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTP Server Announcements List&lt;/a&gt; where you can keep informed of new releases and security updates. Similar services are available from most third-party distributors of Apache software.</source>
          <target state="translated">Apache HTTP Server는 보안에 대한 좋은 기록을 가지고 있으며 보안 문제에 관심이 많은 개발자 커뮤니티입니다. 그러나 소프트웨어가 릴리스 된 후 작거나 큰 일부 문제가 소프트웨어에서 발견되는 것은 불가피합니다. 이러한 이유로 소프트웨어 업데이트를 파악하는 것이 중요합니다. Apache에서 직접 HTTP Server 버전을 구한 경우 새로운 릴리스 및 보안 업데이트에 대한 정보를 유지할 수 있는 &lt;a href=&quot;http://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTP Server 공지 목록&lt;/a&gt; 을 구독하는 것이 좋습니다 . 비슷한 서비스가 Apache 소프트웨어의 대부분의 타사 배포자에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ceed4ccb4fa3fd8e62e647a9bc57d09d486a555b" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server has a good record for security and a developer community highly concerned about security issues. But it is inevitable that some problems -- small or large -- will be discovered in software after it is released. For this reason, it is crucial to keep aware of updates to the software. If you have obtained your version of the HTTP Server directly from Apache, we highly recommend you subscribe to the &lt;a href=&quot;https://httpd.apache.org/lists.html#http-announce&quot;&gt;Apache HTTP Server Announcements List&lt;/a&gt; where you can keep informed of new releases and security updates. Similar services are available from most third-party distributors of Apache software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8561937672c7fc208b74f206a4c6acb32b80ef" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is a modular program where the administrator can choose the functionality to include in the server by selecting a set of modules. Modules will be compiled as Dynamic Shared Objects (DSOs) that exist separately from the main &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary file. DSO modules may be compiled at the time the server is built, or they may be compiled and added at a later time using the Apache Extension Tool (&lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Apache HTTP Server는 관리자가 모듈 세트를 선택하여 서버에 포함 할 기능을 선택할 수있는 모듈 식 프로그램입니다. 모듈은 기본 &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 바이너리 파일 과 별도로 존재하는 동적 공유 객체 (DSO)로 컴파일됩니다 . DSO 모듈은 서버가 빌드 될 때 컴파일되거나 Apache 확장 도구 ( &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; )를 사용하여 나중에 컴파일 및 추가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02af53dd04c928451a0f060ffada735846b62ce2" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is configured via simple text files. These files may be located any of a variety of places, depending on how exactly you installed the server. Common locations for these files may be found &lt;a href=&quot;http://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;in the httpd wiki&lt;/a&gt;. If you installed httpd from source, the default location of the configuration files is &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt;. The default configuration file is usually called &lt;code&gt;httpd.conf&lt;/code&gt;. This, too, can vary in third-party distributions of the server.</source>
          <target state="translated">Apache HTTP Server는 간단한 텍스트 파일을 통해 구성됩니다. 이 파일은 서버를 정확히 설치 한 방법에 따라 다양한 위치에있을 수 있습니다. 이러한 파일의 일반적인 위치 &lt;a href=&quot;http://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;는 httpd wiki에서&lt;/a&gt; 찾을 수 있습니다 . 소스에서 httpd를 설치 한 경우 구성 파일의 기본 위치는 &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt; 입니다. 기본 구성 파일은 일반적으로 &lt;code&gt;httpd.conf&lt;/code&gt; 입니다. 또한 서버의 타사 배포판이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="388034618a49f209c113afeb13a0ead6fb0ae027" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is configured via simple text files. These files may be located any of a variety of places, depending on how exactly you installed the server. Common locations for these files may be found &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;in the httpd wiki&lt;/a&gt;. If you installed httpd from source, the default location of the configuration files is &lt;code&gt;/usr/local/apache2/conf&lt;/code&gt;. The default configuration file is usually called &lt;code&gt;httpd.conf&lt;/code&gt;. This, too, can vary in third-party distributions of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2a087c2e36e51d0222ac85bd926ca9588b6e8d" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server is designed to be a powerful and flexible web server that can work on a very wide variety of platforms in a range of different environments. Different platforms and different environments often require different features, or may have different ways of implementing the same feature most efficiently. Apache httpd has always accommodated a wide variety of environments through its modular design. This design allows the webmaster to choose which features will be included in the server by selecting which modules to load either at compile-time or at run-time.</source>
          <target state="translated">Apache HTTP Server는 다양한 환경에서 매우 다양한 플랫폼에서 작동 할 수있는 강력하고 유연한 웹 서버로 설계되었습니다. 플랫폼과 환경에 따라 다른 기능이 필요하거나 동일한 기능을 가장 효율적으로 구현하는 방법이 다를 수 있습니다. Apache httpd는 모듈 식 디자인을 통해 항상 다양한 환경을 수용했습니다. 이 디자인을 통해 웹 마스터는 컴파일 타임 또는 런타임에로드 할 모듈을 선택하여 서버에 포함 할 기능을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6bebc5af4cb9a1982a6b85f9b90bbb9c9e96841" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server module &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides an interface to the &lt;a href=&quot;http://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; library, which provides Strong Encryption using the Secure Sockets Layer and Transport Layer Security protocols.</source>
          <target state="translated">Apache HTTP Server 모듈 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 은 SSL (Secure Sockets Layer) 및 전송 계층 보안 프로토콜을 사용하여 강력한 암호화를 제공 하는 &lt;a href=&quot;http://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; 라이브러리에 대한 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5c07d008a28b492f116e62ba1c3de5301fd1949d" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server module &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides an interface to the &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; library, which provides Strong Encryption using the Secure Sockets Layer and Transport Layer Security protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e3842edffd98561dbb16d4d15d5f114f561545" translate="yes" xml:space="preserve">
          <source>The Apache HTTP Server provides a variety of different mechanisms for logging everything that happens on your server, from the initial request, through the URL mapping process, to the final resolution of the connection, including any errors that may have occurred in the process. In addition to this, third-party modules may provide logging capabilities, or inject entries into the existing log files, and applications such as CGI programs, or PHP scripts, or other handlers, may send messages to the server error log.</source>
          <target state="translated">Apache HTTP Server는 초기 요청에서 URL 매핑 프로세스를 통해 서버에서 발생하는 모든 작업을 프로세스에서 발생할 수있는 오류를 포함하여 연결의 최종 해결에 이르기까지 다양한 메커니즘을 제공합니다. 이 외에도 타사 모듈은 로깅 기능을 제공하거나 기존 로그 파일에 항목을 삽입 할 수 있으며 CGI 프로그램, PHP 스크립트 또는 기타 처리기와 같은 응용 프로그램은 서버 오류 로그에 메시지를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28bfe1d22a687a0e4091133d9a65ac14236d9a4f" translate="yes" xml:space="preserve">
          <source>The Apache HTTP server offers a low level shared object cache for caching information such as SSL sessions, or authentication credentials, within the &lt;a href=&quot;socache&quot;&gt;socache&lt;/a&gt; interface.</source>
          <target state="translated">Apache HTTP 서버는 &lt;a href=&quot;socache&quot;&gt;socache&lt;/a&gt; 인터페이스 내에서 SSL 세션 또는 인증 신임 정보와 같은 정보를 캐싱하기위한 저수준 공유 오브젝트 캐시를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="66e8e0ab068b6948e06d34f17bae641447cc0175" translate="yes" xml:space="preserve">
          <source>The Apache HTTP server offers a range of caching features that are designed to improve the performance of the server in various ways.</source>
          <target state="translated">Apache HTTP 서버는 다양한 방식으로 서버 성능을 향상 시키도록 설계된 다양한 캐싱 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3d11b0b1aed33055e3466ecef36252f403d7b53b" translate="yes" xml:space="preserve">
          <source>The Apache Portable Runtime Utilities (APU) are part of the httpd source distribution and will automatically be build together with the HTTP server. If you want to use an already installed APU instead you have to tell &lt;code&gt;configure&lt;/code&gt; the path to the &lt;code&gt;apu-config&lt;/code&gt; script. You may set the absolute path and name or the directory to the installed APU. &lt;code&gt;apu-config&lt;/code&gt; must exist within this directory or the subdirectory &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="translated">APU (Apache Portable Runtime Utilities)는 httpd 소스 배포의 일부이며 HTTP 서버와 함께 자동으로 빌드됩니다. 이미 설치된 APU를 대신 사용하려면 &lt;code&gt;apu-config&lt;/code&gt; 스크립트 의 경로를 &lt;code&gt;configure&lt;/code&gt; 해야합니다 . 설치된 APU의 절대 경로와 이름 또는 디렉토리를 설정할 수 있습니다. &lt;code&gt;apu-config&lt;/code&gt; 는이 디렉토리 또는 하위 디렉토리 &lt;code&gt;bin&lt;/code&gt; 내에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="566eb6e42b5e922dec31f0614d8720ddd0d4dc6b" translate="yes" xml:space="preserve">
          <source>The Apache httpd API &lt;em&gt;access check&lt;/em&gt; phase is a separate phase from authentication and authorization. Some other FastCGI implementations implement this phase, which is denoted by the setting of &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; to &lt;code&gt;ACCESS_CHECKER&lt;/code&gt;.</source>
          <target state="translated">Apache httpd API &lt;em&gt;액세스 확인&lt;/em&gt; 단계는 인증 및 권한 부여와 별개의 단계입니다. 다른 일부 FastCGI 구현은이 단계를 구현하며 이는 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; 을 &lt;code&gt;ACCESS_CHECKER&lt;/code&gt; 로 설정하여 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0d3e1ae21a53235a9db172241760ba0f179d3b2" translate="yes" xml:space="preserve">
          <source>The Apache httpd module API is unchanged between the Unix and Windows versions. Many modules will run on Windows with no or little change from Unix, although others rely on aspects of the Unix architecture which are not present in Windows, and will not work.</source>
          <target state="translated">Apache httpd 모듈 API는 Unix와 Windows 버전간에 변경되지 않습니다. 많은 모듈은 Unix와 거의 또는 전혀 변경없이 Windows에서 실행되지만 다른 모듈은 Windows에없는 Unix 아키텍처의 측면에 의존하지만 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7347bfb267faea6f5971f414529bff0875e81dbc" translate="yes" xml:space="preserve">
          <source>The Apache httpd source tarball can be converted into an SRPM as follows:</source>
          <target state="translated">Apache httpd 소스 tarball은 다음과 같이 SRPM으로 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b58b1efdf94fdaae364208365b8b359e3651428b" translate="yes" xml:space="preserve">
          <source>The Apache module &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; is a very powerful and sophisticated module which provides a way to do URL manipulations. With it, you can do nearly all types of URL rewriting that you may need. It is, however, somewhat complex, and may be intimidating to the beginner. There is also a tendency to treat rewrite rules as magic incantation, using them without actually understanding what they do.</source>
          <target state="translated">아파치 모듈 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 는 매우 강력하고 정교한 모듈로 URL 조작 방법을 제공합니다. 이를 통해 필요한 거의 모든 유형의 URL 재 작성을 수행 할 수 있습니다. 그러나 그것은 다소 복잡하며 초보자에게 위협이 될 수 있습니다. 또한 재 작성 규칙을 실제로 수행하는 것을 이해하지 않고이를 사용하여 마법의 주문으로 취급하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="234587086a228e246e0dcb7c8fbe7adc2e5a1861" translate="yes" xml:space="preserve">
          <source>The Apache version can be determined by running &lt;code&gt;httpd -v&lt;/code&gt;. The OpenSSL version can be determined by running &lt;code&gt;openssl version&lt;/code&gt;. Alternatively, if you have Lynx installed, you can run the command &lt;code&gt;lynx -mime_header http://localhost/ | grep Server&lt;/code&gt; to gather this information in a single step.</source>
          <target state="translated">Apache 버전은 &lt;code&gt;httpd -v&lt;/code&gt; 를 실행하여 확인할 수 있습니다 . &lt;code&gt;openssl version&lt;/code&gt; 을 실행 하여 OpenSSL 버전을 확인할 수 있습니다 . 또는 Lynx를 설치 한 경우 &lt;code&gt;lynx -mime_header http://localhost/ | grep Server&lt;/code&gt; 를 사용하여이 정보를 한 번에 수집하십시오.</target>
        </trans-unit>
        <trans-unit id="364421115b5b28ed6ad149daedfc99c9f98e0715" translate="yes" xml:space="preserve">
          <source>The Authentication Phase</source>
          <target state="translated">인증 단계</target>
        </trans-unit>
        <trans-unit id="60e5e68517ee451fe8079abbe65472084e7bb940" translate="yes" xml:space="preserve">
          <source>The Authorization Phase</source>
          <target state="translated">승인 단계</target>
        </trans-unit>
        <trans-unit id="3a255b7325372c1e2151c4cdae4296d5e2004d00" translate="yes" xml:space="preserve">
          <source>The CGI (Common Gateway Interface) defines a way for a web server to interact with external content-generating programs, which are often referred to as CGI programs or CGI scripts. It is a simple way to put dynamic content on your web site, using whatever programming language you're most familiar with. This document will be an introduction to setting up CGI on your Apache web server, and getting started writing CGI programs.</source>
          <target state="translated">CGI (Common Gateway Interface)는 웹 서버가 외부 컨텐트 생성 프로그램과 상호 작용하는 방법을 정의하며,이를 종종 CGI 프로그램 또는 CGI 스크립트라고합니다. 가장 친숙한 프로그래밍 언어를 사용하여 웹 사이트에 동적 컨텐트를 넣는 간단한 방법입니다. 이 문서는 Apache 웹 서버에서 CGI를 설정하고 CGI 프로그램 작성을 시작하는 방법을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="c64912fc759de36fc9a7bb46f67c92c20a09c48c" translate="yes" xml:space="preserve">
          <source>The CGI script is given the &lt;code&gt;PATH_INFO&lt;/code&gt; and query string (&lt;code&gt;QUERY_STRING&lt;/code&gt;) of the original request from the client; these &lt;em&gt;cannot&lt;/em&gt; be specified in the URL path. The include variables will be available to the script in addition to the standard &lt;a href=&quot;mod_cgi&quot;&gt;CGI&lt;/a&gt; environment.</source>
          <target state="translated">CGI 스크립트 에는 클라이언트의 원래 요청에 대한 &lt;code&gt;PATH_INFO&lt;/code&gt; 및 쿼리 문자열 ( &lt;code&gt;QUERY_STRING&lt;/code&gt; )이 제공됩니다. 이들은 &lt;em&gt;수없는&lt;/em&gt; URL 경로에 지정 될 수있다. 표준 &lt;a href=&quot;mod_cgi&quot;&gt;CGI&lt;/a&gt; 환경 외에도 스크립트에 포함 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20d15b61eb3e970e02b1dcfa9e5848fe1f8c5872" translate="yes" xml:space="preserve">
          <source>The CGI/1.1 specification &lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;does not distinguish&lt;/a&gt; between a variable with an empty value and a variable that does not exist. However, many CGI and FastCGI implementations distinguish (or allow scripts to distinguish) between the two. The choice of which to use is dependent upon your implementation and your reason for modifying the variable.</source>
          <target state="translated">CGI / 1.1 스펙 &lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;은&lt;/a&gt; 값이 비어있는 변수와 존재하지 않는 변수를 구별 하지 않습니다. 그러나 많은 CGI 및 FastCGI 구현은이 둘을 구별 (또는 스크립트가 구별) 할 수 있습니다. 사용할 선택은 구현 및 변수 수정 사유에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="927230031170944f752e915d7c1990bf1e63ea21" translate="yes" xml:space="preserve">
          <source>The Content-Encoding entity-header field is used as a modifier to the media-type. When present, its value indicates what additional content codings have been applied to the entity-body, and thus what decoding mechanisms must be applied in order to obtain the media-type referenced by the Content-Type header field. Content-Encoding is primarily used to allow a document to be compressed without losing the identity of its underlying media type.</source>
          <target state="translated">콘텐츠 인코딩 엔터티 헤더 필드는 미디어 유형의 수정 자로 사용됩니다. 존재하는 경우, 그 값은 어떤 추가 컨텐츠 코딩이 엔티티 본문에 적용 되었는지를 나타내며, 따라서 Content-Type 헤더 필드에 의해 참조되는 미디어 유형을 얻기 위해 어떤 디코딩 메커니즘이 적용되어야 하는지를 나타낸다. 컨텐츠 인코딩은 주로 기본 미디어 유형의 ID를 잃지 않고 문서를 압축 할 수 있도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fad2edd501b0969b3c59910b4843467fad7030af" translate="yes" xml:space="preserve">
          <source>The Content-Type header is a special use case since there might be the chance that its value have been determined but the header is not part of the response when &lt;code&gt;setifempty&lt;/code&gt; is evaluated. It is safer to use &lt;code&gt;set&lt;/code&gt; for this use case like in the following example:</source>
          <target state="translated">Content-Type 헤더는 값이 결정될 가능성이 있지만 &lt;code&gt;setifempty&lt;/code&gt; 가 평가 될 때 헤더가 응답의 일부가 아니기 때문에 특별한 유스 케이스 입니다. 다음 예제와 같이이 사용 사례에 대해 &lt;code&gt;set&lt;/code&gt; 을 사용하는 것이 더 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="ae7507f0b3a3c5cc2259e82fad110093d0e4b2b8" translate="yes" xml:space="preserve">
          <source>The DBM options are provided by the APU and passed through to its configuration script. They are useless when using an already installed APU defined by &lt;code&gt;--with-apr-util&lt;/code&gt;.</source>
          <target state="translated">DBM 옵션은 APU에서 제공하며 구성 스크립트로 전달됩니다. &lt;code&gt;--with-apr-util&lt;/code&gt; 에 의해 정의 된 이미 설치된 APU를 사용할 때는 쓸모가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5bcd5e57c66be30bb5837844fb41a525cd38da3d" translate="yes" xml:space="preserve">
          <source>The DN of the branch of the directory where all searches should start from. At the very least, this must be the top of your directory tree, but could also specify a subtree in the directory.</source>
          <target state="translated">모든 검색을 시작해야하는 디렉토리 분기의 DN입니다. 최소한 디렉토리 트리의 맨 위에 있어야하지만 디렉토리에 하위 트리를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="17ec61aff7751de6857b12c89f9056e81c67e1b7" translate="yes" xml:space="preserve">
          <source>The DNS or IP address given on the command line</source>
          <target state="translated">명령 행에 제공된 DNS 또는 IP 주소</target>
        </trans-unit>
        <trans-unit id="dc05d785915fce960661f50470b938b6cd2c31a2" translate="yes" xml:space="preserve">
          <source>The DPI flag causes the PATH_INFO portion of the rewritten URI to be discarded.</source>
          <target state="translated">DPI 플래그는 재 작성된 URI의 PATH_INFO 부분을 버립니다.</target>
        </trans-unit>
        <trans-unit id="82637c1502a0b4bcfe4e863ffb1d76886a55b53e" translate="yes" xml:space="preserve">
          <source>The DSO builds for individual modules can be disabled via &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;--enable-mods-static&lt;/code&gt; option as discussed in the &lt;a href=&quot;install&quot;&gt;install documentation&lt;/a&gt;.</source>
          <target state="translated">개별 모듈에 대한 DSO 빌드 는 &lt;a href=&quot;install&quot;&gt;설치 설명서&lt;/a&gt; 에서 설명한대로 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;--enable-mods-static&lt;/code&gt; 옵션을 통해 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14f4f6f304359e38bff11ea3cf5549a00af560d2" translate="yes" xml:space="preserve">
          <source>The DSO support for loading individual Apache httpd modules is based on a module named &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; which must be statically compiled into the Apache httpd core. It is the only module besides &lt;code&gt;&lt;a href=&quot;mod/core&quot;&gt;core&lt;/a&gt;&lt;/code&gt; which cannot be put into a DSO itself. Practically all other distributed Apache httpd modules will then be placed into a DSO. After a module is compiled into a DSO named &lt;code&gt;mod_foo.so&lt;/code&gt; you can use &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive in your &lt;code&gt;httpd.conf&lt;/code&gt; file to load this module at server startup or restart.</source>
          <target state="translated">개별 Apache httpd 모듈을로드하기위한 DSO 지원은 &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; 라는 모듈을 기반 으로하며 Apache httpd 코어로 정적으로 컴파일되어야합니다. DSO 자체에 넣을 수없는 &lt;code&gt;&lt;a href=&quot;mod/core&quot;&gt;core&lt;/a&gt;&lt;/code&gt; 이외의 유일한 모듈 입니다. 실제로 다른 모든 분산 Apache httpd 모듈은 DSO에 배치됩니다. 모듈이 &lt;code&gt;mod_foo.so&lt;/code&gt; 라는 DSO로 컴파일 된 후 &lt;code&gt;httpd.conf&lt;/code&gt; 파일 에서 &lt;code&gt;&lt;a href=&quot;mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 서버 시작 또는 재시작시이 모듈을로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66e562403aa49c8a6f03b5634d6831a6f2c09daa" translate="yes" xml:space="preserve">
          <source>The Dynamic Way enables both static and flexible, dynamic configuration of output filters, as discussed in the &lt;code&gt;&lt;a href=&quot;mod/mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; page. Relevant directives are &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dynamic Way를 사용하면 &lt;code&gt;&lt;a href=&quot;mod/mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; 페이지 에서 설명한 것처럼 출력 필터의 정적 및 유연한 동적 구성이 가능합니다 . 관련 지시문은 &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/mod_filter#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="71564e18a55ca6e09f5cd21e9775c8e3ff4f471a" translate="yes" xml:space="preserve">
          <source>The Filter Chain is available in Apache 2.0 and higher, and enables applications to process incoming and outgoing data in a highly flexible and configurable manner, regardless of where the data comes from. We can pre-process incoming data, and post-process outgoing data, at will. This is basically independent of the traditional request processing phases.</source>
          <target state="translated">필터 체인은 Apache 2.0 이상에서 사용 가능하며 애플리케이션이 데이터의 출처에 상관없이 매우 유연하고 구성 가능한 방식으로 수신 및 발신 데이터를 처리 할 수 ​​있도록합니다. 들어오는 데이터를 사전 처리하고 나가는 데이터를 후 처리 할 수 ​​있습니다. 이는 기본적으로 기존 요청 처리 단계와 무관합니다.</target>
        </trans-unit>
        <trans-unit id="efc34f18a84f03a44ecb363c600a30daa2c8f6f0" translate="yes" xml:space="preserve">
          <source>The HTTP cookie mechanism also offers privacy features, such as the ability to restrict cookie transport to SSL protected pages only, or to prevent browser based javascript from gaining access to the contents of the cookie.</source>
          <target state="translated">HTTP 쿠키 메커니즘은 쿠키 전송을 SSL 보호 페이지로만 제한하거나 브라우저 기반 자바 스크립트가 쿠키의 내용에 액세스하지 못하게하는 기능과 같은 개인 정보 보호 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f91864f5585b2dbe36c1fb1a916ccde1b6f6e385" translate="yes" xml:space="preserve">
          <source>The HTTP error status of the request (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">요청의 HTTP 오류 상태 ( &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; 동안 사용할 수 없음 )</target>
        </trans-unit>
        <trans-unit id="46a3a855250301b84029ec9976b3e74a3126fe1c" translate="yes" xml:space="preserve">
          <source>The HTTP method of the incoming request (e.g. &lt;code&gt;GET&lt;/code&gt;)</source>
          <target state="translated">수신 요청의 HTTP 메소드 (예 : &lt;code&gt;GET&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="901893eb6b1a1525ac8ce36615d6c3387ac5b9af" translate="yes" xml:space="preserve">
          <source>The HTTP method, encoded as a single byte:</source>
          <target state="translated">단일 바이트로 인코딩 된 HTTP 메소드 :</target>
        </trans-unit>
        <trans-unit id="5d9c418d51ba979194f654ecf47c771b02641ddf" translate="yes" xml:space="preserve">
          <source>The HTTP protocol contains built in support for an in-line caching mechanism &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt; described by section 13 of RFC2616&lt;/a&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module can be used to take advantage of this.</source>
          <target state="translated">HTTP 프로토콜 &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt;은 RFC2616의 섹션 13에 설명 된&lt;/a&gt; 인라인 캐싱 메커니즘을 기본적으로 지원 하며 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 모듈을 사용하여이를 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58093a7e000708eb45c9fc06a30c965fa6d6ca4a" translate="yes" xml:space="preserve">
          <source>The HTTP protocol contains built in support for an in-line caching mechanism &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt; described by section 13 of RFC2616&lt;/a&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module can be used to take advantage of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d0c5112d3b9a6ef6a8fd8b917680b89376f4c5" translate="yes" xml:space="preserve">
          <source>The HTTP protocol does allow the cache to serve stale data under certain circumstances, such as when an attempt to freshen the data with an origin server has failed with a 5xx error, or when another request is already in the process of freshening the given entry. In these cases a &lt;code&gt;Warning&lt;/code&gt; header is added to the response.</source>
          <target state="translated">HTTP 프로토콜은 캐시가 원본 서버로 데이터를 새로 고치려는 시도가 5xx 오류로 실패한 경우 또는 다른 요청이 이미 지정된 항목을 새로 고치는 중일 때와 같은 특정 상황에서 오래된 데이터를 제공 할 수있게합니다. 이 경우 &lt;code&gt;Warning&lt;/code&gt; 헤더가 응답에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="189d6933ca4f411f3ed3600f955d222761b935a3" translate="yes" xml:space="preserve">
          <source>The HTTP status received from the backend server.</source>
          <target state="translated">백엔드 서버에서 수신 한 HTTP 상태입니다.</target>
        </trans-unit>
        <trans-unit id="c87f5138a9b8ddfde1b27f6d65e652d68e68f8de" translate="yes" xml:space="preserve">
          <source>The HTTP-methods are case sensitive and are generally, as per RFC, given in upper case. The GET and HEAD methods are treated as equivalent. The &lt;code&gt;reset&lt;/code&gt; keyword can be used to turn off &lt;code&gt;&lt;a href=&quot;mod_allowmethods&quot;&gt;mod_allowmethods&lt;/a&gt;&lt;/code&gt; in a deeper nested context:</source>
          <target state="translated">HTTP 메소드는 대소 문자를 구분하며 일반적으로 RFC에 따라 대문자로 표시됩니다. GET 및 HEAD 방법은 동등한 것으로 취급됩니다. &lt;code&gt;reset&lt;/code&gt; 키워드는 해제 할 수 있습니다 &lt;code&gt;&lt;a href=&quot;mod_allowmethods&quot;&gt;mod_allowmethods&lt;/a&gt;&lt;/code&gt; 을 깊은 중첩 된 상황에서 :</target>
        </trans-unit>
        <trans-unit id="2f84fbd5cb8d2201e26ea9f7865c8ca2caa95a9e" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol</source>
          <target state="translated">HTTP / 2 프로토콜</target>
        </trans-unit>
        <trans-unit id="3ec6048abf88960d625cc9c16664127bfa141063" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol allows the server to PUSH responses to a client it never asked for. The tone of the conversation is: &quot;here is a request that you never sent and the response to it will arrive soon...&quot;</source>
          <target state="translated">HTTP / 2 프로토콜을 통해 서버는 요청하지 않은 클라이언트에 대한 응답을 PUSH 할 수 있습니다. 대화의 어조는 : &quot;여기서 보내지 않은 요청이 있으며 이에 대한 응답이 곧 도착할 것입니다 ...&quot;</target>
        </trans-unit>
        <trans-unit id="27f86740c58b63752f1451823d33d7ad22150681" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol allows the server to push other resources to a client when it asked for a particular one. This is helpful if those resources are connected in some way and the client can be expected to ask for it anyway. The pushing then saves the time it takes the client to ask for the resources itself. On the other hand, pushing resources the client never needs or already has is a waste of bandwidth.</source>
          <target state="translated">HTTP / 2 프로토콜은 서버가 특정 자원을 요청할 때 다른 자원을 클라이언트로 푸시 할 수있게합니다. 이러한 리소스가 어떤 식 으로든 연결되어 있고 클라이언트가 어쨌든 요청할 수있는 경우에 유용합니다. 그러면 푸시는 클라이언트가 리소스 자체를 요청하는 데 걸리는 시간을 절약합니다. 반면에 클라이언트가 필요하지 않거나 이미 가지고있는 리소스를 푸시하는 것은 대역폭 낭비입니다.</target>
        </trans-unit>
        <trans-unit id="74cc9075e9a23eeb67cd4e9b56312362d6bce3c2" translate="yes" xml:space="preserve">
          <source>The HTTP/2 protocol is implemented by its own httpd module, aptly named &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt;. It implements the complete set of features described by RFC 7540 and supports HTTP/2 over cleartext (http:), as well as secure (https:) connections. The cleartext variant is named '&lt;code&gt;h2c&lt;/code&gt;', the secure one '&lt;code&gt;h2&lt;/code&gt;'. For &lt;code&gt;h2c&lt;/code&gt; it allows the &lt;em&gt;direct&lt;/em&gt; mode and the &lt;code&gt;Upgrade:&lt;/code&gt; via an initial HTTP/1 request.</source>
          <target state="translated">HTTP / 2 프로토콜은 적절하게 이름이 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; 인 자체 httpd 모듈로 구현됩니다 . RFC 7540에 설명 된 완전한 기능 세트를 구현하고 보안 (https :) 연결뿐만 아니라 일반 텍스트 (http :)를 통한 HTTP / 2를 지원합니다. 일반 텍스트 변형은 안전한 이름 인 ' &lt;code&gt;h2&lt;/code&gt; ' 인 ' &lt;code&gt;h2c&lt;/code&gt; '입니다. 들어 &lt;code&gt;h2c&lt;/code&gt; 그것은 수 있습니다 &lt;em&gt;직접&lt;/em&gt; 모드와 &lt;code&gt;Upgrade:&lt;/code&gt; 초기 HTTP / 1 요청을 통해입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a57954c9b96169d1a30dd67df7cf94dbe4f336b" translate="yes" xml:space="preserve">
          <source>The HTTP/2 status received from the backend server.</source>
          <target state="translated">백엔드 서버에서 수신 한 HTTP / 2 상태입니다.</target>
        </trans-unit>
        <trans-unit id="b1dca06f67e2a4085df6a93ee4836ad4c03c7f6f" translate="yes" xml:space="preserve">
          <source>The HyperText Markup Language (HTML) is a simple markup language used to create hypertext documents that are portable from one platform to another. HTML documents are SGML documents.</source>
          <target state="translated">HTML (HyperText Markup Language)은 한 플랫폼에서 다른 플랫폼으로 이식 가능한 하이퍼 텍스트 문서를 작성하는 데 사용되는 간단한 마크 업 언어입니다. HTML 문서는 SGML 문서입니다.</target>
        </trans-unit>
        <trans-unit id="e93ae6b0581a56762067e5bc85be23d709f4c84e" translate="yes" xml:space="preserve">
          <source>The Hypertext Transfer Protocol (HTTP) is an application-level protocol for distributed, collaborative, hypermedia information systems. This documents HTTP/1.1.</source>
          <target state="translated">HTTP (Hypertext Transfer Protocol)는 분산 된 협업 하이퍼 미디어 정보 시스템을위한 응용 프로그램 수준 프로토콜입니다. 이것은 HTTP / 1.1을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="c9f01d749c58976193d6b5091f84be071e8099d2" translate="yes" xml:space="preserve">
          <source>The Hypertext Transfer Protocol (HTTP) is an application-level protocol with the lightness and speed necessary for distributed, collaborative, hypermedia information systems. This documents HTTP/1.0.</source>
          <target state="translated">HTTP (Hypertext Transfer Protocol)는 분산 된 협업 하이퍼 미디어 정보 시스템에 필요한 가벼움과 속도를 갖춘 응용 프로그램 수준 프로토콜입니다. 이것은 HTTP / 1.0을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="d51a0148d780fe50fda94f0c66e0ff5b90d1cf77" translate="yes" xml:space="preserve">
          <source>The ID to identify request in access and error log.</source>
          <target state="translated">액세스 및 오류 로그에서 요청을 식별하기위한 ID입니다.</target>
        </trans-unit>
        <trans-unit id="a2606918a9a0cd4c331804a22b234cdcc58a595d" translate="yes" xml:space="preserve">
          <source>The IP address of the Virtual Host serving the request.</source>
          <target state="translated">요청을 처리하는 가상 호스트의 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="d3fc261360a76b743e82f1c59ab21837cd1b4510" translate="yes" xml:space="preserve">
          <source>The IP address of the client.</source>
          <target state="translated">클라이언트의 IP 주소</target>
        </trans-unit>
        <trans-unit id="44278b30662031328096aacd4d0d314c557ed1a7" translate="yes" xml:space="preserve">
          <source>The IP address of the remote host</source>
          <target state="translated">원격 호스트의 IP 주소</target>
        </trans-unit>
        <trans-unit id="6859a2d0f684a0bc387ca3c4c8b8a8e160d1fd62" translate="yes" xml:space="preserve">
          <source>The IP address of the remote host (see the &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; module).</source>
          <target state="translated">원격 호스트의 IP 주소입니다 ( &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; 모듈 참조 ).</target>
        </trans-unit>
        <trans-unit id="09ea9f7f73faac3fad9f64997c059ff0423cc3fc" translate="yes" xml:space="preserve">
          <source>The IP address of the virtual host;</source>
          <target state="translated">가상 호스트의 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="429126465977cda3c526f99d846a401b875971cb" translate="yes" xml:space="preserve">
          <source>The IP of the user agent making the request</source>
          <target state="translated">요청하는 사용자 에이전트의 IP</target>
        </trans-unit>
        <trans-unit id="1b79da969a362a66f020c46983124ed18949cb59" translate="yes" xml:space="preserve">
          <source>The Java code that reads this grabs the first two-byte integer and if it sees an &lt;code&gt;'0xA0'&lt;/code&gt; in the most significant byte, it uses the integer in the second byte as an index into an array of header names. If the first byte is not &lt;code&gt;0xA0&lt;/code&gt;, it assumes that the two-byte integer is the length of a string, which is then read in.</source>
          <target state="translated">이 코드를 읽는 Java 코드는 첫 번째 2 바이트 정수를 가져오고 최상위 바이트에서 &lt;code&gt;'0xA0'&lt;/code&gt; 을 발견하면 두 번째 바이트의 정수를 헤더 이름 배열의 색인으로 사용합니다. 첫 번째 바이트가 &lt;code&gt;0xA0&lt;/code&gt; 이 아닌 경우 2 바이트 정수는 문자열의 길이 인 것으로 가정하여 읽습니다.</target>
        </trans-unit>
        <trans-unit id="434ab60f09c9f325749a307483f5b10be172d5b3" translate="yes" xml:space="preserve">
          <source>The Java standards implement URL encoding slightly different. They use a path info appended to the URL using a semicolon (&lt;code&gt;;&lt;/code&gt;) as the separator and add the session id behind. As in the cookie case, Apache Tomcat can include the configured &lt;code&gt;jvmRoute&lt;/code&gt; in this path info. To let Apache find this sort of path info, you neet to set &lt;code&gt;scolonpathdelim&lt;/code&gt; to &lt;code&gt;On&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Java 표준은 URL 인코딩이 약간 다릅니다. 세미콜론 ( &lt;code&gt;;&lt;/code&gt; )을 구분 기호로 사용하여 URL에 추가 된 경로 정보를 사용 하고 세션 ID를 뒤에 추가합니다. 쿠키 케이스에서와 같이 Apache Tomcat 은이 경로 정보에 구성된 &lt;code&gt;jvmRoute&lt;/code&gt; 를 포함 할 수 있습니다 . Apache가 이런 종류의 경로 정보를 찾도록하려면 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;scolonpathdelim&lt;/code&gt; 을 &lt;code&gt;On&lt;/code&gt; 으로 설정 해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="ae0358e0a2f7e0669d1e001c32bd9611d879b0ce" translate="yes" xml:space="preserve">
          <source>The Keep-Alive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long-lived HTTP sessions which allow multiple requests to be sent over the same TCP connection. In some cases this has been shown to result in an almost 50% speedup in latency times for HTML documents with many images. To enable Keep-Alive connections, set &lt;code&gt;KeepAlive On&lt;/code&gt;.</source>
          <target state="translated">HTTP / 1.0에 대한 Keep-Alive 확장 및 HTTP / 1.1의 지속적 연결 기능은 오래 지속되는 HTTP 세션을 제공하여 여러 요청을 동일한 TCP 연결을 통해 보낼 수 있습니다. 경우에 따라 이미지가 많은 HTML 문서의 대기 시간이 거의 50 % 단축되는 것으로 나타났습니다. 연결 유지 연결을 사용하려면 설정 &lt;code&gt;KeepAlive On&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9510a83e3106549d2bcc97cb0e3ee306905f53e6" translate="yes" xml:space="preserve">
          <source>The Load balancing scheduler algorithm is not provided by this module but from other ones such as:</source>
          <target state="translated">로드 밸런싱 스케줄러 알고리즘은이 모듈에서 제공되지 않지만 다음과 같은 다른 모듈에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9c7ff06d9fef75c58e417cf1932186c037f0d873" translate="yes" xml:space="preserve">
          <source>The MD5 algorithm used by &lt;code&gt;htdbm&lt;/code&gt; is specific to the Apache software; passwords encrypted using it will not be usable with other Web servers.</source>
          <target state="translated">&lt;code&gt;htdbm&lt;/code&gt; 에서 사용하는 MD5 알고리즘 은 Apache 소프트웨어에만 해당됩니다. 이를 사용하여 암호화 된 비밀번호는 다른 웹 서버에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="272390d44c776562290e5e450e962c4dea323bda" translate="yes" xml:space="preserve">
          <source>The MD5 algorithm used by &lt;code&gt;htpasswd&lt;/code&gt; is specific to the Apache software; passwords encrypted using it will not be usable with other Web servers.</source>
          <target state="translated">&lt;code&gt;htpasswd&lt;/code&gt; 가 사용하는 MD5 알고리즘 은 Apache 소프트웨어에만 해당됩니다. 이를 사용하여 암호화 된 비밀번호는 다른 웹 서버에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="93e9aee4219e7df47ac56df9a65ff266be3e5894" translate="yes" xml:space="preserve">
          <source>The MPM assumes that the underlying &lt;code&gt;apr_pollset&lt;/code&gt; implementation is reasonably threadsafe. This enables the MPM to avoid excessive high level locking, or having to wake up the listener thread in order to send it a keep-alive socket. This is currently only compatible with KQueue and EPoll.</source>
          <target state="translated">MPM은 기본 &lt;code&gt;apr_pollset&lt;/code&gt; 구현이 스레드 안전 하다고 가정 합니다. 이를 통해 MPM은 과도한 높은 수준의 잠금을 피하거나 연결 유지 소켓을 보내기 위해 리스너 스레드를 깨워 야합니다. 현재 KQueue 및 EPoll 과만 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="3dd3710386d1274acc7b53f51f9d3db59a360338" translate="yes" xml:space="preserve">
          <source>The MPM falls back to a safer implementation, but some client requests were not processed correctly. In order to avoid this error, use &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; with accept filter &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">MPM은보다 안전한 구현으로 돌아가지만 일부 클라이언트 요청은 올바르게 처리되지 않았습니다. 이 오류를 피하려면 accept filter &lt;code&gt;none&lt;/code&gt; 과 함께 &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0cd92e4b6eb75063fc3a0091b215834ef651b3e" translate="yes" xml:space="preserve">
          <source>The Negotiation Methods</source>
          <target state="translated">협상 방법</target>
        </trans-unit>
        <trans-unit id="ccc4ef1da1f5f05269befbe474b84abd307f6037" translate="yes" xml:space="preserve">
          <source>The OCSP responder used is either extracted from the certificate itself, or derived by configuration; see the &lt;code&gt;&lt;a href=&quot;#sslocspdefaultresponder&quot;&gt;SSLOCSPDefaultResponder&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sslocspoverrideresponder&quot;&gt;SSLOCSPOverrideResponder&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">사용 된 OCSP 응답자는 인증서 자체에서 추출되거나 구성에 의해 파생됩니다. &lt;code&gt;&lt;a href=&quot;#sslocspdefaultresponder&quot;&gt;SSLOCSPDefaultResponder&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#sslocspoverrideresponder&quot;&gt;SSLOCSPOverrideResponder&lt;/a&gt;&lt;/code&gt; 지시문을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6016270d3693ea563dcf99cd71a8bd9a3ba4c4f7" translate="yes" xml:space="preserve">
          <source>The Online Certificate Status Protocol (OCSP) is a mechanism for determining whether or not a server certificate has been revoked, and OCSP Stapling is a special form of this in which the server, such as httpd and mod_ssl, maintains current OCSP responses for its certificates and sends them to clients which communicate with the server. Most certificates contain the address of an OCSP responder maintained by the issuing Certificate Authority, and mod_ssl can communicate with that responder to obtain a signed response that can be sent to clients communicating with the server.</source>
          <target state="translated">OCSP (Online Certificate Status Protocol)는 서버 인증서가 해지되었는지 여부를 결정하는 메커니즘이며, OCSP Stapling은 서버의 인증서에 대한 현재 OCSP 응답을 httpd 및 mod_ssl과 같이 유지하는 특별한 형태입니다. 서버와 통신하는 클라이언트에게 전송합니다. 대부분의 인증서에는 발급하는 인증 기관에서 유지 관리하는 OCSP 응답자의 주소가 포함되어 있으며 mod_ssl은 해당 응답자와 통신하여 서버와 통신하는 클라이언트에게 보낼 수있는 서명 된 응답을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9cdbb7ae797604c5bfa15afeea9fa100693886b" translate="yes" xml:space="preserve">
          <source>The OpenSSL library is cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.</source>
          <target state="translated">OpenSSL 라이브러리는 암호화 소프트웨어입니다. 귀하가 현재 거주하는 국가에는 암호화 소프트웨어의 다른 국가로의 수입, 소유, 사용 및 / 또는 재수출이 제한 될 수 있습니다. 암호화 소프트웨어를 사용하기 전에 암호화 소프트웨어의 수입, 소유 또는 사용 및 재수출에 관한 해당 국가의 법률, 규정 및 정책을 확인하여 이것이 허용되는지 확인하십시오. 자세한 내용은 &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8453e2ab232b9f40dfdd1d572106f50ba767c3f1" translate="yes" xml:space="preserve">
          <source>The OpenSSL program version</source>
          <target state="translated">OpenSSL 프로그램 버전</target>
        </trans-unit>
        <trans-unit id="fda571a6044efa55473bb7304a99d11684cedf5c" translate="yes" xml:space="preserve">
          <source>The Options directive applied to the current request.</source>
          <target state="translated">Options 지시문은 현재 요청에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e17cb003861879abb6d9e3f170b6559debbf754a" translate="yes" xml:space="preserve">
          <source>The PATH_INFO extracted from this request.</source>
          <target state="translated">이 요청에서 PATH_INFO가 추출되었습니다.</target>
        </trans-unit>
        <trans-unit id="99e44d0cf2be10d375830ae80f6bd9fd364f29b1" translate="yes" xml:space="preserve">
          <source>The Prerequisites</source>
          <target state="translated">전제 조건</target>
        </trans-unit>
        <trans-unit id="098cf49fe8da0339fd834f24627c394f95a576c4" translate="yes" xml:space="preserve">
          <source>The Request headers, Response headers and Environment variables are now interpreted from syntax &lt;var&gt;%{req:foo}&lt;/var&gt;, &lt;var&gt;%{resp:foo}&lt;/var&gt; and &lt;var&gt;%{env:foo}&lt;/var&gt; respectively. The variables &lt;var&gt;%{HANDLER}&lt;/var&gt; and &lt;var&gt;%{CONTENT_TYPE}&lt;/var&gt; are also supported.</source>
          <target state="translated">요청 헤더, 응답 헤더 및 환경 변수는 이제 각각 구문 &lt;var&gt;%{req:foo}&lt;/var&gt; , &lt;var&gt;%{resp:foo}&lt;/var&gt; 및 &lt;var&gt;%{env:foo}&lt;/var&gt; 에서 해석 됩니다. &lt;var&gt;%{HANDLER}&lt;/var&gt; 및 &lt;var&gt;%{CONTENT_TYPE}&lt;/var&gt; 변수 도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="05b93a74f3c5c680fb939852f057c049d6b820ab" translate="yes" xml:space="preserve">
          <source>The Require Directives</source>
          <target state="translated">지시어 필요</target>
        </trans-unit>
        <trans-unit id="b944c98361c15903f5c451a5072884024da2f9af" translate="yes" xml:space="preserve">
          <source>The SDK supports SSL only. An attempt to use STARTTLS will cause an error when an attempt is made to contact the LDAP server at runtime.</source>
          <target state="translated">SDK는 SSL 만 지원합니다. STARTTLS를 사용하려고하면 런타임에 LDAP 서버에 접속하려고 할 때 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5f9ce00571b539be9eb61d9fd433bbf07a7352e9" translate="yes" xml:space="preserve">
          <source>The SDK supports both SSL and STARTTLS, set using the LDAPTrustedMode parameter. If an ldaps:// URL is specified, SSL mode is forced, override this directive.</source>
          <target state="translated">SDK는 LDAPTrustedMode 매개 변수를 사용하여 설정된 SSL 및 STARTTLS를 모두 지원합니다. ldaps : // URL이 지정되면 SSL 모드가 강제 실행되므로이 ​​지정 문을 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="8a480bdd60f7632cec4591edf73bd8eb28f9fea6" translate="yes" xml:space="preserve">
          <source>The SHA and &lt;code&gt;crypt()&lt;/code&gt; formats are insecure by today's standards.</source>
          <target state="translated">오늘날의 표준 에서는 SHA 및 &lt;code&gt;crypt()&lt;/code&gt; 형식이 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="042045eb86bc446d4efe4ba72d6df85a45ff023b" translate="yes" xml:space="preserve">
          <source>The SHA encryption format does not use salting: for a given password, there is only one encrypted representation. The &lt;code&gt;crypt()&lt;/code&gt; and MD5 formats permute the representation by prepending a random salt string, to make dictionary attacks against the passwords more difficult.</source>
          <target state="translated">SHA 암호화 형식은 솔팅을 사용하지 않습니다. 지정된 비밀번호에는 암호화 된 표현이 하나만 있습니다. 그만큼 &lt;code&gt;crypt()&lt;/code&gt; 와 MD5 형식은 암호에 대한 사전 공격을 더 어렵게 만듭니다, 임의의 소금 문자열을 앞에 붙이는 표현을 바꾸어 넣습니다.</target>
        </trans-unit>
        <trans-unit id="4002dc5ac1d56a7f9b15c0cf71a6b0f34d6b2ca7" translate="yes" xml:space="preserve">
          <source>The SHA1 variant is probably the most useful format for DBD authentication. Since the SHA1 and Base64 functions are commonly available, other software can populate a database with encrypted passwords that are usable by Apache basic authentication.</source>
          <target state="translated">SHA1 변형은 아마도 DBD 인증에 가장 유용한 형식 일 것입니다. SHA1 및 Base64 기능은 일반적으로 사용 가능하므로 다른 소프트웨어는 Apache 기본 인증에서 사용할 수있는 암호화 된 비밀번호로 데이터베이스를 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d459da433a00e50375ff7f0d840b6322a4fa7077" translate="yes" xml:space="preserve">
          <source>The SQL query to use to insert sessions into the database</source>
          <target state="translated">데이터베이스에 세션을 삽입하는 데 사용할 SQL 쿼리</target>
        </trans-unit>
        <trans-unit id="673ca5987b9cb422f43f011fef6c39aa5c0d45fc" translate="yes" xml:space="preserve">
          <source>The SQL query to use to remove sessions from the database</source>
          <target state="translated">데이터베이스에서 세션을 제거하는 데 사용할 SQL 쿼리</target>
        </trans-unit>
        <trans-unit id="b695959e3e0c35faffb34dd6dfd4033337a2fd4d" translate="yes" xml:space="preserve">
          <source>The SQL query to use to select sessions from the database</source>
          <target state="translated">데이터베이스에서 세션을 선택하는 데 사용할 SQL 쿼리</target>
        </trans-unit>
        <trans-unit id="e09158fae5249c4ef66b09e302a85de15c269558" translate="yes" xml:space="preserve">
          <source>The SQL query to use to update existing sessions in the database</source>
          <target state="translated">데이터베이스에서 기존 세션을 업데이트하는 데 사용할 SQL 쿼리</target>
        </trans-unit>
        <trans-unit id="890d8dc0e56d33e4d47391bd02deb85b1189c6f3" translate="yes" xml:space="preserve">
          <source>The SSI variables set with the &lt;code&gt;var&lt;/code&gt; element are exported into the request environment and can be accessed with the &lt;code&gt;reqenv&lt;/code&gt; function. As a short-cut, the function name &lt;code&gt;v&lt;/code&gt; is also available inside &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 요소로 설정된 SSI 변수 는 요청 환경으로 내보내지고 &lt;code&gt;reqenv&lt;/code&gt; 함수를 사용하여 액세스 할 수 있습니다 . 바로 가기, 함수 이름 &lt;code&gt;v&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 내에서도 사용 가능합니다. .</target>
        </trans-unit>
        <trans-unit id="5a61e796fab3850dda99452898507666117db003" translate="yes" xml:space="preserve">
          <source>The SSL Protocol</source>
          <target state="translated">SSL 프로토콜</target>
        </trans-unit>
        <trans-unit id="c6c61f78b59c838e1aa1e433a78c82b90b2996fc" translate="yes" xml:space="preserve">
          <source>The SSL Record Protocol, shown in &lt;a href=&quot;#figure3&quot;&gt;Figure 3&lt;/a&gt;, is used to transfer application and SSL Control data between the client and server, where necessary fragmenting this data into smaller units, or combining multiple higher level protocol data messages into single units. It may compress, attach digest signatures, and encrypt these units before transmitting them using the underlying reliable transport protocol (Note: currently, no major SSL implementations include support for compression).</source>
          <target state="translated">&lt;a href=&quot;#figure3&quot;&gt;그림 3에&lt;/a&gt; 표시된 SSL 레코드 프로토콜 은 클라이언트와 서버간에 애플리케이션 및 SSL 제어 데이터를 전송하는 데 사용되며, 필요한 경우이 데이터를 더 작은 단위로 조각화하거나 여러 개의 상위 레벨 프로토콜 데이터 메시지를 단일 단위로 결합합니다. 기본 신뢰할 수있는 전송 프로토콜을 사용하여 전송하기 전에 다이제스트 서명을 압축하고 첨부하고 암호화 할 수 있습니다 (참고 : 현재 주요 SSL 구현에는 압축 지원이 포함되어 있지 않습니다).</target>
        </trans-unit>
        <trans-unit id="44a9f6d8a4c703bd5057c40265f10ce157d32d27" translate="yes" xml:space="preserve">
          <source>The SSL protocol version (SSLv3, TLSv1, TLSv1.1, TLSv1.2)</source>
          <target state="translated">SSL 프로토콜 버전 (SSLv3, TLSv1, TLSv1.1, TLSv1.2)</target>
        </trans-unit>
        <trans-unit id="1ac93b445518ee79caa0e99b0e4143a6229f3fdc" translate="yes" xml:space="preserve">
          <source>The SSL session is established by following a handshake sequence between client and server, as shown in &lt;a href=&quot;#figure1&quot;&gt;Figure 1&lt;/a&gt;. This sequence may vary, depending on whether the server is configured to provide a server certificate or request a client certificate. Although cases exist where additional handshake steps are required for management of cipher information, this article summarizes one common scenario. See the SSL specification for the full range of possibilities.</source>
          <target state="translated">SSL 세션은 &lt;a href=&quot;#figure1&quot;&gt;그림 1&lt;/a&gt; 과 같이 클라이언트와 서버 간의 핸드 셰이크 순서에 따라 설정됩니다 . 이 순서는 서버가 서버 인증서를 제공하도록 구성되어 있는지 또는 클라이언트 인증서를 요청하도록 구성되어 있는지에 따라 달라질 수 있습니다. 암호 정보 관리를 위해 추가 핸드 셰이크 단계가 필요한 경우가 있지만이 문서에서는 일반적인 시나리오 하나를 요약합니다. 모든 가능성에 대해서는 SSL 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a54c5272ff150e3d5df945113bb435a79d592c23" translate="yes" xml:space="preserve">
          <source>The Search/Bind Cache</source>
          <target state="translated">검색 / 바인드 캐시</target>
        </trans-unit>
        <trans-unit id="49310bf29aad8332e770f8ead213931578070175" translate="yes" xml:space="preserve">
          <source>The Secure Sockets Layer protocol is a protocol layer which may be placed between a reliable connection-oriented network layer protocol (e.g. TCP/IP) and the application protocol layer (e.g. HTTP). SSL provides for secure communication between client and server by allowing mutual authentication, the use of digital signatures for integrity and encryption for privacy.</source>
          <target state="translated">SSL (Secure Sockets Layer) 프로토콜은 안정적인 연결 지향 네트워크 계층 프로토콜 (예 : TCP / IP)과 응용 프로그램 프로토콜 계층 (예 : HTTP) 사이에 배치 될 수있는 프로토콜 계층입니다. SSL은 상호 인증, 무결성을위한 디지털 서명 사용 및 개인 정보 보호를위한 암호화를 통해 클라이언트와 서버 간의 안전한 통신을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4365c6f60029eb0d318514f7ec1af31248f5c125" translate="yes" xml:space="preserve">
          <source>The Server consists of a main, parent process and a small, static number of child processes.</source>
          <target state="translated">서버는 기본 상위 프로세스와 작은 정적 수의 하위 프로세스로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="dcae11cd5d68e586863b4eedfce1b931151aa715" translate="yes" xml:space="preserve">
          <source>The Shared Object Cache provides a means to share simple data across all a server's workers, regardless of &lt;a href=&quot;mpm&quot;&gt;thread and process models&lt;/a&gt;. It is used where the advantages of sharing data across processes outweigh the performance overhead of inter-process communication.</source>
          <target state="translated">공유 객체 캐시는 &lt;a href=&quot;mpm&quot;&gt;스레드 및 프로세스 모델에&lt;/a&gt; 관계없이 모든 서버 작업자간에 간단한 데이터를 공유 할 수있는 수단을 제공합니다 . 프로세스 간 데이터 공유의 이점이 프로세스 간 통신의 성능 오버 헤드보다 큰 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1abad07e3d1aa8bd1c8451feaeeb7559587ff9ed" translate="yes" xml:space="preserve">
          <source>The Simple Way is the only way to configure input filters, and is sufficient for output filters where you need a static filter chain. Relevant directives are &lt;code&gt;&lt;a href=&quot;mod/core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeinputfilter&quot;&gt;RemoveInputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeoutputfilter&quot;&gt;RemoveOutputFilter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">단순 방법은 입력 필터를 구성 할 수있는 유일한 방법이며 정적 필터 체인이 필요한 출력 필터에 충분합니다. 관련 지시문은 &lt;code&gt;&lt;a href=&quot;mod/core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeinputfilter&quot;&gt;RemoveInputFilter&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/mod_mime#removeoutputfilter&quot;&gt;RemoveOutputFilter&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f3d7f75401c4ec0ef7b3b30438232a225ca29900" translate="yes" xml:space="preserve">
          <source>The Status module allows a server administrator to find out how well their server is performing. A HTML page is presented that gives the current server statistics in an easily readable form. If required this page can be made to automatically refresh (given a compatible browser). Another page gives a simple machine-readable list of the current server state.</source>
          <target state="translated">상태 모듈을 사용하면 서버 관리자가 서버 성능을 확인할 수 있습니다. 현재 서버 통계를 쉽게 읽을 수있는 형태로 제공하는 HTML 페이지가 제공됩니다. 필요한 경우이 페이지를 자동으로 새로 고치도록 만들 수 있습니다 (호환되는 브라우저가 제공됨). 다른 페이지는 현재 서버 상태의 간단한 기계 판독 가능 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f3ab4bf7b234aa6c4a48c2175aea4c28a6af9697" translate="yes" xml:space="preserve">
          <source>The TLS protocol provides communications security over the Internet. It provides encryption, and is designed to prevent eavesdropping, tampering, and message forgery.</source>
          <target state="translated">TLS 프로토콜은 인터넷을 통한 통신 보안을 제공합니다. 암호화 기능을 제공하며 도청, 변조 및 메시지 위조를 방지하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e3e7604d74be6d87d20256b917c3159243d7c73" translate="yes" xml:space="preserve">
          <source>The TRACE method cannot be denied by this module; use &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">이 모듈은 TRACE 메소드를 거부 할 수 없습니다. 사용 &lt;code&gt;&lt;a href=&quot;core#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; 을 대신.</target>
        </trans-unit>
        <trans-unit id="15d0dbfba819ad64380939f38dd5fddc487de715" translate="yes" xml:space="preserve">
          <source>The URI after it has been parsed by httpd</source>
          <target state="translated">httpd에 의해 구문 분석 된 후의 URI</target>
        </trans-unit>
        <trans-unit id="ddaa65440c33cb529bc3125069237860ae391671" translate="yes" xml:space="preserve">
          <source>The URIs specified can also point to different servers, in which case clients (which understand this) will then share username/password info across multiple servers without prompting the user each time.</source>
          <target state="translated">지정된 URI는 다른 서버를 가리킬 수도 있습니다.이 경우 클라이언트 (이를 이해하는 경우)는 매번 사용자에게 프롬프트하지 않고 여러 서버에서 사용자 이름 / 암호 정보를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="b870aac38888b075c470a1c9e7600b18df118feb" translate="yes" xml:space="preserve">
          <source>The URL argument must be parsable as a URL &lt;em&gt;before&lt;/em&gt; regexp substitutions (as well as after). This limits the matches you can use. For instance, if we had used</source>
          <target state="translated">URL 인수는 정규 표현식 대체 (및 이후) &lt;em&gt;전에&lt;/em&gt; URL로 구문 분석 할 수 있어야합니다 . 사용 가능한 일치가 제한됩니다. 예를 들어, 우리가 사용한 경우</target>
        </trans-unit>
        <trans-unit id="6f0cf55202f8c8db86fcb5273eee1f6b03b7f61b" translate="yes" xml:space="preserve">
          <source>The URL can be relative or absolute URL. Relative URLs can contain '..' syntax and will be resolved relative to the &lt;code&gt;base&lt;/code&gt; value.</source>
          <target state="translated">URL은 상대 또는 절대 URL 일 수 있습니다. 상대 URL은 '..'구문을 포함 할 수 있으며 &lt;code&gt;base&lt;/code&gt; 값을 기준으로 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f12a418ba0489eb420b0fbec0de24af139518cd" translate="yes" xml:space="preserve">
          <source>The URL identifying a direct worker is the URL of its origin server including any path components given:</source>
          <target state="translated">직접 작업자를 식별하는 URL은 지정된 경로 구성 요소를 포함하여 원래 서버의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="4237b79810ef3dee203442075a65f37b237103b6" translate="yes" xml:space="preserve">
          <source>The URL may use wildcards. In a wild-card string, &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters. Neither wildcard character matches a / in the URL-path.</source>
          <target state="translated">URL은 와일드 카드를 사용할 수 있습니다. 와일드 카드 문자열에서 &lt;code&gt;?&lt;/code&gt; 모든 단일 문자와 일치 하고 &lt;code&gt;*&lt;/code&gt; 는 모든 문자 시퀀스와 일치합니다. 와일드 카드 문자는 URL 경로의 /와 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d5047a93b1393f0662ecf15d103a6efe30285d6" translate="yes" xml:space="preserve">
          <source>The URL of the ACME Certificate Authority service.</source>
          <target state="translated">ACME 인증 기관 서비스의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="0aa183fe62551e431226f8ee5d6d6c953c64ec12" translate="yes" xml:space="preserve">
          <source>The URL of the Terms-of-Service document, that the CA server requires you to accept.</source>
          <target state="translated">CA 서버에서 승인해야하는 서비스 약관 문서의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="a1df0be4f7d12389a1d1a863200c2c0d27802ee7" translate="yes" xml:space="preserve">
          <source>The URL of the entry.</source>
          <target state="translated">항목의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="01c96e6345815d45bddf4031ba34ef0899135813" translate="yes" xml:space="preserve">
          <source>The URL of the page to be redirected to should login be required</source>
          <target state="translated">로그인해야하는 페이지의 URL이 필요합니다</target>
        </trans-unit>
        <trans-unit id="97186df97d5c2b68117ff19786a75088524ff92c" translate="yes" xml:space="preserve">
          <source>The URL of the page to be redirected to should login be successful</source>
          <target state="translated">로그인이 성공해야하는 페이지의 URL</target>
        </trans-unit>
        <trans-unit id="d50852b923efbc41e749b48a4327fe04b6b08b0c" translate="yes" xml:space="preserve">
          <source>The URL path requested, not including any query string.</source>
          <target state="translated">쿼리 문자열을 포함하지 않고 요청한 URL 경로입니다.</target>
        </trans-unit>
        <trans-unit id="30da3a448d0d77fd926aa78b3710b53b71ce1a8b" translate="yes" xml:space="preserve">
          <source>The URL to redirect to after a user has logged out</source>
          <target state="translated">사용자가 로그 아웃 한 후 리디렉션 할 URL</target>
        </trans-unit>
        <trans-unit id="114b7b90dba857c46ce1e6e4b108df48327fd8d0" translate="yes" xml:space="preserve">
          <source>The URL where the CA offers its service.</source>
          <target state="translated">CA가 서비스를 제공하는 URL입니다.</target>
        </trans-unit>
        <trans-unit id="9dadce27d5acaac2e145205bbb4cc805ec54612a" translate="yes" xml:space="preserve">
          <source>The URL-path may represent any number of things on the server. It may be a file (like &lt;code&gt;getting-started.html&lt;/code&gt;) a handler (like &lt;a href=&quot;mod/mod_status&quot;&gt;server-status&lt;/a&gt;) or some kind of program file (like &lt;code&gt;index.php&lt;/code&gt;). We'll discuss this more below in the &lt;a href=&quot;#content&quot;&gt;Web Site Content&lt;/a&gt; section.</source>
          <target state="translated">URL 경로는 서버에서 여러 가지를 나타낼 수 있습니다. 파일 (예 : &lt;code&gt;getting-started.html&lt;/code&gt; ) 처리기 ( &lt;a href=&quot;mod/mod_status&quot;&gt;server-status 등&lt;/a&gt; ) 또는 일종의 프로그램 파일 (예 : &lt;code&gt;index.php&lt;/code&gt; ) 일 수 있습니다. 이에 대해서는 아래 &lt;a href=&quot;#content&quot;&gt;웹 사이트 컨텐츠&lt;/a&gt; 섹션 에서 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="230a18269d71cf6d2fdb092faf9f45f1917f947f" translate="yes" xml:space="preserve">
          <source>The URLs specified by the &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive will typically point to a page explaining to the user that their login attempt was unsuccessful, and they should try again. The &lt;code&gt;&lt;a href=&quot;#authformloginsuccesslocation&quot;&gt;AuthFormLoginSuccessLocation&lt;/a&gt;&lt;/code&gt; directive specifies the URL the user should be redirected to upon successful login.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; 지시문으로 지정된 URL 은 일반적으로 사용자에게 로그인 시도가 실패했음을 설명하는 페이지를 가리키며 다시 시도해야합니다. &lt;code&gt;&lt;a href=&quot;#authformloginsuccesslocation&quot;&gt;AuthFormLoginSuccessLocation&lt;/a&gt;&lt;/code&gt; 의 지시어는 사용자가 성공적으로 로그인시에 리디렉션 할 URL을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4c27a54935962689e4aa570f2dd823a559acde9d" translate="yes" xml:space="preserve">
          <source>The User-Agent HTTP request header. This is the identifying information that the client browser reports about itself.</source>
          <target state="translated">User-Agent HTTP 요청 헤더 이것은 클라이언트 브라우저가 자신에 대해보고하는 식별 정보입니다.</target>
        </trans-unit>
        <trans-unit id="16ba92f492d0a9cfcf637022df04292fdc1785b4" translate="yes" xml:space="preserve">
          <source>The Vary mechanism allows multiple variants of the same URL to be cached side by side. Depending on header values provided by the client, the cache will select the correct variant to return to the client. This mechanism can become a problem when an attempt is made to vary on a header that is known to contain a wide range of possible values under normal use, for example the &lt;code&gt;User-Agent&lt;/code&gt; header. Depending on the popularity of the particular web site thousands or millions of duplicate cache entries could be created for the same URL, crowding out other entries in the cache.</source>
          <target state="translated">Vary 메커니즘을 사용하면 동일한 URL의 여러 변형이 나란히 캐시 될 수 있습니다. 클라이언트가 제공 한 헤더 값에 따라 캐시는 클라이언트에 반환 할 올바른 변형을 선택합니다. 이 메커니즘은 &lt;code&gt;User-Agent&lt;/code&gt; 헤더 와 같이 일반적으로 사용되는 광범위한 값을 포함하는 것으로 알려진 헤더를 변경하려고 할 때 문제가 될 수 있습니다 . 특정 웹 사이트의 인기에 따라 동일한 URL에 대해 수천 또는 수백만 개의 중복 캐시 항목이 생성되어 캐시의 다른 항목이 가득 찼습니다.</target>
        </trans-unit>
        <trans-unit id="afa41ac3e6e03beaf158a1bfe39288e874cb95cf" translate="yes" xml:space="preserve">
          <source>The Visual Studio IDE will only find &lt;code&gt;awk.exe&lt;/code&gt; from the PATH, or executable path specified in the menu option Tools -&amp;gt; Options -&amp;gt; (Projects -&amp;gt;) Directories. Ensure awk.exe is in your system path.</source>
          <target state="translated">Visual Studio IDE는 메뉴 옵션 도구-&amp;gt; 옵션-&amp;gt; (프로젝트-&amp;gt;) 디렉토리에 지정된 PATH 또는 실행 가능 경로 에서만 &lt;code&gt;awk.exe&lt;/code&gt; 를 찾습니다 . awk.exe가 시스템 경로에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3a90432965dd3c4b1971fb50a8552c6e3cd32ba" translate="yes" xml:space="preserve">
          <source>The WinNT MPM differs from the Unix MPMs such as worker and event in several areas:</source>
          <target state="translated">WinNT MPM은 여러 영역에서 작업자 및 이벤트와 같은 Unix MPM과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3cd3318d1ef1eb4cd75851e159ad8e4789f65d91" translate="yes" xml:space="preserve">
          <source>The [BNP] flag instructs &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; to escape the space character in a backreference to %20 rather than '+'. Useful when the backreference will be used in the path component rather than the query string.</source>
          <target state="translated">[BNP] 플래그는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 이 역 참조에서 공백 문자를 '+'가 아닌 % 20으로 이스케이프하도록 지시 합니다. 역 참조가 쿼리 문자열이 아닌 경로 구성 요소에서 사용될 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="03215c2239d3786a72605e10369a3c279126dc28" translate="yes" xml:space="preserve">
          <source>The [B] flag instructs &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; to escape non-alphanumeric characters before applying the transformation.</source>
          <target state="translated">[B] 플래그 는 변환을 적용하기 전에 영숫자가 아닌 문자를 이스케이프 하도록 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 에 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="a2b48b0dd7886a378616398df3a4f4e73809ba04" translate="yes" xml:space="preserve">
          <source>The [CO], or [cookie] flag, allows you to set a cookie when a particular &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; matches. The argument consists of three required fields and four optional fields.</source>
          <target state="translated">[CO] 또는 [cookie] 플래그를 사용하면 특정 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 이 일치 할 때 쿠키를 설정할 수 있습니다 . 인수는 3 개의 필수 필드와 4 개의 선택적 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ff19eb0b90ca3eaa9e6810b3b7ea42f1faf25a56" translate="yes" xml:space="preserve">
          <source>The [C] or [chain] flag indicates that the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; is chained to the next rule. That is, if the rule matches, then it is processed as usual and control moves on to the next rule. However, if it does not match, then the next rule, and any other rules that are chained together, are skipped.</source>
          <target state="translated">[C] 또는 [chain] 플래그는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 이 다음 규칙에 연결 되었음을 나타냅니다 . 즉, 규칙이 일치하면 규칙이 정상적으로 처리되고 다음 규칙으로 제어가 넘어갑니다. 그러나 일치하지 않으면 다음 규칙과 함께 연결된 다른 규칙은 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="aded4925d03194b4a2ddefbffd2e251762983f04" translate="yes" xml:space="preserve">
          <source>The [G] flag forces the server to return a 410 Gone status with the response. This indicates that a resource used to be available, but is no longer available.</source>
          <target state="translated">[G] 플래그는 서버가 응답과 함께 410 Gone 상태를 리턴하도록합니다. 리소스가 사용 가능했지만 더 이상 사용할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="37645a9a72c1a820de6cbffbe9ddfb38dfec71ac" translate="yes" xml:space="preserve">
          <source>The [L] flag causes &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; to stop processing the rule set. In most contexts, this means that if the rule matches, no further rules will be processed. This corresponds to the &lt;code&gt;last&lt;/code&gt; command in Perl, or the &lt;code&gt;break&lt;/code&gt; command in C. Use this flag to indicate that the current rule should be applied immediately without considering further rules.</source>
          <target state="translated">[L] 플래그는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 가 룰 세트 처리를 중지 시킵니다 . 대부분의 상황에서 이는 규칙이 일치하면 더 이상 규칙이 처리되지 않음을 의미합니다. 이는 Perl 의 &lt;code&gt;last&lt;/code&gt; 명령 또는 C 의 &lt;code&gt;break&lt;/code&gt; 명령에 해당합니다.이 플래그를 사용하면 추가 규칙을 고려하지 않고 현재 규칙을 즉시 적용해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d6c62c0e97eb5deaaa49d377d4a68d3bdeb1ec83" translate="yes" xml:space="preserve">
          <source>The [N] flag causes the ruleset to start over again from the top, using the result of the ruleset so far as a starting point. Use with extreme caution, as it may result in loop.</source>
          <target state="translated">[N] 플래그는 규칙 세트의 결과를 시작점으로 사용하여 규칙 세트를 맨 위에서 다시 시작하게합니다. 루프가 발생할 수 있으므로 각별히주의하십시오.</target>
        </trans-unit>
        <trans-unit id="2a44dfda83f823b5995793c2208d66dcbdcefb80" translate="yes" xml:space="preserve">
          <source>The [Next] flag could be used, for example, if you wished to replace a certain string or letter repeatedly in a request. The example shown here will replace A with B everywhere in a request, and will continue doing so until there are no more As to be replaced.</source>
          <target state="translated">예를 들어 요청에서 특정 문자열이나 문자를 반복해서 바꾸려는 경우 [Next] 플래그를 사용할 수 있습니다. 여기에 표시된 예는 요청의 모든 위치에서 A를 B로 바꾸며 교체 할 As가 더 이상 없을 때까지 계속합니다.</target>
        </trans-unit>
        <trans-unit id="83768fc99ab829e988fb5a3864af8724a71644ae" translate="yes" xml:space="preserve">
          <source>The [S] flag is used to skip rules that you don't want to run. The syntax of the skip flag is [S=&lt;em&gt;N&lt;/em&gt;], where &lt;em&gt;N&lt;/em&gt; signifies the number of rules to skip (provided the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt; RewriteRule&lt;/a&gt;&lt;/code&gt; matches). This can be thought of as a &lt;code&gt;goto&lt;/code&gt; statement in your rewrite ruleset. In the following example, we only want to run the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; if the requested URI doesn't correspond with an actual file.</source>
          <target state="translated">[S] 플래그는 실행하지 않으려는 규칙을 건너 뛰는 데 사용됩니다. 건너 뛰기 플래그의 구문은 [S = &lt;em&gt;N&lt;/em&gt; ]이며, 여기서 &lt;em&gt;N&lt;/em&gt; 은 건너 뛸 규칙 수를 나타냅니다 ( &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt; RewriteRule&lt;/a&gt;&lt;/code&gt; 과 일치하는 경우). 이것은 다시 쓰기 규칙 세트에서 &lt;code&gt;goto&lt;/code&gt; 문 으로 생각할 수 있습니다 . 다음 예제에서는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 만 실행하려고합니다. 요청 된 URI가 실제 파일과 일치하지 않는 경우 합니다.</target>
        </trans-unit>
        <trans-unit id="c34bfbc0efd3c011075c6d1daa7135019e735d00" translate="yes" xml:space="preserve">
          <source>The `modulus' and the `public exponent' portions in the key and the Certificate must match. As the public exponent is usually 65537 and it's difficult to visually check that the long modulus numbers are the same, you can use the following approach:</source>
          <target state="translated">키와 인증서의 '모듈러스'와 '공개 지수'부분이 일치해야합니다. 공개 지수는 일반적으로 65537이고 긴 계수가 동일한 지 육안으로 확인하기 어렵 기 때문에 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b46d737bcf90ef3ccc73123a6d988321f76c6c5" translate="yes" xml:space="preserve">
          <source>The ability to create an SSL and TLS connections to an LDAP server is defined by the directives &lt;code&gt;&lt;a href=&quot;#ldaptrustedglobalcert&quot;&gt;LDAPTrustedGlobalCert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ldaptrustedclientcert&quot;&gt;LDAPTrustedClientCert&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldaptrustedmode&quot;&gt;LDAPTrustedMode&lt;/a&gt;&lt;/code&gt;. These directives specify the CA and optional client certificates to be used, as well as the type of encryption to be used on the connection (none, SSL or TLS/STARTTLS).</source>
          <target state="translated">LDAP 서버에 대한 SSL 및 TLS 연결을 작성하는 기능은 지시문 &lt;code&gt;&lt;a href=&quot;#ldaptrustedglobalcert&quot;&gt;LDAPTrustedGlobalCert&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ldaptrustedclientcert&quot;&gt;LDAPTrustedClientCert&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ldaptrustedmode&quot;&gt;LDAPTrustedMode&lt;/a&gt;&lt;/code&gt; 로 정의됩니다 . 이 지시문은 사용할 CA 및 선택적 클라이언트 인증서와 연결에 사용될 암호화 유형 (없음, SSL 또는 TLS / STARTTLS)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7c7d9d7e4e052bb32aae186bae858e750129be67" translate="yes" xml:space="preserve">
          <source>The above DSO based features have the following advantages:</source>
          <target state="translated">위의 DSO 기반 기능에는 다음과 같은 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="71411e20e5d4f37e84e0540295615272edcb3a34" translate="yes" xml:space="preserve">
          <source>The above behavior can be changed by adding modifiers to the format string item. A &lt;code&gt;-&lt;/code&gt; (minus) modifier causes a minus to be logged if the respective item does not produce any output. In once-per-connection/request formats, it is also possible to use the &lt;code&gt;+&lt;/code&gt; (plus) modifier. If an item with the plus modifier does not produce any output, the whole line is omitted.</source>
          <target state="translated">형식 문자열 항목에 수정자를 추가하여 위의 동작을 변경할 수 있습니다. &lt;code&gt;-&lt;/code&gt; 각 제품의 출력을 얻을 수없는 경우에는 마이너스가 발생 개질제 (마이너스)를 기록한다. 연결 당 한 번 / 요청 형식에서 &lt;code&gt;+&lt;/code&gt; 를 사용하는 것도 가능합니다 (플러스) 수정자를 . 더하기 수정자가있는 항목이 출력을 생성하지 않으면 전체 행이 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="4901b67447affa4057bbca48c61eab51c66f3535" translate="yes" xml:space="preserve">
          <source>The above configuration is what you will want to use in almost all name-based virtual hosting situations. The only thing that this configuration will not work for, in fact, is when you are serving different content based on differing IP addresses or ports.</source>
          <target state="translated">위의 구성은 거의 모든 이름 기반 가상 호스팅 상황에서 사용하려는 것입니다. 실제로이 구성이 작동하지 않는 유일한 것은 다른 IP 주소 또는 포트를 기반으로 다른 컨텐츠를 제공 할 때입니다.</target>
        </trans-unit>
        <trans-unit id="dcbaf840199bd9ed4f8e65713e8286fa33677fc1" translate="yes" xml:space="preserve">
          <source>The above configuration will write log entries in a format known as the Common Log Format (CLF). This standard format can be produced by many different web servers and read by many log analysis programs. The log file entries produced in CLF will look something like this:</source>
          <target state="translated">위 구성은 CLF (Common Log Format) 형식으로 로그 항목을 작성합니다. 이 표준 형식은 여러 웹 서버에서 생성 할 수 있으며 여러 로그 분석 프로그램에서 읽을 수 있습니다. CLF에서 생성 된 로그 파일 항목은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="333804848401753116812f9184b2838e86500131" translate="yes" xml:space="preserve">
          <source>The above directive tells Apache to permit the execution of CGI files. You will also need to tell the server what files are CGI files. The following &lt;code&gt;&lt;a href=&quot;../mod/mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive tells the server to treat all files with the &lt;code&gt;cgi&lt;/code&gt; or &lt;code&gt;pl&lt;/code&gt; extension as CGI programs:</source>
          <target state="translated">위 지시어는 Apache에게 CGI 파일의 실행을 허용하도록 지시합니다. 또한 CGI 파일이 어떤 파일인지 서버에 알려 주어야합니다. 다음 &lt;code&gt;&lt;a href=&quot;../mod/mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; 지시문은 서버에 &lt;code&gt;cgi&lt;/code&gt; 또는 &lt;code&gt;pl&lt;/code&gt; 확장자를 가진 모든 파일을 CGI 프로그램 으로 처리하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="543ba16d058224f6302049ec0232bc29fcf0538d" translate="yes" xml:space="preserve">
          <source>The above directive would cause times to be displayed in the format &quot;22:26, June 14, 2002&quot;.</source>
          <target state="translated">위 지시어는 시간이 &quot;2002 년 6 월 14 일 22:26&quot;형식으로 표시되도록합니다.</target>
        </trans-unit>
        <trans-unit id="72f849d7471e39cd45a5cf3d855dd8ecd8affbd3" translate="yes" xml:space="preserve">
          <source>The above directives build components of a smart filter chain, but do not configure it to run. The &lt;code&gt;&lt;a href=&quot;#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; directive builds a filter chain from smart filters declared, offering the flexibility to insert filters at the beginning or end of the chain, remove a filter, or clear the chain.</source>
          <target state="translated">위 지시문은 스마트 필터 체인의 구성 요소를 빌드하지만 실행하도록 구성하지는 않습니다. &lt;code&gt;&lt;a href=&quot;#filterchain&quot;&gt;FilterChain&lt;/a&gt;&lt;/code&gt; 의 지시어는 스마트 필터에서 필터 체인, 체인의 시작이나 끝 부분에 필터를 삽입 필터를 제거하거나 체인을 취소 할 수있는 유연성을 제공하고, 선언 구축합니다.</target>
        </trans-unit>
        <trans-unit id="3c517390571a4c8182d4e151866edbd32c5b5b77" translate="yes" xml:space="preserve">
          <source>The above example will redirect &lt;code&gt;/anchor/xyz&lt;/code&gt; to &lt;code&gt;/bigpage.html#xyz&lt;/code&gt;. Omitting the [NE] will result in the # being converted to its hexcode equivalent, &lt;code&gt;%23&lt;/code&gt;, which will then result in a 404 Not Found error condition.</source>
          <target state="translated">위의 예는 &lt;code&gt;/anchor/xyz&lt;/code&gt; 를 &lt;code&gt;/bigpage.html#xyz&lt;/code&gt; 로 리디렉션 합니다. [NE]를 생략하면 #가 16 진 코드 인 &lt;code&gt;%23&lt;/code&gt; 으로 변환되어 404 Not Found 오류 조건이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="38ce81c915423a889137f15830e594ec8b86065a" translate="yes" xml:space="preserve">
          <source>The above example will redirect a request for &lt;code&gt;http://example.com/~bob/abc.html&lt;/code&gt; to &lt;code&gt;http://example.org/users/bob/abc.html&lt;/code&gt;.</source>
          <target state="translated">위의 예에 대한 요청 리디렉션 &lt;code&gt;http://example.com/~bob/abc.html&lt;/code&gt; 에 &lt;code&gt;http://example.org/users/bob/abc.html&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1d609694b0e4a4be5b8133ba1424a05c8176e6e9" translate="yes" xml:space="preserve">
          <source>The above is fine and dandy for multiple socket servers, but what about single socket servers? In theory they shouldn't experience any of these same problems because all the children can just block in &lt;code&gt;accept(2)&lt;/code&gt; until a connection arrives, and no starvation results. In practice this hides almost the same &quot;spinning&quot; behavior discussed above in the non-blocking solution. The way that most TCP stacks are implemented, the kernel actually wakes up all processes blocked in &lt;code&gt;accept&lt;/code&gt; when a single connection arrives. One of those processes gets the connection and returns to user-space. The rest spin in the kernel and go back to sleep when they discover there's no connection for them. This spinning is hidden from the user-land code, but it's there nonetheless. This can result in the same load-spiking wasteful behavior that a non-blocking solution to the multiple sockets case can.</source>
          <target state="translated">위의 내용은 여러 소켓 서버에 적합하지만 단일 소켓 서버는 어떻습니까? 이론적으로 그들은 모든 아이들 이 연결이 도착할 때까지 &lt;code&gt;accept(2)&lt;/code&gt; 에서 차단할 수 있고 기아 결과가 없기 때문에 이러한 동일한 문제를 경험해서는 안됩니다 . 실제로 이것은 비 차단 솔루션에서 위에서 설명한 거의 동일한 &quot;회전&quot;동작을 숨 깁니다. 대부분의 TCP 스택이 구현되는 방식으로 커널은 실제로 차단 된 모든 프로세스를 깨 웁니다. &lt;code&gt;accept&lt;/code&gt; 단일 연결이 도착했을 때 이러한 프로세스 중 하나가 연결을 얻고 사용자 공간으로 돌아갑니다. 나머지는 커널에서 돌아가서 연결이없는 것을 발견하면 다시 절전 모드로 돌아갑니다. 이 회전은 사용자 랜드 코드에서 숨겨져 있지만 그럼에도 불구하고 있습니다. 이로 인해 다중 소켓 케이스에 대한 비 차단 솔루션과 동일한로드 스파이 킹 낭비 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9b9a8096786c1d6ec3a1ca1494016009edbd4bb" translate="yes" xml:space="preserve">
          <source>The above search will only succeed if &lt;em&gt;fuser&lt;/em&gt; has a pager. When Joe Manager connects as &lt;em&gt;jmanager&lt;/em&gt;, the filter looks like</source>
          <target state="translated">위 검색은 &lt;em&gt;퓨저&lt;/em&gt; 에 호출기가있는 경우에만 성공합니다 . Joe Manager가 &lt;em&gt;jmanager로&lt;/em&gt; 연결 하면 필터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7a4646ee0b36b1666c32591e239cefcb69ef631e" translate="yes" xml:space="preserve">
          <source>The above search will succeed whether &lt;em&gt;jmanager&lt;/em&gt; has a pager or not.</source>
          <target state="translated">위의 검색은 &lt;em&gt;jmanager&lt;/em&gt; 에 호출기가 있는지 여부에 관계없이 성공합니다 .</target>
        </trans-unit>
        <trans-unit id="b22bfba8586aead96262a6ab679da9a67644d36e" translate="yes" xml:space="preserve">
          <source>The act of opening a file can itself be a source of delay, particularly on network filesystems. By maintaining a cache of open file descriptors for commonly served files, httpd can avoid this delay. Currently httpd provides one implementation of File-Handle Caching.</source>
          <target state="translated">파일을 여는 행위는 특히 네트워크 파일 시스템에서 지연의 원인이 될 수 있습니다. 일반적으로 제공되는 파일에 대해 열린 파일 디스크립터의 캐시를 유지함으로써 httpd는 이러한 지연을 피할 수 있습니다. 현재 httpd는 File-Handle Caching의 한 가지 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c796f9ddf1e63a9e1c50b103a242b26dfd541767" translate="yes" xml:space="preserve">
          <source>The action it performs is determined by the first argument (second argument if a &lt;var&gt;condition&lt;/var&gt; is specified). This can be one of the following values:</source>
          <target state="translated">수행하는 조치는 첫 번째 인수 ( &lt;var&gt;condition&lt;/var&gt; 이 지정된 경우 두 번째 인수)에 의해 결정됩니다 . 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8b5b3cac20aa503c0b7a12d46983ddbfcb2e696" translate="yes" xml:space="preserve">
          <source>The action taken if the coordinates given do not fit any of the &lt;code&gt;poly&lt;/code&gt;, &lt;code&gt;circle&lt;/code&gt; or &lt;code&gt;rect&lt;/code&gt; directives, and there are no &lt;code&gt;point&lt;/code&gt; directives. Defaults to &lt;code&gt;nocontent&lt;/code&gt; in the absence of an &lt;code&gt;&lt;a href=&quot;#imapdefault&quot;&gt;ImapDefault&lt;/a&gt;&lt;/code&gt; configuration setting, causing a status code of &lt;code&gt;204 No Content&lt;/code&gt; to be returned. The client should keep the same page displayed.</source>
          <target state="translated">주어진 좌표가 &lt;code&gt;poly&lt;/code&gt; 맞지 않으면 취해지는 동작 , &lt;code&gt;circle&lt;/code&gt; 또는 &lt;code&gt;rect&lt;/code&gt; 지시문에 않고 &lt;code&gt;point&lt;/code&gt; 지시문 이없는 경우 수행되는 작업 입니다. &lt;code&gt;&lt;a href=&quot;#imapdefault&quot;&gt;ImapDefault&lt;/a&gt;&lt;/code&gt; 구성 설정 이없는 경우 기본값은 &lt;code&gt;nocontent&lt;/code&gt; 이며 상태 코드 &lt;code&gt;204 No Content&lt;/code&gt; 가 반환됩니다. 클라이언트는 동일한 페이지를 계속 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4dea928f71c0ea01e9f4c4345ad5d47ef58db64" translate="yes" xml:space="preserve">
          <source>The actual content of the resource may be included in the type-map file using the Body header. This header must contain a string that designates a delimiter for the body content. Then all following lines in the type map file will be considered part of the resource body until the delimiter string is found.</source>
          <target state="translated">리소스의 실제 내용은 Body 헤더를 사용하여 유형 맵 파일에 포함될 수 있습니다. 이 헤더에는 본문 내용의 구분자를 지정하는 문자열이 포함되어야합니다. 그러면 유형 맵 파일에서 다음 행이 모두 분리 문자열이 발견 될 때까지 자원 본문의 일부로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a6a8914caab4a95180f5af4c9363aeec1e6dacdb" translate="yes" xml:space="preserve">
          <source>The actual log message</source>
          <target state="translated">실제 로그 메시지</target>
        </trans-unit>
        <trans-unit id="be13b45692973e85d3dfe0868fc9c1c4315960e0" translate="yes" xml:space="preserve">
          <source>The addition of the incremental syntax (&lt;em&gt;i.e.&lt;/em&gt;, prefixing keywords with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">증분 구문 추가 ( &lt;em&gt;예 : &lt;/em&gt; &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 접두어 키워드 )</target>
        </trans-unit>
        <trans-unit id="c6681ec984ad578b2d70dc932c293e3a693c7d53" translate="yes" xml:space="preserve">
          <source>The additional fields are:</source>
          <target state="translated">추가 필드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="98978e88f1892d69567ff75d1446271b5972daf4" translate="yes" xml:space="preserve">
          <source>The address appearing in the &lt;code&gt;VirtualHost&lt;/code&gt; directive can have an optional port. If the port is unspecified, it is treated as a wildcard port, which can also be indicated explicitly using &lt;code&gt;*&lt;/code&gt;. The wildcard port matches any port.</source>
          <target state="translated">&lt;code&gt;VirtualHost&lt;/code&gt; 지시문에 나타나는 주소 는 선택적 포트를 가질 수 있습니다. 포트를 지정하지 않으면 와일드 카드 포트로 취급되며 &lt;code&gt;*&lt;/code&gt; 를 사용하여 명시 적으로 표시 할 수도 있습니다 . 와일드 카드 포트는 모든 포트와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="a774e03d9e32a2b9fd4732c59cbeab1e82f01568" translate="yes" xml:space="preserve">
          <source>The address can be specified as &lt;code&gt;*&lt;/code&gt;, which will match a request if no other vhost has the explicit address on which the request was received.</source>
          <target state="translated">주소는 &lt;code&gt;*&lt;/code&gt; 로 지정할 수 있으며 다른 호스트에 요청을받은 명시 적 주소가없는 경우 요청과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1b9be8fd7afd8b0d4d8698610df1ea181b06bd95" translate="yes" xml:space="preserve">
          <source>The administrator will need to set up an external process via cron to clean out expired sessions.</source>
          <target state="translated">관리자는 만료 된 세션을 정리하기 위해 cron을 통해 외부 프로세스를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7eb1d0c0f5d921e01dc82e5deeb61879356c9540" translate="yes" xml:space="preserve">
          <source>The advantage for the client is that it saves the time to send the request which may range from a few milliseconds to half a second, depending on where on the globe both are located. The disadvantage is that the client may get sent things it already has in its cache. Sure, HTTP/2 allows for the early cancellation of such requests, but still there are resources wasted.</source>
          <target state="translated">클라이언트의 이점은 전 세계의 위치에 따라 몇 밀리 초에서 0.5 초 범위의 요청을 보내는 데 걸리는 시간이 절약된다는 것입니다. 단점은 클라이언트가 캐시에 이미 가지고있는 것을 보낼 수 있다는 것입니다. 물론, HTTP / 2는 그러한 요청을 조기에 취소 할 수 있지만 여전히 리소스 낭비가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1794b6924a1eb704f0d11effba115176c6320fb" translate="yes" xml:space="preserve">
          <source>The algorithm has now selected one 'best' variant, so return it as the response. The HTTP response header &lt;code&gt;Vary&lt;/code&gt; is set to indicate the dimensions of negotiation (browsers and caches can use this information when caching the resource). End.</source>
          <target state="translated">알고리즘은 이제 하나의 '최상의'변형을 선택 했으므로 응답으로 반환합니다. HTTP 응답 헤더 &lt;code&gt;Vary&lt;/code&gt; 는 협상 차원을 나타내도록 설정됩니다 (브라우저 및 캐시는 리소스를 캐싱 할 때이 정보를 사용할 수 있음). 종료.</target>
        </trans-unit>
        <trans-unit id="2176708f0d26badf315e3a50bb052093bb670a63" translate="yes" xml:space="preserve">
          <source>The allowed elements are listed in the following table:</source>
          <target state="translated">허용되는 요소는 다음 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="93b2b644d727592df9da5ef91ddbf6fad2152a92" translate="yes" xml:space="preserve">
          <source>The amount of shared memory to allocate for keeping track of clients</source>
          <target state="translated">클라이언트 추적을 위해 할당 할 공유 메모리의 양</target>
        </trans-unit>
        <trans-unit id="c355168172b5cdcd515aed016fc00b9f11e1181c" translate="yes" xml:space="preserve">
          <source>The apr-util library exposes dbm (keyed database) and dbd (query oriented database) client functionality to the httpd server and its modules, such as authentication and authorization. The sdbm dbm and odbc dbd providers are compiled unconditionally.</source>
          <target state="translated">apr-util 라이브러리는 dbm (키 데이터베이스) 및 dbd (쿼리 지향 데이터베이스) 클라이언트 기능을 인증 및 권한 부여와 같은 httpd 서버 및 해당 모듈에 노출합니다. sdbm dbm 및 odbc dbd 제공자는 무조건 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="7b602441925e5290a4c5154016669a778be106a2" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;none&lt;/code&gt; is available in Apache httpd 2.2.7 and later. All other choices are DISABLED for 2.3.x and later.</source>
          <target state="translated">인수 &lt;code&gt;none&lt;/code&gt; 은 Apache httpd 2.2.7 이상에서 사용 가능합니다. 다른 모든 선택 사항은 2.3.x 이상에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="32122831418b7ed613dae09d25a99091dea7cfef" translate="yes" xml:space="preserve">
          <source>The argument can be:</source>
          <target state="translated">인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a2ba978c232d6034fe3e8d3ab6df7ddf7e85584" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file (or dir or special) exists</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일 (또는 dir 또는 special)이 존재하면 true</target>
        </trans-unit>
        <trans-unit id="b16c1712ddddbbc91231d0ff6ea7977881968149" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is a directory</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일이 존재하고 디렉토리 인 경우 참</target>
        </trans-unit>
        <trans-unit id="07a9eaa3029c87eef52daa2e50dce8e8bd2fc4f3" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is not empty</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일이 존재하고 비어 있지 않으면 true</target>
        </trans-unit>
        <trans-unit id="0500fbfddf2ac8fe582d74b53170e6f0d7f0ad92" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is regular file</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일이 존재하고 일반 파일 인 경우 참</target>
        </trans-unit>
        <trans-unit id="da76c01217b02553e603f6bccd637ba43a4aeb62" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is symlink</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일이 존재하고 심볼릭 링크 인 경우 참</target>
        </trans-unit>
        <trans-unit id="716206725bbf8993104bfa7e40a7aa6e82415389" translate="yes" xml:space="preserve">
          <source>The argument is treated as a filename. True if the file exists and is symlink (same as &lt;code&gt;-L&lt;/code&gt;)</source>
          <target state="translated">인수는 파일 이름으로 취급됩니다. 파일이 존재하고 심볼릭 링크 인 경우 true입니다 ( &lt;code&gt;-L&lt;/code&gt; 과 동일 ).</target>
        </trans-unit>
        <trans-unit id="32b2702b4335c4e2044986196810a3b0f3dfc816" translate="yes" xml:space="preserve">
          <source>The argument, which specifies the location to which the logs will be written, can take one of the following two types of values:</source>
          <target state="translated">로그를 작성할 위치를 지정하는 인수는 다음 두 가지 유형의 값 중 하나를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e5b9718ba1b39daccb0f98d265bcfe9f379f715" translate="yes" xml:space="preserve">
          <source>The arguments &lt;var&gt;files&lt;/var&gt; can be any C source file (.c), a object file (.o) or even a library archive (.a). The &lt;code&gt;apxs&lt;/code&gt; tool automatically recognizes these extensions and automatically used the C source files for compilation while just using the object and archive files for the linking phase. But when using such pre-compiled objects make sure they are compiled for position independent code (PIC) to be able to use them for a dynamically loaded shared object. For instance with GCC you always just have to use &lt;code&gt;-fpic&lt;/code&gt;. For other C compilers consult its manual page or at watch for the flags &lt;code&gt;apxs&lt;/code&gt; uses to compile the object files.</source>
          <target state="translated">인수 &lt;var&gt;files&lt;/var&gt; 은 모든 C 소스 파일 (.c), 객체 파일 (.o) 또는 라이브러리 아카이브 (.a) 일 수 있습니다. &lt;code&gt;apxs&lt;/code&gt; 를 도구는 이러한 확장을 인식하고 바로 연결 단계의 개체 및 아카이브 파일을 사용하는 동안 자동으로 컴파일을위한 C 소스 파일을 사용했다. 그러나 사전 컴파일 된 객체를 사용할 때는 동적으로로드 된 공유 객체에 사용할 수 있도록 PIC (위치 독립 코드) 용으로 컴파일해야합니다. 예를 들어 GCC에서는 항상 &lt;code&gt;-fpic&lt;/code&gt; 을 사용해야 합니다. 다른 C 컴파일러의 경우 매뉴얼 페이지를 참조하거나 &lt;code&gt;apxs&lt;/code&gt; 가 객체 파일을 컴파일하는 데 사용 하는 플래그를 감시 하십시오.</target>
        </trans-unit>
        <trans-unit id="6734bb8b6f63153817e71de5c94275ae744a55ad" translate="yes" xml:space="preserve">
          <source>The asterisks match all addresses, so the main server serves no requests. Due to the fact that the virtual host with &lt;code&gt;ServerName www.example.com&lt;/code&gt; is first in the configuration file, it has the highest priority and can be seen as the</source>
          <target state="translated">별표는 모든 주소와 일치하므로 기본 서버는 요청을 처리하지 않습니다. &lt;code&gt;ServerName www.example.com&lt;/code&gt; 가상 호스트가 구성 파일에서 첫 번째이기 때문에 우선 순위가 가장 높으며</target>
        </trans-unit>
        <trans-unit id="f3b79ccefef2cc60cd5424b43ac0b4b52de5b64a" translate="yes" xml:space="preserve">
          <source>The attribute specified in the URL is used in compare operations for the &lt;code&gt;Require ldap-user&lt;/code&gt; operation.</source>
          <target state="translated">URL에 지정된 속성은 &lt;code&gt;Require ldap-user&lt;/code&gt; 조작의 비교 조작에 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="275c294bacee4cbea1813866667b1fec4732e183" translate="yes" xml:space="preserve">
          <source>The attribute to search for. Although RFC 2255 allows a comma-separated list of attributes, only the first attribute will be used, no matter how many are provided. If no attributes are provided, the default is to use &lt;code&gt;uid&lt;/code&gt;. It's a good idea to choose an attribute that will be unique across all entries in the subtree you will be using. All attributes listed will be put into the environment with an AUTHENTICATE_ prefix for use by other modules.</source>
          <target state="translated">검색 할 속성입니다. RFC 2255는 쉼표로 구분 된 속성 목록을 허용하지만 제공되는 속성 수에 관계없이 첫 번째 속성 만 사용됩니다. 속성이 제공되지 않으면 기본값은 &lt;code&gt;uid&lt;/code&gt; 를 사용하는 것 입니다. 사용할 서브 트리의 모든 항목에서 고유 한 속성을 선택하는 것이 좋습니다. 나열된 모든 속성은 다른 모듈에서 사용하기 위해 AUTHENTICATE_ 접두사를 사용하여 환경에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="7b65086f82f5353a7e0699235872f0524210cf78" translate="yes" xml:space="preserve">
          <source>The attributes prefixed with a &lt;code&gt;?&lt;/code&gt; (e.g. &lt;code&gt;?context&lt;/code&gt;) are all optional. For each, there is a single byte code to indicate the type of attribute, and then its value (string or integer). They can be sent in any order (though the C code always sends them in the order listed below). A special terminating code is sent to signal the end of the list of optional attributes. The list of byte codes is:</source>
          <target state="translated">접두사가 붙은 속성은 &lt;code&gt;?&lt;/code&gt; (예 : &lt;code&gt;?context&lt;/code&gt; )는 모두 선택 사항입니다. 각각에 대해 속성 유형을 나타내는 단일 바이트 코드와 값 (문자열 또는 정수)이 있습니다. C 코드는 항상 아래 나열된 순서대로 전송하지만 어떤 순서로도 보낼 수 있습니다. 선택적 속성 목록의 끝을 알리기 위해 특수 종료 코드가 전송됩니다. 바이트 코드 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e7273bc7956fa4caae233ea4d05f7e05ce9ba74" translate="yes" xml:space="preserve">
          <source>The authentication cache should be used where authentication lookups impose a significant load on the server, or a backend or network. Authentication by file (&lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt;) or dbm (&lt;code&gt;&lt;a href=&quot;mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt;) are unlikely to benefit, as these are fast and lightweight in their own right (though in some cases, such as a network-mounted file, cacheing may be worthwhile). Other providers such as SQL or LDAP based authentication are more likely to benefit, particularly where there is an observed performance issue. Amongst the standard modules, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; manages its own cache, so only &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; will usually benefit from this cache.</source>
          <target state="translated">인증 조회가 서버 나 백엔드 또는 네트워크에 상당한 부하를주는 경우 인증 캐시를 사용해야합니다. 파일 ( &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; ) 또는 dbm ( &lt;code&gt;&lt;a href=&quot;mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; )에 의한 인증은 자체적으로 빠르고 가볍기 때문에 이점이 없을 것입니다 (네트워크 마운트 파일과 같은 일부 경우 캐시가 가치가있을 수 있음). 특히 성능 문제가 관찰되는 경우 SQL 또는 LDAP 기반 인증과 같은 다른 공급자가 더 유리할 것입니다. 표준 모듈 중에서 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 는 자체 캐시를 관리하므로 &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; 만이 캐시의 이점을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="7237322ecd1b0dba8b74a859a03db44dc0605161" translate="yes" xml:space="preserve">
          <source>The authentication type &lt;code&gt;None&lt;/code&gt; disables authentication. When authentication is enabled, it is normally inherited by each subsequent &lt;a href=&quot;../sections#mergin&quot;&gt;configuration section&lt;/a&gt;, unless a different authentication type is specified. If no authentication is desired for a subsection of an authenticated section, the authentication type &lt;code&gt;None&lt;/code&gt; may be used; in the following example, clients may access the &lt;code&gt;/www/docs/public&lt;/code&gt; directory without authenticating:</source>
          <target state="translated">인증 유형 &lt;code&gt;None&lt;/code&gt; 은 인증을 비활성화합니다. 인증을 사용 하는 경우 다른 인증 유형을 지정하지 않으면 일반적으로 각 후속 &lt;a href=&quot;../sections#mergin&quot;&gt;구성 섹션&lt;/a&gt; 에서 상속됩니다 . 인증 된 섹션의 하위 섹션에 대해 인증이 필요하지 않은 경우 인증 유형 &lt;code&gt;None&lt;/code&gt; 을 사용할 수 있습니다. 다음 예에서 클라이언트는 인증하지 않고 &lt;code&gt;/www/docs/public&lt;/code&gt; 디렉토리에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b135ba72d706ed5023449763c3197752e9e9f22" translate="yes" xml:space="preserve">
          <source>The author is not responsible for the consequences of use of this software, no matter how awful, even if they arise from flaws in it.</source>
          <target state="translated">저자는이 소프트웨어의 사용으로 인한 결과에 관계없이 소프트웨어 사용의 결과에 대해 책임을지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4cb829f51b117bee249b30913943f5bc3c39771a" translate="yes" xml:space="preserve">
          <source>The authorization container directives &lt;code&gt;&lt;a href=&quot;#requireall&quot;&gt;&amp;lt;RequireAll&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#requireany&quot;&gt;&amp;lt;RequireAny&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#requirenone&quot;&gt;&amp;lt;RequireNone&amp;gt;&lt;/a&gt;&lt;/code&gt; may be combined with each other and with the &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive to express complex authorization logic.</source>
          <target state="translated">권한 부여 컨테이너 지시문 &lt;code&gt;&lt;a href=&quot;#requireall&quot;&gt;&amp;lt;RequireAll&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#requireany&quot;&gt;&amp;lt;RequireAny&amp;gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#requirenone&quot;&gt;&amp;lt;RequireNone&amp;gt;&lt;/a&gt;&lt;/code&gt; 은 서로 및 &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; 지시문 과 결합하여 복잡한 권한 부여 논리를 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6216b68aa7a8eed0f6bd7a88f356e7cf38d00c3" translate="yes" xml:space="preserve">
          <source>The authorization providers &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;ip&lt;/code&gt; let you allow or deny access based on other host based criteria such as host name or ip address of the machine requesting a document.</source>
          <target state="translated">권한 제공자 &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; 및 &lt;code&gt;ip&lt;/code&gt; 를 사용하면 문서를 요청하는 시스템의 호스트 이름 또는 IP 주소와 같은 다른 호스트 기반 기준에 따라 액세스를 허용하거나 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba31806e2d0b652eedb0365fa898417b114645df" translate="yes" xml:space="preserve">
          <source>The authorization providers implemented by &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; are registered using the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive. The directive can be referenced within a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section as well as &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; files to control access to particular parts of the server. Access can be controlled based on the client hostname or IP address.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; 에 의해 구현 된 권한 제공자 는 &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 등록됩니다 . 지시문은 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션과 &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; 파일 내에서 참조되어 서버의 특정 부분에 대한 액세스를 제어 할 수 있습니다. 클라이언트 호스트 이름 또는 IP 주소를 기반으로 액세스를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa5318c99eb92c2874f86858223320d9d5845330" translate="yes" xml:space="preserve">
          <source>The authz provider is normally called before authentication. If it needs to know the authenticated user name (or if the user will be authenticated at all), the provider must return &lt;code&gt;apache2.AUTHZ_DENIED_NO_USER&lt;/code&gt;. This will cause authentication to proceed and the authz provider to be called a second time.</source>
          <target state="translated">authz 제공자는 일반적으로 인증 전에 호출됩니다. 인증 된 사용자 이름을 알아야하는 경우 (또는 사용자가 전혀 인증 될 경우) 제공자는 &lt;code&gt;apache2.AUTHZ_DENIED_NO_USER&lt;/code&gt; 를 반환해야합니다 . 이로 인해 인증이 진행되고 authz 제공자가 두 번째로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c64da7cdb7a59acd81fc8f2b032080ce86c4e8ac" translate="yes" xml:space="preserve">
          <source>The available (case-insensitive) &lt;em&gt;protocol&lt;/em&gt;s are:</source>
          <target state="translated">사용 가능한 (대소 문자 구분) &lt;em&gt;프로토콜&lt;/em&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0962afd40b81bb0bc94de13549ce4ef5f932492a" translate="yes" xml:space="preserve">
          <source>The available &lt;em&gt;flag&lt;/em&gt;s are:</source>
          <target state="translated">사용 가능한 &lt;em&gt;플래그&lt;/em&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99d7d1b80f0c9a27d9871126cc009132bb9df1d4" translate="yes" xml:space="preserve">
          <source>The available &lt;em&gt;option&lt;/em&gt;s are:</source>
          <target state="translated">사용 가능한 &lt;em&gt;옵션&lt;/em&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ee29c189128f2c6ea27aee8d2c40e005fe5b187" translate="yes" xml:space="preserve">
          <source>The average time spent per request. The first value is calculated with the formula &lt;code&gt;concurrency * timetaken * 1000 / done&lt;/code&gt; while the second value is calculated with the formula &lt;code&gt;timetaken * 1000 / done&lt;/code&gt;</source>
          <target state="translated">요청 당 평균 시간입니다. 첫 번째 값은 공식 &lt;code&gt;concurrency * timetaken * 1000 / done&lt;/code&gt; 으로 계산되고 두 번째 값은 공식 &lt;code&gt;timetaken * 1000 / done&lt;/code&gt; 계산 됩니다.</target>
        </trans-unit>
        <trans-unit id="a32029690c2678ad704a590e1cdd607394be0e62" translate="yes" xml:space="preserve">
          <source>The back-reference flow through a rule.</source>
          <target state="translated">역 참조는 규칙을 통과합니다.</target>
        </trans-unit>
        <trans-unit id="25acdf59848da0c33097bb22d874b319d6afec63" translate="yes" xml:space="preserve">
          <source>The balanced gateway needs &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; and at least one load balancer algorithm module, such as &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;, in addition to the proxy modules listed above. &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; is the default, and will be used for this example configuration.</source>
          <target state="translated">밸런스 게이트웨이 에는 위에 나열된 프록시 모듈 외에도 &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; 와 같은 하나 이상의로드 밸런서 알고리즘 모듈이 필요합니다 . &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; 가 기본값 이며이 예제 구성에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="54be4d9ff512a0745beb6046d09b1ccc4d03378c" translate="yes" xml:space="preserve">
          <source>The balancer also logs detailed information about handling stickyness to the error log, if the log level is set to &lt;code&gt;debug&lt;/code&gt; or higher. This is an easy way to troubleshoot stickyness problems, but the log volume might be to high for production servers under high load.</source>
          <target state="translated">로그 레벨이 &lt;code&gt;debug&lt;/code&gt; 이상으로 설정된 경우 밸런서는 또한 오류 처리에 대한 고정 처리에 대한 자세한 정보를 기록합니다 . 이는 끈적임 문제를 해결하는 쉬운 방법이지만로드가 많은 프로덕션 서버의 경우 로그 볼륨이 높을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aed2af3e81d85f7b0b5e5ecb98bc694c19dfaa44" translate="yes" xml:space="preserve">
          <source>The balancer supports stickyness. When a request is proxied to some back-end, then all following requests from the same user should be proxied to the same back-end. Many load balancers implement this feature via a table that maps client IP addresses to back-ends. This approach is transparent to clients and back-ends, but suffers from some problems: unequal load distribution if clients are themselves hidden behind proxies, stickyness errors when a client uses a dynamic IP address that changes during a session and loss of stickyness, if the mapping table overflows.</source>
          <target state="translated">밸런서는 점착성을 지원합니다. 요청이 일부 백엔드로 프록시되면 동일한 사용자의 모든 후속 요청이 동일한 백엔드로 프록시되어야합니다. 많은로드 밸런서는 클라이언트 IP 주소를 백엔드에 매핑하는 테이블을 통해이 기능을 구현합니다. 이 방법은 클라이언트와 백엔드에게는 투명하지만 몇 가지 문제가 있습니다. 클라이언트가 프록시 뒤에 숨겨져 있으면 불균형 한로드 분산, 클라이언트가 세션 중에 변경되는 동적 IP 주소를 사용하는 경우의 고정 오류 및 고 정성이없는 경우 매핑 테이블 오버플로</target>
        </trans-unit>
        <trans-unit id="0a0792c9554d8f38940202ea0b403e3270f1baff" translate="yes" xml:space="preserve">
          <source>The base time is either the last modification time of the file, or the time of the client's access to the document. Which should be used is specified by the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; field; &lt;code&gt;M&lt;/code&gt; means that the file's last modification time should be used as the base time, and &lt;code&gt;A&lt;/code&gt; means the client's access time should be used.</source>
          <target state="translated">기본 시간은 파일의 마지막 수정 시간이거나 클라이언트가 문서에 액세스 한 시간입니다. 사용해야하는 것은 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 필드에 의해 지정됩니다 . &lt;code&gt;M&lt;/code&gt; 은 파일의 마지막 수정 시간을 기본 시간으로 사용해야하고 &lt;code&gt;A&lt;/code&gt; 는 클라이언트의 액세스 시간을 사용해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="90c16bf26feb50d7bc819d7d88a476a00a3c8c14" translate="yes" xml:space="preserve">
          <source>The basic auth password sent with this request, if any</source>
          <target state="translated">이 요청과 함께 전송 된 기본 인증 비밀번호 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="bc81f0281b412c05ab5a00630112ba6a1f667e3d" translate="yes" xml:space="preserve">
          <source>The basic flow control elements are:</source>
          <target state="translated">기본 흐름 제어 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a874b9f319e11a5b4db9ae9f46997e5491b656c6" translate="yes" xml:space="preserve">
          <source>The basic module loading directive is</source>
          <target state="translated">기본 모듈 로딩 지시문은</target>
        </trans-unit>
        <trans-unit id="c75ffefba5b8f833444effbd934544629ce6e2c4" translate="yes" xml:space="preserve">
          <source>The basic rules to cache for a provider are:</source>
          <target state="translated">공급자를 위해 캐시하는 기본 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3095573eff222e54c0b6949060216f7a293a8a4" translate="yes" xml:space="preserve">
          <source>The basic security concerns with mod_privileges are:</source>
          <target state="translated">mod_privileges의 기본 보안 문제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="36bf612bb9c1138de5eba6b9763345a08547d046" translate="yes" xml:space="preserve">
          <source>The behavior described in the last point is completely observable via &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; in the connection summary table through two new columns: &quot;Slot&quot; and &quot;Stopping&quot;. The former indicates the PID and the latter if the process is stopping or not; the extra state &quot;Yes (old gen)&quot; indicates a process still running after a graceful restart.</source>
          <target state="translated">마지막 지점에서 설명한 동작 은 연결 요약 테이블에서 &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; 를 통해 &quot;Slot&quot;및 &quot;Stopping&quot;이라는 두 개의 새 열을 통해 완전히 확인할 수 있습니다. 전자는 PID를 나타내고 후자는 프로세스가 중지되는지 여부를 나타냅니다. 추가 상태 &quot;예 (이전 세대)&quot;는 정상 재시작 후 프로세스가 여전히 실행 중임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="07f12d96dd4cd863f9118e6c1d5d80d4e7c6d5eb" translate="yes" xml:space="preserve">
          <source>The behavior of a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; can be modified by the application of one or more flags to the end of the rule. For example, the matching behavior of a rule can be made case-insensitive by the application of the &lt;code&gt;[NC]&lt;/code&gt; flag:</source>
          <target state="translated">규칙의 끝에 하나 이상의 플래그를 적용 하여 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 의 동작을 수정할 수 있습니다. 예를 들어, 규칙의 일치 동작은 &lt;code&gt;[NC]&lt;/code&gt; 플래그를 적용하여 대소 문자를 구분하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34387e084f815ac3778e38b098521f4a3f66611f" translate="yes" xml:space="preserve">
          <source>The behavior of both of these caches is controlled with the &lt;code&gt;&lt;a href=&quot;#ldapopcacheentries&quot;&gt;LDAPOpCacheEntries&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldapopcachettl&quot;&gt;LDAPOpCacheTTL&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">이 두 캐시의 동작은 &lt;code&gt;&lt;a href=&quot;#ldapopcacheentries&quot;&gt;LDAPOpCacheEntries&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ldapopcachettl&quot;&gt;LDAPOpCacheTTL&lt;/a&gt;&lt;/code&gt; 지시문으로 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="050885ef3265a118fbe1be040e695135edc76158" translate="yes" xml:space="preserve">
          <source>The below example will print &quot;foo is bar&quot; if the variable &lt;code&gt;foo&lt;/code&gt; is set to the value &quot;bar&quot;.</source>
          <target state="translated">아래 예제는 변수 &lt;code&gt;foo&lt;/code&gt; 가 &quot;bar&quot;값으로 설정된 경우 &quot;foo is bar&quot;를 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="164c14e8f8fda732858de5c8346d88919224fac0" translate="yes" xml:space="preserve">
          <source>The below example will print &quot;from local net&quot; if client IP address belongs to the 10.0.0.0/8 subnet.</source>
          <target state="translated">아래 예제는 클라이언트 IP 주소가 10.0.0.0/8 서브넷에 속하는 경우 &quot;로컬 네트워크에서&quot;를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="36d56496207f97e0e1531f2cecf47cdb73bd7901" translate="yes" xml:space="preserve">
          <source>The binary format of a certificate is defined using the ASN.1 notation [&lt;a href=&quot;#ASN1&quot;&gt;ASN1&lt;/a&gt;] [&lt;a href=&quot;#PKCS&quot;&gt;PKCS&lt;/a&gt;]. This notation defines how to specify the contents and encoding rules define how this information is translated into binary form. The binary encoding of the certificate is defined using Distinguished Encoding Rules (DER), which are based on the more general Basic Encoding Rules (BER). For those transmissions which cannot handle binary, the binary form may be translated into an ASCII form by using Base64 encoding [&lt;a href=&quot;#MIME&quot;&gt;MIME&lt;/a&gt;]. When placed between begin and end delimiter lines (as below), this encoded version is called a PEM (&quot;Privacy Enhanced Mail&quot;) encoded certificate.</source>
          <target state="translated">인증서의 이진 형식은 ASN.1 표기법 [ &lt;a href=&quot;#ASN1&quot;&gt;ASN1&lt;/a&gt; ] [ &lt;a href=&quot;#PKCS&quot;&gt;PKCS&lt;/a&gt; ]을 사용하여 정의됩니다 . 이 표기법은 내용을 지정하는 방법을 정의하고 인코딩 규칙은이 정보가 이진 형식으로 변환되는 방법을 정의합니다. 인증서의 이진 인코딩은보다 일반적인 기본 인코딩 규칙 (BER)을 기반으로하는 DER (Distinguished Encoding Rules)을 사용하여 정의됩니다. 이진을 처리 할 수없는 전송의 경우 이진 형식은 Base64 인코딩 [ &lt;a href=&quot;#MIME&quot;&gt;MIME&lt;/a&gt; ] 을 사용하여 ASCII 형식으로 변환 될 수 있습니다 . 시작 및 끝 구분 기호 행 (아래와 같이) 사이에 배치되면이 인코딩 된 버전을 PEM ( &quot;개인 정보 보호 강화 된 메일&quot;) 인코딩 된 인증서라고합니다.</target>
        </trans-unit>
        <trans-unit id="88eba4c9f8a0b4faefa71c10a8df3061a7d046f9" translate="yes" xml:space="preserve">
          <source>The boolean operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; share the same priority. So if you want to bind such an operator more tightly, you should use parentheses.</source>
          <target state="translated">부울 연산자 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;||&lt;/code&gt; 같은 우선 순위를 공유하십시오. 따라서 이러한 연산자를 더 밀접하게 바인딩하려면 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b2f3ebd776cd911e2fdf7d109b756820c7ba0c3" translate="yes" xml:space="preserve">
          <source>The buffer filter may be added to either the input or the output filter stacks, as appropriate, using the &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">버퍼 필터는 &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 입력 또는 출력 필터 스택에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="323a7353377c46ce782fbe038d71048821209357" translate="yes" xml:space="preserve">
          <source>The buffer filters read the request/response into RAM and then repack the request/response into the fewest memory buckets possible, at the cost of CPU time. When the request/response is already efficiently packed, buffering the request/response could cause the request/response to be slower than not using a buffer at all. These filters should be used with care, and only where necessary.</source>
          <target state="translated">버퍼 필터는 요청 / 응답을 RAM으로 읽은 다음 CPU 시간을 희생하여 요청 / 응답을 가능한 가장 적은 메모리 버킷으로 다시 포장합니다. 요청 / 응답이 이미 효율적으로 패킹 된 경우 요청 / 응답을 버퍼링하면 요청 / 응답이 버퍼를 전혀 사용하지 않는 것보다 느려질 수 있습니다. 이 필터는 필요한 경우에만주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c8d7b81dd91cf79c4ae9600f0644c3e3887fc651" translate="yes" xml:space="preserve">
          <source>The bug reporting page and dev-httpd mailing list are &lt;em&gt;not&lt;/em&gt; provided to answer questions about configuration or running Apache. Before you submit a bug report or request, first consult this document, the &lt;a href=&quot;http://wiki.apache.org/httpd/FAQ&quot;&gt;Frequently Asked Questions&lt;/a&gt; page and the other relevant documentation topics. If you still have a question or problem, post it to the &lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt; novell.devsup.webserver&lt;/a&gt; newsgroup, where many Apache users are more than willing to answer new and obscure questions about using Apache on NetWare.</source>
          <target state="translated">버그보고 페이지 및 dev-httpd 메일 링리스트는 Apache 구성 또는 실행에 대한 질문에 답변을 제공 &lt;em&gt;하지 않습니다&lt;/em&gt; . 버그 보고서 또는 요청을 제출하기 전에 먼저이 문서, &lt;a href=&quot;http://wiki.apache.org/httpd/FAQ&quot;&gt;자주 묻는 질문 (FAQ)&lt;/a&gt; 페이지 및 기타 관련 문서 주제를 참조하십시오. 여전히 질문이나 문제가있는 경우 &lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt;소설&lt;/a&gt; 에서 많은 아파치 사용자가 NetWare에서 Apache를 사용하는 것에 대한 새롭고 모호한 질문에 기꺼이 답변하는 것보다 novell.devsup.webserver 뉴스 그룹에 게시하십시오 .</target>
        </trans-unit>
        <trans-unit id="b09b050cdb686538f55bcc5b63fca3c44ba9342c" translate="yes" xml:space="preserve">
          <source>The bug reporting page and dev-httpd mailing list are &lt;em&gt;not&lt;/em&gt; provided to answer questions about configuration or running Apache. Before you submit a bug report or request, first consult this document, the &lt;a href=&quot;https://wiki.apache.org/httpd/FAQ&quot;&gt;Frequently Asked Questions&lt;/a&gt; page and the other relevant documentation topics. If you still have a question or problem, post it to the &lt;a href=&quot;news://developer-forums.novell.com/novell.devsup.webserver&quot;&gt; novell.devsup.webserver&lt;/a&gt; newsgroup, where many Apache users are more than willing to answer new and obscure questions about using Apache on NetWare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb0e30e59534bcc5c446bff0e7caca4112bea40" translate="yes" xml:space="preserve">
          <source>The cached entity was invalidated by a request method other than GET or HEAD.</source>
          <target state="translated">캐시 된 엔티티가 GET 또는 HEAD 이외의 요청 방법으로 무효화되었습니다.</target>
        </trans-unit>
        <trans-unit id="deda91fa1421efd95d86069b84e0d079972b4d5a" translate="yes" xml:space="preserve">
          <source>The canonical &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the current server.</source>
          <target state="translated">현재 서버 의 표준 &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1725f98fc14054d83f7c343f9e9d4d0e59525bb7" translate="yes" xml:space="preserve">
          <source>The canonical &lt;code&gt;&lt;a href=&quot;core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the server serving the request.</source>
          <target state="translated">요청을 제공하는 서버 의 표준 &lt;code&gt;&lt;a href=&quot;core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b8ca322a021c4a5a4d7b3bfc77d37d9a02e338b" translate="yes" xml:space="preserve">
          <source>The canonical filename of the request</source>
          <target state="translated">요청의 정식 파일 이름</target>
        </trans-unit>
        <trans-unit id="fd09904db3cb97408c70bca5b29e37f0bd2f9124" translate="yes" xml:space="preserve">
          <source>The canonical port of the server serving the request, or the server's actual port, or the client's actual port. Valid formats are &lt;code&gt;canonical&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;, or &lt;code&gt;remote&lt;/code&gt;.</source>
          <target state="translated">요청을 처리하는 서버의 표준 포트, 서버의 실제 포트 또는 클라이언트의 실제 포트 유효한 형식은 &lt;code&gt;canonical&lt;/code&gt; , &lt;code&gt;local&lt;/code&gt; 또는 &lt;code&gt;remote&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d49898ce34e20e31602a7ad684f3df2aa394961c" translate="yes" xml:space="preserve">
          <source>The canonical port of the server serving the request.</source>
          <target state="translated">요청을 처리하는 서버의 표준 포트.</target>
        </trans-unit>
        <trans-unit id="09dc6cdc44983c76f6a02c071a35bd222dfd7eb2" translate="yes" xml:space="preserve">
          <source>The case of the extension does not matter. Blank lines, and lines beginning with a hash character (&lt;code&gt;#&lt;/code&gt;) are ignored.</source>
          <target state="translated">확장의 경우는 중요하지 않습니다. 빈 줄과 해시 문자 ( &lt;code&gt;#&lt;/code&gt; )로 시작하는 줄 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4875079b27ababb0cf0554bb561da42a66a109f6" translate="yes" xml:space="preserve">
          <source>The case of the extension does not matter. Blank lines, and lines beginning with a hash character (&lt;code&gt;#&lt;/code&gt;) are ignored. Empty lines are there for completeness (of the mime.types file). Apache httpd can still determine these types with &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">확장의 경우는 중요하지 않습니다. 빈 줄과 해시 문자 ( &lt;code&gt;#&lt;/code&gt; )로 시작하는 줄 은 무시됩니다. 완성을 위해 빈 줄이 있습니다 (mime.types 파일의). 아파치 httpd는 여전히 &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; 으로 이러한 타입을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89ab215b66230a75f24a0de8e69b7529999cd3fd" translate="yes" xml:space="preserve">
          <source>The character &lt;code&gt;*&lt;/code&gt;, which acts as a wildcard and matches any IP address.</source>
          <target state="translated">문자 &lt;code&gt;*&lt;/code&gt; 는 와일드 카드 역할을하며 모든 IP 주소와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="2a77e255c83fbac472bec915109bd92565d16365" translate="yes" xml:space="preserve">
          <source>The character set name parameters of &lt;code&gt;&lt;a href=&quot;#charsetsourceenc&quot;&gt;CharsetSourceEnc&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#charsetdefault&quot;&gt;CharsetDefault&lt;/a&gt;&lt;/code&gt; must be acceptable to the translation mechanism used by &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; on the system where &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; is deployed. These character set names are not standardized and are usually not the same as the corresponding values used in http headers. Currently, APR can only use iconv(3), so you can easily test your character set names using the iconv(1) program, as follows:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#charsetsourceenc&quot;&gt;CharsetSourceEnc&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#charsetdefault&quot;&gt;CharsetDefault&lt;/a&gt;&lt;/code&gt; 의 문자 세트 이름 매개 변수는 &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; 가 배치 된 시스템에서 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR이&lt;/a&gt; 사용하는 변환 메커니즘에 적합해야합니다 . 이러한 문자 세트 이름은 표준화되지 않았으며 일반적으로 http 헤더에 사용 된 해당 값과 동일하지 않습니다. 현재 APR은 iconv (3) 만 사용할 수 있으므로 다음과 같이 iconv (1) 프로그램을 사용하여 문자 세트 이름을 쉽게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ad6e95ba44284d42b0954b20fa953b4e1ea26e4" translate="yes" xml:space="preserve">
          <source>The character set names in this example work with the iconv translation support in Solaris 8.</source>
          <target state="translated">이 예에서 문자 세트 이름은 Solaris 8의 iconv 변환 지원과 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="27cdf0b17dd2468c6609b6980a09eaf9f652adbd" translate="yes" xml:space="preserve">
          <source>The character set, language, encoding and mime type are all used in the process of content negotiation (See &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt;) to determine which document to give to the client, when there are alternative documents in more than one character set, language, encoding or mime type. All filename extensions associations created with &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives (and extensions listed in the &lt;code&gt;&lt;a href=&quot;mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt;) participate in this select process. Filename extensions that are only associated using the &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directives may be included or excluded from matching by using the &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">문자 세트, 언어, 인코딩 및 MIME 유형은 모두 컨텐츠 협상 프로세스에서 사용되어 ( &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; 참조 ) 둘 이상의 문자 세트, 언어, 인코딩 또는 MIME에 대체 문서가있는 경우 클라이언트에게 제공 할 문서를 결정합니다. 유형. &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; 지시문 (및 &lt;code&gt;&lt;a href=&quot;mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; 에 나열된 확장자)으로 작성된 모든 파일 이름 확장자 연관 이이 선택 프로세스에 참여합니다. &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 를 사용하여 만 연관된 파일 이름 확장자지시문은 &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; 지시문 을 사용하여 일치에서 포함 또는 제외 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e5a110e555303fdf801999adddaeb4c5ed141f8" translate="yes" xml:space="preserve">
          <source>The character which is used to separate (or &quot;delimit&quot;) the various parts of the substituion string is referred to as the &quot;delimiter&quot;, and it is most common to use a slash for this purpose.</source>
          <target state="translated">대체 문자열의 다양한 부분을 분리 (또는 &quot;구분&quot;)하는 데 사용되는 문자를 &quot;구분자&quot;라고하며이 목적으로 슬래시를 사용하는 것이 가장 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="efd620e0efe79435301524ed7fa36dccef58736e" translate="yes" xml:space="preserve">
          <source>The characteristics of the request itself are logged by placing &quot;&lt;code&gt;%&lt;/code&gt;&quot; directives in the format string, which are replaced in the log file by the values as follows:</source>
          <target state="translated">요청 자체의 특성은 &quot; &lt;code&gt;%&lt;/code&gt; &quot;지시문을 형식 문자열 에 배치 하여 로그 파일에서 다음과 같은 값으로 대체하여 기록합니다.</target>
        </trans-unit>
        <trans-unit id="75831956b2354f8986002d8377655090045c7568" translate="yes" xml:space="preserve">
          <source>The choice of digest function determines how a digest is created from a record unit. SSL supports the following:</source>
          <target state="translated">요약 기능의 선택은 레코드 단위에서 요약이 작성되는 방법을 결정합니다. SSL은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9b4cb970400149009a8c0869cc9a9a035ca9abfd" translate="yes" xml:space="preserve">
          <source>The chunk is basically binary data, and is sent directly back to the browser.</source>
          <target state="translated">청크는 기본적으로 이진 데이터이며 브라우저로 직접 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="d7769fea813c85e6f6c7c9cf7e84f321ffff5749" translate="yes" xml:space="preserve">
          <source>The cipher specification name</source>
          <target state="translated">암호 사양 명</target>
        </trans-unit>
        <trans-unit id="ad2280d72cac406d22e7015d7984ac301a720dba" translate="yes" xml:space="preserve">
          <source>The cmake build for the APR-util subproject does not support most of the optional DBM and DBD libraries supported by the included Visual Studio project files. This limits the database backends supported by a number of bundled and third-party modules.</source>
          <target state="translated">APR-util 하위 프로젝트의 cmake 빌드는 포함 된 Visual Studio 프로젝트 파일에서 지원하는 대부분의 선택적 DBM 및 DBD 라이브러리를 지원하지 않습니다. 이로 인해 여러 번들 및 타사 모듈에서 지원하는 데이터베이스 백엔드가 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="e35939a2ceeac5b3eb0c3fccf0ac44a14e6377ad" translate="yes" xml:space="preserve">
          <source>The codes for common headers are:</source>
          <target state="translated">공통 헤더 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a86aa1aae4ab5a7b4013d0cc4bdf15c40132f9b" translate="yes" xml:space="preserve">
          <source>The column sorting headers themselves are self-referencing hyperlinks that add the sort query options shown below. Any option below may be added to any request for the directory resource.</source>
          <target state="translated">열 정렬 헤더 자체는 아래 표시된 정렬 쿼리 옵션을 추가하는 자체 참조 하이퍼 링크입니다. 아래의 모든 옵션은 디렉토리 자원에 대한 요청에 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5deb185ab8a595dae78735e4b37b591b08bf637" translate="yes" xml:space="preserve">
          <source>The combined log file is read from stdin. Records read will be appended to any existing log files.</source>
          <target state="translated">결합 된 로그 파일은 stdin에서 읽습니다. 읽은 레코드는 기존 로그 파일에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ea491e80627d46babe59f109eb19076ad3505a5a" translate="yes" xml:space="preserve">
          <source>The comment Element</source>
          <target state="translated">주석 요소</target>
        </trans-unit>
        <trans-unit id="f36703a5ef610aa92c2602f5359c8ec6ee28162d" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;ServerAlias&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; 지시문 의 전체 이름 목록은 (와일드 카드가 아닌) &lt;code&gt;ServerAlias&lt;/code&gt; 처럼 취급 됩니다.</target>
        </trans-unit>
        <trans-unit id="92a8111c1dbd199d5aaadd714e78f35622961ce5" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; 지시문 의 전체 이름 목록은 (와일드 카드가 아닌) &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; 처럼 취급 됩니다.</target>
        </trans-unit>
        <trans-unit id="3b35d1ebe358a4b00360ae2d03d7b8af34917032" translate="yes" xml:space="preserve">
          <source>The complete list of names in the &lt;code&gt;VirtualHost&lt;/code&gt; directive are treated just like a (non wildcard) &lt;code&gt;ServerAlias&lt;/code&gt; (but are not overridden by any &lt;code&gt;ServerAlias&lt;/code&gt; statement).</source>
          <target state="translated">&lt;code&gt;VirtualHost&lt;/code&gt; 지시문 의 전체 이름 목록은 (와일드 카드가 아닌) &lt;code&gt;ServerAlias&lt;/code&gt; 처럼 취급 되지만 &lt;code&gt;ServerAlias&lt;/code&gt; 문으로 재정의되지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="01c7a87890041b39b42a5f4166e8b588dbd8b888" translate="yes" xml:space="preserve">
          <source>The complete list of particular RSA &amp;amp; DH ciphers for SSL is given in &lt;a href=&quot;#table2&quot;&gt;Table 2&lt;/a&gt;.</source>
          <target state="translated">SSL에 대한 특정 RSA &amp;amp; DH 암호의 전체 목록은 &lt;a href=&quot;#table2&quot;&gt;표 2&lt;/a&gt; 에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2f156737a33938dc7f393853b0f7baf62ad170e" translate="yes" xml:space="preserve">
          <source>The complete request line (e.g., &quot;&lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt;&quot;)</source>
          <target state="translated">완전한 요청 라인 (예 : &quot; &lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt; &quot;)</target>
        </trans-unit>
        <trans-unit id="499478bf24a7bf1ef724a7f296ad5cea67ed80c7" translate="yes" xml:space="preserve">
          <source>The config Element</source>
          <target state="translated">구성 요소</target>
        </trans-unit>
        <trans-unit id="70773e0a0d4816436d91f6950f73a5923988f520" translate="yes" xml:space="preserve">
          <source>The configuration above will enable the feature for all users except for those listed in the &lt;code&gt;disabled&lt;/code&gt; statement. You can, likewise, disable the feature for all but a few users by using a configuration like the following:</source>
          <target state="translated">위의 구성은 &lt;code&gt;disabled&lt;/code&gt; 명령문에 나열된 사용자를 제외한 모든 사용자가이 기능을 사용할 수있게합니다 . 마찬가지로 다음과 같은 구성을 사용하여 일부 사용자를 제외한 모든 사용자에 대한 기능을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e274e985cebc7a58bef7cc2fc96eeeb0bce2d7b8" translate="yes" xml:space="preserve">
          <source>The configuration below causes all script output labeled as &lt;code&gt;text/html&lt;/code&gt; to be processed at first by the &lt;code&gt;INCLUDES&lt;/code&gt; filter and then by the &lt;code&gt;DEFLATE&lt;/code&gt; filter.</source>
          <target state="translated">아래 구성은 &lt;code&gt;text/html&lt;/code&gt; 로 레이블 된 모든 스크립트 출력이 처음에 &lt;code&gt;INCLUDES&lt;/code&gt; 필터에 의해 처리 된 다음 &lt;code&gt;DEFLATE&lt;/code&gt; 필터에 의해 처리되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="6404ae0663ee296857339b6973d03f93528f8690" translate="yes" xml:space="preserve">
          <source>The configuration changes suggested to turn &lt;a href=&quot;#simple&quot;&gt;the first example&lt;/a&gt; into an IP-based virtual hosting setup result in a rather inefficient setup. A new DNS lookup is required for every request. To avoid this overhead, the filesystem can be arranged to correspond to the IP addresses, instead of to the host names, thereby negating the need for a DNS lookup. Logging will also have to be adjusted to fit this system.</source>
          <target state="translated">&lt;a href=&quot;#simple&quot;&gt;첫 번째 예&lt;/a&gt; 를 IP 기반 가상 호스팅 설정으로 전환 하기 위해 제안 된 구성 변경은 다소 비효율적 인 설정을 초래합니다. 모든 요청에 ​​대해 새로운 DNS 조회가 필요합니다. 이러한 오버 헤드를 피하기 위해 파일 시스템은 호스트 이름 대신 IP 주소에 대응하도록 배열 될 수 있으므로 DNS 조회가 필요 없습니다. 이 시스템에 맞게 로깅도 조정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7bc1ac236bcbb647a0200b5ed4d9b88a1b93fc3f" translate="yes" xml:space="preserve">
          <source>The configuration directives discussed in the above sections tell httpd to get content from a specific place in the filesystem and return it to the client. Sometimes, it is desirable instead to inform the client that the requested content is located at a different URL, and instruct the client to make a new request with the new URL. This is called &lt;em&gt;redirection&lt;/em&gt; and is implemented by the &lt;code&gt;&lt;a href=&quot;mod/mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; directive. For example, if the contents of the directory &lt;code&gt;/foo/&lt;/code&gt; under the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; are moved to the new directory &lt;code&gt;/bar/&lt;/code&gt;, you can instruct clients to request the content at the new location as follows:</source>
          <target state="translated">위 섹션에서 설명한 설정 지시문은 httpd에게 파일 시스템의 특정 위치에서 컨텐츠를 가져 와서 클라이언트로 리턴하도록 지시합니다. 때로는 요청 된 컨텐츠가 다른 URL에 있음을 클라이언트에게 알리고 클라이언트에게 새 URL로 새 요청을하도록 지시하는 것이 바람직합니다. 이를 &lt;em&gt;리디렉션&lt;/em&gt; 이라고 하며 &lt;code&gt;&lt;a href=&quot;mod/mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; 지시문으로 구현됩니다 . 예를 들어, &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 아래의 &lt;code&gt;/foo/&lt;/code&gt; 디렉토리의 컨텐츠가 새 디렉토리 &lt;code&gt;/bar/&lt;/code&gt; 로 이동되면 클라이언트가 다음과 같이 새 위치에서 컨텐츠를 요청하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f85708ea4a94c38eab517b89926fe3d63801ea5" translate="yes" xml:space="preserve">
          <source>The configuration directives found in a &lt;code&gt;.htaccess&lt;/code&gt; file are applied to the directory in which the &lt;code&gt;.htaccess&lt;/code&gt; file is found, and to all subdirectories thereof. However, it is important to also remember that there may have been &lt;code&gt;.htaccess&lt;/code&gt; files in directories higher up. Directives are applied in the order that they are found. Therefore, a &lt;code&gt;.htaccess&lt;/code&gt; file in a particular directory may override directives found in &lt;code&gt;.htaccess&lt;/code&gt; files found higher up in the directory tree. And those, in turn, may have overridden directives found yet higher up, or in the main server configuration file itself.</source>
          <target state="translated">지시어가에있는 구성 &lt;code&gt;.htaccess&lt;/code&gt; 파일이있는 디렉토리에 적용됩니다 &lt;code&gt;.htaccess&lt;/code&gt; 파일이 발견, 그 모든 하위 디렉토리. 그러나 높은 디렉터리 에는 &lt;code&gt;.htaccess&lt;/code&gt; 파일 이있을 수 있다는 점도 기억해야 합니다. 지시문은 찾은 순서대로 적용됩니다. 따라서, &lt;code&gt;.htaccess&lt;/code&gt; 에서 발견 지시 무시할 수있는 특정 디렉토리에있는 파일 &lt;code&gt;.htaccess&lt;/code&gt; 파일은 디렉토리 트리에서 최대 높은 발견했다. 그리고 그 명령은 재정의 된 지시문이 아직 높거나 주 서버 구성 파일 자체에서 발견되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da8ccf5f1d773d7edf0cdb0d67e50ffc245936d0" translate="yes" xml:space="preserve">
          <source>The configuration is frequently broken into multiple smaller files, for ease of management. These files are loaded via the &lt;code&gt;&lt;a href=&quot;mod/core#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; directive. The names or locations of these sub-files are not magical, and may vary greatly from one installation to another. Arrange and subdivide these files as makes the most sense to &lt;strong&gt;you&lt;/strong&gt;. If the file arrangement you have by default doesn't make sense to you, feel free to rearrange it.</source>
          <target state="translated">구성은 종종 관리하기 쉽도록 여러 개의 작은 파일로 나뉩니다. 이러한 파일은 &lt;code&gt;&lt;a href=&quot;mod/core#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; 지시문을 통해로드됩니다 . 이 서브 파일의 이름이나 위치는 마법이 아니며 설치마다 크게 다를 수 있습니다. 정렬과에 가장 적합한 이러한 파일을 분할 &lt;strong&gt;하면&lt;/strong&gt; . 기본적으로 파일 정렬이 적절하지 않은 경우 자유롭게 다시 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="2211eb6760923073bba0835c69a409feeff8aa02" translate="yes" xml:space="preserve">
          <source>The configuration sections are applied in a very particular order. Since this can have important effects on how configuration directives are interpreted, it is important to understand how this works.</source>
          <target state="translated">구성 섹션은 매우 특정한 순서로 적용됩니다. 이는 구성 지시문의 해석 방법에 중요한 영향을 줄 수 있으므로 이것이 어떻게 작동하는지 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="824749533548122e5dae26194e8deb4007c347e1" translate="yes" xml:space="preserve">
          <source>The configured &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#proxypassmatch&quot;&gt;ProxyPassMatch&lt;/a&gt;&lt;/code&gt; rules are checked in the order of configuration. The first rule that matches wins. So usually you should sort conflicting &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; rules starting with the longest URLs first. Otherwise, later rules for longer URLS will be hidden by any earlier rule which uses a leading substring of the URL. Note that there is some relation with worker sharing.</source>
          <target state="translated">구성된 &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#proxypassmatch&quot;&gt;ProxyPassMatch&lt;/a&gt;&lt;/code&gt; 규칙은 구성 순서대로 확인됩니다. 일치하는 첫 번째 규칙이 이깁니다. 따라서 가장 긴 URL부터 시작하여 충돌하는 &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 규칙을 먼저 정렬해야합니다 . 그렇지 않으면 더 긴 URL에 대한 규칙은 URL의 선행 하위 문자열을 사용하는 이전 규칙에 의해 숨겨집니다. 근로자 공유와는 관계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="655efcbacbae5d91632c354c0f249159a7d739e3" translate="yes" xml:space="preserve">
          <source>The configured &lt;code&gt;&lt;a href=&quot;mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; (e.g. &quot;&lt;code&gt;basic&lt;/code&gt;&quot;)</source>
          <target state="translated">구성된 &lt;code&gt;&lt;a href=&quot;mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; (예 : &quot; &lt;code&gt;basic&lt;/code&gt; &quot;)</target>
        </trans-unit>
        <trans-unit id="31451cf07bec9471f59e471253e0d5d53d95b8a8" translate="yes" xml:space="preserve">
          <source>The configured executable is run when Managed Domains have signed up or renewed their certificates. It is given the names of the processed MDs as additional arguments (after the parameters specified here). It should return status code 0 to indicate that it has run successfully.</source>
          <target state="translated">구성된 실행 파일은 관리 도메인이 인증서를 등록하거나 갱신 할 때 실행됩니다. 처리 된 MD의 이름은 여기에 지정된 매개 변수 뒤에 추가 인수로 제공됩니다. 상태 코드 0을 반환하여 성공적으로 실행되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="436f20f3d3dbc7f52d7044985b2bea3a730d178f" translate="yes" xml:space="preserve">
          <source>The connection is handling a specific request.</source>
          <target state="translated">연결이 특정 요청을 처리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd2f9f471dca3b937c84f682bf3e92805bbc6dd2" translate="yes" xml:space="preserve">
          <source>The connection string is passed straight through to &lt;code&gt;PQconnectdb&lt;/code&gt;</source>
          <target state="translated">연결 문자열은 &lt;code&gt;PQconnectdb&lt;/code&gt; 로 바로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="011de7e909e56b9f5bf36cd7b28aa86ff539ca92" translate="yes" xml:space="preserve">
          <source>The connection string is passed straight through to &lt;code&gt;sqlite3_open&lt;/code&gt;</source>
          <target state="translated">연결 문자열은 &lt;code&gt;sqlite3_open&lt;/code&gt; 으로 바로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a2dbf56b415d04ba8a60db7b48f030e35970137d" translate="yes" xml:space="preserve">
          <source>The connection string is split on a colon, and &lt;code&gt;part1:part2&lt;/code&gt; is used as &lt;code&gt;sqlite_open(part1, atoi(part2), NULL)&lt;/code&gt;</source>
          <target state="translated">연결 문자열은 콜론으로 분할되고 &lt;code&gt;part1:part2&lt;/code&gt; 는 &lt;code&gt;sqlite_open(part1, atoi(part2), NULL)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11f1cab620a315a90c62767b2e9135f28de1920e" translate="yes" xml:space="preserve">
          <source>The considerations related to the difference between &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; also apply to the difference between &lt;code&gt;&lt;a href=&quot;#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; 의 차이점과 관련된 고려 사항 은 &lt;code&gt;&lt;a href=&quot;#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt; 의 차이점에도 적용됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c9e188434cca484ed2a38fe7fd2474f53b8bc905" translate="yes" xml:space="preserve">
          <source>The considerations related to the difference between &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; also apply to the difference between &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#scriptaliasmatch&quot;&gt;ScriptAliasMatch&lt;/a&gt;&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; 의 차이점과 관련된 고려 사항 은 &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#scriptaliasmatch&quot;&gt;ScriptAliasMatch&lt;/a&gt;&lt;/code&gt; 의 차이점에도 적용됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8fd527bd31a8eac529055c4747705bb2ebc0ef3f" translate="yes" xml:space="preserve">
          <source>The container asks for more data from the request (If the body was too large to fit in the first packet sent over or when the request is chunked). The server will send a body packet back with an amount of data which is the minimum of the &lt;code&gt;request_length&lt;/code&gt;, the maximum send body size &lt;code&gt;(8186 (8 Kbytes - 6))&lt;/code&gt;, and the number of bytes actually left to send from the request body.</source>
          <target state="translated">컨테이너는 요청에서 더 많은 데이터를 요청합니다 (본문이 너무 커서 전송 된 첫 번째 패킷 또는 요청 청크에 맞지 않는 경우). 서버는 최소 &lt;code&gt;request_length&lt;/code&gt; , 최대 송신 본문 크기 &lt;code&gt;(8186 (8 Kbytes - 6))&lt;/code&gt; 및 요청 본문에서 실제로 남은 바이트 수인 데이터 양으로 본문 패킷을 다시 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="cc7d2bdf54118a9421ed265ef0281cb3b143cf57" translate="yes" xml:space="preserve">
          <source>The content encoding of the current request</source>
          <target state="translated">현재 요청의 컨텐츠 인코딩</target>
        </trans-unit>
        <trans-unit id="83153d774120162336443b56bda2dc96d2c3c4b5" translate="yes" xml:space="preserve">
          <source>The content type of the current request, as determined in the type_check phase (f.x. &lt;code&gt;image/gif&lt;/code&gt; or &lt;code&gt;text/html&lt;/code&gt;)</source>
          <target state="translated">type_check 단계에서 결정된 현재 요청의 컨텐츠 유형 (fx &lt;code&gt;image/gif&lt;/code&gt; 또는 &lt;code&gt;text/html&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5fe9592740fb54b8798c3416429767aaf470aab7" translate="yes" xml:space="preserve">
          <source>The content type of the response (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">응답의 컨텐츠 유형 ( &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; 중에는 사용할 수 없음 )</target>
        </trans-unit>
        <trans-unit id="a0f208770e2957c635a5cbc66454ffde20db5ef8" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; header line(s) in the reply.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; 의 내용 : 답장의 헤더 행.</target>
        </trans-unit>
        <trans-unit id="0f79c3198e21dcf85d0bb1b0b0d633437a3d45cd" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; header line(s) in the request sent to the server. Changes made by other modules (e.g. &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;) affect this. If you're interested in what the request header was prior to when most modules would have modified it, use &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; to copy the header into an internal environment variable and log that value with the &lt;code&gt;%{VARNAME}e&lt;/code&gt; described above.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; 의 컨텐츠 : 서버에 전송 된 요청의 헤더 행 다른 모듈 (예 : &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; )에 의한 변경은 이에 영향을줍니다. 대부분의 모듈에서 요청 헤더를 수정하기 이전의 요청 헤더에 관심이있는 경우 &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; 를 사용 하여 헤더를 내부 환경 변수에 복사하고 위에 설명 된 &lt;code&gt;%{VARNAME}e&lt;/code&gt; 해당 값을 기록하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd0970d511bafc871ee6e5ca3490d125a808fac4" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; trailer line(s) in the request sent to the server.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; 의 내용 : 서버에 전송 된 요청의 트레일러 라인.</target>
        </trans-unit>
        <trans-unit id="9d8261fec891f9f0da88f2c07d033391a678aaec" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;VARNAME:&lt;/code&gt; trailer line(s) in the response sent from the server.</source>
          <target state="translated">&lt;code&gt;VARNAME:&lt;/code&gt; 의 내용 : 서버에서 전송 된 응답의 트레일러 라인.</target>
        </trans-unit>
        <trans-unit id="48491431e1ca64c41cdc2364fd0d53bcf0ae8165" translate="yes" xml:space="preserve">
          <source>The contents of any file with a &lt;code&gt;.asis&lt;/code&gt; extension will then be sent by Apache httpd to the client with almost no changes. In particular, HTTP headers are derived from the file itself according to &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; rules, so an asis file must include valid headers, and may also use the CGI &lt;code&gt;Status:&lt;/code&gt; header to determine the HTTP response code. The &lt;code&gt;Content-Length:&lt;/code&gt; header will automatically be inserted or, if included, corrected by httpd.</source>
          <target state="translated">그런 다음 확장자가 &lt;code&gt;.asis&lt;/code&gt; 인 파일의 내용은 거의 변경없이 Apache httpd에 의해 클라이언트로 전송됩니다. 특히, HTTP 헤더는 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 규칙 에 따라 파일 자체에서 파생 되므로 asis 파일에는 유효한 헤더가 포함되어야하며 CGI &lt;code&gt;Status:&lt;/code&gt; 헤더를 사용하여 HTTP 응답 코드를 결정할 수도 있습니다 . &lt;code&gt;Content-Length:&lt;/code&gt; 아파치에 의해 수정 포함 된 경우 헤더는 자동으로 삽입되거나됩니다.</target>
        </trans-unit>
        <trans-unit id="a5fd344b671188e2d1315687e89c72eaecc245e7" translate="yes" xml:space="preserve">
          <source>The contents of cookie &lt;var&gt;VARNAME&lt;/var&gt; in the request sent to the server. Only version 0 cookies are fully supported.</source>
          <target state="translated">요청에서 쿠키 &lt;var&gt;VARNAME&lt;/var&gt; 의 내용이 서버로 전송되었습니다. 버전 0 쿠키 만 완전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="24cebdb1e166903518e535fe3e8149440210a6c8" translate="yes" xml:space="preserve">
          <source>The contents of note &lt;var&gt;VARNAME&lt;/var&gt; from another module.</source>
          <target state="translated">다른 모듈의 &lt;var&gt;VARNAME&lt;/var&gt; 노트 내용</target>
        </trans-unit>
        <trans-unit id="e0ff6bd87005dbae29c021b65ce1aaf750cd3f31" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;VARNAME&lt;/code&gt;.</source>
          <target state="translated">의 내용 &lt;a href=&quot;../env&quot;&gt;환경 변수 &lt;/a&gt; &lt;code&gt;VARNAME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4bdf0b283724381b114fb7fbfaaf31c6b434bc8" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL environment variable&lt;/a&gt;&lt;code&gt;VARNAME&lt;/code&gt;, if &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 이 사용 가능한 경우 &lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL 환경 변수 &lt;/a&gt; &lt;code&gt;VARNAME&lt;/code&gt; 의 컨텐츠</target>
        </trans-unit>
        <trans-unit id="3e4d835df15f64fdebb7ff936f38f3b57fe510fe" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;Range:&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;Range:&lt;/code&gt; 헤더 의 내용입니다 .</target>
        </trans-unit>
        <trans-unit id="528d2deca221c596de822b2902ca23c3ac85a9c2" translate="yes" xml:space="preserve">
          <source>The contents of the environment variable &lt;var&gt;VARNAME&lt;/var&gt;.</source>
          <target state="translated">환경 변수의 내용 &lt;var&gt;VARNAME&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8ccddd86c86360971f43c51252b3312b65791d85" translate="yes" xml:space="preserve">
          <source>The contents of the file are plain ASCII text in 4-5 columns. Blank lines are allowed but ignored. Commented lines use a hash mark (&lt;code&gt;#&lt;/code&gt;). The remaining lines are parsed for the following columns:</source>
          <target state="translated">파일의 내용은 4-5 열의 일반 ASCII 텍스트입니다. 빈 줄은 허용되지만 무시됩니다. 주석 처리 된 행은 해시 표시 ( &lt;code&gt;#&lt;/code&gt; )를 사용합니다. 나머지 행은 다음 열에 대해 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="017dbb02a23baccb0a17b5c953e3ed90a4f0a81e" translate="yes" xml:space="preserve">
          <source>The contents of the session can be optionally encrypted before being placed on the browser using the &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">세션의 내용은 &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; 모듈을 사용하여 브라우저에 배치하기 전에 선택적으로 암호화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f010653f7d7a2a0d33fb7fbea9e995f28bb5e621" translate="yes" xml:space="preserve">
          <source>The contents of the session however are exposed to the client, with a corresponding risk of a loss of privacy. The &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module can be configured to encrypt the contents of the session before writing the session to the client.</source>
          <target state="translated">그러나 세션의 내용은 클라이언트에게 노출되며 개인 정보가 손실 될 위험이 있습니다. &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; 의 모듈은 클라이언트 세션을 작성하기 전에 세션의 내용을 암호화하도록 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34989dd0e27ee893abb2c58c2eb441c084017b4a" translate="yes" xml:space="preserve">
          <source>The control flow through the rewriting ruleset</source>
          <target state="translated">다시 쓰기 규칙 세트를 통한 제어 흐름</target>
        </trans-unit>
        <trans-unit id="259a36c9f1bd92c1258dc12fa2324f2ecb4d4357" translate="yes" xml:space="preserve">
          <source>The core server and basic module set.</source>
          <target state="translated">핵심 서버 및 기본 모듈 세트.</target>
        </trans-unit>
        <trans-unit id="07afc7180b103d27182fdb7e6a68576fbc5608aa" translate="yes" xml:space="preserve">
          <source>The corresponding module will be build as DSO module. By default enabled modules are linked dynamically.</source>
          <target state="translated">해당 모듈은 DSO 모듈로 빌드됩니다. 기본적으로 활성화 된 모듈은 동적으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="a42ffc24a4c70c890d42536a46d5608616db2c58" translate="yes" xml:space="preserve">
          <source>The corresponding module will be linked statically.</source>
          <target state="translated">해당 모듈이 정적으로 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="2ffb6d101ecf4cf89db777a6d83456625582f8db" translate="yes" xml:space="preserve">
          <source>The crypto cipher to be used to encrypt the session</source>
          <target state="translated">세션을 암호화하는 데 사용되는 암호화 암호</target>
        </trans-unit>
        <trans-unit id="ee6366bbd88ff4a27ec21f3f7be33fdc4df89478" translate="yes" xml:space="preserve">
          <source>The crypto driver to be used to encrypt the session</source>
          <target state="translated">세션을 암호화하는 데 사용되는 암호화 드라이버</target>
        </trans-unit>
        <trans-unit id="77844e8d8484d9525863c1824b23ea19048e9171" translate="yes" xml:space="preserve">
          <source>The current (2017) recommendation is at least 2048 bits and a smaller number is not accepted here. Higher numbers offer longer security, but are computationally more expensive, e.g. increase the load on your server. That might or might not be an issue for you.</source>
          <target state="translated">현재 (2017) 권장 사항은 최소 2048 비트이며 더 적은 수는 여기에서 허용되지 않습니다. 숫자가 클수록 보안은 더 길지만 계산 비용이 더 높습니다 (예 : 서버의 부하 증가). 그것은 당신에게 문제가 될 수도 있고 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9699c1573eb42b2a9eee43711e092b0d32014ea3" translate="yes" xml:space="preserve">
          <source>The current CGI specification is available in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFC&lt;/a&gt;.</source>
          <target state="translated">현재 CGI 사양은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFC&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86a9b494939cfbdd391a01e87daf478e35f0f002" translate="yes" xml:space="preserve">
          <source>The current CGI specification is available in the &lt;a href=&quot;https://www.ietf.org/rfc/rfc3875&quot;&gt;Common Gateway Interface RFC&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a767a2e65f4be15af5619cdd15ab67afa77554e7" translate="yes" xml:space="preserve">
          <source>The current URI can be the initial URI as requested by the client, the result of a previous round of mod_rewrite processing, or the result of a prior rule in the current round of mod_rewrite processing.</source>
          <target state="translated">현재 URI는 클라이언트가 요청한 초기 URI, 이전 라운드의 mod_rewrite 처리 결과 또는 현재 라운드의 mod_rewrite 처리 이전 규칙의 결과 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="874e09835254921d7f99c305e55a109ac02b384b" translate="yes" xml:space="preserve">
          <source>The current busy percentage of httpd (0 to 100) based on available processes and threads. The value is preceded by &lt;code&gt;b=&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 프로세스 및 스레드를 기반으로 한 현재 사용중인 httpd 백분율 (0-100)입니다. 값 앞에는 &lt;code&gt;b=&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbfd6fd3fed21ce907bc8b828461ac9493922504" translate="yes" xml:space="preserve">
          <source>The current date in Greenwich Mean Time.</source>
          <target state="translated">그리니치 평균시의 현재 날짜.</target>
        </trans-unit>
        <trans-unit id="b682b90b568979faba5714d6606ed86516b550ef" translate="yes" xml:space="preserve">
          <source>The current date in the local time zone.</source>
          <target state="translated">현지 시간대의 현재 날짜</target>
        </trans-unit>
        <trans-unit id="1ba4f07d267ed9dfb2e2afbd3dd8014cf809f7d4" translate="yes" xml:space="preserve">
          <source>The current day of the month (&lt;code&gt;01&lt;/code&gt;, ...)</source>
          <target state="translated">해당 월의 현재 날짜 ( &lt;code&gt;01&lt;/code&gt; , ...)</target>
        </trans-unit>
        <trans-unit id="3140c1773d75fa618b88c5cbdf7e794c25d72ff5" translate="yes" xml:space="preserve">
          <source>The current hosts and requests being processed (*)</source>
          <target state="translated">처리중인 현재 호스트 및 요청 (*)</target>
        </trans-unit>
        <trans-unit id="2ef2b4ace2a9c7f2e9700003303979ffbce3c845" translate="yes" xml:space="preserve">
          <source>The current idle percentage of httpd (0 to 100) based on available processes and threads. The value is preceded by &lt;code&gt;i=&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 프로세스 및 스레드를 기반으로 한 httpd (0-100)의 현재 유휴 백분율입니다. 값 앞에는 &lt;code&gt;i=&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca7577c05a7ce35fef7197f5d214912b349a8330" translate="yes" xml:space="preserve">
          <source>The current load averages of the actual server itself. It is designed to expose the values obtained by &lt;code&gt;getloadavg()&lt;/code&gt; and this represents the current load average, the 5 minute average, and the 15 minute average. The value is preceded by &lt;code&gt;l=&lt;/code&gt; with each average separated by &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">실제 서버 자체의 현재로드 평균입니다. &lt;code&gt;getloadavg()&lt;/code&gt; 얻은 값을 표시하도록 설계되었으며 현재로드 평균, 5 분 평균 및 15 분 평균을 나타냅니다. 값 앞에는 &lt;code&gt;l=&lt;/code&gt; 이오고 각 평균은 &lt;code&gt;/&lt;/code&gt; 로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="c28ad541f5740f8ccc73d2a80d47d593e534859b" translate="yes" xml:space="preserve">
          <source>The current month (&lt;code&gt;01&lt;/code&gt;, ..., &lt;code&gt;12&lt;/code&gt;)</source>
          <target state="translated">이번 달 ( &lt;code&gt;01&lt;/code&gt; , ..., &lt;code&gt;12&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d889cb33c58403aabe20281a2b4d977958c6d566" translate="yes" xml:space="preserve">
          <source>The current percentage CPU used by each worker and in total by all workers combined (*)</source>
          <target state="translated">각 작업자가 사용하고 현재 모든 작업자가 사용하는 현재 CPU 비율 (*)</target>
        </trans-unit>
        <trans-unit id="1fe93e88c7c604f62592727169164cd951ed1415" translate="yes" xml:space="preserve">
          <source>The current time</source>
          <target state="translated">현재 시간</target>
        </trans-unit>
        <trans-unit id="011361fa653a39b8fd91e2b9d99aecd3b711e56f" translate="yes" xml:space="preserve">
          <source>The current time in compact ISO 8601 format, including micro-seconds</source>
          <target state="translated">마이크로 초를 포함한 컴팩트 한 ISO 8601 형식의 현재 시간</target>
        </trans-unit>
        <trans-unit id="acceb6b1da2ed54a531896b6873a35580d899f74" translate="yes" xml:space="preserve">
          <source>The current time including micro-seconds</source>
          <target state="translated">마이크로 초를 포함한 현재 시간</target>
        </trans-unit>
        <trans-unit id="f54c84bede9e785b6c229135b14eafeec3f5e5a6" translate="yes" xml:space="preserve">
          <source>The current year (e.g. &lt;code&gt;2010&lt;/code&gt;)</source>
          <target state="translated">현재 연도 (예 : &lt;code&gt;2010&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b8296c939be08a210bc3ab8547b7b9bce2c483c3" translate="yes" xml:space="preserve">
          <source>The data logging is done right after SSL decoding (for input) and right before SSL encoding (for output). As can be expected, this can produce extreme volumes of data, and should only be used when debugging problems.</source>
          <target state="translated">데이터 로깅은 SSL 디코딩 직후 (입력) 및 SSL 인코딩 바로 앞 (출력)에서 수행됩니다. 예상 한 바와 같이, 이는 대량의 데이터를 생성 할 수 있으며 문제를 디버깅 할 때만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e2316d0c1bc8244f9b20d61718a77185bef07282" translate="yes" xml:space="preserve">
          <source>The database object returned by &lt;code&gt;dbacquire&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;dbacquire&lt;/code&gt; 가 반환 한 데이터베이스 개체 에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="995e7490d4ceb8fcd60792fc7fdc6061692dc8fc" translate="yes" xml:space="preserve">
          <source>The date and time in the format &lt;code&gt;20101231235959&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;20101231235959&lt;/code&gt; 형식의 날짜 및 시간</target>
        </trans-unit>
        <trans-unit id="f1e1b6859e4f41f459125d6b2e70642f57b8c05d" translate="yes" xml:space="preserve">
          <source>The date and time of last modification of the file in the format &lt;code&gt;20101231235959&lt;/code&gt;, if this has already been determined by the server at the time &lt;code&gt;LAST_MODIFIED&lt;/code&gt; is referenced.</source>
          <target state="translated">&lt;code&gt;LAST_MODIFIED&lt;/code&gt; 가 참조 될 때 서버에 의해 이미 결정된 경우 &lt;code&gt;20101231235959&lt;/code&gt; 형식의 파일을 마지막으로 수정 한 날짜 및 시간입니다 .</target>
        </trans-unit>
        <trans-unit id="c3b157cd9f148513085e947cd4b11d32876f4d7a" translate="yes" xml:space="preserve">
          <source>The date and time the file was last modified will be included</source>
          <target state="translated">파일이 마지막으로 수정 된 날짜와 시간이 포함됩니다</target>
        </trans-unit>
        <trans-unit id="b45db2b1fdc8b29ed5597bed0028317de7b450c4" translate="yes" xml:space="preserve">
          <source>The date format used for the &lt;code&gt;Last Modified&lt;/code&gt; field was inadvertently changed to &lt;code&gt;&quot;%Y-%m-%d %H:%M&quot;&lt;/code&gt; from &lt;code&gt;&quot;%d-%b-%Y %H:%M&quot;&lt;/code&gt; in 2.4.0. Setting this option restores the date format from 2.2 and earlier.</source>
          <target state="translated">사용되는 데이터 형식 &lt;code&gt;Last Modified&lt;/code&gt; 필드가 실수로 변경 한 &lt;code&gt;&quot;%Y-%m-%d %H:%M&quot;&lt;/code&gt; 에서 &lt;code&gt;&quot;%d-%b-%Y %H:%M&quot;&lt;/code&gt; 2.4.0있다. 이 옵션을 설정하면 날짜 형식이 2.2 이하에서 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="4dea95061277e4dbc1727c90a35907f424a6fde8" translate="yes" xml:space="preserve">
          <source>The date of the API version (module magic number)</source>
          <target state="translated">API 버전의 날짜 (모듈 매직 번호)</target>
        </trans-unit>
        <trans-unit id="f4449a0a8b61922004a943a7244af5d3cfc092af" translate="yes" xml:space="preserve">
          <source>The day of the week (starting with &lt;code&gt;0&lt;/code&gt; for Sunday)</source>
          <target state="translated">요일 ( 일요일 은 &lt;code&gt;0&lt;/code&gt; 부터 시작 )</target>
        </trans-unit>
        <trans-unit id="441f15a5c163b4c9c9a41ddbedd415faced2b017" translate="yes" xml:space="preserve">
          <source>The dbd support includes the Oracle instantclient package, MySQL, PostgreSQL and sqlite. To build these all, for example, set up the LIB to include the library path, INCLUDE to include the headers path, and PATH to include the dll bin path of all four SDK's, and set the DBD_LIST environment variable to inform the build which client driver SDKs are installed correctly, e.g.;</source>
          <target state="translated">dbd 지원에는 Oracle 인스턴트 클라이언트 패키지, MySQL, PostgreSQL 및 sqlite가 포함됩니다. 예를 들어,이 모든 것을 빌드하려면 라이브러리 경로를 포함하도록 LIB를 설정하고 헤더 경로를 포함하려면 INCLUDE를, 4 개의 모든 SDK의 dll bin 경로를 포함하도록 PATH를 설정하고 DBD_LIST 환경 변수를 설정하여 빌드에 어떤 클라이언트를 알려야합니다. 드라이버 SDK가 올바르게 설치되어 있어야합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="22452de99919391746df3928f2c85a05eb698e83" translate="yes" xml:space="preserve">
          <source>The debug output depends on the &lt;var&gt;level&lt;/var&gt; set:</source>
          <target state="translated">디버그 출력은 &lt;var&gt;level&lt;/var&gt; 세트 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="3365dc272341f84ed05fd14dc729c54a6f52ec44" translate="yes" xml:space="preserve">
          <source>The decision of when to use SSI, and when to have your page entirely generated by some program, is usually a matter of how much of the page is static, and how much needs to be recalculated every time the page is served. SSI is a great way to add small pieces of information, such as the current time - shown above. But if a majority of your page is being generated at the time that it is served, you need to look for some other solution.</source>
          <target state="translated">SSI 사용시기 및 일부 프로그램에서 페이지를 완전히 생성해야하는시기는 일반적으로 정적 페이지 수와 페이지를 제공 할 때마다 다시 계산해야하는 양에 따라 결정됩니다. SSI는 위에 표시된 현재 시간과 같은 작은 정보를 추가 할 수있는 좋은 방법입니다. 그러나 페이지가 게재 될 때 대부분의 페이지가 생성되는 경우 다른 솔루션을 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="a8ea8f7d1d2e6600f717839985e77d8848948b8e" translate="yes" xml:space="preserve">
          <source>The default MPM, either selected automatically or specified with the &lt;code&gt;--with-mpm&lt;/code&gt; option of the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script, will be loaded in the generated server configuration file. Edit the &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive to select a different MPM.</source>
          <target state="translated">자동으로 선택되거나 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 스크립트 의 &lt;code&gt;--with-mpm&lt;/code&gt; 옵션으로 지정된 기본 MPM 은 생성 된 서버 구성 파일에로드됩니다. 다른 MPM을 선택 하도록 &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; 지시문을 편집하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4e7d7bc3f800838ba845e533893a61b8c9fdecf" translate="yes" xml:space="preserve">
          <source>The default assumption of the server is that Text Files (&lt;em&gt;i.e.&lt;/em&gt;, all files whose &lt;code&gt;Content-Type:&lt;/code&gt; starts with &lt;code&gt;text/&lt;/code&gt;) are stored in the native character set of the host, EBCDIC.</source>
          <target state="translated">서버의 기본 가정은 텍스트 파일 ( &lt;em&gt;즉&lt;/em&gt; , &lt;code&gt;Content-Type:&lt;/code&gt; &lt;code&gt;text/&lt;/code&gt; 시작 하는 모든 파일 )이 호스트의 기본 문자 세트 인 EBCDIC에 저장된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9549277fd7b808f7cc03bd89435255da412098a2" translate="yes" xml:space="preserve">
          <source>The default certificate format for OpenSSL is PEM, which is simply Base64 encoded DER, with header and footer lines. For some applications (e.g. Microsoft Internet Explorer) you need the certificate in plain DER format. You can convert a PEM file &lt;code&gt;cert.pem&lt;/code&gt; into the corresponding DER file &lt;code&gt;cert.der&lt;/code&gt; using the following command: &lt;code&gt;$ openssl x509 -in cert.pem -out cert.der -outform DER&lt;/code&gt;</source>
          <target state="translated">OpenSSL의 기본 인증서 형식은 PEM이며 헤더 및 바닥 글 행이있는 Base64로 인코딩 된 DER입니다. 일부 응용 프로그램 (예 : Microsoft Internet Explorer)의 경우 일반 DER 형식의 인증서가 필요합니다. 다음 명령을 사용하여 PEM 파일 &lt;code&gt;cert.pem&lt;/code&gt; 을 해당 DER 파일 &lt;code&gt;cert.der&lt;/code&gt; 로 변환 할 수 있습니다 . &lt;code&gt;$ openssl x509 -in cert.pem -out cert.der -outform DER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48edfe99f7685e3315f4faecb6850cb6692795fd" translate="yes" xml:space="preserve">
          <source>The default configuration for the server is installed by default beneath the &lt;code&gt;/etc/httpd&lt;/code&gt; directory, with logs written by default to &lt;code&gt;/var/log/httpd&lt;/code&gt;. The environment for the webserver is set by default within the optional &lt;code&gt;/etc/sysconfig/httpd&lt;/code&gt; file.</source>
          <target state="translated">서버의 기본 구성은 기본적으로 &lt;code&gt;/etc/httpd&lt;/code&gt; 디렉토리 아래에 설치되며 기본적 으로 로그는 &lt;code&gt;/var/log/httpd&lt;/code&gt; 에 기록 됩니다. 웹 서버의 환경은 기본적으로 선택적 &lt;code&gt;/etc/sysconfig/httpd&lt;/code&gt; 파일 내에 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9c716425fbe3e4d167f40506126cff4e5b1f79c" translate="yes" xml:space="preserve">
          <source>The default dependency is 'After'.</source>
          <target state="translated">기본 종속성은 'After'입니다.</target>
        </trans-unit>
        <trans-unit id="5ceb6bf27b67afd3796272afeb1607a434cb93b5" translate="yes" xml:space="preserve">
          <source>The default duration to cache a document when no expiry date is specified.</source>
          <target state="translated">만료 날짜가 지정되지 않은 경우 문서를 캐시하는 기본 기간입니다.</target>
        </trans-unit>
        <trans-unit id="54a81f7ded06377d6eba0042dd0e12d957adf7c0" translate="yes" xml:space="preserve">
          <source>The default in the absence of any other settings is &lt;code&gt;FollowSymlinks&lt;/code&gt;.</source>
          <target state="translated">다른 설정이없는 경우 기본값은 &lt;code&gt;FollowSymlinks&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e98760d5c5915ac91bc90dfc96af14f0dabb2739" translate="yes" xml:space="preserve">
          <source>The default is 10 seconds, if the LDAP client library linked with the server supports the LDAP_OPT_NETWORK_TIMEOUT option.</source>
          <target state="translated">서버와 연결된 LDAP 클라이언트 라이브러리가 LDAP_OPT_NETWORK_TIMEOUT 옵션을 지원하는 경우 기본값은 10 초입니다.</target>
        </trans-unit>
        <trans-unit id="e997f18abf18a2113f6ceb7622f35da192ebfe92" translate="yes" xml:space="preserve">
          <source>The default is 8192, and will work well for almost all pages. However, if you know you're proxying pages containing stylesheets and/or scripts bigger than 8K (that is, for a single script or stylesheet, NOT in total), it will be more efficient to set a larger buffer size and avoid the need to resize the buffer dynamically during a request.</source>
          <target state="translated">기본값은 8192이며 거의 모든 페이지에 적합합니다. 그러나 8K보다 큰 스타일 시트 및 / 또는 스크립트 (즉, 단일 스크립트 또는 스타일 시트의 경우 전체가 아님)가 포함 된 페이지를 프록 싱하는 경우 더 큰 버퍼 크기를 설정하고 필요를 피하는 것이 더 효율적입니다 요청하는 동안 버퍼의 크기를 동적으로 조정합니다.</target>
        </trans-unit>
        <trans-unit id="22ab4dadca9fad8b3b34e2bcc71fd37c6bc24609" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Off&lt;/code&gt; in order to save the network traffic for those sites that don't truly need the reverse lookups done. It is also better for the end users because they don't have to suffer the extra latency that a lookup entails. Heavily loaded sites should leave this directive &lt;code&gt;Off&lt;/code&gt;, since DNS lookups can take considerable amounts of time. The utility &lt;code&gt;&lt;a href=&quot;../programs/logresolve&quot;&gt;logresolve&lt;/a&gt;&lt;/code&gt;, compiled by default to the &lt;code&gt;bin&lt;/code&gt; subdirectory of your installation directory, can be used to look up host names from logged IP addresses offline.</source>
          <target state="translated">역방향 조회가 실제로 필요하지 않은 사이트의 네트워크 트래픽을 절약하기 위해 기본값은 &lt;code&gt;Off&lt;/code&gt; 입니다. 최종 사용자는 조회에 수반되는 추가 대기 시간을 겪지 않아도되기 때문에 더 좋습니다. DNS 조회에는 상당한 시간이 걸릴 수 있으므로 로드가 많은 사이트에서는이 지정 문을 &lt;code&gt;Off&lt;/code&gt; 로 두어야합니다 . 기본적으로 설치 디렉토리 의 &lt;code&gt;bin&lt;/code&gt; 서브 디렉토리에 컴파일 된 유틸리티 &lt;code&gt;&lt;a href=&quot;../programs/logresolve&quot;&gt;logresolve&lt;/a&gt;&lt;/code&gt; 는 로그 된 IP 주소에서 오프라인으로 호스트 이름을 찾는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41ca4f5b3570cc0b2c7072495c602e195d508b64" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;log_transaction&lt;/code&gt;. The special value &lt;code&gt;all&lt;/code&gt; is also supported, causing a message to be logged at each phase. Not all hooks are executed for every request.</source>
          <target state="translated">기본값은 &lt;code&gt;log_transaction&lt;/code&gt; 입니다. &lt;code&gt;all&lt;/code&gt; 특수 값 도 지원되므로 각 단계에서 메시지가 기록됩니다. 모든 요청에 ​​대해 모든 후크가 실행되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a47b8f11201323e27ad18cd73c0cd6a1caafa9b6" translate="yes" xml:space="preserve">
          <source>The default is &lt;var&gt;directory&lt;/var&gt;, which is also the most conservative setting. This is likely to be less than optimal, as it (for example) causes &lt;var&gt;$app-base&lt;/var&gt;, &lt;var&gt;$app-base/images&lt;/var&gt;, &lt;var&gt;$app-base/scripts&lt;/var&gt; and &lt;var&gt;$app-base/media&lt;/var&gt; each to have its own separate cache key. A better policy is to name the &lt;code&gt;AuthnCacheContext&lt;/code&gt; for the password provider: for example a &lt;var&gt;htpasswd&lt;/var&gt; file or database table.</source>
          <target state="translated">기본값은 &lt;var&gt;directory&lt;/var&gt; 이며 가장 보수적 인 설정입니다. 예를 들어 &lt;var&gt;$app-base&lt;/var&gt; , &lt;var&gt;$app-base/images&lt;/var&gt; , &lt;var&gt;$app-base/scripts&lt;/var&gt; 및 &lt;var&gt;$app-base/media&lt;/var&gt; 각각 별도의 캐시 키가 있기 때문에 이것은 최적보다 적을 수 있습니다. 더 나은 정책은 비밀번호 제공자 의 &lt;code&gt;AuthnCacheContext&lt;/code&gt; 이름을 지정하는 것 입니다 (예 : &lt;var&gt;htpasswd&lt;/var&gt; 파일 또는 데이터베이스 테이블).</target>
        </trans-unit>
        <trans-unit id="bb9ea35a8dfa8c57a5684179cea2bdfd0c2cbc1b" translate="yes" xml:space="preserve">
          <source>The default is changed to omitting any FPI, on the grounds that no FPI is better than a bogus one. If your backend generates decent HTML or XHTML, set it accordingly.</source>
          <target state="translated">FPI가 가짜보다 낫다는 이유로 FPI를 생략하도록 기본값이 변경됩니다. 백엔드에서 적절한 HTML 또는 XHTML을 생성하는 경우 적절하게 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="04a47d1e780cf2e3a08ba471b157b8a7be9f37b0" translate="yes" xml:space="preserve">
          <source>The default is to enable a pool of persistent connections (or a single LAMP-style persistent connection in the case of a non-threaded server), and should almost always be used in operation.</source>
          <target state="translated">기본 설정은 영구 연결 풀 (또는 스레드가 아닌 서버의 경우 단일 LAMP 스타일의 영구 연결)을 활성화하는 것으로, 거의 항상 작동에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d461ad9a1e0cd9c65c22b304065495de75531f7a" translate="yes" xml:space="preserve">
          <source>The default location of &lt;code&gt;DefaultRuntimeDir&lt;/code&gt; may be modified by changing the &lt;code&gt;DEFAULT_REL_RUNTIMEDIR&lt;/code&gt; #define at build time.</source>
          <target state="translated">&lt;code&gt;DefaultRuntimeDir&lt;/code&gt; 의 기본 위치는 빌드시 &lt;code&gt;DEFAULT_REL_RUNTIMEDIR&lt;/code&gt; #define을 변경하여 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3cb5c2d8ddae3a66fea7b5ec9fae1e235be87688" translate="yes" xml:space="preserve">
          <source>The default location of &lt;code&gt;ServerRoot&lt;/code&gt; may be modified by using the &lt;code&gt;--prefix&lt;/code&gt; argument to &lt;a href=&quot;../programs/configure&quot;&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt;, and most third-party distributions of the server have a different default location from the one listed above.</source>
          <target state="translated">&lt;code&gt;--prefix&lt;/code&gt; 인수를 사용하여 &lt;a href=&quot;../programs/configure&quot;&gt; &lt;code&gt;configure&lt;/code&gt; &lt;/a&gt; 하여 &lt;code&gt;ServerRoot&lt;/code&gt; 의 기본 위치를 수정할 수 있으며 , 대부분의 타사 서버 배포는 위에 나열된 것과 다른 기본 위치를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a8eafcaed1759f7ccade7154604e7ebdcb96f039" translate="yes" xml:space="preserve">
          <source>The default log_transaction hook is not executed for sub-requests, therefore we have to use a different hook.</source>
          <target state="translated">하위 요청에 대해서는 기본 log_transaction 후크가 실행되지 않으므로 다른 후크를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7abf95ace4f3c41e72821fcb4940e391013ec49a" translate="yes" xml:space="preserve">
          <source>The default name-based vhost for an IP and port combination</source>
          <target state="translated">IP 및 포트 조합의 기본 이름 기반 가상 호스트</target>
        </trans-unit>
        <trans-unit id="3ce7b60531e68f934992d39f7c19f41e1e67324a" translate="yes" xml:space="preserve">
          <source>The default of zero disables this option.</source>
          <target state="translated">기본값 0은이 옵션을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="033889af4648da1de00e398571a3dddfd43cff74" translate="yes" xml:space="preserve">
          <source>The default priority rule is:</source>
          <target state="translated">기본 우선 순위 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4507233934500c99efde706a87553bdea162fe47" translate="yes" xml:space="preserve">
          <source>The default protocol names are &lt;code&gt;https&lt;/code&gt; for port 443 and &lt;code&gt;http&lt;/code&gt; for all other ports. To specify that another protocol is being used with a listening port, add the &lt;var&gt;protocol&lt;/var&gt; argument to the &lt;code&gt;&lt;a href=&quot;mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">기본 프로토콜 이름은 포트 443의 경우 &lt;code&gt;https&lt;/code&gt; 이고 다른 모든 포트의 경우 &lt;code&gt;http&lt;/code&gt; 입니다. 다른 포트가 수신 포트와 함께 사용되도록 지정하려면 &lt;var&gt;protocol&lt;/var&gt; 인수를 &lt;code&gt;&lt;a href=&quot;mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 지시문에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="588d09d0639669f3152771fc1f8be1c315bd88cd" translate="yes" xml:space="preserve">
          <source>The default set is &lt;code&gt;most&lt;/code&gt;.</source>
          <target state="translated">기본 설정은 &lt;code&gt;most&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d35b7ad82c268aeefcfe9226ff1b0b58c13bf777" translate="yes" xml:space="preserve">
          <source>The default used to be &quot;INode MTime Size&quot; in 2.3.14 and earlier.</source>
          <target state="translated">기본값은 2.3.14 및 이전 버전에서 &quot;INode MTime 크기&quot;였습니다.</target>
        </trans-unit>
        <trans-unit id="c18c6c61257644ddcd36073e998434abbd118b25" translate="yes" xml:space="preserve">
          <source>The default value differs from MPM to MPM. &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; default to &lt;code&gt;StartServers 3&lt;/code&gt;; &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt; prefork&lt;/a&gt;&lt;/code&gt; defaults to &lt;code&gt;5&lt;/code&gt;; &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; defaults to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">기본값은 MPM에서 MPM으로 다릅니다. &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; 기본값은 &lt;code&gt;StartServers 3&lt;/code&gt; 입니다 . &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt; prefork&lt;/a&gt;&lt;/code&gt; 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다 . &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; 의 기본값은 &lt;code&gt;2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1aa2fa20406d15bb099058125ca6697f8501f77c" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;ThreadLimit&lt;/code&gt; is &lt;code&gt;1920&lt;/code&gt; when used with &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;64&lt;/code&gt; when used with the others.</source>
          <target state="translated">&lt;code&gt;ThreadLimit&lt;/code&gt; 의 기본값 은 &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; 와 함께 사용하는 경우 &lt;code&gt;1920&lt;/code&gt; 이고 다른 값과 함께 사용되는 경우 &lt;code&gt;64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="80dc03670f929a8245ed3b0ba0242d860f78a9b1" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;ThreadsPerChild&lt;/code&gt; is &lt;code&gt;64&lt;/code&gt; when used with &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;25&lt;/code&gt; when used with the others.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; 와 함께 사용하는 경우 &lt;code&gt;ThreadsPerChild&lt;/code&gt; 의 기본값 은 &lt;code&gt;64&lt;/code&gt; 이고 다른 것과 함께 사용하는 경우 &lt;code&gt;25&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="45b901f187ff4345953056377dc675b4ef868f13" translate="yes" xml:space="preserve">
          <source>The default values on FreeBSD are:</source>
          <target state="translated">FreeBSD의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fce0f73fb7e1320d16c0b0fd74029a2d512e8b64" translate="yes" xml:space="preserve">
          <source>The default values on Linux are:</source>
          <target state="translated">Linux의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bb481ece192be39e3b36e750b45192595e4d8c9" translate="yes" xml:space="preserve">
          <source>The default values on Windows are:</source>
          <target state="translated">Windows의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e7059b8ee37257adca125d4cf4f8faa17f2a793d" translate="yes" xml:space="preserve">
          <source>The default vhost for port 80 (which &lt;em&gt;must&lt;/em&gt; appear before any default vhost with a wildcard port) catches all requests that were sent to an unspecified IP address. The main server is never used to serve a request.</source>
          <target state="translated">(포트 80에 대한 기본 가상 호스트 &lt;em&gt;해야한다&lt;/em&gt; 와일드 카드 포트를 가진 기본 가상 호스트 이전에 표시)는 지정되지 않은 IP 주소로 보내진 모든 요청을 서비스한다. 기본 서버는 요청을 처리하는 데 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1c3812029e159e5670f090bebcd64976926861c" translate="yes" xml:space="preserve">
          <source>The default was changed from All to FollowSymlinks in 2.3.11</source>
          <target state="translated">2.3.11에서 기본값이 All에서 FollowSymlinks로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="b888a05501c6b37eee37271334284c6b722baf32" translate="yes" xml:space="preserve">
          <source>The depth actually is the maximum number of intermediate certificate issuers, i.e. the number of CA certificates which are max allowed to be followed while verifying the client certificate. A depth of 0 means that self-signed client certificates are accepted only, the default depth of 1 means the client certificate can be self-signed or has to be signed by a CA which is directly known to the server (i.e. the CA's certificate is under &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt;), etc.</source>
          <target state="translated">깊이는 실제로 최대 중간 인증서 발급자 수, 즉 클라이언트 인증서를 확인하는 동안 따라야 할 최대 CA 인증서 수입니다. 깊이 0은 자체 서명 된 클라이언트 인증서 만 수락 함을 의미하고, 기본 깊이 1은 클라이언트 인증서를 자체 서명 할 수 있거나 서버에 직접 알려진 CA에서 서명해야 함을 의미합니다 (즉, CA의 인증서는 다음과 같습니다). &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; 아래 ) 등</target>
        </trans-unit>
        <trans-unit id="46e97a5ea9eaae6b3f6d8c42f3db564f8160eba3" translate="yes" xml:space="preserve">
          <source>The depth actually is the maximum number of intermediate certificate issuers, i.e. the number of CA certificates which are max allowed to be followed while verifying the remote server certificate. A depth of 0 means that self-signed remote server certificates are accepted only, the default depth of 1 means the remote server certificate can be self-signed or has to be signed by a CA which is directly known to the server (i.e. the CA's certificate is under &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatepath&quot;&gt;SSLProxyCACertificatePath&lt;/a&gt;&lt;/code&gt;), etc.</source>
          <target state="translated">깊이는 실제로 중간 인증서 발급자의 최대 수, 즉 원격 서버 인증서를 확인하는 동안 따라야하는 최대 CA 인증서 수입니다. 깊이 0은 자체 서명 된 원격 서버 인증서 만 수락됨을 의미하고, 기본 깊이 1은 원격 서버 인증서를 자체 서명 할 수 있거나 서버에 직접 알려진 CA (예 : CA의 인증서)에 의해 서명되어야 함을 의미합니다. 인증서는 &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatepath&quot;&gt;SSLProxyCACertificatePath&lt;/a&gt;&lt;/code&gt; 아래에 있습니다 ) 등</target>
        </trans-unit>
        <trans-unit id="5be7956bdac0711b798163b6003817eb8f2e72f7" translate="yes" xml:space="preserve">
          <source>The details given are:</source>
          <target state="translated">주어진 세부 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="97ce6b20d67d621fe43dbf9fa860e1289bf763a2" translate="yes" xml:space="preserve">
          <source>The details on how you built and installed Apache httpd and OpenSSL</source>
          <target state="translated">Apache httpd 및 OpenSSL을 빌드하고 설치 한 방법에 대한 세부 사항</target>
        </trans-unit>
        <trans-unit id="62c6db014aeb25f8e01437f99aec4794651e9139" translate="yes" xml:space="preserve">
          <source>The difference between the &lt;code&gt;Require ldap-filter&lt;/code&gt; directive and the &lt;code&gt;Require ldap-attribute&lt;/code&gt; directive is that &lt;code&gt;ldap-filter&lt;/code&gt; performs a search operation on the LDAP directory using the specified search filter rather than a simple attribute comparison. If a simple attribute comparison is all that is required, the comparison operation performed by &lt;code&gt;ldap-attribute&lt;/code&gt; will be faster than the search operation used by &lt;code&gt;ldap-filter&lt;/code&gt; especially within a large directory.</source>
          <target state="translated">사이의 차이 &lt;code&gt;Require ldap-filter&lt;/code&gt; 지시를하고는 &lt;code&gt;Require ldap-attribute&lt;/code&gt; 지시자 즉 &lt;code&gt;ldap-filter&lt;/code&gt; 행한다 지정된 검색 필터보다 간단한 특성을 비교하여 LDAP 디렉토리에서 검색 동작. 간단한 속성 비교가 필요한 경우 &lt;code&gt;ldap-attribute&lt;/code&gt; 가 수행하는 비교 작업 은 특히 큰 디렉토리 내에서 &lt;code&gt;ldap-filter&lt;/code&gt; 가 사용하는 검색 작업보다 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="1ad3212714f998f65cb1ff3d6e67f6e97347ef10" translate="yes" xml:space="preserve">
          <source>The difference in effect is subtle. If &lt;code&gt;M&lt;/code&gt; is used, all current copies of the document in all caches will expire at the same time, which can be good for something like a weekly notice that's always found at the same URL. If &lt;code&gt;A&lt;/code&gt; is used, the date of expiration is different for each client; this can be good for image files that don't change very often, particularly for a set of related documents that all refer to the same images (&lt;em&gt;i.e.&lt;/em&gt;, the images will be accessed repeatedly within a relatively short timespan).</source>
          <target state="translated">효과의 차이는 미묘합니다. &lt;code&gt;M&lt;/code&gt; 을 사용하는 경우 모든 캐시에있는 현재 문서의 모든 사본이 동시에 만료되므로 항상 같은 URL에있는 주간 통지와 같은 경우에 좋습니다. &lt;code&gt;A&lt;/code&gt; 를 사용 하는 경우 만료 날짜는 각 고객마다 다릅니다. 이는 자주 변경되지 않는 이미지 파일, 특히 모두 동일한 이미지를 참조하는 일련의 관련 문서에 유용합니다 ( &lt;em&gt;즉&lt;/em&gt; , 이미지는 비교적 짧은 시간 내에 반복적으로 액세스됩니다).</target>
        </trans-unit>
        <trans-unit id="cf9c3066a8fece5e5578cdc30f8203745cef3611" translate="yes" xml:space="preserve">
          <source>The different LDAP SDKs have widely different methods of setting and handling both CA and client side certificates.</source>
          <target state="translated">서로 다른 LDAP SDK는 CA 및 클라이언트 측 인증서를 설정하고 처리하는 방법이 크게 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6212af10d307a69ec950c1575b5cc27d14ab38d2" translate="yes" xml:space="preserve">
          <source>The directive &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; will enable the &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; authentication when set to the value &lt;var&gt;form&lt;/var&gt;. The directives &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; specify that usernames and passwords should be checked against the chosen file.</source>
          <target state="translated">지시문 &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; 은 값 &lt;var&gt;form&lt;/var&gt; 으로 설정 될 때 &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; 인증 을 활성화합니다 . 지시문 &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; 은 선택한 파일에 대해 사용자 이름과 비밀번호를 확인하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8dbeb8bc0977de1b60f6b78206f2e422bc5888fe" translate="yes" xml:space="preserve">
          <source>The directive &lt;code&gt;LDAPReferralHopLimit&lt;/code&gt; works in conjunction with this directive to limit the number of referral hops to follow before terminating the LDAP query. When referral processing is enabled by a value of &quot;On&quot;, client credentials will be provided, via a rebind callback, for any LDAP server requiring them.</source>
          <target state="translated">지시문 &lt;code&gt;LDAPReferralHopLimit&lt;/code&gt; 는이 지시문과 함께 작동하여 LDAP 조회를 종료하기 전에 따라야 할 참조 홉 수를 제한합니다. &quot;On&quot;값으로 조회 처리가 활성화되면 리 바인드 콜백을 통해 클라이언트 자격 증명이 필요한 LDAP 서버에 대해 클라이언트 자격 증명이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa1340ce96c58b1f5c75b1caf3c49b7ee13c773" translate="yes" xml:space="preserve">
          <source>The directive accepts three parameters from the following list of choices, applying the default to the ones not specified:</source>
          <target state="translated">지정 문은 다음 선택 사항 목록에서 세 가지 매개 변수를 승인하여 기본값을 지정되지 않은 매개 변수에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="6380b1700090f31ca28b1f1860d649030a984eba" translate="yes" xml:space="preserve">
          <source>The directive can be used multiple times (referencing different filenames) to support multiple algorithms for server authentication. For each &lt;code&gt;&lt;a href=&quot;#sslcertificatekeyfile&quot;&gt;SSLCertificateKeyFile&lt;/a&gt;&lt;/code&gt; directive, there must be a matching &lt;code&gt;SSLCertificateFile&lt;/code&gt; directive.</source>
          <target state="translated">이 지시문은 서버 인증을 위해 여러 알고리즘을 지원하기 위해 여러 번 (다른 파일 이름을 참조하여) 사용할 수 있습니다. 각 &lt;code&gt;&lt;a href=&quot;#sslcertificatekeyfile&quot;&gt;SSLCertificateKeyFile&lt;/a&gt;&lt;/code&gt; 지시문 마다 일치하는 &lt;code&gt;SSLCertificateFile&lt;/code&gt; 지시문 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8c9be7b6fc5b49d471673ce33df75202a2ae245a" translate="yes" xml:space="preserve">
          <source>The directive is applied if and only if &lt;var&gt;expression&lt;/var&gt; evaluates to true. Details of expression syntax and evaluation are documented in the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; documentation.</source>
          <target state="translated">지시문이 &lt;var&gt;expression&lt;/var&gt; 이 true로 평가 되는 경우에만 적용됩니다 . 식 구문 및 평가에 대한 자세한 내용은 &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; 설명서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e689afd9ce968db9a5b59663d71a74b14447b4f" translate="yes" xml:space="preserve">
          <source>The directive is applied if and only if the &lt;a href=&quot;../env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;varname&lt;/code&gt; exists. A &lt;code&gt;!&lt;/code&gt; in front of &lt;code&gt;varname&lt;/code&gt; reverses the test, so the directive applies only if &lt;code&gt;varname&lt;/code&gt; is unset.</source>
          <target state="translated">지시문은 &lt;a href=&quot;../env&quot;&gt;환경 변수 &lt;/a&gt; &lt;code&gt;varname&lt;/code&gt; 이 존재하는 경우에만 적용됩니다 . A &lt;code&gt;!&lt;/code&gt; &lt;code&gt;varname&lt;/code&gt; 앞에는 테스트 가 취소 되므로 지시문 은 &lt;code&gt;varname&lt;/code&gt; 이 설정되지 않은 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b86f9735927a850d7bb37491b6c4c353b618c037" translate="yes" xml:space="preserve">
          <source>The directive is one of &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;poly&lt;/code&gt;, &lt;code&gt;circle&lt;/code&gt;, &lt;code&gt;rect&lt;/code&gt;, or &lt;code&gt;point&lt;/code&gt;. The value is an absolute or relative URL, or one of the special values listed below. The coordinates are &lt;code&gt;x,y&lt;/code&gt; pairs separated by whitespace. The quoted text is used as the text of the link if a imagemap menu is generated. Lines beginning with '#' are comments.</source>
          <target state="translated">지시문은 &lt;code&gt;base&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;poly&lt;/code&gt; , &lt;code&gt;circle&lt;/code&gt; , &lt;code&gt;rect&lt;/code&gt; 또는 &lt;code&gt;point&lt;/code&gt; 중 하나입니다 . 값은 절대 또는 상대 URL이거나 아래 나열된 특수 값 중 하나입니다. 좌표는 공백으로 구분 된 &lt;code&gt;x,y&lt;/code&gt; 쌍입니다. 인용 된 텍스트는 이미지 맵 메뉴가 생성 된 경우 링크의 텍스트로 사용됩니다. '#'으로 시작하는 줄은 주석입니다.</target>
        </trans-unit>
        <trans-unit id="334e6b643a7a6d86fbd99aa9a70bc580e9a9f28a" translate="yes" xml:space="preserve">
          <source>The directive stores two different limits, which are evaluated on per-request basis. The first &lt;var&gt;number&lt;/var&gt; is the maximum number of internal redirects that may follow each other. The second &lt;var&gt;number&lt;/var&gt; determines how deeply subrequests may be nested. If you specify only one &lt;var&gt;number&lt;/var&gt;, it will be assigned to both limits.</source>
          <target state="translated">이 지시문은 요청에 따라 평가되는 두 가지 다른 한계를 저장합니다. 첫 번째 &lt;var&gt;number&lt;/var&gt; 는 서로 이어질 수있는 최대 내부 리디렉션 수입니다. 두 번째 &lt;var&gt;number&lt;/var&gt; 는 하위 요청이 얼마나 깊이 중첩 될 수 있는지 결정합니다. 하나의 &lt;var&gt;number&lt;/var&gt; 만 지정하면 두 한계에 모두 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="8a7495de630b15bf915dd27b26fdaaadf0fff955" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; are all used to map file extensions onto the metadata for that file. Respectively they set the character set, content-encoding, content-language, and &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media-type&lt;/a&gt; (content-type) of documents. The directive &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; is used to specify a file which also maps extensions onto media types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#addcharset&quot;&gt;AddCharset&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; 지시문 은 모두 파일 확장자를 해당 파일의 메타 데이터에 맵핑하는 데 사용됩니다. 각각 문서의 문자 집합, 내용 인코딩, 내용 언어 및 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;미디어 유형&lt;/a&gt; (콘텐츠 유형)을 설정합니다. 지시문 &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; 는 확장명을 미디어 유형에 매핑하는 파일을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28f68e60df4afd9e02f46532a433694039fe50b7" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfields&quot;&gt;LimitRequestFields&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfieldsize&quot;&gt;LimitRequestFieldSize&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestline&quot;&gt;LimitRequestLine&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/core#limitxmlrequestbody&quot;&gt;LimitXMLRequestBody&lt;/a&gt;&lt;/code&gt; should be carefully configured to limit resource consumption triggered by client input.</source>
          <target state="translated">지시문 &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfields&quot;&gt;LimitRequestFields&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestfieldsize&quot;&gt;LimitRequestFieldSize&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#limitrequestline&quot;&gt;LimitRequestLine&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../mod/core#limitxmlrequestbody&quot;&gt;LimitXMLRequestBody&lt;/a&gt;&lt;/code&gt; 는 클라이언트 입력에 의해 트리거되는 자원 소비를 제한하도록 신중하게 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d66ef8bdf1c30e4f3fbb83aeb9a47e08edbdc4e" translate="yes" xml:space="preserve">
          <source>The directives &lt;code&gt;&lt;a href=&quot;mod_session#session&quot;&gt;Session&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookiename&quot;&gt;SessionCookieName&lt;/a&gt;&lt;/code&gt; session stored within an HTTP cookie on the browser. For more information on the different options for configuring a session, read the documentation for &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지시문 &lt;code&gt;&lt;a href=&quot;mod_session#session&quot;&gt;Session&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookiename&quot;&gt;SessionCookieName&lt;/a&gt;&lt;/code&gt; 세션은 브라우저의 HTTP 쿠키 내에 저장됩니다. 세션 구성을위한 다양한 옵션에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="51d653289fc5139b35c225f9827a2609f86a342d" translate="yes" xml:space="preserve">
          <source>The directives above only let one person (specifically someone with a username of &lt;code&gt;rbowen&lt;/code&gt;) into the directory. In most cases, you'll want to let more than one person in. This is where the &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; comes in.</source>
          <target state="translated">위의 지시문은 한 사람 (특히 사용자 이름이 &lt;code&gt;rbowen&lt;/code&gt; 인 사람 ) 만 디렉토리에 허용합니다. 대부분의 경우 두 명 이상의 사람을 들여 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; 싶을 것입니다. AuthGroupFile 이 들어오는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="b4f192b5ba7c199f37a4ae10695c008d73c4fc5a" translate="yes" xml:space="preserve">
          <source>The directives are considered in the order they appear in the configuration files. So more complex sequences can be used, such as this example, which sets &lt;code&gt;netscape&lt;/code&gt; if the browser is mozilla but not MSIE.</source>
          <target state="translated">지시문은 구성 파일에 나타나는 순서대로 고려됩니다. 브라우저가 mozilla이지만 MSIE가 아닌 경우 &lt;code&gt;netscape&lt;/code&gt; 를 설정하는이 예제와 같이 더 복잡한 시퀀스를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7fa0f23c203d4e2690046ef0ad1397b18450241f" translate="yes" xml:space="preserve">
          <source>The directives contained in this module allow for manipulation and control of URLs as requests arrive at the server. The &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directives are used to map between URLs and filesystem paths. This allows for content which is not directly under the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; served as part of the web document tree. The &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive has the additional effect of marking the target directory as containing only CGI scripts.</source>
          <target state="translated">이 모듈에 포함 된 지시문을 사용하면 요청이 서버에 도착할 때 URL을 조작하고 제어 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; 지시어는 URL을 파일 시스템 경로로 매핑하는 데 사용됩니다. 이는 웹 문서 트리의 일부로 제공되는 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 바로 아래에없는 컨텐츠를 허용합니다 . &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; 지시어는 CGI 스크립트를 포함하는 등 대상 디렉토리를 표시하는 추가 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d7d39e3b2b802292577646f58c8a388f058527a" translate="yes" xml:space="preserve">
          <source>The directives discussed in this article will need to go either in your main server configuration file (typically in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section), or in per-directory configuration files (&lt;code&gt;.htaccess&lt;/code&gt; files).</source>
          <target state="translated">이 기사에서 논의한 지시문은 주 서버 구성 파일 (일반적으로 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션) 또는 디렉토리 별 구성 파일 ( &lt;code&gt;.htaccess&lt;/code&gt; 파일)로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7b45d8fbef18be1052a8bc967954bb5f5ecd606" translate="yes" xml:space="preserve">
          <source>The directives must be put in the &lt;code&gt;.htaccess&lt;/code&gt; files. Attempting to put them inside &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directives won't work. This is because &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; has to be able to grab the &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; directive that is found in FrontPage &lt;code&gt;.htaccess&lt;/code&gt; files so that it knows where to look for the valid user list. If the &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; directives aren't in the same &lt;code&gt;.htaccess&lt;/code&gt; file as the FrontPage directives, then the hack won't work, because &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will never get a chance to process the &lt;code&gt;.htaccess&lt;/code&gt; file, and won't be able to find the FrontPage-managed user file.</source>
          <target state="translated">지시문은 &lt;code&gt;.htaccess&lt;/code&gt; 파일에 넣어야 합니다. &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 지시문 에 넣으려고하면 작동하지 않습니다. 이는 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 가 유효한 사용자 목록을 찾을 위치를 알 수 있도록 FrontPage &lt;code&gt;.htaccess&lt;/code&gt; 파일 에 있는 &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; 지시문 을 가져올 수 있어야하기 때문 입니다. 는 IF &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 의 지시는 동일한에없는 &lt;code&gt;.htaccess&lt;/code&gt; 에서 FrontPage 지시로 파일, 다음 해킹하지 않습니다 작업 때문에 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 은 공정 할 수있는 기회 얻을하지 않습니다 &lt;code&gt;.htaccess&lt;/code&gt; 파일을, 그리고 FrontPage를 찾을 수 없습니다 관리되는 사용자 파일.</target>
        </trans-unit>
        <trans-unit id="2480f43631a2af78bda0830780d2d78c7302df7c" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; have been deprecated by &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;. Mixing old directives like &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; with new ones like &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; is technically possible but discouraged. The &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; module was created to support configurations containing only old directives to facilitate the 2.4 upgrade. Please check the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;upgrading&lt;/a&gt; guide for more information.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 가 제공 한 지시문 은 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; 에서 사용되지 않습니다 . &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 와 같은 오래된 지시문을 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; 와 같은 새로운 지시문과 혼합 하는 것은 기술적으로 가능하지만 권장하지 않습니다. &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 모듈 2.4 업그레이드를 용이하게하기 위해 전용 된 지침이 포함 된 지원 구성에 만들었습니다. 자세한 내용은 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;업그레이드&lt;/a&gt; 안내서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82c8f5d3749c77465c0f6236e3b459067632989c" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; are used in &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; sections as well as &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; files to control access to particular parts of the server. Access can be controlled based on the client hostname, IP address, or other characteristics of the client request, as captured in &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt;. The &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives are used to specify which clients are or are not allowed access to the server, while the &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directive sets the default access state, and configures how the &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives interact with each other.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 가 제공하는 지시문 은 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션과 &lt;code&gt;&lt;a href=&quot;core#accessfilename&quot;&gt;.htaccess&lt;/a&gt;&lt;/code&gt; 파일에서 사용되어 서버의 특정 부분에 대한 액세스를 제어합니다. &lt;a href=&quot;../env&quot;&gt;환경 변수&lt;/a&gt; 에서 캡처 된대로 클라이언트 호스트 이름, IP 주소 또는 클라이언트 요청의 기타 특성을 기반으로 액세스를 제어 할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시어는 동안, 또는 서버에 대한 액세스를 허용하지 않는 클라이언트를 지정하는 데 사용됩니다 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 지시어는 기본 액세스 상태를 설정하고 구성은 어떻게 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시문은 서로 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="701b884823a50f8a4b342e75468e7c140652bb0f" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; have been deprecated by &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;. Mixing old directives like &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; with new ones like &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; is technically possible but discouraged. This module was created to support configurations containing only old directives to facilitate the 2.4 upgrade. Please check the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;upgrading&lt;/a&gt; guide for more information.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 가 제공 한 지시문 은 &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; 에서 사용되지 않습니다 . &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 와 같은 오래된 지시문을 &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; 와 같은 새로운 지시문과 혼합 하는 것은 기술적으로 가능하지만 권장하지 않습니다. 이 모듈은 2.4 업그레이드를 용이하게하기 위해 이전 지시문 만 포함 된 구성을 지원하도록 작성되었습니다. 자세한 내용은 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/upgrading.html&quot;&gt;업그레이드&lt;/a&gt; 안내서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e0ecbb534e9959c4e43af80a38be3657e113855b" translate="yes" xml:space="preserve">
          <source>The directives provided by &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; can occur almost anywhere within the server configuration, and can be limited in scope by enclosing them in &lt;a href=&quot;../sections&quot;&gt;configuration sections&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; 가 제공하는 지시문 은 서버 구성의 거의 모든 곳에서 발생할 수 있으며 &lt;a href=&quot;../sections&quot;&gt;구성 섹션에 포함&lt;/a&gt; 하여 범위를 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36b792a603d5cb5ee6b088de0850fa134900f6bb" translate="yes" xml:space="preserve">
          <source>The directives that accept filenames as arguments must use NetWare filenames instead of Unix names. However, because Apache uses Unix-style names internally, forward slashes must be used rather than backslashes. It is recommended that all rooted file paths begin with a volume name. If omitted, Apache will assume the &lt;code&gt;SYS:&lt;/code&gt; volume which may not be correct.</source>
          <target state="translated">파일 이름을 인수로 허용하는 지시문은 Unix 이름 대신 NetWare 파일 이름을 사용해야합니다. 그러나 Apache는 내부적으로 Unix 스타일 이름을 사용하므로 백 슬래시 대신 슬래시를 사용해야합니다. 모든 루팅 된 파일 경로는 볼륨 이름으로 시작하는 것이 좋습니다. 생략하면, Apache는 &lt;code&gt;SYS:&lt;/code&gt; 볼륨을 올바르지 않은 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="73c68b68ad3475438ac7559624f7123c865d9391" translate="yes" xml:space="preserve">
          <source>The directives that accept filenames as arguments must use Windows filenames instead of Unix ones. However, because Apache may interpret backslashes as an &quot;escape character&quot; sequence, you should consistently use forward slashes in path names, not backslashes.</source>
          <target state="translated">파일 이름을 인수로 허용하는 지시문은 Unix 대신 Windows 파일 이름을 사용해야합니다. 그러나 Apache는 백 슬래시를 &quot;이스케이프 문자&quot;시퀀스로 해석 할 수 있으므로 백 슬래시가 아닌 경로 이름에 슬래시를 일관되게 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5fa124549483465f1587f841c2fed23092407de4" translate="yes" xml:space="preserve">
          <source>The directives within an &lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; section are only processed if the &lt;var&gt;test&lt;/var&gt; is true. If &lt;var&gt;test&lt;/var&gt; is false, everything between the start and end markers is ignored.</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfSection&amp;gt;&lt;/code&gt; 섹션 내의 지시문 은 &lt;var&gt;test&lt;/var&gt; 가 참인 경우에만 처리됩니다 . 경우 &lt;var&gt;test&lt;/var&gt; 거짓, 시작과 끝 마커 사이 모든 것이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b7bdfd5e9871fd71f3923defaf5b7b7d207c5e3e" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running.</source>
          <target state="translated">잠금 데이터베이스 파일을 포함하는 디렉토리 는 Apache가 실행중인 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 이 쓸 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f935eef1cce260221839f1678ce0b63d3ee0a05" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. For security reasons, you should create a directory for this purpose rather than changing the permissions on an existing directory. In the above example, Apache will create files in the &lt;code&gt;var/&lt;/code&gt; directory under the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; with the base filename &lt;code&gt;DavLock&lt;/code&gt; and an extension added by the server.</source>
          <target state="translated">잠금 데이터베이스 파일을 포함하는 디렉토리 는 Apache가 실행중인 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 이 쓸 수 있어야합니다 . 보안상의 이유로 기존 디렉토리에 대한 권한을 변경하지 않고이 목적으로 디렉토리를 작성해야합니다. 위의 예에서 Apache는 기본 파일 이름 &lt;code&gt;DavLock&lt;/code&gt; 과 서버에서 추가 한 확장자를 사용 하여 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 아래의 &lt;code&gt;var/&lt;/code&gt; 디렉토리에 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="118b6e61c114ab8754115835f37e2769bb1b5116" translate="yes" xml:space="preserve">
          <source>The directory containing the lock database file must be writable by the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. For security reasons, you should create a directory for this purpose rather than changing the permissions on an existing directory. In the above example, Apache will create files in the &lt;code&gt;var/&lt;/code&gt; directory under the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; with the base filename &lt;code&gt;DavLock&lt;/code&gt; and extension name chosen by the server.</source>
          <target state="translated">잠금 데이터베이스 파일을 포함하는 디렉토리 는 Apache가 실행중인 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 이 쓸 수 있어야합니다 . 보안상의 이유로 기존 디렉토리에 대한 권한을 변경하지 않고이 목적으로 디렉토리를 작성해야합니다. 위의 예에서 Apache는 &lt;code&gt;var/&lt;/code&gt; 디렉토리에 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 아래 의 기본 파일 이름 &lt;code&gt;DavLock&lt;/code&gt; 과 서버가 선택한 확장명으로 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="36fb83321ef6aef990ac3bd68f787f121a8846f6" translate="yes" xml:space="preserve">
          <source>The directory path where the rule is defined is stripped from the currently mapped filesystem path before comparison (up to and including a trailing slash). The net result of this per-directory prefix stripping is that rules in this context only match against the portion of the currently mapped filesystem path &quot;below&quot; where the rule is defined.</source>
          <target state="translated">규칙이 정의 된 디렉토리 경로는 비교 전에 (현재의 슬래시까지 포함하여) 현재 맵핑 된 파일 시스템 경로에서 제거됩니다. 이 디렉토리 별 접두어 제거의 결과는이 컨텍스트의 규칙이 규칙이 정의 된 &quot;아래&quot;현재 맵핑 된 파일 시스템 경로의 부분과 만 일치한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="82d107c99868b2aa7f351be29e410963d15a7f68" translate="yes" xml:space="preserve">
          <source>The directory root under which cache files are stored</source>
          <target state="translated">캐시 파일이 저장되는 디렉토리 루트</target>
        </trans-unit>
        <trans-unit id="cbb1442aee583624a17bda0ae67de1ea6bda2ab5" translate="yes" xml:space="preserve">
          <source>The directory sections occur in the &lt;code&gt;httpd.conf&lt;/code&gt; file. &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; directives cannot nest, and cannot appear in a &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">디렉토리 섹션은 &lt;code&gt;httpd.conf&lt;/code&gt; 파일 에서 발생 합니다. &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; 지시문은 중첩 할 수 없으며 &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션에 나타날 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="765f21ee5bdf65fc8218aa97f29b021d23b8425e" translate="yes" xml:space="preserve">
          <source>The document is parsed as an HTML document, with special commands embedded as SGML comments. A command has the syntax:</source>
          <target state="translated">문서는 SGML 주석으로 포함 된 특수 명령을 사용하여 HTML 문서로 구문 분석됩니다. 명령에는 다음과 같은 구문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b8e2c377c16ae471bd76f7bf407d07f007f0428" translate="yes" xml:space="preserve">
          <source>The document root of the host</source>
          <target state="translated">호스트의 문서 루트</target>
        </trans-unit>
        <trans-unit id="eff3653a94f248205f1b007f4472de5478704628" translate="yes" xml:space="preserve">
          <source>The documentation for the SDK claims to support both SSL and STARTTLS, however STARTTLS does not seem to work on all versions of the SDK. The SSL/TLS mode can be set using the LDAPTrustedMode parameter. If an ldaps:// URL is specified, SSL mode is forced. The OpenLDAP documentation notes that SSL (ldaps://) support has been deprecated to be replaced with TLS, although the SSL functionality still works.</source>
          <target state="translated">SDK 설명서는 SSL과 STARTTLS를 모두 지원한다고 주장하지만 STARTTLS는 모든 버전의 SDK에서 작동하지는 않습니다. SSL / TLS 모드는 LDAPTrustedMode 매개 변수를 사용하여 설정할 수 있습니다. ldaps : // URL을 지정하면 SSL 모드가 강제 실행됩니다. SSL 기능은 여전히 ​​작동하지만 OpenLDAP 설명서에 SSL (ldaps : //) 지원이 TLS로 대체되어 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1a5cadf1c2ef3c5a218bb1335e0c749b37129bf" translate="yes" xml:space="preserve">
          <source>The documents below have not been fully updated to take into account changes made in the 2.1 version of the Apache HTTP Server. Some of the information may still be relevant, but please use it with care.</source>
          <target state="translated">아래 문서는 2.1 버전의 Apache HTTP Server에서 변경된 사항을 고려하여 완전히 업데이트되지 않았습니다. 일부 정보는 여전히 관련이있을 수 있지만주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8f500d7af9fac861941287ba1c2924d3aa1720fb" translate="yes" xml:space="preserve">
          <source>The domain for which you want the cookie to be valid. This may be a hostname, such as &lt;code&gt;www.example.com&lt;/code&gt;, or it may be a domain, such as &lt;code&gt;.example.com&lt;/code&gt;. It must be at least two parts separated by a dot. That is, it may not be merely &lt;code&gt;.com&lt;/code&gt; or &lt;code&gt;.net&lt;/code&gt;. Cookies of that kind are forbidden by the cookie security model.</source>
          <target state="translated">쿠키를 유효하게하려는 도메인. &lt;code&gt;www.example.com&lt;/code&gt; 과 같은 호스트 이름 이거나 &lt;code&gt;.example.com&lt;/code&gt; 과 같은 도메인 일 수 있습니다 . 점으로 구분 된 두 부분 이상이어야합니다. 즉, 단순히 &lt;code&gt;.com&lt;/code&gt; 또는 &lt;code&gt;.net&lt;/code&gt; 이 아닐 수도 있습니다 . 이러한 종류의 쿠키는 쿠키 보안 모델에 의해 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="c08c816d72a4c6167f2712061219b9329127a1f2" translate="yes" xml:space="preserve">
          <source>The domain string &lt;strong&gt;must&lt;/strong&gt; begin with a dot, and &lt;strong&gt;must&lt;/strong&gt; include at least one embedded dot. That is, &lt;code&gt;.example.com&lt;/code&gt; is legal, but &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;.com&lt;/code&gt; are not.</source>
          <target state="translated">도메인 문자열 &lt;strong&gt;은&lt;/strong&gt; 점으로 시작 &lt;strong&gt;해야&lt;/strong&gt; 하며 하나 이상의 포함 된 점을 포함 &lt;strong&gt;해야합니다&lt;/strong&gt; . 즉, &lt;code&gt;.example.com&lt;/code&gt; 은 합법적이지만 &lt;code&gt;www.example.com&lt;/code&gt; 과 &lt;code&gt;.com&lt;/code&gt; 은 합법적 이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c60efc7c02b8eb06349d5f312dbd6ae402b21eb" translate="yes" xml:space="preserve">
          <source>The domain to which the tracking cookie applies</source>
          <target state="translated">추적 쿠키가 적용되는 도메인</target>
        </trans-unit>
        <trans-unit id="708b2ff197602576e334a5c0d0436a33aeedeef2" translate="yes" xml:space="preserve">
          <source>The echo Element</source>
          <target state="translated">에코 요소</target>
        </trans-unit>
        <trans-unit id="2579ab03b6f085572e95708c613faa12d9b02a0c" translate="yes" xml:space="preserve">
          <source>The effect of &lt;code&gt;MultiViews&lt;/code&gt; is as follows: if the server receives a request for &lt;code&gt;/some/dir/foo&lt;/code&gt;, if &lt;code&gt;/some/dir&lt;/code&gt; has &lt;code&gt;MultiViews&lt;/code&gt; enabled, and &lt;code&gt;/some/dir/foo&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; exist, then the server reads the directory looking for files named foo.*, and effectively fakes up a type map which names all those files, assigning them the same media types and content-encodings it would have if the client had asked for one of them by name. It then chooses the best match to the client's requirements.</source>
          <target state="translated">의 효과 &lt;code&gt;MultiViews&lt;/code&gt; 를은 으로 다음입니다 : 서버가 요청을 수신하는 경우 &lt;code&gt;/some/dir/foo&lt;/code&gt; , 경우 &lt;code&gt;/some/dir&lt;/code&gt; 한 &lt;code&gt;MultiViews&lt;/code&gt; 를가 가능하고, &lt;code&gt;/some/dir/foo&lt;/code&gt; 않습니다 &lt;em&gt;하지&lt;/em&gt; 존재, 서버가 찾는 디렉토리를 읽고 파일 이름은 foo. *이며 효과적으로 모든 파일의 이름을 지정하는 유형 맵을 가짜로 만들어서 클라이언트가 파일 이름 중 하나를 요청했을 때와 동일한 미디어 유형 및 내용 인코딩을 지정합니다. 그런 다음 고객의 요구 사항에 가장 적합한 것을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="e7d295ebcdbd8b94fe5c7f91b9a7475ce21d02b2" translate="yes" xml:space="preserve">
          <source>The elements of the handshake sequence, as used by the client and server, are listed below:</source>
          <target state="translated">클라이언트와 서버에서 사용하는 핸드 셰이크 시퀀스의 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1675d7367557763ce7b7830ce7ff59ec8a4c23f6" translate="yes" xml:space="preserve">
          <source>The encapsulation of SSL control protocols by the record protocol means that if an active session is renegotiated the control protocols will be transmitted securely. If there was no previous session, the Null cipher suite is used, which means there will be no encryption and messages will have no integrity digests, until the session has been established.</source>
          <target state="translated">레코드 프로토콜에 의한 SSL 제어 프로토콜의 캡슐화는 활성 세션이 재협상되면 제어 프로토콜이 안전하게 전송됨을 의미합니다. 이전 세션이없는 경우 Null 암호 스위트가 사용됩니다. 즉, 세션이 설정 될 때까지 암호화가없고 메시지에 무결성 요약이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4ed4e2f380fe2dbefc82a38bb811ccacf9529e92" translate="yes" xml:space="preserve">
          <source>The enclosed directives will be applied to the request if the path component of the URL meets &lt;em&gt;any&lt;/em&gt; of the following criteria:</source>
          <target state="translated">URL의 경로 구성 요소가 다음 기준 &lt;em&gt;중&lt;/em&gt; 하나를 충족 &lt;em&gt;하는&lt;/em&gt; 경우 동봉 된 지시문이 요청에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e652a899bbece92e4a631fa9c2f4690a2816464" translate="yes" xml:space="preserve">
          <source>The encoding of the file. Apache only recognizes encodings that are defined by an &lt;code&gt;&lt;a href=&quot;mod_mime#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; directive. This normally includes the encodings &lt;code&gt;x-compress&lt;/code&gt; for compress'd files, and &lt;code&gt;x-gzip&lt;/code&gt; for gzip'd files. The &lt;code&gt;x-&lt;/code&gt; prefix is ignored for encoding comparisons.</source>
          <target state="translated">파일의 인코딩 Apache는 &lt;code&gt;&lt;a href=&quot;mod_mime#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; 지시문으로 정의 된 인코딩 만 인식 합니다. 여기에는 일반적으로 압축 파일에 대한 &lt;code&gt;x-compress&lt;/code&gt; 인코딩 과 gzip 파일에 대한 &lt;code&gt;x-gzip&lt;/code&gt; 이 포함 됩니다. &lt;code&gt;x-&lt;/code&gt; 접두사 비교를 인코딩 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="98c3dd9af004c8cc3df7f180c9d516227b75d3d6" translate="yes" xml:space="preserve">
          <source>The encrypted password format depends on which authentication frontend (e.g. &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt;) is being used. See &lt;a href=&quot;../misc/password_encryptions&quot;&gt;Password Formats&lt;/a&gt; for more information.</source>
          <target state="translated">암호화 된 비밀번호 형식은 사용중인 인증 프론트 엔드 (예 : &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; ) 에 따라 다릅니다 . 자세한 내용은 &lt;a href=&quot;../misc/password_encryptions&quot;&gt;암호 형식&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="332d07b4960135bbcc51439bc69a5d6b6c32ae1a" translate="yes" xml:space="preserve">
          <source>The entity was fetched from the upstream server and was not served from cache.</source>
          <target state="translated">엔터티가 업스트림 서버에서 가져 왔으며 캐시에서 제공되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7902192ee5bf4f51a508650439e73e9bb50d9c0f" translate="yes" xml:space="preserve">
          <source>The entity was fresh, and was served from cache.</source>
          <target state="translated">엔터티는 신선하고 캐시에서 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="9259ed13b76bdb0273d4057f1aab8639efb6be5f" translate="yes" xml:space="preserve">
          <source>The entity was stale, was successfully revalidated and was served from cache.</source>
          <target state="translated">엔티티가 오래되었고, 재확인되었으며 캐시에서 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="4547550e4aa50307062d34932a847e84874e6ee9" translate="yes" xml:space="preserve">
          <source>The environment variables set for this request.</source>
          <target state="translated">이 요청에 설정된 환경 변수.</target>
        </trans-unit>
        <trans-unit id="38751550b99026c479058acabc37c0e67014e005" translate="yes" xml:space="preserve">
          <source>The error document page should contain a login form with an empty action property, as per the example below. This has the effect of submitting the form to the original protected URL, without the page having to know what that URL is.</source>
          <target state="translated">오류 문서 페이지에는 아래 예에 따라 빈 작업 속성이있는 로그인 양식이 포함되어야합니다. 이렇게하면 페이지가 해당 URL이 무엇인지 알 필요없이 양식을 원래의 보호 된 URL로 제출하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="adf66c658c9e099a2a48ac2c601832fb9da07c04" translate="yes" xml:space="preserve">
          <source>The error log id of the connection (see &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">연결의 오류 로그 ID ( &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="b78c4b54720aa0ddf6a945ea388c9ce35a7fc52d" translate="yes" xml:space="preserve">
          <source>The error log id of the request (see &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">요청의 오류 로그 ID ( &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="548f44848e466643474c05dd73966a5797fc4c0d" translate="yes" xml:space="preserve">
          <source>The error log is usually written to a file (typically &lt;code&gt;error_log&lt;/code&gt; on Unix systems and &lt;code&gt;error.log&lt;/code&gt; on Windows and OS/2). On Unix systems it is also possible to have the server send errors to &lt;code&gt;syslog&lt;/code&gt; or &lt;a href=&quot;#piped&quot;&gt;pipe them to a program&lt;/a&gt;.</source>
          <target state="translated">오류 로그는 일반적으로 파일 (일반적으로 Unix 시스템의 경우 &lt;code&gt;error_log&lt;/code&gt; , Windows 및 OS / 2의 경우 &lt;code&gt;error.log&lt;/code&gt; )에 기록됩니다. 유닉스 시스템에서는 서버가 에러를 &lt;code&gt;syslog&lt;/code&gt; 로 보내 거나 &lt;a href=&quot;#piped&quot;&gt;프로그램으로 파이프하는&lt;/a&gt; 것도 가능하다 .</target>
        </trans-unit>
        <trans-unit id="d129fe418069f71cd1cace39c17f7ab32d07ff1d" translate="yes" xml:space="preserve">
          <source>The error logs are your friend. Anything that goes wrong generates message in the error log. You should always look there first. If the place where you are hosting your web site does not permit you access to the error log, you should probably host your site somewhere else. Learn to read the error logs, and you'll find that almost all of your problems are quickly identified, and quickly solved.</source>
          <target state="translated">오류 로그는 당신의 친구입니다. 잘못되면 오류 로그에 메시지가 생성됩니다. 항상 먼저보아야합니다. 웹 사이트를 호스팅하는 장소에서 오류 로그에 액세스 할 수없는 경우 다른 사이트를 호스팅해야합니다. 오류 로그를 읽는 방법을 배우면 거의 모든 문제가 신속하게 식별되고 신속하게 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="0bde537d58abbeadc1a7af64fede6817ef0bd19c" translate="yes" xml:space="preserve">
          <source>The event MPM handles some connections in an asynchronous way, where request worker threads are only allocated for short periods of time as needed, and other connections with one request worker thread reserved per connection. This can lead to situations where all workers are tied up and no worker thread is available to handle new work on established async connections.</source>
          <target state="translated">MPM 이벤트는 일부 연결을 비동기 방식으로 처리합니다. 여기서 요청 작업자 스레드는 필요에 따라 단기간 동안 만 할당되고 연결 당 하나의 요청 작업자 스레드가 예약 된 다른 연결이 있습니다. 이로 인해 모든 작업자가 묶여 있고 설정된 비동기 연결에서 새 작업을 처리하는 데 사용할 수있는 작업자 스레드가없는 상황이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e56dd7b3214b718b487e23ff9b5c8affd1f134a2" translate="yes" xml:space="preserve">
          <source>The event model was made possible by the introduction of new APIs into the supported operating systems:</source>
          <target state="translated">지원되는 운영 체제에 새로운 API를 도입함으로써 이벤트 모델이 가능해졌습니다.</target>
        </trans-unit>
        <trans-unit id="c902bf9b614fe120a8e7f75712739785bd9c0cbe" translate="yes" xml:space="preserve">
          <source>The example below creates two different ldap authentication provider aliases based on the ldap provider. This allows a single authenticated location to be serviced by multiple ldap hosts:</source>
          <target state="translated">아래 예제는 ldap 제공자를 기반으로 두 개의 다른 ldap 인증 제공자 별명을 작성합니다. 이를 통해 여러 개의 ldap 호스트가 인증 된 단일 위치를 서비스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a21459035c31369ca3be0279e14dd6ec95491c9a" translate="yes" xml:space="preserve">
          <source>The example below creates two different ldap authorization provider aliases based on the ldap-group authorization provider. This example allows a single authorization location to check group membership within multiple ldap hosts:</source>
          <target state="translated">아래 예제는 ldap 그룹 권한 부여 제공자를 기반으로 두 개의 다른 ldap 권한 부여 제공자 별명을 작성합니다. 이 예에서는 단일 권한 부여 위치가 여러 ldap 호스트 내의 그룹 구성원을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03b852b9388d5eccfc2c3234bd4919bdaddb40c8" translate="yes" xml:space="preserve">
          <source>The example below expresses the following authorization logic. In order to access the resource, the user must either be the &lt;code&gt;superadmin&lt;/code&gt; user, or belong to both the &lt;code&gt;admins&lt;/code&gt; group and the &lt;code&gt;Administrators&lt;/code&gt; LDAP group and either belong to the &lt;code&gt;sales&lt;/code&gt; group or have the LDAP &lt;code&gt;dept&lt;/code&gt; attribute &lt;code&gt;sales&lt;/code&gt;. Furthermore, in order to access the resource, the user must not belong to either the &lt;code&gt;temps&lt;/code&gt; group or the LDAP group &lt;code&gt;Temporary Employees&lt;/code&gt;.</source>
          <target state="translated">아래 예는 다음과 같은 권한 부여 논리를 나타냅니다. 자원에 액세스하려면 사용자가 &lt;code&gt;superadmin&lt;/code&gt; 사용자이거나 &lt;code&gt;admins&lt;/code&gt; 그룹과 &lt;code&gt;Administrators&lt;/code&gt; LDAP 그룹 모두에 속해야하며 &lt;code&gt;sales&lt;/code&gt; 그룹에 속 하거나 LDAP &lt;code&gt;dept&lt;/code&gt; 속성 &lt;code&gt;sales&lt;/code&gt; 가 있어야합니다 . 또한 자원에 액세스하려면 사용자가 &lt;code&gt;temps&lt;/code&gt; 그룹 또는 LDAP 그룹 &lt;code&gt;Temporary Employees&lt;/code&gt; 에 속하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="e3cf01d539e252da09b865513aefab728040114f" translate="yes" xml:space="preserve">
          <source>The example below is combined with &quot;normal&quot; htpasswd-file based authentication and allows users in additionally as 'guests' with the following properties:</source>
          <target state="translated">아래 예는 &quot;일반&quot;htpasswd 파일 기반 인증과 결합되어 있으며 다음 속성을 가진 사용자로 '게스트'로 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84ab68254d1d2a52d8bf85f2723a4505c54b26b0" translate="yes" xml:space="preserve">
          <source>The example below shows how to acquire a database handle and return information from a table:</source>
          <target state="translated">아래 예제는 데이터베이스 핸들을 확보하고 테이블에서 정보를 리턴하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9385a193c99368e0caec5e14f405061084ed1929" translate="yes" xml:space="preserve">
          <source>The example given above, which also specifies a matching &lt;code&gt;&lt;a href=&quot;#ssiendtag&quot;&gt;SSIEndTag&lt;/a&gt;&lt;/code&gt;, will allow you to use SSI directives as shown in the example below:</source>
          <target state="translated">일치하는 &lt;code&gt;&lt;a href=&quot;#ssiendtag&quot;&gt;SSIEndTag&lt;/a&gt;&lt;/code&gt; 도 지정하는 위의 예제 를 사용하면 아래 예제와 같이 SSI 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dedbfc409676aceafed622aa7bb80cf5ea739fe" translate="yes" xml:space="preserve">
          <source>The example given here will rewrite any request to &lt;code&gt;index.php&lt;/code&gt;, giving the original request as a query string argument to &lt;code&gt;index.php&lt;/code&gt;, however, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; ensures that if the request is already for &lt;code&gt;index.php&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; will be skipped.</source>
          <target state="translated">여기에 주어진 예제는 &lt;code&gt;index.php&lt;/code&gt; 에 대한 요청을 다시 작성 하여 원래 요청을 &lt;code&gt;index.php&lt;/code&gt; 에 쿼리 문자열 인수로 제공 하지만 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; 는 요청이 이미 &lt;code&gt;index.php&lt;/code&gt; 에 대한 경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 을 건너 뛰도록합니다.</target>
        </trans-unit>
        <trans-unit id="5d1b18e86b0def724cdbff86a7333f6f7cc48a3d" translate="yes" xml:space="preserve">
          <source>The example given is crafted to be used in server or virtualhost scope. If you're planning to use this in a &lt;code&gt;.htaccess&lt;/code&gt; file, you'll need to remove the leading slash from the rewrite pattern in order for it to match anything:</source>
          <target state="translated">주어진 예제는 서버 또는 가상 호스트 범위에서 사용되도록 제작되었습니다. 이 파일을 &lt;code&gt;.htaccess&lt;/code&gt; 파일에서 사용하려면 다시 쓰기 패턴에서 선행 슬래시를 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="554347093a7e2ac68869e08f5dce384bf64df1bb" translate="yes" xml:space="preserve">
          <source>The example module is an actual working module. If you link it into your server, enable the &quot;example-hooks-handler&quot; handler for a location, and then browse to that location, you will see a display of some of the tracing the example module did as the various callbacks were made.</source>
          <target state="translated">예제 모듈은 실제 작업 모듈입니다. 서버에 링크하면 위치에 대해 &quot;example-hooks-handler&quot;핸들러를 활성화 한 다음 해당 위치를 탐색하면 다양한 콜백이 수행 된 것처럼 예제 모듈이 수행 한 일부 추적이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7f22bf6f641e0992432c45ff7e81238f2244acb3" translate="yes" xml:space="preserve">
          <source>The example request would come from &lt;code&gt;/usr/local/apache/vhosts/example.com/d/o/m/ain/directory/file.html&lt;/code&gt;.</source>
          <target state="translated">예제 요청은 &lt;code&gt;/usr/local/apache/vhosts/example.com/d/o/m/ain/directory/file.html&lt;/code&gt; 에서 온 것입니다 .</target>
        </trans-unit>
        <trans-unit id="330457936868b53ebf4b5338b6b66da1c3499f60" translate="yes" xml:space="preserve">
          <source>The example request would come from &lt;code&gt;/usr/local/apache/vhosts/example.com/n/i/a/domain/directory/file.html&lt;/code&gt;.</source>
          <target state="translated">요청 예는 &lt;code&gt;/usr/local/apache/vhosts/example.com/n/i/a/domain/directory/file.html&lt;/code&gt; 에서 온 것입니다 .</target>
        </trans-unit>
        <trans-unit id="1392c8da2d3d25f50b92f5174e0ee9857ad699b5" translate="yes" xml:space="preserve">
          <source>The example shown is from your default &lt;code&gt;httpd.conf&lt;/code&gt; configuration file, if you installed Apache in the default location. The &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive is much like the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive, which defines a URL prefix that is to mapped to a particular directory. &lt;code&gt;Alias&lt;/code&gt; and &lt;code&gt;ScriptAlias&lt;/code&gt; are usually used for directories that are outside of the &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directory. The difference between &lt;code&gt;Alias&lt;/code&gt; and &lt;code&gt;ScriptAlias&lt;/code&gt; is that &lt;code&gt;ScriptAlias&lt;/code&gt; has the added meaning that everything under that URL prefix will be considered a CGI program. So, the example above tells Apache that any request for a resource beginning with &lt;code&gt;/cgi-bin/&lt;/code&gt; should be served from the directory &lt;code&gt;/usr/local/apache2/cgi-bin/&lt;/code&gt;, and should be treated as a CGI program.</source>
          <target state="translated">표시된 위치는 기본 위치에 Apache를 설치 한 경우 기본 &lt;code&gt;httpd.conf&lt;/code&gt; 구성 파일 에서 가져온 것 입니다. &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; 지시어는 거의 같다 &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 지시어, 어떤 정의하는 URL 접두사가 특정 디렉토리에 매핑하는 것입니다. &lt;code&gt;Alias&lt;/code&gt; 및 &lt;code&gt;ScriptAlias&lt;/code&gt; 는 일반적으로 &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 디렉토리 외부에있는 디렉토리에 사용됩니다. 차이 &lt;code&gt;Alias&lt;/code&gt; 과 &lt;code&gt;ScriptAlias&lt;/code&gt; 점이다 &lt;code&gt;ScriptAlias&lt;/code&gt; 와는 는 A CGI 프로그램 간주됩니다 해당 URL 접두사에 따라 모든 것이 의미를 추가했다. 따라서 위의 예는 Apache에게 시작하는 리소스에 대한 모든 요청이 &lt;code&gt;/cgi-bin/&lt;/code&gt; 은 &lt;code&gt;/usr/local/apache2/cgi-bin/&lt;/code&gt; 디렉토리에서 제공 해야하며 CGI 프로그램으로 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9d5de4fafd9484d7eb41dad2c7eae30076b6ef2" translate="yes" xml:space="preserve">
          <source>The examples below are only a very basic idea to help you get started. Please read the documentation on the individual directives.</source>
          <target state="translated">아래 예제는 시작하는 데 도움이되는 매우 기본적인 아이디어 일뿐입니다. 개별 지침에 대한 설명서를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="446ba0823444c3f7de7bdc84f4cc0c431059da11" translate="yes" xml:space="preserve">
          <source>The examples below demonstrate how to configure HTTP/2 for backend connections for a reverse proxy.</source>
          <target state="translated">아래 예는 리버스 프록시의 백엔드 연결을 위해 HTTP / 2를 구성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c27f602a7b41ee92c47fec2920336f02c13b2630" translate="yes" xml:space="preserve">
          <source>The exec Element</source>
          <target state="translated">exec 요소</target>
        </trans-unit>
        <trans-unit id="ef238a3bf07c64a37b252489331b6a72b1dc9519" translate="yes" xml:space="preserve">
          <source>The expiry time can be fine-tuned by adding several '&lt;var&gt;num&lt;/var&gt;&lt;var&gt;type&lt;/var&gt;' clauses:</source>
          <target state="translated">몇 개의 ' &lt;var&gt;num&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; '절 을 추가하여 만료 시간을 미세 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f293622fa4fe21416c173e20a2b11951cb5e802e" translate="yes" xml:space="preserve">
          <source>The explicit types have no quality factor, so they default to a preference of 1.0 (the highest). The wildcard */* is given a low preference of 0.01, so other types will only be returned if no variant matches an explicitly listed type.</source>
          <target state="translated">명시 적 유형에는 품질 계수가 없으므로 기본 설정은 1.0 (가장 높음)입니다. 와일드 카드 * / *에는 0.01의 낮은 기본 설정이 제공되므로 명시 적으로 나열된 유형과 일치하는 변형이없는 경우에만 다른 유형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c124e00bea83e7c2cada641fbd72b723cdf7e044" translate="yes" xml:space="preserve">
          <source>The expression parser provides a number of variables of the form &lt;code&gt;%{HTTP_HOST}&lt;/code&gt;. Note that the value of a variable may depend on the phase of the request processing in which it is evaluated. For example, an expression used in an &lt;code&gt;&amp;lt;If &amp;gt;&lt;/code&gt; directive is evaluated before authentication is done. Therefore, &lt;code&gt;%{REMOTE_USER}&lt;/code&gt; will not be set in this case.</source>
          <target state="translated">표현식 구문 분석기는 &lt;code&gt;%{HTTP_HOST}&lt;/code&gt; 형식의 여러 변수를 제공합니다 . 변수의 값은 평가되는 요청 처리 단계에 따라 달라질 수 있습니다. 예를 들어 인증이 완료되기 전에 &lt;code&gt;&amp;lt;If &amp;gt;&lt;/code&gt; 지시문에 사용 된 표현식 이 평가됩니다. 따라서이 경우 &lt;code&gt;%{REMOTE_USER}&lt;/code&gt; 가 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50ac8787dcb552724f2db8b91c2b99d9ff33c1e4" translate="yes" xml:space="preserve">
          <source>The factor used to compute an expiry date based on the LastModified date.</source>
          <target state="translated">LastModified 날짜를 기준으로 만료 날짜를 계산하는 데 사용되는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6180b474e57965adbb8b571c65ff0907607596f2" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;/etc/apache2/productmap.txt&lt;/code&gt; then contains the following:</source>
          <target state="translated">그런 다음 &lt;code&gt;/etc/apache2/productmap.txt&lt;/code&gt; 파일 에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9ead42fcf2ee9757567c9aee8562d8df2b694396" translate="yes" xml:space="preserve">
          <source>The file contains lines in the following format:</source>
          <target state="translated">파일에는 다음 형식의 행이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6a733e7b8acf1f8d16b6505cee36ea17e388d4b4" translate="yes" xml:space="preserve">
          <source>The file contains lines in the format of the arguments to an &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">파일에는 &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; 지시문 에 대한 인수 형식의 행이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5966d6285339f181c9a0c88619b5c76d015f532" translate="yes" xml:space="preserve">
          <source>The file is constructed from a plain text file format using the &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; utility.</source>
          <target state="translated">파일은 &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; 유틸리티를 사용하여 일반 텍스트 파일 형식으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="47494a91a04a2be6894ff1b2ce4ba220bbe67996" translate="yes" xml:space="preserve">
          <source>The file name that the request maps to, f.x. /www/example.com/foo.txt. This can be changed in the translate-name or map-to-storage phases of a request to allow the default handler (or script handlers) to serve a different file than what was requested.</source>
          <target state="translated">요청이 매핑되는 파일 이름은 fx /www/example.com/foo.txt입니다. 요청의 변환 이름 또는 맵에서 스토리지로 단계에서 변경되어 기본 핸들러 (또는 스크립트 핸들러)가 요청 된 것과 다른 파일을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eaac7c1184a34a3487c15f919396e8da3ce4d30" translate="yes" xml:space="preserve">
          <source>The file path specified may be an absolute path, or may be relative to the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">지정된 파일 경로는 절대 경로이거나 &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 디렉토리에 상대적인 경로 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5047164e45cdf64b0945f3bd1ab5a88e39d97f1a" translate="yes" xml:space="preserve">
          <source>The file's i-node number will be included in the calculation</source>
          <target state="translated">파일의 i- 노드 번호가 계산에 포함됩니다</target>
        </trans-unit>
        <trans-unit id="43626d29683d32819cdca50a6774e50358a8793d" translate="yes" xml:space="preserve">
          <source>The filename (excluding directories) of the document requested by the user.</source>
          <target state="translated">사용자가 요청한 문서의 파일 이름 (디렉토리 제외).</target>
        </trans-unit>
        <trans-unit id="95ec4d991866b16747e3bb2049e13d416571070e" translate="yes" xml:space="preserve">
          <source>The filename of the DBM format file. Usually without the extension &lt;code&gt;.db&lt;/code&gt;, &lt;code&gt;.pag&lt;/code&gt;, or &lt;code&gt;.dir&lt;/code&gt;.</source>
          <target state="translated">DBM 형식 파일의 파일 이름입니다. 일반적으로 확장자가 &lt;code&gt;.db&lt;/code&gt; , &lt;code&gt;.pag&lt;/code&gt; 또는 &lt;code&gt;.dir&lt;/code&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c88f71cc0c4c462408054277d6f114a5f078402b" translate="yes" xml:space="preserve">
          <source>The filename of the DBM format file. Usually without the extension &lt;code&gt;.db&lt;/code&gt;, &lt;code&gt;.pag&lt;/code&gt;, or &lt;code&gt;.dir&lt;/code&gt;. If &lt;code&gt;-c&lt;/code&gt; is given, the DBM file is created if it does not already exist, or updated if it does exist.</source>
          <target state="translated">DBM 형식 파일의 파일 이름입니다. 일반적으로 확장자가 &lt;code&gt;.db&lt;/code&gt; , &lt;code&gt;.pag&lt;/code&gt; 또는 &lt;code&gt;.dir&lt;/code&gt; 이 없습니다 . 경우 &lt;code&gt;-c&lt;/code&gt; 이 주어진다 이미 존재하지 않는 경우 DBM 파일을 생성하거나 존재를 않는 경우 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="fe5b8aa7b8c10305cd35951e45318739870c71f3" translate="yes" xml:space="preserve">
          <source>The filename prefix of the socket to use for communication with the cgi daemon</source>
          <target state="translated">cgi 데몬과의 통신에 사용할 소켓의 파일 이름 접두사</target>
        </trans-unit>
        <trans-unit id="cadf20c508308ce10cfb4e1327ab640f97714c42" translate="yes" xml:space="preserve">
          <source>The files in the &lt;code&gt;modules/examples&lt;/code&gt; directory under the Apache distribution directory tree are provided as an example to those that wish to write modules that use the Apache API.</source>
          <target state="translated">Apache 배포 디렉토리 트리 아래 의 &lt;code&gt;modules/examples&lt;/code&gt; 디렉토리에있는 파일 은 Apache API를 사용하는 모듈을 작성하려는 파일에 대한 예제 로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0aac3c856b2670553ad178db632945b48051f2ec" translate="yes" xml:space="preserve">
          <source>The files in this directory have to be PEM-encoded and are accessed through hash filenames. So usually you can't just place the Certificate files there: you also have to create symbolic links named &lt;em&gt;hash-value&lt;/em&gt;&lt;code&gt;.N&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">이 디렉토리의 파일은 PEM으로 인코딩되어야하며 해시 파일 이름을 통해 액세스해야합니다. 따라서 일반적으로 인증서 파일을 여기에 배치 할 수 없습니다. 또한 &lt;em&gt;hash-value &lt;/em&gt; &lt;code&gt;.N&lt;/code&gt; 이라는 심볼릭 링크를 만들어야 합니다. 또한이 디렉토리에 적절한 기호 링크가 있는지 항상 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf87efe5f6a2fc3fba471cf2cc1a217803ea641a" translate="yes" xml:space="preserve">
          <source>The files in this directory have to be PEM-encoded and are accessed through hash filenames. So usually you have not only to place the CRL files there. Additionally you have to create symbolic links named &lt;em&gt;hash-value&lt;/em&gt;&lt;code&gt;.rN&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">이 디렉토리의 파일은 PEM으로 인코딩되어야하며 해시 파일 이름을 통해 액세스해야합니다. 따라서 일반적으로 CRL 파일을 배치 할 필요는 없습니다. 또한 &lt;em&gt;hash-value &lt;/em&gt; &lt;code&gt;.rN&lt;/code&gt; 이라는 심볼릭 링크를 만들어야 합니다. 또한이 디렉토리에 적절한 기호 링크가 있는지 항상 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5b24c8ab47a37726d2733534568af7f7d02e0c1" translate="yes" xml:space="preserve">
          <source>The files in this directory must be PEM-encoded and are accessed through hash filenames. Additionally, you must create symbolic links named &lt;code&gt;&lt;em&gt;hash-value&lt;/em&gt;.N&lt;/code&gt;. And you should always make sure this directory contains the appropriate symbolic links.</source>
          <target state="translated">이 디렉토리의 파일은 PEM으로 인코딩되어야하며 해시 파일 이름을 통해 액세스해야합니다. 또한 &lt;code&gt;&lt;em&gt;hash-value&lt;/em&gt;.N&lt;/code&gt; 이라는 기호 링크를 작성해야합니다 . 또한이 디렉토리에 적절한 기호 링크가 있는지 항상 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbd70c3be1f7b3e9d1de2ebd7672ed49dd46c786" translate="yes" xml:space="preserve">
          <source>The files may also include intermediate CA certificates, sorted from leaf to root. This is supported with version 2.4.8 and later, and obsoletes &lt;code&gt;&lt;a href=&quot;#sslcertificatechainfile&quot;&gt;SSLCertificateChainFile&lt;/a&gt;&lt;/code&gt;. When running with OpenSSL 1.0.2 or later, this allows to configure the intermediate CA chain on a per-certificate basis.</source>
          <target state="translated">파일에는 리프에서 루트로 정렬 된 중간 CA 인증서가 포함될 수도 있습니다. 이것은 버전 2.4.8 이상에서 지원되며 &lt;code&gt;&lt;a href=&quot;#sslcertificatechainfile&quot;&gt;SSLCertificateChainFile&lt;/a&gt;&lt;/code&gt; 을 사용하지 않습니다 . OpenSSL 1.0.2 이상으로 실행하면 인증서별로 중간 CA 체인을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2c5184b15e7869027df2b5aa39127db3e0b435e" translate="yes" xml:space="preserve">
          <source>The filter cannot work on byteranges and requires complete input</source>
          <target state="translated">필터는 바이트 범위에서 작동 할 수 없으며 완전한 입력이 필요합니다</target>
        </trans-unit>
        <trans-unit id="24429a17e1c77ce4894a9f8ce0255bd27a1ef0cc" translate="yes" xml:space="preserve">
          <source>The filter changes the content, but will not change the content length</source>
          <target state="translated">필터는 내용을 변경하지만 내용 길이는 변경하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e55d303826a4228da4391f744a83be4abb0b394c" translate="yes" xml:space="preserve">
          <source>The filter renders the output uncacheable (eg by introducing randomised content changes)</source>
          <target state="translated">필터는 출력을 캐시 할 수 없게합니다 (예 : 무작위 컨텐츠 변경을 도입하여)</target>
        </trans-unit>
        <trans-unit id="101c835d992113b0c73e1468184c406bedbe6d86" translate="yes" xml:space="preserve">
          <source>The filter should not run in a proxy context</source>
          <target state="translated">필터는 프록시 컨텍스트에서 실행되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="3e263e083bba97624c6b0babbc68f0f0a6ce32f9" translate="yes" xml:space="preserve">
          <source>The filter takes no parameters, and can be added to the filter stack using the &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; directive, or any of the directives supported by the &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">필터는 매개 변수를 사용하지 않으며 &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; 지시문 또는 &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; 모듈에서 지원하는 지시문을 사용하여 필터 스택에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1855cf5afe80bf22b3dff00861a7a6506638069" translate="yes" xml:space="preserve">
          <source>The filter transforms the response in a manner incompatible with the HTTP &lt;code&gt;Cache-Control: no-transform&lt;/code&gt; header.</source>
          <target state="translated">필터는 HTTP &lt;code&gt;Cache-Control: no-transform&lt;/code&gt; 헤더 와 호환되지 않는 방식으로 응답을 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c781bc4a7740f1c90532f1408b736abf2be7f54f" translate="yes" xml:space="preserve">
          <source>The final (optional) argument is the type of filter, and takes values of &lt;code&gt;ap_filter_type&lt;/code&gt; - namely &lt;code&gt;RESOURCE&lt;/code&gt; (the default), &lt;code&gt;CONTENT_SET&lt;/code&gt;, &lt;code&gt;PROTOCOL&lt;/code&gt;, &lt;code&gt;TRANSCODE&lt;/code&gt;, &lt;code&gt;CONNECTION&lt;/code&gt; or &lt;code&gt;NETWORK&lt;/code&gt;.</source>
          <target state="translated">마지막 (선택적) 인수는 필터 유형이며 &lt;code&gt;ap_filter_type&lt;/code&gt; 의 값, 즉 &lt;code&gt;RESOURCE&lt;/code&gt; (기본값), &lt;code&gt;CONTENT_SET&lt;/code&gt; , &lt;code&gt;PROTOCOL&lt;/code&gt; , &lt;code&gt;TRANSCODE&lt;/code&gt; , &lt;code&gt;CONNECTION&lt;/code&gt; 또는 &lt;code&gt;NETWORK&lt;/code&gt; 값을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3e4c3140f70cf7dde3f30824b0604cbd056effd0" translate="yes" xml:space="preserve">
          <source>The first 1 to 3 bytes of an IP address, for subnet restriction.</source>
          <target state="translated">서브넷 제한을위한 IP 주소의 첫 1 ~ 3 바이트.</target>
        </trans-unit>
        <trans-unit id="7ac972ce57fb2f5670c2bd9f6002db4fe390545d" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;Data&lt;/code&gt; packet is send immediately after the &lt;code&gt;Forward Request&lt;/code&gt; by the web server.</source>
          <target state="translated">첫 번째 &lt;code&gt;Data&lt;/code&gt; 패킷은 웹 서버 에서 &lt;code&gt;Forward Request&lt;/code&gt; 직후에 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="30f0b8a0dc7eab486eb48e1f35e8fe934f8f02d7" translate="yes" xml:space="preserve">
          <source>The first argument to this directive is always &lt;code&gt;from&lt;/code&gt;. The subsequent arguments can take three different forms. If &lt;code&gt;Allow from all&lt;/code&gt; is specified, then all hosts are allowed access, subject to the configuration of the &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directives as discussed below. To allow only particular hosts or groups of hosts to access the server, the &lt;em&gt;host&lt;/em&gt; can be specified in any of the following formats:</source>
          <target state="translated">이 지시문의 첫 번째 주장은 항상 &lt;code&gt;from&lt;/code&gt; 입니다. 후속 논증은 세 가지 다른 형태를 취할 수 있습니다. 경우 &lt;code&gt;Allow from all&lt;/code&gt; 의 구성에, 모든 호스트가 액세스 가능, 대상 지정 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 하고 &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; 지시를 아래에 설명한다. 특정 호스트 또는 호스트 그룹 만 서버에 액세스 할 수 있도록 &lt;em&gt;호스트&lt;/em&gt; 를 다음 형식 중 하나로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fc3086875477762bc3dc00cd14f470c5394e9a9" translate="yes" xml:space="preserve">
          <source>The first argument, which specifies the location to which the logs will be written, can take one of the following two types of values:</source>
          <target state="translated">로그를 작성할 위치를 지정하는 첫 번째 인수는 다음 두 가지 유형의 값 중 하나를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6157c08a86fbf50f075792ad4a81ee1c178d09cc" translate="yes" xml:space="preserve">
          <source>The first column value of the first row returned by the query statement should be a string containing a URL to which to redirect the client. Subsequent rows will be ignored. If no rows are returned, the client will not be redirected.</source>
          <target state="translated">query 문에서 반환 한 첫 번째 행의 첫 번째 열 값은 클라이언트를 리디렉션 할 URL이 포함 된 문자열이어야합니다. 후속 행은 무시됩니다. 행이 리턴되지 않으면 클라이언트가 경로 재 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d41bf8571ac14b078676654d3a32d2bd5997044f" translate="yes" xml:space="preserve">
          <source>The first column value of the first row returned by the query statement should be a string containing the encrypted password. Subsequent rows will be ignored. If no rows are returned, the user will not be authenticated through &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">쿼리 문에서 리턴 한 첫 번째 행의 첫 번째 열 값은 암호화 된 비밀번호를 포함하는 문자열이어야합니다. 후속 행은 무시됩니다. 행이 반환되지 않으면 &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; 를 통해 사용자가 인증되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="aec63ac2b6c8e76c613606bed4e6e99a9612d9da" translate="yes" xml:space="preserve">
          <source>The first example will list the number of attacks trying to exploit the &lt;a href=&quot;http://online.securityfocus.com/bid/4876/info/&quot;&gt;Apache Tomcat Source.JSP Malformed Request Information Disclosure Vulnerability&lt;/a&gt;, the second example will list the ten last denied clients, for example:</source>
          <target state="translated">첫 번째 예는 &lt;a href=&quot;http://online.securityfocus.com/bid/4876/info/&quot;&gt;Apache Tomcat Source.JSP 조작 된 요청 정보 유출 취약점&lt;/a&gt; 을 악용하려는 공격의 수를 나열하고 두 번째 예는 마지막으로 거부 된 10 개의 클라이언트를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="b7d1a374c6a9f0d209ecf22a05b0088b646197aa" translate="yes" xml:space="preserve">
          <source>The first item in the log entry is the date and time of the message. The next is the module producing the message (core, in this case) and the severity level of that message. This is followed by the process ID and, if appropriate, the thread ID, of the process that experienced the condition. Next, we have the client address that made the request. And finally is the detailed error message, which in this case indicates a request for a file that did not exist.</source>
          <target state="translated">로그 항목의 첫 번째 항목은 메시지의 날짜와 시간입니다. 다음은 메시지 (이 경우 코어)를 생성하는 모듈과 해당 메시지의 심각도 수준입니다. 그 다음에는 프로세스 ID 및 해당되는 경우 조건을 경험 한 프로세스의 스레드 ID가옵니다. 다음으로 요청한 클라이언트 주소가 있습니다. 마지막으로 자세한 오류 메시지이며,이 경우 존재하지 않는 파일에 대한 요청을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="68d54322f28d5bf48ee344f8b3df3f64b04ebb4e" translate="yes" xml:space="preserve">
          <source>The first line logs the forensic ID, the request line and all received headers, separated by pipe characters (&lt;code&gt;|&lt;/code&gt;). A sample line looks like the following (all on one line):</source>
          <target state="translated">첫 번째 행은 포렌식 ID, 요청 행 및 모든 수신 헤더를 파이프 문자 ( &lt;code&gt;|&lt;/code&gt; )로 구분하여 기록 합니다. 샘플 라인은 다음과 같습니다 (모두 한 라인에 있음).</target>
        </trans-unit>
        <trans-unit id="0e7b158bb06bec31c0763bf0238ec3ab1a1d0e3e" translate="yes" xml:space="preserve">
          <source>The first name-based vhost in the configuration file for a given IP:port pair is significant because it is used for all requests received on that address and port for which no other vhost for that IP:port pair has a matching ServerName or ServerAlias. It is also used for all SSL connections if the server does not support &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;Server Name Indication&lt;/a&gt;.</source>
          <target state="translated">지정된 IP : 포트 쌍에 대한 구성 파일의 첫 번째 이름 기반 가상 호스트는 해당 IP : 포트 쌍의 다른 호스트가 일치하는 ServerName 또는 ServerAlias를 갖지 않는 해당 주소와 포트에서 수신 된 모든 요청에 ​​사용되므로 중요합니다. 서버가 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;서버 이름 표시를&lt;/a&gt; 지원하지 않는 경우 모든 SSL 연결에도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9bfa2bd89fddb4c744d65cbd017c2d2ca1244cfa" translate="yes" xml:space="preserve">
          <source>The first noticeable thing after enabling HTTP/2 is that your server processes will start additional threads. The reason for this is that HTTP/2 gives all requests that it receives to its own &lt;em&gt;Worker&lt;/em&gt; threads for processing, collects the results and streams them out to the client.</source>
          <target state="translated">HTTP / 2를 활성화 한 후 가장 눈에 띄는 것은 서버 프로세스가 추가 스레드를 시작한다는 것입니다. 그 이유는 HTTP / 2가 처리 를 위해 자신의 &lt;em&gt;Worker&lt;/em&gt; 스레드에 수신하는 모든 요청을 제공 하고 결과를 수집하여 클라이언트로 스트리밍하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="97700adcba07e04c42d1811b65ca8be4e6d022cc" translate="yes" xml:space="preserve">
          <source>The first of these is performance. When &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; is set to allow the use of &lt;code&gt;.htaccess&lt;/code&gt; files, httpd will look in every directory for &lt;code&gt;.htaccess&lt;/code&gt; files. Thus, permitting &lt;code&gt;.htaccess&lt;/code&gt; files causes a performance hit, whether or not you actually even use them! Also, the &lt;code&gt;.htaccess&lt;/code&gt; file is loaded every time a document is requested.</source>
          <target state="translated">이들 중 첫 번째는 성능입니다. &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; 가 &lt;code&gt;.htaccess&lt;/code&gt; 파일 사용을 허용하도록 설정 되면 httpd는 모든 디렉토리에서 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 찾습니다. 따라서 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 허용 하면 실제로 사용하는지 여부에 관계없이 성능이 저하됩니다! 또한 &lt;code&gt;.htaccess&lt;/code&gt; 파일은 문서가 요청 될 때마다로드됩니다.</target>
        </trans-unit>
        <trans-unit id="029c302dcd80aa48676cf7367958eef7953d357e" translate="yes" xml:space="preserve">
          <source>The first option is the default, while options 2-4 are configured using the &lt;code&gt;ErrorDocument&lt;/code&gt; directive, which is followed by the HTTP response code and a URL or a message. Apache httpd will sometimes offer additional information regarding the problem/error.</source>
          <target state="translated">첫 번째 옵션이 기본값이고 옵션 2-4는 &lt;code&gt;ErrorDocument&lt;/code&gt; 지시문을 사용하여 구성 되며 그 뒤에 HTTP 응답 코드와 URL 또는 메시지가옵니다. Apache httpd는 때때로 문제 / 오류에 관한 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="94f8a67cd37eb2850e164ab3ac25b42320a7fa87" translate="yes" xml:space="preserve">
          <source>The first option, the &lt;code&gt;%{isapi-parameter}n&lt;/code&gt; component, is always available and preferred.</source>
          <target state="translated">첫 번째 옵션 인 &lt;code&gt;%{isapi-parameter}n&lt;/code&gt; 구성 요소는 항상 사용 가능하며 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="5a7a32288b269ab2b4c1ebd4bb299a239650b2bc" translate="yes" xml:space="preserve">
          <source>The first reason is that the SSL implementation in some MSIE versions has some subtle bugs related to the HTTP keep-alive facility and the SSL close notify alerts on socket connection close. Additionally the interaction between SSL and HTTP/1.1 features are problematic in some MSIE versions. You can work around these problems by forcing Apache not to use HTTP/1.1, keep-alive connections or send the SSL close notify messages to MSIE clients. This can be done by using the following directive in your SSL-aware virtual host section:</source>
          <target state="translated">첫 번째 이유는 일부 MSIE 버전의 SSL 구현에 HTTP 연결 유지 기능 및 소켓 연결 종료시 SSL 닫기 알림 경보와 관련된 미묘한 버그가 있기 때문입니다. 또한 일부 MSIE 버전에서는 SSL과 HTTP / 1.1 기능 간의 상호 작용에 문제가 있습니다. Apache가 HTTP / 1.1, 연결 유지 연결을 사용하지 않거나 SSL 닫기 알림 메시지를 MSIE 클라이언트에 보내지 않도록하여 이러한 문제점을 해결할 수 있습니다. SSL 인식 가상 호스트 섹션에서 다음 지시문을 사용하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9d0156a3901ae81dd8de5afd846c26f2356bac7" translate="yes" xml:space="preserve">
          <source>The first risk is the increased load on the server. All SSI-enabled files have to be parsed by Apache, whether or not there are any SSI directives included within the files. While this load increase is minor, in a shared server environment it can become significant.</source>
          <target state="translated">첫 번째 위험은 서버의로드 증가입니다. 파일에 SSI 지시문이 포함되어 있는지 여부에 관계없이 모든 SSI 가능 파일은 Apache에서 구문 분석해야합니다. 이로드 증가는 미미하지만 공유 서버 환경에서는 상당히 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6b73aaef2cbd2a43fded172bb07ca854c5c1ece" translate="yes" xml:space="preserve">
          <source>The first step in upgrading is to read the release announcement and the file &lt;code&gt;CHANGES&lt;/code&gt; in the source distribution to find any changes that may affect your site. When changing between major releases (for example, from 2.0 to 2.2 or from 2.2 to 2.4), there will likely be major differences in the compile-time and run-time configuration that will require manual adjustments. All modules will also need to be upgraded to accommodate changes in the module API.</source>
          <target state="translated">업그레이드의 첫 번째 단계 는 소스 배포에서 릴리스 알림 및 파일 &lt;code&gt;CHANGES&lt;/code&gt; 을 읽고 사이트에 영향을 줄 수있는 변경 사항을 찾는 것입니다. 주 릴리스간에 변경하는 경우 (예 : 2.0에서 2.2 또는 2.2에서 2.4로) 수동 조정이 필요한 컴파일 타임 및 런타임 구성에 큰 차이가있을 수 있습니다. 모듈 API의 변경 사항을 수용하려면 모든 모듈도 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="174fd266ae974fa3f20412a35787589c1b4fa011" translate="yes" xml:space="preserve">
          <source>The first step is to create a &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; block for each different host that you would like to serve. Inside each &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; block, you will need at minimum a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive to designate which host is served and a &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive to show where in the filesystem the content for that host lives.</source>
          <target state="translated">첫 번째 단계는 제공하려는 각기 다른 호스트에 대해 &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; 블록 을 만드는 것입니다. 각 &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; 블록 내에서 서비스 할 호스트를 지정하려면 최소한 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 지시문과 파일 시스템에서 해당 호스트의 내용이 어디에 있는지를 나타내는 &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 지시문이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cce3923408e3bdf8b23e6f53b7947dbc72be5092" translate="yes" xml:space="preserve">
          <source>The first step, Cipher Suite Negotiation, allows the client and server to choose a Cipher Suite supported by both of them. The SSL3.0 protocol specification defines 31 Cipher Suites. A Cipher Suite is defined by the following components:</source>
          <target state="translated">첫 번째 단계 인 Cipher Suite Negotiation은 클라이언트와 서버가 모두 지원하는 Cipher Suite를 선택할 수 있도록합니다. SSL3.0 프로토콜 사양은 31 Cipher Suites를 정의합니다. 암호 제품군은 다음 구성 요소로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5e4076db35bf5f9a353ed8c8a7fcbf4949d31113" translate="yes" xml:space="preserve">
          <source>The first thing that &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; does when it is invoked is to locate and read the &lt;a href=&quot;configuring&quot;&gt;configuration file&lt;/a&gt;&lt;code&gt;httpd.conf&lt;/code&gt;. The location of this file is set at compile-time, but it is possible to specify its location at run time using the &lt;code&gt;-f&lt;/code&gt; command-line option as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 가 호출 될 때 가장 먼저하는 일은 &lt;a href=&quot;configuring&quot;&gt;구성 파일 &lt;/a&gt; &lt;code&gt;httpd.conf&lt;/code&gt; 를 찾아 읽는 것 입니다. 이 파일의 위치는 컴파일 타임에 설정되지만 &lt;code&gt;-f&lt;/code&gt; 명령 줄 옵션을 사용하여 런타임에 해당 위치를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a3446f0974e5e98649916a2fa34c11e0c22e563c" translate="yes" xml:space="preserve">
          <source>The first thing you see written by your program should be a set of HTTP headers, including the &lt;code&gt;Content-Type&lt;/code&gt;, followed by a blank line. If you see anything else, Apache will return the &lt;code&gt;Premature end of script headers&lt;/code&gt; error if you try to run it through the server. See &lt;a href=&quot;#writing&quot;&gt;Writing a CGI program&lt;/a&gt; above for more details.</source>
          <target state="translated">프로그램에서 작성한 첫 번째 &lt;code&gt;Content-Type&lt;/code&gt; 은 Content-Type을 포함한 일련의 HTTP 헤더 다음에 빈 줄이 있어야합니다 . 다른 것이 있으면 서버를 통해 실행하려고하면 Apache &lt;code&gt;Premature end of script headers&lt;/code&gt; 의 조기 종료 오류를 반환합니다. 자세한 내용은 위 &lt;a href=&quot;#writing&quot;&gt;의 CGI 프로그램 작성&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c537a386088394bc14a860326ea0ea3976827ce8" translate="yes" xml:space="preserve">
          <source>The first three will set the environment variable &lt;code&gt;object_is_image&lt;/code&gt; if the request was for an image file, and the fourth sets &lt;code&gt;intra_site_referral&lt;/code&gt; if the referring page was somewhere on the &lt;code&gt;www.mydomain.example.com&lt;/code&gt; Web site.</source>
          <target state="translated">처음 세 개는 이미지 파일에 대한 요청 인 경우 환경 변수 &lt;code&gt;object_is_image&lt;/code&gt; 를 설정하고 네 번째 세트 는 &lt;code&gt;www.mydomain.example.com&lt;/code&gt; 웹 사이트 어딘가에 참조 페이지 인 경우 &lt;code&gt;intra_site_referral&lt;/code&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="7421920ec037506997ddec8865c41b16977011a0" translate="yes" xml:space="preserve">
          <source>The first time you're asked for a PEM pass-phrase, you should enter the old pass-phrase. After that, you'll be asked again to enter a pass-phrase - this time, use the new pass-phrase. If you are asked to verify the pass-phrase, you'll need to enter the new pass-phrase a second time.</source>
          <target state="translated">PEM 암호 문구를 처음으로 요청하면 이전 암호 문구를 입력해야합니다. 그런 다음 암호 문구를 다시 입력하라는 메시지가 표시됩니다. 이번에는 새 암호 문구를 사용하십시오. 암호 문구를 확인하라는 메시지가 표시되면 새 암호 문구를 다시 입력해야합니다.</target>
        </trans-unit>
        <trans-unit id="85bbf12629188ddd61e1a69ee6d5389210074dd2" translate="yes" xml:space="preserve">
          <source>The first tool to mention is of course &lt;a href=&quot;https://curl.haxx.se&quot;&gt;curl&lt;/a&gt;. Please make sure that your version supports HTTP/2 checking its &lt;code&gt;Features&lt;/code&gt;:</source>
          <target state="translated">가장 먼저 언급 할 도구는 &lt;a href=&quot;https://curl.haxx.se&quot;&gt;curl&lt;/a&gt; 입니다. 사용중인 버전이 &lt;code&gt;Features&lt;/code&gt; 검사하는 HTTP / 2를 지원하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="98c4bf8eb47329190bb02fe91ca655dcc4d37eb1" translate="yes" xml:space="preserve">
          <source>The first vhost in the config file with the specified IP address has the highest priority and catches any request to an unknown server name, or a request without a &lt;code&gt;Host:&lt;/code&gt; header field (such as a HTTP/1.0 request).</source>
          <target state="translated">지정된 IP 주소를 가진 구성 파일의 첫 번째 호스트는 우선 순위가 가장 높으며 알 수없는 서버 이름에 대한 요청 또는 &lt;code&gt;Host:&lt;/code&gt; 헤더 필드가 없는 요청 (예 : HTTP / 1.0 요청)을 포착합니다 .</target>
        </trans-unit>
        <trans-unit id="defee8cfbb291b8c87eed3b856a2929e51e55d36" translate="yes" xml:space="preserve">
          <source>The flastmod Element</source>
          <target state="translated">flastmod 요소</target>
        </trans-unit>
        <trans-unit id="4bf6219f21126a479dd87d1fd5585ee39b3df2e1" translate="yes" xml:space="preserve">
          <source>The following &lt;em&gt;source&lt;/em&gt; variants are available:</source>
          <target state="translated">다음과 같은 &lt;em&gt;소스&lt;/em&gt; 변형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ebb4210ccb9ea52ca885e5f164cb82d28adce37" translate="yes" xml:space="preserve">
          <source>The following alternative syntax is possible; however, it can carry a performance penalty when present in very large numbers. The advantage of the below syntax is that it allows for dynamic control via the &lt;a href=&quot;mod_proxy_balancer#balancer_manager&quot;&gt;Balancer Manager&lt;/a&gt; interface:</source>
          <target state="translated">다음과 같은 대안 구문이 가능합니다. 그러나 매우 많은 수의 경우 성능이 저하 될 수 있습니다. 아래 구문의 장점은 &lt;a href=&quot;mod_proxy_balancer#balancer_manager&quot;&gt;Balancer Manager&lt;/a&gt; 인터페이스 를 통한 동적 제어가 가능하다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="125892547d9e1f1a97e359fb0562091a5e9215b1" translate="yes" xml:space="preserve">
          <source>The following are potential features which are not currently implemented:</source>
          <target state="translated">현재 구현되지 않은 잠재적 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="513cb1d786d7d9a601e630075e820defd03d59db" translate="yes" xml:space="preserve">
          <source>The following are the minimal building blocks you will need, in order to write regular expressions and &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;s. They certainly do not represent a complete regular expression vocabulary, but they are a good place to start, and should help you read basic regular expressions, as well as write your own.</source>
          <target state="translated">다음은 정규식과 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 을 작성하는 데 필요한 최소 구성 요소 입니다. 그것들은 확실히 완전한 정규 표현 어휘를 나타내지는 않지만, 시작하기에 좋은 곳이며, 기본적인 정규 표현식을 읽고 자신의 글을 쓰도록 도와야합니다.</target>
        </trans-unit>
        <trans-unit id="5db817bcf383ba7b1632947d3d07ce78160d42c8" translate="yes" xml:space="preserve">
          <source>The following arguments are available only on the &lt;a href=&quot;../platform/windows&quot;&gt;Windows platform&lt;/a&gt;:</source>
          <target state="translated">다음 인수는 &lt;a href=&quot;../platform/windows&quot;&gt;Windows 플랫폼&lt;/a&gt; 에서만 사용 가능 합니다 .</target>
        </trans-unit>
        <trans-unit id="726d2115205ddfff92f646f82f0140ea5b6f6c97" translate="yes" xml:space="preserve">
          <source>The following asymmetric configuration works as one would expect:</source>
          <target state="translated">다음과 같은 비대칭 구성이 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="07446e59eb635bfa9518391149f9eb0bc0737890" translate="yes" xml:space="preserve">
          <source>The following authz provider function takes two arguments, one ip address and one user name. It will allow access from the given ip address without authentication, or if the authenticated user matches the second argument:</source>
          <target state="translated">다음 authz 제공자 함수는 하나의 IP 주소와 하나의 사용자 이름의 두 가지 인수를 사용합니다. 인증없이 주어진 IP 주소에서 또는 인증 된 사용자가 두 번째 인수와 일치하는 경우 액세스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="ed493f233dae242ff808b59efb48eb407811497b" translate="yes" xml:space="preserve">
          <source>The following combinations for &lt;em&gt;MapType&lt;/em&gt; and &lt;em&gt;MapSource&lt;/em&gt; can be used:</source>
          <target state="translated">&lt;em&gt;MapType&lt;/em&gt; 및 &lt;em&gt;MapSource에&lt;/em&gt; 대해 다음 조합을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc8a3b6fe926010e0d55eb36519849a9a5f7d6ba" translate="yes" xml:space="preserve">
          <source>The following configuration registers this function as provider &lt;code&gt;foo&lt;/code&gt; and configures it for URL &lt;code&gt;/&lt;/code&gt;:</source>
          <target state="translated">다음 구성은이 기능을 제공자 &lt;code&gt;foo&lt;/code&gt; 로 등록 하고 URL &lt;code&gt;/&lt;/code&gt; 에 대해 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="77c6aa3a0bd162cebfa46aecf9d3a67ca12dbc01" translate="yes" xml:space="preserve">
          <source>The following development tools are required to build Apache 2.0 for NetWare:</source>
          <target state="translated">NetWare 용 Apache 2.0을 빌드하려면 다음 개발 도구가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="db57499bb1048dcbef69acac28d3e2a16750f9d2" translate="yes" xml:space="preserve">
          <source>The following directive must be given for the directories containing the shtml files (typically in a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section, but this directive is also valid in &lt;code&gt;.htaccess&lt;/code&gt; files if &lt;code&gt;&lt;a href=&quot;core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Options&lt;/code&gt; is set):</source>
          <target state="translated">shtml 파일을 포함하는 디렉토리에 대해 다음 지시문을 제공해야합니다 (일반적으로 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션에 있지만이 지시문은 &lt;code&gt;&lt;a href=&quot;core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Options&lt;/code&gt; 이 설정된 경우 &lt;code&gt;.htaccess&lt;/code&gt; 파일 에서도 유효 함 ).</target>
        </trans-unit>
        <trans-unit id="d7dbbd072909d8992f4e3577ed393591a7dc1581" translate="yes" xml:space="preserve">
          <source>The following directive will activate files ending with &lt;code&gt;.map&lt;/code&gt; as imagemap files:</source>
          <target state="translated">다음 지시문은 &lt;code&gt;.map&lt;/code&gt; 으로 끝나는 파일을 이미지 맵 파일로 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="4406af64a2b45d500406e18c0afd6e2d6b245cd9" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to a specific DN:</source>
          <target state="translated">다음 지시문은 특정 DN에 대한 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="f2b43fff348f8eb248434ef2d9228b63ae021737" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone having a cell phone and is in the marketing department</source>
          <target state="translated">다음 지시문은 휴대 전화를 가지고 있고 마케팅 부서에있는 모든 사람에게 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="b90eedea2e5cc54f9702ae2f964290e3c7edcb0c" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone with the attribute employeeType = active</source>
          <target state="translated">다음 지시문은 employeeType = active 속성을 가진 사람에게 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="6d7a9a36086207e35d587ab2f30426642297e166" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to anyone with the city attribute equal to &quot;San Jose&quot; or status equal to &quot;Active&quot;</source>
          <target state="translated">다음 지시문은 city 속성이 &quot;San Jose&quot;또는 상태가 &quot;Active&quot;인 모든 사용자에게 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="042027bd558ecdd08ced5b3adf02c5dd2a6cff7a" translate="yes" xml:space="preserve">
          <source>The following directive would grant access to both Fred and Barbara:</source>
          <target state="translated">다음 지시문은 Fred와 Barbara 모두에게 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="adf1d28c9a3ec86276742cfd3a24cd2d292d2737" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride AuthConfig&lt;/code&gt; is in effect. They give .htaccess users control over the authentication and authorization methods that are applied to their directory subtrees, including several related utility directives for session handling and TLS settings.</source>
          <target state="translated">&lt;code&gt;AllowOverride AuthConfig&lt;/code&gt; 가 유효한 경우 .htaccess 파일에서 다음 지시문이 허용됩니다 . .htaccess 사용자는 세션 처리 및 TLS 설정을위한 여러 관련 유틸리티 지시문을 포함하여 디렉토리 하위 트리에 적용되는 인증 및 권한 부여 방법을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7140417e5279809f9cd94b2e2eb7663dad4d30e6" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride FileInfo&lt;/code&gt; is in effect. They give .htaccess users a wide range of control over the responses and metadata given by the server.</source>
          <target state="translated">&lt;code&gt;AllowOverride FileInfo&lt;/code&gt; 가 유효한 경우 .htaccess 파일에 다음 지시문이 허용됩니다 . .htaccess 사용자는 서버가 제공하는 응답 및 메타 데이터를 광범위하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edeabc0e823b54abc2b6fff0b58597cb371c1a1a" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Indexes&lt;/code&gt; is in effect. They allow .htaccess users to control aspects of the directory index pages provided by the server, including autoindex generation.</source>
          <target state="translated">&lt;code&gt;AllowOverride Indexes&lt;/code&gt; 가 적용되는 경우 .htaccess 파일에서 다음 지시문이 허용됩니다 . .htaccess 사용자는 자동 색인 생성을 포함하여 서버가 제공하는 디렉토리 색인 페이지의 측면을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9554136127854e93ef63d2854d02d8731e1e9eb6" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Limit&lt;/code&gt; is in effect. This extremely narrow override type mostly allows the use of the legacy authorization directives provided by &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AllowOverride Limit&lt;/code&gt; 가 적용 되면 .htaccess 파일에서 다음 지시문이 허용됩니다 . 이 매우 좁은 대체 유형은 대부분 &lt;code&gt;&lt;a href=&quot;mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 가 제공하는 레거시 권한 부여 지시문을 사용할 수있게합니다 .</target>
        </trans-unit>
        <trans-unit id="e113b96d25ff7512bf58282d77358d8358448a2f" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in .htaccess files when &lt;code&gt;AllowOverride Options&lt;/code&gt; is in effect. They give .htaccess users access to &lt;code&gt;Options&lt;/code&gt; and similar directives, as well as directives that control the filter chain.</source>
          <target state="translated">&lt;code&gt;AllowOverride Options&lt;/code&gt; 이 유효한 경우 .htaccess 파일에서 다음 지시문이 허용됩니다 . .htaccess 사용자 는 필터 체인을 제어하는 ​​지시문뿐만 아니라 &lt;code&gt;Options&lt;/code&gt; 및 유사한 지시문에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9db760b0253bf0fb54c2dfaa46490159914264db" translate="yes" xml:space="preserve">
          <source>The following directives are allowed in any .htaccess file, as long as overrides are enabled in the server configuration.</source>
          <target state="translated">서버 구성에서 재정의를 사용하는 한 .htaccess 파일에서 다음 지시문이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ed8a1798466c82f879d348adb19370c08e3cb72" translate="yes" xml:space="preserve">
          <source>The following directives are used during the search/bind phase</source>
          <target state="translated">검색 / 바인드 단계 중에 다음 지시문이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4424dd417d314ba04529a8553907df155fce5761" translate="yes" xml:space="preserve">
          <source>The following directives will cause requests for files with the &lt;code&gt;html&lt;/code&gt; extension to trigger the launch of the &lt;code&gt;footer.pl&lt;/code&gt; CGI script.</source>
          <target state="translated">다음 지시문은 &lt;code&gt;html&lt;/code&gt; 확장자를 가진 파일에 대한 요청으로 &lt;code&gt;footer.pl&lt;/code&gt; CGI 스크립트 의 실행을 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="ddbec702687e0e14ba2126702bd2c74dc2377800" translate="yes" xml:space="preserve">
          <source>The following directives will enable the &lt;code&gt;send-as-is&lt;/code&gt; handler, which is used for files which contain their own HTTP headers. All files in the &lt;code&gt;/web/htdocs/asis/&lt;/code&gt; directory will be processed by the &lt;code&gt;send-as-is&lt;/code&gt; handler, regardless of their filename extensions.</source>
          <target state="translated">다음 지시문은 자체 HTTP 헤더를 포함하는 파일에 사용되는 &lt;code&gt;send-as-is&lt;/code&gt; 처리기 를 활성화합니다 . &lt;code&gt;/web/htdocs/asis/&lt;/code&gt; 디렉토리의 모든 파일은 파일 이름 확장자에 관계없이 &lt;code&gt;send-as-is&lt;/code&gt; 핸들러에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bec93683c3565f3b25b04800ec2a50ac937ca3c" translate="yes" xml:space="preserve">
          <source>The following directives will send redirects to the client:</source>
          <target state="translated">다음 지시문은 클라이언트로 리디렉션을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1d4c99bfa0ac86758e56268001df64eb4b8ff162" translate="yes" xml:space="preserve">
          <source>The following directives would allow access for Bob Ellis, Tom Jackson, Barbara Jenson, Fred User, Allan Jefferson, and Paul Tilley but would not allow access for Jim Swenson, or Elliot Rhodes (since they are at a sub-group depth of 2):</source>
          <target state="translated">다음 지시문은 Bob Ellis, Tom Jackson, Barbara Jenson, Fred User, Allan Jefferson 및 Paul Tilley에 대한 액세스는 허용하지만 Jim Swenson 또는 Elliot Rhodes에 대한 액세스는 허용하지 않습니다 (2 개의 하위 그룹 깊이에 있으므로). :</target>
        </trans-unit>
        <trans-unit id="013645ff7e3343a02ddf3c2b114662d4bbe80b92" translate="yes" xml:space="preserve">
          <source>The following enables only the strongest ciphers:</source>
          <target state="translated">다음은 가장 강력한 암호 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="42994768ff17511f9ccd549fecda95f59da378c7" translate="yes" xml:space="preserve">
          <source>The following example allows a front-end machine to proxy a virtual host through to a server running on another machine. In the example, a virtual host of the same name is configured on a machine at &lt;code&gt;192.168.111.2&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypreservehost&quot;&gt;ProxyPreserveHost On&lt;/a&gt;&lt;/code&gt; directive is used so that the desired hostname is passed through, in case we are proxying multiple hostnames to a single machine.</source>
          <target state="translated">다음 예제에서는 프런트 엔드 시스템이 다른 시스템에서 실행중인 서버를 통해 가상 호스트를 프록시 할 수 있습니다. 이 예에서 동일한 이름의 가상 호스트는 &lt;code&gt;192.168.111.2&lt;/code&gt; 의 머신에 구성됩니다 . &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypreservehost&quot;&gt;ProxyPreserveHost On&lt;/a&gt;&lt;/code&gt; 원하는 호스트 이름이 통과 될 수 있도록 지침이 경우에 우리는 단일 시스템에 여러 호스트 이름을 프록시를 사용하다.</target>
        </trans-unit>
        <trans-unit id="18bd0fe55eb29cb029dbc20ab5a44248327b3d0c" translate="yes" xml:space="preserve">
          <source>The following example grants access if the user is authenticated either with a client certificate or by username and password.</source>
          <target state="translated">다음 예는 사용자가 클라이언트 인증서 또는 사용자 이름 및 비밀번호로 인증 된 경우 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="5c10e5f4f2b54b3b5138e95bf49a07364db0f12d" translate="yes" xml:space="preserve">
          <source>The following example passes the request URI as a filesystem path for the PHP-FPM daemon to run. In this case, PHP-FPM is listening on a unix domain socket (UDS). Requires 2.4.9 or later. With this syntax, the hostname and optional port following fcgi:// are ignored.</source>
          <target state="translated">다음 예제는 요청 URI를 PHP-FPM 데몬이 실행할 파일 시스템 경로로 전달합니다. 이 경우 PHP-FPM은 유닉스 도메인 소켓 (UDS)에서 수신 대기합니다. 2.4.9 이상이 필요합니다. 이 구문을 사용하면 fcgi : // 다음에 오는 호스트 이름 및 선택적 포트는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bc71fac899d725e96aa6d4e6047eb8ef0a8e4fa3" translate="yes" xml:space="preserve">
          <source>The following example passes the request URI as a filesystem path for the PHP-FPM daemon to run. The request URL is implicitly added to the 2nd parameter. The hostname and port following fcgi:// are where PHP-FPM is listening. Connection pooling/reuse is enabled.</source>
          <target state="translated">다음 예제는 요청 URI를 PHP-FPM 데몬이 실행할 파일 시스템 경로로 전달합니다. 요청 URL은 두 번째 매개 변수에 내재적으로 추가됩니다. fcgi : // 다음에 오는 호스트 이름과 포트는 PHP-FPM이 수신하는 곳입니다. 연결 풀링 / 재사용이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="e0526be1decb7766bad445fc5b7f03fea745b689" translate="yes" xml:space="preserve">
          <source>The following example sets an environment variable called 'image' to a value of '1' if the requested URI is an image file. Then, that environment variable is used to exclude those requests from the access log.</source>
          <target state="translated">다음 예제는 요청 된 URI가 이미지 파일 인 경우 'image'라는 환경 변수를 '1'값으로 설정합니다. 그런 다음 해당 환경 변수를 사용하여 해당 요청을 액세스 로그에서 제외합니다.</target>
        </trans-unit>
        <trans-unit id="2c8b30790665e5cb761744f31d05b57dbe8c4a91" translate="yes" xml:space="preserve">
          <source>The following example sets the seconds to zero, effectively disabling any cool down. Warmed up TLS connections stay on maximum record size.</source>
          <target state="translated">다음 예는 초를 0으로 설정하여 효과적으로 냉각을 비활성화합니다. 예열 된 TLS 연결은 최대 레코드 크기를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="74196874eaacf0eedd0915956e7b69aa7c0d53fa" translate="yes" xml:space="preserve">
          <source>The following example sets the size to zero, effectively disabling any warmup phase.</source>
          <target state="translated">다음 예는 크기를 0으로 설정하여 워밍업 단계를 효과적으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="98d97a4105fd6e0c7e97f01ef90b3b5a9c0eb37e" translate="yes" xml:space="preserve">
          <source>The following example shows how one might configured health checking for various backend servers:</source>
          <target state="translated">다음 예제는 다양한 백엔드 서버에 대한 상태 점검을 구성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="60ebca75da8c56715c554ec84b522a2549d8773f" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;DEFLATE&lt;/code&gt; filter, which is provided by &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt;. It will compress all output (either static or dynamic) which is labeled as &lt;code&gt;text/html&lt;/code&gt; or &lt;code&gt;text/plain&lt;/code&gt; before it is sent to the client.</source>
          <target state="translated">다음 예제는 &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; 가 제공 하는 &lt;code&gt;DEFLATE&lt;/code&gt; 필터 를 사용합니다 . 클라이언트로 보내기 전에 &lt;code&gt;text/html&lt;/code&gt; 또는 &lt;code&gt;text/plain&lt;/code&gt; 으로 레이블이 지정된 모든 출력 (정적 또는 동적)을 압축합니다 .</target>
        </trans-unit>
        <trans-unit id="e67ea1e8e8886710e49766603e1cc3d5c61e8873" translate="yes" xml:space="preserve">
          <source>The following example will allow GET, HEAD, POST, and OPTIONS requests without authentication, and require a valid user for all other methods:</source>
          <target state="translated">다음 예는 인증없이 GET, HEAD, POST 및 OPTIONS 요청을 허용하며 다른 모든 방법에 대해 유효한 사용자가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b51148723c9afbe1d984d7476b03ae4ee7492927" translate="yes" xml:space="preserve">
          <source>The following example will only allow GET, HEAD, POST, and OPTIONS requests:</source>
          <target state="translated">다음 예제는 GET, HEAD, POST 및 OPTIONS 요청 만 허용합니다.</target>
        </trans-unit>
        <trans-unit id="106f42678d875b0d90efec3375c67f27a81ca9a3" translate="yes" xml:space="preserve">
          <source>The following example will process all files in the &lt;code&gt;foo&lt;/code&gt; directory of &lt;code&gt;example.com&lt;/code&gt; through the &lt;code&gt;INCLUDES&lt;/code&gt; filter when they are sent through the proxy server:</source>
          <target state="translated">다음 예제는 모든 파일을 처리 할 &lt;code&gt;foo&lt;/code&gt; 의 디렉토리 &lt;code&gt;example.com&lt;/code&gt; 을 관통 &lt;code&gt;INCLUDES&lt;/code&gt; 그들이 프록시 서버를 통해 전송되는 필터 :</target>
        </trans-unit>
        <trans-unit id="549e7dbf2128008ce03069f45eedd1e58d693cbe" translate="yes" xml:space="preserve">
          <source>The following examples show how expressions might be used to evaluate requests:</source>
          <target state="translated">다음 예제는 표현식을 사용하여 요청을 평가하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5b4bd80624f35901b643afc11fbd55ae4264d714" translate="yes" xml:space="preserve">
          <source>The following five storage &lt;em&gt;type&lt;/em&gt;s are currently supported:</source>
          <target state="translated">현재 다음 다섯 가지 스토리지 &lt;em&gt;유형&lt;/em&gt; 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4d2b4c46e4edc1869896e09c0a352be5a83f53da" translate="yes" xml:space="preserve">
          <source>The following format specifiers are supported in &lt;var&gt;value&lt;/var&gt;:</source>
          <target state="translated">다음 형식 지정자가 &lt;var&gt;value&lt;/var&gt; 으로 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8e5fc07d45c58acc51e8ff9820b0ce73900a942" translate="yes" xml:space="preserve">
          <source>The following information resources are available. In case of problems you should search here first.</source>
          <target state="translated">다음과 같은 정보 리소스가 제공됩니다. 문제가있는 경우 먼저 여기를 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="adb3c8713f2dea15d9978ccc485c47fd4ea3db58" translate="yes" xml:space="preserve">
          <source>The following is an example CGI program that prints one line to your browser. Type in the following, save it to a file called &lt;code&gt;first.pl&lt;/code&gt;, and put it in your &lt;code&gt;cgi-bin&lt;/code&gt; directory.</source>
          <target state="translated">다음은 브라우저에 한 줄을 인쇄하는 CGI 프로그램의 예입니다. 라는 파일에 저장, 다음에 입력 &lt;code&gt;first.pl&lt;/code&gt; , 당신에 넣어 &lt;code&gt;cgi-bin&lt;/code&gt; 디렉토리.</target>
        </trans-unit>
        <trans-unit id="d8422804deb740c9182855ed9c2a51f3faac2497" translate="yes" xml:space="preserve">
          <source>The following is an example configuration that uses &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; to increase the performance of HTTP Basic authentication provided by &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; 을 사용 하여 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 에서 제공하는 HTTP 기본 인증의 성능을 높이는 구성 예제 입니다.</target>
        </trans-unit>
        <trans-unit id="90b80095645f5f25384dad57e34dbbb1ae17b819" translate="yes" xml:space="preserve">
          <source>The following levels are available for &lt;em&gt;level&lt;/em&gt;:</source>
          <target state="translated">다음 수준에 사용할 수있는 &lt;em&gt;수준&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f359aca2578bc8e75290c707d006e1ae65020f4a" translate="yes" xml:space="preserve">
          <source>The following links document ISO and other language and country code information:</source>
          <target state="translated">다음 링크는 ISO 및 기타 언어 및 국가 코드 정보를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8f45d965e388f5f0bbaea1338fb4083e93188da2" translate="yes" xml:space="preserve">
          <source>The following list describes the values returned by &lt;code&gt;ab&lt;/code&gt;:</source>
          <target state="translated">다음 목록은 &lt;code&gt;ab&lt;/code&gt; 가 반환 한 값을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="5a9b84ad0f7e71bbd70409150e065ac42708d917" translate="yes" xml:space="preserve">
          <source>The following lists all support possibilities for mod_ssl, in order of preference. Please go through these possibilities &lt;em&gt;in this order&lt;/em&gt; - don't just pick the one you like the look of.</source>
          <target state="translated">다음은 mod_ssl에 대한 모든 지원 가능성을 우선 순위대로 나열한 것입니다. 이러한 가능성 &lt;em&gt;을이 순서대로&lt;/em&gt; 진행하십시오 . 원하는 모양을 선택하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f0e6f355048740ff42e22844cd8500b7003ab6fe" translate="yes" xml:space="preserve">
          <source>The following logfile format string substitutions should be supported by all &lt;code&gt;strftime(3)&lt;/code&gt; implementations, see the &lt;code&gt;strftime(3)&lt;/code&gt; man page for library-specific extensions.</source>
          <target state="translated">모든 &lt;code&gt;strftime(3)&lt;/code&gt; 구현에서 다음 로그 파일 형식 문자열 대체를 지원해야합니다 . 라이브러리 별 확장에 대해서는 &lt;code&gt;strftime(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a7491d0605b31d7f00870e53b4417ad1c6e1f76e" translate="yes" xml:space="preserve">
          <source>The following modes are supported:</source>
          <target state="translated">다음과 같은 모드가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a23e7a9bc6b266d5518246a7355b0667379f5956" translate="yes" xml:space="preserve">
          <source>The following mutex &lt;em&gt;mechanisms&lt;/em&gt; are available:</source>
          <target state="translated">다음과 같은 뮤텍스 &lt;em&gt;메커니즘&lt;/em&gt; 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1089c04352b5a3e70cc75fe08589cb9fa0fdb7b" translate="yes" xml:space="preserve">
          <source>The following notes apply to the &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; module and are included here for compliance with contributors' copyright restrictions that require their acknowledgment.</source>
          <target state="translated">다음 참고 사항은 &lt;code&gt;&lt;a href=&quot;mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; 모듈에 적용되며 승인이 필요한 기고자의 저작권 제한을 준수하기 위해 여기에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fb40964ef9c06df2766f6108c520715c6a0a5739" translate="yes" xml:space="preserve">
          <source>The following option was available in earlier versions but has been removed.</source>
          <target state="translated">다음 옵션은 이전 버전에서 사용 가능했지만 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">다음과 같은 옵션이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8b0a69d28de564f5b4f381fb8384e8fdd1457430" translate="yes" xml:space="preserve">
          <source>The following options are used to fine tune the behavior of &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;suexec#install&quot;&gt;Configuring and installing suEXEC&lt;/a&gt; for further information.</source>
          <target state="translated">다음 옵션은 &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; 의 동작을 미세 조정하는 데 사용됩니다 . 자세한 정보는 &lt;a href=&quot;suexec#install&quot;&gt;suEXEC 구성 및 설치를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca1c5ef052a454aea66f54d9e7f027a5a8f2429b" translate="yes" xml:space="preserve">
          <source>The following options influence the behavior of &lt;code&gt;configure&lt;/code&gt; itself.</source>
          <target state="translated">다음 옵션은 &lt;code&gt;configure&lt;/code&gt; 자체에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="a149f1cacd76355dfde9d46b676120789bea02be" translate="yes" xml:space="preserve">
          <source>The following requirements exist for building Apache httpd:</source>
          <target state="translated">Apache httpd를 빌드하려면 다음 요구 사항이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="c0ae1246d6043b9aace4d23260fa69668156a4a6" translate="yes" xml:space="preserve">
          <source>The following rule will forbid &lt;code&gt;.exe&lt;/code&gt; files from being downloaded from your server.</source>
          <target state="translated">다음 규칙은 &lt;code&gt;.exe&lt;/code&gt; 파일이 서버에서 다운로드되는 것을 금지 합니다.</target>
        </trans-unit>
        <trans-unit id="99562ede6cd4220815f7177b678c630af38a4b7d" translate="yes" xml:space="preserve">
          <source>The following ruleset searches in two directories to find the resource, and, if not finding it in either place, will attempt to just serve it out of the location requested.</source>
          <target state="translated">다음 규칙 세트는 두 디렉토리에서 자원을 찾기 위해 검색하며, 어느 위치에서나 찾지 못하면 요청 된 위치에서 자원을 제공하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="22fe340e1c6bd77176101f95e6cea41744f27527" translate="yes" xml:space="preserve">
          <source>The following ruleset uses a map file to associate each Referer with a redirection target.</source>
          <target state="translated">다음 규칙 세트는 맵 파일을 사용하여 각 Referer를 리디렉션 대상과 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="bbf3c999b26c6f1929816fd1b701d72f9fda4ca0" translate="yes" xml:space="preserve">
          <source>The following sections highlight the most common situations which require further modification to the configuration. Refer also to the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; reference manual.</source>
          <target state="translated">다음 섹션에서는 구성을 추가로 수정해야하는 가장 일반적인 상황을 강조합니다. &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 참조 매뉴얼 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb0f973c0497718935d1d73b7be417ebb89ef347" translate="yes" xml:space="preserve">
          <source>The following table documents the names of mutexes used by httpd and bundled modules.</source>
          <target state="translated">다음 표는 httpd 및 번들 모듈에서 사용되는 뮤텍스의 이름을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="55e43013498ea724c37ff6dcd20e76da80a60d52" translate="yes" xml:space="preserve">
          <source>The following table lists the default MPMs for various operating systems. This will be the MPM selected if you do not make another choice at compile-time.</source>
          <target state="translated">다음 표에는 다양한 운영 체제의 기본 MPM이 나와 있습니다. 컴파일 타임에 다른 선택을하지 않으면 MPM이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="954b386c65911fbfa2629cf7e29a60a668240e48" translate="yes" xml:space="preserve">
          <source>The following technique forbids the practice of other sites including your images inline in their pages. This practice is often referred to as &quot;hotlinking&quot;, and results in your bandwidth being used to serve content for someone else's site.</source>
          <target state="translated">다음 기술은 페이지에 이미지를 포함하는 다른 사이트의 사용을 금지합니다. 이 방법은 종종 &quot;핫 링크&quot;라고하며 다른 사람의 사이트에 콘텐츠를 제공하는 데 대역폭이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1538885e8bc924c831107fa5ed8c09c014015992" translate="yes" xml:space="preserve">
          <source>The following variables provide the values of the named HTTP request headers. The values of other headers can be obtained with the &lt;code&gt;req&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt;. Using these variables may cause the header name to be added to the Vary header of the HTTP response, except where otherwise noted for the directive accepting the expression. The &lt;code&gt;req_novary&lt;/code&gt;&lt;a href=&quot;#functions&quot;&gt;function&lt;/a&gt; may be used to circumvent this behavior.</source>
          <target state="translated">다음 변수는 이름 지정된 HTTP 요청 헤더의 값을 제공합니다. &lt;code&gt;req&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;함수&lt;/a&gt; 를 사용하여 다른 헤더의 값을 얻을 수 있습니다 . 이러한 변수를 사용하면 표현식을 허용하는 지시문에 달리 명시되지 않는 한 헤더 이름이 HTTP 응답의 Vary 헤더에 추가 될 수 있습니다. &lt;code&gt;req_novary&lt;/code&gt; &lt;a href=&quot;#functions&quot;&gt;기능&lt;/a&gt; 이 동작을 회피하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="393bdee4b63ae9d8e1a181bb97f863484b34e55b" translate="yes" xml:space="preserve">
          <source>The following will unset &lt;code&gt;VARIABLE&lt;/code&gt;, preventing it from being sent to the FastCGI server:</source>
          <target state="translated">다음은 &lt;code&gt;VARIABLE&lt;/code&gt; 설정을 해제 하여 FastCGI 서버로 전송되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="af2cb037b897b34b24d5a23238cf877011ea082c" translate="yes" xml:space="preserve">
          <source>The form</source>
          <target state="translated">형태</target>
        </trans-unit>
        <trans-unit id="53971c9846d9e621cdcd7cad8c2290e41cd33c7b" translate="yes" xml:space="preserve">
          <source>The format argument to the &lt;code&gt;&lt;a href=&quot;#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; directives is a string. This string is used to log each request to the log file. It can contain literal characters copied into the log files and the C-style control characters &quot;\n&quot; and &quot;\t&quot; to represent new-lines and tabs. Literal quotes and backslashes should be escaped with backslashes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; 지시문 의 형식 인수 는 문자열입니다. 이 문자열은 각 요청을 로그 파일에 기록하는 데 사용됩니다. 로그 파일에 복사 된 리터럴 문자와 줄 바꿈 및 탭을 나타내는 C 스타일 제어 문자 &quot;\ n&quot;및 &quot;\ t&quot;를 포함 할 수 있습니다. 리터럴 따옴표와 백 슬래시는 백 슬래시로 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="e8e886078c6af9dd775beca20caf9e54bc4aa086" translate="yes" xml:space="preserve">
          <source>The format is fixed. You cannot modify the logging format at runtime.</source>
          <target state="translated">형식이 고정되어 있습니다. 런타임에는 로깅 형식을 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8347e3373bb77b744e9b2b6805790234b6cd08aa" translate="yes" xml:space="preserve">
          <source>The format of the &lt;em&gt;*_DN&lt;/em&gt; variables has changed in Apache HTTPD 2.3.11. See the &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; option for &lt;code&gt;&lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;em&gt;* _DN&lt;/em&gt; 변수 의 형식은 Apache HTTPD 2.3.11에서 변경되었습니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; 에 대한 &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; 옵션을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="e9ad2256c2344c4063f0737d082af44c62a36332" translate="yes" xml:space="preserve">
          <source>The format of the access log is highly configurable. The format is specified using a format string that looks much like a C-style printf(1) format string. Some examples are presented in the next sections. For a complete list of the possible contents of the format string, see the &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;format strings&lt;/a&gt;.</source>
          <target state="translated">액세스 로그의 형식을 구성 할 수 있습니다. 형식은 C 스타일 printf (1) 형식 문자열과 매우 유사한 형식 문자열을 사용하여 지정됩니다. 다음 섹션에 몇 가지 예가 나와 있습니다. 형식 문자열의 가능한 내용에 대한 전체 목록은 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;mod/mod_log_config#formats&quot;&gt; 형식 문자열을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="123f05e6d50a7b28b3ee0fa6298254db5736fbcb" translate="yes" xml:space="preserve">
          <source>The format of the error log is defined by the &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; directive, with which you can customize what values are logged. A default is format defined if you don't specify one. A typical log message follows:</source>
          <target state="translated">오류 로그의 형식은 &lt;code&gt;&lt;a href=&quot;mod/core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt; 지시문에 의해 정의되며 ,이를 통해 기록되는 값을 사용자 정의 할 수 있습니다. 기본값은 지정하지 않은 경우 형식이 정의됩니다. 일반적인 로그 메시지는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd16b0e5bc20a420bc55005349a333203709eeeb" translate="yes" xml:space="preserve">
          <source>The forward proxy is activated using the &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; directive. Because forward proxies allow clients to access arbitrary sites through your server and to hide their true origin, it is essential that you &lt;a href=&quot;#access&quot;&gt;secure your server&lt;/a&gt; so that only authorized clients can access the proxy before activating a forward proxy.</source>
          <target state="translated">정방향 프록시는 &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 활성화됩니다 . 정방향 프록시를 사용하면 클라이언트가 서버를 통해 임의의 사이트에 액세스하고 해당 원본을 숨길 수 있으므로 정방향 프록시를 활성화하기 전에 권한이 부여 된 클라이언트 만 프록시에 액세스 할 수 있도록 &lt;a href=&quot;#access&quot;&gt;서버&lt;/a&gt; 를 보호해야합니다 .</target>
        </trans-unit>
        <trans-unit id="baab634629b1f44a5a79e148eade00f40462b2d3" translate="yes" xml:space="preserve">
          <source>The frequency of initial and subsequent TCP keepalive probes depends on global OS settings, and may be as high as 2 hours. To be useful, the frequency configured in the OS must be smaller than the threshold used by the firewall.</source>
          <target state="translated">초기 및 후속 TCP Keepalive 프로브의 빈도는 전역 OS 설정에 따라 다르며 최대 2 시간이 걸릴 수 있습니다. 유용하게 사용하려면 OS에 구성된 빈도가 방화벽에서 사용하는 임계 값보다 작아야합니다.</target>
        </trans-unit>
        <trans-unit id="cd9f11361ea3ddc53c3d8172696c5455dd4d1750" translate="yes" xml:space="preserve">
          <source>The fsize Element</source>
          <target state="translated">fsize 요소</target>
        </trans-unit>
        <trans-unit id="1318a0cb4599745a8d4170f55c784d7e2e6e3351" translate="yes" xml:space="preserve">
          <source>The full HTTP request line sent by the browser to the server (e.g., &quot;&lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt;&quot;). This does not include any additional headers sent by the browser. This value has not been unescaped (decoded), unlike most other variables below.</source>
          <target state="translated">브라우저가 서버로 보낸 전체 HTTP 요청 라인 (예 : &quot; &lt;code&gt;GET /index.html HTTP/1.1&lt;/code&gt; &quot;) 브라우저에서 보낸 추가 헤더는 포함되지 않습니다. 아래의 다른 변수와 달리이 값은 이스케이프 처리되지 않았습니다 (디코딩되지 않음).</target>
        </trans-unit>
        <trans-unit id="95603852ed37df88c64ac24dd52451788d471a24" translate="yes" xml:space="preserve">
          <source>The full definition of which responses can be cached by an HTTP cache is defined in &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt; RFC2616 Section 13.4 Response Cacheability&lt;/a&gt;, and can be summed up as follows:</source>
          <target state="translated">HTTP 캐시로 캐싱 할 수있는 응답의 전체 정의는 &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt;RFC2616 섹션 13.4 응답&lt;/a&gt; 캐쉬 가능성에 정의되어 있으며 다음과 같이 요약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a2a46983bcab9444e187963aaaa9f10a1b72ca0" translate="yes" xml:space="preserve">
          <source>The full definition of which responses can be cached by an HTTP cache is defined in &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4&quot;&gt; RFC2616 Section 13.4 Response Cacheability&lt;/a&gt;, and can be summed up as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f27a0246abbc256a2dc7a619dccd5a0000bcac7" translate="yes" xml:space="preserve">
          <source>The full list of headers recognized is available in the &lt;a href=&quot;mod/mod_negotiation#typemaps&quot;&gt;mod_negotiation typemap&lt;/a&gt; documentation.</source>
          <target state="translated">인식 된 전체 헤더 목록은 &lt;a href=&quot;mod/mod_negotiation#typemaps&quot;&gt;mod_negotiation 타입 맵&lt;/a&gt; 문서 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46fc587a228ffa50908066f124ff10ad5d5f5cac" translate="yes" xml:space="preserve">
          <source>The full local filesystem path to the file or script matching the request, if this has already been determined by the server at the time &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; is referenced. Otherwise, such as when used in virtual host context, the same value as &lt;code&gt;REQUEST_URI&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REQUEST_FILENAME&lt;/code&gt; 이 (가) 참조 될 때 서버에 의해 이미 결정된 경우 요청과 일치하는 파일 또는 스크립트의 전체 로컬 파일 시스템 경로 입니다. 그렇지 않으면 (예 : 가상 호스트 컨텍스트에서 사용되는 경우) &lt;code&gt;REQUEST_URI&lt;/code&gt; 와 동일한 값</target>
        </trans-unit>
        <trans-unit id="cf7936c7a00d974e792eed940b615a52cc0068c4" translate="yes" xml:space="preserve">
          <source>The full local filesystem path to the file or script matching the request, if this has already been determined by the server at the time &lt;code&gt;REQUEST_FILENAME&lt;/code&gt; is referenced. Otherwise, such as when used in virtual host context, the same value as &lt;code&gt;REQUEST_URI&lt;/code&gt;. Depending on the value of &lt;code&gt;&lt;a href=&quot;core#acceptpathinfo&quot;&gt;AcceptPathInfo&lt;/a&gt;&lt;/code&gt;, the server may have only used some leading components of the &lt;code&gt;REQUEST_URI&lt;/code&gt; to map the request to a file.</source>
          <target state="translated">&lt;code&gt;REQUEST_FILENAME&lt;/code&gt; 이 (가) 참조 될 때 서버에서 이미 결정한 경우 요청과 일치하는 파일 또는 스크립트의 전체 로컬 파일 시스템 경로 입니다. 그렇지 않으면 가상 호스트 컨텍스트에서 사용될 때와 같이 &lt;code&gt;REQUEST_URI&lt;/code&gt; 와 동일한 값 입니다. &lt;code&gt;&lt;a href=&quot;core#acceptpathinfo&quot;&gt;AcceptPathInfo&lt;/a&gt;&lt;/code&gt; 값에 따라 , 서버는 요청을 파일에 맵핑하기 위해 &lt;code&gt;REQUEST_URI&lt;/code&gt; 의 일부 주요 구성 요소 만 사용했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9eebeeb584d3c4f57ad4ac860864e59d1383f4e9" translate="yes" xml:space="preserve">
          <source>The full range of &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; power is available. For example, it is possible to construct an alias with case-insensitive matching of the URL-path:</source>
          <target state="translated">&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 의 모든 범위를 사용할 수 있습니다. 예를 들어, URL 경로의 대소 문자를 구분하지 않고 별명을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="486f78c415ace7500848e14d8cc1c8e3a9c8e34c" translate="yes" xml:space="preserve">
          <source>The full syntax for the flag, including all attributes, is as follows:</source>
          <target state="translated">모든 속성을 포함하여 플래그의 전체 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="32204d7946b4b2c640695926ac1972b5db3fcb25" translate="yes" xml:space="preserve">
          <source>The full syntax for this flag is:</source>
          <target state="translated">이 플래그의 전체 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e057ef117e6d013346ce6f19e3dfee72b6fa5f5c" translate="yes" xml:space="preserve">
          <source>The fully qualified domain name related to the request.</source>
          <target state="translated">요청과 관련된 정규화 된 도메인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e3e84b7e9a55008c37655e58286cb6faa705cc24" translate="yes" xml:space="preserve">
          <source>The function can be one of a number of things, and we'll talk some more about most of these in the next installment of this series. For now, here are some examples of what you can do with SSI</source>
          <target state="translated">이 기능은 여러 가지 중 하나 일 수 있으며이 시리즈의 다음 편에서이 기능들에 대해 좀 더 이야기하겠습니다. 지금은 SSI로 할 수있는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="bbb941f8c58411d33ac3d941ce1eceef9293482f" translate="yes" xml:space="preserve">
          <source>The functions marked as &quot;ordering&quot; in the final column require some consideration for the ordering of different components of the server, especially when the function is used within the &amp;lt;&lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;If&lt;/a&gt;&lt;/code&gt;&amp;gt; directive which is evaluated relatively early.</source>
          <target state="translated">마지막 열에서 &quot;순서&quot;로 표시된 기능은 서버의 다른 구성 요소 순서를 고려할 때, 특히 기능이 비교적 초기에 평가되는 &amp;lt; &lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;If&lt;/a&gt;&lt;/code&gt; &amp;gt; 지시문 내에서 사용될 경우 약간의 고려가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="1a9e8b11c347e428a99526800aff8c43db9683a5" translate="yes" xml:space="preserve">
          <source>The functions marked as &quot;restricted&quot; in the final column are not available in some modules like &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">마지막 열에서 &quot;제한됨&quot;으로 표시된 기능은 &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 와 같은 일부 모듈에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e4ea6b9d1730b158e565b8fba887c1e3d7e96f65" translate="yes" xml:space="preserve">
          <source>The gateway looks for a backend response header called &lt;code&gt;X-Sendfile&lt;/code&gt; and interprets the value as the filename to serve. The header is removed from the final response headers. This is equivalent to &lt;code&gt;ProxySCGISendfile X-Sendfile&lt;/code&gt;.</source>
          <target state="translated">게이트웨이는 &lt;code&gt;X-Sendfile&lt;/code&gt; 이라는 백엔드 응답 헤더를 찾고 값을 제공 할 파일 이름으로 해석합니다. 최종 응답 헤더에서 헤더가 제거됩니다. 이것은 &lt;code&gt;ProxySCGISendfile X-Sendfile&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4068607ce0e75c192f016c9e31cb6a9e6f2ea363" translate="yes" xml:space="preserve">
          <source>The goal of this rule is to force the use of a particular hostname, in preference to other hostnames which may be used to reach the same site. For example, if you wish to force the use of &lt;strong&gt;www.example.com&lt;/strong&gt; instead of &lt;strong&gt;example.com&lt;/strong&gt;, you might use a variant of the following recipe.</source>
          <target state="translated">이 규칙의 목표는 동일한 호스트에 도달하는 데 사용될 수있는 다른 호스트 이름보다 특정 호스트 이름을 강제로 사용하는 것입니다. 예를 들어 &lt;strong&gt;example.com&lt;/strong&gt; 대신 &lt;strong&gt;www.example.com을&lt;/strong&gt; 사용하려는 경우 다음 레시피의 변형을 사용할 수 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99518a685572089b7b20231ca8d06f5cfdd2b02a" translate="yes" xml:space="preserve">
          <source>The group file is keyed on the username. The value for a user is a comma-separated list of the groups to which the users belongs. There must be no whitespace within the value, and it must never contain any colons.</source>
          <target state="translated">그룹 파일은 사용자 이름으로 입력됩니다. 사용자의 값은 사용자가 속한 그룹의 쉼표로 구분 된 목록입니다. 값 내에 공백이 없어야하며 콜론을 포함해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="34aaea45ccfa14f6203fdd24b1037adb95a613f5" translate="yes" xml:space="preserve">
          <source>The group name of the group of the script.</source>
          <target state="translated">스크립트 그룹의 그룹 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ac2f81cb220ea8faaf93f46e3bdb1a45df24ac1a" translate="yes" xml:space="preserve">
          <source>The handler generating the response (if any).</source>
          <target state="translated">응답을 생성하는 핸들러 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="3233bc8bf7ede97f96728aeb02599bc82c3bf13c" translate="yes" xml:space="preserve">
          <source>The handshake sequence uses three protocols:</source>
          <target state="translated">핸드 셰이크 시퀀스는 세 가지 프로토콜을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ba8a0b10b05a197d3862fb4cc9eb46f37e4aa37b" translate="yes" xml:space="preserve">
          <source>The header should contain name value pairs expressed in the same format as a query string in a URL, as in the example below. Setting a key to the empty string has the effect of removing that key from the session.</source>
          <target state="translated">헤더에는 아래 예와 같이 URL의 쿼리 문자열과 동일한 형식으로 표현 된 이름 값 쌍이 포함되어야합니다. 빈 문자열로 키를 설정하면 세션에서 해당 키를 제거하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5eed010f24ab248fc23f973c5e2afe190b7b2504" translate="yes" xml:space="preserve">
          <source>The header value is expected to be in the URL query format, for example:</source>
          <target state="translated">헤더 값은 다음과 같이 URL 쿼리 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="baf0cd8999623787d98ab628e0d4dd94a6669824" translate="yes" xml:space="preserve">
          <source>The headers and bodies of cached responses are combined, and stored underneath a single key in the shared object cache. A &lt;a href=&quot;../socache&quot;&gt;number of implementations&lt;/a&gt; of shared object caches are available to choose from.</source>
          <target state="translated">캐시 된 응답의 헤더와 본문은 결합되어 공유 객체 캐시의 단일 키 아래에 저장됩니다. &lt;a href=&quot;../socache&quot;&gt;구현의 수&lt;/a&gt; 공유 객체 캐시를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2fae25c9620538439e7ed9df70671a7ca20a4d" translate="yes" xml:space="preserve">
          <source>The headers and bodies of cached responses are stored separately on disk, in a directory structure derived from the md5 hash of the cached URL.</source>
          <target state="translated">캐시 된 응답의 헤더와 본문은 캐시 된 URL의 md5 해시에서 파생 된 디렉토리 구조로 디스크에 별도로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e3645379b005f01ebf1fe033edd6607c39568a52" translate="yes" xml:space="preserve">
          <source>The health check mechanism is enabled via the use of additional &lt;code&gt;&lt;a href=&quot;mod_proxy#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt; parameters, which are configured in the standard way via &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">상태 확인 메커니즘은 추가 &lt;code&gt;&lt;a href=&quot;mod_proxy#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt; 매개 변수를 사용하여 활성화 되며 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 를 통해 표준 방식으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a01effeeedaf6bbd3b956cd1ae2a774e2e7d0ad" translate="yes" xml:space="preserve">
          <source>The hex-encoded SSL session id</source>
          <target state="translated">16 진수로 인코딩 된 SSL 세션 ID</target>
        </trans-unit>
        <trans-unit id="b04cac95527ba51dd8992ee95f7afa1295b7db5f" translate="yes" xml:space="preserve">
          <source>The hook specifies before which phase of request processing the message will be logged. The following hooks are supported:</source>
          <target state="translated">후크는 메시지 처리 요청 단계 이전에 로그를 지정합니다. 다음 후크가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="150c54f88d73b637a0a5c3ce1cd1e4a3dbba25c4" translate="yes" xml:space="preserve">
          <source>The host name of the remote host</source>
          <target state="translated">원격 호스트의 호스트 이름</target>
        </trans-unit>
        <trans-unit id="7684a9e8ff178ef2e3d4c857ef01b5a01fb366e3" translate="yes" xml:space="preserve">
          <source>The host name, as set by the &lt;code&gt;Host:&lt;/code&gt; header or by a full URI.</source>
          <target state="translated">&lt;code&gt;Host:&lt;/code&gt; 헤더 또는 전체 URI 로 설정된 호스트 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="aa50ba6c65eb6c52c3bb195f715d486be49dd3f7" translate="yes" xml:space="preserve">
          <source>The hostname of the proxy server.</source>
          <target state="translated">프록시 서버의 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4485cbd54c910a39aa0b5fd6de0667b9645ad5d9" translate="yes" xml:space="preserve">
          <source>The hour part of the current time (&lt;code&gt;00&lt;/code&gt;, ..., &lt;code&gt;23&lt;/code&gt;)</source>
          <target state="translated">현재 시간의 시간 부분 ( &lt;code&gt;00&lt;/code&gt; , ..., &lt;code&gt;23&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="73797ddb1d26af7468d7719d11a6389877363cbc" translate="yes" xml:space="preserve">
          <source>The httpd binary is built with the help of several patches to third party packages, which ensure the released code is buildable and debuggable. These patches are available and distributed from &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt; and are recommended to be applied to obtain identical results as the &quot;official&quot; ASF distributed binaries.</source>
          <target state="translated">httpd 바이너리는 타사 패키지에 대한 여러 패치를 사용하여 빌드되므로 릴리스 된 코드를 빌드 및 디버깅 할 수 있습니다. 이러한 패치는 &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt; 에서 구할 수 있으며 &quot;공식&quot;ASF 분산 바이너리와 동일한 결과를 얻기 위해 적용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="23eed5da5d7a0445c900a8b339abc3218a79767b" translate="yes" xml:space="preserve">
          <source>The httpd binary is built with the help of several patches to third party packages, which ensure the released code is buildable and debuggable. These patches are available and distributed from &lt;a href=&quot;https://www.apache.org/dist/httpd/binaries/win32/patches_applied/&quot;&gt;http://www.apache.org/dist/httpd/binaries/win32/patches_applied/&lt;/a&gt; and are recommended to be applied to obtain identical results as the &quot;official&quot; ASF distributed binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381367eafd54603791e9412433719381c33c0856" translate="yes" xml:space="preserve">
          <source>The imagemap module adds some new features that were not possible with previously distributed imagemap programs.</source>
          <target state="translated">이미지 맵 모듈은 이전에 배포 된 이미지 맵 프로그램으로는 불가능했던 몇 가지 새로운 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e817eec40ca760b1a190b322154607197c783956" translate="yes" xml:space="preserve">
          <source>The improved connection handling may not work for certain connection filters that have declared themselves as incompatible with event. In these cases, this MPM will fall back to the behavior of the &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM and reserve one worker thread per connection. All modules shipped with the server are compatible with the event MPM.</source>
          <target state="translated">이벤트와 호환되지 않는 것으로 선언 된 특정 연결 필터에는 향상된 연결 처리가 작동하지 않을 수 있습니다. 이 경우이 MPM은 &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM 의 동작으로 돌아가 연결 당 하나의 작업자 스레드를 예약합니다. 서버와 함께 제공된 모든 모듈은 이벤트 MPM과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="eee415ccce84440111a476c30fec91a6ba6c1d0f" translate="yes" xml:space="preserve">
          <source>The include Element</source>
          <target state="translated">포함 요소</target>
        </trans-unit>
        <trans-unit id="b55b277d92fce4369308ead0a35ff78e98f32b53" translate="yes" xml:space="preserve">
          <source>The index of a directory can come from one of two sources:</source>
          <target state="translated">디렉토리의 색인은 다음 두 가지 소스 중 하나에서 올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e0d7a387209b56316d107dfc6f8a8786eb2c030" translate="yes" xml:space="preserve">
          <source>The information should not be trusted in any way except for rudimentary usage tracking.</source>
          <target state="translated">기본적인 사용 추적을 제외하고는 정보를 신뢰해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="18ae3091f1a9c98cf8e11a978c804ecfd5b9868f" translate="yes" xml:space="preserve">
          <source>The input filter supports denying/skipping a filter if it is deemed unwanted:</source>
          <target state="translated">입력 필터는 필터가 원하지 않는 것으로 간주되는 경우 거부 / 건너 뛰기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8297f5977f99374c0c327983b1247d479fb0bcb5" translate="yes" xml:space="preserve">
          <source>The intention is to allow the server to send resources to the client that it will most likely need: a css or javascript resource that belongs to a html page the client requested. A set of images that is referenced by a css, etc.</source>
          <target state="translated">서버가 클라이언트에게 요청해야 할 html 페이지에 속하는 css 또는 javascript 자원이 필요할 가능성이 가장 높은 자원을 클라이언트에 보낼 수 있도록하는 것입니다. CSS 등이 참조하는 이미지 세트</target>
        </trans-unit>
        <trans-unit id="d6ea6e15ae3766269c0d5569106fe20132daab61" translate="yes" xml:space="preserve">
          <source>The intention of this is to indicate that the explicitly listed types are preferred, but if a different representation is available, that is ok too. Using explicit quality values, what the browser really wants is something like:</source>
          <target state="translated">이것의 의도는 명시 적으로 나열된 유형이 선호되지만 다른 표현이 가능하면 괜찮습니다. 명시적인 품질 값을 사용하면 브라우저가 실제로 원하는 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e1597d99816540870dbf8970102b3783cc51f2a" translate="yes" xml:space="preserve">
          <source>The internal &lt;code&gt;tolower&lt;/code&gt; RewriteMap directive is used to ensure that the hostnames being used are all lowercase, so that there is no ambiguity in the directory structure which must be created.</source>
          <target state="translated">내부 &lt;code&gt;tolower&lt;/code&gt; RewriteMap 지시문은 사용중인 호스트 이름이 모두 소문자인지 확인하는 데 사용되므로 디렉토리 구조에 모호성이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="c9a1469ea4fef43e1718c0eb5c8e0f7c8e35f573" translate="yes" xml:space="preserve">
          <source>The internal environment variables set by this directive are set &lt;em&gt;after&lt;/em&gt; most early request processing directives are run, such as access control and URI-to-filename mapping. If the environment variable you're setting is meant as input into this early phase of processing such as the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive, you should instead set the environment variable with &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 지정 문에 의해 설정된 내부 환경 변수 는 액세스 제어 및 URI- 파일 이름 맵핑과 같은 대부분의 초기 요청 처리 지정 문이 실행 된 &lt;em&gt;후에&lt;/em&gt; 설정됩니다 . 설정하는 환경 변수가 &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문 과 같은 초기 처리 단계에 대한 입력으로 의미되는 경우 대신 &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; 로 환경 변수를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3fcaacd99a8147f79661c142c2e367b3a87af007" translate="yes" xml:space="preserve">
          <source>The inverse process of switching from Basic to Digest Authentication without assigning new passwords is generally not possible. Only if the Basic Authentication passwords have been stored in plain text or with a reversable encryption scheme will it be possible to recover them and generate a new data store following the Digest Authentication password storage scheme.</source>
          <target state="translated">새 비밀번호를 할당하지 않고 기본 인증에서 다이제스트 인증으로 전환하는 역 프로세스는 일반적으로 불가능합니다. 기본 인증 비밀번호가 일반 텍스트 또는 가역 암호화 방식으로 저장된 경우에만 다이제스트 인증 비밀번호 저장 체계에 따라 비밀번호를 복구하고 새 데이터 저장소를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf9922b4116466964a75bfb19f3885fdabdf4ed" translate="yes" xml:space="preserve">
          <source>The invocation modes for FastCGI authorizers supported by this module are distinguished by two characteristics, &lt;em&gt;type&lt;/em&gt; and auth &lt;em&gt;mechanism&lt;/em&gt;.</source>
          <target state="translated">이 모듈에서 지원하는 FastCGI 권한 부여 프로그램의 호출 모드는 &lt;em&gt;유형&lt;/em&gt; 및 인증 &lt;em&gt;메커니즘의&lt;/em&gt; 두 가지 특성으로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="8a3a5637f421c3238f96d791246bed0306992f02" translate="yes" xml:space="preserve">
          <source>The kernel generates a pid for each process as it forks the process, and pids are allowed to roll over (they're 16-bits on many Unixes, but newer systems have expanded to 32-bits). So over time the same pid will be reused. However unless it is reused within the same second, it does not destroy the uniqueness of our quadruple. That is, we assume the system does not spawn 65536 processes in a one second interval (it may even be 32768 processes on some Unixes, but even this isn't likely to happen).</source>
          <target state="translated">커널은 프로세스를 분기 할 때 각 프로세스에 대해 pid를 생성하고 pid를 롤오버 할 수 있습니다 (많은 유닉스에서는 16 비트이지만 최신 시스템은 32 비트로 확장되었습니다). 따라서 시간이 지남에 따라 동일한 pid가 재사용됩니다. 그러나 같은 초 안에 재사용되지 않는 한, 우리 사중의 독창성을 파괴하지는 않습니다. 즉, 시스템이 1 초 간격으로 65536 개의 프로세스를 생성하지 않는다고 가정합니다 (일부 유닉스에서는 32768 개의 프로세스 일 수도 있지만 이러한 상황은 발생하지 않을 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="cec77bff3ebe650acc77661d772d4f33d570953d" translate="yes" xml:space="preserve">
          <source>The key exchange method defines how the shared secret symmetric cryptography key used for application data transfer will be agreed upon by client and server. SSL 2.0 uses RSA key exchange only, while SSL 3.0 supports a choice of key exchange algorithms including RSA key exchange (when certificates are used), and Diffie-Hellman key exchange (for exchanging keys without certificates, or without prior communication between client and server).</source>
          <target state="translated">키 교환 방법은 응용 프로그램 데이터 전송에 사용되는 공유 비밀 대칭 암호화 키가 클라이언트와 서버에 의해 어떻게 합의되는지를 정의합니다. SSL 2.0은 RSA 키 교환 만 사용하고 SSL 3.0은 RSA 키 교환 (인증서 사용시) 및 Diffie-Hellman 키 교환 (인증서없이 또는 클라이언트와 서버 간의 사전 통신없이 키 교환)을 포함한 키 교환 알고리즘 선택을 지원합니다. ).</target>
        </trans-unit>
        <trans-unit id="e905ba0e731ec08401c192a1333b2c5f986285f9" translate="yes" xml:space="preserve">
          <source>The key for the single DBM is the username. The value consists of</source>
          <target state="translated">단일 DBM의 핵심은 사용자 이름입니다. 값은</target>
        </trans-unit>
        <trans-unit id="6464c98d1b62248035330f435c5e30b1921b1802" translate="yes" xml:space="preserve">
          <source>The key to doing this is checking that part of the client certificate matches what you expect. Usually this means checking all or part of the Distinguished Name (DN), to see if it contains some known string. There are two ways to do this, using either &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이를 수행하기위한 핵심은 클라이언트 인증서의 일부가 예상 한 것과 일치하는지 확인하는 것입니다. 일반적으로 이것은 식별 이름 (DN)의 일부 또는 전부를 확인하여 알려진 문자열이 포함되어 있는지 확인합니다. &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslrequire&quot;&gt;SSLRequire&lt;/a&gt;&lt;/code&gt; 를 사용하여이를 수행하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa04099637664d961e688d058f089b004838129c" translate="yes" xml:space="preserve">
          <source>The key used to encrypt the session</source>
          <target state="translated">세션을 암호화하는 데 사용되는 키</target>
        </trans-unit>
        <trans-unit id="127b0187a9ea97ae480d87176cb4601ef6c21c81" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;disabled&lt;/code&gt; followed by a space-delimited list of usernames. Usernames that appear in such a list will &lt;em&gt;never&lt;/em&gt; have directory translation performed, even if they appear in an &lt;code&gt;enabled&lt;/code&gt; clause.</source>
          <target state="translated">키워드가 &lt;code&gt;disabled&lt;/code&gt; 되고 공백으로 구분 된 사용자 이름 목록이 나타납니다. 이러한 목록에 나타나는 사용자 이름 은 &lt;code&gt;enabled&lt;/code&gt; 절에 나타나더라도 디렉토리 변환이 수행 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="db03fb4dd4db0d48c01e0f648c9075310d9a47e5" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;disabled&lt;/code&gt;. This turns off &lt;em&gt;all&lt;/em&gt; username-to-directory translations except those explicitly named with the &lt;code&gt;enabled&lt;/code&gt; keyword (see below).</source>
          <target state="translated">키워드가 &lt;code&gt;disabled&lt;/code&gt; . &lt;code&gt;enabled&lt;/code&gt; 키워드를 사용 하여 명시 적으로 명명 된 번역을 제외한 &lt;em&gt;모든&lt;/em&gt; 사용자 이름-디렉토리 번역을 끕니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="c1de904748ff4a6b17c75cddff0082a22eb2f3eb" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;enabled&lt;/code&gt; followed by a space-delimited list of usernames. These usernames will have directory translation performed even if a global disable is in effect, but not if they also appear in a &lt;code&gt;disabled&lt;/code&gt; clause.</source>
          <target state="translated">키워드는 &lt;code&gt;enabled&lt;/code&gt; 공백으로 구분 한 사용자 목록 하였다. 이러한 사용자 이름은 전역 비활성화가 적용 되더라도 &lt;code&gt;disabled&lt;/code&gt; 절 에도 나타나지 않는 경우에도 디렉토리 변환이 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b52ea07c2c40cd344b2368d75ccf4d01b85bb7f" translate="yes" xml:space="preserve">
          <source>The language specification is the two-letter abbreviation for the language. The &lt;code&gt;charset&lt;/code&gt; is the name of the particular character set which should be used.</source>
          <target state="translated">언어 사양은 언어의 두 글자 약어입니다. &lt;code&gt;charset&lt;/code&gt; 사용되어야하는 특정 문자 세트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c4c3e5181b69415aeef0b9e92a181b7357a50307" translate="yes" xml:space="preserve">
          <source>The language(s) of the variant, as an Internet standard language tag (&lt;a href=&quot;http://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;). An example is &lt;code&gt;en&lt;/code&gt;, meaning English. If the variant contains more than one language, they are separated by a comma.</source>
          <target state="translated">인터넷 표준 언어 태그 ( &lt;a href=&quot;http://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt; ) 로서 변형의 언어 입니다. 예는 영어를 의미하는 &lt;code&gt;en&lt;/code&gt; 입니다. 변형에 둘 이상의 언어가 포함 된 경우 쉼표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="41a9e35b8cc8bf6dca2d24081323f6895c217806" translate="yes" xml:space="preserve">
          <source>The language(s) of the variant, as an Internet standard language tag (&lt;a href=&quot;https://www.ietf.org/rfc/rfc1766.txt&quot;&gt;RFC 1766&lt;/a&gt;). An example is &lt;code&gt;en&lt;/code&gt;, meaning English. If the variant contains more than one language, they are separated by a comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d706496109e8997da6167e7cda14333fceb60126" translate="yes" xml:space="preserve">
          <source>The largest size of the form in bytes that will be parsed for the login details</source>
          <target state="translated">로그인 세부 사항을 위해 구문 분석 될 최대 양식 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="66dfffd36d3cde15ccacf6dbff4c245916115c07" translate="yes" xml:space="preserve">
          <source>The last example will set environment variable &lt;code&gt;HAVE_TS&lt;/code&gt; if the request contains any headers that begin with &quot;TS&quot; whose values begins with any character in the set [a-z].</source>
          <target state="translated">마지막 예는 요청에 세트 [az]의 문자로 시작하는 &quot;TS&quot;로 시작하는 헤더가 요청에 포함 된 경우 환경 변수 &lt;code&gt;HAVE_TS&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6301dead5bcc2b4a0b8465f6671ab0760b07ab3e" translate="yes" xml:space="preserve">
          <source>The last modification date of the document requested by the user.</source>
          <target state="translated">사용자가 요청한 문서의 마지막 수정 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="0fe076f2f620506ad9e6202e7bdc132356caebe9" translate="yes" xml:space="preserve">
          <source>The last part indicates the size of the object returned to the client, not including the response headers. If no content was returned to the client, this value will be &quot;&lt;code&gt;-&lt;/code&gt;&quot;. To log &quot;&lt;code&gt;0&lt;/code&gt;&quot; for no content, use &lt;code&gt;%B&lt;/code&gt; instead.</source>
          <target state="translated">마지막 부분은 응답 헤더를 포함하지 않고 클라이언트에 반환 된 객체의 크기를 나타냅니다. 클라이언트에 컨텐츠가 리턴되지 않은 경우이 값은 &quot; &lt;code&gt;-&lt;/code&gt; &quot;입니다. 내용없이 &quot; &lt;code&gt;0&lt;/code&gt; &quot; 을 기록하려면 대신 &lt;code&gt;%B&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2e64c67bb15326b8a9cb4ae2eb9925424519b114" translate="yes" xml:space="preserve">
          <source>The length of the file, in bytes. If this header is not present, then the actual length of the file is used.</source>
          <target state="translated">파일 길이 (바이트)입니다. 이 헤더가 없으면 파일의 실제 길이가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ebc898c20f3d90c5d2fd72d61d514deaef1e4ea3" translate="yes" xml:space="preserve">
          <source>The length of time to wait for more output from the CGI program</source>
          <target state="translated">CGI 프로그램에서 더 많은 출력을 기다리는 시간</target>
        </trans-unit>
        <trans-unit id="e5e8e4fbc8a02da884a830eedbadeeaf26410e86" translate="yes" xml:space="preserve">
          <source>The lines in the imagemap files can have one of several formats:</source>
          <target state="translated">이미지 맵 파일의 라인은 여러 형식 중 하나를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac85b229233663261798db34ad9fa703cf76d5a7" translate="yes" xml:space="preserve">
          <source>The lines marked &quot;(*)&quot; are only available if &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;On&lt;/code&gt;. In version 2.3.6, loading mod_status will toggle &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; On by default.</source>
          <target state="translated">&quot;(*)&quot;로 표시된 행은 &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; 가 &lt;code&gt;On&lt;/code&gt; 인 경우에만 사용 가능합니다 . 버전 2.3.6에서 mod_status를로드하면 기본적으로 &lt;code&gt;&lt;a href=&quot;core#extendedstatus&quot;&gt;ExtendedStatus&lt;/a&gt;&lt;/code&gt; 가 On으로 전환 됩니다.</target>
        </trans-unit>
        <trans-unit id="345b2b263679078fe6e029d88cba5b7e34f089bd" translate="yes" xml:space="preserve">
          <source>The local port used for the connection to the backend server.</source>
          <target state="translated">백엔드 서버에 연결하는 데 사용되는 로컬 포트.</target>
        </trans-unit>
        <trans-unit id="65c22a61422ccbaf973b5d5493b7713da12b767e" translate="yes" xml:space="preserve">
          <source>The location of the &lt;code&gt;mime.types&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;mime.types&lt;/code&gt; 파일 의 위치</target>
        </trans-unit>
        <trans-unit id="15b5db158436beb5767363af97ec2aba6b5a25a9" translate="yes" xml:space="preserve">
          <source>The location of the error log is defined by the &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directive, which may be set globally, or per virtual host. Entries in the error log tell you what went wrong, and when. They often also tell you how to fix it. Each error log message contains an error code, which you can search for online for even more detailed descriptions of how to address the problem. You can also configure your error log to contain a log ID which you can then correlate to an access log entry, so that you can determine what request caused the error condition.</source>
          <target state="translated">오류 로그의 위치는 &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; 지정 문에 의해 정의되며, 전역 또는 가상 호스트별로 설정 될 수 있습니다. 오류 로그의 항목은 무엇이 잘못되었는지, 언제 알려줍니다. 그들은 종종 그것을 고치는 방법을 알려줍니다. 각 오류 로그 메시지에는 오류 코드가 포함되어 있으며 문제를 해결하는 방법에 대한 자세한 설명을 온라인에서 검색 할 수 있습니다. 또한 오류 로그에 로그 ID를 포함하도록 구성하여 액세스 로그 항목과 연관시킬 수 있으므로 오류 조건을 유발 한 요청을 판별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e5be5cf7253ad5a831ddaefed42d3f5f5f66dc0" translate="yes" xml:space="preserve">
          <source>The log ID format &lt;code&gt;%L&lt;/code&gt; produces a unique id for a connection or request. This can be used to correlate which log lines belong to the same connection or request, which request happens on which connection. A &lt;code&gt;%L&lt;/code&gt; format string is also available in &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; to allow to correlate access log entries with error log lines. If &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; is loaded, its unique id will be used as log ID for requests.</source>
          <target state="translated">로그 ID 형식 &lt;code&gt;%L&lt;/code&gt; 은 연결 또는 요청에 대한 고유 한 ID를 생성합니다. 이는 어떤 로그 라인이 동일한 연결 또는 요청에 속하는지, 어떤 요청이 어떤 연결에서 발생하는지 상관시키는 데 사용될 수 있습니다. &lt;code&gt;%L&lt;/code&gt; 형식 문자열로도 번역되어 있습니다 &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; 가 오류 로그 라인 상관 관계 액세스 로그 항목에 대해 허용. 경우 &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; 가이 로드, 고유 ID는 요청에 대한 로그 ID로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f553f9510b7797cdeb66277ec3ccf9d22a2fc2e5" translate="yes" xml:space="preserve">
          <source>The log files may contain sensitive data such as the contents of &lt;code&gt;Authorization:&lt;/code&gt; headers (which can contain passwords), so they should not be readable by anyone except the user that starts the server.</source>
          <target state="translated">로그 파일에는 &lt;code&gt;Authorization:&lt;/code&gt; 헤더 의 내용 (암호를 포함 할 수 있음) 과 같은 중요한 데이터가 포함될 수 있으므로 서버를 시작한 사용자를 제외한 다른 사람이 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="32773e1f3effb916a9ee46ef1ac7573a74f589e4" translate="yes" xml:space="preserve">
          <source>The logged information will likely contain plaintext credentials being used or validated by LDAP authentication, so care should be taken in protecting and purging the error log when this directive is used.</source>
          <target state="translated">기록 된 정보에는 LDAP 인증에 의해 사용되거나 검증 된 평문 자격 증명이 포함되므로이 지시문을 사용할 때 오류 로그를 보호하고 제거하는 데주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="77cdd1becfd4d903cb7c30f0aa091d406a99b9d8" translate="yes" xml:space="preserve">
          <source>The login form can be hosted as a standalone page, or can be provided inline on the same page.</source>
          <target state="translated">로그인 양식은 독립형 페이지로 호스팅되거나 동일한 페이지에서 인라인으로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0489efd0367a4940a451a4f4a02dea41c9b9152b" translate="yes" xml:space="preserve">
          <source>The looked-up keys are cached by httpd until the &lt;code&gt;mtime&lt;/code&gt; (modified time) of the mapfile changes, or the httpd server is restarted. This ensures better performance on maps that are called by many requests.</source>
          <target state="translated">조회 키는 맵 파일 의 &lt;code&gt;mtime&lt;/code&gt; (수정 된 시간)이 변경되거나 httpd 서버가 다시 시작될 때까지 httpd에 의해 캐시됩니다 . 이것은 많은 요청에 의해 호출되는 맵에서 더 나은 성능을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="9feefa882b51187ba18ff2b453318c85c1952ea3" translate="yes" xml:space="preserve">
          <source>The machine services a large number of requests, and so the performance loss in running separate daemons may be significant.</source>
          <target state="translated">머신은 많은 수의 요청을 처리하므로 별도의 데몬을 실행하면 성능이 크게 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d4bc480a007f67fd1d86e26afe7081fa85afeb9" translate="yes" xml:space="preserve">
          <source>The machines in your cluster should satisfy these requirements. (Even if you have only one machine you should synchronize its clock with NTP.)</source>
          <target state="translated">클러스터의 머신은 이러한 요구 사항을 충족해야합니다. (시스템이 하나라도 NTP와 시계를 동기화해야합니다.)</target>
        </trans-unit>
        <trans-unit id="7430dab4318b7b44d5d83b6d1975f36325231749" translate="yes" xml:space="preserve">
          <source>The machines' hostnames all differ, such that the module can do a hostname lookup on the hostname and receive a different IP address for each machine in the cluster.</source>
          <target state="translated">시스템의 호스트 이름은 모두 다르므로 모듈이 호스트 이름에서 호스트 이름 조회를 수행하고 클러스터의 각 시스템에 대해 다른 IP 주소를 수신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb16755d4ff59a4898feb1ea44a296907d97fe2f" translate="yes" xml:space="preserve">
          <source>The machines' times are synchronized via NTP or other network time protocol.</source>
          <target state="translated">기기 시간은 NTP 또는 기타 네트워크 시간 프로토콜을 통해 동기화됩니다.</target>
        </trans-unit>
        <trans-unit id="90feb257b8cf229942909918375d585e49b15167" translate="yes" xml:space="preserve">
          <source>The main difference with per-server rewrites is that the path prefix of the directory containing the &lt;code&gt;.htaccess&lt;/code&gt; file is stripped before matching in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;. In addition, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; should be used to assure the request is properly mapped.</source>
          <target state="translated">서버 별 다시 쓰기의 주요 차이점은 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 포함하는 디렉토리의 경로 접두사가 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 에서 일치하기 전에 제거 된다는 것 입니다. 또한 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; 를 사용하여 요청이 올바르게 매핑되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="527d8cce5e41511a1d7d8e5a709c6ee2223c8ce2" translate="yes" xml:space="preserve">
          <source>The main differences in Apache for NetWare are:</source>
          <target state="translated">NetWare 용 Apache의 주요 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7abf4c5229c52c53daff3a130159d24b410252df" translate="yes" xml:space="preserve">
          <source>The main differences in Apache for Windows are:</source>
          <target state="translated">Windows 용 Apache의 주요 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db9910fced3043633ed628335df0824f8d31096c" translate="yes" xml:space="preserve">
          <source>The main disadvantage is that you cannot have a different log file for each virtual host; however, if you have many virtual hosts, doing this can be a bad idea anyway, because of the &lt;a href=&quot;fd-limits&quot;&gt;number of file descriptors needed&lt;/a&gt;. It is better to &lt;a href=&quot;../logs#piped&quot;&gt;log to a pipe or a fifo&lt;/a&gt;, and arrange for the process at the other end to split up the log files into one per virtual host. One example of such a process can be found in the &lt;a href=&quot;../programs/split-logfile&quot;&gt;split-logfile&lt;/a&gt; utility.</source>
          <target state="translated">가장 큰 단점은 각 가상 호스트마다 다른 로그 파일을 가질 수 없다는 것입니다. 그러나 가상 호스트가 많은 경우 &lt;a href=&quot;fd-limits&quot;&gt;필요한 파일 디스크립터 수&lt;/a&gt; 때문에이 작업을 수행하는 것은 좋지 않습니다 . &lt;a href=&quot;../logs#piped&quot;&gt;파이프 또는 fifo&lt;/a&gt; 에 로그 하고 다른 쪽 끝에있는 프로세스가 로그 파일을 가상 호스트 당 하나씩 나누도록 준비하는 것이 좋습니다. 이러한 프로세스의 한 예는 &lt;a href=&quot;../programs/split-logfile&quot;&gt;split-logfile&lt;/a&gt; 유틸리티 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6e4fae1a0a4fe51d542056762f1e1164b26fb95" translate="yes" xml:space="preserve">
          <source>The main exception is when the URL path on the proxy differs from that on the backend. In this case, a redirect header can be rewritten relative to the original host URL (not the backend &lt;code&gt;ajp://&lt;/code&gt; URL), for example:</source>
          <target state="translated">주요 예외는 프록시의 URL 경로가 백엔드의 URL 경로와 다른 경우입니다. 이 경우, 원래 호스트 URL (백엔드 &lt;code&gt;ajp://&lt;/code&gt; URL이 아님)을 기준으로 리디렉션 헤더를 다시 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b267a1e0c9259c597e20f196744af3e8cbaee00" translate="yes" xml:space="preserve">
          <source>The main file is &lt;code&gt;mod_example_hooks.c&lt;/code&gt;, which illustrates all the different callback mechanisms and call syntaxes. By no means does an add-on module need to include routines for all of the callbacks - quite the contrary!</source>
          <target state="translated">기본 파일은 &lt;code&gt;mod_example_hooks.c&lt;/code&gt; 이며, 서로 다른 모든 콜백 메커니즘과 호출 구문을 보여줍니다. 추가 기능 모듈이 모든 콜백에 대한 루틴을 포함 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="41ae626b7a60833061db9b61c3b531877bad7302" translate="yes" xml:space="preserve">
          <source>The main server is only used to serve a request if the IP address and port number to which the client connected does not match any vhost (including a &lt;code&gt;*&lt;/code&gt; vhost). In other words, the main server only catches a request for an unspecified address/port combination (unless there is a &lt;code&gt;_default_&lt;/code&gt; vhost which matches that port).</source>
          <target state="translated">주 서버는 클라이언트가 연결된 IP 주소 및 포트 번호가 호스트 ( &lt;code&gt;*&lt;/code&gt; vhost 포함)와 일치하지 않는 경우에만 요청을 처리하는 데 사용됩니다 . 즉, 주 서버는 지정되지 않은 주소 / 포트 조합에 대한 요청 만 포착합니다 ( 해당 포트와 일치 하는 &lt;code&gt;_default_&lt;/code&gt; vhost 가없는 경우 ).</target>
        </trans-unit>
        <trans-unit id="564add9bf0a070f361e490a714723ea161d8899e" translate="yes" xml:space="preserve">
          <source>The main thread is responsible for launching child worker threads which listen for connections and serve them when they arrive. Apache HTTP Server always tries to maintain several</source>
          <target state="translated">메인 스레드는 연결을 수신하고 도착할 때이를 처리하는 하위 작업자 스레드를 시작하는 역할을합니다. Apache HTTP Server는 항상 여러 가지를 유지하려고합니다.</target>
        </trans-unit>
        <trans-unit id="48d6900510f87ad7946ee98ef0c072caaa6cc267" translate="yes" xml:space="preserve">
          <source>The major thing that influences the response being PUSHed is the request that was simulated. The request URL for a PUSH is given by the application, but where do the request headers come from? For example, will the PUSH request a &lt;code&gt;accept-language&lt;/code&gt; header and if yes with what value?</source>
          <target state="translated">푸시되는 응답에 영향을 미치는 주요 사항은 시뮬레이션 된 요청입니다. PUSH의 요청 URL은 애플리케이션에서 제공하지만 요청 헤더는 어디에서 제공됩니까? 예를 들어, PUSH는 &lt;code&gt;accept-language&lt;/code&gt; 헤더를 요청하고 예인 경우 어떤 값으로 요청합니까?</target>
        </trans-unit>
        <trans-unit id="2d3167940be95c368cdca2b50d02ff2d39dc719d" translate="yes" xml:space="preserve">
          <source>The map file lists redirection targets for each referer, or, if we just wish to redirect back to where they came from, a &quot;-&quot; is placed in the map:</source>
          <target state="translated">지도 파일에는 각 참조 자에 대한 리디렉션 대상이 나열되거나 원래 위치로 다시 리디렉션하려는 경우 &quot;-&quot;가 맵에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="d647f47a9192ab9f3b852a88453de8d4f12779ba" translate="yes" xml:space="preserve">
          <source>The mapping between configuration directives used by Apache-SSL 1.x and mod_ssl 2.0.x is given in &lt;a href=&quot;#table1&quot;&gt;Table 1&lt;/a&gt;. The mapping from Sioux 1.x and Stronghold 2.x is only partial because of special functionality in these interfaces which mod_ssl doesn't provide.</source>
          <target state="translated">Apache-SSL 1.x와 mod_ssl 2.0.x에서 사용되는 구성 지시문 간의 맵핑이 &lt;a href=&quot;#table1&quot;&gt;표 1에&lt;/a&gt; 제공되어 있습니다. Sioux 1.x 및 Stronghold 2.x의 매핑은 mod_ssl이 제공하지 않는 이러한 인터페이스의 특수 기능으로 인해 일부만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e68975c2c6183d96a489465accf446a62d8a9800" translate="yes" xml:space="preserve">
          <source>The mapping between environment variable names used by the older SSL solutions and the names used by mod_ssl is given in &lt;a href=&quot;#table2&quot;&gt;Table 2&lt;/a&gt;.</source>
          <target state="translated">이전 SSL 솔루션에서 사용 된 환경 변수 이름과 mod_ssl에서 사용되는 이름 사이의 맵핑은 &lt;a href=&quot;#table2&quot;&gt;표 2&lt;/a&gt; 에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="eec725c7bf7d14b49447fecc135e55048e26d8e0" translate="yes" xml:space="preserve">
          <source>The maximum file size in followed by exactly one of the letters &lt;code&gt;B&lt;/code&gt; (Bytes), &lt;code&gt;K&lt;/code&gt; (KBytes), &lt;code&gt;M&lt;/code&gt; (MBytes) or &lt;code&gt;G&lt;/code&gt; (GBytes).</source>
          <target state="translated">최대 파일 크기 다음에 문자 &lt;code&gt;B&lt;/code&gt; (바이트), &lt;code&gt;K&lt;/code&gt; (KB), &lt;code&gt;M&lt;/code&gt; (MBytes) 또는 &lt;code&gt;G&lt;/code&gt; (GBytes) 중 정확히 하나가옵니다 .</target>
        </trans-unit>
        <trans-unit id="2162d2bcae692c1ee944afc01a33fa8a59f91ff4" translate="yes" xml:space="preserve">
          <source>The maximum freshness lifetime may also be controlled by using the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachemaxexpire&quot;&gt;CacheMaxExpire&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 신선도 수명은 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachemaxexpire&quot;&gt;CacheMaxExpire&lt;/a&gt;&lt;/code&gt; 를 사용하여 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="929d38b62af775fc3b8d14243e321dd39ef9a867" translate="yes" xml:space="preserve">
          <source>The maximum length of a line in normal configuration files, after variable substitution and joining any continued lines, is approximately 16 MiB. In &lt;a href=&quot;configuring#htaccess&quot;&gt;.htaccess files&lt;/a&gt;, the maximum length is 8190 characters.</source>
          <target state="translated">변수 대체 및 연속 행 결합 후 일반 구성 파일에서 최대 행 길이는 약 16MiB입니다. 에서 &lt;a href=&quot;configuring#htaccess&quot;&gt;.htaccess 파일&lt;/a&gt; , 최대 길이는 8190 자입니다.</target>
        </trans-unit>
        <trans-unit id="20c406746afcb464316717b9560a1561dcb93dd0" translate="yes" xml:space="preserve">
          <source>The maximum length of the queue of pending connections. Generally no tuning is needed or desired, however on some systems it is desirable to increase this when under a TCP SYN flood attack. See the backlog parameter to the &lt;code&gt;listen(2)&lt;/code&gt; system call.</source>
          <target state="translated">보류중인 연결 큐의 최대 길이 일반적으로 튜닝이 필요하지 않거나 바람직하지는 않지만 일부 시스템에서는 TCP SYN 플러드 공격을받는 경우이를 늘리는 것이 좋습니다. &lt;code&gt;listen(2)&lt;/code&gt; 시스템 호출에 대한 백 로그 매개 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba27e392fdbb1b4d4103c712230ccb90f5770ebc" translate="yes" xml:space="preserve">
          <source>The maximum line size handled by &lt;code&gt;&lt;a href=&quot;mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; is limited to restrict memory use. The limit can be configured using &lt;code&gt;SubstituteMaxLineLength&lt;/code&gt;. The value can be given as the number of bytes and can be suffixed with a single letter &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;K&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt; to provide the size in bytes, kilobytes, megabytes or gigabytes respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; 이 처리하는 최대 라인 크기 는 메모리 사용을 제한하기 위해 제한됩니다. &lt;code&gt;SubstituteMaxLineLength&lt;/code&gt; 를 사용하여 제한을 구성 할 수 있습니다 . 값은 바이트 수로 제공 될 수 있으며 단일 문자 &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;k&lt;/code&gt; , &lt;code&gt;K&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; , &lt;code&gt;M&lt;/code&gt; , &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;G&lt;/code&gt; 로 접미어를 붙여 각각 바이트, 킬로바이트, 메가 바이트 또는 기가 바이트 단위로 크기를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98a21599e68cb6a3771a292622887f58dd596166" translate="yes" xml:space="preserve">
          <source>The maximum number of PHP-FPM worker processes needs to be configured wisely, since there is the chance that they will all end up &quot;busy&quot; handling idle persistent connections, without any room for new ones to be established, and the end user experience will be a pile of HTTP request timeouts.</source>
          <target state="translated">PHP-FPM 작업자 프로세스의 최대 수는 현명하게 구성해야합니다. 새로운 프로세스를 구축 할 여지없이 유휴 영구 연결을 처리하는 &quot;바쁜&quot;상태가되고 최종 사용자 경험이 향상 될 수 있기 때문입니다. HTTP 요청 시간 초과 더미입니다.</target>
        </trans-unit>
        <trans-unit id="adbb96ff17488c57f5bac37f9f5bae97a056f3ca" translate="yes" xml:space="preserve">
          <source>The maximum number of referral hops to chase before terminating an LDAP query.</source>
          <target state="translated">LDAP 쿼리를 종료하기 전에 추적 할 최대 참조 홉 수입니다.</target>
        </trans-unit>
        <trans-unit id="158a86454a3151572f700538f72642ac10f36d37" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of a document to be placed in the cache</source>
          <target state="translated">캐시에 배치 할 문서의 최대 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="8d51bc350bd96555d7d992e4f08afa9dc8b2ca1c" translate="yes" xml:space="preserve">
          <source>The maximum size (in bytes) of an entry to be placed in the cache</source>
          <target state="translated">캐시에 배치 할 항목의 최대 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="f640ae73e4779a12a115056cd07efec329d58171" translate="yes" xml:space="preserve">
          <source>The maximum time (in seconds) for a document to be placed in the cache</source>
          <target state="translated">캐시에 문서를 배치 할 최대 시간 (초)</target>
        </trans-unit>
        <trans-unit id="d4c3d7993c9fcf7b2aaf15f65fbbbd4bbfb38fed" translate="yes" xml:space="preserve">
          <source>The maximum time in seconds to cache a document</source>
          <target state="translated">문서를 캐시하는 최대 시간 (초)</target>
        </trans-unit>
        <trans-unit id="87d5195fac478003e0a9d0f41b7c0d46cff443f1" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;em&gt;MapTypeOptions&lt;/em&gt; argument depends on particular &lt;em&gt;MapType&lt;/em&gt;. See the &lt;a href=&quot;../rewrite/rewritemap&quot;&gt;Using RewriteMap&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;em&gt;MapTypeOptions&lt;/em&gt; 인수 의 의미는 특정 &lt;em&gt;MapType에&lt;/em&gt; 따라 다릅니다 . 자세한 내용은 &lt;a href=&quot;../rewrite/rewritemap&quot;&gt;RewriteMap 사용&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f49a2e78f10dc518cbdeb1ee0a574e83ee6644c3" translate="yes" xml:space="preserve">
          <source>The meaning of the pattern can be modified by using any combination of these flags:</source>
          <target state="translated">이 플래그의 조합을 사용하여 패턴의 의미를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b50916f3871d4aef6347dee7b92aac7fd6a199b" translate="yes" xml:space="preserve">
          <source>The merging of configuration sections is complicated and sometimes directive specific. Always test your changes when creating dependencies on how directives are merged.</source>
          <target state="translated">구성 섹션의 병합은 복잡하고 때로는 지시문에 따라 다릅니다. 지시문 병합 방법에 대한 종속성을 만들 때는 항상 변경 사항을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="bd6f48f8c22a11618875af7cc8d4aaec26375c11" translate="yes" xml:space="preserve">
          <source>The message digest is used to create a Message Authentication Code (MAC) which is encrypted with the message to verify integrity and to protect against replay attacks.</source>
          <target state="translated">메시지 요약은 무결성을 확인하고 재생 공격으로부터 보호하기 위해 메시지로 암호화 된 MAC (Message Authentication Code)을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="196b06e120358e16a01cadf78351da9ffef06edf" translate="yes" xml:space="preserve">
          <source>The method names listed can be one or more of: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;CONNECT&lt;/code&gt;, &lt;code&gt;OPTIONS&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, and &lt;code&gt;UNLOCK&lt;/code&gt;. &lt;strong&gt;The method name is case-sensitive.&lt;/strong&gt; If &lt;code&gt;GET&lt;/code&gt; is used, it will also restrict &lt;code&gt;HEAD&lt;/code&gt; requests. The &lt;code&gt;TRACE&lt;/code&gt; method cannot be limited (see &lt;code&gt;&lt;a href=&quot;#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">나열된 메소드 이름은 &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;CONNECT&lt;/code&gt; , &lt;code&gt;OPTIONS&lt;/code&gt; , &lt;code&gt;PATCH&lt;/code&gt; , &lt;code&gt;PROPFIND&lt;/code&gt; , &lt;code&gt;PROPPATCH&lt;/code&gt; , &lt;code&gt;MKCOL&lt;/code&gt; , &lt;code&gt;COPY&lt;/code&gt; , &lt;code&gt;MOVE&lt;/code&gt; , &lt;code&gt;LOCK&lt;/code&gt; , &lt;code&gt;UNLOCK&lt;/code&gt; 중 하나 이상일 수 있습니다 . &lt;strong&gt;메소드 이름은 대소 문자를 구분합니다.&lt;/strong&gt; 경우 &lt;code&gt;GET&lt;/code&gt; 가 사용되며, 또한 제한됩니다 &lt;code&gt;HEAD&lt;/code&gt; 의 요청을. &lt;code&gt;TRACE&lt;/code&gt; 의 방법 (참조 제한 될 수 &lt;code&gt;&lt;a href=&quot;#traceenable&quot;&gt;TraceEnable&lt;/a&gt;&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="3609dbaf591cee1ce78eb65ea60fdcbf5556e19a" translate="yes" xml:space="preserve">
          <source>The minimum group ID number is specified during configuration. This allows you to set the lowest possible groupid that will be allowed to execute CGI/SSI programs. This is useful to block out &quot;system&quot; groups.</source>
          <target state="translated">최소 그룹 ID 번호는 구성 중에 지정됩니다. 이를 통해 CGI / SSI 프로그램을 실행할 수있는 가장 낮은 groupid를 설정할 수 있습니다. &quot;시스템&quot;그룹을 차단하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fcc5989ca64d2ff815975c06d2b10db55ee1c96f" translate="yes" xml:space="preserve">
          <source>The minimum size (in bytes) of a document to be placed in the cache</source>
          <target state="translated">캐시에 배치 할 문서의 최소 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="39756a012460e5e3f2c000adab6b0d114d363e59" translate="yes" xml:space="preserve">
          <source>The minimum size (in bytes) of the document to read and be cached before sending the data downstream</source>
          <target state="translated">데이터를 다운 스트림으로 보내기 전에 읽고 캐시 할 문서의 최소 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="b52d64b85934c4e74f65b4fa5e05c50eea4b801f" translate="yes" xml:space="preserve">
          <source>The minimum time (in milliseconds) that should elapse while reading before data is sent downstream</source>
          <target state="translated">데이터가 다운 스트림으로 전송되기 전에 읽는 동안 경과해야하는 최소 시간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="c31086f61d0258cb5f9e2da0c3d68ca802799234" translate="yes" xml:space="preserve">
          <source>The minimum time (in seconds) for a document to be placed in the cache</source>
          <target state="translated">캐시에 문서를 배치 할 최소 시간 (초)</target>
        </trans-unit>
        <trans-unit id="b48b4c075469c2f7baa07342ba48389dc7508703" translate="yes" xml:space="preserve">
          <source>The minimum time in seconds to cache a document</source>
          <target state="translated">문서를 캐시하는 최소 시간 (초)</target>
        </trans-unit>
        <trans-unit id="f883394c3c6bf7ca7445039b7a619202460c54c0" translate="yes" xml:space="preserve">
          <source>The minimum user ID number is specified during configuration. This allows you to set the lowest possible userid that will be allowed to execute CGI/SSI programs. This is useful to block out &quot;system&quot; accounts.</source>
          <target state="translated">최소 사용자 ID 번호는 구성 중에 지정됩니다. 이를 통해 CGI / SSI 프로그램을 실행할 수있는 가장 낮은 사용자 ID를 설정할 수 있습니다. &quot;시스템&quot;계정을 차단하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fa99cbba5f520688fcb7ce78f500e4be872d52a9" translate="yes" xml:space="preserve">
          <source>The minute part of the current time</source>
          <target state="translated">현재 시간의 분</target>
        </trans-unit>
        <trans-unit id="24167cb333cac931e3b41a4d490f84a7926e1946" translate="yes" xml:space="preserve">
          <source>The mod_ssl program version</source>
          <target state="translated">mod_ssl 프로그램 버전</target>
        </trans-unit>
        <trans-unit id="a60a9ecdf3af0808439ff2fd9040d89af2de474c" translate="yes" xml:space="preserve">
          <source>The modifiers &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot; can be used for requests that have been internally redirected to choose whether the original or final (respectively) request should be consulted. By default, the &lt;code&gt;%&lt;/code&gt; directives &lt;code&gt;%s, %U, %T, %D,&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt; look at the original request while all others look at the final request. So for example, &lt;code&gt;%&amp;gt;s&lt;/code&gt; can be used to record the final status of the request and &lt;code&gt;%&amp;lt;u&lt;/code&gt; can be used to record the original authenticated user on a request that is internally redirected to an unauthenticated resource.</source>
          <target state="translated">수정 자 &quot;&amp;lt;&quot;및 &quot;&amp;gt;&quot;는 원래 또는 최종 (각각) 요청을 참조해야하는지 여부를 선택하기 위해 내부적으로 리디렉션 된 요청에 사용할 수 있습니다. 기본적으로 &lt;code&gt;%&lt;/code&gt; 지시문 &lt;code&gt;%s, %U, %T, %D,&lt;/code&gt; 및 &lt;code&gt;%r&lt;/code&gt; 은 (는) 원래 요청을보고 다른 명령은 모두 최종 요청을 봅니다. 예를 들어 &lt;code&gt;%&amp;gt;s&lt;/code&gt; 를 사용하여 요청의 최종 상태를 기록하고 &lt;code&gt;%&amp;lt;u&lt;/code&gt; 를 사용하여 내부적으로 인증되지 않은 리소스로 리디렉션 된 요청에 대해 원래 인증 된 사용자를 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8909e8427d2e358dc3d93e3f0fa1d0215524ee97" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;../mod/mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; is both an authentication and authorization provider. The module &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; provides authorization and access control based on hostname, IP address or characteristics of the request, but is not part of the authentication provider system. For backwards compatibility with the mod_access, there is a new module &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 모듈 은 인증 및 권한 제공자입니다. &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; 모듈 은 호스트 이름, IP 주소 또는 요청의 특성에 따라 권한 부여 및 액세스 제어를 제공하지만 인증 제공자 시스템의 일부는 아닙니다. mod_access와의 호환성을 위해 새로운 모듈 &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3463f5e402272a371df6ea65adb41ab0779733da" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; should be part of the displayed list. If these requirements are fulfilled you can easily extend your Apache server's functionality by installing your own modules with the DSO mechanism by the help of this &lt;code&gt;apxs&lt;/code&gt; tool:</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; 는 표시된 목록의 일부 여야합니다. 이러한 요구 사항이 충족되면이 &lt;code&gt;apxs&lt;/code&gt; 도구를 사용하여 DSO 메커니즘을 사용하여 자체 모듈을 설치하여 Apache 서버의 기능을 쉽게 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9498bb1907a5f12658d00478dcd31e4bceb376b" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; implements stickyness on top of two alternative means: cookies and URL encoding. Providing the cookie can be either done by the back-end or by the Apache web server itself. The URL encoding is usually done on the back-end.</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; 는 쿠키와 URL 인코딩이라는 두 가지 대체 수단 위에 고 정성을 구현합니다. 쿠키 제공은 백엔드 또는 Apache 웹 서버 자체에서 수행 할 수 있습니다. URL 인코딩은 일반적으로 백엔드에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6ee3fdc16499b3620cdf8eab8caada9357f09f09" translate="yes" xml:space="preserve">
          <source>The module has a &lt;code&gt;proxy_fdpass_flusher&lt;/code&gt; provider interface, which allows another module to optionally send the response headers, or even the start of the response body. The default &lt;code&gt;flush&lt;/code&gt; provider disables keep-alive, and sends the response headers, letting the external process just send a response body.</source>
          <target state="translated">이 모듈에는 &lt;code&gt;proxy_fdpass_flusher&lt;/code&gt; 제공자 인터페이스가있어 다른 모듈이 응답 헤더 또는 응답 본문의 시작을 선택적으로 보낼 수 있습니다. 기본 &lt;code&gt;flush&lt;/code&gt; 공급자는 연결 유지를 비활성화하고 응답 헤더를 보내 외부 프로세스가 응답 본문을 보내도록합니다.</target>
        </trans-unit>
        <trans-unit id="bc6c1038b911f25e2d16cc91b4cf211c87c61171" translate="yes" xml:space="preserve">
          <source>The module overrides the client IP address for the connection with the useragent IP address reported in the request header configured with the &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">모듈은 &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; 지시문으로 구성된 요청 헤더에보고 된 useragent IP 주소와의 연결에 대한 클라이언트 IP 주소를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="4202ab1be3dde6bdd03f3f83388148482b40ade7" translate="yes" xml:space="preserve">
          <source>The module will keep a diary of what has been PUSHed for each connection (hashes of URLs, basically) and will not PUSH the same resource twice. When the connection closes, this information is discarded.</source>
          <target state="translated">모듈은 각 연결에 대해 PUSH 된 내용 (기본적으로 URL 해시)에 대한 일기를 유지하며 동일한 리소스를 두 번 PUSH하지 않습니다. 연결이 닫히면이 정보는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="852e902a68e9361d436e800a859edca04e11ce44" translate="yes" xml:space="preserve">
          <source>The module will select from the methods offered by Let's Encrypt. If LE decides at one point in the future, to re-enable it again, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will use it when suitable.</source>
          <target state="translated">모듈은 Let 's Encrypt에서 제공하는 방법 중에서 선택합니다. LE가 미래의 어느 시점에 결정하면 다시 활성화하기 위해 &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; 는 적절한 경우이를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="22ec897ced5050f06f66fa46e2a4685229e19767" translate="yes" xml:space="preserve">
          <source>The most basic form of caching present in httpd is the file-handle caching provided by &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt;. Rather than caching file-contents, this cache maintains a table of open file descriptors. Files to be cached in this manner are specified in the configuration file using the &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">httpd에 존재하는 가장 기본적인 캐싱 형태는 &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; 가 제공하는 파일 핸들 캐싱 입니다. 이 캐시는 파일 내용을 캐시하지 않고 열린 파일 디스크립터 테이블을 유지 보수합니다. 이러한 방식으로 캐시 될 파일은 &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 구성 파일에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="d4764918a41e02be19715b306e1a274b3844db7e" translate="yes" xml:space="preserve">
          <source>The most basic way to set an environment variable in Apache is using the unconditional &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; directive. Variables may also be passed from the environment of the shell which started the server using the &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">Apache에서 환경 변수를 설정하는 가장 기본적인 방법은 무조건 &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; 지시문을 사용하는 것 입니다. &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 서버를 시작한 쉘 환경에서 변수를 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecbdd8dfdecf459528118f61751b51d5aa28f3d5" translate="yes" xml:space="preserve">
          <source>The most common situation in which &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; is the right tool is when the very best solution requires access to the server configuration files, and you don't have that access. Some configuration directives are only available in the server configuration file. So if you are in a hosting situation where you only have .htaccess files to work with, you may need to resort to &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 가 올바른 도구 인 가장 일반적인 상황은 최상의 솔루션이 서버 구성 파일에 액세스해야하고 해당 액세스 권한이없는 경우입니다. 일부 구성 지시문은 서버 구성 파일에서만 사용할 수 있습니다. 따라서 작업 할 .htaccess 파일 만있는 호스팅 상황 인 경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="529edc310748634d844f97641e93aad60f10d6ff" translate="yes" xml:space="preserve">
          <source>The most commonly used configuration section containers are the ones that change the configuration of particular places in the filesystem or webspace. First, it is important to understand the difference between the two. The filesystem is the view of your disks as seen by your operating system. For example, in a default install, Apache httpd resides at &lt;code&gt;/usr/local/apache2&lt;/code&gt; in the Unix filesystem or &lt;code&gt;&quot;c:/Program Files/Apache Group/Apache2&quot;&lt;/code&gt; in the Windows filesystem. (Note that forward slashes should always be used as the path separator in Apache httpd configuration files, even for Windows.) In contrast, the webspace is the view of your site as delivered by the web server and seen by the client. So the path &lt;code&gt;/dir/&lt;/code&gt; in the webspace corresponds to the path &lt;code&gt;/usr/local/apache2/htdocs/dir/&lt;/code&gt; in the filesystem of a default Apache httpd install on Unix. The webspace need not map directly to the filesystem, since webpages may be generated dynamically from databases or other locations.</source>
          <target state="translated">가장 일반적으로 사용되는 구성 섹션 컨테이너는 파일 시스템 또는 웹 공간에서 특정 위치의 구성을 변경하는 컨테이너입니다. 첫째,이 둘의 차이점을 이해하는 것이 중요합니다. 파일 시스템은 운영 체제에서 볼 수있는 디스크의 모습입니다. 예를 들어, 기본 설치에서 Apache httpd는 Unix 파일 시스템의 &lt;code&gt;/usr/local/apache2&lt;/code&gt; 또는 Windows 파일 시스템의 &lt;code&gt;&quot;c:/Program Files/Apache Group/Apache2&quot;&lt;/code&gt; 에 있습니다. (슬래시는 Windows의 경우에도 Apache httpd 구성 파일에서 항상 경로 구분 기호로 사용되어야합니다.) 웹 공간은 웹 서버에서 제공하고 클라이언트가 볼 수있는 사이트의보기입니다. 따라서 웹 공간의 &lt;code&gt;/dir/&lt;/code&gt; 경로는 경로에 해당합니다. &lt;code&gt;/usr/local/apache2/htdocs/dir/&lt;/code&gt; Unix에 기본 Apache httpd 설치 파일 시스템의 / usr / local / apache2 / htdocs / dir / 웹 페이지는 데이터베이스 나 다른 위치에서 동적으로 생성 될 수 있으므로 웹 공간은 파일 시스템에 직접 매핑 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9626cf23528c8d129429bbf49c60caf5f1c21c75" translate="yes" xml:space="preserve">
          <source>The most important directives used to control this MPM are &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;, which controls the number of threads deployed by each child process and &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt;, which controls the maximum total number of threads that may be launched.</source>
          <target state="translated">이 MPM을 제어하는 ​​데 사용되는 가장 중요한 지시문 은 각 하위 프로세스에서 배치 한 스레드 수를 제어하는 &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; 및 시작될 수있는 최대 총 스레드 수를 제어하는 &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8bdee00562d7e50d7048e5736e512d73f266dbc" translate="yes" xml:space="preserve">
          <source>The most important option is the location &lt;code&gt;--prefix&lt;/code&gt; where Apache is to be installed later, because Apache has to be configured for this location to work correctly. More fine-tuned control of the location of files is possible with additional &lt;a href=&quot;programs/configure#installationdirectories&quot;&gt;configure options&lt;/a&gt;.</source>
          <target state="translated">가장 중요한 옵션은 이 위치가 올바르게 작동하도록 Apache를 구성해야하기 때문에 나중에 Apache를 설치할 위치 인 &lt;code&gt;--prefix&lt;/code&gt; 위치입니다. 추가 &lt;a href=&quot;programs/configure#installationdirectories&quot;&gt;구성 옵션을 사용&lt;/a&gt; 하여 파일 위치를보다 정밀하게 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="597db5f46214c8a2c0a58225b6d722ece75022d4" translate="yes" xml:space="preserve">
          <source>The name of a directory or a pattern such as those shown below.</source>
          <target state="translated">디렉토리 이름 또는 아래와 같은 패턴.</target>
        </trans-unit>
        <trans-unit id="e451ea027c995144ec53e1a9a48938c55519b46a" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying a URL to redirect to on successful login</source>
          <target state="translated">성공적인 로그인시 리디렉션 할 URL을 포함하는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="56781fdca5a08149a20fd4edcbdb5eacbc3606ec" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the body of the request to attempt on successful login</source>
          <target state="translated">성공적인 로그인 시도 요청 본문을 포함하는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="ec987c8ba813a6ab05d3f46be5c2d48be2592e95" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the login password</source>
          <target state="translated">로그인 비밀번호가있는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="7a1d56006a590775be88732e126fb5db7c5a87fa" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the login username</source>
          <target state="translated">로그인 사용자 이름을 포함하는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="89fb18940a8b79a2c9079866c4305aea2373da70" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the method of the request to attempt on successful login</source>
          <target state="translated">성공적인 로그인 시도 요청 방법을 포함하는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="c417bdcd69f087fd6b1c3b4888f400ff88234093" translate="yes" xml:space="preserve">
          <source>The name of a form field carrying the mimetype of the body of the request to attempt on successful login</source>
          <target state="translated">성공적인 로그인 시도 요청 본문의 MIME 유형을 포함하는 양식 필드의 이름</target>
        </trans-unit>
        <trans-unit id="53773d139ae0f09c7605c9e0d9a9aa1a00455bce" translate="yes" xml:space="preserve">
          <source>The name of an environment variable in the list of those associated with the request. This allows &lt;code&gt;SetEnvIf&lt;/code&gt; directives to test against the result of prior matches. Only those environment variables defined by earlier &lt;code&gt;SetEnvIf[NoCase]&lt;/code&gt; directives are available for testing in this manner. 'Earlier' means that they were defined at a broader scope (such as server-wide) or previously in the current directive's scope. Environment variables will be considered only if there was no match among request characteristics and a regular expression was not used for the &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">요청과 연관된 변수 목록에서 환경 변수의 이름입니다. 이를 통해 &lt;code&gt;SetEnvIf&lt;/code&gt; 지시문이 이전 일치 결과에 대해 테스트 할 수 있습니다 . 이전 방식의 &lt;code&gt;SetEnvIf[NoCase]&lt;/code&gt; 지시문으로 정의 된 환경 변수 만이 방식으로 테스트 할 수 있습니다. '이전'은 더 넓은 범위 (예 : 서버 전체) 또는 이전에 현재 지시문의 범위에서 정의되었음을 의미합니다. 환경 변수는 요청 특성간에 일치가없고 정규식이 &lt;em&gt;속성에&lt;/em&gt; 사용되지 않은 경우에만 고려됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd3721157e6d2940e37c5bc4f0db96055edfafbe" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;../handler&quot;&gt;handler&lt;/a&gt; that should serve this request, f.x. &lt;code&gt;lua-script&lt;/code&gt; if it is to be served by mod_lua. This is typically set by the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; directives, but could also be set via mod_lua to allow another handler to serve up a specific request that would otherwise not be served by it.</source>
          <target state="translated">이 요청을 처리해야하는 &lt;a href=&quot;../handler&quot;&gt;핸들러&lt;/a&gt; 의 이름 , mod_lua가 제공 할 경우 fx &lt;code&gt;lua-script&lt;/code&gt; . 이것은 일반적으로 &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; 지시문에 의해 설정 되지만 mod_lua를 통해 설정하여 다른 핸들러가 제공하지 않는 특정 요청을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="3671c45191b386ab290c880bedb8b2f772c8997f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;handler&quot;&gt;handler&lt;/a&gt; creating the response</source>
          <target state="translated">응답을 작성하는 &lt;a href=&quot;handler&quot;&gt;핸들러&lt;/a&gt; 의 이름</target>
        </trans-unit>
        <trans-unit id="e1872ad1b1a5169d151629d868f0355344d75fd2" translate="yes" xml:space="preserve">
          <source>The name of the authenticated user, if any (not available during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">인증 된 사용자의 이름 (있는 &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="570f391ec12fd4e8122950a2d9087b6e02fcdc2b" translate="yes" xml:space="preserve">
          <source>The name of the cookie or request parameter used to lookup the routing information.</source>
          <target state="translated">라우팅 정보를 조회하는 데 사용되는 쿠키 또는 요청 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="20ea0eb02e096a37dd58b996376a0180e15ea409" translate="yes" xml:space="preserve">
          <source>The name of the system group that owns the file must be present in a group database, which is provided, for example, by &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_authz_dbm&quot;&gt;mod_authz_dbm&lt;/a&gt;&lt;/code&gt;, and the web-username must be a member of that group. For example, if the operating system says the requested file is owned by (system) group &lt;code&gt;accounts&lt;/code&gt;, the group &lt;code&gt;accounts&lt;/code&gt; must appear in the group database and the web-username used in the request must be a member of that group.</source>
          <target state="translated">파일을 소유 한 시스템 그룹의 이름은 그룹 데이터베이스 (예 : &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_authz_dbm&quot;&gt;mod_authz_dbm&lt;/a&gt;&lt;/code&gt; )에 제공되어야하며 웹 사용자 이름은 해당 그룹의 구성원이어야합니다. 예를 들어, 운영 체제에서 요청 된 파일이 (시스템) 그룹 &lt;code&gt;accounts&lt;/code&gt; 소유라고 표시 하면 그룹 &lt;code&gt;accounts&lt;/code&gt; 이 그룹 데이터베이스에 나타나고 요청에 사용 된 웹 사용자 이름이 해당 그룹의 구성원이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e7be4a12cde9116e7d831fc3f588007d5dc0ae9e" translate="yes" xml:space="preserve">
          <source>The name of the variable to set.</source>
          <target state="translated">설정할 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="16445eae44ae2397b84bb555afa8b84aea658da5" translate="yes" xml:space="preserve">
          <source>The name stems from the &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;Security/Server Side TLS&lt;/a&gt; definitions at mozilla where &quot;modern compatibility&quot; is defined. Mozilla Firefox and other browsers require modern compatibility for HTTP/2 connections. As everything in OpSec, this is a moving target and can be expected to evolve in the future.</source>
          <target state="translated">이름은 &quot;현대 호환성&quot;이 정의 된 mozilla 의 &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS&quot;&gt;보안 / 서버 측 TLS&lt;/a&gt; 정의에서 유래합니다 . Mozilla Firefox 및 기타 브라우저는 최신 HTTP / 2 연결 호환성이 필요합니다. OpSec의 모든 것과 마찬가지로, 이것은 움직이는 목표이며 앞으로 발전 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="45654a4828950041d054d70639b74063e27f605a" translate="yes" xml:space="preserve">
          <source>The name-based vhost with the hostname &lt;code&gt;www.example.org&lt;/code&gt; (from our &lt;a href=&quot;#name&quot;&gt;name-based&lt;/a&gt; example, setup 2) should get its own IP address. To avoid problems with name servers or proxies who cached the old IP address for the name-based vhost we want to provide both variants during a migration phase.</source>
          <target state="translated">호스트 이름이 &lt;code&gt;www.example.org&lt;/code&gt; 인 이름 기반 vhost ( &lt;a href=&quot;#name&quot;&gt;이름 기반&lt;/a&gt; 예제에서 설정 2)는 자체 IP 주소를 가져와야합니다. 이름 기반 가상 호스트의 이전 IP 주소를 캐시 한 이름 서버 또는 프록시 문제를 방지하기 위해 마이그레이션 단계에서 두 가지 변형을 모두 제공하려고합니다.</target>
        </trans-unit>
        <trans-unit id="5a99391ea375b277eb2988d1bd9434ea83c65768" translate="yes" xml:space="preserve">
          <source>The name/port of the ldap server (defaults to &lt;code&gt;localhost:389&lt;/code&gt; for &lt;code&gt;ldap&lt;/code&gt;, and &lt;code&gt;localhost:636&lt;/code&gt; for &lt;code&gt;ldaps&lt;/code&gt;). To specify multiple, redundant LDAP servers, just list all servers, separated by spaces. &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will try connecting to each server in turn, until it makes a successful connection. If multiple ldap servers are specified, then entire LDAP URL must be encapsulated in double quotes.</source>
          <target state="translated">LDAP 서버의 이름 / 포트 (기본값은 &lt;code&gt;localhost:389&lt;/code&gt; 에 대한 &lt;code&gt;ldap&lt;/code&gt; 및 &lt;code&gt;localhost:636&lt;/code&gt; 에 대한 &lt;code&gt;ldaps&lt;/code&gt; ). 여러 개의 중복 LDAP 서버를 지정하려면 모든 서버를 공백으로 구분하여 나열하십시오. &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 는 성공적으로 연결될 때까지 각 서버에 차례로 연결을 시도합니다. 여러 LDAP 서버가 지정된 경우 전체 LDAP URL을 큰 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="f45433dca3d7c2de43781517539fcea6120be7e2" translate="yes" xml:space="preserve">
          <source>The net effect is equivalent to &lt;code&gt;IndexOptions FancyIndexing +SuppressSize&lt;/code&gt;, because the unprefixed &lt;code&gt;FancyIndexing&lt;/code&gt; discarded the incremental keywords before it, but allowed them to start accumulating again afterward.</source>
          <target state="translated">순 효과는 &lt;code&gt;IndexOptions FancyIndexing +SuppressSize&lt;/code&gt; 와 동일 합니다. 접두사가없는 &lt;code&gt;FancyIndexing&lt;/code&gt; 은 증분 키워드를 삭제하기 전에 삭제했지만 나중에 다시 누적을 시작할 수 있었기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="f86068ce3f7dae1fd16071e70273d10143251fd9" translate="yes" xml:space="preserve">
          <source>The new &lt;em&gt;URL&lt;/em&gt; may be either an absolute URL beginning with a scheme and hostname, or a URL-path beginning with a slash. In this latter case the scheme and hostname of the current server will be added.</source>
          <target state="translated">새 &lt;em&gt;URL&lt;/em&gt; 은 체계 및 호스트 이름으로 시작하는 절대 URL이거나 슬래시로 시작하는 URL 경로 일 수 있습니다. 후자의 경우 현재 서버의 구성표와 호스트 이름이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="669243567979f2dc30ba398988598d8e3bff303f" translate="yes" xml:space="preserve">
          <source>The next example assumes that everyone at Example who carries an alphanumeric pager will have an LDAP attribute of &lt;code&gt;qpagePagerID&lt;/code&gt;. The example will grant access only to people (authenticated via their UID) who have alphanumeric pagers:</source>
          <target state="translated">다음 예제에서는 영숫자 호출기를 보유한 Example의 모든 사용자가 &lt;code&gt;qpagePagerID&lt;/code&gt; 의 LDAP 속성을 갖도록 가정 합니다. 이 예제는 영숫자 호출기를 가진 사람 (UID를 통해 인증 된 사람)에게만 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="9941707bedd25e000c194290638e6a803cd244f9" translate="yes" xml:space="preserve">
          <source>The next example demonstrates the power of using filters to accomplish complicated administrative requirements. Without filters, it would have been necessary to create a new LDAP group and ensure that the group's members remain synchronized with the pager users. This becomes trivial with filters. The goal is to grant access to anyone who has a pager, plus grant access to Joe Manager, who doesn't have a pager, but does need to access the same resource:</source>
          <target state="translated">다음 예는 복잡한 관리 요구 사항을 달성하기 위해 필터를 사용하는 힘을 보여줍니다. 필터가 없으면 새 LDAP 그룹을 작성하고 그룹 구성원이 호출기 사용자와 동기화 된 상태를 유지해야합니다. 이것은 필터로 사소한 것이됩니다. 목표는 호출기가있는 모든 사람에게 액세스 권한을 부여하고 호출기가없는 Joe Manager에 대한 액세스 권한을 부여하지만 동일한 자원에 액세스해야하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="030227afc3da4b73caa77a248a7b19d15ee12e24" translate="yes" xml:space="preserve">
          <source>The next example is similar to the previous one, but it uses the common name instead of the UID. Note that this could be problematical if multiple people in the directory share the same &lt;code&gt;cn&lt;/code&gt;, because a search on &lt;code&gt;cn&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return exactly one entry. That's why this approach is not recommended: it's a better idea to choose an attribute that is guaranteed unique in your directory, such as &lt;code&gt;uid&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 이전 예제와 비슷하지만 UID 대신 일반 이름을 사용합니다. 디렉토리 공유에 여러 사람이 같은 경우이 problematical 될 수 있습니다 &lt;code&gt;cn&lt;/code&gt; 에 검색 때문에 &lt;code&gt;cn&lt;/code&gt; &lt;strong&gt;있어야&lt;/strong&gt; 정확히 하나의 항목을 반환합니다. 그렇기 때문에이 방법이 권장되지 않습니다. &lt;code&gt;uid&lt;/code&gt; 와 같이 디렉토리에서 고유 한 속성을 선택하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="076b31b433ab3b8cbc5bec2e4a0b915a36e5402c" translate="yes" xml:space="preserve">
          <source>The next example is the same as above; but with the fields that have useful defaults omitted. Also, note the use of a redundant LDAP server.</source>
          <target state="translated">다음 예제는 위와 같습니다. 그러나 유용한 기본값을 가진 필드는 생략합니다. 또한 중복 LDAP 서버 사용에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="1acd11b358ff03b071d2f32a5f764985aa1d7b5e" translate="yes" xml:space="preserve">
          <source>The next step is to configure the Apache source tree for your particular platform and personal requirements. This is done using the script &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; included in the root directory of the distribution. (Developers downloading an unreleased version of the Apache source tree will need to have &lt;code&gt;autoconf&lt;/code&gt; and &lt;code&gt;libtool&lt;/code&gt; installed and will need to run &lt;code&gt;buildconf&lt;/code&gt; before proceeding with the next steps. This is not necessary for official releases.)</source>
          <target state="translated">다음 단계는 특정 플랫폼 및 개인 요구 사항에 맞게 Apache 소스 트리를 구성하는 것입니다. 이는 배포의 루트 디렉토리에 포함 된 스크립트 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 사용하여 수행됩니다 . 출시되지 않은 Apache 소스 트리 버전을 다운로드하는 개발자는 &lt;code&gt;autoconf&lt;/code&gt; 및 &lt;code&gt;libtool&lt;/code&gt; 이 설치되어 있어야하며 다음 단계를 진행하기 전에 &lt;code&gt;buildconf&lt;/code&gt; 를 실행해야 합니다. 공식 릴리스에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef24b5eb21085d1d3fb86ad73b1849863f645d05" translate="yes" xml:space="preserve">
          <source>The notes supported are as follows:</source>
          <target state="translated">지원되는 메모는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4866537b8f6d3bd1f807d90e1dce9f4781fcf3a6" translate="yes" xml:space="preserve">
          <source>The number of bytes in the file will be included</source>
          <target state="translated">파일의 바이트 수가 포함됩니다</target>
        </trans-unit>
        <trans-unit id="639e2aa805b70a06f14317f4d8fb1cda4c70dc55" translate="yes" xml:space="preserve">
          <source>The number of bytes remaining to be read from the request body.</source>
          <target state="translated">요청 본문에서 읽을 나머지 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="c4b4f9ad9781dc299732b1de8cad3e5e5ea57338" translate="yes" xml:space="preserve">
          <source>The number of characters in subdirectory names</source>
          <target state="translated">서브 디렉토리 이름의 문자 수</target>
        </trans-unit>
        <trans-unit id="0573b78695480f6d064c2c87029587285583eb6b" translate="yes" xml:space="preserve">
          <source>The number of concurrent clients used during the test</source>
          <target state="translated">테스트 중에 사용 된 동시 클라이언트 수</target>
        </trans-unit>
        <trans-unit id="008fc58dbc145cc1469374aed53993b5164950a4" translate="yes" xml:space="preserve">
          <source>The number of connections that resulted in Keep-Alive requests</source>
          <target state="translated">연결 유지 요청을 초래 한 연결 수</target>
        </trans-unit>
        <trans-unit id="198b49e14b4da225082feaf17347303119c39188" translate="yes" xml:space="preserve">
          <source>The number of errors that failed during write (broken pipe).</source>
          <target state="translated">쓰기 중 실패한 오류 수 (파손 된 파이프).</target>
        </trans-unit>
        <trans-unit id="8dca667d321023d3918e212c41bd581204f64ffd" translate="yes" xml:space="preserve">
          <source>The number of file descriptors required exceeds the hard limit.</source>
          <target state="translated">필요한 파일 디스크립터 수가 하드 한계를 초과합니다.</target>
        </trans-unit>
        <trans-unit id="452aef4ce80d8e9323cc08c168b3a1d77cd28142" translate="yes" xml:space="preserve">
          <source>The number of idle worker</source>
          <target state="translated">유휴 근로자 수</target>
        </trans-unit>
        <trans-unit id="f535135fba7ba4cf5fb0654238c38d5de691f1ae" translate="yes" xml:space="preserve">
          <source>The number of levels of subdirectories in the cache.</source>
          <target state="translated">캐시의 하위 디렉토리 레벨 수입니다.</target>
        </trans-unit>
        <trans-unit id="8c05616e583f5f9f429e755515de872a68bd2457" translate="yes" xml:space="preserve">
          <source>The number of minutes offset from UTC. If omitted, zero is assumed and UTC is used. For example, to use local time in the zone UTC -5 hours, specify a value of &lt;code&gt;-300&lt;/code&gt; for this argument. In most cases, &lt;code&gt;-l&lt;/code&gt; should be used instead of specifying an offset.</source>
          <target state="translated">UTC에서 분 단위의 오프셋입니다. 생략하면 0이 가정되고 UTC가 사용됩니다. 예를 들어 UTC -5 시간 영역에서 현지 시간을 사용하려면 이 인수 에 &lt;code&gt;-300&lt;/code&gt; 값을 지정하십시오 . 대부분의 경우 오프셋을 지정하는 대신 &lt;code&gt;-l&lt;/code&gt; 을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a0adbdd58719b871a55b452048423ef78d38af4e" translate="yes" xml:space="preserve">
          <source>The number of requests that were considered a failure. If the number is greater than zero, another line will be printed showing the number of requests that failed due to connecting, reading, incorrect content length, or exceptions.</source>
          <target state="translated">실패로 간주 된 요청 수입니다. 숫자가 0보다 크면 연결, 읽기, 잘못된 컨텐츠 길이 또는 예외로 인해 실패한 요청 수를 표시하는 다른 행이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="edb2e14dbd0f22576181bad93072afd5ec9a5b8f" translate="yes" xml:space="preserve">
          <source>The number of responses that were not in the 200 series of response codes. If all responses were 200, this field is not printed.</source>
          <target state="translated">200 시리즈 응답 코드에없는 응답 수입니다. 모든 응답이 200이면이 필드가 인쇄되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82c020d06f9bfab60d0f8fb9f1bc7a95505246dc" translate="yes" xml:space="preserve">
          <source>The number of seconds Apache httpd will wait for a subsequent request before closing the connection. By adding a postfix of ms the timeout can be also set in milliseconds. Once a request has been received, the timeout value specified by the &lt;code&gt;&lt;a href=&quot;#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; directive applies.</source>
          <target state="translated">Apache httpd가 연결을 닫기 전에 후속 요청을 기다리는 시간 (초)입니다. ms 접미사를 추가하여 시간 제한을 밀리 초 단위로 설정할 수도 있습니다. 요청이 수신되면, 타임 아웃 값에 의해 지정된 &lt;code&gt;&lt;a href=&quot;#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; 지시문에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="df5b76dbc4f9c550817e54fb7d6e1590daad1048" translate="yes" xml:space="preserve">
          <source>The number of successful responses received</source>
          <target state="translated">성공한 응답 수</target>
        </trans-unit>
        <trans-unit id="f5367ced6147eb3576e889e6d8289f29c461a623" translate="yes" xml:space="preserve">
          <source>The number of times this entry has been revalidated without being deleted.</source>
          <target state="translated">이 항목을 삭제하지 않고 재확인 한 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="344bb2b41bed2b1df1e90053aea16b1156cdcfcd" translate="yes" xml:space="preserve">
          <source>The number of worker serving requests</source>
          <target state="translated">요청을 처리하는 작업자 수</target>
        </trans-unit>
        <trans-unit id="ab8da07991cd8b13ad7d25ea77f344e96836ae88" translate="yes" xml:space="preserve">
          <source>The object ID can be specified either as a descriptive name recognized by the SSL library, such as &lt;code&gt;&quot;nsComment&quot;&lt;/code&gt;, or as a numeric OID, such as &lt;code&gt;&quot;1.2.3.4.5.6&quot;&lt;/code&gt;.</source>
          <target state="translated">개체 ID는 SSL 라이브러리에서 인식하는 설명 이름 (예 : &lt;code&gt;&quot;nsComment&quot;&lt;/code&gt; ) 또는 숫자 OID (예 : &lt;code&gt;&quot;1.2.3.4.5.6&quot;&lt;/code&gt; ) 로 지정할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="18185ef99e91d397665a544d188f465ba0048e88" translate="yes" xml:space="preserve">
          <source>The old &lt;em&gt;URL-path&lt;/em&gt; is a case-sensitive (%-decoded) path beginning with a slash. A relative path is not allowed.</source>
          <target state="translated">이전 &lt;em&gt;URL 경로&lt;/em&gt; 는 슬래시로 시작하는 대소 문자를 구분하는 (% 디코딩 된) 경로입니다. 상대 경로는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c154d8d0c455836847b30e00ba774751ee867ec" translate="yes" xml:space="preserve">
          <source>The one-per-second rule was implemented in an effort to avoid swamping the machine with the startup of new children. If the machine is busy spawning children, it can't service requests. But it has such a drastic effect on the perceived performance of Apache that it had to be replaced. As of Apache 1.3, the code will relax the one-per-second rule. It will spawn one, wait a second, then spawn two, wait a second, then spawn four, and it will continue exponentially until it is spawning 32 children per second. It will stop whenever it satisfies the &lt;code&gt;&lt;a href=&quot;../mod/prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; setting.</source>
          <target state="translated">새로운 자식이 시작될 때 머신이 늪에 빠지지 않도록하기 위해 초당 1 규칙이 구현되었습니다. 기계가 자식을 생성하는 중이면 요청을 처리 할 수 ​​없습니다. 그러나 아파치의 인식 된 성능에 큰 영향을 미쳐 교체해야했습니다. Apache 1.3부터이 코드는 초당 1 규칙을 완화합니다. 1을 생성하고 1 초간 기다린 다음 2를 생성하고 1 초간 기다린 다음 4를 생성하며, 초당 32 명의 자식이 생성 될 때까지 기하 급수적으로 계속됩니다. &lt;code&gt;&lt;a href=&quot;../mod/prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt; 설정을 만족할 때마다 중지됩니다 .</target>
        </trans-unit>
        <trans-unit id="0939281d67ae89fee116d51d13d386d81a31a682" translate="yes" xml:space="preserve">
          <source>The only configuration required is to select which cache provider to use. This is the responsibility of modules using the cache, and they enable selection using directives such as &lt;code&gt;&lt;a href=&quot;mod/mod_cache_socache#cachesocache&quot;&gt;CacheSocache&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_authn_socache#authncachesocache&quot;&gt;AuthnCacheSOCache&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslsessioncache&quot;&gt;SSLSessionCache&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">필요한 유일한 구성은 사용할 캐시 제공자를 선택하는 것입니다. 이는 캐시를 사용하는 모듈의 책임이며 &lt;code&gt;&lt;a href=&quot;mod/mod_cache_socache#cachesocache&quot;&gt;CacheSocache&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_authn_socache#authncachesocache&quot;&gt;AuthnCacheSOCache&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslsessioncache&quot;&gt;SSLSessionCache&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/mod_ssl#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt; 와 같은 지시문을 사용하여 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="986b54a9e19a65bd9d97753321c9547399d4e143" translate="yes" xml:space="preserve">
          <source>The operators marked as &quot;restricted&quot; are not available in some modules like &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&quot;제한됨&quot;으로 표시된 연산자는 &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 와 같은 일부 모듈에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="72bcdd85e1d8dbff1296bf198123aa70d52a4166" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;Registry-Strict&lt;/code&gt; which is new in Apache HTTP Server 2.0 does the same thing as &lt;code&gt;Registry&lt;/code&gt; but uses only the subkey &lt;code&gt;Shell\ExecCGI\Command&lt;/code&gt;. The &lt;code&gt;ExecCGI&lt;/code&gt; key is not a common one. It must be configured manually in the windows registry and hence prevents accidental program calls on your system.</source>
          <target state="translated">옵션 &lt;code&gt;Registry-Strict&lt;/code&gt; 아파치 HTTP 서버 2.0의 새로운 기능으로 같은 일을 &lt;code&gt;Registry&lt;/code&gt; 만 하위 키 사용 &lt;code&gt;Shell\ExecCGI\Command&lt;/code&gt; . &lt;code&gt;ExecCGI&lt;/code&gt; 를 키는 일반적인 아니다. Windows 레지스트리에서 수동으로 구성해야하므로 시스템에서 우발적 인 프로그램 호출을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="0988b3dd961115e47b151101e205b429d7ac99b6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;virtual&lt;/code&gt; modifier turns off the check whether the requested file really exists. This is useful, for example, if you want to use the &lt;code&gt;Action&lt;/code&gt; directive in virtual locations.</source>
          <target state="translated">선택적 &lt;code&gt;virtual&lt;/code&gt; 수정자는 요청 된 파일이 실제로 존재하는지 확인하지 않습니다. 예를 들어 가상 위치에서 &lt;code&gt;Action&lt;/code&gt; 지시문 을 사용하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="ac19b50cbdf87351c9e6ea1a7130e071907ea695" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;condition&lt;/var&gt; argument determines which internal table of responses headers this directive will operate against: &lt;code&gt;onsuccess&lt;/code&gt; (default, can be omitted) or &lt;code&gt;always&lt;/code&gt;. The difference between the two lists is that the headers contained in the latter are added to the response even on error, and persisted across internal redirects (for example, ErrorDocument handlers). Note also that repeating this directive with both conditions makes sense in some scenarios because &lt;code&gt;always&lt;/code&gt; is not a superset of &lt;code&gt;onsuccess&lt;/code&gt; with respect to existing headers:</source>
          <target state="translated">선택적 &lt;var&gt;condition&lt;/var&gt; 인수는이 지시문이 작동 할 내부 응답 헤더 테이블을 결정합니다 ( &lt;code&gt;onsuccess&lt;/code&gt; (기본값, 생략 가능) 또는 &lt;code&gt;always&lt;/code&gt; ) . 두 목록의 차이점은 후자에 포함 된 헤더가 오류가 발생하더라도 응답에 추가되고 내부 리디렉션 (예 : ErrorDocument 처리기)에 걸쳐 지속된다는 것입니다. 또한 기존 헤더와 관련하여 &lt;code&gt;always&lt;/code&gt; &lt;code&gt;onsuccess&lt;/code&gt; 의 상위 세트가 아니기 때문에 두 시나리오에서이 지시문을 반복하는 것이 일부 시나리오에서 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="61c06fd8a9fb8a4e98314fc60a361b6aab6c14f7" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;interpolate&lt;/var&gt; keyword, in combination with &lt;code&gt;&lt;a href=&quot;#proxypassinterpolateenv&quot;&gt;ProxyPassInterpolateEnv&lt;/a&gt;&lt;/code&gt;, causes the ProxyPass to interpolate environment variables, using the syntax &lt;var&gt;${VARNAME}&lt;/var&gt;. Note that many of the standard CGI-derived environment variables will not exist when this interpolation happens, so you may still have to resort to &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; for complex rules. Also note that interpolation is supported within the scheme/hostname/port portion of a URL only for variables that are available when the directive is parsed (like &lt;code&gt;&lt;a href=&quot;core#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt;). Dynamic determination of those fields can be accomplished with &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;. The following example describes how to use &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; to dynamically set the scheme to http or https:</source>
          <target state="translated">선택적 &lt;var&gt;interpolate&lt;/var&gt; 키워드를 &lt;code&gt;&lt;a href=&quot;#proxypassinterpolateenv&quot;&gt;ProxyPassInterpolateEnv&lt;/a&gt;&lt;/code&gt; 와 함께 사용 하면 ProxyPass가 &lt;var&gt;${VARNAME}&lt;/var&gt; 구문을 사용하여 환경 변수를 보간합니다 . 이 보간이 발생하면 많은 표준 CGI 파생 환경 변수가 존재하지 않으므로 복잡한 규칙에 대해서는 여전히 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 를 사용해야합니다 . 또한 지시문이 구문 분석 될 때 (예 : &lt;code&gt;&lt;a href=&quot;core#define&quot;&gt;Define&lt;/a&gt;&lt;/code&gt; ) 사용 가능한 변수에 대해서만 URL의 scheme / hostname / port 부분 내에서 보간이 지원됩니다 . 해당 필드의 동적 결정은 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 를 사용하여 수행 할 수 있습니다 . 다음 예는 사용 방법을 설명합니다 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 체계를 http 또는 https로 동적으로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9502315bee5c9bfbc1bd5b86ec0f50602d7e8494" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;interpolate&lt;/var&gt; keyword, used together with &lt;code&gt;ProxyPassInterpolateEnv&lt;/code&gt;, enables interpolation of environment variables specified using the format &lt;var&gt;${VARNAME}&lt;/var&gt;. Note that interpolation is not supported within the scheme portion of a URL.</source>
          <target state="translated">선택적 &lt;var&gt;interpolate&lt;/var&gt; 키워드는 &lt;code&gt;ProxyPassInterpolateEnv&lt;/code&gt; 와 함께 사용하여 &lt;var&gt;${VARNAME}&lt;/var&gt; 형식으로 지정된 환경 변수의 보간을 가능하게합니다 . URL의 체계 부분에서는 보간이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e8d0c4c35859cd035d0e2161db5342a7a924377" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;protocol&lt;/var&gt; argument is not required for most configurations. If not specified, &lt;code&gt;https&lt;/code&gt; is the default for port 443 and &lt;code&gt;http&lt;/code&gt; the default for all other ports. The protocol is used to determine which module should handle a request, and to apply protocol specific optimizations with the &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">선택적 &lt;var&gt;protocol&lt;/var&gt; 인수는 대부분의 구성에 필요하지 않습니다. 지정하지 않으면 &lt;code&gt;https&lt;/code&gt; 는 포트 443 의 기본값 이고 &lt;code&gt;http&lt;/code&gt; 는 다른 모든 포트의 기본값입니다. 프로토콜은 요청을 처리 할 모듈을 결정하고 &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; 지시문으로 프로토콜 특정 최적화를 적용하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="704bcc01b862ef219a78fd45dd8ccfa4d640e0c5" translate="yes" xml:space="preserve">
          <source>The optional arguments &quot;early&quot; or &quot;late&quot; control when this script runs relative to other modules.</source>
          <target state="translated">선택적인 인수 &quot;early&quot;또는 &quot;late&quot;는이 스크립트가 다른 모듈과 관련하여 실행될 때 제어합니다.</target>
        </trans-unit>
        <trans-unit id="be84208209b86ed6237d426af8b64d0d17511107" translate="yes" xml:space="preserve">
          <source>The optional expression allows to restrict the message if a condition is met. The details of the expression syntax are described in the &lt;a href=&quot;../expr&quot;&gt;ap_expr documentation&lt;/a&gt;. References to HTTP headers will not cause the header names to be added to the Vary header.</source>
          <target state="translated">선택적 표현식을 사용하면 조건이 충족되는 경우 메시지를 제한 할 수 있습니다. 표현식 구문의 세부 사항은 &lt;a href=&quot;../expr&quot;&gt;ap_expr 문서에&lt;/a&gt; 설명되어 있습니다 . HTTP 헤더를 참조해도 헤더 이름이 Vary 헤더에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="77d51ac3ae66fb817dc41027c3f7156814088676" translate="yes" xml:space="preserve">
          <source>The optional fourth &lt;strong&gt;cond&lt;/strong&gt; argument defines a condition that will be evaluated per Request, provided &lt;code&gt;&lt;a href=&quot;#proxyhtmlinterp&quot;&gt;ProxyHTMLInterp&lt;/a&gt;&lt;/code&gt; is &lt;var&gt;On&lt;/var&gt;. If the condition evaluates FALSE the map will not be applied in this request. If TRUE, or if no condition is defined, the map is applied.</source>
          <target state="translated">선택적인 네 번째 &lt;strong&gt;cond&lt;/strong&gt; 인수는 &lt;code&gt;&lt;a href=&quot;#proxyhtmlinterp&quot;&gt;ProxyHTMLInterp&lt;/a&gt;&lt;/code&gt; 가 &lt;var&gt;On&lt;/var&gt; 인 경우 요청마다 평가 될 조건을 정의합니다 . 조건이 FALSE로 평가되면이 요청에 맵이 적용되지 않습니다. 참이거나 조건이 정의되지 않은 경우 맵이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c40c94313ae5ac9f0fc63588cae63d9c6b686f1b" translate="yes" xml:space="preserve">
          <source>The optional second &lt;var&gt;protocol&lt;/var&gt; argument of &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; is not required for most configurations. If not specified, &lt;code&gt;https&lt;/code&gt; is the default for port 443 and &lt;code&gt;http&lt;/code&gt; the default for all other ports. The protocol is used to determine which module should handle a request, and to apply protocol specific optimizations with the &lt;code&gt;&lt;a href=&quot;mod/core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 의 선택적 두 번째 &lt;var&gt;protocol&lt;/var&gt; 인수는 대부분의 구성에 필요하지 않습니다. 지정하지 않으면 &lt;code&gt;https&lt;/code&gt; 는 포트 443 의 기본값 이고 &lt;code&gt;http&lt;/code&gt; 는 다른 모든 포트의 기본값입니다. 프로토콜은 요청을 처리 할 모듈을 결정하고 &lt;code&gt;&lt;a href=&quot;mod/core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; 지시문으로 프로토콜 특정 최적화를 적용하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9eed5a486dad74254cdf826b43038d57891817e0" translate="yes" xml:space="preserve">
          <source>The optional third argument is supported in 2.3.15 and later</source>
          <target state="translated">선택적 세 번째 인수는 2.3.15 이상에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b3fd086aa5f636a4321134cf2f358995890762b3" translate="yes" xml:space="preserve">
          <source>The optional third argument may define any of the following &lt;strong&gt;Flags&lt;/strong&gt;. Flags are case-sensitive.</source>
          <target state="translated">선택적 세 번째 인수는 다음 &lt;strong&gt;플래그&lt;/strong&gt; 중 하나를 정의 할 수 있습니다 . 플래그는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="b3e47697c3ba494489ee73424bd17fc69f176839" translate="yes" xml:space="preserve">
          <source>The order of merging is:</source>
          <target state="translated">병합 순서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="89501625ad2bc59a365717e781744f59a61aaa02" translate="yes" xml:space="preserve">
          <source>The order of protocols mentioned is also relevant. By default, the first one is the most preferred protocol. When a client offers multiple choices, the one most to the left is selected. In</source>
          <target state="translated">언급 된 프로토콜의 순서도 관련이 있습니다. 기본적으로 첫 번째 프로토콜이 가장 선호되는 프로토콜입니다. 고객이 여러 선택을 제공 할 때 가장 왼쪽에있는 것이 선택됩니다. 에</target>
        </trans-unit>
        <trans-unit id="60bdfbd0a30b8bcea537d6d6319531a80d78d01e" translate="yes" xml:space="preserve">
          <source>The order of rules in the ruleset is important because the rewriting engine processes them in a special (and not very obvious) order. The rule is this: The rewriting engine loops through the ruleset rule by rule (&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives) and when a particular rule matches it optionally loops through existing corresponding conditions (&lt;code&gt;RewriteCond&lt;/code&gt; directives). For historical reasons the conditions are given first, and so the control flow is a little bit long-winded. See Figure 1 for more details.</source>
          <target state="translated">다시 쓰기 엔진이 규칙을 명확하고 명확하지 않은 순서로 처리하기 때문에 규칙 세트의 규칙 순서가 중요합니다. 규칙은 다음과 같습니다. 다시 쓰기 엔진은 규칙별로 규칙 세트 규칙 ( &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문)을 반복하며 특정 규칙이 일치하면 선택적으로 기존 해당 조건 ( &lt;code&gt;RewriteCond&lt;/code&gt; 지시문)을 반복 합니다. 역사적 이유로 조건이 먼저 주어 지므로 제어 흐름이 약간 오래 걸립니다. 자세한 내용은 그림 1을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70b9340be9f97ad6eb54fd4698b1544b36eadbc7" translate="yes" xml:space="preserve">
          <source>The ordering of the lookup when the physical port is used is as follows:</source>
          <target state="translated">물리적 포트가 사용될 때 조회 순서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e7d884e471cddbd543106af4848581251a5781ed" translate="yes" xml:space="preserve">
          <source>The ordering was chosen such that it's possible to change the encoding in the future without worrying about collision with an existing database of &lt;code&gt;UNIQUE_ID&lt;/code&gt;s. The new encodings should also keep the time stamp as the first element, and can otherwise use the same alphabet and bit length. Since the time stamps are essentially an increasing sequence, it's sufficient to have a &lt;em&gt;flag second&lt;/em&gt; in which all machines in the cluster stop serving any request, and stop using the old encoding format. Afterwards they can resume requests and begin issuing the new encodings.</source>
          <target state="translated">순서는 &lt;code&gt;UNIQUE_ID&lt;/code&gt; 의 기존 데이터베이스와의 충돌에 대해 걱정하지 않고 향후 인코딩을 변경할 수 있도록 선택되었습니다 . 새로운 인코딩은 타임 스탬프를 첫 번째 요소로 유지해야하며, 그렇지 않으면 동일한 알파벳 및 비트 길이를 사용할 수 있습니다. 타임 스탬프는 본질적으로 증가하는 시퀀스이므로 클러스터의 모든 시스템이 요청을 처리하는 것을 중지하고 이전 인코딩 형식의 사용을 중지 하는 &lt;em&gt;플래그 (초)&lt;/em&gt; 를 갖는 것으로 충분 합니다. 그런 다음 요청을 재개하고 새로운 인코딩을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41ac6454663d41c12c79ce421008cb69a7f5e3e3" translate="yes" xml:space="preserve">
          <source>The origin of this software must not be misrepresented, either by explicit claim or by omission. Since few users ever read sources, credits must appear in the documentation.</source>
          <target state="translated">이 소프트웨어의 출처는 명백한 주장이나 누락으로 오인되어서는 안됩니다. 소스를 읽는 사용자는 거의 없으므로 문서에 크레딧이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c6b36f708ecaf0a73f73e279544e4de9c097eb42" translate="yes" xml:space="preserve">
          <source>The original host requested by the client in the &lt;code&gt;Host&lt;/code&gt; HTTP request header.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; HTTP 요청 헤더 에서 클라이언트가 요청한 원래 호스트 .</target>
        </trans-unit>
        <trans-unit id="d5010c580ebae3a79f3201a7ba4cc1dbde7eb198" translate="yes" xml:space="preserve">
          <source>The original request, and the substitution, are underneath the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; (as opposed to reachable by other means, such as &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">원래 요청 및 대체는 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 아래에 있습니다 ( &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 과 같은 다른 방법으로는 도달 할 수 없음 ).</target>
        </trans-unit>
        <trans-unit id="0889598f79a3e00ed1bf93a67f28e31e2861f018" translate="yes" xml:space="preserve">
          <source>The other anchor, this matches the end of the string.</source>
          <target state="translated">다른 앵커는 문자열의 끝과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ffa8e51628627ca38691adee51f2573d2d73dafc" translate="yes" xml:space="preserve">
          <source>The other effect of enabling &lt;code&gt;ProxyHTMLMeta&lt;/code&gt; is to parse all &lt;code&gt;&amp;lt;meta http-equiv=...&amp;gt;&lt;/code&gt; declarations and convert them to real HTTP headers, in keeping with the original purpose of this form of the HTML &amp;lt;meta&amp;gt; element.</source>
          <target state="translated">&lt;code&gt;ProxyHTMLMeta&lt;/code&gt; 를 활성화하는 또 다른 효과 는 HTML &amp;lt;meta&amp;gt; 요소 형식의 원래 목적을 유지하면서 모든 &lt;code&gt;&amp;lt;meta http-equiv=...&amp;gt;&lt;/code&gt; 선언 을 구문 분석 하여 실제 HTTP 헤더로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bbcc37311f04473bbec8beeadd3e276db907b164" translate="yes" xml:space="preserve">
          <source>The other method is to use the &lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">다른 방법은 &lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; 지시문 을 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="02f4bafcd1dbcd4fe179de6f385e2a461b6225bc" translate="yes" xml:space="preserve">
          <source>The other thing to determine is the document root (configured with &lt;code&gt;DocumentRoot&lt;/code&gt; and available to CGI scripts via the &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; environment variable). In a normal configuration, this is used by the core module when mapping URIs to filenames, but when the server is configured to do dynamic virtual hosting, that job must be taken over by another module (either &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;), which has a different way of doing the mapping. Neither of these modules is responsible for setting the &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; environment variable so if any CGIs or SSI documents make use of it, they will get a misleading value.</source>
          <target state="translated">결정할 다른 사항은 문서 루트 ( &lt;code&gt;DocumentRoot&lt;/code&gt; 로 구성되고 &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; 환경 변수 를 통해 CGI 스크립트에서 사용 가능 )입니다. 일반적인 구성에서는 URI를 파일 이름에 매핑 할 때 코어 모듈에서 사용하지만 서버가 동적 가상 호스팅을 수행하도록 구성된 경우 다른 모듈 ( &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; )에서 해당 작업을 대신 수행해야합니다. 매핑하는 방법. 이 모듈들 중 어느 것도 &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; 환경 변수 를 설정 하지 않으므로 CGI 또는 SSI 문서가이를 사용하면 오해의 소지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3846b8275990289314a1c6e8cc44b69258eece3c" translate="yes" xml:space="preserve">
          <source>The output of your CGI program</source>
          <target state="translated">CGI 프로그램의 출력</target>
        </trans-unit>
        <trans-unit id="9f8fc06dd59c09bf38b026e8ecd605da313ded9c" translate="yes" xml:space="preserve">
          <source>The overall aim of this technique is to reduce the number of subdirectories or files that may be in a particular directory, as most file-systems slow down as this number increases. With setting of &quot;1&quot; for &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; there can at most be 64 subdirectories at any particular level. With a setting of 2 there can be 64 * 64 subdirectories, and so on. Unless you have a good reason not to, using a setting of &quot;1&quot; for &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; is recommended.</source>
          <target state="translated">이 기술의 전반적인 목표는 특정 디렉토리에있을 수있는 서브 디렉토리 또는 파일의 수를 줄이는 것입니다.이 수가 증가하면 대부분의 파일 시스템이 느려집니다. &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; 에 &quot;1&quot;을 설정 하면 특정 레벨에서 최대 64 개의 서브 디렉토리가있을 수 있습니다. 2로 설정하면 64 * 64 하위 디렉토리 등이있을 수 있습니다. 적절한 이유가없는 한, &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; 에 &quot;1&quot;설정을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="46e094d80f58111878aff7e7ccbb65188136099a" translate="yes" xml:space="preserve">
          <source>The parent process' job is to manage the child processes. This involves spawning children as required to ensure there are always &lt;code&gt;&lt;a href=&quot;mpm_common#startservers&quot;&gt;StartServers&lt;/a&gt;&lt;/code&gt; processes accepting connections.</source>
          <target state="translated">부모 프로세스의 작업은 자식 프로세스를 관리하는 것입니다. 여기에는 항상 연결을 허용하는 &lt;code&gt;&lt;a href=&quot;mpm_common#startservers&quot;&gt;StartServers&lt;/a&gt;&lt;/code&gt; 프로세스 가 있는지 확인하기 위해 필요에 따라 하위를 생성하는 것이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="c63c4279889a3799dc64aa5a4b6a74ee1e5f3d12" translate="yes" xml:space="preserve">
          <source>The part that does the actual login is handled by the &lt;var&gt;form-login-handler&lt;/var&gt;. The action of the form should point at this handler, which is configured within Apache httpd as follows:</source>
          <target state="translated">실제 로그인을 수행하는 부분은 &lt;var&gt;form-login-handler&lt;/var&gt; 에 의해 처리됩니다 . 폼의 동작은이 핸들러를 가리켜 야하며,이 핸들러는 다음과 같이 Apache httpd 내에 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="3aaa8d0206ed8ffe8831403116bacafeb8aa355b" translate="yes" xml:space="preserve">
          <source>The passphrase can be inserted into a user session by adding this directive to the configuration for the &lt;var&gt;form-login-handler&lt;/var&gt;. The &lt;var&gt;form-login-handler&lt;/var&gt; itself will always run the authentication checks, regardless of whether a passphrase is specified or not.</source>
          <target state="translated">이 지시문을 &lt;var&gt;form-login-handler&lt;/var&gt; 구성에 추가하여 비밀번호 문구를 사용자 세션에 삽입 할 수 있습니다 . &lt;var&gt;form-login-handler&lt;/var&gt; 자체에 관계없이 항상 암호가 지정되어 있는지의 여부, 인증 검사를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2a5db3133be0ba10357112e02dd3c461e74c9fc7" translate="yes" xml:space="preserve">
          <source>The password entered must be a valid email address, &lt;em&gt;i.e.&lt;/em&gt; contain at least one '@' and a '.'. (&lt;code&gt;&lt;a href=&quot;#anonymous_verifyemail&quot;&gt;Anonymous_VerifyEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">입력 한 비밀번호는 유효한 이메일 주소 여야합니다 ( &lt;em&gt;예 :&lt;/em&gt; 하나 이상의 '@'및 '.'포함). ( &lt;code&gt;&lt;a href=&quot;#anonymous_verifyemail&quot;&gt;Anonymous_VerifyEmail&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b0f348a51692e24da9674248212ccb7eca31b0f7" translate="yes" xml:space="preserve">
          <source>The password section contains the encrypted password as before. This is followed by a colon and the comma separated list of groups. Other data may optionally be left in the DBM file after another colon; it is ignored by the authorization module. This is what www.telescope.org uses for its combined password and group database.</source>
          <target state="translated">비밀번호 섹션에는 이전과 같이 암호화 된 비밀번호가 포함됩니다. 그 뒤에 콜론과 쉼표로 구분 된 그룹 목록이옵니다. 다른 데이터는 다른 콜론 다음에 DBM 파일에 선택적으로 남아있을 수 있습니다. 권한 부여 모듈에서 무시됩니다. 이것이 www.telescope.org가 결합 된 암호 및 그룹 데이터베이스에 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ab55f8708dabee0b2177c205f979a035e54932b2" translate="yes" xml:space="preserve">
          <source>The password used in this example is the DES encrypted string &quot;password&quot;. See the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; docs for more information.</source>
          <target state="translated">이 예에서 사용 된 비밀번호는 DES 암호화 문자열 &quot;password&quot;입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="31fc1955c9f90bb4d277b1f61b923f57baf1fa9b" translate="yes" xml:space="preserve">
          <source>The password which is transmitted in such a way is not encrypted on its way. It travels between your browser and the Apache proxy server in a base64-encoded cleartext string, and between the Apache proxy and the FTP server as plaintext. You should therefore think twice before accessing your FTP server via HTTP (or before accessing your personal files via FTP at all!) When using insecure channels, an eavesdropper might intercept your password on its way.</source>
          <target state="translated">이러한 방식으로 전송되는 비밀번호는 암호화되지 않습니다. base64로 인코딩 된 일반 텍스트 문자열로 브라우저와 Apache 프록시 서버 사이를 이동하고 일반 텍스트로 Apache 프록시와 FTP 서버 사이를 이동합니다. 따라서 HTTP를 통해 FTP 서버에 액세스하기 전에 (또는 FTP를 통해 개인 파일에 액세스하기 전에) 두 번 생각해야합니다. 안전하지 않은 채널을 사용하는 경우 도청자가 암호를 가로 챌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a81af072f45da4bf951034a9997a9e4d6365fa2" translate="yes" xml:space="preserve">
          <source>The pasword file referenced in the &lt;code&gt;&lt;a href=&quot;#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; directive may be created and managed using the &lt;code&gt;&lt;a href=&quot;../programs/htdigest&quot;&gt;htdigest&lt;/a&gt;&lt;/code&gt; tool.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; 지시문 에서 참조되는 pasword 파일 은 &lt;code&gt;&lt;a href=&quot;../programs/htdigest&quot;&gt;htdigest&lt;/a&gt;&lt;/code&gt; 도구를 사용하여 작성하고 관리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2429f358325f301d686bb499e64a9d7cdbac145" translate="yes" xml:space="preserve">
          <source>The path component of the balancer URL in any &lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; container directive is ignored.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Proxy balancer://...&amp;gt;&lt;/code&gt; 컨테이너 지시문 에서 밸런서 URL의 경로 구성 요소 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e85df4aa22b05a10059f99f5ac417f2e316bf509" translate="yes" xml:space="preserve">
          <source>The path component of the requested URI, such as &quot;/index.html&quot;. This notably excludes the query string which is available as its own variable named &lt;code&gt;QUERY_STRING&lt;/code&gt;.</source>
          <target state="translated">요청 된 URI의 경로 구성 요소 (예 : &quot;/index.html&quot;) 이는 &lt;code&gt;QUERY_STRING&lt;/code&gt; 이라는 자체 변수로 사용 가능한 쿼리 문자열을 제외합니다 .</target>
        </trans-unit>
        <trans-unit id="b5794485af21b20205ea044c293ffaae68c26f7c" translate="yes" xml:space="preserve">
          <source>The path on the &lt;code&gt;SSLStaplingCache&lt;/code&gt; directive (e.g., &lt;code&gt;logs/&lt;/code&gt;) should match the one on the &lt;code&gt;SSLSessionCache&lt;/code&gt; directive. This path is relative to &lt;code&gt;ServerRoot&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSLStaplingCache&lt;/code&gt; 지시문 의 경로 (예 : &lt;code&gt;logs/&lt;/code&gt; )는 &lt;code&gt;SSLSessionCache&lt;/code&gt; 지시문 의 경로 와 일치해야 합니다. 이 경로는 &lt;code&gt;ServerRoot&lt;/code&gt; 에 상대적인 경로입니다 .</target>
        </trans-unit>
        <trans-unit id="7b848717fcf9ebb82c35d7e37faa7e8dc4654e29" translate="yes" xml:space="preserve">
          <source>The path part of the request's URI</source>
          <target state="translated">요청 URI의 경로 부분</target>
        </trans-unit>
        <trans-unit id="9c1a2844c8b327fef8d89e87c6a64579cfe7eef0" translate="yes" xml:space="preserve">
          <source>The path plus basename of the logfile. If &lt;var&gt;logfile&lt;/var&gt; includes any '%' characters, it is treated as a format string for &lt;code&gt;strftime(3)&lt;/code&gt;. Otherwise, the suffix &lt;var&gt;.nnnnnnnnnn&lt;/var&gt; is automatically added and is the time in seconds (unless the -t option is used). Both formats compute the start time from the beginning of the current period. For example, if a rotation time of 86400 is specified, the hour, minute, and second fields created from the &lt;code&gt;strftime(3)&lt;/code&gt; format will all be zero, referring to the beginning of the current 24-hour period (midnight).</source>
          <target state="translated">로그 파일의 경로와 기본 이름. &lt;var&gt;logfile&lt;/var&gt; '%'문자가 포함 된 경우 로그 파일 의 형식 문자열로 처리됩니다. &lt;code&gt;strftime(3)&lt;/code&gt; . 그렇지 않으면 접미사 &lt;var&gt;.nnnnnnnnnn&lt;/var&gt; 이 자동으로 추가되고 시간 (초)입니다 (-t 옵션을 사용하지 않는 한). 두 형식 모두 현재 기간의 시작부터 시작 시간을 계산합니다. 예를 들어, 회전 시간이 86400으로 지정된 경우 &lt;code&gt;strftime(3)&lt;/code&gt; 형식 에서 생성 된시, 분 및 초 필드 는 모두 현재 24 시간 (자정)의 시작을 참조하여 0이됩니다.</target>
        </trans-unit>
        <trans-unit id="9e45c428727b97588440a23c6e3e0584821c32a7" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;suexec&lt;/code&gt; binary must be hard-coded in the server for security reasons. Use this option to override the default path. &lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;--with-suexec-bin=/usr/sbin/suexec&lt;/code&gt;</source>
          <target state="translated">경로 &lt;code&gt;suexec&lt;/code&gt; 보안상의 이유로 서버에서 suexec 바이너리 하드 코딩해야합니다. 기본 경로를 무시하려면이 옵션을 사용하십시오. &lt;em&gt;예 : &lt;/em&gt; &lt;code&gt;--with-suexec-bin=/usr/sbin/suexec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="204007aa8b0204c5decfc8adfad578d8f5fadb93" translate="yes" xml:space="preserve">
          <source>The path, on the current website, for which the cookie is valid, such as &lt;code&gt;/customers/&lt;/code&gt; or &lt;code&gt;/files/download/&lt;/code&gt;.</source>
          <target state="translated">현재 웹 사이트에서 쿠키가 유효한 경로 (예 : &lt;code&gt;/customers/&lt;/code&gt; 또는 &lt;code&gt;/files/download/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a2f56ac73307cd71bb2daae91a69b3bba4cd8bb" translate="yes" xml:space="preserve">
          <source>The peer IP address of the connection (see the &lt;code&gt;&lt;a href=&quot;mod/mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; module)</source>
          <target state="translated">연결의 피어 IP 주소 &lt;code&gt;&lt;a href=&quot;mod/mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; 모듈)</target>
        </trans-unit>
        <trans-unit id="89b2334e72c30ac15cf8059b10a9796955b15764" translate="yes" xml:space="preserve">
          <source>The per-server configs for each module from the main server are merged into the vhost server.</source>
          <target state="translated">기본 서버의 각 모듈에 대한 서버 별 구성은 가상 호스트 서버로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="7861d1966bfdd123146241b6c37c01deefbb646b" translate="yes" xml:space="preserve">
          <source>The percent sign</source>
          <target state="translated">퍼센트 부호</target>
        </trans-unit>
        <trans-unit id="193c7846a8dae38af233e97f056ffc03fd341a27" translate="yes" xml:space="preserve">
          <source>The percent sign.</source>
          <target state="translated">퍼센트 부호.</target>
        </trans-unit>
        <trans-unit id="a06da59c4c14f57647983985a3dfb07d35f94e18" translate="yes" xml:space="preserve">
          <source>The pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot;, followed by the path to a program to receive the log information on its standard input. See the notes on &lt;a href=&quot;../logs#piped&quot;&gt;piped logs&lt;/a&gt; for more information.</source>
          <target state="translated">파이프 문자 &quot; &lt;code&gt;|&lt;/code&gt; &quot;다음에 표준 입력에 대한 로그 정보를 수신하기위한 프로그램 경로. &lt;a href=&quot;../logs#piped&quot;&gt;파이프 로그&lt;/a&gt; 에 대한 참고 사항을 참조하십시오 대한 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="98dcdefa120e50152549a7aeaa6d3bc289bbc765" translate="yes" xml:space="preserve">
          <source>The pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot;, followed by the path to a program to receive the log information on its standard input. The program name can be specified relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">파이프 문자 &quot; &lt;code&gt;|&lt;/code&gt; &quot;다음에 표준 입력에 대한 로그 정보를 수신하기위한 프로그램 경로. 프로그램 이름은 &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 를 기준으로 지정할 수 있습니다 지시문을 .</target>
        </trans-unit>
        <trans-unit id="8641c8d10fcb951b16156edb128b2e700a69c76d" translate="yes" xml:space="preserve">
          <source>The plaintext password to be encrypted and stored in the DBM file. Used only with the &lt;code&gt;-b&lt;/code&gt; flag.</source>
          <target state="translated">암호화되어 DBM 파일에 저장되는 일반 텍스트 비밀번호입니다. &lt;code&gt;-b&lt;/code&gt; 플래그 와 함께 만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f517d591adb9acc522cb74fa7355266946710d52" translate="yes" xml:space="preserve">
          <source>The plaintext password to be encrypted and stored in the file. Only used with the &lt;code&gt;-b&lt;/code&gt; flag.</source>
          <target state="translated">암호화되어 파일에 저장되는 일반 텍스트 비밀번호입니다. &lt;code&gt;-b&lt;/code&gt; 와 함께 만 사용 플래그 .</target>
        </trans-unit>
        <trans-unit id="6d068a1c119f4a7747e3160d2b9d0b6f1d9cdb3c" translate="yes" xml:space="preserve">
          <source>The plus character at the beginning indicates that this is the first log line of this request. The second line just contains a minus character and the ID again:</source>
          <target state="translated">시작의 더하기 문자는 이것이이 요청의 첫 번째 로그 행임을 나타냅니다. 두 번째 줄에는 빼기 문자와 ID가 다시 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7a942f504ec323503307710a2dca2f37f09e6262" translate="yes" xml:space="preserve">
          <source>The policy of the Apache HTTP Server project is to only release Unix sources. Windows source packages made available for download have been supplied by volunteers and may not be available for every release. You can still build the server on Windows from the Unix source tarball with just a few additional steps.</source>
          <target state="translated">Apache HTTP Server 프로젝트의 정책은 Unix 소스 만 릴리스하는 것입니다. 다운로드가 가능한 Windows 소스 패키지는 자원 봉사자가 제공 한 것으로 모든 릴리스에서 제공되지 않을 수 있습니다. 몇 가지 추가 단계만으로 Unix 소스 tarball에서 Windows에 서버를 계속 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a47baab77ebac0d2d207f3034749928d5a07faef" translate="yes" xml:space="preserve">
          <source>The port of the remote host (2.4.26 and later)</source>
          <target state="translated">원격 호스트의 포트 (2.4.26 이상)</target>
        </trans-unit>
        <trans-unit id="41bd519fee2336434594d1aa15c29c2134032da3" translate="yes" xml:space="preserve">
          <source>The port to which ab is connecting. If no port is given on the command line, this will default to 80 for http and 443 for https.</source>
          <target state="translated">ab가 연결되는 포트입니다. 명령 행에 포트가 제공되지 않으면 http의 경우 기본값은 80이고 https의 경우 443입니다.</target>
        </trans-unit>
        <trans-unit id="f96a63af4bb006dc4318b22805fc5e99ea412acb" translate="yes" xml:space="preserve">
          <source>The port was started initially to</source>
          <target state="translated">포트는 처음에 시작되었습니다</target>
        </trans-unit>
        <trans-unit id="1c23fdd16e088538b85bc6354ba4e79bd2c9a684" translate="yes" xml:space="preserve">
          <source>The possibility to translate between ASCII and EBCDIC at the socket level (on BS2000 POSIX, there is a socket option which supports this) was intentionally &lt;em&gt;not&lt;/em&gt; chosen, because the byte stream at the HTTP protocol level consists of a mixture of protocol related strings and non-protocol related raw file data. HTTP protocol strings are always encoded in ASCII (the &lt;code&gt;GET&lt;/code&gt; request, any Header: lines, the chunking information &lt;em&gt;etc.&lt;/em&gt;) whereas the file transfer parts (&lt;em&gt;i.e.&lt;/em&gt;, GIF images, CGI output &lt;em&gt;etc.&lt;/em&gt;) should usually be just &quot;passed through&quot; by the server. This separation between &quot;protocol string&quot; and &quot;raw data&quot; is reflected in the server code by functions like &lt;code&gt;bgets()&lt;/code&gt; or &lt;code&gt;rvputs()&lt;/code&gt; for strings, and functions like &lt;code&gt;bwrite()&lt;/code&gt; for binary data. A global translation of everything would therefore be inadequate.</source>
          <target state="translated">소켓 수준 (BS2000 POSIX에서는이를 지원하는 소켓 옵션이 있음)에서 ASCII와 EBCDIC 간 변환 가능성이 의도적으로 선택 &lt;em&gt;되지 않았습니다&lt;/em&gt; . HTTP 프로토콜 수준의 바이트 스트림은 프로토콜 관련 문자열과 비 문자열의 혼합으로 구성되어 있기 때문입니다. -프로토콜 관련 원시 파일 데이터. HTTP 프로토콜 문자열은 항상 ASCII ( &lt;code&gt;GET&lt;/code&gt; 요청, 헤더 : 행, 청킹 정보 &lt;em&gt;등&lt;/em&gt; )로 인코딩되는 반면 파일 전송 부분 ( &lt;em&gt;예&lt;/em&gt; : GIF 이미지, CGI 출력 &lt;em&gt;등&lt;/em&gt; )은 일반적으로 섬기는 사람. &quot;프로토콜 문자열&quot;과 &quot;원시 데이터&quot;간의 이러한 분리는 &lt;code&gt;bgets()&lt;/code&gt; 와 같은 함수에 의해 서버 코드에 반영됩니다. 또는 &lt;code&gt;rvputs()&lt;/code&gt; 문자열의 경우 이진 데이터의 경우 &lt;code&gt;bwrite()&lt;/code&gt; 와 같은 함수 입니다. 그러므로 모든 것에 대한 세계적 번역은 부적절 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="6f4c7b546bf15f3fff14ddc9165ee4485afe95d9" translate="yes" xml:space="preserve">
          <source>The precedence of language variants for cases where the client does not express a preference</source>
          <target state="translated">고객이 선호 사항을 표현하지 않는 경우 언어 변형의 우선 순위</target>
        </trans-unit>
        <trans-unit id="893ca8c5ab774d3acec1a3b0e4346ed9dbc3caeb" translate="yes" xml:space="preserve">
          <source>The presence of an &lt;code&gt;Order&lt;/code&gt; directive can affect access to a part of the server even in the absence of accompanying &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives because of its effect on the default access state. For example,</source>
          <target state="translated">&lt;code&gt;Order&lt;/code&gt; 지시문 이 있으면 기본 액세스 상태에 대한 영향으로 인해 동반되는 &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 지시문 이없는 경우에도 서버의 일부에 대한 액세스에 영향을 줄 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="7c34bd3c27a3511fdc3c1bec73eb01c6fb1ff092" translate="yes" xml:space="preserve">
          <source>The primary Windows platform for running Apache 2.4 is Windows 2000 or later. Always obtain and install the current service pack to avoid operating system bugs.</source>
          <target state="translated">Apache 2.4를 실행하기위한 기본 Windows 플랫폼은 Windows 2000 이상입니다. 운영 체제 버그를 피하려면 항상 최신 서비스 팩을 구하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="eb96a3a028f303088d4412b96532e10386ed5678" translate="yes" xml:space="preserve">
          <source>The primary documentation for this build mechanism is in the &lt;code&gt;README.cmake&lt;/code&gt; file in the source distribution. Refer to that file for detailed instructions.</source>
          <target state="translated">이 빌드 메커니즘의 기본 문서는 &lt;code&gt;README.cmake&lt;/code&gt; 에 있습니다. 는 소스 배포 파일에 있습니다. 자세한 지침은 해당 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3842c45bbc3e47531acc62ee7b9d1cf72d70f11" translate="yes" xml:space="preserve">
          <source>The primary limitations of the cmake-based build are inherited from the APR-util project, and are listed below because of their impact on httpd:</source>
          <target state="translated">cmake 기반 빌드의 주요 제한 사항은 APR-util 프로젝트에서 상속되며 httpd에 미치는 영향으로 아래에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3aa732e89344680ab4c36883263604e598c1595b" translate="yes" xml:space="preserve">
          <source>The primary purpose of the &lt;code&gt;AcceptPathInfo&lt;/code&gt; directive is to allow you to override the handler's choice of accepting or rejecting &lt;code&gt;PATH_INFO&lt;/code&gt;. This override is required, for example, when you use a &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt;, such as &lt;a href=&quot;mod_include&quot;&gt;INCLUDES&lt;/a&gt;, to generate content based on &lt;code&gt;PATH_INFO&lt;/code&gt;. The core handler would usually reject the request, so you can use the following configuration to enable such a script:</source>
          <target state="translated">&lt;code&gt;AcceptPathInfo&lt;/code&gt; 지시문 의 주요 목적은 처리기의 &lt;code&gt;PATH_INFO&lt;/code&gt; 수락 또는 거부 선택을 무시할 수 있도록하는 것 입니다. 예를 들어 &lt;a href=&quot;mod_include&quot;&gt;INCLUDES&lt;/a&gt; 와 같은 &lt;a href=&quot;../filter&quot;&gt;필터&lt;/a&gt; 를 사용하여 &lt;code&gt;PATH_INFO&lt;/code&gt; 기반 컨텐츠를 생성 하는 경우이 대체가 필요합니다 . 코어 핸들러는 일반적으로 요청을 거부하므로 다음 구성을 사용하여 해당 스크립트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1bb6f6f8c4c7cf79e560784b0548c95378554b6" translate="yes" xml:space="preserve">
          <source>The printenv Element</source>
          <target state="translated">printenv 요소</target>
        </trans-unit>
        <trans-unit id="ac3e5402bd52e06dfac29ef8de25a8b06046ef1b" translate="yes" xml:space="preserve">
          <source>The private key may also be combined with the certificate in the file given by &lt;code&gt;&lt;a href=&quot;#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt;, but this practice is highly discouraged. If it is used, the certificate files using such an embedded key must be configured after the certificates using a separate key file.</source>
          <target state="translated">개인 키는 &lt;code&gt;&lt;a href=&quot;#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt; 에서 제공 한 파일의 인증서와 결합 될 수도 있습니다. 이 있지만이 방법은 권장하지 않습니다. 사용되는 경우 이러한 내장 키를 사용하는 인증서 파일은 별도의 키 파일을 사용하여 인증서 뒤에 구성해야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
