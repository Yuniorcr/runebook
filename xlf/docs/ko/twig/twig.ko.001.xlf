<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="twig">
    <body>
      <group id="twig">
        <trans-unit id="d406fae92c1d4b9940e88adf8557b9a0aae8883e" translate="yes" xml:space="preserve">
          <source>$template</source>
          <target state="translated">$template</target>
        </trans-unit>
        <trans-unit id="4f7d8bf6e181bd173643fbeb0c2f944da0b5d81e" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;2018 by the Twig Team</source>
          <target state="translated">나뭇 가지 팀에 의해 &amp;copy; 2009&amp;ndash;2018</target>
        </trans-unit>
        <trans-unit id="29194482da30c2984a7b43f65ab141ad08108b2e" translate="yes" xml:space="preserve">
          <source>&amp;laquo; odd</source>
          <target state="translated">&amp;laquo;홀수</target>
        </trans-unit>
        <trans-unit id="46835bb757c07caedf30fa2b59650348ec06bcc7" translate="yes" xml:space="preserve">
          <source>) sides, but</source>
          <target state="translated">) 측면이지만</target>
        </trans-unit>
        <trans-unit id="8178170d557825e52786be3523f082cea011707e" translate="yes" xml:space="preserve">
          <source>0 decimal places.</source>
          <target state="translated">소수점 이하 0 자리</target>
        </trans-unit>
        <trans-unit id="667dd49d351b0633b5062095bea5c8ff275b5334" translate="yes" xml:space="preserve">
          <source>: &lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT') }}&lt;/code&gt;)</source>
          <target state="translated">: &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT') }}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e8ea619277a26491c58c78e5c784651812fe152b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;, &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;, &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt; , &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; , &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; , &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b9a2b8bc0465adaf0a8864a48aa171b3843315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;, &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../functions/block&quot;&gt;block&lt;/a&gt; , &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; , &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; , &lt;a href=&quot;use&quot;&gt;사용&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a53739e5cee7025fa66ae27a433fa6f7d2048d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tags/extends&quot;&gt;extends&lt;/a&gt;, &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt;, &lt;a href=&quot;../tags/block&quot;&gt;block&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../tags/extends&quot;&gt;확장&lt;/a&gt; , &lt;a href=&quot;block&quot;&gt;블록&lt;/a&gt; , &lt;a href=&quot;../tags/block&quot;&gt;블록&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a5e38d89ce7b3e929ad0bf70100d7eb996be73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tags/extends&quot;&gt;extends&lt;/a&gt;, &lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../tags/extends&quot;&gt;확장&lt;/a&gt; , &lt;a href=&quot;parent&quot;&gt;부모를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2196055e831455bdb5de42125b82dee52c455f8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abs&quot;&gt; &amp;laquo; abs &lt;/a&gt;|&lt;a href=&quot;capitalize&quot;&gt; capitalize &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;abs&quot;&gt;&amp;laquo;복근&lt;/a&gt; | &lt;a href=&quot;capitalize&quot;&gt;자본화&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e26db352ac4882be075ea44e19344fd93531b852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;advanced&quot;&gt; &amp;laquo; Extending Twig &lt;/a&gt;|&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt; Deprecated Features &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;advanced&quot;&gt;&amp;laquo;나뭇 가지 확장&lt;/a&gt; | &lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt;더 이상 사용되지 않는 기능&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ab89f9233442b42d401bcbec1125780a3887e67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;advanced&quot;&gt; &amp;laquo; Extending Twig &lt;/a&gt;|&lt;a href=&quot;recipes&quot;&gt; Recipes &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;advanced&quot;&gt;&amp;laquo;연장 나뭇 가지&lt;/a&gt; | &lt;a href=&quot;recipes&quot;&gt;요리법&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07387ab8c02dd794e4acd73eb190d57fe260b8c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;api&quot;&gt; &amp;laquo; Twig for Developers &lt;/a&gt;|&lt;a href=&quot;internals&quot;&gt; Twig Internals &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api&quot;&gt;&amp;laquo;개발자를위한 나뭇 가지&lt;/a&gt; | &lt;a href=&quot;internals&quot;&gt;나뭇 가지 내부&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c7ba60633d08a54385ef8d0ba6d7c2bef12d38d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apply&quot;&gt; &amp;laquo; apply &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;apply&quot;&gt;&amp;laquo;적용&lt;/a&gt; | &lt;a href=&quot;block&quot;&gt;블록 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97b8b61d8ea5e41f85d9aa72a758e00669f27f92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute&quot;&gt; &amp;laquo; attribute &lt;/a&gt;|&lt;a href=&quot;constant&quot;&gt; constant &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;attribute&quot;&gt;&amp;laquo;속성&lt;/a&gt; | &lt;a href=&quot;constant&quot;&gt;일정한 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1043b13a92b7753c0d035d44fb27872675f48052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autoescape&quot;&gt; &amp;laquo; autoescape &lt;/a&gt;|&lt;a href=&quot;deprecated&quot;&gt; deprecated &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;autoescape&quot;&gt;&amp;laquo;자동 탈출&lt;/a&gt; | &lt;a href=&quot;deprecated&quot;&gt;지원 중단&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63c02699d3befd22357284af002e07b177a0f72f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autoescape&quot;&gt; &amp;laquo; autoescape &lt;/a&gt;|&lt;a href=&quot;do&quot;&gt; do &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;autoescape&quot;&gt;&amp;laquo;자동 탈출&lt;/a&gt; | &lt;a href=&quot;do&quot;&gt;하다 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faef0be13c0c33d5d61b51e2efb74097e5fcb71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;batch&quot;&gt; &amp;laquo; batch &lt;/a&gt;|&lt;a href=&quot;column&quot;&gt; column &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;batch&quot;&gt;&amp;laquo;배치&lt;/a&gt; | &lt;a href=&quot;column&quot;&gt;열&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48aad7b1c1cfd8113e1eafcd69152911345dc753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;batch&quot;&gt; &amp;laquo; batch &lt;/a&gt;|&lt;a href=&quot;convert_encoding&quot;&gt; convert_encoding &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;batch&quot;&gt;&amp;laquo;배치&lt;/a&gt; | &lt;a href=&quot;convert_encoding&quot;&gt;convert_encoding&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d48227387b105d00b030ae4cc5b402055d5d84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;cycle&quot;&gt; cycle &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;블록&lt;/a&gt; | &lt;a href=&quot;cycle&quot;&gt;사이클&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9bb40b8019b0f5a4fface6b487dd987288bfdd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;do&quot;&gt; do &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;블록&lt;/a&gt; | &lt;a href=&quot;do&quot;&gt;하다 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93873d292b0f6f5f9eddaa89b081635db2e87c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;block&quot;&gt; &amp;laquo; block &lt;/a&gt;|&lt;a href=&quot;embed&quot;&gt; embed &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;block&quot;&gt;&amp;laquo;블록&lt;/a&gt; | &lt;a href=&quot;embed&quot;&gt;포함&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc0b86d810116861ecc4d078693e5d50013da285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;capitalize&quot;&gt; &amp;laquo; capitalize &lt;/a&gt;|&lt;a href=&quot;convert_encoding&quot;&gt; convert_encoding &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;capitalize&quot;&gt;&amp;laquo;대문자&lt;/a&gt; | &lt;a href=&quot;convert_encoding&quot;&gt;convert_encoding&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfa1d30b3f2a2332eea6f924513fd5a5658bb8d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;capitalize&quot;&gt; &amp;laquo; capitalize &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;capitalize&quot;&gt;&amp;laquo;대문자&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;데이트 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eaf65c4165a9d7c69214e96c5ce8a47124fcfe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;column&quot;&gt; &amp;laquo; column &lt;/a&gt;|&lt;a href=&quot;country_name&quot;&gt; country_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;column&quot;&gt;&amp;laquo;열&lt;/a&gt; | &lt;a href=&quot;country_name&quot;&gt;나라 이름 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34853c0d594e778b8b422493478aae32dadf8d0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt; &amp;laquo; constant &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;constant&quot;&gt;&amp;laquo;상수&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;데이트 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44cb9c77f9121e23464d6a65f90cef0dcf96807d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt; &amp;laquo; constant &lt;/a&gt;|&lt;a href=&quot;divisibleby&quot;&gt; divisible by &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;constant&quot;&gt;&amp;laquo;상수&lt;/a&gt; | &lt;a href=&quot;divisibleby&quot;&gt;로 나눌 수 있음&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1915c3d626fc0a44381f1c4f218e752fe5ebfa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert_encoding&quot;&gt; &amp;laquo; convert_encoding &lt;/a&gt;|&lt;a href=&quot;currency_name&quot;&gt; currency_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;convert_encoding&quot;&gt;&amp;laquo;convert_encoding&lt;/a&gt; | &lt;a href=&quot;currency_name&quot;&gt;통화 _ 이름&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ce20b5c32ace9a7f151b0ceb54106603117de24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert_encoding&quot;&gt; &amp;laquo; convert_encoding &lt;/a&gt;|&lt;a href=&quot;date_modify&quot;&gt; date_modify &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;convert_encoding&quot;&gt;&amp;laquo;convert_encoding&lt;/a&gt; | &lt;a href=&quot;date_modify&quot;&gt;date_modify&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8c3ddb72b6ccbe3a507d7428e7426936a996d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;country_name&quot;&gt; &amp;laquo; country_name &lt;/a&gt;|&lt;a href=&quot;currency_symbol&quot;&gt; currency_symbol &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;country_name&quot;&gt;&amp;laquo;country_name&lt;/a&gt; | &lt;a href=&quot;currency_symbol&quot;&gt;통화 _ 기호&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e4467c5f23871bcad90be0196a1e968d365c37a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;country_timezones&quot;&gt; &amp;laquo; country_timezones &lt;/a&gt;|&lt;a href=&quot;../tests/index&quot;&gt; Tests &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;country_timezones&quot;&gt;&amp;laquo;country_timezones&lt;/a&gt; | &lt;a href=&quot;../tests/index&quot;&gt;테스트&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab27bed2086cf2eb6635ff08f004cecb8d75920c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;currency_name&quot;&gt; &amp;laquo; currency_name &lt;/a&gt;|&lt;a href=&quot;data_uri&quot;&gt; data_uri &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;currency_name&quot;&gt;&amp;laquo;통화 _ 이름&lt;/a&gt; | &lt;a href=&quot;data_uri&quot;&gt;data_uri&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46b3d86cbd69b16504cd106b97787122986fbc5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;currency_symbol&quot;&gt; &amp;laquo; currency_symbol &lt;/a&gt;|&lt;a href=&quot;date&quot;&gt; date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;currency_symbol&quot;&gt;&amp;laquo;통화 _ 기호&lt;/a&gt; | &lt;a href=&quot;date&quot;&gt;데이트 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b547841eee856cabbc16d4ecca64b4db0eccc02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cycle&quot;&gt; &amp;laquo; cycle &lt;/a&gt;|&lt;a href=&quot;dump&quot;&gt; dump &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cycle&quot;&gt;&amp;laquo;주기&lt;/a&gt; | &lt;a href=&quot;dump&quot;&gt;덤프&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faa043983ecf0cc903e3afc454cb138b48b6e955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data_uri&quot;&gt; &amp;laquo; data_uri &lt;/a&gt;|&lt;a href=&quot;date_modify&quot;&gt; date_modify &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data_uri&quot;&gt;&amp;laquo;data_uri&lt;/a&gt; | &lt;a href=&quot;date_modify&quot;&gt;날짜 _ 수정&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dc0fb3e7ff462fc922a6a77a24c155280533409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;default&quot;&gt; default &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;날짜&lt;/a&gt; | &lt;a href=&quot;default&quot;&gt;기본 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="358a09ae85d98ecc3dae4ba3a8af014939fa3566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;html_classes&quot;&gt; html_classes &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;날짜&lt;/a&gt; | &lt;a href=&quot;html_classes&quot;&gt;html_classes&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c57cb592ef5db5006924bc0a67ba1157b7eb64fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt; &amp;laquo; date &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date&quot;&gt;&amp;laquo;날짜&lt;/a&gt; | &lt;a href=&quot;include&quot;&gt;포함 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c6ff317f14b3b103f0cf8f35aa407de9da5cf42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_modify&quot;&gt; &amp;laquo; date_modify &lt;/a&gt;|&lt;a href=&quot;escape&quot;&gt; escape &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_modify&quot;&gt;&amp;laquo;date_modify&lt;/a&gt; | &lt;a href=&quot;escape&quot;&gt;탈출&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a982cfda82ef57359b6f0b61a8f26cc2fbcd799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default&quot;&gt; &amp;laquo; default &lt;/a&gt;|&lt;a href=&quot;filter&quot;&gt; filter &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;default&quot;&gt;&amp;laquo;기본값&lt;/a&gt; | &lt;a href=&quot;filter&quot;&gt;필터&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d008ef9bcb1bad643f6c1e9cb4e9ffbf1a10fad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default&quot;&gt; &amp;laquo; default &lt;/a&gt;|&lt;a href=&quot;first&quot;&gt; first &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;default&quot;&gt;&amp;laquo;기본&lt;/a&gt; | &lt;a href=&quot;first&quot;&gt;먼저&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24029a7469a584d78529ae81ff78bfd254700c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;defined&quot;&gt; &amp;laquo; defined &lt;/a&gt;|&lt;a href=&quot;empty&quot;&gt; empty &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;defined&quot;&gt;&amp;laquo;정의&lt;/a&gt; | &lt;a href=&quot;empty&quot;&gt;비어있는&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bcc933313afad5c368713f339675cab9900e225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deprecated&quot;&gt; &amp;laquo; deprecated &lt;/a&gt;|&lt;a href=&quot;embed&quot;&gt; embed &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deprecated&quot;&gt;&amp;laquo;지원 중단됨&lt;/a&gt; | &lt;a href=&quot;embed&quot;&gt;삽입&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d319c860e2a9ab3f1e2814a902a02d3e78d477c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;divisibleby&quot;&gt; &amp;laquo; divisible by &lt;/a&gt;|&lt;a href=&quot;even&quot;&gt; even &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;divisibleby&quot;&gt;&amp;laquo;로 나눌 수 있음&lt;/a&gt; | &lt;a href=&quot;even&quot;&gt;짝수&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca95e7dca88a716f6524ef27db9696d8a5171d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;do&quot;&gt; &amp;laquo; do &lt;/a&gt;|&lt;a href=&quot;extends&quot;&gt; extends &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;do&quot;&gt;&amp;laquo;할&lt;/a&gt; | &lt;a href=&quot;extends&quot;&gt;연장&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3930e4d4f2f406fc87b28b8fab1e6e9fadd2ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dump&quot;&gt; &amp;laquo; dump &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;dump&quot;&gt;&amp;laquo;덤프&lt;/a&gt; | &lt;a href=&quot;include&quot;&gt;포함 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d9b26b39b8f0eae6a6a31c4ccf526c04ebe31ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dump&quot;&gt; &amp;laquo; dump &lt;/a&gt;|&lt;a href=&quot;max&quot;&gt; max &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;dump&quot;&gt;&amp;laquo;덤프&lt;/a&gt; | &lt;a href=&quot;max&quot;&gt;최대&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b74aaac88f872e72b422cab89afab6a9f40f079" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;embed&quot;&gt; &amp;laquo; embed &lt;/a&gt;|&lt;a href=&quot;filter&quot;&gt; filter &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;embed&quot;&gt;&amp;laquo;퍼가기&lt;/a&gt; | &lt;a href=&quot;filter&quot;&gt;필터&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="817bd0e713b67f0706c582545803d63c64d2fc57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;embed&quot;&gt; &amp;laquo; embed &lt;/a&gt;|&lt;a href=&quot;flush&quot;&gt; flush &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;embed&quot;&gt;&amp;laquo;삽입&lt;/a&gt; | &lt;a href=&quot;flush&quot;&gt;플러시&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e261747a0edf819e20be37af0eda34d23f3ffea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;empty&quot;&gt; &amp;laquo; empty &lt;/a&gt;|&lt;a href=&quot;iterable&quot;&gt; iterable &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;empty&quot;&gt;&amp;laquo;비어 있음&lt;/a&gt; | &lt;a href=&quot;iterable&quot;&gt;반복 가능&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf33260436cd82388e526b1b6268781e91f521b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;escape&quot;&gt; &amp;laquo; escape &lt;/a&gt;|&lt;a href=&quot;first&quot;&gt; first &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;escape&quot;&gt;&amp;laquo;탈출&lt;/a&gt; | &lt;a href=&quot;first&quot;&gt;먼저&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="703b7f99a391bb7361397a85f21666a7dd879393" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;escape&quot;&gt; &amp;laquo; escape &lt;/a&gt;|&lt;a href=&quot;format&quot;&gt; format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;escape&quot;&gt;&amp;laquo;탈출&lt;/a&gt; | &lt;a href=&quot;format&quot;&gt;형식&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0305bff5644f060da5eb6c106486320f4dd9c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;even&quot;&gt; &amp;laquo; even &lt;/a&gt;|&lt;a href=&quot;null&quot;&gt; null &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;even&quot;&gt;&amp;laquo;짝수&lt;/a&gt; | &lt;a href=&quot;null&quot;&gt;없는 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08840c9c6b4e10f567da756e357cb582f6094d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extends&quot;&gt; &amp;laquo; extends &lt;/a&gt;|&lt;a href=&quot;flush&quot;&gt; flush &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;extends&quot;&gt;&amp;laquo;연장&lt;/a&gt; | &lt;a href=&quot;flush&quot;&gt;플러시&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28b6795c016bc9095d0b753cb4a115c4babcaf35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extends&quot;&gt; &amp;laquo; extends &lt;/a&gt;|&lt;a href=&quot;for&quot;&gt; for &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;extends&quot;&gt;&amp;laquo;확장&lt;/a&gt; | &lt;a href=&quot;for&quot;&gt;&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8040a7ef5e42567d92deaed919a0e6a740c10fe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filter&quot;&gt; &amp;laquo; filter &lt;/a&gt;|&lt;a href=&quot;for&quot;&gt; for &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt;&amp;laquo;필터&lt;/a&gt; | &lt;a href=&quot;for&quot;&gt;&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d1223a52b74c50dc4febaa31a84ec39e4577744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filter&quot;&gt; &amp;laquo; filter &lt;/a&gt;|&lt;a href=&quot;format&quot;&gt; format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt;&amp;laquo;필터&lt;/a&gt; | &lt;a href=&quot;format&quot;&gt;형식&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93f588b10d5c9bb280fb8edf2ab8315a7760df01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filters/index&quot;&gt;Filters&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;filters/index&quot;&gt;Filters&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="a40ee25d257e78f219b5bed221529abb85b493e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;first&quot;&gt; &amp;laquo; first &lt;/a&gt;|&lt;a href=&quot;format_currency&quot;&gt; format_currency &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;first&quot;&gt;&amp;laquo;처음&lt;/a&gt; | &lt;a href=&quot;format_currency&quot;&gt;형식 _ 통화&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4667a78915e1374b2bb97c98e345897b4ba8debd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;first&quot;&gt; &amp;laquo; first &lt;/a&gt;|&lt;a href=&quot;join&quot;&gt; join &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;first&quot;&gt;&amp;laquo;처음&lt;/a&gt; | &lt;a href=&quot;join&quot;&gt;가입&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c5f8a75fd3d8a19df85a114bf680f36970581a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;flush&quot;&gt; &amp;laquo; flush &lt;/a&gt;|&lt;a href=&quot;from&quot;&gt; from &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;flush&quot;&gt;&amp;laquo;플러시&lt;/a&gt; | &lt;a href=&quot;from&quot;&gt;에서&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="517d7a848117bd9bcc400e49bfbc4005c0fc8973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;for&quot;&gt; &amp;laquo; for &lt;/a&gt;|&lt;a href=&quot;if&quot;&gt; if &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;for&quot;&gt;&amp;laquo;for&lt;/a&gt; | &lt;a href=&quot;if&quot;&gt;만약 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a979716e75317cc0babfcf2fac11cfe7c7ce43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format&quot;&gt; &amp;laquo; format &lt;/a&gt;|&lt;a href=&quot;format_date&quot;&gt; format_date &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format&quot;&gt;&amp;laquo;형식&lt;/a&gt; | &lt;a href=&quot;format_date&quot;&gt;형식 _ 날짜&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0eb9fc8d4fc1ce7eee7847e1f2521579cbff7f6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format&quot;&gt; &amp;laquo; format &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format&quot;&gt;&amp;laquo;형식&lt;/a&gt; | &lt;a href=&quot;json_encode&quot;&gt;json_encode&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbfee717eaf7ff9b32a9a07841b82e2f1246cc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_currency&quot;&gt; &amp;laquo; format_currency &lt;/a&gt;|&lt;a href=&quot;format_datetime&quot;&gt; format_datetime &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_currency&quot;&gt;&amp;laquo;형식 _ 통화&lt;/a&gt; | &lt;a href=&quot;format_datetime&quot;&gt;format_datetime&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1cf1b3cefc69e4090d43eee11a29d102d9fef20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_date&quot;&gt; &amp;laquo; format_date &lt;/a&gt;|&lt;a href=&quot;format_number&quot;&gt; format_number &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_date&quot;&gt;&amp;laquo;형식 _ 날짜&lt;/a&gt; | &lt;a href=&quot;format_number&quot;&gt;형식 _ 번호&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf7eb01babb5a6ace35f5bacc42ac49c979fe8aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_datetime&quot;&gt; &amp;laquo; format_datetime &lt;/a&gt;|&lt;a href=&quot;format_time&quot;&gt; format_time &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_datetime&quot;&gt;&amp;laquo;format_datetime&lt;/a&gt; | &lt;a href=&quot;format_time&quot;&gt;형식 _ 시간&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6631a7696f1446a0ae271d197214df4181f2add" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_number&quot;&gt; &amp;laquo; format_number &lt;/a&gt;|&lt;a href=&quot;html_to_markdown&quot;&gt; html_to_markdown &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_number&quot;&gt;&amp;laquo;형식 _ 번호&lt;/a&gt; | &lt;a href=&quot;html_to_markdown&quot;&gt;html_to_markdown&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0d59bcb929f98cebc567074ceebe12dcac84aae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;format_time&quot;&gt; &amp;laquo; format_time &lt;/a&gt;|&lt;a href=&quot;inline_css&quot;&gt; inline_css &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;format_time&quot;&gt;&amp;laquo;형식 _ 시간&lt;/a&gt; | &lt;a href=&quot;inline_css&quot;&gt;inline_css&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39ede6c75905fce3b5b7b963f26a10bdeec89d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;from&quot;&gt; &amp;laquo; from &lt;/a&gt;|&lt;a href=&quot;import&quot;&gt; import &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;from&quot;&gt;&amp;laquo;부터&lt;/a&gt; | &lt;a href=&quot;import&quot;&gt;수입&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23443e2efe45712146937b8a58cc32102f871889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;from&quot;&gt;from&lt;/a&gt;, &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;from&quot;&gt;에서&lt;/a&gt; , &lt;a href=&quot;import&quot;&gt;수입&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32a397ccf3f3175bfedfd1ec550aa812a0385663" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions/index&quot;&gt;Functions&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;functions/index&quot;&gt;Functions&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="90603259c507f6842d8765ce64d5e4042ae7bd80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html_classes&quot;&gt; &amp;laquo; html_classes &lt;/a&gt;|&lt;a href=&quot;max&quot;&gt; max &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;html_classes&quot;&gt;&amp;laquo;html_classes&lt;/a&gt; | &lt;a href=&quot;max&quot;&gt;최대&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf3b08633fcf5b17fbf0a9c1f12a91212b43972b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html_to_markdown&quot;&gt; &amp;laquo; html_to_markdown &lt;/a&gt;|&lt;a href=&quot;inky_to_html&quot;&gt; inky_to_html &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;html_to_markdown&quot;&gt; &amp;laquo; html_to_markdown &lt;/a&gt;|&lt;a href=&quot;inky_to_html&quot;&gt; inky_to_html &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46dd615ef0490556521cd38cc3c93d9ff730a738" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt; &amp;laquo; Deprecated Features &lt;/a&gt;|&lt;a href=&quot;coding_standards&quot;&gt; Coding Standards &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://twig.symfony.com/doc/3.x/deprecated.html&quot;&gt;&amp;laquo;사용되지 않는 기능&lt;/a&gt; | &lt;a href=&quot;coding_standards&quot;&gt;코딩 표준&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33fff9e6477ef103248c8f4e20bdc2ff4dc82aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;if&quot;&gt; &amp;laquo; if &lt;/a&gt;|&lt;a href=&quot;include&quot;&gt; include &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;if&quot;&gt;&amp;laquo;경우&lt;/a&gt; | &lt;a href=&quot;include&quot;&gt;포함 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc91615238c252ee9aa2454af61c2fed69c0cecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;import&quot;&gt; &amp;laquo; import &lt;/a&gt;|&lt;a href=&quot;macro&quot;&gt; macro &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;import&quot;&gt;&amp;laquo;수입&lt;/a&gt; | &lt;a href=&quot;macro&quot;&gt;매크로&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1be3b495966e94e350f9255aeeb09c6a8c0cd062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;include&quot;&gt; &amp;laquo; include &lt;/a&gt;|&lt;a href=&quot;min&quot;&gt; min &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;include&quot;&gt;&amp;laquo;포함&lt;/a&gt; | &lt;a href=&quot;min&quot;&gt;분&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61c8b8b5a901ed68cb5e3c81e4803cda93d66383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;include&quot;&gt; &amp;laquo; include &lt;/a&gt;|&lt;a href=&quot;sandbox&quot;&gt; sandbox &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;include&quot;&gt;&amp;laquo;포함&lt;/a&gt; | &lt;a href=&quot;sandbox&quot;&gt;샌드 박스&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29c61d5eb8de3d48d8eefaf393b647f4b9ee78e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Filters &lt;/a&gt;|&lt;a href=&quot;batch&quot;&gt; batch &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;필터&lt;/a&gt; | &lt;a href=&quot;batch&quot;&gt;배치&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8688863e41ad997c6bccb8d262ce29e71c7a0e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Functions &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;기능&lt;/a&gt; | &lt;a href=&quot;block&quot;&gt;블록 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20a1cf316fa6073a1ad90fefe99431abe3bc578e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tags &lt;/a&gt;|&lt;a href=&quot;autoescape&quot;&gt; autoescape &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;태그&lt;/a&gt; | &lt;a href=&quot;autoescape&quot;&gt;자동 이스케이프&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7686baab9e452a0b7ee3dc21dd6f9eae01ca5fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tags &lt;/a&gt;|&lt;a href=&quot;block&quot;&gt; block &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;태그&lt;/a&gt; | &lt;a href=&quot;block&quot;&gt;블록 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ac5a2a98109a4fa0e136913916c2013a92b6d45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Tests &lt;/a&gt;|&lt;a href=&quot;defined&quot;&gt; defined &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;테스트&lt;/a&gt; | &lt;a href=&quot;defined&quot;&gt;정의 된&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="deee586ed0bf723843887e34adb9bbd7dd49cd51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index&quot;&gt; &amp;laquo; Twig &lt;/a&gt;|&lt;a href=&quot;installation&quot;&gt; Installation &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;&amp;laquo;나뭇 가지&lt;/a&gt; | &lt;a href=&quot;installation&quot;&gt;설치&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67c0f60cb86269201c39dba9792369bc5565e5a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inky_to_html&quot;&gt; &amp;laquo; inky_to_html &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;inky_to_html&quot;&gt; &amp;laquo; inky_to_html &lt;/a&gt;|&lt;a href=&quot;json_encode&quot;&gt; json_encode &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="980f9cfacc984376c75be92c3b37f9593e04cca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inline_css&quot;&gt; &amp;laquo; inline_css &lt;/a&gt;|&lt;a href=&quot;join&quot;&gt; join &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;inline_css&quot;&gt;&amp;laquo;inline_css&lt;/a&gt; | &lt;a href=&quot;join&quot;&gt;가입&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="725eee06b01eca5fd0bb57281361bb346d24b945" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;installation&quot;&gt; &amp;laquo; Installation &lt;/a&gt;|&lt;a href=&quot;api&quot;&gt; Twig for Developers &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;installation&quot;&gt;&amp;laquo;설치&lt;/a&gt; | &lt;a href=&quot;api&quot;&gt;개발자를위한 나뭇 가지&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebb803509ba975e1a7f2c7414a3019ac8ca2d4e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internals&quot;&gt; &amp;laquo; Twig Internals &lt;/a&gt;|&lt;a href=&quot;coding_standards&quot;&gt; Coding Standards &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;internals&quot;&gt;&amp;laquo;나뭇 가지 내부&lt;/a&gt; | &lt;a href=&quot;coding_standards&quot;&gt;코딩 표준&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c8ec96b96fd59d0dfdf80692234d73e9296c686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;intro&quot;&gt; &amp;laquo; Introduction &lt;/a&gt;|&lt;a href=&quot;templates&quot;&gt; Twig for Template Designers &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;intro&quot;&gt;&amp;laquo;소개&lt;/a&gt; | &lt;a href=&quot;templates&quot;&gt;템플릿 디자이너를위한 나뭇 가지&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7a77a60ee7a72e0b3d9363f63d395362dfd317d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable&quot;&gt; &amp;laquo; iterable &lt;/a&gt;|&lt;a href=&quot;odd&quot;&gt; odd &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable&quot;&gt;&amp;laquo;반복 가능&lt;/a&gt; | &lt;a href=&quot;odd&quot;&gt;홀수&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9c691d6d9bb157fa724dc7d8251c6127fba5c2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;join&quot;&gt; &amp;laquo; join &lt;/a&gt;|&lt;a href=&quot;keys&quot;&gt; keys &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;join&quot;&gt;&amp;laquo;가입&lt;/a&gt; | &lt;a href=&quot;keys&quot;&gt;키&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7af53135db0bfe3f1c1af78bd759ef14dbb6090e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json_encode&quot;&gt; &amp;laquo; json_encode &lt;/a&gt;|&lt;a href=&quot;language_name&quot;&gt; language_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;json_encode&quot;&gt;&amp;laquo;json_encode&lt;/a&gt; | &lt;a href=&quot;language_name&quot;&gt;언어 이름 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="607a06da59cfad58dd8d5c4afade5497a10fbfc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json_encode&quot;&gt; &amp;laquo; json_encode &lt;/a&gt;|&lt;a href=&quot;last&quot;&gt; last &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;json_encode&quot;&gt;&amp;laquo;json_encode&lt;/a&gt; | &lt;a href=&quot;last&quot;&gt;마지막&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be267f48b38211e376bff00e002b4cf99b5bdf8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keys&quot;&gt; &amp;laquo; keys &lt;/a&gt;|&lt;a href=&quot;last&quot;&gt; last &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;keys&quot;&gt;&amp;laquo;키&lt;/a&gt; | &lt;a href=&quot;last&quot;&gt;마지막&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f8d44f0eaaf0359ee83098044e2eeae1cb0d599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keys&quot;&gt; &amp;laquo; keys &lt;/a&gt;|&lt;a href=&quot;length&quot;&gt; length &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;keys&quot;&gt;&amp;laquo;키&lt;/a&gt; | &lt;a href=&quot;length&quot;&gt;길이 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bd39d212220b15d1e030acf453c44e2dacf82aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;language_name&quot;&gt; &amp;laquo; language_name &lt;/a&gt;|&lt;a href=&quot;length&quot;&gt; length &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;language_name&quot;&gt;&amp;laquo;언어&lt;/a&gt; _ 이름 | &lt;a href=&quot;length&quot;&gt;길이 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c902d8580decde22cad9cee96c97a8df8e5b238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;last&quot;&gt; &amp;laquo; last &lt;/a&gt;|&lt;a href=&quot;locale_name&quot;&gt; locale_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;last&quot;&gt;&amp;laquo;마지막&lt;/a&gt; | &lt;a href=&quot;locale_name&quot;&gt;locale_name&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87bc64ed7b9ae093621e5f1cc14409fdadb74a87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;last&quot;&gt; &amp;laquo; last &lt;/a&gt;|&lt;a href=&quot;lower&quot;&gt; lower &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;last&quot;&gt;&amp;laquo;마지막&lt;/a&gt; | &lt;a href=&quot;lower&quot;&gt;낮은&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a01630d00508cd03b3e19704eab188bcd6d00c0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;length&quot;&gt; &amp;laquo; length &lt;/a&gt;|&lt;a href=&quot;lower&quot;&gt; lower &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;length&quot;&gt;&amp;laquo;길이&lt;/a&gt; | &lt;a href=&quot;lower&quot;&gt;더 낮게&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfcab2dfc144803b37c2806ed8c24edbce30ccfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;length&quot;&gt; &amp;laquo; length &lt;/a&gt;|&lt;a href=&quot;merge&quot;&gt; merge &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;length&quot;&gt;&amp;laquo;길이&lt;/a&gt; | &lt;a href=&quot;merge&quot;&gt;병합&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8edcc32c54b2afdd058cb3ca5396b242a3f41330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;locale_name&quot;&gt; &amp;laquo; locale_name &lt;/a&gt;|&lt;a href=&quot;map&quot;&gt; map &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;locale_name&quot;&gt;&amp;laquo;locale_name&lt;/a&gt; | &lt;a href=&quot;map&quot;&gt;지도&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23590e34f6ec3bdf68389c91642710649aff66df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lower&quot;&gt; &amp;laquo; lower &lt;/a&gt;|&lt;a href=&quot;markdown_to_html&quot;&gt; markdown_to_html &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lower&quot;&gt;&amp;laquo;더 낮은&lt;/a&gt; | &lt;a href=&quot;markdown_to_html&quot;&gt;markdown_to_html&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33c4e9d6cd845480d8c6cb277559f7b25cd7bbe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lower&quot;&gt; &amp;laquo; lower &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lower&quot;&gt;&amp;laquo;낮은&lt;/a&gt; | &lt;a href=&quot;nl2br&quot;&gt;nl2br&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="561a9cf04bbf578a516f0572c428e9175e30500d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt; &amp;laquo; macro &lt;/a&gt;|&lt;a href=&quot;set&quot;&gt; set &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;&amp;laquo;매크로&lt;/a&gt; | &lt;a href=&quot;set&quot;&gt;세트&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f7c5699a484a0db1029b8b81146361aae25fc3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt;, &lt;a href=&quot;from&quot;&gt;from&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;매크로&lt;/a&gt; , &lt;a href=&quot;from&quot;&gt;에서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f98962c1a8976f8dbc3e24cf3b59217731f69aa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro&quot;&gt;macro&lt;/a&gt;, &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;매크로&lt;/a&gt; , &lt;a href=&quot;import&quot;&gt;수입&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8c76f13e7d142e2679bb49f887f6446d4bb7e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;map&quot;&gt; &amp;laquo; map &lt;/a&gt;|&lt;a href=&quot;merge&quot;&gt; merge &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;map&quot;&gt;&amp;laquo;지도&lt;/a&gt; | &lt;a href=&quot;merge&quot;&gt;병합&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f74026241caaff7b8742c45f11ebcae4088d17a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;markdown_to_html&quot;&gt; &amp;laquo; markdown_to_html &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;markdown_to_html&quot;&gt; &amp;laquo; markdown_to_html &lt;/a&gt;|&lt;a href=&quot;nl2br&quot;&gt; nl2br &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7550c442b9420153d4791bcd4a8dfcad93955e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;max&quot;&gt; &amp;laquo; max &lt;/a&gt;|&lt;a href=&quot;parent&quot;&gt; parent &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;max&quot;&gt;&amp;laquo;최대&lt;/a&gt; | &lt;a href=&quot;parent&quot;&gt;부모의 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1f4fb23821f46238459e6e2b7a3453326edbdbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;merge&quot;&gt; &amp;laquo; merge &lt;/a&gt;|&lt;a href=&quot;number_format&quot;&gt; number_format &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;merge&quot;&gt;&amp;laquo;병합&lt;/a&gt; | &lt;a href=&quot;number_format&quot;&gt;숫자 _ 형식&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1991a51a3124c551e867c95b465c1fbcfa7065c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;min&quot;&gt; &amp;laquo; min &lt;/a&gt;|&lt;a href=&quot;random&quot;&gt; random &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;min&quot;&gt;&amp;laquo;최소&lt;/a&gt; | &lt;a href=&quot;random&quot;&gt;무작위&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2d86eeaaa9088130ff6b2c007d72553674c1a41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;nl2br&quot;&gt; &amp;laquo; nl2br &lt;/a&gt;|&lt;a href=&quot;raw&quot;&gt; raw &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;nl2br&quot;&gt;&amp;laquo;nl2br&lt;/a&gt; | &lt;a href=&quot;raw&quot;&gt;생&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ebc14301946cf2ea7ba9461fdf0f74c02ea9378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;null&quot;&gt; &amp;laquo; null &lt;/a&gt;|&lt;a href=&quot;sameas&quot;&gt; same as &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;null&quot;&gt;&amp;laquo;null&lt;/a&gt; | &lt;a href=&quot;sameas&quot;&gt;&amp;raquo;와 동일&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4129d2cca47f6e1bebe5d131450701275d601cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number_format&quot;&gt; &amp;laquo; number_format &lt;/a&gt;|&lt;a href=&quot;reduce&quot;&gt; reduce &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number_format&quot;&gt;&amp;laquo;숫자 형식&lt;/a&gt; | &lt;a href=&quot;reduce&quot;&gt;감소&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8892cb18569a9ad1d3f77b8d193af5f47849e26b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number_format&quot;&gt; &amp;laquo; number_format &lt;/a&gt;|&lt;a href=&quot;replace&quot;&gt; replace &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number_format&quot;&gt;&amp;laquo;number_format&lt;/a&gt; | &lt;a href=&quot;replace&quot;&gt;교체&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="819f486fb3335c2fc9b46d664299821e5fd9359e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parent&quot;&gt; &amp;laquo; parent &lt;/a&gt;|&lt;a href=&quot;range&quot;&gt; range &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;parent&quot;&gt;&amp;laquo;부모&lt;/a&gt; | &lt;a href=&quot;range&quot;&gt;범위&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36b86310270c429231ea67387c2ffbfe0b2c31e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;random&quot;&gt; &amp;laquo; random &lt;/a&gt;|&lt;a href=&quot;source&quot;&gt; source &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;random&quot;&gt;&amp;laquo;랜덤&lt;/a&gt; | &lt;a href=&quot;source&quot;&gt;소스&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedd7ec3be9d1d926f04defa298dc398a532e534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt; &amp;laquo; range &lt;/a&gt;|&lt;a href=&quot;country_timezones&quot;&gt; country_timezones &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt;&amp;laquo;범위&lt;/a&gt; | &lt;a href=&quot;country_timezones&quot;&gt;country_timezones&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ab7dbde3653751026d8d7e4a84a03e09d65c43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt; &amp;laquo; range &lt;/a&gt;|&lt;a href=&quot;template_from_string&quot;&gt; template_from_string &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt;&amp;laquo;범위&lt;/a&gt; | &lt;a href=&quot;template_from_string&quot;&gt;template_from_string&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d07e2c9a3b9498ae2000fc4241cbdca68276a1ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw&quot;&gt; &amp;laquo; raw &lt;/a&gt;|&lt;a href=&quot;replace&quot;&gt; replace &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;raw&quot;&gt;&amp;laquo;원시&lt;/a&gt; | &lt;a href=&quot;replace&quot;&gt;교체&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88c402254032519e354f6e6f5938583ec1862c10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw&quot;&gt; &amp;laquo; raw &lt;/a&gt;|&lt;a href=&quot;reverse&quot;&gt; reverse &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;raw&quot;&gt;&amp;laquo;생&lt;/a&gt; | &lt;a href=&quot;reverse&quot;&gt;역전 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7908e7407e7c8fedd935bd4c22d850cfb43d263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recipes&quot;&gt; &amp;laquo; Recipes &lt;/a&gt;|&lt;a href=&quot;tags/index&quot;&gt; Tags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;recipes&quot;&gt;&amp;laquo;조리법&lt;/a&gt; | &lt;a href=&quot;tags/index&quot;&gt;태그&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13f6e6446e0ec7c21c18dbd5fb0a4eeb1da5d435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reduce&quot;&gt; &amp;laquo; reduce &lt;/a&gt;|&lt;a href=&quot;reverse&quot;&gt; reverse &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reduce&quot;&gt;&amp;laquo;감소&lt;/a&gt; | &lt;a href=&quot;reverse&quot;&gt;역전 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="482b30f2e72cc6220bc976f066380002f6a7ca63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;replace&quot;&gt; &amp;laquo; replace &lt;/a&gt;|&lt;a href=&quot;round&quot;&gt; round &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;replace&quot;&gt;&amp;laquo;바꾸기&lt;/a&gt; | &lt;a href=&quot;round&quot;&gt;라운드&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea63a5183106883042f03ce3060be09519915d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reverse&quot;&gt; &amp;laquo; reverse &lt;/a&gt;|&lt;a href=&quot;slice&quot;&gt; slice &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reverse&quot;&gt;&amp;laquo;역전&lt;/a&gt; | &lt;a href=&quot;slice&quot;&gt;슬라이스&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17e10e4c99c240ad2423a6bcff8d1efeb4e51f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;round&quot;&gt; &amp;laquo; round &lt;/a&gt;|&lt;a href=&quot;sort&quot;&gt; sort &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;round&quot;&gt;&amp;laquo;라운드&lt;/a&gt; | &lt;a href=&quot;sort&quot;&gt;정렬&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc01271584d44812ceec734c223f4c47abb2b7e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sandbox&quot;&gt; &amp;laquo; sandbox &lt;/a&gt;|&lt;a href=&quot;spaceless&quot;&gt; spaceless &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sandbox&quot;&gt;&amp;laquo;샌드 박스&lt;/a&gt; | &lt;a href=&quot;spaceless&quot;&gt;스페이스리스&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd54fceebdc0baaa4f2568fb39c95291ca7ab311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sandbox&quot;&gt; &amp;laquo; sandbox &lt;/a&gt;|&lt;a href=&quot;use&quot;&gt; use &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sandbox&quot;&gt;&amp;laquo;샌드 박스&lt;/a&gt; | &lt;a href=&quot;use&quot;&gt;사용하다 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="773dec3a1dc7d40ec5b3cb0435a541223e719eba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt; &amp;laquo; set &lt;/a&gt;|&lt;a href=&quot;use&quot;&gt; use &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;&amp;laquo;세트&lt;/a&gt; | &lt;a href=&quot;use&quot;&gt;사용하다 &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bac2f07f3e517f34b91fe4147c0bf1dfa31794e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt; &amp;laquo; set &lt;/a&gt;|&lt;a href=&quot;verbatim&quot;&gt; verbatim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;&amp;laquo;설정&lt;/a&gt; | &lt;a href=&quot;verbatim&quot;&gt;축어&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4387c2a790b6e872c63d304f4b693266b42c3308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;slice&quot;&gt; &amp;laquo; slice &lt;/a&gt;|&lt;a href=&quot;spaceless&quot;&gt; spaceless &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;slice&quot;&gt;&amp;laquo;슬라이스&lt;/a&gt; | &lt;a href=&quot;spaceless&quot;&gt;공백&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe60d68232492ff39ac9414bef4b01cc3dcdb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;slice&quot;&gt; &amp;laquo; slice &lt;/a&gt;|&lt;a href=&quot;split&quot;&gt; split &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;slice&quot;&gt;&amp;laquo;슬라이스&lt;/a&gt; | &lt;a href=&quot;split&quot;&gt;스플릿&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb94a2e485a42ada6e29e8e50b7bf4d73247c01c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sort&quot;&gt; &amp;laquo; sort &lt;/a&gt;|&lt;a href=&quot;split&quot;&gt; split &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sort&quot;&gt;&amp;laquo;정렬&lt;/a&gt; | &lt;a href=&quot;split&quot;&gt;분할&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="204cb8e40607ba0b405f250717e93cb78d7ca66f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sort&quot;&gt; &amp;laquo; sort &lt;/a&gt;|&lt;a href=&quot;striptags&quot;&gt; striptags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sort&quot;&gt;&amp;laquo;정렬&lt;/a&gt; | &lt;a href=&quot;striptags&quot;&gt;스트립 태그&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a396e6ce5612149064645fb880ba048a8ea1e77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;source&quot;&gt; &amp;laquo; source &lt;/a&gt;|&lt;a href=&quot;../tests/index&quot;&gt; Tests &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;source&quot;&gt;&amp;laquo;출처&lt;/a&gt; | &lt;a href=&quot;../tests/index&quot;&gt;테스트&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4d0caf13598c14992ea9564b571621af08e9808" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;source&quot;&gt; &amp;laquo; source &lt;/a&gt;|&lt;a href=&quot;template_from_string&quot;&gt; template_from_string &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;source&quot;&gt;&amp;laquo;소스&lt;/a&gt; | &lt;a href=&quot;template_from_string&quot;&gt;template_from_string&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99534deb19c09bc23eaf2589037dd0a602d11513" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spaceless&quot;&gt; &amp;laquo; spaceless &lt;/a&gt;|&lt;a href=&quot;striptags&quot;&gt; striptags &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spaceless&quot;&gt;&amp;laquo;공백&lt;/a&gt; | &lt;a href=&quot;striptags&quot;&gt;스트립 태그&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cf2ceaa70358c6f979a8bb370c80504ba850d20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spaceless&quot;&gt; &amp;laquo; spaceless &lt;/a&gt;|&lt;a href=&quot;verbatim&quot;&gt; verbatim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spaceless&quot;&gt;&amp;laquo;스페이스리스&lt;/a&gt; | &lt;a href=&quot;verbatim&quot;&gt;축약어&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b78e5537f6e00cc29270ec4040e5a474ef563843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;split&quot;&gt; &amp;laquo; split &lt;/a&gt;|&lt;a href=&quot;timezone_name&quot;&gt; timezone_name &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;split&quot;&gt;&amp;laquo;분할&lt;/a&gt; | &lt;a href=&quot;timezone_name&quot;&gt;timezone_name&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b14c455be70b803eac26d92b35c20b79c5457bd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;split&quot;&gt; &amp;laquo; split &lt;/a&gt;|&lt;a href=&quot;title&quot;&gt; title &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;split&quot;&gt;&amp;laquo;분할&lt;/a&gt; | &lt;a href=&quot;title&quot;&gt;제목&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79bbc5018db39a0dabf1dffe7826bb6480b8504a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;striptags&quot;&gt; &amp;laquo; striptags &lt;/a&gt;|&lt;a href=&quot;title&quot;&gt; title &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;striptags&quot;&gt;&amp;laquo;스트립 태그&lt;/a&gt; | &lt;a href=&quot;title&quot;&gt;제목&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50eef075cda312730583c86ef860507a51dafede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;striptags&quot;&gt; &amp;laquo; striptags &lt;/a&gt;|&lt;a href=&quot;trim&quot;&gt; trim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;striptags&quot;&gt;&amp;laquo;스트립 태그&lt;/a&gt; | &lt;a href=&quot;trim&quot;&gt;트림&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="693001f35f7d06eaf26035e5d7c26f583e99f1da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tags/index&quot;&gt;Tags&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;tags/index&quot;&gt;Tags&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="65e3dc56aea1f3161625835133603c62634e0cab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;templates&quot;&gt; &amp;laquo; Twig for Template Designers &lt;/a&gt;|&lt;a href=&quot;advanced&quot;&gt; Extending Twig &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;templates&quot;&gt;&amp;laquo;템플릿 디자이너를위한 나뭇 가지&lt;/a&gt; | &lt;a href=&quot;advanced&quot;&gt;나뭇 가지를 연장&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59e28a50210de21a390fb0df49384503f44f6fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tests/index&quot;&gt;Tests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tests/index&quot;&gt;Tests&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1790fd7c9251528225d2a2f22dfb15cddb1c3e18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;timezone_name&quot;&gt; &amp;laquo; timezone_name &lt;/a&gt;|&lt;a href=&quot;trim&quot;&gt; trim &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;timezone_name&quot;&gt;&amp;laquo;timezone_name&lt;/a&gt; | &lt;a href=&quot;trim&quot;&gt;트림&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc4232664ed85249efbe8b59fdd5232b82218469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;title&quot;&gt; &amp;laquo; title &lt;/a&gt;|&lt;a href=&quot;u&quot;&gt; u &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;title&quot;&gt;&amp;laquo;제목&lt;/a&gt; | &lt;a href=&quot;u&quot;&gt;u&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f052c50ff640e3cdf8bf7f52512b1689d02e403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;title&quot;&gt; &amp;laquo; title &lt;/a&gt;|&lt;a href=&quot;upper&quot;&gt; upper &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;title&quot;&gt;&amp;laquo;제목&lt;/a&gt; | &lt;a href=&quot;upper&quot;&gt;어퍼&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0a0d24847e2ebc34f85083d0290234de4ab785" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trim&quot;&gt; &amp;laquo; trim &lt;/a&gt;|&lt;a href=&quot;upper&quot;&gt; upper &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trim&quot;&gt;&amp;laquo;트림&lt;/a&gt; | &lt;a href=&quot;upper&quot;&gt;상단&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61f43b3367cde53e3053e3ad038987d409874cdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trim&quot;&gt; &amp;laquo; trim &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trim&quot;&gt;&amp;laquo;트림&lt;/a&gt; | &lt;a href=&quot;url_encode&quot;&gt;url_encode&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ef99184627456f7c1ab373ae586d11dc906d2c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;u&quot;&gt; &amp;laquo; u &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;u&quot;&gt; &amp;laquo; u &lt;/a&gt;|&lt;a href=&quot;url_encode&quot;&gt; url_encode &amp;raquo; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4552103dd6ba41474db2f230d47c30704c9ef4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upper&quot;&gt; &amp;laquo; upper &lt;/a&gt;|&lt;a href=&quot;../functions/index&quot;&gt; Functions &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;upper&quot;&gt;&amp;laquo;상단&lt;/a&gt; | &lt;a href=&quot;../functions/index&quot;&gt;기능&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ff2ee154ad899316685f10549fb9107218838aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;use&quot;&gt; &amp;laquo; use &lt;/a&gt;|&lt;a href=&quot;with&quot;&gt; with &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;use&quot;&gt;&amp;laquo;사용&lt;/a&gt; | &lt;a href=&quot;with&quot;&gt;와&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59783e551a9cf5dbf9c0cd9652b416135f110140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;verbatim&quot;&gt; &amp;laquo; verbatim &lt;/a&gt;|&lt;a href=&quot;../filters/index&quot;&gt; Filters &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;verbatim&quot;&gt;&amp;laquo;축 어적&lt;/a&gt; | &lt;a href=&quot;../filters/index&quot;&gt;필터&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39b6c8bd920a46198b95f1bbcf2d8af0fc049433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;verbatim&quot;&gt; &amp;laquo; verbatim &lt;/a&gt;|&lt;a href=&quot;deprecated&quot;&gt; deprecated &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;verbatim&quot;&gt;&amp;laquo;그대로&lt;/a&gt; | &lt;a href=&quot;deprecated&quot;&gt;더 이상 사용되지 않음&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ff108035350fd2ef7a60023adedbb92cba7203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;with&quot;&gt; &amp;laquo; with &lt;/a&gt;|&lt;a href=&quot;../filters/index&quot;&gt; Filters &amp;raquo; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;with&quot;&gt;&amp;laquo;포함&lt;/a&gt; | &lt;a href=&quot;../filters/index&quot;&gt;필터&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68adeb0559dfe78186752617ee10567f0f829479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;: Everything between two double or single quotes is a string. They are useful whenever you need a string in the template (for example as arguments to function calls, filters or just to extend or include a template). A string can contain a delimiter if it is preceded by a backslash (&lt;code&gt;\&lt;/code&gt;) &amp;ndash; like in &lt;code&gt;'It\'s good'&lt;/code&gt;. If the string contains a backslash (e.g. &lt;code&gt;'c:\Program Files'&lt;/code&gt;) escape it by doubling it (e.g. &lt;code&gt;'c:\\Program Files'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; : 두 개의 큰 따옴표 또는 작은 따옴표 사이의 모든 것이 문자열입니다. 템플릿에 문자열이 필요할 때마다 유용합니다 (예 : 함수 호출, 필터에 대한 인수로 사용하거나 템플릿을 확장하거나 포함하기위한 용도로 사용). &lt;code&gt;'It\'s good'&lt;/code&gt; 과 같이 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; ) 가 앞에 오는 경우 문자열에는 구분 기호가 포함될 수 있습니다 . 문자열에 백 슬래시 (예 : &lt;code&gt;'c:\Program Files'&lt;/code&gt; ) 가 포함되어 있으면 두 배로 이스케이프 처리합니다 (예 : &lt;code&gt;'c:\\Program Files'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7eac074b7f27387856b6bc06e8b305943c3b7dd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;: Everything between two double or single quotes is a string. They are useful whenever you need a string in the template (for example as arguments to function calls, filters or just to extend or include a template). A string can contain a delimiter if it is preceded by a backslash (&lt;code&gt;\&lt;/code&gt;) -- like in &lt;code&gt;'It\'s good'&lt;/code&gt;. If the string contains a backslash (e.g. &lt;code&gt;'c:\Program Files'&lt;/code&gt;) escape it by doubling it (e.g. &lt;code&gt;'c:\\Program Files'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; : 두 개의 큰 따옴표 나 작은 따옴표 사이의 모든 문자열입니다. 템플릿에 문자열이 필요할 때마다 유용합니다 (예 : 함수 호출, 필터 또는 템플릿 확장 또는 포함을위한 인수). 문자열 앞에 &lt;code&gt;'It\'s good'&lt;/code&gt; 과 같이 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; ) 가 오는 경우 구분 기호를 포함 할 수 있습니다 . 문자열에 백 슬래시가 포함 된 경우 (예 : &lt;code&gt;'c:\Program Files'&lt;/code&gt; ) 두 배로 늘려서 탈출하십시오 (예 : &lt;code&gt;'c:\\Program Files'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="67a456b1f2a350ea1e238988637c27343ce07c6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt;: Calculates the remainder of an integer division. &lt;code&gt;{{ 11 % 7 }}&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; : 정수 나누기의 나머지를 계산합니다. &lt;code&gt;{{ 11 % 7 }}&lt;/code&gt; 은 &lt;code&gt;4&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76c670387f6227af7f0dcf7bf27215ca6da0bcd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(expr)&lt;/code&gt;: Groups an expression.</source>
          <target state="translated">&lt;code&gt;(expr)&lt;/code&gt; : 표현식을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="7dc558dedb5667491fce06b188a847e0761b0dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;: Raises the left operand to the power of the right operand. &lt;code&gt;{{ 2 **
3 }}&lt;/code&gt; would return &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; : 왼쪽 피연산자를 오른쪽 피연산자의 거듭 제곱으로 올립니다. &lt;code&gt;{{ 2 ** 3 }}&lt;/code&gt; 은 &lt;code&gt;8&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3d2b5c057603aa687fd041d7579ce453de9aac62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: Multiplies the left operand with the right one. &lt;code&gt;{{ 2 * 2 }}&lt;/code&gt; would return &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; : 왼쪽 피연산자에 오른쪽 피연산자를 곱합니다. &lt;code&gt;{{ 2 * 2 }}&lt;/code&gt; 는 &lt;code&gt;4&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f99ff64284e747a01d488071f051a9925dd97bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: Adds two numbers together (the operands are casted to numbers). &lt;code&gt;{{
1 + 1 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; : 두 숫자를 더합니다 (피연산자는 숫자로 캐스트됩니다). &lt;code&gt;{{ 1 + 1 }}&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac8ad4158f95f089a57f1195c7d1f3c07ddf8439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: Adds two objects together (the operands are casted to numbers). &lt;code&gt;{{
1 + 1 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; : 두 객체를 더합니다 (피연산자는 숫자로 캐스트 됨). &lt;code&gt;{{ 1 + 1 }}&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69e3f7bc2724a62821823708504885762eeb017e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;,&lt;/code&gt; as the thousands separator.</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; 천 단위 분리있다.</target>
        </trans-unit>
        <trans-unit id="9cdee98c00618154e630150e42faa6f8f1fea5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;: Subtracts the second number from the first one. &lt;code&gt;{{ 3 - 2 }}&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; : 첫 번째 숫자에서 두 번째 숫자를 뺍니다. &lt;code&gt;{{ 3 - 2 }}&lt;/code&gt; 은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2df9773b056a11c03c36ba467f921a4ce2970497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;: Creates a sequence based on the operand before and after the operator (this is just syntactic sugar for the &lt;a href=&quot;functions/range&quot;&gt;range&lt;/a&gt; function):</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; : 연산자 전후의 피연산자를 기반으로 시퀀스를 작성합니다 ( &lt;a href=&quot;functions/range&quot;&gt;범위&lt;/a&gt; 함수의 구문 설탕 임).</target>
        </trans-unit>
        <trans-unit id="5f399297ecb5f9d15947241234aae0c439690f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;: Creates a sequence based on the operand before and after the operator (this is syntactic sugar for the &lt;a href=&quot;functions/range&quot;&gt;range&lt;/a&gt; function):</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; : 연산자 앞뒤의 피연산자를 기반으로 시퀀스를 만듭니다 ( &lt;a href=&quot;functions/range&quot;&gt;범위&lt;/a&gt; 함수의 구문 설탕 ).</target>
        </trans-unit>
        <trans-unit id="b0e67803b2f4e163d5945afe61ca13c92ddf0918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; as the decimal point.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 소수점으로.</target>
        </trans-unit>
        <trans-unit id="96cbc3cfd4bd5431c1f9dc9126a57dd1739fcf0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;: Gets an attribute of a variable.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; : 변수의 속성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9bd76b5497b4f08507d0266dde593c90e03c8291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;: Gets an attribute of an object.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; : 객체의 속성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2bb1e9c1e54014070b5a34acc1d0a9972b0c7fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt;: Divides two numbers and returns the floored integer result. &lt;code&gt;{{ 20
// 7 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;{{ -20  // 7 }}&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; (this is just syntactic sugar for the &lt;a href=&quot;filters/round&quot;&gt;round&lt;/a&gt; filter).</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; : 두 숫자를 나누고 바닥 정수 결과를 반환합니다. &lt;code&gt;{{ 20 // 7 }}&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 이고, &lt;code&gt;{{ -20 // 7 }}&lt;/code&gt; 은 &lt;code&gt;-3&lt;/code&gt; 입니다 (이것은 &lt;a href=&quot;filters/round&quot;&gt;원형&lt;/a&gt; 필터의 구문 설탕입니다 ).</target>
        </trans-unit>
        <trans-unit id="63baa23152ef70b9531e0106356981c3516c1173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt;: Divides two numbers and returns the floored integer result. &lt;code&gt;{{ 20
// 7 }}&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;{{ -20&amp;nbsp; // 7 }}&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; (this is just syntactic sugar for the &lt;a href=&quot;filters/round&quot;&gt;round&lt;/a&gt; filter).</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; : 두 숫자를 나누고 내림 된 정수 결과를 반환합니다. &lt;code&gt;{{ 20 // 7 }}&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 이고 &lt;code&gt;{{ -20&amp;nbsp; // 7 }}&lt;/code&gt; 은 &lt;code&gt;-3&lt;/code&gt; 입니다 ( &lt;a href=&quot;filters/round&quot;&gt;라운드&lt;/a&gt; 필터의 구문 설탕 일뿐입니다 ).</target>
        </trans-unit>
        <trans-unit id="aed343de284b589f6792a7e52da177a9576b0103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt;: Divides two numbers. The returned value will be a floating point number. &lt;code&gt;{{ 1 / 2 }}&lt;/code&gt; is &lt;code&gt;{{ 0.5 }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; : 두 숫자를 나눕니다. 반환되는 값은 부동 소수점 숫자입니다. &lt;code&gt;{{ 1 / 2 }}&lt;/code&gt; 는 &lt;code&gt;{{ 0.5 }}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a16e612d99e3ba5ef070ad0f051089dd866ca0fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt;: Integers and floating point numbers are created by just writing the number down. If a dot is present the number is a float, otherwise an integer.</source>
          <target state="translated">&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt; : 정수와 부동 소수점 숫자는 숫자를 쓰면됩니다. 점이 있으면 숫자는 부동 소수점이고 그렇지 않으면 정수입니다.</target>
        </trans-unit>
        <trans-unit id="bb012efe6f73b9732fead3fe3452507c6724bc47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt;: Integers and floating point numbers are created by writing the number down. If a dot is present the number is a float, otherwise an integer.</source>
          <target state="translated">&lt;code&gt;42&lt;/code&gt; / &lt;code&gt;42.23&lt;/code&gt; : 숫자를 적어 정수와 부동 소수점 숫자가 생성됩니다. 점이 있으면 숫자는 부동 소수점이고 그렇지 않으면 정수입니다.</target>
        </trans-unit>
        <trans-unit id="a706fb53d1324068d838c6b65333c2e9f2d1f743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt;: The ternary operator:</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; : 삼항 연산자 :</target>
        </trans-unit>
        <trans-unit id="8ba3306623e3b66961a95e4131e5ad88e232bddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;??&lt;/code&gt;: The null-coalescing operator:</source>
          <target state="translated">&lt;code&gt;??&lt;/code&gt; : 널 병합 연산자 :</target>
        </trans-unit>
        <trans-unit id="4d4483144829e0b6b36199f640ed97a9c29399f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error&lt;/code&gt;: The base exception for all errors.</source>
          <target state="translated">&lt;code&gt;Twig_Error&lt;/code&gt; : 모든 오류의 기본 예외입니다.</target>
        </trans-unit>
        <trans-unit id="f5329e77a3ab992075825dcf12ee070759bd9584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Loader&lt;/code&gt;: Thrown when an error occurs during template loading.</source>
          <target state="translated">&lt;code&gt;Twig_Error_Loader&lt;/code&gt; : 템플릿 로딩 중 오류가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="36694247c54ecb7bcb6981010e258818e809c609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Runtime&lt;/code&gt;: Thrown when an error occurs at runtime (when a filter does not exist for instance).</source>
          <target state="translated">&lt;code&gt;Twig_Error_Runtime&lt;/code&gt; : 런타임에 오류가 발생하면 ( 예 : 필터가없는 경우) 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dc345fba1a0f2c7f400d2021e09ac828024a3103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Error_Syntax&lt;/code&gt;: Thrown to tell the user that there is a problem with the template syntax.</source>
          <target state="translated">&lt;code&gt;Twig_Error_Syntax&lt;/code&gt; : 템플릿 구문에 문제가 있음을 사용자에게 알리기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9d0dab3a45404c190c7aefcca51513a314de16fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Array&lt;/code&gt; loads a template from a PHP array. It's passed an array of strings bound to template names:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Array&lt;/code&gt; 는 PHP 배열에서 템플릿을로드합니다. 템플릿 이름에 바인딩 된 문자열 배열이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ff398614316619443713414a90c1d5032def14aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; accepts any loader that implements &lt;code&gt;Twig_LoaderInterface&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; 는 구현의 그 어떤 로더 받아 &lt;code&gt;Twig_LoaderInterface&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="666ec4037bfc4e9d0de722f89ed5e57debf8af06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; delegates the loading of templates to other loaders:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Chain&lt;/code&gt; 은 템플릿 로딩을 다른 로더에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="2c3ee64136d743b8f0e89a2ec4726fd64776bac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; loads templates from the file system. This loader can find templates in folders on the file system and is the preferred way to load them:</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; 은 파일 시스템에서 템플릿을로드합니다. 이 로더는 파일 시스템의 폴더에서 템플리트를 찾을 수 있으며이를로드하는 데 선호되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a454dd136ddafece86ee659465ec62911af32548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; support absolute and relative paths. Using relative paths is preferred as it makes the cache keys independent of the project root directory (for instance, it allows warming the cache from a build server where the directory might be different from the one used on production servers):</source>
          <target state="translated">&lt;code&gt;Twig_Loader_Filesystem&lt;/code&gt; 은 절대 및 상대 경로를 지원합니다. 캐시 키를 프로젝트 루트 디렉토리와 독립적으로 만들기 때문에 상대 경로를 사용하는 것이 좋습니다 (예를 들어, 디렉토리가 프로덕션 서버에서 사용되는 것과 다를 수있는 빌드 서버에서 캐시를 예열 할 수 있도록 허용 함).</target>
        </trans-unit>
        <trans-unit id="78c4b0c7edcf7a1461dd0dc4d78735624de0d07a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_ALL&lt;/code&gt;, enables all optimizations (this is the default value).</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_ALL&lt;/code&gt; 은 모든 최적화를 가능하게합니다 (이것이 기본값입니다).</target>
        </trans-unit>
        <trans-unit id="d3d0a8d747bd3c131c8e61c07af925b02a59b75b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_FOR&lt;/code&gt;, optimizes the &lt;code&gt;for&lt;/code&gt; tag by removing the &lt;code&gt;loop&lt;/code&gt; variable creation whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_FOR&lt;/code&gt; 는 가능할 때마다 &lt;code&gt;loop&lt;/code&gt; 변수 작성 을 제거하여 &lt;code&gt;for&lt;/code&gt; 태그를 최적화 합니다.</target>
        </trans-unit>
        <trans-unit id="28641a8771513abe6ad6fe7d53580f51a7768aee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_NONE&lt;/code&gt;, disables all optimizations. This reduces the compilation time, but it can increase the execution time and the consumed memory.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_NONE&lt;/code&gt; 은 모든 최적화를 비활성화합니다. 이렇게하면 컴파일 시간이 줄어들지 만 실행 시간과 소비되는 메모리가 늘어날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="258fc19a834127995bc88894ecc124e8ac4491d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_RAW_FILTER&lt;/code&gt;, removes the &lt;code&gt;raw&lt;/code&gt; filter whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_RAW_FILTER&lt;/code&gt; 는 가능할 때마다 &lt;code&gt;raw&lt;/code&gt; 필터를 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="3a5b6814006830125d9b96ad7050999173b90650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_VAR_ACCESS&lt;/code&gt;, simplifies the creation and access of variables in the compiled templates whenever possible.</source>
          <target state="translated">&lt;code&gt;Twig_NodeVisitor_Optimizer::OPTIMIZE_VAR_ACCESS&lt;/code&gt; 는 가능할 때마다 컴파일 된 템플릿에서 변수의 작성 및 액세스를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="b44d50aca7948ae94e7ffd03b194b40212595a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt;: Thrown when an unallowed tag, filter, or method is called in a sandboxed template.</source>
          <target state="translated">&lt;code&gt;Twig_Sandbox_SecurityError&lt;/code&gt; : 샌드 박스 템플릿에서 허용되지 않은 태그, 필터 또는 메서드가 호출 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a894de489ee856d15fe9813fe6483af505bcb323" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::BLOCK_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::BLOCK_END_TYPE&lt;/code&gt;: Delimiters for blocks (&lt;code&gt;{% %}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Twig_Token::BLOCK_START_TYPE&lt;/code&gt; , &lt;code&gt;Twig_Token::BLOCK_END_TYPE&lt;/code&gt; : 블록 구분 기호 ( &lt;code&gt;{% %}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="eaa9e4485b9506a89604f93421f9fcfe8ee16ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::EOF_TYPE&lt;/code&gt;: Ends of template.</source>
          <target state="translated">&lt;code&gt;Twig_Token::EOF_TYPE&lt;/code&gt; : 템플릿 끝.</target>
        </trans-unit>
        <trans-unit id="4413028ab1ab87e8665b313adddc72f4e33b7520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::INTERPOLATION_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::INTERPOLATION_END_TYPE&lt;/code&gt;: Delimiters for string interpolation;</source>
          <target state="translated">&lt;code&gt;Twig_Token::INTERPOLATION_START_TYPE&lt;/code&gt; , &lt;code&gt;Twig_Token::INTERPOLATION_END_TYPE&lt;/code&gt; : 문자열 보간을위한 구분자;</target>
        </trans-unit>
        <trans-unit id="8878912125baf8b296d1bf0ed09bce05acd6057f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::NAME_TYPE&lt;/code&gt;: A name in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::NAME_TYPE&lt;/code&gt; : 표현식의 이름.</target>
        </trans-unit>
        <trans-unit id="08bc5658c032d630a943ca14268f7294e670981b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::NUMBER_TYPE&lt;/code&gt;: A number in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::NUMBER_TYPE&lt;/code&gt; : 표현식의 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="02aaaef5e3efeef8800705089a06f9df39b8ec22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::OPERATOR_TYPE&lt;/code&gt;: An operator;</source>
          <target state="translated">&lt;code&gt;Twig_Token::OPERATOR_TYPE&lt;/code&gt; : 연산자;</target>
        </trans-unit>
        <trans-unit id="0d19d5aed13db21524ee11fcc3f725c4582eea75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::PUNCTUATION_TYPE&lt;/code&gt;: A punctuation sign;</source>
          <target state="translated">&lt;code&gt;Twig_Token::PUNCTUATION_TYPE&lt;/code&gt; : 문장 부호;</target>
        </trans-unit>
        <trans-unit id="45ef985ce2fc6144888317f4b2a279c3469c4fdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::STRING_TYPE&lt;/code&gt;: A string in an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::STRING_TYPE&lt;/code&gt; : 표현식의 문자열.</target>
        </trans-unit>
        <trans-unit id="77b6be30730cf1229f510e8bb5952039fc9e0767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::TEXT_TYPE&lt;/code&gt;: A text outside an expression;</source>
          <target state="translated">&lt;code&gt;Twig_Token::TEXT_TYPE&lt;/code&gt; : 표현식 외부의 텍스트.</target>
        </trans-unit>
        <trans-unit id="57c92a0dc9a0ae689f9a81e766216a0384ec6663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Twig_Token::VAR_START_TYPE&lt;/code&gt;, &lt;code&gt;Twig_Token::VAR_END_TYPE&lt;/code&gt;: Delimiters for variables (&lt;code&gt;{{ }}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Twig_Token::VAR_START_TYPE&lt;/code&gt; , &lt;code&gt;Twig_Token::VAR_END_TYPE&lt;/code&gt; : 변수 구분 기호 ( &lt;code&gt;{{ }}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d5a0b5e32f24fb0afb94083703d155a532b48d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;foo&quot;, &quot;bar&quot;]&lt;/code&gt;: Arrays are defined by a sequence of expressions separated by a comma (&lt;code&gt;,&lt;/code&gt;) and wrapped with squared brackets (&lt;code&gt;[]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[&quot;foo&quot;, &quot;bar&quot;]&lt;/code&gt; : 배열은 쉼표 ( &lt;code&gt;,&lt;/code&gt; ) 로 구분되고 대괄호 ( &lt;code&gt;[]&lt;/code&gt; )로 묶인 일련의 표현식으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="12a20b0f876dffd0a94d7b62a8c6d22e5689c1ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\Error&lt;/code&gt;: The base exception for all errors.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\Error&lt;/code&gt; : 모든 오류에 대한 기본 예외입니다.</target>
        </trans-unit>
        <trans-unit id="e7d9c3275c739c6b9d3857fe11194da9922e07d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\LoaderError&lt;/code&gt;: Thrown when an error occurs during template loading.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\LoaderError&lt;/code&gt; : 템플릿로드 중 오류가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="41e51794c2da306bfd1cf0dbfb1bc9fb9328919a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\RuntimeError&lt;/code&gt;: Thrown when an error occurs at runtime (when a filter does not exist for instance).</source>
          <target state="translated">&lt;code&gt;\Twig\Error\RuntimeError&lt;/code&gt; : 런타임에 오류가 발생할 때 발생합니다 (예를 들어 필터가 존재하지 않는 경우).</target>
        </trans-unit>
        <trans-unit id="ce694a5e7b288486236b5554d703fdec6f0af575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt;: Thrown to tell the user that there is a problem with the template syntax.</source>
          <target state="translated">&lt;code&gt;\Twig\Error\SyntaxError&lt;/code&gt; : 템플릿 구문에 문제가 있음을 사용자에게 알리기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a4a708fe9d0e2ad82a2a60de4c59af76b5753a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt; loads a template from a PHP array. It is passed an array of strings bound to template names:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\ArrayLoader&lt;/code&gt; 는 PHP 배열에서 템플릿을로드합니다. 템플릿 이름에 바인딩 된 문자열 배열이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6adfd67d6a6a2143a326e93d9912267de257056f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; delegates the loading of templates to other loaders:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\ChainLoader&lt;/code&gt; 는 템플릿로드를 다른 로더에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="86743a9a799c8e3304185fecb30ca282a4aa0fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; loads templates from the file system. This loader can find templates in folders on the file system and is the preferred way to load them:</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; 는 파일 시스템에서 템플릿을로드합니다. 이 로더는 파일 시스템의 폴더에서 템플릿을 찾을 수 있으며이를로드하는 데 선호되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="42dec6f9d20798310e92065d32f48f72e9f0517f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; support absolute and relative paths. Using relative paths is preferred as it makes the cache keys independent of the project root directory (for instance, it allows warming the cache from a build server where the directory might be different from the one used on production servers):</source>
          <target state="translated">&lt;code&gt;\Twig\Loader\FilesystemLoader&lt;/code&gt; 는 절대 및 상대 경로를 지원합니다. 상대 경로를 사용하면 캐시 키가 프로젝트 루트 디렉토리와 독립적으로 만들어 지므로 선호됩니다 (예를 들어, 디렉토리가 프로덕션 서버에서 사용되는 것과 다를 수있는 빌드 서버에서 캐시를 워밍 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="82de0cd6ee7085aaecb354735868fc36c0a7e4dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_ALL&lt;/code&gt;, enables all optimizations (this is the default value).</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_ALL&lt;/code&gt; , 모든 최적화를 활성화합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="5f502f3b399809234cc4705a84fe6468abf66290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_FOR&lt;/code&gt;, optimizes the &lt;code&gt;for&lt;/code&gt; tag by removing the &lt;code&gt;loop&lt;/code&gt; variable creation whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_FOR&lt;/code&gt; 는 가능할 때마다 &lt;code&gt;loop&lt;/code&gt; 변수 생성 을 제거하여 &lt;code&gt;for&lt;/code&gt; 태그를 최적화 합니다.</target>
        </trans-unit>
        <trans-unit id="a0a195e3d7ccfe77769eae4d1bb1d7faf8429143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_NONE&lt;/code&gt;, disables all optimizations. This reduces the compilation time, but it can increase the execution time and the consumed memory.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_NONE&lt;/code&gt; , 모든 최적화를 비활성화합니다. 이렇게하면 컴파일 시간이 줄어들지 만 실행 시간과 사용되는 메모리가 늘어날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f67c9b333e892c6115d0251accc2af8e9eab5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_RAW_FILTER&lt;/code&gt;, removes the &lt;code&gt;raw&lt;/code&gt; filter whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_RAW_FILTER&lt;/code&gt; 는 가능할 때마다 &lt;code&gt;raw&lt;/code&gt; 필터를 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="8648b25ca583313dc1418a5071b8beeea3798bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_VAR_ACCESS&lt;/code&gt;, simplifies the creation and access of variables in the compiled templates whenever possible.</source>
          <target state="translated">&lt;code&gt;\Twig\NodeVisitor\OptimizerNodeVisitor::OPTIMIZE_VAR_ACCESS&lt;/code&gt; 는 가능할 때마다 컴파일 된 템플릿에서 변수의 생성 및 액세스를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="036b594962395994a61e2376b568aefbbc6a46be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt;: Thrown when an unallowed tag, filter, or method is called in a sandboxed template.</source>
          <target state="translated">&lt;code&gt;\Twig\Sandbox\SecurityError&lt;/code&gt; : 샌드 박스 템플릿에서 허용되지 않는 태그, 필터 또는 메서드가 호출되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="48c6aed5373e9eb47b7e15e6a38beed7919d531a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::BLOCK_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::BLOCK_END_TYPE&lt;/code&gt;: Delimiters for blocks (&lt;code&gt;{% %}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;\Twig\Token::BLOCK_START_TYPE&lt;/code&gt; , &lt;code&gt;\Twig\Token::BLOCK_END_TYPE&lt;/code&gt; : 블록 구분자 ( &lt;code&gt;{% %}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c64376c4df87bb4798ebe379c83af7c764b489a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::EOF_TYPE&lt;/code&gt;: Ends of template.</source>
          <target state="translated">&lt;code&gt;\Twig\Token::EOF_TYPE&lt;/code&gt; : 템플릿 끝.</target>
        </trans-unit>
        <trans-unit id="30ae5e8d730500c203011a0c2b23f1f6bc40c234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::INTERPOLATION_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::INTERPOLATION_END_TYPE&lt;/code&gt;: Delimiters for string interpolation;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::INTERPOLATION_START_TYPE&lt;/code&gt; , &lt;code&gt;\Twig\Token::INTERPOLATION_END_TYPE&lt;/code&gt; : 문자열 보간을위한 구분 기호;</target>
        </trans-unit>
        <trans-unit id="caee34697965cc596e9ceac63e8b7183baf73aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::NAME_TYPE&lt;/code&gt;: A name in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::NAME_TYPE&lt;/code&gt; : 표현식의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="903ad635c3cc19851c99a1d170d4bb8b64d931ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::NUMBER_TYPE&lt;/code&gt;: A number in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::NUMBER_TYPE&lt;/code&gt; : 표현식의 숫자.</target>
        </trans-unit>
        <trans-unit id="9e35952444fce11f87d72091dc60cfb3e1c24d34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::OPERATOR_TYPE&lt;/code&gt;: An operator;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::OPERATOR_TYPE&lt;/code&gt; : 연산자;</target>
        </trans-unit>
        <trans-unit id="a4a057a4e8f0b0424072ab31487c9ce26b497623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::PUNCTUATION_TYPE&lt;/code&gt;: A punctuation sign;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::PUNCTUATION_TYPE&lt;/code&gt; : 구두점 기호;</target>
        </trans-unit>
        <trans-unit id="2c4c8a1bfb0b9ccd457ef25647b598e017efd139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::STRING_TYPE&lt;/code&gt;: A string in an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::STRING_TYPE&lt;/code&gt; : 표현식의 문자열.</target>
        </trans-unit>
        <trans-unit id="d13da03bb52d936649afe3a2397d52b2f87e5646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::TEXT_TYPE&lt;/code&gt;: A text outside an expression;</source>
          <target state="translated">&lt;code&gt;\Twig\Token::TEXT_TYPE&lt;/code&gt; : 표현식 외부의 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="d97be16156a9ad38ce66c5769c1ae78e1a28e0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\Twig\Token::VAR_START_TYPE&lt;/code&gt;, &lt;code&gt;\Twig\Token::VAR_END_TYPE&lt;/code&gt;: Delimiters for variables (&lt;code&gt;{{ }}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;\Twig\Token::VAR_START_TYPE&lt;/code&gt; , &lt;code&gt;\Twig\Token::VAR_END_TYPE&lt;/code&gt; : 변수 구분자 ( &lt;code&gt;{{ }}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="82ff0896ed569eff54417827955cd27ff1419362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_charset&lt;/code&gt;: references the current charset.</source>
          <target state="translated">&lt;code&gt;_charset&lt;/code&gt; : 현재 문자 세트를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="0bae122111862402866865d2a39f65dc61c8f197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_context&lt;/code&gt;: references the current context;</source>
          <target state="translated">&lt;code&gt;_context&lt;/code&gt; : 현재 컨텍스트를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="ddfb239f5a7e9e7b7853ee154946c850f0769a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_self&lt;/code&gt;: references the current template name;</source>
          <target state="translated">&lt;code&gt;_self&lt;/code&gt; : 현재 템플릿 이름을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="0cdb80018b98d472f9da9f2154968f58f12e6718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addDebugInfo()&lt;/code&gt;: Adds the line of the original template file related to the current node as a comment.</source>
          <target state="translated">&lt;code&gt;addDebugInfo()&lt;/code&gt; : 현재 노드와 관련된 원본 템플릿 파일의 행을 주석으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c388bf33dc55fbcbd46b92b49692b3a633b944a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowable_tags&lt;/code&gt;: Tags which should not be stripped</source>
          <target state="translated">&lt;code&gt;allowable_tags&lt;/code&gt; : 제거해서는 안되는 태그</target>
        </trans-unit>
        <trans-unit id="0b32513b3e1ba982c04115190b5b36fcb9fec2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;: Returns true if the left and the right operands are both true.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; : 왼쪽과 오른쪽 피연산자가 모두 true이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e0222d3ade18c3e5a46596c42a267a35da454de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;: The separator for the last pair of input items</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; : 마지막 입력 항목 쌍의 구분 기호</target>
        </trans-unit>
        <trans-unit id="78645f723419b0631a3acaa5942a8d19a34425a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt;: The sequence or mapping</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; : 시퀀스 또는 매핑</target>
        </trans-unit>
        <trans-unit id="a6a5d12e36229bec35ad4b5c92a192eef9a99c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrow&lt;/code&gt;: An arrow function</source>
          <target state="translated">&lt;code&gt;arrow&lt;/code&gt; : 화살표 기능</target>
        </trans-unit>
        <trans-unit id="902b138d4cc0b71f649374f3553f5f3112813d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrow&lt;/code&gt;: The arrow function</source>
          <target state="translated">&lt;code&gt;arrow&lt;/code&gt; : 화살표 기능</target>
        </trans-unit>
        <trans-unit id="53674e08e00cf7e13e02e1a5706b55e2bd1d8391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt;: A map of attributes</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; : 속성 맵</target>
        </trans-unit>
        <trans-unit id="2dc2dd2e6096003c1f1d680fe415e3ae59e2beaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_reload&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;auto_reload&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3f4984fc137167b054aea3a9c96c16e9cf9b47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoescape&lt;/code&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;autoescape&lt;/code&gt;&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e31cbe727939990a8ad35acd79bb95818f71748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_template_class&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; (defaults to &lt;code&gt;Twig_Template&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;base_template_class&lt;/code&gt; &lt;em&gt;문자열&lt;/em&gt; (기본값은 &lt;code&gt;Twig_Template&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="db8391d08d16f4911333c096c22dde1077ccd98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; &lt;em&gt;문자열&lt;/em&gt; 또는 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a87db29648044f6c232f9526bdc465d28d4c33c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil&lt;/code&gt; always rounds up;</source>
          <target state="translated">&lt;code&gt;ceil&lt;/code&gt; 은 항상 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="1095fec08a10f31cbdde9b14988d6a87bed6810f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;character_mask&lt;/code&gt;: The characters to strip</source>
          <target state="translated">&lt;code&gt;character_mask&lt;/code&gt; : 제거 할 문자</target>
        </trans-unit>
        <trans-unit id="69ab44ba1560263906b112354df2cf2c6f1f441f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt;: The string charset</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; : 문자열 문자셋</target>
        </trans-unit>
        <trans-unit id="a51c991e9e9606e43b36455c4c071f9a84521079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt;&lt;em&gt;string&lt;/em&gt; (defaults to &lt;code&gt;utf-8&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; &lt;em&gt;문자열&lt;/em&gt; (기본값은 &lt;code&gt;utf-8&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b30a99e7c62a59d7fe378b1eee766c89920c8630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common&lt;/code&gt; rounds either up or down (rounds the value up to precision decimal places away from zero, when it is half way there &amp;ndash; making 1.5 into 2 and -1.5 into -2);</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; 은 올림 또는 내림합니다 (값이 0에서 멀어지는 정밀도 소수 자리까지 반올림하여 반올림하여 1.5를 2로, -1.5를 -2로 만듭니다).</target>
        </trans-unit>
        <trans-unit id="c3e5bf7a078b36db933fe48662dcbee8cbb11aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common&lt;/code&gt; rounds either up or down (rounds the value up to precision decimal places away from zero, when it is half way there -- making 1.5 into 2 and -1.5 into -2);</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; 반올림 또는 반올림 (반값이있는 경우 0에서 멀어 질 경우 소수점 이하 자릿수까지 올림)-1.5는 2로, -1.5는 -2로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="566426416c5a108c1a8d9f59e7f15db1df99d80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constant&lt;/code&gt; checks if a variable has the exact same value as a constant. You can use either global constants or class constants:</source>
          <target state="translated">&lt;code&gt;constant&lt;/code&gt; 변수가 상수와 정확히 같은 값을 갖는지 확인합니다. 전역 상수 또는 클래스 상수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4145601e18bcd5ff029315fa26bb588bb4569ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constant&lt;/code&gt; returns the constant value for a given string:</source>
          <target state="translated">&lt;code&gt;constant&lt;/code&gt; 주어진 문자열에 대한 상수 값을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="61a8d878bd6cd3e59405d419092714c1da976443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: The context to dump</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; : 덤프 할 컨텍스트</target>
        </trans-unit>
        <trans-unit id="c54502aa343e0f024ddc97f8281b188bec0aca5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt;: escapes a string for the &lt;strong&gt;CSS context&lt;/strong&gt;. CSS escaping can be applied to any string being inserted into CSS and escapes everything except alphanumerics.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; : &lt;strong&gt;CSS 컨텍스트에&lt;/strong&gt; 대한 문자열을 이스케이프합니다 . CSS 이스케이프는 CSS에 삽입되는 모든 문자열에 적용 할 수 있으며 영숫자를 제외한 모든 것을 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="d4f11fb9e18e39fbb105cc4b500800436cb2f12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt;: escapes a string for the &lt;strong&gt;CSS&lt;/strong&gt; context. CSS escaping can be applied to any string being inserted into CSS and escapes everything except alphanumerics.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; : &lt;strong&gt;CSS&lt;/strong&gt; 컨텍스트에 대한 문자열을 이스케이프합니다 . CSS 이스케이프는 CSS에 삽입되는 모든 문자열에 적용 할 수 있으며 영숫자를 제외한 모든 것을 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="fc9c56c9698e709c99c5f20779cf53cd9181989a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currency&lt;/code&gt;: The currency</source>
          <target state="translated">&lt;code&gt;currency&lt;/code&gt; : 통화</target>
        </trans-unit>
        <trans-unit id="a7947d57fe5bac192748fe268eefe6ef3521e0c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currency&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;currency&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="8767c4ab6e6721f031660b6a0f9f9905355080f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;: The date</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; : 날짜</target>
        </trans-unit>
        <trans-unit id="177e44bb8a7c11eca0b1868d211359359a502539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dateFormat&lt;/code&gt;: The date format</source>
          <target state="translated">&lt;code&gt;dateFormat&lt;/code&gt; : 날짜 형식</target>
        </trans-unit>
        <trans-unit id="c494d2aa6d128157f631ceda8c7caab6aaa22736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debug&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66541ba41ccb48a464e00e7a9303fe4410b72066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt;: The number of decimal points to display</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; : 표시 할 소수점 수</target>
        </trans-unit>
        <trans-unit id="41630113c6ade8d9e638cd878698f41064f9eddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e334f21e65e83081cd94761c941d33e8923c2936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_always_shown&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;decimal_always_shown&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="fc87128f3a6263ee71f0574e751ad0ae9c9222a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal_point&lt;/code&gt;: The character(s) to use for the decimal point</source>
          <target state="translated">&lt;code&gt;decimal_point&lt;/code&gt; : 소수점 에 사용할 문자</target>
        </trans-unit>
        <trans-unit id="7cba36dc92c50f95df27bec9e03b04c32297f6ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: The default value</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; : 기본값</target>
        </trans-unit>
        <trans-unit id="8a4f3256c45b0cd856d5c156aad10b15b5aeef15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defined&lt;/code&gt; checks if a variable is defined in the current context. This is very useful if you use the &lt;code&gt;strict_variables&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;defined&lt;/code&gt; 는 변수가 현재 컨텍스트에 정의되어 있는지 확인합니다. &lt;code&gt;strict_variables&lt;/code&gt; 옵션 을 사용하는 경우 매우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="f0749fe159afb905c9ce398b9c4958e7aa466c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter&lt;/code&gt;: The delimiter</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; : 구분자</target>
        </trans-unit>
        <trans-unit id="886a11a718b30519a7667c488d4cd9f56dd882d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;divisible by&lt;/code&gt; checks if a variable is divisible by a number:</source>
          <target state="translated">&lt;code&gt;divisible by&lt;/code&gt; 변수가 숫자로 나누어 있는지 검사 :</target>
        </trans-unit>
        <trans-unit id="1d7078d6fc957846f0981b12f0797e92d78cb997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e7913c0ebe7934d25832b6b7e66d2838fb5ef38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty&lt;/code&gt; checks if a variable is an empty string, an empty array, an empty hash, exactly &lt;code&gt;false&lt;/code&gt;, or exactly &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;empty&lt;/code&gt; 는 변수가 빈 문자열, 빈 배열, 빈 해시, 정확히 &lt;code&gt;false&lt;/code&gt; 또는 정확히 &lt;code&gt;null&lt;/code&gt; 인지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="45efc35657d78a97a25fb3289beaab5bbe01792b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;even&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given number is even:</source>
          <target state="translated">&lt;code&gt;even&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 주어진 짝수 인 경우 :</target>
        </trans-unit>
        <trans-unit id="93ab4f9b7b86070c3b8d22b27a94ac04c0b7fa51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt;: If the current token isn&amp;rsquo;t of the given type/value a syntax error is thrown. Otherwise, if the type and value are correct, the token is returned and the stream moves to the next token.</source>
          <target state="translated">&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt; : 현재 토큰이 지정된 유형 / 값이 아닌 경우 구문 오류가 발생합니다. 그렇지 않고 유형과 값이 올 바르면 토큰이 반환되고 스트림이 다음 토큰으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="33d0568fdf8ebda748b0af928c5b2ab770a89834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt;: If the current token isn't of the given type/value a syntax error is thrown. Otherwise, if the type and value are correct, the token is returned and the stream moves to the next token.</source>
          <target state="translated">&lt;code&gt;expect($type[, $value[, $message]])&lt;/code&gt; : 현재 토큰이 지정된 유형 / 값이 아닌 경우 구문 오류가 발생합니다. 그렇지 않으면 유형과 값이 올바른 경우 토큰이 반환되고 스트림이 다음 토큰으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5c9bbed1584998b5b7946c92751379946601ab76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt;: Used to fill in missing items</source>
          <target state="translated">&lt;code&gt;fill&lt;/code&gt; : 누락 된 항목을 채우는 데 사용</target>
        </trans-unit>
        <trans-unit id="fd6cd7e192dfb14cad18563b9021d8e78094f6a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;floor&lt;/code&gt; always rounds down.</source>
          <target state="translated">&lt;code&gt;floor&lt;/code&gt; 항상 내림합니다.</target>
        </trans-unit>
        <trans-unit id="3e680a7325c2fdcd9264d8ab254e809caf9516cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo['bar']&lt;/code&gt; on the other hand only works with PHP arrays:</source>
          <target state="translated">&lt;code&gt;foo['bar']&lt;/code&gt; 반면에 foo [ 'bar'] 는 PHP 배열에서만 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="ad50ae9d90fbe139bca0db4b2ccb5a86ed47f186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: The date format</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; : 날짜 형식</target>
        </trans-unit>
        <trans-unit id="7bea077cdd2e2e4b9d8c857cb7677250e7f93923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_width&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;format_width&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="45e8cc2701a3b1cff6e609300f171bbbebd7dcad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="14df8a7afcfe5b3b38ca4dbc4b5c098d25769c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;: The input charset</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; : 입력 문자셋</target>
        </trans-unit>
        <trans-unit id="318ba115cb8fcb535c471f2921c53092b5c53068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;: The placeholder values</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; : 자리 표시 자 값</target>
        </trans-unit>
        <trans-unit id="3dbf15d32f9adfc327c4c78941fa4706cedc73e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCurrent()&lt;/code&gt;: Gets the current token in the stream.</source>
          <target state="translated">&lt;code&gt;getCurrent()&lt;/code&gt; : 스트림에서 현재 토큰을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b5a16990bed9d4d034500247d7205244fe5520c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glue&lt;/code&gt;: The separator</source>
          <target state="translated">&lt;code&gt;glue&lt;/code&gt; : 분리기</target>
        </trans-unit>
        <trans-unit id="c5ff3f07082c25683d3d722082f958ca2610710c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grouping_size&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;grouping_size&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="41ff5603ca647aad71ead23820432bce7e306a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grouping_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;grouping_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="f17b4834bae8134c398225b1a5317a565e555514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;high&lt;/code&gt;: The highest possible value of the sequence.</source>
          <target state="translated">&lt;code&gt;high&lt;/code&gt; : 시퀀스에서 가능한 가장 높은 값.</target>
        </trans-unit>
        <trans-unit id="024cd34a7876559460cb75970daf30ee2fdf862c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt;: escapes a string for the &lt;strong&gt;HTML body&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; : &lt;strong&gt;HTML 본문&lt;/strong&gt; 컨텍스트 의 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="cd17a21cf59880bd904391b9c988a9e098c83a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_attr&lt;/code&gt;: escapes a string for the &lt;strong&gt;HTML attribute&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;html_attr&lt;/code&gt; : &lt;strong&gt;HTML 속성&lt;/strong&gt; 컨텍스트 의 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="c3d865860c1ecbb1092e8fcc9951ac09e82d0b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_to_markdown&lt;/code&gt; is just a frontend; the actual conversion is done by one of the following compatible libraries, from which you can choose:</source>
          <target state="translated">&lt;code&gt;html_to_markdown&lt;/code&gt; 은 단순한 프런트 엔드입니다. 실제 변환은 선택할 수있는 다음 호환 라이브러리 중 하나에 의해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="2138a4f8f7ae546c796255dc823332b536e34c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore_missing&lt;/code&gt;: Whether to ignore missing templates or not</source>
          <target state="translated">&lt;code&gt;ignore_missing&lt;/code&gt; : 누락 된 템플릿을 무시할지 여부</target>
        </trans-unit>
        <trans-unit id="0deeb58dea94a0394252c87ed2e810b2abbc2b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indent()&lt;/code&gt;: Indents the generated code (see &lt;code&gt;Twig_Node_Block&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;indent()&lt;/code&gt; : 생성 된 코드를 들여 씁니다 ( 사용 예는 &lt;code&gt;Twig_Node_Block&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cd13f99b8a31b79ee49a2d7e22cd40af64cad078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indent()&lt;/code&gt;: Indents the generated code (see &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;indent()&lt;/code&gt; : 생성 된 코드를 들여 씁니다 ( 사용 예는 &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8701980e2275c62f5fb183d4ee007f3d539c9436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt;: The initial value</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; : 초기 값</target>
        </trans-unit>
        <trans-unit id="d11932a88b32c7c4d30393b1e2527e2d20c103fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="47dbf7e6a3c6cc7e2aaa59f8411f0bc0b461c450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iterable&lt;/code&gt; checks if a variable is an array or a traversable object:</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 은 변수가 배열 또는 통과 가능한 객체인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9947b00ca5e2271cbef5298df0cf14565320c92a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;js&lt;/code&gt;: escapes a string for the &lt;strong&gt;JavaScript context&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;js&lt;/code&gt; : &lt;strong&gt;JavaScript 컨텍스트&lt;/strong&gt; 의 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="451b00357c98dfe8aefb3f1356fb125455115642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;js&lt;/code&gt;: escapes a string for the &lt;strong&gt;JavaScript&lt;/strong&gt; context.</source>
          <target state="translated">&lt;code&gt;js&lt;/code&gt; : &lt;strong&gt;JavaScript&lt;/strong&gt; 컨텍스트에 대한 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="976099f1bd00288f13f88ad10df595a6f27c7362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt;: The size of the slice</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; : 슬라이스의 크기</target>
        </trans-unit>
        <trans-unit id="09ce372fd250d716b244c19ddd39cb93e344ecd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lenient_parse&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lenient_parse&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7d20188c45a33f90f77b29cb2069091f2aeea0a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt;: The limit argument</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; : 한계 인수</target>
        </trans-unit>
        <trans-unit id="bf748397a29b5a0e69e0a12f5d9c1e1c3ad8d51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lipsum&lt;/code&gt; is not a language construct;</source>
          <target state="translated">&lt;code&gt;lipsum&lt;/code&gt; 은 언어 구성이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="013068d6fbc1d0f5a903648dd2588bccb119c3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt;: The locale</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; : 로케일</target>
        </trans-unit>
        <trans-unit id="8401d488236b5f087920d45ea3e66f14fdca1e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;look()&lt;/code&gt;: Looks at the next token without consuming it.</source>
          <target state="translated">&lt;code&gt;look()&lt;/code&gt; : 다음 토큰을 사용하지 않고 살펴 봅니다 .</target>
        </trans-unit>
        <trans-unit id="fcac0ea0a30847871e06f8d39d3ac4facbbcc5ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;low&lt;/code&gt;: The first value of the sequence.</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; : 시퀀스의 첫 번째 값.</target>
        </trans-unit>
        <trans-unit id="60f0bcdedd88266e42570874bd6aa1fe4cb0db29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; returns the biggest value of a sequence or a set of values:</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 는 시퀀스 또는 값 집합의 가장 큰 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a29109e9d97a62c8a7f8f02df26c038dab0690cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt;: The max value when values is an integer</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; : 값이 정수일 때의 최대 값</target>
        </trans-unit>
        <trans-unit id="232c922d6400986371a4a43281df6017b753249a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="ea94176f37d43e01a8de02da825cf9a3d1f812e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="33dbc58940598750b037337d4906ef0b134e0970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;max_significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="97a2a642932e8fdf2a47322d31a2126f52a49f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: The rounding method</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; : 반올림 방법</target>
        </trans-unit>
        <trans-unit id="ea42d0899fd807c59d79e63039c0141cf740b152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mime&lt;/code&gt;: The mime type</source>
          <target state="translated">&lt;code&gt;mime&lt;/code&gt; : MIME 유형</target>
        </trans-unit>
        <trans-unit id="b716430d25875adad89db5f9718c85626b5edf72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; returns the lowest value of a sequence or a set of values:</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 은 시퀀스 또는 값 집합의 최저값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d5cc14fb40a1d25d31219997b79c7408f580b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_fraction_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_fraction_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e874a597c7ef757aedfab1b7230211f0bd4adad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_integer_digit&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_integer_digit&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="76dfd66802000a2887cf6010d2a8e760802c95cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;min_significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="a9668f33703f87cf462a545e6e185c6e9b4a01f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modifier&lt;/code&gt;: The modifier</source>
          <target state="translated">&lt;code&gt;modifier&lt;/code&gt; : 수정 자</target>
        </trans-unit>
        <trans-unit id="54933ce8dc240b396cc9d1b4b3dfc532fc1299e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiplier&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;multiplier&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="d3c576d50180d66a69081ba0c4be82a9d4949998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: A name for the template</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 템플릿의 이름</target>
        </trans-unit>
        <trans-unit id="a7710d35194cba6e08f33e5291bb419a9a7499fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The column name to extract</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 추출 할 열 이름</target>
        </trans-unit>
        <trans-unit id="59b981af45de55021acdf2db944741786b00fe9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the template to read</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 읽을 템플릿 이름</target>
        </trans-unit>
        <trans-unit id="c3ebe6f2fc5666133b5e76b97a4b1277f6c55f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next()&lt;/code&gt;: Moves to the next token in the stream, &lt;em&gt;but returns the old one&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; : 스트림에서 다음 토큰으로 이동 &lt;em&gt;하지만 이전&lt;/em&gt; 토큰을 &lt;em&gt;반환합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6c91c1700fbfe347771e159e0854527646bdf00a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; is an alias for &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="ff22e0418abeb3148ce98bd86e73bc664506ec04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt;: Negates a statement.</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt; : 진술을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="8118f6ed8d097463ae564e39837ece8121cc1a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the variable is &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 변수가 &lt;code&gt;null&lt;/code&gt; 인 경우 null 은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4d3a9a42fa379eafa065ca61642250fd9936952a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt; represents no specific value. This is the value returned when a variable does not exist. &lt;code&gt;none&lt;/code&gt; is an alias for &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; : &lt;code&gt;null&lt;/code&gt; 은 특정 값이 없음을 나타냅니다. 변수가 존재하지 않을 때 반환되는 값입니다. &lt;code&gt;none&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="6f5572e5b4e3cde6296c7c5ffd921671bb6217e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;odd&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given number is odd:</source>
          <target state="translated">&lt;code&gt;odd&lt;/code&gt; 주어진 숫자가 홀수 &lt;code&gt;true&lt;/code&gt; odd 는 true를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="a779a195cd577b6f99ca8a5b1e58613dcfaa137f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizations&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;optimizations&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c55e52dc34a92db5ce1368475b7d4dc6c9e47389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: A bitmask of &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode options&lt;/a&gt; (&lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt;. Combine constants using</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode 옵션&lt;/a&gt; 의 비트 마스크 ( &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d836f5e25c007ed63f3de7afdbbbcf2c88b9e0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: A bitmask of &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode options&lt;/a&gt;: &lt;code&gt;{{
data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt;. Combine constants using &lt;a href=&quot;../templates#template-logic&quot;&gt;bitwise operators&lt;/a&gt;: &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT')) }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;json_encode 옵션&lt;/a&gt; 의 비트 마스크 : &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT')) }}&lt;/code&gt; . &lt;a href=&quot;../templates#template-logic&quot;&gt;비트 연산자를&lt;/a&gt; 사용하여 상수 결합 : &lt;code&gt;{{ data|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_HEX_QUOT')) }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7663fabb56015c937a27304b9323b5f845b6241e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or&lt;/code&gt;: Returns true if the left or the right operand is true.</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; : 왼쪽 또는 오른쪽 피연산자가 true이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b24ff97d9a59e2f0d69cd66afbd49f103554cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ordinal&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;ordinal&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="d9091e446a2b7c8437c33f7821d74c9708774031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdent()&lt;/code&gt;: Outdents the generated code (see &lt;code&gt;Twig_Node_Block&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;outdent()&lt;/code&gt; : 생성 된 코드를 &lt;code&gt;Twig_Node_Block&lt;/code&gt; ( 사용 예는 Twig_Node_Block 참조 ).</target>
        </trans-unit>
        <trans-unit id="5f8675d4a78e652104f05df37ce16af4e2ab0f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdent()&lt;/code&gt;: Outdents the generated code (see &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;outdent()&lt;/code&gt; : 생성 된 코드를 내어 씁니다 ( 사용 예는 &lt;code&gt;\Twig\Node\BlockNode&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="27066d194aab3e7ba23c38d332dfb5bc16ae4520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padding_position&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;padding_position&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="804824c1c6c2a7964cfc4b3b1cfa036cef03915e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt;: An array of parameters</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; : 매개 변수 배열</target>
        </trans-unit>
        <trans-unit id="fbe228d704301b51d0a70c68584ac8ed2e21734e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt;: A date time pattern</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; : 날짜 시간 패턴</target>
        </trans-unit>
        <trans-unit id="5c1a655665d15327b1d3b078ca8ed0a21ba5d6f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percent&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;percent&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="043e6325fed6877d5183ef9e0fe9ed443f2ba067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&lt;/code&gt;: The cycle position</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; : 사이클 위치</target>
        </trans-unit>
        <trans-unit id="f738c558af7ebf4755ba6251278bee5d0c082840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt;: The rounding precision</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; : 반올림 정밀도</target>
        </trans-unit>
        <trans-unit id="1dfdbea116002e3b27bf032a86b099ac0eed54e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Preserve keys when reversing a mapping or a sequence.</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; : 매핑 또는 시퀀스를 되돌릴 때 키를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="5f223d056c85527a62af1c69b2d413aa1a6bc160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Whether to preserve key or not (when the input is an array)</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; : 키 보존 여부 (입력이 배열 인 경우)</target>
        </trans-unit>
        <trans-unit id="9d6959155665df16b2184ce5735b148064d8da6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve_keys&lt;/code&gt;: Whether to preserve keys or not</source>
          <target state="translated">&lt;code&gt;preserve_keys&lt;/code&gt; : 키 보존 여부</target>
        </trans-unit>
        <trans-unit id="59bdfdb819c11f331de7a766257dbe9e3e44c699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw()&lt;/code&gt;: Writes the given string as is.</source>
          <target state="translated">&lt;code&gt;raw()&lt;/code&gt; : 주어진 문자열을 그대로 씁니다.</target>
        </trans-unit>
        <trans-unit id="c2ab8d9f237d2d421d78d06710b5892da178061e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr()&lt;/code&gt;: Writes a PHP representation of a given value (see &lt;code&gt;Twig_Node_For&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;repr()&lt;/code&gt; : 주어진 값의 PHP 표현을 씁니다 ( 사용 예는 &lt;code&gt;Twig_Node_For&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6297aa175b34d6463274c115c79ee6ff05061023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr()&lt;/code&gt;: Writes a PHP representation of a given value (see &lt;code&gt;\Twig\Node\ForNode&lt;/code&gt; for a usage example).</source>
          <target state="translated">&lt;code&gt;repr()&lt;/code&gt; : 주어진 값의 PHP 표현을 작성합니다 ( 사용 예는 &lt;code&gt;\Twig\Node\ForNode&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="428e610ecef4b31c43f6d8bf011dd5ffd5d55fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding_increment&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;rounding_increment&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e54899a4c27986af54e95d347f7e4b82a20f143c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rounding_mode&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;rounding_mode&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="541d69c7a583c932e1243d8ca9193d06b5ba1f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;same as&lt;/code&gt; checks if a variable is the same as another variable. This is equivalent to &lt;code&gt;===&lt;/code&gt; in PHP:</source>
          <target state="translated">&lt;code&gt;same as&lt;/code&gt; 검사 변수가 다른 변수와 같은 경우. 이것은 PHP 에서 &lt;code&gt;===&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="f5b8e270329f5f0cde165d6b271799244c41e9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;same as&lt;/code&gt; checks if a variable is the same as another variable. This is the equivalent to &lt;code&gt;===&lt;/code&gt; in PHP:</source>
          <target state="translated">&lt;code&gt;same as&lt;/code&gt; 검사 변수가 다른 변수와 같은 경우. 이것은 PHP 에서 &lt;code&gt;===&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea3135cfc0a09129f7de9e7416c7f34f0fc52e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sandboxed&lt;/code&gt;: Whether to sandbox the template or not</source>
          <target state="translated">&lt;code&gt;sandboxed&lt;/code&gt; : 템플릿 샌드 박스 여부</target>
        </trans-unit>
        <trans-unit id="27e31b5b36271173e14da3afe32d7c353a10eeda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scientific&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;scientific&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e5c173db1b1671aafe4d01630641fcd81b9d2399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secondary_grouping_size&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;secondary_grouping_size&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="de09be95802be27db6a35bc7dec22cb6762d8867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;side&lt;/code&gt;: The default is to strip from the left and the right (</source>
          <target state="translated">&lt;code&gt;side&lt;/code&gt; : 기본 설정은 왼쪽과 오른쪽 (</target>
        </trans-unit>
        <trans-unit id="b428881fec19792b3b06f30eb39d683a40893539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;significant_digits_used&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;significant_digits_used&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="516f8e7949845a4cfa5d780b37928e56fc3b4225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;: The size of the batch; fractional numbers will be rounded up</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; : 배치의 크기; 소수는 반올림됩니다</target>
        </trans-unit>
        <trans-unit id="89e2884511899ca30f09ded50d7d8f3da25f86fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spellout&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;spellout&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="4139f6c8c9b486ed80a9f635a2f0778c77548045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;: The start of the slice</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; : 슬라이스의 시작</target>
        </trans-unit>
        <trans-unit id="b5c6d2b32fb0489380db25654cce6f6c4db594b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt;: The increment between elements of the sequence.</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; : 시퀀스 요소 간 증분</target>
        </trans-unit>
        <trans-unit id="ec2c5593f02b756956fdb1970a9cf0934b9f734a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strategy&lt;/code&gt;: The escaping strategy</source>
          <target state="translated">&lt;code&gt;strategy&lt;/code&gt; : 탈출 전략</target>
        </trans-unit>
        <trans-unit id="c4cdbfaf8516cb606530ac913f64cea3c7f63d04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict_variables&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;strict_variables&lt;/code&gt;&lt;em&gt;boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4d86e19d90afe3884179a0a1eff94b9a5606a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: Writes a quoted string.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; : 따옴표로 묶은 문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="6ecc1914e4b24f4f2433d6043c6e2793f12c8a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;style&lt;/code&gt;: The style of the number output</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; : 숫자 출력의 스타일</target>
        </trans-unit>
        <trans-unit id="8764d50d296bd7ececd557e129973fbb4b253f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subcompile()&lt;/code&gt;: Compiles a node.</source>
          <target state="translated">&lt;code&gt;subcompile()&lt;/code&gt; : 노드를 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="93ec4bef2b12f5bb926c475849965b828f46a864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: The template</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; : 템플릿</target>
        </trans-unit>
        <trans-unit id="3b558c680b216b188e7e5a5bf1ef269ccaa4c85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: The template to render</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; : 렌더링 할 템플릿</target>
        </trans-unit>
        <trans-unit id="c786fc61e5f8020adeed0acc786f1517cfd2bf80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test($type)&lt;/code&gt;, &lt;code&gt;test($value)&lt;/code&gt; or &lt;code&gt;test($type, $value)&lt;/code&gt;: Determines whether the current token is of a particular type or value (or both). The value may be an array of several possible values.</source>
          <target state="translated">&lt;code&gt;test($type)&lt;/code&gt; , &lt;code&gt;test($value)&lt;/code&gt; 또는 &lt;code&gt;test($type, $value)&lt;/code&gt; : 현재 토큰이 특정 유형인지 또는 값인지 (또는 둘 다)를 결정합니다. 값은 몇 가지 가능한 값의 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53b9d29f8835ab06b72a7036e04be4908b0c22b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thousand_sep&lt;/code&gt;: The character(s) to use for the thousands separator</source>
          <target state="translated">&lt;code&gt;thousand_sep&lt;/code&gt; : 천 단위 구분 기호로 사용할 문자</target>
        </trans-unit>
        <trans-unit id="68a280d41b84fd2b0db0bcbd2fa27db34b736e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeFormat&lt;/code&gt;: The time format</source>
          <target state="translated">&lt;code&gt;timeFormat&lt;/code&gt; : 시간 형식</target>
        </trans-unit>
        <trans-unit id="18515e1ba715b12a7bb24e68fdb0d5a189c57f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt;: The date timezone</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; : 날짜 시간대</target>
        </trans-unit>
        <trans-unit id="f5943c94470b33dfa8c0b0d78a33b86ef30f9c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt;: The timezone</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; : 시간대</target>
        </trans-unit>
        <trans-unit id="d478daf942d8af4499b6e2f9ee51c74a63ac9a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt;: The output charset</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; : 출력 캐릭터</target>
        </trans-unit>
        <trans-unit id="ac4f0a6d4adb86cb0d4a9aaf935c307580d6bd43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; represents the true value, &lt;code&gt;false&lt;/code&gt; represents the false value.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt; 는 true 값을 나타내고 &lt;code&gt;false&lt;/code&gt; 는 false 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1482161f3592aef782c73e696aecc05f4b8abb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: escapes a string for the &lt;strong&gt;URI or parameter contexts&lt;/strong&gt;. This should not be used to escape an entire URI; only a subcomponent being inserted.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; : &lt;strong&gt;URI 또는 ​​매개 변수 컨텍스트&lt;/strong&gt; 의 문자열을 이스케이프 &lt;strong&gt;합니다&lt;/strong&gt; . 전체 URI를 이스케이프하는 데 사용해서는 안됩니다. 하위 구성 요소 만 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="d5af7e8e944c4ecc6f283c80ec4253b72351cdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;: escapes a string for the &lt;strong&gt;URI or parameter&lt;/strong&gt; contexts. This should not be used to escape an entire URI; only a subcomponent being inserted.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; : &lt;strong&gt;URI 또는 ​​매개 변수&lt;/strong&gt; 컨텍스트에 대한 문자열을 이스케이프 합니다. 전체 URI를 이스케이프하는 데 사용해서는 안됩니다. 하위 구성 요소 만 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="2552d040120cc9de9e1915b8378def7b9a274d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;values&lt;/code&gt;: The values</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; : 값</target>
        </trans-unit>
        <trans-unit id="0df52e9ffaa1102fcdf0d07ef788563e1b9b5f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variables&lt;/code&gt;: The variables to pass to the template</source>
          <target state="translated">&lt;code&gt;variables&lt;/code&gt; : 템플릿에 전달할 변수</target>
        </trans-unit>
        <trans-unit id="97ca793c8fc8e2b2854d4775a7bd7f2280a3808f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_context&lt;/code&gt;: Whether to pass the current context variables or not</source>
          <target state="translated">&lt;code&gt;with_context&lt;/code&gt; : 현재 컨텍스트 변수를 전달할지 여부</target>
        </trans-unit>
        <trans-unit id="7db83eaa367bbb4c1245ee71d1b4fb382544531a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write()&lt;/code&gt;: Writes the given string by adding indentation at the beginning of each line.</source>
          <target state="translated">&lt;code&gt;write()&lt;/code&gt; : 각 줄의 시작 부분에 들여 쓰기를 추가하여 주어진 문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="02058c1e6be3cb925f51dc2a4429812422761078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;foo&quot;: &quot;bar&quot;}&lt;/code&gt;: Hashes are defined by a list of keys and values separated by a comma (&lt;code&gt;,&lt;/code&gt;) and wrapped with curly braces (&lt;code&gt;{}&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;{&quot;foo&quot;: &quot;bar&quot;}&lt;/code&gt; : 해시는 쉼표 ( &lt;code&gt;,&lt;/code&gt; ) 로 구분 된 키와 값 목록으로 정의되며 중괄호 ( &lt;code&gt;{}&lt;/code&gt; )로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="8660ff42c23922bcd05f7c67432b5cac30108497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{% %}&lt;/code&gt;: used to execute statements.</source>
          <target state="translated">&lt;code&gt;{% %}&lt;/code&gt; : 명령문을 실행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09576fdb009b83f86b6380bbcb6a6b5eb469e166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ }}&lt;/code&gt;: used to print the result of an expression evaluation;</source>
          <target state="translated">&lt;code&gt;{{ }}&lt;/code&gt; : 표현식 평가 결과를 인쇄하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7902afc01917933b363ba1cfc39e37ebbf0fe422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;: Applies a filter.</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; : 필터를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="9e0195ff816065229cd5af85871720f639f1133e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;: Converts all operands into strings and concatenates them. &lt;code&gt;{{ &quot;Hello
&quot; ~ name ~ &quot;!&quot; }}&lt;/code&gt; would return (assuming &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;'John'&lt;/code&gt;) &lt;code&gt;Hello
John!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; : 모든 피연산자를 문자열로 변환하고 연결합니다. &lt;code&gt;{{ &quot;Hello &quot; ~ name ~ &quot;!&quot; }}&lt;/code&gt; 이 반환합니다 ( &lt;code&gt;name&lt;/code&gt; 이 &lt;code&gt;'John'&lt;/code&gt; 이라고 가정 ) &lt;code&gt;Hello John!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b2cdbfe0e81737baad6ea986e8bcc97cf4822f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Atom&lt;/em&gt; via the &lt;a href=&quot;https://github.com/reesef/php-twig&quot;&gt;PHP-twig for atom&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;원자&lt;/em&gt; 를위한 &lt;a href=&quot;https://github.com/reesef/php-twig&quot;&gt;PHP-Twig를 통한 원자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf97b6d4e57317ff083f3db0e3adc5a22dd5984f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Coda 2&lt;/em&gt; via the &lt;a href=&quot;https://github.com/muxx/Twig-HTML.mode&quot;&gt;other Twig syntax mode&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/muxx/Twig-HTML.mode&quot;&gt;다른 Twig 구문 모드&lt;/a&gt; 를 통한 &lt;em&gt;Coda 2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49bbcee0845768e64e06b8d863fec411c7468d7e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Coda&lt;/em&gt; and &lt;em&gt;SubEthaEdit&lt;/em&gt; via the &lt;a href=&quot;https://github.com/bobthecow/Twig-HTML.mode&quot;&gt;Twig syntax mode&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/bobthecow/Twig-HTML.mode&quot;&gt;나뭇 가지 구문 모드&lt;/a&gt; 를 통한 &lt;em&gt;Coda&lt;/em&gt; 및 &lt;em&gt;SubEthaEdit&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f827e5b2d94b2394b4fa0d37b2e2c120904b9544" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Eclipse&lt;/em&gt; via the &lt;a href=&quot;https://github.com/pulse00/Twig-Eclipse-Plugin&quot;&gt;Twig plugin&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/pulse00/Twig-Eclipse-Plugin&quot;&gt;나뭇 가지 플러그인을&lt;/a&gt; 통한 &lt;em&gt;이클립스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fab718fb5319fe6abc25162a66cb3c0f71bf1207" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Emacs&lt;/em&gt; via &lt;a href=&quot;http://web-mode.org/&quot;&gt;web-mode.el&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://web-mode.org/&quot;&gt;web-mode.el을&lt;/a&gt; 통한 &lt;em&gt;이맥스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9e6790591155671e32becfea54139628bfe0fd9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fast&lt;/em&gt;: Twig compiles templates down to plain optimized PHP code. The overhead compared to regular PHP code was reduced to the very minimum.</source>
          <target state="translated">&lt;em&gt;빠름&lt;/em&gt; : Twig는 템플릿을 일반 최적화 된 PHP 코드로 컴파일합니다. 일반 PHP 코드에 비해 오버 헤드가 최소화되었습니다.</target>
        </trans-unit>
        <trans-unit id="644bb1f7c511acce4fbaea8f8de8f6a51b4a7370" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Flexible&lt;/em&gt;: Twig is powered by a flexible lexer and parser. This allows the developer to define their own custom tags and filters, and to create their own DSL.</source>
          <target state="translated">&lt;em&gt;유연성&lt;/em&gt; : Twig는 유연한 어휘 분석기와 파서로 구동됩니다. 이를 통해 개발자는 고유 한 사용자 정의 태그 및 필터를 정의하고 고유 한 DSL을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f405311eb35e7a44f513b3afd5686103a05cd1cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GtkSourceView&lt;/em&gt; via the &lt;a href=&quot;https://github.com/gabrielcorpse/gedit-twig-template-language&quot;&gt;Twig language definition&lt;/a&gt; (used by gedit and other projects)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/gabrielcorpse/gedit-twig-template-language&quot;&gt;Twig 언어 정의&lt;/a&gt; 를 통한 &lt;em&gt;GtkSourceView&lt;/em&gt; (gedit 및 기타 프로젝트에서 사용)</target>
        </trans-unit>
        <trans-unit id="8728690ec33fe976a2ace770d51c29cf40ee280a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inheritance&lt;/em&gt;: A template &lt;em&gt;extends&lt;/em&gt; a parent template and overrides some blocks;</source>
          <target state="translated">&lt;em&gt;상속&lt;/em&gt; : 템플릿 &lt;em&gt;은&lt;/em&gt; 부모 템플릿을 &lt;em&gt;확장&lt;/em&gt; 하고 일부 블록을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="f7556e0a803d3677ca5bc0a999797b522a0cbab9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Komodo&lt;/em&gt; and &lt;em&gt;Komodo Edit&lt;/em&gt; via the Twig highlight/syntax check mode</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;나뭇 가지 강조 / 구문 검사 모드를 통한 &lt;em&gt;Komodo&lt;/em&gt; 및 &lt;em&gt;Komodo 편집&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b7314feb87ff19b3352f9cd96e8b31c0d6a3899" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Line whitespace trimming&lt;/em&gt; via the &lt;code&gt;~&lt;/code&gt; modifier: Removes all whitespace (excluding newlines). Using this modifier on the right disables the default removal of the first newline inherited from PHP.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;~&lt;/code&gt; 수정자를 통한 &lt;em&gt;줄 공백 트리밍&lt;/em&gt; : 모든 공백을 제거합니다 (줄 바꿈 제외). 오른쪽에서이 수정자를 사용하면 PHP에서 상속 된 첫 번째 줄 바꿈의 기본 제거가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="3961e5c148cea9139269865a7e58244993fab084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Netbeans&lt;/em&gt; via the &lt;a href=&quot;http://plugins.netbeans.org/plugin/37069/php-twig&quot;&gt;Twig syntax plugin&lt;/a&gt; (until 7.1, native as of 7.2)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://plugins.netbeans.org/plugin/37069/php-twig&quot;&gt;Twig 구문 플러그인을&lt;/a&gt; 통한 &lt;em&gt;Netbeans&lt;/em&gt; (7.1까지, 7.2 현재)</target>
        </trans-unit>
        <trans-unit id="55884811267a49d7c6951020fa989f7c3db8d278" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Notepad++&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Banane9/notepadplusplus-twig&quot;&gt;Notepad++ Twig Highlighter&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Notepad ++ &lt;/em&gt;&lt;a href=&quot;https://github.com/Banane9/notepadplusplus-twig&quot;&gt;Twig Highlighter&lt;/a&gt; 를 통한 메모장 ++</target>
        </trans-unit>
        <trans-unit id="2c76f83bc050d05584f27eadf8d652cb73e13dcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PhpStorm&lt;/em&gt; (native as of 2.1)</source>
          <target state="translated">&lt;em&gt;PhpStorm&lt;/em&gt; (2.1 기준)</target>
        </trans-unit>
        <trans-unit id="bbbe94cdc957a0b31b48e6ed87bf35c3e018973b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Replacement&lt;/em&gt;: If you use the filesystem loader, Twig loads the first template it finds in a list of configured directories; a template found in a directory &lt;em&gt;replaces&lt;/em&gt; another one from a directory further in the list.</source>
          <target state="translated">&lt;em&gt;교체&lt;/em&gt; : 파일 시스템 로더를 사용하는 경우 Twig는 구성된 디렉토리 목록에서 찾은 첫 번째 템플리트를로드합니다. 디렉토리에있는 템플리트는 목록에있는 디렉토리의 다른 템플리트를 &lt;em&gt;대체&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ec78e5fce8b71edccafc26a589bf93555c8819fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Secure&lt;/em&gt;: Twig has a sandbox mode to evaluate untrusted template code. This allows Twig to be used as a template language for applications where users may modify the template design.</source>
          <target state="translated">&lt;em&gt;보안&lt;/em&gt; : Twig에는 신뢰할 수없는 템플릿 코드를 평가하기위한 샌드 박스 모드가 있습니다. 따라서 사용자가 템플릿 디자인을 수정할 수있는 응용 프로그램의 템플릿 언어로 Twig를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1005673ab94ac2fbea98dc473a8d47085a5fcbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Sublime Text&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twig bundle&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;나뭇 가지 묶음을&lt;/a&gt; 통한 &lt;em&gt;숭고한 텍스트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f23b9bb5b0bd1b30bcb0a1d5b36b12e4914ea90a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Textmate&lt;/em&gt; via the &lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;Twig bundle&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/Anomareh/PHP-Twig.tmbundle&quot;&gt;나뭇 가지 묶음을&lt;/a&gt; 통한 &lt;em&gt;텍스트 메이트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f81da2db2ac03e2d48a3495235ccd17242e8b797" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionCoreExtension&lt;/em&gt;: Defines all the core features of Twig.</source>
          <target state="translated">&lt;em&gt;TwigExtensionCoreExtension&lt;/em&gt; : Twig의 모든 핵심 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dd2b8add7a39bd375230656c111d0fed63414fcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionDebugExtension&lt;/em&gt;: Defines the &lt;code&gt;dump&lt;/code&gt; function to help debug template variables.</source>
          <target state="translated">&lt;em&gt;TwigExtensionDebugExtension&lt;/em&gt; : 템플릿 변수를 디버그하는 데 도움이 되는 &lt;code&gt;dump&lt;/code&gt; 함수를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="d162dd8376c57fb73b0f2abf14a376524c612f20" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionEscaperExtension&lt;/em&gt;: Adds automatic output-escaping and the possibility to escape/unescape blocks of code.</source>
          <target state="translated">&lt;em&gt;TwigExtensionEscaperExtension&lt;/em&gt; : 자동 출력 이스케이프 및 코드 블록을 이스케이프 / &lt;em&gt;언&lt;/em&gt; 이스케이프 할 수있는 가능성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="14547e5d84e85292440da68fc7bfa9ff837e3613" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionOptimizerExtension&lt;/em&gt;: Optimizes the node tree before compilation.</source>
          <target state="translated">&lt;em&gt;TwigExtensionOptimizerExtension&lt;/em&gt; : 컴파일 전에 노드 트리를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="fbe2b242ee474912e3505523a02aca9302b08b5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionProfilerExtension&lt;/em&gt;: Enables the built-in Twig profiler.</source>
          <target state="translated">&lt;em&gt;TwigExtensionProfilerExtension&lt;/em&gt; : 내장 된 Twig 프로파일 러를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b3b70d4d81d45cffb0c26636b9f112b42ce19f1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionSandboxExtension&lt;/em&gt;: Adds a sandbox mode to the default Twig environment, making it safe to evaluate untrusted code.</source>
          <target state="translated">&lt;em&gt;TwigExtensionSandboxExtension&lt;/em&gt; : 기본 Twig 환경에 샌드 박스 모드를 추가하여 신뢰할 수없는 코드를 안전하게 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="067f72085bf188614589621f266c44477864141d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TwigExtensionStringLoaderExtension&lt;/em&gt;: Defines the &lt;code&gt;template_from_string&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;TwigExtensionStringLoaderExtension&lt;/em&gt; : &lt;code&gt;template_from_string&lt;/code&gt; 을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1789f90c4413949dd88c06a512a5bdf1114ddee2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Core&lt;/em&gt;: Defines all the core features of Twig.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Core&lt;/em&gt; : Twig의 모든 핵심 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c60a803a2fea943e9a86387d5b09122546167acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Escaper&lt;/em&gt;: Adds automatic output-escaping and the possibility to escape/unescape blocks of code.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Escaper&lt;/em&gt; : 자동 출력 이스케이프 기능과 코드 블록을 이스케이프 / &lt;em&gt;언 스케이프&lt;/em&gt; 할 수있는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cd7e78cd8163b213441f40ea03472a195fc94d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Optimizer&lt;/em&gt;: Optimizes the node tree before compilation.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Optimizer&lt;/em&gt; : 컴파일 전에 노드 트리를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="2b5f5dd1af92ad7e795b11c9aec9d34b1ebff699" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Profiler&lt;/em&gt;: Enabled the built-in Twig profiler.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Profiler&lt;/em&gt; : 내장 나뭇 가지 프로파일 러를 활성화했습니다.</target>
        </trans-unit>
        <trans-unit id="e4804bb4d301db60a6eb43343f760ef4e95dc39a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Twig_Extension_Sandbox&lt;/em&gt;: Adds a sandbox mode to the default Twig environment, making it safe to evaluate untrusted code.</source>
          <target state="translated">&lt;em&gt;Twig_Extension_Sandbox&lt;/em&gt; : 기본 Twig 환경에 샌드 박스 모드를 추가하여 신뢰할 수없는 코드를 안전하게 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73633566be03cfd027f710e2e4d94d8f25c113ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Vim&lt;/em&gt; via the &lt;a href=&quot;http://jinja.pocoo.org/docs/integration/#vim&quot;&gt;Jinja syntax plugin&lt;/a&gt; or the &lt;a href=&quot;https://github.com/lumiliet/vim-twig&quot;&gt;vim-twig plugin&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://jinja.pocoo.org/docs/integration/#vim&quot;&gt;Jinja 구문 플러그인&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/lumiliet/vim-twig&quot;&gt;vim-twig 플러그인을&lt;/a&gt; 통한 &lt;em&gt;Vim&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2495e8d8f72ff104b72172ab638c4e99a456e87b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visual Studio Code&lt;/em&gt; via the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bajdzis.vscode-twig-pack&quot;&gt;Twig pack&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bajdzis.vscode-twig-pack&quot;&gt;나뭇 가지 팩을&lt;/a&gt; 통한 &lt;em&gt;Visual Studio 코드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000c3b31e4d79ddd890eb1ccc6846bd1f3daccb7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Whitespace trimming&lt;/em&gt; via the &lt;code&gt;-&lt;/code&gt; modifier: Removes all whitespace (including newlines);</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;-&lt;/code&gt; 수정자를 통한 &lt;em&gt;공백 트리밍&lt;/em&gt; : 모든 공백 (줄 바꿈 포함)을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f590b48fc69dfcc7c372467da1823ab26198ea35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filter&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filter&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0316b1e05af2ac8f5c7c2230ab143f027320de1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07ede4f2c5c32b63c52018a687c24a7a9fc9ee43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;global&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;global&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed4a26bd2219a669612e9e3c2b7b5c6da73a19c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;macro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;macro&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="329fb0be8efc83873031a165e1d6cda8ca39d02d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;operator&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;operator&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc5dcfd7fa2c24a533fa19007091483ece18fad4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a098a7a90c1a066f05f9dc3183cd1cb9a431e679" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;test&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;test&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ab5624198f715cc64842a1671d08fa559be738e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Evaluate&lt;/strong&gt; the template: It basically means calling the &lt;code&gt;display()&lt;/code&gt; method of the compiled template and passing it the context.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;템플릿 &lt;strong&gt;평가&lt;/strong&gt; : 기본적으로 컴파일 된 템플릿 의 &lt;code&gt;display()&lt;/code&gt; 메서드를 호출 하고 컨텍스트를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="7ecee2ed311a8f944166e1549d113bc7b87dcc73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Evaluate&lt;/strong&gt; the template: It means calling the &lt;code&gt;display()&lt;/code&gt; method of the compiled template and passing it the context.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;템플릿 &lt;strong&gt;평가&lt;/strong&gt; : 컴파일 된 템플릿 의 &lt;code&gt;display()&lt;/code&gt; 메서드를 호출 하고 컨텍스트에 전달하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2f99f11ba680c92e4084e9a67a5b4d13749339cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Load&lt;/strong&gt; the template: If the template is already compiled, load it and go to the &lt;em&gt;evaluation&lt;/em&gt; step, otherwise:</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;템플릿 &lt;strong&gt;로드&lt;/strong&gt; : 템플릿이 이미 컴파일 된 경우 템플릿을로드하고 &lt;em&gt;평가&lt;/em&gt; 단계 로 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6ce555ecf27d61dbfcc5bed59611e89e8d4df57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;closures&lt;/strong&gt;: Simple to implement;</source>
          <target state="translated">&lt;strong&gt;폐쇄&lt;/strong&gt; : 구현이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="344997d286afaa5a924693f6e5851174c2d72c07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;functions/static methods&lt;/strong&gt;: Simple to implement and fast (used by all Twig core extensions); but it is hard for the runtime to depend on external objects;</source>
          <target state="translated">&lt;strong&gt;기능 / 정적 방법&lt;/strong&gt; : 구현이 간단하고 빠름 (모든 Twig 코어 확장에서 사용); 그러나 런타임이 외부 객체에 의존하는 것은 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="be44414b42f51920bf9f02b65dabca69cee2f0bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object methods&lt;/strong&gt;: More flexible and required if your runtime code depends on external objects.</source>
          <target state="translated">&lt;strong&gt;객체 메소드&lt;/strong&gt; : 런타임 코드가 외부 객체에 의존하는 경우 더 유연하고 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3a48e3a013982ce86b77d65aee0fb32ce1057112" translate="yes" xml:space="preserve">
          <source>A block provides a way to change how a certain part of a template is rendered but it does not interfere in any way with the logic around it.</source>
          <target state="translated">블록은 템플릿의 특정 부분이 렌더링되는 방식을 변경하는 방법을 제공하지만 주변의 논리를 방해하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="baab44730efc2515b4d79e67f8f95a25efc365b7" translate="yes" xml:space="preserve">
          <source>A child template might look like this:</source>
          <target state="translated">자식 템플릿은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41644a15607ad8b577e757ac190d0b799dcb62ff" translate="yes" xml:space="preserve">
          <source>A control structure refers to all those things that control the flow of a program - conditionals (i.e. &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elseif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;), &lt;code&gt;for&lt;/code&gt;-loops, as well as things like blocks. Control structures appear inside &lt;code&gt;{% ... %}&lt;/code&gt; blocks.</source>
          <target state="translated">제어 구조는 프로그램 조건의 흐름 (예 : &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; ), &lt;code&gt;for&lt;/code&gt; 루프 및 블록과 같은 흐름을 제어하는 ​​모든 것을 말합니다 . 제어 구조는 &lt;code&gt;{% ... %}&lt;/code&gt; 블록 안에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="5222c0a49ab6d5739e705113a8d8ff63f6d0887d" translate="yes" xml:space="preserve">
          <source>A default value can also be defined for macro arguments when not provided in a macro call:</source>
          <target state="translated">매크로 호출에서 제공되지 않을 때 매크로 인수에 대한 기본값을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cb528dcb5c9cca74dc84640f672da0999cfb904" translate="yes" xml:space="preserve">
          <source>A dynamic filter can define more than one dynamic parts:</source>
          <target state="translated">동적 필터는 둘 이상의 동적 부품을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edee5835c50f6f6da0822d343c438d940ef590f5" translate="yes" xml:space="preserve">
          <source>A filter name containing the special &lt;code&gt;*&lt;/code&gt; character is a dynamic filter and the &lt;code&gt;*&lt;/code&gt; part will match any string:</source>
          <target state="translated">특수 &lt;code&gt;*&lt;/code&gt; 문자를 포함하는 필터 이름 은 동적 필터이며 &lt;code&gt;*&lt;/code&gt; 부분은 모든 문자열과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d429c49e354a1006492382a454968762c1a19102" translate="yes" xml:space="preserve">
          <source>A filter name containing the special &lt;code&gt;*&lt;/code&gt; character is a dynamic filter as the &lt;code&gt;*&lt;/code&gt; can be any string:</source>
          <target state="translated">특수 &lt;code&gt;*&lt;/code&gt; 문자를 포함하는 필터 이름 은 &lt;code&gt;*&lt;/code&gt; 가 임의의 문자열 일 수 있으므로 동적 필터입니다 .</target>
        </trans-unit>
        <trans-unit id="db796d1ad1542450da59abf1d0f149d41ae6384b" translate="yes" xml:space="preserve">
          <source>A flag that indicates which optimizations to apply (default to &lt;code&gt;-1&lt;/code&gt; &amp;ndash; all optimizations are enabled; set it to &lt;code&gt;0&lt;/code&gt; to disable).</source>
          <target state="translated">적용 할 최적화를 나타내는 플래그입니다 (기본값은 &lt;code&gt;-1&lt;/code&gt; &amp;ndash; 모든 최적화가 활성화 됨, 비활성화 하려면 &lt;code&gt;0&lt;/code&gt; 으로 설정).</target>
        </trans-unit>
        <trans-unit id="dc09dc74a2d1f6e901912b73f3fa58ff1a90a56e" translate="yes" xml:space="preserve">
          <source>A flag that indicates which optimizations to apply (default to &lt;code&gt;-1&lt;/code&gt; -- all optimizations are enabled; set it to &lt;code&gt;0&lt;/code&gt; to disable).</source>
          <target state="translated">적용 할 최적화를 나타내는 플래그입니다 (기본값은 &lt;code&gt;-1&lt;/code&gt; - 모든 최적화가 활성화되어 있으며 비활성화 하려면 &lt;code&gt;0&lt;/code&gt; 으로 설정).</target>
        </trans-unit>
        <trans-unit id="e5b9418bc1bf0b8e918a5ab65d79f4bcc67abcc2" translate="yes" xml:space="preserve">
          <source>A global variable is like any other template variable, except that it&amp;rsquo;s available in all templates and macros:</source>
          <target state="translated">전역 변수는 모든 템플릿과 매크로에서 사용할 수 있다는 점을 제외하면 다른 템플릿 변수와 같습니다.</target>
        </trans-unit>
        <trans-unit id="e1ad7760538498bde9477e80ef6573d835e9959e" translate="yes" xml:space="preserve">
          <source>A global variable is like any other template variable, except that it's available in all templates and macros:</source>
          <target state="translated">전역 변수는 모든 템플릿 및 매크로에서 사용할 수 있다는 점을 제외하고 다른 템플릿 변수와 같습니다.</target>
        </trans-unit>
        <trans-unit id="22601ce5c8452cc77789f8e28813a74f070b158c" translate="yes" xml:space="preserve">
          <source>A macro is defined via the &lt;a href=&quot;tags/macro&quot;&gt;macro&lt;/a&gt; tag. Here is a small example (subsequently called &lt;code&gt;forms.html&lt;/code&gt;) of a macro that renders a form element:</source>
          <target state="translated">매크로는 &lt;a href=&quot;tags/macro&quot;&gt;매크로&lt;/a&gt; 태그 를 통해 정의됩니다 . 다음은 폼 요소를 렌더링하는 매크로 의 작은 예제 (이하 &lt;code&gt;forms.html&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="d22f4bcd2e83bd0c81adc78392fe7bb86165c18d" translate="yes" xml:space="preserve">
          <source>A profile contains information about time and memory consumption for template, block, and macro executions.</source>
          <target state="translated">프로파일에는 템플릿, 블록 및 매크로 실행을위한 시간 및 메모리 소비에 대한 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="441d078a3263758d9de80b7139c17cb5ccccbd71" translate="yes" xml:space="preserve">
          <source>A second parameter can also be provided that will be the separator used between the last two items of the sequence:</source>
          <target state="translated">시퀀스의 마지막 두 항목 사이에 사용되는 구분 기호가 될 두 번째 매개 변수도 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82abec751382c73ddbe0e414e0b3a1e22095906d" translate="yes" xml:space="preserve">
          <source>A sequence can be either an array or an object implementing the &lt;code&gt;Traversable&lt;/code&gt; interface.</source>
          <target state="translated">시퀀스는 &lt;code&gt;Traversable&lt;/code&gt; 인터페이스를 구현하는 배열 또는 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a990fcb3d5f6df58a19b54d69edadbec46d0abea" translate="yes" xml:space="preserve">
          <source>A template can be customized in two different ways:</source>
          <target state="translated">템플릿은 두 가지 방법으로 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dfa5740f5e7b1e6c40d4b2a84679a54fe3cbc9e" translate="yes" xml:space="preserve">
          <source>A template contains &lt;strong&gt;variables&lt;/strong&gt; or &lt;strong&gt;expressions&lt;/strong&gt;, which get replaced with values when the template is evaluated, and &lt;strong&gt;tags&lt;/strong&gt;, which control the logic of the template.</source>
          <target state="translated">템플릿에는 템플릿을 평가할 때 값으로 대체되는 &lt;strong&gt;변수&lt;/strong&gt; 또는 &lt;strong&gt;표현식&lt;/strong&gt; 과 템플릿 의 논리를 제어하는 &lt;strong&gt;tags&lt;/strong&gt; 가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="10b1029706f6054c679df6774fbf24814de198d8" translate="yes" xml:space="preserve">
          <source>A template contains &lt;strong&gt;variables&lt;/strong&gt; or &lt;strong&gt;expressions&lt;/strong&gt;, which get replaced with values when the template is evaluated, and &lt;strong&gt;tags&lt;/strong&gt;, which control the template&amp;rsquo;s logic.</source>
          <target state="translated">템플릿에는 템플릿이 평가 될 때 값으로 대체되는 &lt;strong&gt;변수&lt;/strong&gt; 또는 &lt;strong&gt;표현식&lt;/strong&gt; 과 템플릿의 논리를 제어하는 &lt;strong&gt;태그&lt;/strong&gt; 가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="36e07b0a6e684781e673a7d109ead9317dec6616" translate="yes" xml:space="preserve">
          <source>A template is a regular text file. It can generate any text-based format (HTML, XML, CSV, LaTeX, etc.). It doesn&amp;rsquo;t have a specific extension, &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.xml&lt;/code&gt; are just fine.</source>
          <target state="translated">템플릿은 일반 텍스트 파일입니다. 모든 텍스트 기반 형식 (HTML, XML, CSV, LaTeX 등)을 생성 할 수 있습니다. 특정 확장자가 없으며 &lt;code&gt;.html&lt;/code&gt; 또는 &lt;code&gt;.xml&lt;/code&gt; 은 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="2675cb78fe461e1ab586685b1f1befd56b5bd810" translate="yes" xml:space="preserve">
          <source>A template is simply a text file. It can generate any text-based format (HTML, XML, CSV, LaTeX, etc.). It doesn't have a specific extension, &lt;code&gt;.html&lt;/code&gt; or &lt;code&gt;.xml&lt;/code&gt; are just fine.</source>
          <target state="translated">템플릿은 단순히 텍스트 파일입니다. 텍스트 기반 형식 (HTML, XML, CSV, LaTeX 등)을 생성 할 수 있습니다. 특정 확장자가 없으며 &lt;code&gt;.html&lt;/code&gt; 또는 &lt;code&gt;.xml&lt;/code&gt; 이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4336f319bcccbf29d698330cf0b70953cab170a4" translate="yes" xml:space="preserve">
          <source>Accessing the parent Context in Nested Loops</source>
          <target state="translated">중첩 루프에서 부모 컨텍스트에 액세스</target>
        </trans-unit>
        <trans-unit id="bbf67a7b7c898637de98d2a7d7a47045591544e1" translate="yes" xml:space="preserve">
          <source>Add a tag by calling the &lt;code&gt;addTokenParser&lt;/code&gt; method on the &lt;code&gt;\Twig\Environment&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;\Twig\Environment&lt;/code&gt; 인스턴스 에서 &lt;code&gt;addTokenParser&lt;/code&gt; 메서드를 호출하여 태그를 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="1178a2b0d872c0e7863f6975a16a91251f2429c7" translate="yes" xml:space="preserve">
          <source>Adding a condition</source>
          <target state="translated">조건 추가</target>
        </trans-unit>
        <trans-unit id="6fc2836d2d4d8189a9f3229a87bdb63089561344" translate="yes" xml:space="preserve">
          <source>Adding a tag in an extension can be done by overriding the &lt;code&gt;getTokenParsers()&lt;/code&gt; method. This method must return an array of tags to add to the Twig environment:</source>
          <target state="translated">&lt;code&gt;getTokenParsers()&lt;/code&gt; 메소드를 대체하여 확장에 태그를 추가 할 수 있습니다 . 이 메소드는 Twig 환경에 추가 할 태그 배열을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6f8ce7b80c049316a2bf46357c5117f1b64b2f2" translate="yes" xml:space="preserve">
          <source>Adding a tag is as simple as calling the &lt;code&gt;addTokenParser&lt;/code&gt; method on the &lt;code&gt;Twig_Environment&lt;/code&gt; instance:</source>
          <target state="translated">태그를 추가하는 것은 &lt;code&gt;Twig_Environment&lt;/code&gt; 인스턴스 에서 &lt;code&gt;addTokenParser&lt;/code&gt; 메소드를 호출하는 것만 큼 간단 합니다.</target>
        </trans-unit>
        <trans-unit id="cc33c6eb93ffaa6edfdcc52e77411fd547eceab2" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;set&lt;/code&gt; call, the &lt;code&gt;foo&lt;/code&gt; variable is available in the template like any other ones:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 호출 후 &lt;code&gt;foo&lt;/code&gt; 변수는 다른 변수와 마찬가지로 템플릿에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b27ec9f6cce7e21cf288357baaec5afb94e7ae59" translate="yes" xml:space="preserve">
          <source>Afterwards you need to install a markdown library of your choice. Some of them are mentioned in the &lt;code&gt;require-dev&lt;/code&gt; section of the &lt;code&gt;twig/markdown-extra&lt;/code&gt; package.</source>
          <target state="translated">나중에 원하는 마크 다운 라이브러리를 설치해야합니다. 그들 중 일부는 &lt;code&gt;twig/markdown-extra&lt;/code&gt; 패키지 의 &lt;code&gt;require-dev&lt;/code&gt; 섹션에 언급되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f1640cf93f375b54ba7491282068bbb93d4e76c" translate="yes" xml:space="preserve">
          <source>Again, it works, but it looks weird. A filter transforms the passed value to something else but here we use the value to indicate the number of words to generate (so, &lt;code&gt;40&lt;/code&gt; is an argument of the filter, not the value we want to transform).</source>
          <target state="translated">다시 작동하지만 이상하게 보입니다. 필터는 전달 된 값을 다른 것으로 변환하지만 여기서는 생성 할 단어 수를 나타 내기 위해 값을 사용합니다 (따라서 &lt;code&gt;40&lt;/code&gt; 은 변환하려는 값이 아니라 필터의 인수입니다).</target>
        </trans-unit>
        <trans-unit id="7c2cb603b676e29afd274939a215d7191ccfbd24" translate="yes" xml:space="preserve">
          <source>Again, it works. But a filter should transform the passed value to something else. Here, we use the value to indicate the number of words to generate (so, &lt;code&gt;40&lt;/code&gt; is an argument of the filter, not the value we want to transform).</source>
          <target state="translated">다시 작동합니다. 그러나 필터는 전달 된 값을 다른 것으로 변환해야합니다. 여기에서 값을 사용하여 생성 할 단어 수를 나타냅니다 (따라서 &lt;code&gt;40&lt;/code&gt; 은 변환하려는 값이 아니라 필터의 인수입니다).</target>
        </trans-unit>
        <trans-unit id="20986f09976c5c0477bfd60ef87d08c14e2225ed" translate="yes" xml:space="preserve">
          <source>All loaders implement the &lt;code&gt;Twig_LoaderInterface&lt;/code&gt;:</source>
          <target state="translated">모든 로더는 &lt;code&gt;Twig_LoaderInterface&lt;/code&gt; 를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="6280ca772dd8c46297159a55d0fd0277f37c007f" translate="yes" xml:space="preserve">
          <source>All loaders implement the &lt;code&gt;\Twig\Loader\LoaderInterface&lt;/code&gt;:</source>
          <target state="translated">모든 로더는 &lt;code&gt;\Twig\Loader\LoaderInterface&lt;/code&gt; 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="92e357f03bba83bbea3a7ea2e761fc0c7b8604b8" translate="yes" xml:space="preserve">
          <source>All template loaders can cache the compiled templates on the filesystem for future reuse. It speeds up Twig a lot as templates are only compiled once.</source>
          <target state="translated">모든 템플릿 로더는 나중에 재사용 할 수 있도록 파일 시스템에 컴파일 된 템플릿을 캐시 할 수 있습니다. 템플릿이 한 번만 컴파일되므로 Twig의 속도를 크게 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4337c2273f6cbfb94fdcadf01dadd1f09383982d" translate="yes" xml:space="preserve">
          <source>All template loaders can cache the compiled templates on the filesystem for future reuse. It speeds up Twig a lot as templates are only compiled once; and the performance boost is even larger if you use a PHP accelerator such as APC. See the &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;auto_reload&lt;/code&gt; options of &lt;code&gt;Twig_Environment&lt;/code&gt; above for more information.</source>
          <target state="translated">모든 템플릿 로더는 나중에 재사용하기 위해 파일 시스템에 컴파일 된 템플릿을 캐시 할 수 있습니다. 템플릿이 한 번만 컴파일되므로 Twig 속도가 크게 향상됩니다. APC와 같은 PHP 가속기를 사용하면 성능이 훨씬 향상됩니다. 자세한 정보는 위 의 &lt;code&gt;Twig_Environment&lt;/code&gt; 의 &lt;code&gt;cache&lt;/code&gt; 및 &lt;code&gt;auto_reload&lt;/code&gt; 옵션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f7561288669145954b170876ce2566a454a1f0fd" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;block&lt;/code&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">모든 &lt;code&gt;block&lt;/code&gt; 태그는 하위 템플릿이 템플릿의 해당 부분을 무시할 수 있음을 템플릿 엔진에 알리는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bb23bc4af1271d89329cb1a26b890e3aad74103d" translate="yes" xml:space="preserve">
          <source>Also you can deprecate a block in the following way:</source>
          <target state="translated">또한 다음과 같은 방법으로 블록을 더 이상 사용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b93c0bc408b319af0a081f79a8c97cd8cf1301f" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;https://twigfiddle.com/&quot;&gt;TwigFiddle&lt;/a&gt; is an online service that allows you to execute Twig templates from a browser; it supports all versions of Twig.</source>
          <target state="translated">또한 &lt;a href=&quot;https://twigfiddle.com/&quot;&gt;TwigFiddle&lt;/a&gt; 은 브라우저에서 Twig 템플릿을 실행할 수있는 온라인 서비스입니다. 그것은 모든 버전의 나뭇 가지를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="854265b2a029f852d0bc224561c502812f6d7747" translate="yes" xml:space="preserve">
          <source>Alternatively you can import names from the template into the current namespace via the &lt;code&gt;from&lt;/code&gt; tag:</source>
          <target state="translated">또는 &lt;code&gt;from&lt;/code&gt; 태그 를 통해 템플릿의 이름을 현재 네임 스페이스로 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d64478597926444af94eb516059d628d0e84afea" translate="yes" xml:space="preserve">
          <source>Alternatively you can import names from the template into the current namespace:</source>
          <target state="translated">또는 템플릿에서 현재 네임 스페이스로 이름을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cd3f686536e1a8a5feef73223de57e1de3c3afd" translate="yes" xml:space="preserve">
          <source>Alternatively, you can import individual macro names from a template into the current namespace via the &lt;a href=&quot;tags/from&quot;&gt;from&lt;/a&gt; tag and optionally alias them:</source>
          <target state="translated">또는 &lt;a href=&quot;tags/from&quot;&gt;from&lt;/a&gt; 태그 를 통해 템플릿에서 현재 네임 스페이스로 개별 매크로 이름을 가져오고 선택적으로 별명을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f3e0777d038437080de7fae66ec93e0eeef3783" translate="yes" xml:space="preserve">
          <source>An absolute path where to store the compiled templates, or &lt;code&gt;false&lt;/code&gt; to disable caching (which is the default).</source>
          <target state="translated">컴파일 된 템플릿을 저장할 절대 경로이거나 캐싱을 사용하지 않으려면 &lt;code&gt;false&lt;/code&gt; 입니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="001e0fa53d02fa64f509bebb272fffb950b32ef3" translate="yes" xml:space="preserve">
          <source>An extension is a class that implements the following interface:</source>
          <target state="translated">확장은 다음 인터페이스를 구현하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="72013e231dc45052f94b813f04210719a13cee6e" translate="yes" xml:space="preserve">
          <source>And here is how to escape variables included in JavaScript code:</source>
          <target state="translated">JavaScript 코드에 포함 된 변수를 이스케이프 처리하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="12e1a982eb58b05927654644fe66fcc880fe66c8" translate="yes" xml:space="preserve">
          <source>And here is how to use it in a template:</source>
          <target state="translated">템플릿에서 사용하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e6fe04587380e5a62ba1555278d47c8e5b944255" translate="yes" xml:space="preserve">
          <source>And here is the code for &lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt;:</source>
          <target state="translated">그리고 여기 &lt;code&gt;vertical_boxes_skeleton.twig&lt;/code&gt; 의 코드가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="36050e6e23cbafc55c782796b0c0eddf58d22524" translate="yes" xml:space="preserve">
          <source>And if the expression evaluates to a &lt;code&gt;Twig_Template&lt;/code&gt; or a &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; instance, Twig will use it directly:</source>
          <target state="translated">그리고식이 &lt;code&gt;Twig_Template&lt;/code&gt; 또는 &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; 인스턴스로 평가 되면 Twig에서 직접 사용합니다.</target>
        </trans-unit>
        <trans-unit id="af7d7aa2e97aa5f2efa7b19f368291f7ebfe4cde" translate="yes" xml:space="preserve">
          <source>And if the expression evaluates to a &lt;code&gt;\Twig\Template&lt;/code&gt; or a &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; instance, Twig will use it directly:</source>
          <target state="translated">식이 &lt;code&gt;\Twig\Template&lt;/code&gt; 또는 &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; 인스턴스로 평가되면 Twig는이를 직접 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b6f04d0927c83a82c1eb6e9dc548ad1c2bafda38" translate="yes" xml:space="preserve">
          <source>And the following template to display all messages in all topics:</source>
          <target state="translated">다음 주제는 모든 주제의 모든 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="040ed443ab4fd79e3d209b36badedb69fbe56f90" translate="yes" xml:space="preserve">
          <source>Arguments of a macro are always optional.</source>
          <target state="translated">매크로의 인수는 항상 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e646603e8d8c75f866daa426b7f32a29c6fd65d2" translate="yes" xml:space="preserve">
          <source>Arrays and hashes can be nested:</source>
          <target state="translated">배열과 해시는 중첩 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="da43dabafa3e7e1066b2d90210aae00d40fe1590" translate="yes" xml:space="preserve">
          <source>As a matter of fact, the template name can be any valid expression, such as the following:</source>
          <target state="translated">실제로 템플릿 이름은 다음과 같은 유효한식이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60d4af2021444a8d8bae3ca89173b100f5df0603" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, use functions for frequently used features and global objects for everything else.</source>
          <target state="translated">경험상 자주 사용되는 기능에 대한 기능과 다른 모든 것에 대한 전역 객체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="692f65e3a76c0b3b657ed9387d4774bc74a9e3ef" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the &lt;code&gt;format_*_number&lt;/code&gt; filters by replacing</source>
          <target state="translated">바로 가기로 &lt;code&gt;format_*_number&lt;/code&gt; 필터를 대체하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8faf22ad587b8068fb8c778bd51400f3da8faa2a" translate="yes" xml:space="preserve">
          <source>As embedded templates do not have &quot;names&quot;, auto-escaping strategies based on the template name won't work as expected if you change the context (for instance, if you embed a CSS/JavaScript template into an HTML one). In that case, explicitly set the default auto-escaping strategy with the &lt;code&gt;autoescape&lt;/code&gt; tag.</source>
          <target state="translated">임베드 된 템플리트에는 &quot;이름&quot;이 없으므로 컨텍스트를 변경하면 (예 : CSS / JavaScript 템플리트를 HTML에 임베드하는 경우) 템플리트 이름을 기반으로하는 자동 이스케이프 전략이 예상대로 작동하지 않습니다. 이 경우 &lt;code&gt;autoescape&lt;/code&gt; 태그를 사용하여 기본 자동 이스케이프 전략을 명시 적으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c40e258ff49f6d9390243385adea75a0abde4252" translate="yes" xml:space="preserve">
          <source>As embedded templates do not have &amp;ldquo;names&amp;rdquo;, auto-escaping strategies based on the template name won&amp;rsquo;t work as expected if you change the context (for instance, if you embed a CSS/JavaScript template into an HTML one). In that case, explicitly set the default auto-escaping strategy with the &lt;code&gt;autoescape&lt;/code&gt; tag.</source>
          <target state="translated">포함 된 템플릿에는 &quot;이름&quot;이 없으므로 컨텍스트를 변경하면 (예 : CSS / JavaScript 템플릿을 HTML 템플릿에 포함하는 경우) 템플릿 이름을 기반으로하는 자동 이스케이프 전략이 예상대로 작동하지 않습니다. 이 경우 &lt;code&gt;autoescape&lt;/code&gt; 태그를 사용하여 기본 자동 이스케이프 전략을 명시 적으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a5434b6014c06b012b48905cb05a3574ae61a62" translate="yes" xml:space="preserve">
          <source>As syntactic sugar, you can also use the &lt;code&gt;[]&lt;/code&gt; notation:</source>
          <target state="translated">구문 설탕으로 &lt;code&gt;[]&lt;/code&gt; 표기법을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef2ce8b617c3dabbb7d8ddc1c811cdbfd82ac5cf" translate="yes" xml:space="preserve">
          <source>As templates are generally stored on the filesystem, Twig also comes with a filesystem loader:</source>
          <target state="translated">템플릿은 일반적으로 파일 시스템에 저장되므로 Twig에는 파일 시스템 로더도 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d6b073394fbe14b74141808af30d5117f797398e" translate="yes" xml:space="preserve">
          <source>As the filter uses a regular expression behind the scenes, its performance is directly related to the text size you are working on (remember that filters are executed at runtime).</source>
          <target state="translated">필터는 배후에서 정규식을 사용하므로 성능은 작업중인 텍스트 크기와 직접 관련이 있습니다 (필터는 런타임에 실행됨을 기억하십시오).</target>
        </trans-unit>
        <trans-unit id="b162cb9a3db0568369f30dabc8925b952214aea9" translate="yes" xml:space="preserve">
          <source>As the resolution of functions and filters is done during compilation, there is no overhead when registering these callbacks.</source>
          <target state="translated">컴파일 중에 함수 및 필터의 해상도가 수행되므로 이러한 콜백을 등록 할 때 오버 헤드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d7b5ef95ea3e664c909e155001a7d5b2e1984f6e" translate="yes" xml:space="preserve">
          <source>As the stream has a &lt;code&gt;__toString()&lt;/code&gt; method, you can have a textual representation of it by echoing the object:</source>
          <target state="translated">스트림에 &lt;code&gt;__toString()&lt;/code&gt; 메서드가 있으므로 객체를 에코하여 텍스트로 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ea9a412d1fe41be92c04bd44bca509f8daa62e3" translate="yes" xml:space="preserve">
          <source>As the template name for the parent can be any valid Twig expression, it&amp;rsquo;s possible to make the inheritance mechanism conditional:</source>
          <target state="translated">부모의 템플릿 이름은 유효한 Twig 표현식이 될 수 있으므로 상속 메커니즘을 조건부로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5becfbd63fc2fa3adafdfab34d36a25456768fbb" translate="yes" xml:space="preserve">
          <source>As the template name for the parent can be any valid Twig expression, it's possible to make the inheritance mechanism conditional:</source>
          <target state="translated">부모의 템플릿 이름은 유효한 Twig식이 될 수 있으므로 상속 메커니즘을 조건부로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29909a85f8900892eb541f027aefa18d0fce0fd9" translate="yes" xml:space="preserve">
          <source>As you can see in the previous recipe, we reference the template in the exact same way as we would have done it with a regular filesystem loader. This is the key to be able to mix and match templates coming from the database, the filesystem, or any other loader for that matter: the template name should be a logical name, and not the path from the filesystem:</source>
          <target state="translated">이전 레시피에서 볼 수 있듯이 일반 파일 시스템 로더를 사용했을 때와 동일한 방식으로 템플릿을 참조합니다. 이것은 데이터베이스, 파일 시스템 또는 그 밖의 다른 로더에서 오는 템플릿을 혼합하고 일치시킬 수있는 열쇠입니다. 템플릿 이름은 파일 시스템의 경로가 아니라 논리적 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="7cb099f6e8eeb2d93444d80f05c81eb87e9c997b" translate="yes" xml:space="preserve">
          <source>Automatic Escaping</source>
          <target state="translated">자동 탈출</target>
        </trans-unit>
        <trans-unit id="a39cfeeebe89147faf69eee8adc690a872cab9bf" translate="yes" xml:space="preserve">
          <source>Automatic escaping is not applied if the last filter in the chain is marked safe for the current context (e.g. &lt;code&gt;html&lt;/code&gt; or &lt;code&gt;js&lt;/code&gt;). &lt;code&gt;escape&lt;/code&gt; and &lt;code&gt;escape('html')&lt;/code&gt; are marked safe for HTML, &lt;code&gt;escape('js')&lt;/code&gt; is marked safe for JavaScript, &lt;code&gt;raw&lt;/code&gt; is marked safe for everything.</source>
          <target state="translated">체인의 마지막 필터가 현재 컨텍스트 (예 : &lt;code&gt;html&lt;/code&gt; 또는 &lt;code&gt;js&lt;/code&gt; )에 안전하다고 표시되면 자동 이스케이프가 적용되지 않습니다 . &lt;code&gt;escape&lt;/code&gt; 및 &lt;code&gt;escape('html')&lt;/code&gt; 는 HTML에 대해 안전으로 표시되고, &lt;code&gt;escape('js')&lt;/code&gt; 는 JavaScript에 대해 안전으로 표시되고, &lt;code&gt;raw&lt;/code&gt; 는 모든 것에 대해 안전으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a95a93dea4bd76ef1b6385cb96f21a4ab35c02b5" translate="yes" xml:space="preserve">
          <source>Basic API Usage</source>
          <target state="translated">기본 API 사용법</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="8503764862d5fb3f259084f1f1f824ca4e4e5854" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;raw&lt;/code&gt; filter inside expressions:</source>
          <target state="translated">표현식 내부 에서 &lt;code&gt;raw&lt;/code&gt; 필터를 사용할 때주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d523673b445f9a685830922be5e485c5e6bb8d2" translate="yes" xml:space="preserve">
          <source>Be warned that &lt;a href=&quot;templates#named-arguments&quot;&gt;named arguments&lt;/a&gt; passed to a variadic filter cannot be checked for validity as they will automatically end up in the option array.</source>
          <target state="translated">경고 될 &lt;a href=&quot;templates#named-arguments&quot;&gt;명명 된 인수&lt;/a&gt; 가 자동으로 옵션 배열에 끝날 것 같은 가변 필터에 통과가 유효성을 검사 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9dd84aabcec3468fc16cf65177ebfe2a4bca2a32" translate="yes" xml:space="preserve">
          <source>Be warned that named arguments passed to a variadic filter cannot be checked for validity as they will automatically end up in the option array.</source>
          <target state="translated">가변 배열 필터에 전달 된 명명 된 인수는 옵션 배열에서 자동으로 종료되므로 유효성을 검사 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a64d1c3efe0b5136e8e87c51f07117c9455945f2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;use&lt;/code&gt; statements are resolved independently of the context passed to the template, the template reference cannot be an expression.</source>
          <target state="translated">때문에 &lt;code&gt;use&lt;/code&gt; 문이 템플릿에 전달 된 상황 독립적으로 해결, 템플릿 참조는 표현이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5aaaa72d621b178c6d4fea096e2daeace9123651" translate="yes" xml:space="preserve">
          <source>Before extending Twig, you must understand the differences between all the different possible extension points and when to use them.</source>
          <target state="translated">Twig를 확장하기 전에 가능한 모든 확장 지점과 사용 시점 간의 차이점을 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="31d567b0c5a13d010b449bf26ab42c9158eaa357" translate="yes" xml:space="preserve">
          <source>Before writing your own extensions, have a look at the Twig official extension repository: &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;https://github.com/twigphp/Twig-extensions&lt;/a&gt;.</source>
          <target state="translated">자체 확장을 작성하기 전에 Twig 공식 확장 저장소 ( &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;https://github.com/twigphp/Twig-extensions)를&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="9e828016ac72660eb882fef90ef09bf394557888" translate="yes" xml:space="preserve">
          <source>Below is a minimal template that illustrates a few basics. We will cover further details later on:</source>
          <target state="translated">아래는 몇 가지 기본 사항을 보여주는 최소 템플릿입니다. 우리는 나중에 더 자세한 내용을 다룰 것입니다 :</target>
        </trans-unit>
        <trans-unit id="332402f75c52ee92be87d91ae0d82a8fb020f98f" translate="yes" xml:space="preserve">
          <source>Besides plain numbers, the filter can also format numbers in various styles:</source>
          <target state="translated">일반 숫자 외에도 필터는 다양한 스타일의 숫자 형식을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0df383d4e0feb1807cf6bfd346518081aef6280" translate="yes" xml:space="preserve">
          <source>Block Nesting and Scope</source>
          <target state="translated">블록 중첩 및 범위</target>
        </trans-unit>
        <trans-unit id="165742734396b0ef5e028adac4baa2a29de7dece" translate="yes" xml:space="preserve">
          <source>Block Shortcuts</source>
          <target state="translated">블록 바로 가기</target>
        </trans-unit>
        <trans-unit id="3a12fc742b6fddd2cd490f93896cfff560e93cc9" translate="yes" xml:space="preserve">
          <source>Block names must consist of alphanumeric characters, and underscores. The first char can&amp;rsquo;t be a digit and dashes are not permitted.</source>
          <target state="translated">블록 이름은 영숫자와 밑줄로 구성되어야합니다. 첫 번째 문자는 숫자가 될 수 없으며 대시는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2822d237ce1b5d7940a3f7ee29b09a6a59fa5a6a" translate="yes" xml:space="preserve">
          <source>Block names should consist of alphanumeric characters, and underscores. Dashes are not permitted.</source>
          <target state="translated">블록 이름은 영숫자와 밑줄로 구성되어야합니다. 대시는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b45c99b7e2e655ae0e097dcc9f67590cc93aa543" translate="yes" xml:space="preserve">
          <source>Blocks are used for inheritance and act as placeholders and replacements at the same time. They are documented in detail in the documentation for the &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt; tag.</source>
          <target state="translated">블록은 상속에 사용되며 동시에 자리 표시 자 및 교체 역할을합니다. &lt;a href=&quot;extends&quot;&gt;extends&lt;/a&gt; 태그에 대한 설명서에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c9f0d001be7e94743eaaacf19d3485d02a206f5" translate="yes" xml:space="preserve">
          <source>Blocks can be nested for more complex layouts. Per default, blocks have access to variables from outer scopes:</source>
          <target state="translated">보다 복잡한 레이아웃을 위해 블록을 중첩 할 수 있습니다. 기본적으로 블록은 외부 범위에서 변수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b03a3cc6ded72f2ac8774da6e07b8b0105a62b55" translate="yes" xml:space="preserve">
          <source>Boolean decision</source>
          <target state="translated">부울 결정</target>
        </trans-unit>
        <trans-unit id="86b0d6eb95c3db4d81992dedeb5105051f9d0d45" translate="yes" xml:space="preserve">
          <source>Boolean evaluation</source>
          <target state="translated">부울 평가</target>
        </trans-unit>
        <trans-unit id="3f1f1a237f0e89ebaf2f3bd2bf9e31d13d400bb7" translate="yes" xml:space="preserve">
          <source>Built-in Extensions</source>
          <target state="translated">내장 확장</target>
        </trans-unit>
        <trans-unit id="14f126509f4335c317af4a2a32904aa83d96efc8" translate="yes" xml:space="preserve">
          <source>Built-in Loaders</source>
          <target state="translated">내장 로더</target>
        </trans-unit>
        <trans-unit id="b63771e3f672b156116c4dccd8a736f58cd3ce53" translate="yes" xml:space="preserve">
          <source>Built-in escapers cannot be overridden mainly because they should be considered as the final implementation and also for better performance.</source>
          <target state="translated">기본 제공 이스케이프는 주로 최종 구현으로 간주되어야하고 더 나은 성능을 위해 재정의 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="655a1642bfb010336f36b2774be0af4982945073" translate="yes" xml:space="preserve">
          <source>Built-in escapers cannot be overridden mainly they should be considered as the final implementation and also for better performance.</source>
          <target state="translated">내장 이스케이프는 대체로 재정의 될 수 없으며 주로 최종 구현으로 간주되고 성능이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="042037f853230f37eaa1920067476ade19e011ee" translate="yes" xml:space="preserve">
          <source>But as with PHP functions, macros don&amp;rsquo;t have access to the current template variables.</source>
          <target state="translated">그러나 PHP 함수와 마찬가지로 매크로는 현재 템플릿 변수에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fff6688e0887b9682eb8a82f475996d2ee4e7467" translate="yes" xml:space="preserve">
          <source>But as with PHP functions, macros don't have access to the current template variables.</source>
          <target state="translated">그러나 PHP 함수와 마찬가지로 매크로는 현재 템플릿 변수에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cc4d6faf3ec2dc32b0b39dd5d3516f5f8fa82c4e" translate="yes" xml:space="preserve">
          <source>But how do you combine both: &lt;em&gt;replace&lt;/em&gt; a template that also extends itself (aka a template in a directory further in the list)?</source>
          <target state="translated">그러나 둘 다 어떻게 결합합니까 : 자체 확장되는 템플릿 (목록의 디렉토리에있는 템플릿)을 &lt;em&gt;바꾸&lt;/em&gt; 시겠습니까?</target>
        </trans-unit>
        <trans-unit id="d5766260fddc60d59a594927a796ea29ec334c24" translate="yes" xml:space="preserve">
          <source>By default, a loop iterates over the values of the sequence. You can iterate on keys by using the &lt;code&gt;keys&lt;/code&gt; filter:</source>
          <target state="translated">기본적으로 루프는 시퀀스 값을 반복합니다. &lt;code&gt;keys&lt;/code&gt; 필터 를 사용하여 키 를 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1b7eab0b2a558465a8058aca84695e2f768a032" translate="yes" xml:space="preserve">
          <source>By default, all optimizations are turned on. You can select the ones you want to enable by passing them to the constructor:</source>
          <target state="translated">기본적으로 모든 최적화가 켜져 있습니다. 생성자에 전달하여 사용하려는 항목을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="103ffb60439f0bf5fe8eb8a6d89f56640c56147c" translate="yes" xml:space="preserve">
          <source>By default, auto-escaping uses the &lt;code&gt;html&lt;/code&gt; escaping strategy. If you output variables in other contexts, you need to explicitly escape them with the appropriate escaping strategy:</source>
          <target state="translated">기본적으로 자동 이스케이프는 &lt;code&gt;html&lt;/code&gt; 이스케이프 전략을 사용합니다 . 다른 컨텍스트에서 변수를 출력하는 경우 적절한 이스케이프 전략을 사용하여 변수를 명시 적으로 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="841ca308886743182de433a36e60161a852ad2a1" translate="yes" xml:space="preserve">
          <source>By default, included templates have access to the same context as the template which includes them. This means that any variable defined in the main template will be available in the included template too:</source>
          <target state="translated">기본적으로 포함 된 템플릿은 템플릿을 포함하는 템플릿과 동일한 컨텍스트에 액세스 할 수 있습니다. 이는 기본 템플릿에 정의 된 모든 변수가 포함 된 템플릿에서도 사용할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="32f5c247824d4ac3ebcbfb77dca589496bfacd7b" translate="yes" xml:space="preserve">
          <source>By default, it uses the HTML escaping strategy:</source>
          <target state="translated">기본적으로 HTML 이스케이프 전략을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="40f749209db4b39252e20e3da4bb8e1d11ca0888" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;escape&lt;/code&gt; filter uses the &lt;code&gt;html&lt;/code&gt; strategy, but depending on the escaping context, you might want to explicitly use an other strategy:</source>
          <target state="translated">기본적으로 &lt;code&gt;escape&lt;/code&gt; 필터는 &lt;code&gt;html&lt;/code&gt; 전략을 사용 하지만 이스케이프 컨텍스트에 따라 다른 전략을 명시 적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e1bdad7b16ce38d760229a970e648a79a17736f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;escape&lt;/code&gt; filter uses the &lt;code&gt;html&lt;/code&gt; strategy, but depending on the escaping context, you might want to explicitly use any other available strategies:</source>
          <target state="translated">기본적으로 &lt;code&gt;escape&lt;/code&gt; 필터는 &lt;code&gt;html&lt;/code&gt; 전략을 사용 하지만 이스케이프 컨텍스트에 따라 사용 가능한 다른 전략을 명시 적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="013998e3dbf4fa9781657f6ed29b3436bfd248db" translate="yes" xml:space="preserve">
          <source>By default, the date is displayed by applying the default timezone (the one specified in php.ini or declared in Twig &amp;ndash; see below), but you can override it by explicitly specifying a timezone:</source>
          <target state="translated">기본적으로 날짜는 기본 시간대 (php.ini에 지정되거나 Twig에 선언 된 시간대 &amp;ndash; 아래 참조)를 적용하여 표시되지만 명시 적으로 시간대를 지정하여 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef411e1f79631b7502b30fc94d6278bc2ddc7d67" translate="yes" xml:space="preserve">
          <source>By default, the date is displayed by applying the default timezone (the one specified in php.ini or declared in Twig -- see below), but you can override it by explicitly specifying a timezone:</source>
          <target state="translated">기본적으로 날짜는 기본 시간대 (php.ini에 지정되거나 Twig에 선언 된 시간대)를 적용하여 표시되지만 시간대를 명시 적으로 지정하여 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8ef92b0c0f4b08c678ec46da3112a3bd769e06d" translate="yes" xml:space="preserve">
          <source>By default, the filter uses the current locale. You can pass it explicitly:</source>
          <target state="translated">기본적으로 필터는 현재 로케일을 사용합니다. 명시 적으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71639d8401d82bd72a5b6d33871fd832e2714359" translate="yes" xml:space="preserve">
          <source>By default, the inner scope has access to the outer scope context; you can disable this behavior by appending the &lt;code&gt;only&lt;/code&gt; keyword:</source>
          <target state="translated">기본적으로 내부 범위는 외부 범위 컨텍스트에 액세스 할 수 있습니다. &lt;code&gt;only&lt;/code&gt; 키워드 를 추가하여이 동작을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="694abf09f6ba17b93d23bf9a1a76377be0e6f964" translate="yes" xml:space="preserve">
          <source>By default, the sandbox mode is disabled and should be enabled when including untrusted template code by using the &lt;code&gt;sandbox&lt;/code&gt; tag:</source>
          <target state="translated">샌드 박스 모드는 기본적으로 비활성화되어 있으며 &lt;code&gt;sandbox&lt;/code&gt; 태그 를 사용하여 신뢰할 수없는 템플릿 코드를 포함 할 때 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="841ebda6544ddbba69554e4189edb9aa9a579ca2" translate="yes" xml:space="preserve">
          <source>Changing the delimiters of one of the template engines (depending on which engine you introduced last):</source>
          <target state="translated">마지막으로 도입 한 엔진에 따라 템플릿 엔진 중 하나의 구분 기호를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="2398a0461657553f576bedce6090b2b43f66a52c" translate="yes" xml:space="preserve">
          <source>Checking if a Macro is defined</source>
          <target state="translated">매크로 정의 여부 확인</target>
        </trans-unit>
        <trans-unit id="996e31f727a5d55f1c2c9ecc6fab3703f07517ac" translate="yes" xml:space="preserve">
          <source>Child Template</source>
          <target state="translated">자식 템플릿</target>
        </trans-unit>
        <trans-unit id="bfa26f82d31c6894fd22c56cda343f490718f895" translate="yes" xml:space="preserve">
          <source>Clause</source>
          <target state="translated">Clause</target>
        </trans-unit>
        <trans-unit id="7ddec538289b11324f7535a727852ccc402681c5" translate="yes" xml:space="preserve">
          <source>Coding Standards</source>
          <target state="translated">코딩 표준</target>
        </trans-unit>
        <trans-unit id="1aef20d756d2d8144ff423aba5105a475f5a465b" translate="yes" xml:space="preserve">
          <source>Combined with the &lt;code&gt;for&lt;/code&gt; tag, it allows to filter the items to iterate over:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 태그 와 결합 하면 항목을 필터링하여 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="4159f677a3ba4b1e8e5c8d9e5dcb054853dc4d44" translate="yes" xml:space="preserve">
          <source>Compilation Cache</source>
          <target state="translated">컴파일 캐시</target>
        </trans-unit>
        <trans-unit id="8620d3f223635ae2fada6a944bdf7791cdafebad" translate="yes" xml:space="preserve">
          <source>Conditional Inheritance</source>
          <target state="translated">조건부 상속</target>
        </trans-unit>
        <trans-unit id="4c4d50a3c4388b60540a6bb6a575b4439ccf09cb" translate="yes" xml:space="preserve">
          <source>Containment Operator</source>
          <target state="translated">격리 연산자</target>
        </trans-unit>
        <trans-unit id="631f756e9a696cb4f11333a23eb74502ab2a1bea" translate="yes" xml:space="preserve">
          <source>Content generation</source>
          <target state="translated">컨텐츠 생성</target>
        </trans-unit>
        <trans-unit id="3d39259a09853933576ea9ae7680e4c9db3df385" translate="yes" xml:space="preserve">
          <source>Context-aware Filters</source>
          <target state="translated">상황 인식 필터</target>
        </trans-unit>
        <trans-unit id="bb66e040b1eaaa938975b8930e88b461f54966e0" translate="yes" xml:space="preserve">
          <source>Contrary to what you might think, this template does not define a block conditionally; it just makes overridable by a child template the output of what will be rendered when the condition is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">생각하는 것과는 달리이 템플릿은 조건부로 블록을 정의하지 않습니다. 자식 템플릿이 조건이 &lt;code&gt;true&lt;/code&gt; 일 때 렌더링되는 결과를 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc8212cea50053ea6c5082578330fb7fddacde68" translate="yes" xml:space="preserve">
          <source>Control Structure</source>
          <target state="translated">제어 구조</target>
        </trans-unit>
        <trans-unit id="4d6fc77538f6f5da4fe47893201fdbb11b81e9bf" translate="yes" xml:space="preserve">
          <source>Converting a string to &lt;em&gt;snake&lt;/em&gt; case or &lt;em&gt;camelCase&lt;/em&gt;:</source>
          <target state="translated">문자열을 &lt;em&gt;snake&lt;/em&gt; case 또는 &lt;em&gt;camelCase&lt;/em&gt; 로 변환 :</target>
        </trans-unit>
        <trans-unit id="f643dde3c69f6c516a05419a7bee9eb0c1da0f69" translate="yes" xml:space="preserve">
          <source>Converts an argument to a date to allow date comparison:</source>
          <target state="translated">날짜 비교를 위해 인수를 날짜로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="373a9d8ff1daf2670e1db5d6c60706fb56834033" translate="yes" xml:space="preserve">
          <source>Core Extension</source>
          <target state="translated">핵심 확장</target>
        </trans-unit>
        <trans-unit id="800e0975533c92d4737ab54b41c79ea48c2c7750" translate="yes" xml:space="preserve">
          <source>Create two &quot;intermediate&quot; base templates that extend the master layout template: one with vertically stacked boxes to be used by the &quot;foo&quot; and &quot;bar&quot; pages and another one with side-by-side boxes for the &quot;boom&quot; and &quot;baz&quot; pages.</source>
          <target state="translated">마스터 레이아웃 템플리트를 확장하는 두 개의 &quot;중간&quot;기본 템플리트를 작성하십시오. 하나는 &quot;foo&quot;및 &quot;bar&quot;페이지에서 사용하기 위해 세로로 쌓인 상자가 있고 다른 하나는 &quot;붐&quot;및 &quot;baz에 대해 나란히 상자가있는 것입니다. &quot;페이지.</target>
        </trans-unit>
        <trans-unit id="5d7afe6270e5c173e4c062c11c3436f528bf9ad7" translate="yes" xml:space="preserve">
          <source>Create two &amp;ldquo;intermediate&amp;rdquo; base templates that extend the master layout template: one with vertically stacked boxes to be used by the &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo; pages and another one with side-by-side boxes for the &amp;ldquo;boom&amp;rdquo; and &amp;ldquo;baz&amp;rdquo; pages.</source>
          <target state="translated">마스터 레이아웃 템플릿을 확장하는 두 개의 &quot;중간&quot;기본 템플릿을 만듭니다. 하나는 &quot;foo&quot;및 &quot;bar&quot;페이지에서 사용할 세로로 쌓인 상자가 있고 다른 하나는 &quot;boom&quot;및 &quot;baz에 대한 나란히 상자가있는 상자입니다. &amp;rdquo;페이지.</target>
        </trans-unit>
        <trans-unit id="e812c00b1d029e2bd6da31be4387e9458b3795bb" translate="yes" xml:space="preserve">
          <source>Create your own Loader</source>
          <target state="translated">나만의 로더 만들기</target>
        </trans-unit>
        <trans-unit id="8efcf4a8fd9fb8bf4d249b48568cdf0129d677bf" translate="yes" xml:space="preserve">
          <source>Creating a filter consists of associating a name with a PHP callable:</source>
          <target state="translated">필터 생성은 이름을 PHP 콜 러블과 연결하는 것으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="abb89ed86cd9ec0681aceb129a3db464abbc00cc" translate="yes" xml:space="preserve">
          <source>Creating a filter is as simple as associating a name with a PHP callable:</source>
          <target state="translated">필터를 작성하는 것은 이름을 PHP 호출 가능과 연관시키는 것만 큼 간단합니다.</target>
        </trans-unit>
        <trans-unit id="d98d225179baa96a9aad75f63fa267228aac2cb2" translate="yes" xml:space="preserve">
          <source>Creating an Extension</source>
          <target state="translated">확장 만들기</target>
        </trans-unit>
        <trans-unit id="d460cf77255e9f6554f633feff229f0554d49c57" translate="yes" xml:space="preserve">
          <source>Custom Escapers</source>
          <target state="translated">맞춤 이스케이프</target>
        </trans-unit>
        <trans-unit id="9ce90e18ea78746ba849d8b048e61d6fe6de1823" translate="yes" xml:space="preserve">
          <source>Customizing the Syntax</source>
          <target state="translated">구문 사용자 정의</target>
        </trans-unit>
        <trans-unit id="bf68faa05c49a245f705073bbff6d8d1e2d5a664" translate="yes" xml:space="preserve">
          <source>DSL language construct</source>
          <target state="translated">DSL 언어 구성</target>
        </trans-unit>
        <trans-unit id="743ac9af736554b327df742c7669732bc225f922" translate="yes" xml:space="preserve">
          <source>Default argument values are defined by using the &lt;code&gt;default&lt;/code&gt; filter in the macro body;</source>
          <target state="translated">기본 인수 값은 매크로 본문에서 &lt;code&gt;default&lt;/code&gt; 필터를 사용하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="df7276ec51477b766f58425f6f6cd985c15ceb0a" translate="yes" xml:space="preserve">
          <source>Defining a Node</source>
          <target state="translated">노드 정의</target>
        </trans-unit>
        <trans-unit id="47298c6c4220f18f8351f766579c44084dc606cc" translate="yes" xml:space="preserve">
          <source>Defining a Node class (responsible for converting the parsed code to PHP);</source>
          <target state="translated">Node 클래스 정의 (구문 분석 된 코드를 PHP로 변환 할 책임);</target>
        </trans-unit>
        <trans-unit id="f9ac05668b95495418c92ce13a1ee8531536fc5b" translate="yes" xml:space="preserve">
          <source>Defining a Token Parser</source>
          <target state="translated">토큰 파서 정의</target>
        </trans-unit>
        <trans-unit id="7d22ec582ecbb71c1de058c7096c33d9e79d3afb" translate="yes" xml:space="preserve">
          <source>Defining a Token Parser class (responsible for parsing the template code);</source>
          <target state="translated">토큰 파서 클래스 정의 (템플릿 코드 구문 분석에 책임이 있음);</target>
        </trans-unit>
        <trans-unit id="905a63411289386486912504c2882def0978656b" translate="yes" xml:space="preserve">
          <source>Defining undefined Functions and Filters on the Fly</source>
          <target state="translated">플라이에서 정의되지 않은 함수 및 필터 정의</target>
        </trans-unit>
        <trans-unit id="42431a70f7d6a713149aa76e7833d14debec6945" translate="yes" xml:space="preserve">
          <source>Definition vs Runtime</source>
          <target state="translated">정의 대 런타임</target>
        </trans-unit>
        <trans-unit id="ceaeb02845d1d654b15aff26166b75166c1f4101" translate="yes" xml:space="preserve">
          <source>Depending on the library, you can also add some options by passing them as an argument to the filter. Example for &lt;code&gt;league/html-to-markdown&lt;/code&gt;:</source>
          <target state="translated">라이브러리에 따라 일부 옵션을 필터에 인수로 전달하여 추가 할 수도 있습니다. 예를 들어 &lt;code&gt;league/html-to-markdown&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="def61a57f1801bd18a4d37400296f865b936a07f" translate="yes" xml:space="preserve">
          <source>Deprecated Features</source>
          <target state="translated">더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="9c7548801bdb83424b41bc768fefa021c6bfa539" translate="yes" xml:space="preserve">
          <source>Deprecated Filters</source>
          <target state="translated">더 이상 사용되지 않는 필터</target>
        </trans-unit>
        <trans-unit id="cfb7e90012ebb9cf373e81f8c8ae797fe4e8bf5b" translate="yes" xml:space="preserve">
          <source>Deprecated features generate deprecation notices (via a call to the &lt;code&gt;trigger_error()&lt;/code&gt; PHP function). By default, they are silenced and never displayed nor logged.</source>
          <target state="translated">더 이상 사용되지 않는 기능은 ( &lt;code&gt;trigger_error()&lt;/code&gt; PHP 함수 호출을 통해) 사용 중단 통지를 생성 합니다. 기본적으로 이들은 침묵되며 표시되거나 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="95a04d79c1def5970f9d3ed416baab23f7ca1ba3" translate="yes" xml:space="preserve">
          <source>Displaying Deprecation Notices</source>
          <target state="translated">사용 중단 알림 표시</target>
        </trans-unit>
        <trans-unit id="70bdeb4bde64edbddb2c9890467abaa39f9ff863" translate="yes" xml:space="preserve">
          <source>Do not put any spaces after an opening parenthesis and before a closing parenthesis in expressions:</source>
          <target state="translated">표현식에서 여는 괄호 다음과 닫는 괄호 앞에 공백을 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b54b07578e66332ed94b1360d985511a91c57498" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after string delimiters:</source>
          <target state="translated">문자열 구분 기호 앞뒤에 공백을 넣지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ad513610c4e1cca7668e0fcbc4fbb412aa032171" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the following operators: &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">다음 연산자 앞뒤에 공백을 두지 마십시오. &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;..&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2c9a4a876054cecb973a2f5e467a1b18ed3f4f36" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the opening and the closing of arrays and hashes:</source>
          <target state="translated">배열과 해시를 열고 닫는 전후에 공백을 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1148410eb402bec176a0f348c903944c39cd5f7e" translate="yes" xml:space="preserve">
          <source>Do not put any spaces before and after the parenthesis used for filter and function calls:</source>
          <target state="translated">필터 및 함수 호출에 사용 된 괄호 앞뒤에 공백을 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="859bdc1b54392984bc364ffe503b536cb9710f3e" translate="yes" xml:space="preserve">
          <source>Dynamic Filters</source>
          <target state="translated">동적 필터</target>
        </trans-unit>
        <trans-unit id="a09e59843e185b728305864a15de2bcd038b41e9" translate="yes" xml:space="preserve">
          <source>Dynamic Inheritance</source>
          <target state="translated">동적 상속</target>
        </trans-unit>
        <trans-unit id="92642574d257034abe629dc675e85aade352df2c" translate="yes" xml:space="preserve">
          <source>Each function and filter documentation page has a section where the names of all arguments are listed when supported.</source>
          <target state="translated">각 함수 및 필터 설명서 페이지에는 지원 될 때 모든 인수의 이름이 나열되는 섹션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf019af769da2ee272a4a27166a4ba6773fa77a3" translate="yes" xml:space="preserve">
          <source>Each macro argument can have a default value (here &lt;code&gt;text&lt;/code&gt; is the default value for &lt;code&gt;type&lt;/code&gt; if not provided in the call).</source>
          <target state="translated">각 매크로 인수는 기본값을 가질 수 있습니다 (여기서 &lt;code&gt;text&lt;/code&gt; 는 호출에 제공되지 않은 경우 &lt;code&gt;type&lt;/code&gt; 의 기본값입니다 ).</target>
        </trans-unit>
        <trans-unit id="5ec3c773b895dade597b0e8ba5f5323cc3c86d20" translate="yes" xml:space="preserve">
          <source>Echoing the node object gives you a nice representation of the tree:</source>
          <target state="translated">노드 객체를 에코하면 트리를 멋지게 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98b5ec53a59036c75459467bcfa063b11065abb6" translate="yes" xml:space="preserve">
          <source>Embed the markup for the top/bottom and left/right boxes into each page template directly.</source>
          <target state="translated">상단 / 하단 및 왼쪽 / 오른쪽 상자의 마크 업을 각 페이지 템플릿에 직접 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="95e1752eccc38d5ee799e62cfff0d6c30ca5ac2d" translate="yes" xml:space="preserve">
          <source>Environment Options</source>
          <target state="translated">환경 옵션</target>
        </trans-unit>
        <trans-unit id="4135099ad3e0fd72e4307a01269675a7943c0945" translate="yes" xml:space="preserve">
          <source>Environment-aware Filters</source>
          <target state="translated">환경 인식 필터</target>
        </trans-unit>
        <trans-unit id="d4528d41a236473327873f18599a03820aa54049" translate="yes" xml:space="preserve">
          <source>Escaper Extension</source>
          <target state="translated">이스케이프 확장</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="2f64df555761fcd513351bd487c6cb34c6170a2e" translate="yes" xml:space="preserve">
          <source>Escaping is applied before printing, after any other filter is applied:</source>
          <target state="translated">이스케이프는 다른 필터를 적용한 후 인쇄하기 전에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ea4c96b7b87934975a46907d0a6763eba0657e46" translate="yes" xml:space="preserve">
          <source>Escaping the AngularJS delimiters by wrapping AngularJS sections with the &lt;code&gt;{% verbatim %}&lt;/code&gt; tag or by escaping each delimiter via &lt;code&gt;{{ '{{' }}&lt;/code&gt; and &lt;code&gt;{{ '}}' }}&lt;/code&gt;;</source>
          <target state="translated">AngularJS 섹션을 &lt;code&gt;{% verbatim %}&lt;/code&gt; 태그 로 래핑 하거나 &lt;code&gt;{{ '{{' }}&lt;/code&gt; 및 &lt;code&gt;{{ '}}' }}&lt;/code&gt; 통해 각 구분 기호를 이스케이프 처리하여 AngularJS 구분 기호를 이스케이프 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="4109704b90ce02d40973a45a504a9806c5827f0a" translate="yes" xml:space="preserve">
          <source>Escaping works by piping the variable through the &lt;a href=&quot;filters/escape&quot;&gt;escape&lt;/a&gt; or &lt;code&gt;e&lt;/code&gt; filter:</source>
          <target state="translated">이스케이프는 &lt;a href=&quot;filters/escape&quot;&gt;이스케이프&lt;/a&gt; 또는 &lt;code&gt;e&lt;/code&gt; 필터를 통해 변수를 파이핑하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a6621a08893aa9842ef986ff518de2ac16202603" translate="yes" xml:space="preserve">
          <source>Escaping works by using the &lt;a href=&quot;filters/escape&quot;&gt;escape&lt;/a&gt; or &lt;code&gt;e&lt;/code&gt; filter:</source>
          <target state="translated">이스케이프는 &lt;a href=&quot;filters/escape&quot;&gt;이스케이프&lt;/a&gt; 또는 &lt;code&gt;e&lt;/code&gt; 필터 를 사용하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="60697050c60f954e23935fccbfbe6531b3962e98" translate="yes" xml:space="preserve">
          <source>Even if you will probably always use the &lt;code&gt;template_from_string&lt;/code&gt; function with the &lt;code&gt;include&lt;/code&gt; function, you can use it with any tag or function that takes a template as an argument (like the &lt;code&gt;embed&lt;/code&gt; or &lt;code&gt;extends&lt;/code&gt; tags).</source>
          <target state="translated">당신은 아마 항상 사용하더라도 &lt;code&gt;template_from_string&lt;/code&gt; (가)와 기능을 &lt;code&gt;include&lt;/code&gt; 기능을, 당신은 (같은 인수로 템플릿을 취 어떤 태그 또는 기능을 사용할 수 있습니다 &lt;code&gt;embed&lt;/code&gt; 또는 &lt;code&gt;extends&lt;/code&gt; 태그).</target>
        </trans-unit>
        <trans-unit id="55b442ddfc10ca641575a0cace13c33adbc77bb0" translate="yes" xml:space="preserve">
          <source>Even when enabled, the &lt;code&gt;dump&lt;/code&gt; function won&amp;rsquo;t display anything if the &lt;code&gt;debug&lt;/code&gt; option on the environment is not enabled (to avoid leaking debug information on a production server).</source>
          <target state="translated">활성화 된 경우에도 환경 의 &lt;code&gt;debug&lt;/code&gt; 옵션이 활성화되지 않은 경우 &lt;code&gt;dump&lt;/code&gt; 기능이 아무 것도 표시 하지 않습니다 (프로덕션 서버에서 디버그 정보 유출 방지).</target>
        </trans-unit>
        <trans-unit id="a7edd162b60dd14999cf4e788e10ae0d17e0f0fb" translate="yes" xml:space="preserve">
          <source>Even when enabled, the &lt;code&gt;dump&lt;/code&gt; function won't display anything if the &lt;code&gt;debug&lt;/code&gt; option on the environment is not enabled (to avoid leaking debug information on a production server).</source>
          <target state="translated">활성화되어 있어도 프로덕션 환경에서 디버그 정보가 유출되지 않도록 환경 에서 &lt;code&gt;debug&lt;/code&gt; 옵션을 활성화 하지 않으면 &lt;code&gt;dump&lt;/code&gt; 기능에 아무 것도 표시 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1399855e39585fbfffca02adb295237939b20ed" translate="yes" xml:space="preserve">
          <source>Eventually, the &lt;em&gt;compiler&lt;/em&gt; transforms the AST into PHP code.</source>
          <target state="translated">결국 &lt;em&gt;컴파일러&lt;/em&gt; 는 AST를 PHP 코드로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="b6a57516215cf22f8b66da0db43560414fc20a0d" translate="yes" xml:space="preserve">
          <source>Expressions which the result is a literal or a variable marked safe are never automatically escaped:</source>
          <target state="translated">결과가 리터럴이거나 안전하다고 표시된 변수 인 표현식은 자동으로 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="16940240239ca65d46884627794c5f81839963a3" translate="yes" xml:space="preserve">
          <source>Expressions which the result is always a literal or a variable marked safe are never automatically escaped:</source>
          <target state="translated">결과가 항상 리터럴이거나 safe로 표시된 변수 인 표현식은 자동으로 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7964234568085623be599dd2d3496aaf2d0acb52" translate="yes" xml:space="preserve">
          <source>Extending Twig</source>
          <target state="translated">나뭇 가지를 연장</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="9ea10b18d2beb6235355dd68071716da6450e30e" translate="yes" xml:space="preserve">
          <source>Filter sections allow you to apply regular Twig filters on a block of template data. Just wrap the code in the special &lt;code&gt;filter&lt;/code&gt; section:</source>
          <target state="translated">필터 섹션에서는 템플릿 데이터 블록에 일반 나뭇 가지 필터를 적용 할 수 있습니다. 특수 &lt;code&gt;filter&lt;/code&gt; 섹션 에서 코드를 래핑 하십시오.</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="d98f8566899c8f80607289f118d9a710a1d52e0b" translate="yes" xml:space="preserve">
          <source>Filters that accept arguments have parentheses around the arguments. This example joins the elements of a list by commas:</source>
          <target state="translated">인수를 허용하는 필터는 인수를 괄호로 묶습니다. 이 예제는 목록의 요소를 쉼표로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="799374271dcfc303126933d2bada076ea844693f" translate="yes" xml:space="preserve">
          <source>Filters that accept arguments have parentheses around the arguments. This example will join a list by commas:</source>
          <target state="translated">인수를 허용하는 필터에는 인수 주위에 괄호가 있습니다. 이 예는 목록을 쉼표로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="5cd349b356a3bb03dc3bb82904949d1c0f6cb19c" translate="yes" xml:space="preserve">
          <source>Finally, here is an example on how you can use it:</source>
          <target state="translated">마지막으로 사용 방법에 대한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c942e282773ba641684d435881fe24a70e43111c" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;compiler&lt;/em&gt; transforms the AST into PHP code.</source>
          <target state="translated">마지막으로 &lt;em&gt;컴파일러&lt;/em&gt; 는 AST를 PHP 코드로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6384961a803b11bb83e55efe9feb56cce34ce8e5" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s create a temporary in-memory SQLite3 database to work with:</source>
          <target state="translated">먼저, 작업 할 임시 메모리 내 SQLite3 데이터베이스를 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4529581f9e01417597653686a60438a8befc4187" translate="yes" xml:space="preserve">
          <source>First, let's create a temporary in-memory SQLite3 database to work with:</source>
          <target state="translated">먼저 임시 메모리 내 SQLite3 데이터베이스를 만들어 다음과 같이 작업하겠습니다.</target>
        </trans-unit>
        <trans-unit id="ee292aefdda70ed92b3e6075b629adfda3afe738" translate="yes" xml:space="preserve">
          <source>First, remember that Twig has two main language constructs:</source>
          <target state="translated">먼저 Twig에는 두 가지 주요 언어 구성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff3c8bbfbea6b5841dbe5d64cf994f4003537dd" translate="yes" xml:space="preserve">
          <source>First, the &lt;strong&gt;lexer&lt;/strong&gt; tokenizes the template source code into small pieces for easier processing;</source>
          <target state="translated">우선, &lt;strong&gt;어휘 분석기&lt;/strong&gt; 는보다 쉬운 처리를 위해 템플릿 소스 코드를 작은 조각으로 토큰 화합니다.</target>
        </trans-unit>
        <trans-unit id="a2c0c18e56245083bca0a54db22916649a6e924b" translate="yes" xml:space="preserve">
          <source>Fixtures examples can be found within the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Fixtures&quot;&gt;tests/Twig/Fixtures&lt;/a&gt; directory.</source>
          <target state="translated">Fixtures 예제는 Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Fixtures&quot;&gt;tests / Twig / Fixtures&lt;/a&gt; 디렉토리 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f458d937b9659ceaf6084784c918dd5d5756c9f5" translate="yes" xml:space="preserve">
          <source>Fixtures examples can be found within the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Fixtures&quot;&gt;tests/Twig/Fixtures&lt;/a&gt; directory.</source>
          <target state="translated">Fixtures 예제는 Twig 저장소 &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Fixtures&quot;&gt;tests / Twig / Fixtures&lt;/a&gt; 디렉토리 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="225a2ef3c417130113dac554a2682a7011fd9350" translate="yes" xml:space="preserve">
          <source>For AngularJS, change the interpolation tags using the &lt;code&gt;interpolateProvider&lt;/code&gt; service, for instance at the module initialization time:</source>
          <target state="translated">AngularJS의 경우 모듈 초기화 시간과 같이 &lt;code&gt;interpolateProvider&lt;/code&gt; 서비스를 사용하여 보간 태그를 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="ccb5b3fea058adb3aef0ffcd2abc6270115cdab4" translate="yes" xml:space="preserve">
          <source>For Twig, change the delimiters via the &lt;code&gt;tag_variable&lt;/code&gt; Lexer option:</source>
          <target state="translated">Twig의 경우 &lt;code&gt;tag_variable&lt;/code&gt; Lexer 옵션을 통해 구분 기호를 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="b863c75c0f9a9178ae396e17f15f21d3daccc0a9" translate="yes" xml:space="preserve">
          <source>For bigger sections it makes sense to mark a block &lt;a href=&quot;tags/verbatim&quot;&gt;verbatim&lt;/a&gt;.</source>
          <target state="translated">더 큰 섹션의 경우 블록을 &lt;a href=&quot;tags/verbatim&quot;&gt;그대로&lt;/a&gt; 표시하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ca936664688c69cb3c0eb77880c3a6550215321b" translate="yes" xml:space="preserve">
          <source>For blocks with little content, it&amp;rsquo;s possible to use a shortcut syntax. The following constructs do the same thing:</source>
          <target state="translated">내용이 적은 블록의 경우 바로 가기 구문을 사용할 수 있습니다. 다음 구문은 동일한 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="11c38d1ed96e3e89a018e63af5b8cb4ff8b2fd0b" translate="yes" xml:space="preserve">
          <source>For blocks with little content, it's possible to use a shortcut syntax. The following constructs do the same thing:</source>
          <target state="translated">내용이 적은 블록의 경우 바로 가기 구문을 사용할 수 있습니다. 다음과 같은 구성이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b985650ed7d553e703986182e8d4fdc315209f29" translate="yes" xml:space="preserve">
          <source>For complex string comparisons, the &lt;code&gt;matches&lt;/code&gt; operator allows you to use &lt;a href=&quot;https://secure.php.net/manual/en/pcre.pattern.php&quot;&gt;regular expressions&lt;/a&gt;:</source>
          <target state="translated">복잡한 문자열 비교의 경우, &lt;code&gt;matches&lt;/code&gt; 연산자를 사용하면 &lt;a href=&quot;https://secure.php.net/manual/en/pcre.pattern.php&quot;&gt;정규식&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6e1d886bdccc571c72c37e65f5b73646c9e2a06" translate="yes" xml:space="preserve">
          <source>For convenience&amp;rsquo;s sake &lt;code&gt;foo.bar&lt;/code&gt; does the following things on the PHP layer:</source>
          <target state="translated">편의상 &lt;code&gt;foo.bar&lt;/code&gt; 는 PHP 계층에서 다음 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5ad460cf92922f20a5ee3885b1365dd4e6b40629" translate="yes" xml:space="preserve">
          <source>For convenience's sake &lt;code&gt;foo.bar&lt;/code&gt; does the following things on the PHP layer:</source>
          <target state="translated">편의상 &lt;code&gt;foo.bar&lt;/code&gt; 는 PHP 레이어에서 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="77d39edb7ffbcade3a337ec5fa10e41c0f743866" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;e&lt;/code&gt; filter is defined as an alias:</source>
          <target state="translated">편의상 &lt;code&gt;e&lt;/code&gt; 필터는 별명으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="99f127d620f201056066322b1fd124205a863f25" translate="yes" xml:space="preserve">
          <source>For example, to display a list of users provided in a variable called &lt;code&gt;users&lt;/code&gt;, use the &lt;a href=&quot;tags/for&quot;&gt;for&lt;/a&gt; tag:</source>
          <target state="translated">예를 들어, 변수라고 제공 사용자의 목록을 표시하는 &lt;code&gt;users&lt;/code&gt; 용도 &lt;a href=&quot;tags/for&quot;&gt;에 대한&lt;/a&gt; 태그 :</target>
        </trans-unit>
        <trans-unit id="4a83d7d6b58b115f9865b98a13d833d762f65ac0" translate="yes" xml:space="preserve">
          <source>For filters, register callbacks with &lt;code&gt;registerUndefinedFilterCallback()&lt;/code&gt;. For functions, use &lt;code&gt;registerUndefinedFunctionCallback()&lt;/code&gt;:</source>
          <target state="translated">필터의 경우 registerUndefinedFilterCallback &lt;code&gt;registerUndefinedFilterCallback()&lt;/code&gt; 콜백을 등록하십시오 . 함수의 경우 &lt;code&gt;registerUndefinedFunctionCallback()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0eacb302a145f136ded3b5f13a9f71583d8a8047" translate="yes" xml:space="preserve">
          <source>For greater flexiblity, you can even define your own pattern (see the &lt;a href=&quot;https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax&quot;&gt;ICU user guide&lt;/a&gt; for supported patterns).</source>
          <target state="translated">유연성을 높이기 위해 고유 한 패턴을 정의 할 수도 있습니다 ( 지원되는 패턴 은 &lt;a href=&quot;https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax&quot;&gt;ICU 사용 설명서&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c3a044680fcf002d4c4ca6d485a689a3b93b93e4" translate="yes" xml:space="preserve">
          <source>For hashes, the merging process occurs on the keys: if the key does not already exist, it is added but if the key already exists, its value is overridden.</source>
          <target state="translated">해시의 경우 병합 프로세스는 키에서 발생합니다. 키가 없으면 키가 추가되지만 키가 이미 있으면 해당 값이 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="10a0d976f073f47d3a96ec69721c9a7fd5bc49ac" translate="yes" xml:space="preserve">
          <source>For instance, if you want to create a tag that converts a Markdown formatted text to HTML, create a &lt;code&gt;markdown&lt;/code&gt; filter instead:</source>
          <target state="translated">예를 들어 마크 다운 형식의 텍스트를 HTML로 변환하는 태그를 만들려면 대신 &lt;code&gt;markdown&lt;/code&gt; 필터를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f236783b8a5f4e80fb04562a31ed26bb9c0ce532" translate="yes" xml:space="preserve">
          <source>For instance, if you want to create a tag that logs text, create a &lt;code&gt;log&lt;/code&gt; function instead and call it via the &lt;a href=&quot;tags/do&quot;&gt;do&lt;/a&gt; tag:</source>
          <target state="translated">예를 들어 텍스트를 기록하는 태그를 생성하려면 대신 &lt;code&gt;log&lt;/code&gt; 함수를 생성 하고 &lt;a href=&quot;tags/do&quot;&gt;do&lt;/a&gt; 태그 를 통해 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4a0ea4124fb537f4aa32e1a1bb44f6f2e65e163a" translate="yes" xml:space="preserve">
          <source>For instance, the &lt;code&gt;range&lt;/code&gt; function returns a list containing an arithmetic progression of integers:</source>
          <target state="translated">예를 들어, &lt;code&gt;range&lt;/code&gt; 함수는 정수의 산술 진행을 포함하는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="399f6a17cbccd7f3c3b6129fcd8a9099b916ad94" translate="yes" xml:space="preserve">
          <source>For instance, the following code:</source>
          <target state="translated">예를 들어 다음 코드는</target>
        </trans-unit>
        <trans-unit id="2d0efa7ed4b28d7267f9a039ac07646628d4f792" translate="yes" xml:space="preserve">
          <source>For large strings manipulation, use the &lt;code&gt;apply&lt;/code&gt; tag:</source>
          <target state="translated">큰 문자열 조작의 &lt;code&gt;apply&lt;/code&gt; 태그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4bc1ad9b4c9279d684b83c3f6470896fb1e2108" translate="yes" xml:space="preserve">
          <source>For more information on whitespace control, read the &lt;a href=&quot;../templates#templates-whitespace-control&quot;&gt;dedicated section&lt;/a&gt; of the documentation and learn how you can also use the whitespace control modifier on your tags.</source>
          <target state="translated">공백 제어에 대한 자세한 내용 은 설명서 의 &lt;a href=&quot;../templates#templates-whitespace-control&quot;&gt;전용 섹션&lt;/a&gt; 을 읽고 태그에서 공백 제어 수정자를 사용하는 방법을 배우십시오.</target>
        </trans-unit>
        <trans-unit id="42f22176cb9f08b67bb5d715a1ade54c538077b7" translate="yes" xml:space="preserve">
          <source>For multiple branches &lt;code&gt;elseif&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; can be used like in PHP. You can use more complex &lt;code&gt;expressions&lt;/code&gt; there too:</source>
          <target state="translated">여러 가지를 들어 &lt;code&gt;elseif&lt;/code&gt; 문 및 &lt;code&gt;else&lt;/code&gt; PHP에서처럼 사용할 수 있습니다. 더 복잡한 &lt;code&gt;expressions&lt;/code&gt; 도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da88edff7f7011a22060e83a26a200191c86a310" translate="yes" xml:space="preserve">
          <source>For multiple conditions, &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; can be used:</source>
          <target state="translated">여러 조건의 경우 &lt;code&gt;and&lt;/code&gt; / &lt;code&gt;or&lt;/code&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd02eaa57d14e5cf25af74ec2660a02d47dd4413" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface, &lt;code&gt;empty&lt;/code&gt; will check the return value of the &lt;code&gt;count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Countable&lt;/code&gt; 인터페이스 를 구현하는 객체의 경우 &lt;code&gt;empty&lt;/code&gt; 는 &lt;code&gt;count()&lt;/code&gt; 메서드 의 반환 값을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="92c71a41058f9d5ba0a127eee7360701feb144a2" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;Countable&lt;/code&gt; interface, &lt;code&gt;length&lt;/code&gt; will use the return value of the &lt;code&gt;count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Countable&lt;/code&gt; 인터페이스 를 구현하는 객체의 경우 &lt;code&gt;length&lt;/code&gt; 는 &lt;code&gt;count()&lt;/code&gt; 메서드 의 반환 값을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="9b532c7ad7e4cde77196b6561d2170cf1ddd8900" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;IteratorAggregate&lt;/code&gt; interface, &lt;code&gt;length&lt;/code&gt; will use the return value of the &lt;code&gt;iterator_count()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;IteratorAggregate&lt;/code&gt; 인터페이스 를 구현하는 객체의 경우 &lt;code&gt;length&lt;/code&gt; 는 &lt;code&gt;iterator_count()&lt;/code&gt; 메서드 의 반환 값을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="51d4918c314766f8ed9f7379f302728625cd859d" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;__toString()&lt;/code&gt; magic method (and not &lt;code&gt;Countable&lt;/code&gt;), it will check if an empty string is returned.</source>
          <target state="translated">&lt;code&gt;__toString()&lt;/code&gt; 매직 메서드 를 구현하고 &lt;code&gt;Countable&lt;/code&gt; 이 아닌 객체의 경우 빈 문자열이 반환되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6596e8998c16d51669cd74569a4cd3a9863cd0ff" translate="yes" xml:space="preserve">
          <source>For objects that implement the &lt;code&gt;__toString()&lt;/code&gt; magic method (and not &lt;code&gt;Countable&lt;/code&gt;), it will return the length of the string provided by that method.</source>
          <target state="translated">&lt;code&gt;__toString()&lt;/code&gt; 매직 메서드 ( &lt;code&gt;Countable&lt;/code&gt; 아님 ) 를 구현하는 객체 의 경우 해당 메서드에서 제공 한 문자열의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cfbc45ea8e894c24a6f0bf04da80c66fde4abc58" translate="yes" xml:space="preserve">
          <source>For sequences and mappings, numeric keys are not preserved. To reverse them as well, pass &lt;code&gt;true&lt;/code&gt; as an argument to the &lt;code&gt;reverse&lt;/code&gt; filter:</source>
          <target state="translated">시퀀스 및 매핑의 경우 숫자 키가 유지되지 않습니다. 그것들을 반대로하려면 , &lt;code&gt;reverse&lt;/code&gt; 필터에 인수로 &lt;code&gt;true&lt;/code&gt; 를 전달 하십시오 :</target>
        </trans-unit>
        <trans-unit id="47a92c562c2a2ff7ae46149812323c804d86303a" translate="yes" xml:space="preserve">
          <source>From PHP, it&amp;rsquo;s also possible to load a template stored in a string via &lt;code&gt;\Twig\Environment::createTemplate()&lt;/code&gt;:</source>
          <target state="translated">PHP에서는 &lt;code&gt;\Twig\Environment::createTemplate()&lt;/code&gt; 통해 문자열에 저장된 템플릿을로드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87f1c90681e23f5246f99ac4fbe5903d80b2a7c5" translate="yes" xml:space="preserve">
          <source>From PHP, it's also possible to load a template stored in a string via &lt;code&gt;Twig_Environment::createTemplate()&lt;/code&gt;:</source>
          <target state="translated">PHP에서 &lt;code&gt;Twig_Environment::createTemplate()&lt;/code&gt; 통해 문자열에 저장된 템플릿을로드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34a48677f4f35ffd8b3e0a61ceee7e3cd351710b" translate="yes" xml:space="preserve">
          <source>From a template, you can easily load a template stored in a string via the &lt;code&gt;template_from_string&lt;/code&gt; function (via the &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; extension):</source>
          <target state="translated">템플릿에서 &lt;code&gt;template_from_string&lt;/code&gt; 함수를 통해 ( &lt;code&gt;Twig_Extension_StringLoader&lt;/code&gt; 확장을 통해) 문자열에 저장된 템플릿을 쉽게로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="425a73da26abdafa9555c09abf59a03e72c454a0" translate="yes" xml:space="preserve">
          <source>From a template, you can load a template stored in a string via the &lt;code&gt;template_from_string&lt;/code&gt; function (via the &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; extension):</source>
          <target state="translated">템플릿에서 &lt;code&gt;template_from_string&lt;/code&gt; 함수 ( &lt;code&gt;\Twig\Extension\StringLoaderExtension&lt;/code&gt; 확장을 통해)를 통해 문자열에 저장된 템플릿을로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">기능 테스트</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="099ba5d46d6df85bfe3e60660754781dfa985114" translate="yes" xml:space="preserve">
          <source>Functions are defined in the exact same way as filters, but you need to create an instance of &lt;code&gt;Twig_Function&lt;/code&gt;:</source>
          <target state="translated">함수는 필터와 정확히 같은 방식으로 정의되지만 &lt;code&gt;Twig_Function&lt;/code&gt; 인스턴스를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5d31b84178f225e35975858ea63e419c5e590d6a" translate="yes" xml:space="preserve">
          <source>Functions are defined in the exact same way as filters, but you need to create an instance of &lt;code&gt;\Twig\TwigFunction&lt;/code&gt;:</source>
          <target state="translated">함수는 필터와 똑같은 방식으로 정의되지만 &lt;code&gt;\Twig\TwigFunction&lt;/code&gt; 의 인스턴스를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0824da2339605ae886359ab9acbfde0844e1a62b" translate="yes" xml:space="preserve">
          <source>Functions can be called to generate content. Functions are called by their name followed by parentheses (&lt;code&gt;()&lt;/code&gt;) and may have arguments.</source>
          <target state="translated">컨텐츠를 생성하기 위해 함수를 호출 할 수 있습니다. 함수는 이름과 괄호 ( &lt;code&gt;()&lt;/code&gt; ) 로 호출되며 인수가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b31d6aceaf53bed426201a6a7a6b2394f4ab59d1" translate="yes" xml:space="preserve">
          <source>Functions can be registered in an extension via the &lt;code&gt;getFunctions()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;getFunctions()&lt;/code&gt; 메소드 를 통해 확장에 함수를 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5508f385c620a7d7dd8a7266ee4911fb4a47082d" translate="yes" xml:space="preserve">
          <source>Functions returning template data (like &lt;a href=&quot;macro&quot;&gt;macros&lt;/a&gt; and &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt;) always return safe markup.</source>
          <target state="translated">&lt;a href=&quot;macro&quot;&gt;매크로&lt;/a&gt; 및 &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; 와 같은 템플릿 데이터를 반환하는 함수는 항상 안전한 마크 업을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93a657eb8ec28f46011330cca8182b513c636ba2" translate="yes" xml:space="preserve">
          <source>Functions support the same features as filters, except for the &lt;code&gt;pre_escape&lt;/code&gt; and &lt;code&gt;preserves_safety&lt;/code&gt; options.</source>
          <target state="translated">기능은 제외하고, 필터와 같은 기능을 지원 &lt;code&gt;pre_escape&lt;/code&gt; 및 &lt;code&gt;preserves_safety&lt;/code&gt; 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">글로벌 변수</target>
        </trans-unit>
        <trans-unit id="9d4bc0bc987de9636524d7da4c675ef8f0f47eac" translate="yes" xml:space="preserve">
          <source>Global variables can be registered in an extension via the &lt;code&gt;getGlobals()&lt;/code&gt; method:</source>
          <target state="translated">전역 변수는 &lt;code&gt;getGlobals()&lt;/code&gt; 메소드 를 통해 확장에 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f827c66e7e04723ed3fa1ab0945dff3f10b9b83" translate="yes" xml:space="preserve">
          <source>Globals</source>
          <target state="translated">Globals</target>
        </trans-unit>
        <trans-unit id="b343dc194be203c0bd103ca64fcd845a7a3f16d3" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;filters/index&quot;&gt;filters&lt;/a&gt; page to learn more about built-in filters.</source>
          <target state="translated">내장 필터에 대한 자세한 내용을 보려면 &lt;a href=&quot;filters/index&quot;&gt;필터&lt;/a&gt; 페이지로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="ccdb52d803e4402b8022dce86e44c59ba6f83b61" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;functions/index&quot;&gt;functions&lt;/a&gt; page to learn more about the built-in functions.</source>
          <target state="translated">내장 기능에 대한 자세한 내용을 보려면 &lt;a href=&quot;functions/index&quot;&gt;기능&lt;/a&gt; 페이지로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="ddc0361a2caee889a00ed6ce5b69051a5c3fde25" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;tags/index&quot;&gt;tags&lt;/a&gt; page to learn more about the built-in tags.</source>
          <target state="translated">내장 태그에 대한 자세한 내용을 보려면 &lt;a href=&quot;tags/index&quot;&gt;태그&lt;/a&gt; 페이지로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="1bf0a9906249c21eb4884e6ca9233b814356e0fa" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;tests/index&quot;&gt;tests&lt;/a&gt; page to learn more about the built-in tests.</source>
          <target state="translated">내장 테스트에 대한 자세한 내용을 보려면 &lt;a href=&quot;tests/index&quot;&gt;테스트&lt;/a&gt; 페이지로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="24612093a73d54eb6853f0fcb0bdb396d8b5d87d" translate="yes" xml:space="preserve">
          <source>HTML Escaping</source>
          <target state="translated">HTML 이스케이프</target>
        </trans-unit>
        <trans-unit id="5c93af1b41ff6e1fdc7f90079941d676aec8009d" translate="yes" xml:space="preserve">
          <source>Helper object</source>
          <target state="translated">헬퍼 객체</target>
        </trans-unit>
        <trans-unit id="3af2f5f95b4f2b1acf0ff9aaa2dc7755a9f92cbe" translate="yes" xml:space="preserve">
          <source>Here are some configuration example that simulates some other template engines syntax:</source>
          <target state="translated">다른 템플릿 엔진 구문을 시뮬레이트하는 구성 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5fb0b795174a34374ba6774b7f2f95ce57b12302" translate="yes" xml:space="preserve">
          <source>Here is a list of the built-in loaders Twig provides:</source>
          <target state="translated">Twig가 제공하는 내장 로더 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="053732e9017f5e11005b658e5c60c450f8ca0521" translate="yes" xml:space="preserve">
          <source>Here is a list of the built-in loaders:</source>
          <target state="translated">다음은 내장 로더 목록입니다.</target>
        </trans-unit>
        <trans-unit id="14f0acd2f36883130e4f7dc146c85c8bf3e075a2" translate="yes" xml:space="preserve">
          <source>Here is a small example of a macro that renders a form element:</source>
          <target state="translated">다음은 폼 요소를 렌더링하는 매크로의 작은 예입니다.</target>
        </trans-unit>
        <trans-unit id="dd701e1c823f01c43e6a693a1c3a57ee3e18f8a6" translate="yes" xml:space="preserve">
          <source>Here is how you can assign the &lt;code&gt;bar&lt;/code&gt; value to the &lt;code&gt;foo&lt;/code&gt; variable:</source>
          <target state="translated">&lt;code&gt;bar&lt;/code&gt; 값을 &lt;code&gt;foo&lt;/code&gt; 변수에 할당하는 방법은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="69edf9db3f16dbd6ad2d5a4214517d0359383a67" translate="yes" xml:space="preserve">
          <source>Here is the output for the &lt;code&gt;Hello {{ name }}&lt;/code&gt; template:</source>
          <target state="translated">다음은 &lt;code&gt;Hello {{ name }}&lt;/code&gt; 템플리트 의 출력입니다 .</target>
        </trans-unit>
        <trans-unit id="8a40885bc69090dd9c2fb3dce0e208a40f9d0dec" translate="yes" xml:space="preserve">
          <source>Here we go. For this specific example, the creation of a function is the extension point to use. And you can use it anywhere an expression is accepted:</source>
          <target state="translated">여기 있습니다 이 특정 예에서 함수 작성은 사용할 확장 점입니다. 그리고 표현식이 허용되는 곳이면 어디서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75a62b2bbefcbeb9b7dcf549759cd331a77f05b1" translate="yes" xml:space="preserve">
          <source>Here, we have overloaded the built-in &lt;code&gt;date&lt;/code&gt; filter with a custom one.</source>
          <target state="translated">여기서는 내장 &lt;code&gt;date&lt;/code&gt; 필터에 사용자 지정 필터를 오버로드했습니다 .</target>
        </trans-unit>
        <trans-unit id="01fcaab35f4daaa17192f10fc17d5113372142e1" translate="yes" xml:space="preserve">
          <source>Horizontal reuse is a way to achieve the same goal as multiple inheritance, but without the associated complexity:</source>
          <target state="translated">수평 재사용은 다중 상속과 동일한 목표를 달성하는 방법이지만 관련 복잡도는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5a8770fc8f04db7b93bc442a4f3439aff4a5086" translate="yes" xml:space="preserve">
          <source>Horizontal reuse is an advanced Twig feature that is hardly ever needed in regular templates. It is mainly used by projects that need to make template blocks reusable without using inheritance.</source>
          <target state="translated">가로 재사용은 일반 템플릿에서 거의 필요하지 않은 고급 나뭇 가지 기능입니다. 주로 상속을 사용하지 않고 템플릿 블록을 재사용 할 수있게해야하는 프로젝트에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="94e91fe754365a152716d74a76da574eb5bcb330" translate="yes" xml:space="preserve">
          <source>How do blocks work?</source>
          <target state="translated">블록은 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="d6709f6a536cf9e9375fd94d5932aa7239cf4f4f" translate="yes" xml:space="preserve">
          <source>How does Twig work?</source>
          <target state="translated">나뭇 가지는 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="0856fb43e7a0db78ee578f5a7a193daa428634e0" translate="yes" xml:space="preserve">
          <source>How often?</source>
          <target state="translated">얼마나 자주?</target>
        </trans-unit>
        <trans-unit id="c00aabb610a843e04d137962f83b5bdb0f2001e8" translate="yes" xml:space="preserve">
          <source>However, this code won&amp;rsquo;t find all deprecations (like using deprecated some Twig classes). To catch all notices, register a custom error handler like the one below:</source>
          <target state="translated">그러나이 코드는 사용되지 않는 일부 Twig 클래스를 사용하는 것과 같은 사용되지 않는 모든 기능을 찾지는 않습니다. 모든 알림을 확인하려면 아래와 같은 사용자 지정 오류 처리기를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="495717ac95d280ac3d46685e2cbf6f8246157ddc" translate="yes" xml:space="preserve">
          <source>However, this code won't find all deprecations (like using deprecated some Twig classes). To catch all notices, register a custom error handler like the one below:</source>
          <target state="translated">그러나이 코드는 (더 이상 사용되지 않는 일부 Twig 클래스를 사용하는 것과 같이) 더 이상 사용되지 않는 것을 찾지 않습니다. 모든 통지를 받으려면 아래와 같은 사용자 정의 오류 처리기를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="7ae66a27633d37484aef7b7f2ccc2defe6279eb1" translate="yes" xml:space="preserve">
          <source>However, this will not work as Twig will always load the template from &lt;code&gt;.../templates/mysite&lt;/code&gt;.</source>
          <target state="translated">그러나 Twig는 항상 &lt;code&gt;.../templates/mysite&lt;/code&gt; 에서 템플릿을로드하므로 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="14621b0619258cfafac55a7426846c43afd25f60" translate="yes" xml:space="preserve">
          <source>IDEs Integration</source>
          <target state="translated">IDE 통합</target>
        </trans-unit>
        <trans-unit id="44f654e04913eaa2a4671483612726fa96e95403" translate="yes" xml:space="preserve">
          <source>INF (Infinity)</source>
          <target state="translated">INF (무한대)</target>
        </trans-unit>
        <trans-unit id="02915466d5bc7de8498733d2aef6c0c8d886aae6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ignore missing&lt;/code&gt; is given, it will fall back to rendering nothing if none of the templates exist, otherwise it will throw an exception.</source>
          <target state="translated">경우 &lt;code&gt;ignore missing&lt;/code&gt; 주어, 그렇지 않으면 예외를 throw합니다, 템플릿의 어느 것도 존재하지 않는 경우 아무것도 렌더링하지 다시 떨어질 것이다.</target>
        </trans-unit>
        <trans-unit id="40e1523ee3fc08abda00b4fea6fd3fb7708406b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ignore_missing&lt;/code&gt; is set, it will fall back to rendering nothing if none of the templates exist, otherwise it will throw an exception.</source>
          <target state="translated">경우 &lt;code&gt;ignore_missing&lt;/code&gt; 가 설정되어, 그것은 그렇지 않으면 예외가 발생합니다, 템플릿의 어느 것도 존재하지 않는 경우 아무것도 렌더링하지 다시 떨어질 것이다.</target>
        </trans-unit>
        <trans-unit id="71d79d8a89b6b40a2f487b338f3d17f6e07513e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is negative, all components except the last -limit are returned;</source>
          <target state="translated">경우 &lt;code&gt;limit&lt;/code&gt; 음, 마지막 -limit를 제외한 모든 구성 요소가 반환됩니다;</target>
        </trans-unit>
        <trans-unit id="72c96a56a8ea178d0b41772e6e26a5ea94e6c9e4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is positive, the returned array will contain a maximum of limit elements with the last element containing the rest of string;</source>
          <target state="translated">경우 &lt;code&gt;limit&lt;/code&gt; 긍정적이고, 리턴 어레이 스트링의 나머지 부분을 포함하는 마지막 요소와 제한 요소의 최대를 포함 할 것이다;</target>
        </trans-unit>
        <trans-unit id="f91a9e003b2a6ce571cccdacc41fd8487ee3b45b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;limit&lt;/code&gt; is zero, then this is treated as 1.</source>
          <target state="translated">경우 &lt;code&gt;limit&lt;/code&gt; 제로인, 이것은 1로 처리된다.</target>
        </trans-unit>
        <trans-unit id="125458410e3b41bde5d593d4e3f8006456f20dd5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;var&lt;/code&gt; evaluates to &lt;code&gt;index&lt;/code&gt;, the &lt;code&gt;index_foo.html&lt;/code&gt; template will be rendered.</source>
          <target state="translated">경우 &lt;code&gt;var&lt;/code&gt; 평가 &lt;code&gt;index&lt;/code&gt; 는 &lt;code&gt;index_foo.html&lt;/code&gt; 템플릿 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="83090575960d1a3c44874b605102b8207c5a1f27" translate="yes" xml:space="preserve">
          <source>If a template defines blocks, they can be rendered individually via the &lt;code&gt;renderBlock()&lt;/code&gt; call:</source>
          <target state="translated">템플릿이 블록을 정의하면 &lt;code&gt;renderBlock()&lt;/code&gt; 호출을 통해 개별적으로 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd3ce215ac3aee385cdfb649a61a314bd6bc67e0" translate="yes" xml:space="preserve">
          <source>If a variable or attribute does not exist, you will receive a &lt;code&gt;null&lt;/code&gt; value when the &lt;code&gt;strict_variables&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;; alternatively, if &lt;code&gt;strict_variables&lt;/code&gt; is set, Twig will throw an error (see &lt;a href=&quot;api#environment-options&quot;&gt;environment options&lt;/a&gt;).</source>
          <target state="translated">변수 또는 속성이 존재하지 않으면 &lt;code&gt;strict_variables&lt;/code&gt; 옵션이 &lt;code&gt;false&lt;/code&gt; 로 설정 되면 &lt;code&gt;null&lt;/code&gt; 을 수신합니다 . 또는 &lt;code&gt;strict_variables&lt;/code&gt; 가 설정된 경우 Twig에서 오류가 발생합니다 ( &lt;a href=&quot;api#environment-options&quot;&gt;환경 옵션&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2c65708b7fe2597cb2e7d3639f90f6352e9734f3" translate="yes" xml:space="preserve">
          <source>If automatic escaping is enabled, the output of the filter may be escaped before printing. If your filter acts as an escaper (or explicitly outputs HTML or JavaScript code), you will want the raw output to be printed. In such a case, set the &lt;code&gt;is_safe&lt;/code&gt; option:</source>
          <target state="translated">자동 이스케이프가 활성화 된 경우 인쇄하기 전에 필터의 출력이 벗어날 수 있습니다. 필터가 이스케이프 역할을하거나 HTML 또는 JavaScript 코드를 명시 적으로 출력하는 경우 원시 출력을 인쇄해야합니다. 이러한 경우 &lt;code&gt;is_safe&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3380528f49168c9b0f5336fd0e4b3702939e243" translate="yes" xml:space="preserve">
          <source>If extra positional arguments are passed to a macro call, they end up in the special &lt;code&gt;varargs&lt;/code&gt; variable as a list of values.</source>
          <target state="translated">추가 위치 인수가 매크로 호출에 전달되면 특수 &lt;code&gt;varargs&lt;/code&gt; 변수에서 값 목록으로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="aaef7352ea4ceeef52d446b235cea3cf137d2954" translate="yes" xml:space="preserve">
          <source>If extra positional arguments are passed to a macro, they end up in the special &lt;code&gt;varargs&lt;/code&gt; variable as a list of values.</source>
          <target state="translated">추가 위치 인수가 매크로에 전달되면 특수 &lt;code&gt;varargs&lt;/code&gt; 변수에서 값 목록으로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="283b71b89029e7fd1deb1a026df4463d5e9b1ad5" translate="yes" xml:space="preserve">
          <source>If length is given and is positive, then the sequence will have up to that many elements in it. If the variable is shorter than the length, then only the available variable elements will be present. If length is given and is negative then the sequence will stop that many elements from the end of the variable. If it is omitted, then the sequence will have everything from offset up until the end of the variable.</source>
          <target state="translated">길이가 주어지고 양수이면 시퀀스는 그 안에 많은 요소를 갖습니다. 변수가 길이보다 짧으면 사용 가능한 변수 요소 만 나타납니다. 길이가 주어지고 음수이면 시퀀스는 변수의 끝에서 많은 요소를 중지합니다. 생략하면, 시퀀스는 오프셋부터 변수의 끝까지 모든 것을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="cadddc30a0145dfb93312d2dddef4941a30b78de" translate="yes" xml:space="preserve">
          <source>If macros are defined and used in the same template, you can use the special &lt;code&gt;_self&lt;/code&gt; variable to import them:</source>
          <target state="translated">매크로가 동일한 템플리트에서 정의되고 사용되는 경우 특수 &lt;code&gt;_self&lt;/code&gt; 변수를 사용하여 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cfe332936ad03aafce0cfe4e396b2e688e23385" translate="yes" xml:space="preserve">
          <source>If manual escaping is enabled, it is &lt;strong&gt;your&lt;/strong&gt; responsibility to escape variables if needed. What to escape? Any variable that comes from an untrusted source.</source>
          <target state="translated">수동 이스케이프가 활성화 된 경우 필요한 경우 변수를 이스케이프 하는 것은 &lt;strong&gt;사용자의&lt;/strong&gt; 책임입니다. 무엇을 탈출해야합니까? 신뢰할 수없는 소스에서 가져온 모든 변수입니다.</target>
        </trans-unit>
        <trans-unit id="cd8b1fccaabf9b52169080a7dd167e0b7dc9fad8" translate="yes" xml:space="preserve">
          <source>If manual escaping is enabled, it is &lt;strong&gt;your&lt;/strong&gt; responsibility to escape variables if needed. What to escape? Any variable you don't trust.</source>
          <target state="translated">수동 이스케이프 사용하는 경우, 그 것이다 &lt;strong&gt;당신의&lt;/strong&gt; 필요에 따라 변수를 탈출하는 책임. 탈출해야 할 것? 신뢰할 수없는 변수</target>
        </trans-unit>
        <trans-unit id="981dc93ab57bc83fbcffa86164f1a5ed31b06044" translate="yes" xml:space="preserve">
          <source>If no argument is passed, the function returns the current date:</source>
          <target state="translated">인수가 전달되지 않으면 함수는 현재 날짜를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a77050781fd13429ed40075c42fad3ce1ce3c6f0" translate="yes" xml:space="preserve">
          <source>If no format is provided, Twig will use the default one: &lt;code&gt;F j, Y H:i&lt;/code&gt;. This default can be changed by calling the &lt;code&gt;setDateFormat()&lt;/code&gt; method on the &lt;code&gt;core&lt;/code&gt; extension instance. The first argument is the default format for dates and the second one is the default format for date intervals:</source>
          <target state="translated">형식이 제공되지 않으면 Twig는 기본값 인 &lt;code&gt;F j, Y H:i&lt;/code&gt; 합니다. 이 기본값은 &lt;code&gt;core&lt;/code&gt; 확장 인스턴스 에서 &lt;code&gt;setDateFormat()&lt;/code&gt; 메서드를 호출하여 변경할 수 있습니다 . 첫 번째 인수는 날짜의 기본 형식이고 두 번째 인수는 날짜 간격의 기본 형식입니다.</target>
        </trans-unit>
        <trans-unit id="5b98716d7d00505a22cb3761673ab8a504b297e7" translate="yes" xml:space="preserve">
          <source>If no format is provided, Twig will use the default one: &lt;code&gt;F j, Y H:i&lt;/code&gt;. This default can be easily changed by calling the &lt;code&gt;setDateFormat()&lt;/code&gt; method on the &lt;code&gt;core&lt;/code&gt; extension instance. The first argument is the default format for dates and the second one is the default format for date intervals:</source>
          <target state="translated">형식이 제공되지 않으면 Twig는 기본 형식 인 &lt;code&gt;F j, Y H:i&lt;/code&gt; 합니다. &lt;code&gt;core&lt;/code&gt; 확장 인스턴스 에서 &lt;code&gt;setDateFormat()&lt;/code&gt; 메소드를 호출 하여이 기본값을 쉽게 변경할 수 있습니다 . 첫 번째 인수는 날짜의 기본 형식이고 두 번째 인수는 날짜 간격의 기본 형식입니다.</target>
        </trans-unit>
        <trans-unit id="c8b9cac8fa55f45cece3fdcb1c574834a54629ba" translate="yes" xml:space="preserve">
          <source>If no formatting options are provided then Twig will use the default formatting options of:</source>
          <target state="translated">서식 옵션이 제공되지 않으면 Twig는 다음과 같은 기본 서식 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="80e616990e4d6d5c2c47f0e9c50eb0f73f812f22" translate="yes" xml:space="preserve">
          <source>If no iteration took place because the sequence was empty, you can render a replacement block by using &lt;code&gt;else&lt;/code&gt;:</source>
          <target state="translated">시퀀스가 비어있어 반복이 수행되지 않은 경우 &lt;code&gt;else&lt;/code&gt; 를 사용하여 대체 블록을 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19f1b448d6eb97106538e78690ce9572389c5528" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, Twig will silently ignore invalid variables (variables and or attributes/methods that do not exist) and replace them with a &lt;code&gt;null&lt;/code&gt; value. When set to &lt;code&gt;true&lt;/code&gt;, Twig throws an exception instead (default to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 로 설정된 경우 Twig는 유효하지 않은 변수 (변수 및 / 또는 존재하지 않는 속성 / 방법)를 자동으로 무시하고 &lt;code&gt;null&lt;/code&gt; 대체합니다 . &lt;code&gt;true&lt;/code&gt; 로 설정되면 Twig는 대신 예외를 발생 시킵니다 (기본값은 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1ffc7170c90ce1e21dc444c1052165fe1ac21a18" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;html&lt;/code&gt;, all variables in templates are escaped (using the &lt;code&gt;html&lt;/code&gt; escaping strategy), except those using the &lt;code&gt;raw&lt;/code&gt; filter:</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; 로 설정 하면 &lt;code&gt;raw&lt;/code&gt; 필터를 사용하는 변수를 제외한 템플릿의 모든 변수가 이스케이프 처리됩니다 ( &lt;code&gt;html&lt;/code&gt; 이스케이프 전략 사용) .</target>
        </trans-unit>
        <trans-unit id="dc5bd388756b3ec79dbd8dab347bca097a4b243e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;delimiter&lt;/code&gt; is an empty string, then value will be split by equal chunks. Length is set by the &lt;code&gt;limit&lt;/code&gt; argument (one character by default).</source>
          <target state="translated">는 IF &lt;code&gt;delimiter&lt;/code&gt; 빈 문자열, 다음 값은 동일 덩어리로 분할됩니다. 길이는 &lt;code&gt;limit&lt;/code&gt; 인수에 의해 설정됩니다 (기본적으로 한 문자).</target>
        </trans-unit>
        <trans-unit id="d5b43a7fafd96e6c65b23b62316b452bc9d21d81" translate="yes" xml:space="preserve">
          <source>If the callable is not able to return a valid function (or filter), it must return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">호출 가능한 함수가 유효한 함수 (또는 필터)를 반환 할 수 없으면 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f580992476b0f175ded9807c92f6906ac9e232ce" translate="yes" xml:space="preserve">
          <source>If the date is already a DateTime object, and if you want to keep its current timezone, pass &lt;code&gt;false&lt;/code&gt; as the timezone value:</source>
          <target state="translated">날짜가 이미 DateTime 객체이고 현재 시간대를 유지 하려면 시간대 값으로 &lt;code&gt;false&lt;/code&gt; 를 전달 하십시오.</target>
        </trans-unit>
        <trans-unit id="763109bd3ec4e44b7c7a175e4e524ab5ce9cfc8f" translate="yes" xml:space="preserve">
          <source>If the start is non-negative, the sequence will start at that start in the variable. If start is negative, the sequence will start that far from the end of the variable.</source>
          <target state="translated">시작이 음수가 아닌 경우 순서는 변수의 시작에서 시작됩니다. 시작이 음수이면 시퀀스가 ​​변수의 끝에서부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="776bdde32eb152d71b763cd9e8f76e6527bc1922" translate="yes" xml:space="preserve">
          <source>If the value passed to the &lt;code&gt;date&lt;/code&gt; filter is &lt;code&gt;null&lt;/code&gt;, it will return the current date by default. If an empty string is desired instead of the current date, use a ternary operator:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; 필터에 전달 된 값 이 &lt;code&gt;null&lt;/code&gt; 인 경우 기본적으로 현재 날짜를 반환합니다. 현재 날짜 대신 빈 문자열이 필요한 경우 삼항 연산자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6364fb6ad82d380986be6e33eb15612efd9751ba" translate="yes" xml:space="preserve">
          <source>If the variable evaluates to a &lt;code&gt;Twig_Template&lt;/code&gt; or a &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; instance, Twig will use it as the parent template:</source>
          <target state="translated">변수가 &lt;code&gt;Twig_Template&lt;/code&gt; 또는 &lt;code&gt;Twig_TemplateWrapper&lt;/code&gt; 인스턴스로 평가 되면 Twig는 해당 변수를 상위 템플릿으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c23c0db8dbbace4aeca89bece1d675f88288f8dd" translate="yes" xml:space="preserve">
          <source>If the variable evaluates to a &lt;code&gt;\Twig\Template&lt;/code&gt; or a &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; instance, Twig will use it as the parent template:</source>
          <target state="translated">변수가 &lt;code&gt;\Twig\Template&lt;/code&gt; 또는 &lt;code&gt;\Twig\TemplateWrapper&lt;/code&gt; 인스턴스로 평가되면 Twig는이를 상위 템플릿으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="acbb3d306eac5cfa23ba5a5452ec55607530a4ce" translate="yes" xml:space="preserve">
          <source>If you are developing a CMS, templates are usually stored in a database. This recipe gives you a simple PDO template loader you can use as a starting point for your own.</source>
          <target state="translated">CMS를 개발하는 경우 템플릿은 일반적으로 데이터베이스에 저장됩니다. 이 레시피는 시작점으로 사용할 수있는 간단한 PDO 템플리트 로더를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fe3e0353290e1adfae0c5bf4bcabb224e978038e" translate="yes" xml:space="preserve">
          <source>If you are looking for new tags, filters, or functions, have a look at the Twig official &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;extension repository&lt;/a&gt;.</source>
          <target state="translated">새로운 태그, 필터 또는 함수를 찾고 있다면 Twig 공식 &lt;a href=&quot;https://github.com/twigphp/Twig-extensions&quot;&gt;확장 저장소를&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="c6679a006a7122b2e19b5dfd1f5675fbae4f78a7" translate="yes" xml:space="preserve">
          <source>If you are not using Symfony, you must also register the extension runtime:</source>
          <target state="translated">Symfony를 사용하지 않는 경우 확장 런타임도 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="2f984ac5fece17d54183fea76662f3ed3a2a5db9" translate="yes" xml:space="preserve">
          <source>If you are using the filesystem loader, the templates are looked for in the paths defined by it.</source>
          <target state="translated">파일 시스템 로더를 사용중인 경우, 템플리트가 정의한 경로에서 템플리트를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3630fac6fac3817c33b4afca4d3e502839b199f1" translate="yes" xml:space="preserve">
          <source>If you do need to iterate over a sequence of numbers, you can use the &lt;code&gt;..&lt;/code&gt; operator:</source>
          <target state="translated">일련의 숫자를 반복해야하는 경우 &lt;code&gt;..&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6a9be3cfbd3f5a407c0bebddedaae85e4aba4a8" translate="yes" xml:space="preserve">
          <source>If you do the same on the &lt;code&gt;Twig_Environment&lt;/code&gt; itself, beware that it takes precedence over any other registered extensions:</source>
          <target state="translated">&lt;code&gt;Twig_Environment&lt;/code&gt; 자체 에서 동일한 작업을 수행하는 경우 등록 된 다른 확장 프로그램보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="65a412a3dd837cb7081effcb46b16d2d5a1b4262" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass any value, all variables from the current context are dumped:</source>
          <target state="translated">값을 전달하지 않으면 현재 컨텍스트의 모든 변수가 덤프됩니다.</target>
        </trans-unit>
        <trans-unit id="57c87ce604c0227c8b1d1ac8c4b605f8328c3ee8" translate="yes" xml:space="preserve">
          <source>If you don't pass any value, all variables from the current context are dumped:</source>
          <target state="translated">값을 전달하지 않으면 현재 컨텍스트의 모든 변수가 덤프됩니다.</target>
        </trans-unit>
        <trans-unit id="5ea2dd5f3cf1cea30fa8929eaf91cca6f3dda631" translate="yes" xml:space="preserve">
          <source>If you enable automatic output escaping, Twig will only consider the content to be safe when capturing chunks of text.</source>
          <target state="translated">자동 출력 이스케이프를 활성화하면 Twig는 텍스트 청크를 캡처 할 때 내용 만 안전하다고 간주합니다.</target>
        </trans-unit>
        <trans-unit id="9b50172839954bc46cb0d41f334f3dbcb13ef00e" translate="yes" xml:space="preserve">
          <source>If you have any exposure to other text-based template languages, such as Smarty, Django, or Jinja, you should feel right at home with Twig. It's both designer and developer friendly by sticking to PHP's principles and adding functionality useful for templating environments.</source>
          <target state="translated">Smarty, Django 또는 Jinja와 같은 다른 텍스트 기반 템플릿 언어에 노출 된 경우 Twig를 사용하여 집에있는 것처럼 느껴집니다. PHP의 원칙을 고수하고 템플릿 환경에 유용한 기능을 추가하여 디자이너와 개발자에게 친숙합니다.</target>
        </trans-unit>
        <trans-unit id="d6e129bd0a50c98dfb9e4295e0775d1c794ae1db" translate="yes" xml:space="preserve">
          <source>If you iterate over a set of files, you can pass the filename to the &lt;code&gt;tokenize()&lt;/code&gt; method to get the filename in the exception message:</source>
          <target state="translated">파일 세트를 반복하는 경우 파일 이름을 &lt;code&gt;tokenize()&lt;/code&gt; 메서드에 전달하여 예외 메시지에서 파일 이름을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="991969d3f5904e056927cfbb875a45c2b7319022" translate="yes" xml:space="preserve">
          <source>If you register more than one callback, Twig will call them in turn until one does not return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">둘 이상의 콜백을 등록하면 Twig는 &lt;code&gt;false&lt;/code&gt; 를 반환하지 않을 때까지 차례로 콜백합니다 .</target>
        </trans-unit>
        <trans-unit id="ae8f00d028882b92a272a0808d7a8c8b39dfce79" translate="yes" xml:space="preserve">
          <source>If you render this template, the result would be exactly the same with or without the &lt;code&gt;block&lt;/code&gt; tag. The &lt;code&gt;block&lt;/code&gt; inside the &lt;code&gt;for&lt;/code&gt; loop is just a way to make it overridable by a child template:</source>
          <target state="translated">이 템플릿을 렌더링하면 &lt;code&gt;block&lt;/code&gt; 태그 유무에 관계없이 결과가 동일합니다 . &lt;code&gt;for&lt;/code&gt; 루프 내부 의 &lt;code&gt;block&lt;/code&gt; 은 자식 템플릿으로 재정의 할 수있는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c4624b25bb5311a7b2131c1614ec6734a5a4618f" translate="yes" xml:space="preserve">
          <source>If you still want to create a tag for a new language construct, great!</source>
          <target state="translated">여전히 새로운 언어 구조에 대한 태그를 만들고 싶다면 좋습니다!</target>
        </trans-unit>
        <trans-unit id="557ba85de404f2334ddf98824f5343df983772a0" translate="yes" xml:space="preserve">
          <source>If you want the output to be displayed conditionally, use the following instead:</source>
          <target state="translated">출력을 조건부로 표시하려면 대신 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d9676e911d28059a2275ef920bfb099a09f780bd" translate="yes" xml:space="preserve">
          <source>If you want to access a dynamic attribute of a variable, use the &lt;a href=&quot;functions/attribute&quot;&gt;attribute&lt;/a&gt; function instead.</source>
          <target state="translated">변수의 동적 속성에 액세스하려면 &lt;a href=&quot;functions/attribute&quot;&gt;속성&lt;/a&gt; 함수를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8d5e56c6caad2b5892f1b1571abba40236836b8" translate="yes" xml:space="preserve">
          <source>If you want to access the current context in your filter, set the &lt;code&gt;needs_context&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;; Twig will pass the current context as the first argument to the filter call (or the second one if &lt;code&gt;needs_environment&lt;/code&gt; is also set to &lt;code&gt;true&lt;/code&gt;):</source>
          <target state="translated">필터에서 현재 컨텍스트에 액세스하려면 &lt;code&gt;needs_context&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . Twig는 필터 호출에 대한 첫 번째 인수로 현재 컨텍스트를 전달합니다 (또는 &lt;code&gt;needs_environment&lt;/code&gt; 도 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 두 번째 인수 ).</target>
        </trans-unit>
        <trans-unit id="e3e2d240ca7cca8e7bbbd8f8afa99eed42699aa2" translate="yes" xml:space="preserve">
          <source>If you want to access the current environment instance in your filter, set the &lt;code&gt;needs_environment&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;; Twig will pass the current environment as the first argument to the filter call:</source>
          <target state="translated">필터에서 현재 환경 인스턴스에 액세스하려면 &lt;code&gt;needs_environment&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . Twig는 현재 환경을 필터 호출의 첫 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="931efc9fe805c7b7cd6d330854e73bae4a99adbe" translate="yes" xml:space="preserve">
          <source>If you want to access the variable, just declare it before the loop:</source>
          <target state="translated">변수에 액세스하려면 루프 전에 변수를 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="5349beb244608f52e286eb21d6c71afb6d913019" translate="yes" xml:space="preserve">
          <source>If you want to create a tag that actually removes all extra whitespace in an HTML string, be warned that this is not as easy as it seems to be (think of &lt;code&gt;textarea&lt;/code&gt; or &lt;code&gt;pre&lt;/code&gt; tags for instance). Using a third-party library like Tidy is probably a better idea.</source>
          <target state="translated">실제로 HTML 문자열에서 모든 추가 공백을 제거하는 태그를 만들려면 &lt;code&gt;textarea&lt;/code&gt; 이나 &lt;code&gt;pre&lt;/code&gt; 태그를 생각하는 것만 큼 쉽지 않다는 경고가 표시됩니다 . Tidy와 같은 타사 라이브러리를 사용하는 것이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f6fdb2da8b3011d5ced6e236d46458928119344e" translate="yes" xml:space="preserve">
          <source>If you want to create your own, read the &lt;a href=&quot;advanced#creating-extensions&quot;&gt;Creating an Extension&lt;/a&gt; chapter.</source>
          <target state="translated">직접 만들려면 &lt;a href=&quot;advanced#creating-extensions&quot;&gt;확장 만들기&lt;/a&gt; 장을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="555b358a8549cca465392fc40d5c9e7b69d117bd" translate="yes" xml:space="preserve">
          <source>If you want to ensure that some values are defined in an array (by given default values), reverse the two elements in the call:</source>
          <target state="translated">주어진 값에 따라 배열에 일부 값이 정의되도록하려면 호출에서 두 요소를 반대로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="3553e66838301ebc795d5de82ea3059415aeb214" translate="yes" xml:space="preserve">
          <source>If you want to manage the deprecation notices from your PHPUnit tests, have a look at the &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony/phpunit-bridge&lt;/a&gt; package, which eases the process a lot.</source>
          <target state="translated">PHPUnit 테스트에서 더 이상 사용되지 않는 알림을 관리하려면 &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony / phpunit-bridge&lt;/a&gt; 패키지를 살펴보면 프로세스가 훨씬 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="fc501dab360fa0d2910e4021a68f13af545ab7a4" translate="yes" xml:space="preserve">
          <source>If you want to manage the deprecation notices from your PHPUnit tests, have a look at the &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony/phpunit-bridge&lt;/a&gt; package, which eases the process.</source>
          <target state="translated">PHPUnit 테스트의 지원 중단 알림을 관리 하려면 프로세스를 용이하게하는 &lt;a href=&quot;https://github.com/symfony/phpunit-bridge&quot;&gt;symfony / phpunit-bridge&lt;/a&gt; 패키지를 살펴보세요 .</target>
        </trans-unit>
        <trans-unit id="61f66ba8e734d3a135979f8a45b22e542f91692c" translate="yes" xml:space="preserve">
          <source>If you want to optimize the size of the generated HTML content, gzip compress the output instead.</source>
          <target state="translated">생성 된 HTML 컨텐츠의 크기를 최적화하려면 gzip을 대신 압축하여 출력하십시오.</target>
        </trans-unit>
        <trans-unit id="8e8bb9402012c3e8b3d101c0a8899738b3e29a1e" translate="yes" xml:space="preserve">
          <source>If you want to pass a variable number of positional or named arguments to the test, set the &lt;code&gt;is_variadic&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Tests support dynamic names (see dynamic filters and functions for the syntax).</source>
          <target state="translated">가변 개수의 위치 또는 명명 된 인수를 테스트에 전달하려면 &lt;code&gt;is_variadic&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 테스트는 동적 이름을 지원합니다 (구문은 동적 필터 및 함수 참조).</target>
        </trans-unit>
        <trans-unit id="7a928c76a2f592c3b882eab48e4e6c5635ade3b5" translate="yes" xml:space="preserve">
          <source>If you want to pass a variable number of positional or named arguments to the test, set the &lt;code&gt;is_variadic&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Tests support dynamic names (see dynamic filters for the syntax).</source>
          <target state="translated">가변 개수의 위치 또는 명명 된 인수를 테스트에 전달하려면 &lt;code&gt;is_variadic&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 테스트는 동적 이름을 지원합니다 (구문은 동적 필터 참조).</target>
        </trans-unit>
        <trans-unit id="6697722e9ccb30c2e3ab2ec2abf4cce9ad7c1037" translate="yes" xml:space="preserve">
          <source>If you want to print a block multiple times you can however use the &lt;code&gt;block&lt;/code&gt; function:</source>
          <target state="translated">블록을 여러 번 인쇄하려면 &lt;code&gt;block&lt;/code&gt; 기능을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="208fd5f4bc9cd77ac6da611e4009c9bd76c7959f" translate="yes" xml:space="preserve">
          <source>If you want to test if the variable is defined, use &lt;code&gt;if users is
defined&lt;/code&gt; instead.</source>
          <target state="translated">변수가 정의되어 있는지 테스트 &lt;code&gt;if users is defined&lt;/code&gt; 대신 정의되어 있으면 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b137b4c232ffa6aef95b99b8fed1a72363344cfb" translate="yes" xml:space="preserve">
          <source>If you want use this filter on large amounts of text, wrap it with the &lt;a href=&quot;tags/apply&quot;&gt;apply&lt;/a&gt; tag:</source>
          <target state="translated">많은 양의 텍스트에이 필터를 사용하려면 &lt;a href=&quot;tags/apply&quot;&gt;적용&lt;/a&gt; 태그로 감싸십시오 .</target>
        </trans-unit>
        <trans-unit id="a10fcb3d859cd3186f7f1fbb89ad133ad7ab5ccd" translate="yes" xml:space="preserve">
          <source>If your tag does not output anything, but only exists because of a side effect, create a &lt;strong&gt;function&lt;/strong&gt; that returns nothing and call it via the &lt;a href=&quot;tags/do&quot;&gt;filter&lt;/a&gt; tag.</source>
          <target state="translated">태그가 아무것도 출력하지 않고 부작용 때문에 존재하는 경우 아무것도 반환하지 않는 &lt;strong&gt;함수&lt;/strong&gt; 를 만들고 &lt;a href=&quot;tags/do&quot;&gt;필터&lt;/a&gt; 태그 를 통해 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="47e1dfbeb939c058a4af9d14be4fd925eb6ce76a" translate="yes" xml:space="preserve">
          <source>If your tag generates some output, use a &lt;strong&gt;function&lt;/strong&gt; instead.</source>
          <target state="translated">태그가 일부 출력을 생성하는 경우 대신 &lt;strong&gt;함수를&lt;/strong&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="659b8279e92a52fb3b13497ca363100cfe8cdf72" translate="yes" xml:space="preserve">
          <source>If your tag modifies some content and returns it, use a &lt;strong&gt;filter&lt;/strong&gt; instead.</source>
          <target state="translated">태그가 일부 콘텐츠를 수정하고 반환하는 경우 대신 &lt;strong&gt;필터를&lt;/strong&gt; 사용하세요.</target>
        </trans-unit>
        <trans-unit id="9a6c5e917715b3899c6bb9c14576a0655ce4f732" translate="yes" xml:space="preserve">
          <source>If your templates are not stored on the filesystem, use the &lt;code&gt;collect()&lt;/code&gt; method instead. &lt;code&gt;collect()&lt;/code&gt; takes a &lt;code&gt;Traversable&lt;/code&gt; which must return template names as keys and template contents as values (as done by &lt;code&gt;Twig_Util_TemplateDirIterator&lt;/code&gt;).</source>
          <target state="translated">템플리트가 파일 시스템에 저장되지 않은 경우 &lt;code&gt;collect()&lt;/code&gt; 메소드를 대신 사용하십시오. &lt;code&gt;collect()&lt;/code&gt; 는 템플릿 이름을 키로, 템플릿 내용을 값으로 반환해야하는 &lt;code&gt;Traversable&lt;/code&gt; 을 사용합니다 ( &lt;code&gt;Twig_Util_TemplateDirIterator&lt;/code&gt; 에 의해 수행됨 ).</target>
        </trans-unit>
        <trans-unit id="bec61512ebc1f93ede3cd9d75fbd65d67707fc9b" translate="yes" xml:space="preserve">
          <source>If your templates are not stored on the filesystem, use the &lt;code&gt;collect()&lt;/code&gt; method instead. &lt;code&gt;collect()&lt;/code&gt; takes a &lt;code&gt;Traversable&lt;/code&gt; which must return template names as keys and template contents as values (as done by &lt;code&gt;\Twig\Util\TemplateDirIterator&lt;/code&gt;).</source>
          <target state="translated">템플릿이 파일 시스템에 저장되지 않은 경우 대신 &lt;code&gt;collect()&lt;/code&gt; 메소드를 사용하십시오. &lt;code&gt;collect()&lt;/code&gt; 는 템플릿 이름을 키로 반환하고 템플릿 내용을 값으로 반환해야하는 &lt;code&gt;Traversable&lt;/code&gt; 을 사용합니다 ( &lt;code&gt;\Twig\Util\TemplateDirIterator&lt;/code&gt; 수행 한 것처럼 ).</target>
        </trans-unit>
        <trans-unit id="7fc49e35d2108cbe2d2ebfaf2ba103b8512e1c04" translate="yes" xml:space="preserve">
          <source>Imagine having a generic helper template that define how to render HTML forms via macros (called &lt;code&gt;forms.html&lt;/code&gt;):</source>
          <target state="translated">매크로를 통해 HTML 양식을 렌더링하는 방법을 정의하는 일반 도우미 템플릿 ( &lt;code&gt;forms.html&lt;/code&gt; )이 있다고 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="f32be784a9fd750f505617b04b2e4df4592177d3" translate="yes" xml:space="preserve">
          <source>Imagine we have a helper module that renders forms (called &lt;code&gt;forms.html&lt;/code&gt;):</source>
          <target state="translated">양식을 렌더링하는 도우미 모듈 ( &lt;code&gt;forms.html&lt;/code&gt; )이 있다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="dbe590d57ea316a9ac7c8db3e10089fb2960ef01" translate="yes" xml:space="preserve">
          <source>Implementation difficulty?</source>
          <target state="translated">구현 어려움?</target>
        </trans-unit>
        <trans-unit id="d6fbc9d2bdd580e18ed0bc5805dc26db323d6f5f" translate="yes" xml:space="preserve">
          <source>Import</source>
          <target state="translated">Import</target>
        </trans-unit>
        <trans-unit id="f0ac04952c10af1b6c6cec7e2d0e50991456ca71" translate="yes" xml:space="preserve">
          <source>Imported macros are always &lt;strong&gt;local&lt;/strong&gt; to the current template. It means that macros are available in all blocks and other macros defined in the current template, but they are not available in included templates or child templates; you need to explicitly re-import macros in each template.</source>
          <target state="translated">가져온 매크로는 항상 현재 템플릿에 &lt;strong&gt;로컬&lt;/strong&gt; 입니다. 이는 현재 템플릿에 정의 된 모든 블록 및 기타 매크로에서 매크로를 사용할 수 있지만 포함 된 템플릿이나 하위 템플릿에서는 사용할 수 없음을 의미합니다. 각 템플릿에서 매크로를 명시 적으로 다시 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="5f946c4014e076b0c5984924af8d9249f3943877" translate="yes" xml:space="preserve">
          <source>Imported macros are not available in the body of &lt;code&gt;embed&lt;/code&gt; tags, you need to explicitly re-import macros inside the tag.</source>
          <target state="translated">가져온 매크로는 &lt;code&gt;embed&lt;/code&gt; 태그 본문에서 사용할 수 없습니다 . 태그 내에서 매크로를 명시 적으로 다시 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="d23b4cd6cf61e84e8fb1fffdcff8886611ae7fbf" translate="yes" xml:space="preserve">
          <source>Importing Macros</source>
          <target state="translated">매크로 가져 오기</target>
        </trans-unit>
        <trans-unit id="6a9e625370a9655dd8ee33e68eacc99478a76e91" translate="yes" xml:space="preserve">
          <source>In addition to the spaceless tag you can also control whitespace on a per tag level. By using the whitespace control modifier on your tags, you can trim leading and or trailing whitespace:</source>
          <target state="translated">공백없는 태그 외에도 태그 수준에서 공백을 제어 할 수 있습니다. 태그에서 공백 제어 수정자를 사용하면 선행 및 후행 공백을 트리밍 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fed2d4da289b2556399d4137859b8704e305e41" translate="yes" xml:space="preserve">
          <source>In addition to the whitespace modifiers, Twig also has a &lt;code&gt;spaceless&lt;/code&gt; filter that removes whitespace &lt;strong&gt;between HTML tags&lt;/strong&gt;:</source>
          <target state="translated">공백의 수정뿐만 아니라, 나뭇 가지도이 &lt;code&gt;spaceless&lt;/code&gt; 제거합니다 공백 것을 필터 &lt;strong&gt;HTML 태그 사이를&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="dd8952829248ab05284ea5168bbb8720baa2e61a" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;defined&lt;/code&gt; test can check for the existence of a dynamic attribute:</source>
          <target state="translated">또한 &lt;code&gt;defined&lt;/code&gt; 테스트는 동적 속성이 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39bb8e73e6f9e62161bf54076cf5b03a73e3607c" translate="yes" xml:space="preserve">
          <source>In an HTML context, wrap the output with a &lt;code&gt;pre&lt;/code&gt; tag to make it easier to read:</source>
          <target state="translated">HTML 컨텍스트에서 쉽게 읽을 수 있도록 출력을 &lt;code&gt;pre&lt;/code&gt; 태그로 감싸 십시오.</target>
        </trans-unit>
        <trans-unit id="66ee2404d68362ab3da2d53f2a28712e7ee5896b" translate="yes" xml:space="preserve">
          <source>In fact, you rarely need to create tags; and that&amp;rsquo;s good news because tags are the most complex extension point.</source>
          <target state="translated">실제로 태그를 생성 할 필요가 거의 없습니다. 태그는 가장 복잡한 확장 점이기 때문에 좋은 소식입니다.</target>
        </trans-unit>
        <trans-unit id="908d563cd3b942c5017ac5a60932077cd7caf1ce" translate="yes" xml:space="preserve">
          <source>In fact, you rarely need to create tags; and that's good news because tags are the most complex extension point of Twig.</source>
          <target state="translated">실제로 태그를 만들 필요는 거의 없습니다. 태그는 Twig의 가장 복잡한 확장 점이므로 좋은 소식입니다.</target>
        </trans-unit>
        <trans-unit id="7cc95a2045c293769a9e91d096ba4a538fc9570b" translate="yes" xml:space="preserve">
          <source>In such a situation, the &lt;code&gt;embed&lt;/code&gt; tag comes in handy. The common layout code can live in a single base template, and the two different content structures, let&amp;rsquo;s call them &amp;ldquo;micro layouts&amp;rdquo; go into separate templates which are embedded as necessary:</source>
          <target state="translated">이러한 상황에서는 &lt;code&gt;embed&lt;/code&gt; 태그가 유용합니다. 공통 레이아웃 코드는 단일 기본 템플릿에있을 수 있으며 두 개의 서로 다른 콘텐츠 구조를 &quot;마이크로 레이아웃&quot;이라고하며 필요에 따라 포함되는 별도의 템플릿으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8180188e82ddfd83e0bd99274423483f7ec9856c" translate="yes" xml:space="preserve">
          <source>In such a situation, the &lt;code&gt;embed&lt;/code&gt; tag comes in handy. The common layout code can live in a single base template, and the two different content structures, let's call them &quot;micro layouts&quot; go into separate templates which are embedded as necessary:</source>
          <target state="translated">이러한 상황에서는 &lt;code&gt;embed&lt;/code&gt; 태그가 유용합니다. 공통 레이아웃 코드는 단일 기본 템플릿에있을 수 있으며 두 개의 서로 다른 컨텐츠 구조를 &quot;마이크로 레이아웃&quot;이라고 부르고 필요에 따라 포함 된 별도의 템플릿으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="36c7d75266040e90099508a1e217df9592fe7b55" translate="yes" xml:space="preserve">
          <source>In the above code, we have added a single new tag, defined by the &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; class. The &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; class is responsible for parsing the tag and compiling it to PHP.</source>
          <target state="translated">위 코드에서 &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; 클래스에 의해 정의 된 하나의 새로운 태그를 추가했습니다 . &lt;code&gt;Project_Set_TokenParser&lt;/code&gt; 의 클래스는 태그를 분석하고 PHP로 컴파일 할 책임이있다.</target>
        </trans-unit>
        <trans-unit id="465899ed2ed898ed5e4c4b17b172e486d88e1edc" translate="yes" xml:space="preserve">
          <source>In the inner loop, the &lt;code&gt;loop.parent&lt;/code&gt; variable is used to access the outer context. So, the index of the current &lt;code&gt;topic&lt;/code&gt; defined in the outer for loop is accessible via the &lt;code&gt;loop.parent.loop.index&lt;/code&gt; variable.</source>
          <target state="translated">내부 루프에서 &lt;code&gt;loop.parent&lt;/code&gt; 변수는 외부 컨텍스트에 액세스하는 데 사용됩니다. 따라서 외부 for 루프에 정의 된 현재 &lt;code&gt;topic&lt;/code&gt; 의 색인은 &lt;code&gt;loop.parent.loop.index&lt;/code&gt; 변수 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3af3c7bb4b707246b0979219eaa2c4f59d7d4bf9" translate="yes" xml:space="preserve">
          <source>In the simplest form you can use it to test if an expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">가장 간단한 형태로 표현식이 &lt;code&gt;true&lt;/code&gt; 로 평가되는지 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd1bddc75c0900fe4ac0ccb2bb7c69e250b3c812" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;parent()&lt;/code&gt; will correctly call the &lt;code&gt;sidebar&lt;/code&gt; block from the &lt;code&gt;blocks.html&lt;/code&gt; template.</source>
          <target state="translated">이 예제에서 &lt;code&gt;parent()&lt;/code&gt; 는 &lt;code&gt;blocks.html&lt;/code&gt; 템플릿 에서 &lt;code&gt;sidebar&lt;/code&gt; 블록을 올바르게 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="981489d50bc34860e72f589bb39d5ad47a56581b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; tags define four blocks that child templates can fill in.</source>
          <target state="translated">이 예에서 &lt;a href=&quot;block&quot;&gt;블록&lt;/a&gt; 태그는 하위 템플릿이 채울 수있는 4 개의 블록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="311b1a5b2f5865ab6be5683acb6f5128bdf320ec" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;tags/block&quot;&gt;block&lt;/a&gt; tags define four blocks that child templates can fill in. All the &lt;code&gt;block&lt;/code&gt; tag does is to tell the template engine that a child template may override those portions of the template.</source>
          <target state="translated">이 예제에서 &lt;a href=&quot;tags/block&quot;&gt;블록&lt;/a&gt; 태그는 하위 템플릿이 채울 수있는 4 개의 블록을 정의합니다. 모든 &lt;code&gt;block&lt;/code&gt; 태그는 하위 템플릿이 템플릿의 해당 부분을 무시할 수 있음을 템플릿 엔진에 알리는 것입니다.</target>
        </trans-unit>
        <trans-unit id="707ab29c25fe20587428f1a61b60cbd4cda92345" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags won&amp;rsquo;t be removed from the string.</source>
          <target state="translated">이 예에서 &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; 태그는 문자열에서 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="159e47262a57705a495ccfdfe44c92b48d0e9289" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags won't be removed from the string.</source>
          <target state="translated">이 예에서 &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; 태그는 문자열에서 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a82a412de8d5a33c62340f8b2684dd02f0af610e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;use&lt;/code&gt; statement imports the &lt;code&gt;sidebar&lt;/code&gt; block into the main template. The code is mostly equivalent to the following one (the imported blocks are not outputted automatically):</source>
          <target state="translated">이 예에서 &lt;code&gt;use&lt;/code&gt; 문은 &lt;code&gt;sidebar&lt;/code&gt; 블록을 기본 템플리트로 가져옵니다 . 코드는 대부분 다음 코드와 동일합니다 (가져온 블록은 자동으로 출력되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="980bffcd10bd0a042da20bbafc7dd0a698071ffd" translate="yes" xml:space="preserve">
          <source>In this example, the template will extend the &quot;minimum.html&quot; layout template if the &lt;code&gt;standalone&lt;/code&gt; variable evaluates to &lt;code&gt;true&lt;/code&gt;, and &quot;base.html&quot; otherwise.</source>
          <target state="translated">이 예제에서 &lt;code&gt;standalone&lt;/code&gt; 변수가 &lt;code&gt;true&lt;/code&gt; 로 평가 되면 템플리트는 &quot;minimum.html&quot;레이아웃 템플리트를 확장하고 그렇지 않으면 &quot;base.html&quot;을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="fb7a15f7a1ecbb45ba659b431c71ef0536d48e06" translate="yes" xml:space="preserve">
          <source>In this example, the template will extend the &amp;ldquo;minimum.html&amp;rdquo; layout template if the &lt;code&gt;standalone&lt;/code&gt; variable evaluates to &lt;code&gt;true&lt;/code&gt;, and &amp;ldquo;base.html&amp;rdquo; otherwise.</source>
          <target state="translated">이 예에서 템플릿은 &lt;code&gt;standalone&lt;/code&gt; 변수가 &lt;code&gt;true&lt;/code&gt; 로 평가 되면 &quot;minimum.html&quot;레이아웃 템플릿을 확장하고 그렇지 않으면 &quot;base.html&quot;을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="9c72a0059b780364bca84ccdf4380863974e19a4" translate="yes" xml:space="preserve">
          <source>Included templates have access to the variables of the active context.</source>
          <target state="translated">포함 된 템플릿은 활성 컨텍스트의 변수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2da59be8085f79a33e81332a9b539d6207917436" translate="yes" xml:space="preserve">
          <source>Including other Templates</source>
          <target state="translated">다른 템플릿 포함</target>
        </trans-unit>
        <trans-unit id="eec07433cd724a3acdf1de54a99a9b54113c7ae9" translate="yes" xml:space="preserve">
          <source>Indent your code inside tags (use the same indentation as the one used for the target language of the rendered template):</source>
          <target state="translated">태그 안에 코드를 들여 쓰기하십시오 (렌더링 된 템플릿의 대상 언어에 사용 된 것과 동일한 들여 쓰기 사용).</target>
        </trans-unit>
        <trans-unit id="c8c4738ce44cf9c03eb8235abaaae13ef3ad41bf" translate="yes" xml:space="preserve">
          <source>Inside code blocks you can also assign values to variables. Assignments use the &lt;code&gt;set&lt;/code&gt; tag and can have multiple targets.</source>
          <target state="translated">내부 코드 블록은 변수에 값을 할당 할 수도 있습니다. 과제는 &lt;code&gt;set&lt;/code&gt; 사용 태그를 여러 대상을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66367dd2714df124b07f6a60e42daf59a102cb99" translate="yes" xml:space="preserve">
          <source>Inside of a &lt;code&gt;for&lt;/code&gt; loop block you can access some special variables:</source>
          <target state="translated">(A)의 내부 &lt;code&gt;for&lt;/code&gt; 루프 블록 특별한 변수에 접근 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d021f32066e1d162d4807369a92e503e42dd9386" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;Composer&lt;/a&gt; and run the following command to get the latest version:</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;Composer&lt;/a&gt; 설치 하고 다음 명령을 실행하여 최신 버전을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="a1ec4edbd514825eabcf3f42d5dcc9d5bbf903d8" translate="yes" xml:space="preserve">
          <source>Instead of defining variables at the beginning of the scope, you can pass a hash of variables you want to define in the &lt;code&gt;with&lt;/code&gt; tag; the previous example is equivalent to the following one:</source>
          <target state="translated">범위의 시작 부분에 변수를 정의하는 대신 &lt;code&gt;with&lt;/code&gt; 로 정의하려는 변수의 해시를 전달할 수 있습니다. 태그 . 위의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="13636e65321fd12c3003f0e74463e8dc2e906f6d" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;escape&lt;/code&gt; uses the PHP native &lt;a href=&quot;https://secure.php.net/htmlspecialchars&quot;&gt;htmlspecialchars&lt;/a&gt; function for the HTML escaping strategy.</source>
          <target state="translated">내부적으로 &lt;code&gt;escape&lt;/code&gt; 는 PHP 네이티브 &lt;a href=&quot;https://secure.php.net/htmlspecialchars&quot;&gt;htmlspecialchars를&lt;/a&gt; 사용합니다. HTML 이스케이프 전략에 함수를 .</target>
        </trans-unit>
        <trans-unit id="2839d7517d48ead9abb29e54f179a635d289b471" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/abs&quot;&gt;abs&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/abs&quot;&gt;abs를&lt;/a&gt; 사용합니다. 기능을 .</target>
        </trans-unit>
        <trans-unit id="3a256385484a5e54d8e2892e0684a46cfe162a57" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/array_column&quot;&gt;array_column&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/array_column&quot;&gt;array_column&lt;/a&gt; 함수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="999e1991e74a82497d5a93be16b843bfa74c429d" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/array_merge&quot;&gt;array_merge&lt;/a&gt; function. It supports Traversable objects by transforming those to arrays.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/array_merge&quot;&gt;array_merge&lt;/a&gt; 함수를 사용합니다 . Traversable 객체를 배열로 변환하여 지원합니다.</target>
        </trans-unit>
        <trans-unit id="45e217e625bdc2f66adaa6cad5e61a8e79836a19" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/asort&quot;&gt;asort&lt;/a&gt; function to maintain index association. It supports Traversable objects by transforming those to arrays.</source>
          <target state="translated">내부적 나뭇은 PHP의 사용 &lt;a href=&quot;https://secure.php.net/asort&quot;&gt;따라 asort의&lt;/a&gt; 지수 관계를 유지하는 기능을한다. Traversable 객체를 배열로 변환하여 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1f3576cbb1c9a2a4d0626742ef427fbc99e4c2b2" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/explode&quot;&gt;explode&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/str_split&quot;&gt;str_split&lt;/a&gt; (if delimiter is empty) functions for string splitting.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/explode&quot;&gt;explode&lt;/a&gt; 또는 &lt;a href=&quot;https://secure.php.net/str_split&quot;&gt;str_split을&lt;/a&gt; 사용합니다. 문자열 분할에 (구분자가 비어있는 경우) 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cfe95a226368e9873101aae5ad05e6c9e5073778" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/flush&quot;&gt;flush&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/flush&quot;&gt;flush를&lt;/a&gt; 사용합니다. 기능을 .</target>
        </trans-unit>
        <trans-unit id="a009c0ede20fc40a5c1a0c0321e74fdc0e587fdd" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/json_encode&quot;&gt;json_encode&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/json_encode&quot;&gt;json_encode를&lt;/a&gt; 사용합니다. 함수를 .</target>
        </trans-unit>
        <trans-unit id="a517bd02f4c8e1ed67bd64ee8800df8b7b2fa7cb" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/rawurlencode&quot;&gt;rawurlencode&lt;/a&gt; or the &lt;a href=&quot;https://secure.php.net/http_build_query&quot;&gt;http_build_query&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/rawurlencode&quot;&gt;rawurlencode&lt;/a&gt; 또는 &lt;a href=&quot;https://secure.php.net/http_build_query&quot;&gt;http_build_query&lt;/a&gt; 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="32e9b399aebaba99cad3cfd944a3b5c19fa43bb2" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/strip_tags&quot;&gt;strip_tags&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/strip_tags&quot;&gt;strip_tags를&lt;/a&gt; 사용합니다. 함수를 .</target>
        </trans-unit>
        <trans-unit id="1ed2a90a17e16014a5f81eed030947a88e3a5d3d" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/trim&quot;&gt;trim&lt;/a&gt;, &lt;a href=&quot;https://secure.php.net/ltrim&quot;&gt;ltrim&lt;/a&gt;, and &lt;a href=&quot;https://secure.php.net/rtrim&quot;&gt;rtrim&lt;/a&gt; functions.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/trim&quot;&gt;trim&lt;/a&gt; , &lt;a href=&quot;https://secure.php.net/ltrim&quot;&gt;ltrim&lt;/a&gt; 및 &lt;a href=&quot;https://secure.php.net/rtrim&quot;&gt;rtrim을 사용합니다.&lt;/a&gt; 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="953c0bab70e8b2b160858a258514b4dad8c08041" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;a href=&quot;https://secure.php.net/var_dump&quot;&gt;var_dump&lt;/a&gt; function.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;a href=&quot;https://secure.php.net/var_dump&quot;&gt;var_dump&lt;/a&gt; 함수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="1eec0c8bbb39fa158960757b8c9d6cea2ac491f8" translate="yes" xml:space="preserve">
          <source>Internally, Twig uses the PHP &lt;code&gt;rawurlencode&lt;/code&gt;.</source>
          <target state="translated">내부적으로 Twig는 PHP &lt;code&gt;rawurlencode&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="035609c9f68c6df67a38534f6f58542179ed547c" translate="yes" xml:space="preserve">
          <source>It also works if the property does not exist but is rather defined dynamically thanks to the magic &lt;code&gt;__get()&lt;/code&gt; method; you just need to also implement the &lt;code&gt;__isset()&lt;/code&gt; magic method like shown in the following snippet of code:</source>
          <target state="translated">속성이 존재하지 않지만 마술 &lt;code&gt;__get()&lt;/code&gt; 메소드로 인해 동적으로 정의 된 경우에도 작동합니다 . 다음 코드 스 니펫에 표시된 것처럼 &lt;code&gt;__isset()&lt;/code&gt; 매직 메소드 도 구현하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="758f7c9192c4f21e23d177ded6b70f4096d54a98" translate="yes" xml:space="preserve">
          <source>It also works if the property does not exist but is rather defined dynamically thanks to the magic &lt;code&gt;__get()&lt;/code&gt; method; you need to also implement the &lt;code&gt;__isset()&lt;/code&gt; magic method like shown in the following snippet of code:</source>
          <target state="translated">속성이 존재하지 않는 경우에도 작동하지만 매직 &lt;code&gt;__get()&lt;/code&gt; 메서드 덕분에 동적으로 정의됩니다 . 다음 코드 스 니펫과 같이 &lt;code&gt;__isset()&lt;/code&gt; 매직 메서드 도 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3073d1ad21404b047c88767f6b6ff41587ad667" translate="yes" xml:space="preserve">
          <source>It also works with mappings:</source>
          <target state="translated">또한 매핑과 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1c869afe5c305b0aa7fda9513f76282d1d48a4a1" translate="yes" xml:space="preserve">
          <source>It also works with objects implementing the &lt;a href=&quot;https://secure.php.net/Traversable&quot;&gt;Traversable&lt;/a&gt; interface.</source>
          <target state="translated">또한 &lt;a href=&quot;https://secure.php.net/Traversable&quot;&gt;Traversable&lt;/a&gt; 인터페이스를 구현하는 객체와 함께 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a4321564546fe93d632d7f92f99e22d71c2aacc5" translate="yes" xml:space="preserve">
          <source>It also works with objects implementing the &lt;a href=&quot;https://secure.php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; interface.</source>
          <target state="translated">또한 &lt;a href=&quot;https://secure.php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; 인터페이스를 구현하는 객체와 함께 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="29fe677cb865db79eefb4ef834bd6d89da8c06c3" translate="yes" xml:space="preserve">
          <source>It can also look for templates in an array of directories:</source>
          <target state="translated">또한 디렉토리 배열에서 템플릿을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dfe5bd84206702e7a1b0f38ba32364c4ec0edda" translate="yes" xml:space="preserve">
          <source>It can be also useful with letters:</source>
          <target state="translated">문자로도 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fb2c0e43b8be4a883eeb2055997be7897172948" translate="yes" xml:space="preserve">
          <source>It is now possible to move the runtime logic to a new &lt;code&gt;Project_Twig_RuntimeExtension&lt;/code&gt; class and use it directly in the extension:</source>
          <target state="translated">이제 런타임 로직을 새로운 &lt;code&gt;Project_Twig_RuntimeExtension&lt;/code&gt; 으로 옮길 수 있습니다 클래스 하여 확장에서 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68545c2a02ea8a8ff64fad2cf7905735ede1eb54" translate="yes" xml:space="preserve">
          <source>It is recommended to use the &lt;a href=&quot;../functions/include&quot;&gt;include&lt;/a&gt; function instead as it provides the same features with a bit more flexibility:</source>
          <target state="translated">약간 더 많은 유연성을 가진 동일한 기능을 제공하므로 대신 &lt;a href=&quot;../functions/include&quot;&gt;include&lt;/a&gt; 함수 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="46f741939632241afedefbcd39e83975826b2c68" translate="yes" xml:space="preserve">
          <source>It is sometimes desirable or even necessary to have Twig ignore parts it would otherwise handle as variables or blocks. For example if the default syntax is used and you want to use &lt;code&gt;{{&lt;/code&gt; as raw string in the template and not start a variable you have to use a trick.</source>
          <target state="translated">Twig가 변수 또는 블록으로 처리 할 부분을 무시하도록하는 것이 때때로 바람직하거나 필요할 수도 있습니다. 예를 들어 기본 구문이 사용되고 템플릿에서 &lt;code&gt;{{&lt;/code&gt; 를 원시 문자열로 사용하고 변수를 시작하지 않으려면 트릭을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="39e24ed8ecf68080b57fed7a858fc45b7d87a24b" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; if the left operand is contained in the right:</source>
          <target state="translated">왼쪽 피연산자가 오른쪽에 포함되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2f48f2e4e2d1732d610c58b5c55da874660d68a1" translate="yes" xml:space="preserve">
          <source>It turns out it is possible to get this to work, by adding a directory right at the end of your template directories, which is the parent of all of the other directories: &lt;code&gt;.../templates&lt;/code&gt; in our case. This has the effect of making every template file within our system uniquely addressable. Most of the time you will use the &quot;normal&quot; paths, but in the special case of wanting to extend a template with an overriding version of itself we can reference its parent's full, unambiguous template path in the extends tag:</source>
          <target state="translated">템플릿 디렉토리의 끝에 바로 다른 모든 디렉토리의 부모 디렉토리를 추가하면 이것이 작동하는 것이 가능합니다. &lt;code&gt;.../templates&lt;/code&gt; 우리의 경우 입니다. 이를 통해 시스템 내의 모든 템플릿 파일을 고유하게 주소 지정할 수 있습니다. 대부분의 경우 &quot;정상&quot;경로를 사용하지만 대체 버전 자체로 템플릿을 확장하려는 특수한 경우 extends 태그에서 상위의 전체, 모호하지 않은 템플릿 경로를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1355c3d3b50852a6fde28f0b252e8a98d4b7769" translate="yes" xml:space="preserve">
          <source>It turns out it is possible to get this to work, by adding a directory right at the end of your template directories, which is the parent of all of the other directories: &lt;code&gt;.../templates&lt;/code&gt; in our case. This has the effect of making every template file within our system uniquely addressable. Most of the time you will use the &amp;ldquo;normal&amp;rdquo; paths, but in the special case of wanting to extend a template with an overriding version of itself we can reference its parent&amp;rsquo;s full, unambiguous template path in the extends tag:</source>
          <target state="translated">다른 모든 디렉토리의 부모 인 템플릿 디렉토리 끝에 디렉토리를 추가하여이 작업을 수행 할 수 있습니다 . 우리의 경우 &lt;code&gt;.../templates&lt;/code&gt; . 이는 시스템 내의 모든 템플릿 파일을 고유하게 주소 지정하는 효과가 있습니다. 대부분의 경우 &quot;일반&quot;경로를 사용하지만, 자신의 재정의 버전으로 템플릿을 확장하려는 특별한 경우에는 extends 태그에서 부모의 모호하지 않은 전체 템플릿 경로를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a09eed10c1dbcd6087594a7fc212f0dee3536b7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easier to understand the concept by starting with an example.</source>
          <target state="translated">예제로 시작하면 개념을 이해하는 것이 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="3af4fd96eb23be6f68083ff003e624921c41d0ad" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to know that the curly braces are &lt;em&gt;not&lt;/em&gt; part of the variable but the print statement. When accessing variables inside tags, don&amp;rsquo;t put the braces around them.</source>
          <target state="translated">그것은 중괄호가 있다는 것을 알고하는 것이 중요 &lt;em&gt;하지&lt;/em&gt; 변수 만 인쇄 문의 일부입니다. 태그 내부의 변수에 액세스 할 때 그 주위에 중괄호를 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="623c7fecbc0de48cce22dbd05521382132938f5c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to render the contents of the parent block by using the &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; 함수 를 사용하여 부모 블록의 내용을 렌더링 할 수 있습니다. 이것은 부모 블록의 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="338334a61a937764d2a051dd4307598dafa150f1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to render the contents of the parent block by using the &lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt; 함수 를 사용하여 부모 블록의 내용을 렌더링 할 수 있습니다. 이것은 부모 블록의 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="465666602f25190ff7e422499feae3ee6e642a5f" translate="yes" xml:space="preserve">
          <source>It's important to know that the curly braces are &lt;em&gt;not&lt;/em&gt; part of the variable but the print statement. When accessing variables inside tags, don't put the braces around them.</source>
          <target state="translated">그것은 중괄호가 있다는 것을 알고하는 것이 중요 &lt;em&gt;하지&lt;/em&gt; 변수 만 인쇄 문의 일부입니다. 태그 내부의 변수에 액세스 할 때 괄호를 묶지 마십시오.</target>
        </trans-unit>
        <trans-unit id="564a685e46312016019ba06245ef8f71432def3b" translate="yes" xml:space="preserve">
          <source>It's possible to render the contents of the parent block by using the &lt;a href=&quot;../functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;../functions/parent&quot;&gt;부모&lt;/a&gt; 함수 를 사용하여 부모 블록의 내용을 렌더링 할 수 있습니다. 이것은 부모 블록의 결과를 돌려줍니다 :</target>
        </trans-unit>
        <trans-unit id="6483fc692ab94c7062d29856887e65592971b217" translate="yes" xml:space="preserve">
          <source>It's possible to render the contents of the parent block by using the &lt;a href=&quot;functions/parent&quot;&gt;parent&lt;/a&gt; function. This gives back the results of the parent block:</source>
          <target state="translated">&lt;a href=&quot;functions/parent&quot;&gt;부모&lt;/a&gt; 함수 를 사용하여 부모 블록의 내용을 렌더링 할 수 있습니다. 이것은 부모 블록의 결과를 돌려줍니다 :</target>
        </trans-unit>
        <trans-unit id="88aab1f28cfeaf19d17e8481897faebd0b8aa9fc" translate="yes" xml:space="preserve">
          <source>Iterating over Keys</source>
          <target state="translated">키 반복</target>
        </trans-unit>
        <trans-unit id="30135b5ab79216fdd0cdc73fd61c8627a8d3fda3" translate="yes" xml:space="preserve">
          <source>Iterating over Keys and Values</source>
          <target state="translated">키와 값에 대한 반복</target>
        </trans-unit>
        <trans-unit id="9b4ba7bff30a255adc5921d365a6b18df850e43d" translate="yes" xml:space="preserve">
          <source>Iterating over a Subset</source>
          <target state="translated">서브셋 반복</target>
        </trans-unit>
        <trans-unit id="8b67ec30cc37da2df4f99f8f15a0a8b089da1053" translate="yes" xml:space="preserve">
          <source>Keep in mind the following when you want to extend Twig:</source>
          <target state="translated">나뭇 가지를 확장 할 때 다음을 명심하십시오.</target>
        </trans-unit>
        <trans-unit id="f1fd171fa90105404ddd994a950730569b172bc3" translate="yes" xml:space="preserve">
          <source>Last but not the least, you can also use a &lt;em&gt;global&lt;/em&gt; object with a method able to generate lorem ipsum text:</source>
          <target state="translated">마지막으로 lorem ipsum 텍스트를 생성 할 수있는 메소드와 함께 &lt;em&gt;전역&lt;/em&gt; 객체를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0ef977fcdf38807b3d044c0172add68ffb5bd27" translate="yes" xml:space="preserve">
          <source>Lastly, you can also use a &lt;em&gt;global&lt;/em&gt; object with a method able to generate lorem ipsum text:</source>
          <target state="translated">마지막으로 lorem ipsum 텍스트를 생성 할 수있는 메서드와 함께 &lt;em&gt;전역&lt;/em&gt; 개체를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97596f5bd56ab0869aa4c872007aad037fd1e96e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a &lt;code&gt;set&lt;/code&gt; tag that allows the definition of simple variables from within a template. The tag can be used like follows:</source>
          <target state="translated">템플릿 내에서 간단한 변수를 정의 할 수 있는 &lt;code&gt;set&lt;/code&gt; 태그를 생성 해 보겠습니다 . 태그는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cebca85de999e1aac3b5bcf4b766cd1b5fd0b0f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document:</source>
          <target state="translated">간단한 HTML 스켈레톤 문서를 정의하는 기본 템플릿 &lt;code&gt;base.html&lt;/code&gt; 을 정의 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="b48fd7da674b71fa42b8cf6c6aa846f39814e375" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines an HTML skeleton document that might be used for a two-column page:</source>
          <target state="translated">2 열 페이지에 사용될 수있는 HTML 스켈레톤 문서를 정의하는 기본 템플릿 &lt;code&gt;base.html&lt;/code&gt; 을 정의 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="48078ba05442f9f14ce18cd86850785fce965180" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that your templates are loaded from both &lt;code&gt;.../templates/mysite&lt;/code&gt; and &lt;code&gt;.../templates/default&lt;/code&gt; in this order. The &lt;code&gt;page.twig&lt;/code&gt; template, stored in &lt;code&gt;.../templates/default&lt;/code&gt; reads as follows:</source>
          <target state="translated">템플릿이 &lt;code&gt;.../templates/mysite&lt;/code&gt; 및 &lt;code&gt;.../templates/default&lt;/code&gt; 에서이 순서대로 로드되었다고 가정 해 보겠습니다 . &lt;code&gt;page.twig&lt;/code&gt; 의 에 저장된 템플릿, &lt;code&gt;.../templates/default&lt;/code&gt; 다음과 같이 읽습니다</target>
        </trans-unit>
        <trans-unit id="9039ee00b9572df95e50759e8d6122ec4ac1300d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see some common use cases.</source>
          <target state="translated">몇 가지 일반적인 사용 사례를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="44a36919c2de62dc4caf18fd6af92e630c445085" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take another example: a block included within an &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">또 다른 예를 보겠습니다 : &lt;code&gt;if&lt;/code&gt; 문에 포함 된 블록 :</target>
        </trans-unit>
        <trans-unit id="9b4901ad77ca69d7205ff01955e0f371048090ef" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the following example to illustrate how a block works and more importantly, how it does not work:</source>
          <target state="translated">블록이 작동하는 방식과 더 중요한 것은 작동하지 않는 방식을 설명하기 위해 다음 예제를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="d9bb4fa3109d50c316f1fd5d20b878185c63c2aa" translate="yes" xml:space="preserve">
          <source>Let's create a simple &lt;code&gt;set&lt;/code&gt; tag that allows the definition of simple variables from within a template. The tag can be used like follows:</source>
          <target state="translated">템플릿 내에서 간단한 변수를 정의 할 수 있는 간단한 &lt;code&gt;set&lt;/code&gt; 태그를 만들어 봅시다 . 태그는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ef9153e1d5be3805903d14442ef1098653d6e1a" translate="yes" xml:space="preserve">
          <source>Let's define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document that you might use for a simple two-column page:</source>
          <target state="translated">간단한 2 열 페이지에 사용할 수있는 간단한 HTML 스켈레톤 문서를 정의하는 기본 템플릿 &lt;code&gt;base.html&lt;/code&gt; 을 정의 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="a038a401f3d56f0124ac2cb309512e9fd67163a1" translate="yes" xml:space="preserve">
          <source>Let's define a base template, &lt;code&gt;base.html&lt;/code&gt;, which defines a simple HTML skeleton document:</source>
          <target state="translated">간단한 HTML 스켈레톤 문서를 정의하는 기본 템플릿 &lt;code&gt;base.html&lt;/code&gt; 을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="1faa02b2ee6fc8641109fea8b253e1120c7192bb" translate="yes" xml:space="preserve">
          <source>Let's say that your templates are loaded from both &lt;code&gt;.../templates/mysite&lt;/code&gt; and &lt;code&gt;.../templates/default&lt;/code&gt; in this order. The &lt;code&gt;page.twig&lt;/code&gt; template, stored in &lt;code&gt;.../templates/default&lt;/code&gt; reads as follows:</source>
          <target state="translated">템플릿이 &lt;code&gt;.../templates/mysite&lt;/code&gt; 및 &lt;code&gt;.../templates/default&lt;/code&gt; 에서이 순서 로로드되었다고 가정하겠습니다 . &lt;code&gt;page.twig&lt;/code&gt; 의 에 저장된 템플릿, &lt;code&gt;.../templates/default&lt;/code&gt; 다음과 같이 읽습니다</target>
        </trans-unit>
        <trans-unit id="333107194d5daf3b519900f208c1a9379e402cd3" translate="yes" xml:space="preserve">
          <source>Let's take another example: a block included within an &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">또 다른 예를 들어 봅시다 : &lt;code&gt;if&lt;/code&gt; 문에 포함 된 블록 :</target>
        </trans-unit>
        <trans-unit id="ec98bf38f883c641c8e664139e952d295fc2cb10" translate="yes" xml:space="preserve">
          <source>Let's take the following example to illustrate how a block works and more importantly, how it does not work:</source>
          <target state="translated">다음 예제를 통해 블록의 작동 방식과보다 중요한 블록의 작동 방식을 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="b8784441607e9ae1e4a0d363f27f45028b927794" translate="yes" xml:space="preserve">
          <source>Licensed under the three clause BSD license.</source>
          <target state="translated">세 개의 BSD 라이센스 조항에 따라 라이센스가 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="fa12dc09485c5f2d9273691d047d5a5d083f91cb" translate="yes" xml:space="preserve">
          <source>Like PHP, Twig does not support multiple inheritance. So you can only have one extends tag called per rendering. However, Twig supports horizontal &lt;a href=&quot;use&quot;&gt;reuse&lt;/a&gt;.</source>
          <target state="translated">PHP와 마찬가지로 Twig는 다중 상속을 지원하지 않습니다. 따라서 렌더링 당 하나의 확장 태그 만 가질 수 있습니다. 그러나 Twig는 수평 &lt;a href=&quot;use&quot;&gt;재사용을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="0ac5f6d59a1e5dc8d44114ce7725375609e9f673" translate="yes" xml:space="preserve">
          <source>Literals (integers, booleans, arrays, &amp;hellip;) used in the template directly as variables or filter arguments are never automatically escaped:</source>
          <target state="translated">템플릿에서 변수 또는 필터 인수로 직접 사용되는 리터럴 (정수, 부울, 배열 등)은 자동으로 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3b440ddb3e952021e0417ff7287e7b8bd1d45e8" translate="yes" xml:space="preserve">
          <source>Literals (integers, booleans, arrays, ...) used in the template directly as variables or filter arguments are never automatically escaped:</source>
          <target state="translated">템플릿에서 변수 또는 필터 인수로 직접 사용되는 리터럴 (정수, 부울, 배열 등)은 자동으로 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="48f0cdc3426bfa68eed3cb4d620c27f8e48479b2" translate="yes" xml:space="preserve">
          <source>Loaders are responsible for loading templates from a resource such as the file system.</source>
          <target state="translated">로더는 파일 시스템과 같은 자원에서 템플리트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="87d6939af2d932b9a52ec9597a5839df8c4d0ecc" translate="yes" xml:space="preserve">
          <source>Loading a Template from a String</source>
          <target state="translated">문자열에서 템플릿로드</target>
        </trans-unit>
        <trans-unit id="3d52a6d8fedcc48a65297c07bf5f7e3e41aab5aa" translate="yes" xml:space="preserve">
          <source>Logic</source>
          <target state="translated">Logic</target>
        </trans-unit>
        <trans-unit id="fee5a14356621b73ac22c3c0edad01021765caac" translate="yes" xml:space="preserve">
          <source>Loop over each item in a sequence. For example, to display a list of users provided in a variable called &lt;code&gt;users&lt;/code&gt;:</source>
          <target state="translated">각 항목을 순서대로 반복합니다. 예를 들어, 변수라고에서 제공하는 사용자의 목록이 표시 &lt;code&gt;users&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="f8caaab99e30597a08e2e4af3b233a36b556425e" translate="yes" xml:space="preserve">
          <source>Macros Scoping</source>
          <target state="translated">매크로 범위 지정</target>
        </trans-unit>
        <trans-unit id="002af17d5caf610dc2fe3503ceaccf6cc059a743" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to put often used HTML idioms into reusable elements to not repeat yourself.</source>
          <target state="translated">매크로는 일반 프로그래밍 언어의 기능과 비교할 수 있습니다. 자주 사용되는 HTML 관용구를 재사용 가능한 요소에 넣어서 반복하지 않도록하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="345965812bba350396cd2f6dce74dcae3cc671d6" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse HTML fragments to not repeat yourself. They are described in the &lt;a href=&quot;tags/macro&quot;&gt;macro&lt;/a&gt; tag documentation.</source>
          <target state="translated">매크로는 일반 프로그래밍 언어의 함수와 비슷합니다. 반복하지 않기 위해 HTML 조각을 재사용하는 데 유용합니다. &lt;a href=&quot;tags/macro&quot;&gt;매크로&lt;/a&gt; 태그 문서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb7fcb852103ed0a63a181a772614b4571a71011" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse often used HTML fragments to not repeat yourself.</source>
          <target state="translated">매크로는 일반 프로그래밍 언어의 기능과 비교할 수 있습니다. 자주 사용하는 HTML 조각을 재사용하여 자신을 반복하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d0c92cc858836450dea55d8030e7b4b3a1cdef5d" translate="yes" xml:space="preserve">
          <source>Macros are comparable with functions in regular programming languages. They are useful to reuse template fragments to not repeat yourself.</source>
          <target state="translated">매크로는 일반 프로그래밍 언어의 함수와 비슷합니다. 반복하지 않기 위해 템플릿 조각을 재사용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b024e54c9fcc0397c80e78ceb540e09e3c70de07" translate="yes" xml:space="preserve">
          <source>Macros are defined in regular templates.</source>
          <target state="translated">매크로는 일반 템플릿에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="52e0d1ecb820a6b4a6718778558b574290158f29" translate="yes" xml:space="preserve">
          <source>Macros can be defined in any template, and need to be &quot;imported&quot; before being used (see the documentation for the &lt;a href=&quot;import&quot;&gt;import&lt;/a&gt; tag for more information):</source>
          <target state="translated">매크로는 모든 템플릿에서 정의 할 수 있으며 사용하기 전에 &quot;가져 오기&quot;가 필요합니다 ( 자세한 내용 은 &lt;a href=&quot;import&quot;&gt;가져 오기&lt;/a&gt; 태그 설명서 를 참조하십시오).</target>
        </trans-unit>
        <trans-unit id="2f3085e663536adf3e5dbb75d79b0e921e111391" translate="yes" xml:space="preserve">
          <source>Macros can be defined in any template, and need to be &quot;imported&quot; via the &lt;a href=&quot;tags/import&quot;&gt;import&lt;/a&gt; tag before being used:</source>
          <target state="translated">매크로는 모든 템플릿에서 정의 할 수 있으며 사용하기 전에 &lt;a href=&quot;tags/import&quot;&gt;가져 오기&lt;/a&gt; 태그 를 통해 &quot;가져 오기 &quot;가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="4ef6d6a58054ae9889caea03f0dbfb4a83c2fb2a" translate="yes" xml:space="preserve">
          <source>Macros differ from native PHP functions in a few ways:</source>
          <target state="translated">매크로는 몇 가지면에서 네이티브 PHP 함수와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="305e5fae1f0f54206b1804a471337b9a97a4e417" translate="yes" xml:space="preserve">
          <source>Making a Layout conditional</source>
          <target state="translated">레이아웃을 조건부로 만들기</target>
        </trans-unit>
        <trans-unit id="4fc17e09652fcc579a87a75286e97481eb20bfc9" translate="yes" xml:space="preserve">
          <source>Making an Include dynamic</source>
          <target state="translated">포함 동적 만들기</target>
        </trans-unit>
        <trans-unit id="af62f3eceb714a029d9896c6bcb26ce781a27a63" translate="yes" xml:space="preserve">
          <source>Many IDEs support syntax highlighting and auto-completion for Twig:</source>
          <target state="translated">많은 IDE는 Twig에 대한 구문 강조 및 자동 완성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="cd70332627f6e0032f42e790234355b73b9a84e5" translate="yes" xml:space="preserve">
          <source>Mixing different template syntaxes in the same file is not a recommended practice as both AngularJS and Twig use the same delimiters in their syntax: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">AngularJS와 Twig는 &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt; 구문에서 동일한 구분 기호를 사용하므로 동일한 파일에서 다른 템플리트 구문을 혼합하는 것은 권장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="33ff9c9387af83205c35a7ca62391c9b62e1a11e" translate="yes" xml:space="preserve">
          <source>Most applications create one &lt;code&gt;\Twig\Environment&lt;/code&gt; object on application initialization and use that to load templates. In some cases, it might be useful to have multiple environments side by side, with different configurations.</source>
          <target state="translated">대부분의 응용 프로그램 은 응용 프로그램 초기화시 하나의 &lt;code&gt;\Twig\Environment&lt;/code&gt; 개체를 만들고이를 사용하여 템플릿을로드합니다. 경우에 따라 구성이 다른 여러 환경을 나란히 두는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f37760e852ee7ed1460834e80e17486cdd06c339" translate="yes" xml:space="preserve">
          <source>Most applications will create one &lt;code&gt;Twig_Environment&lt;/code&gt; object on application initialization and use that to load templates. In some cases it's however useful to have multiple environments side by side, if different configurations are in use.</source>
          <target state="translated">대부분의 응용 프로그램은 응용 프로그램 초기화시 하나의 &lt;code&gt;Twig_Environment&lt;/code&gt; 개체를 만들고 이를 사용하여 템플릿을로드합니다. 그러나 다른 구성을 사용하는 경우 여러 환경을 나란히 배치하는 것이 유용한 경우도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e305f2a16de2214e5f2cff86169dbb556e981d7e" translate="yes" xml:space="preserve">
          <source>Most of the time though, a tag is not needed:</source>
          <target state="translated">하지만 대부분의 경우 태그가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="328e34d1f3a0c785552d31ae2b230de470afe978" translate="yes" xml:space="preserve">
          <source>Most of the time, it is useful to create a single extension for your project, to host all the specific tags and filters you want to add to Twig.</source>
          <target state="translated">대부분의 경우 Twig에 추가하려는 모든 특정 태그 및 필터를 호스트하기 위해 프로젝트에 대한 단일 확장을 작성하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eeb9ce0839ae0c4cad962e6ecb2bcbfe2346e1f2" translate="yes" xml:space="preserve">
          <source>NAN (Not A Number)</source>
          <target state="translated">NAN (숫자가 아님)</target>
        </trans-unit>
        <trans-unit id="80a1546459fb296b75e903b673f8cc0ad0b7638a" translate="yes" xml:space="preserve">
          <source>Named Arguments</source>
          <target state="translated">명명 된 인수</target>
        </trans-unit>
        <trans-unit id="a54f2ccb779f481bea3312bbe38f4dd24beb2f09" translate="yes" xml:space="preserve">
          <source>Named Block End-Tags</source>
          <target state="translated">명명 된 블록 엔드 태그</target>
        </trans-unit>
        <trans-unit id="e06508babc518d97db27083de76cf1b0e86dcfa8" translate="yes" xml:space="preserve">
          <source>Named Macro End-Tags</source>
          <target state="translated">명명 된 매크로 엔드 태그</target>
        </trans-unit>
        <trans-unit id="68367e0b2bbb96ca817eea40abd93ed8bf55fa49" translate="yes" xml:space="preserve">
          <source>Named arguments also allow you to skip some arguments for which you don&amp;rsquo;t want to change the default value:</source>
          <target state="translated">명명 된 인수를 사용하면 기본값을 변경하지 않으려는 일부 인수를 건너 뛸 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="187cef2cee2780f4a1eca642920058ef8eafcfb4" translate="yes" xml:space="preserve">
          <source>Named arguments also allow you to skip some arguments for which you don't want to change the default value:</source>
          <target state="translated">명명 된 인수를 사용하면 기본값을 변경하지 않으려는 일부 인수를 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a86840aee549bc01286a0a18b1982b1f76850fdf" translate="yes" xml:space="preserve">
          <source>Namespaced templates can be accessed via the special &lt;code&gt;@namespace_name/template_path&lt;/code&gt; notation:</source>
          <target state="translated">네임 스페이스 템플릿은 특수 &lt;code&gt;@namespace_name/template_path&lt;/code&gt; 표기법을 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="457ee342743936defa5e5ae0636ab32d2fd99406" translate="yes" xml:space="preserve">
          <source>New in version 1.36: and 2.6 The &lt;code&gt;deprecated&lt;/code&gt; tag was added in Twig 1.36 and 2.6.</source>
          <target state="translated">버전 1.36의 새로운 기능 : 및 2.6 &lt;code&gt;deprecated&lt;/code&gt; 태그가 Twig 1.36 및 2.6에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="8912da4bf3693faeaf8d5d2e36ccc5d265e80238" translate="yes" xml:space="preserve">
          <source>New in version 2.3: Support for the &lt;code&gt;__toString()&lt;/code&gt; magic method has been added in Twig 2.3.</source>
          <target state="translated">버전 2.3의 새로운 기능 : Twig 2.3에 &lt;code&gt;__toString()&lt;/code&gt; 매직 메서드에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f1edc0de5f7eb7f187ea75980322df188858822d" translate="yes" xml:space="preserve">
          <source>New in version 2.6: Dynamic tests support was added in Twig 2.6.</source>
          <target state="translated">버전 2.6의 새로운 기능 : 동적 테스트 지원이 Twig 2.6에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="69e1fd5edf585130a67594beaafb52be08ebcc44" translate="yes" xml:space="preserve">
          <source>New values are added at the end of the existing ones.</source>
          <target state="translated">기존 값 끝에 새 값이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b05723cd3f80d9b4f408aa1de856db7eeb01c580" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;function&lt;/em&gt;:</source>
          <target state="translated">다음으로 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;함수를&lt;/em&gt; 사용하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="4bda3d2e0b5297dbbf3c08e9c01e6dcb02e257c0" translate="yes" xml:space="preserve">
          <source>Next, let's use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;function&lt;/em&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;함수를&lt;/em&gt; 사용합시다 :</target>
        </trans-unit>
        <trans-unit id="ef1e6eaa9a5dc6b5208904520b59cf46cf059cdc" translate="yes" xml:space="preserve">
          <source>Node Tests</source>
          <target state="translated">노드 테스트</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="9c5f6f8d83481bbfc82b23fdb41985198fbb2c9d" translate="yes" xml:space="preserve">
          <source>Note that autoescaping has some limitations as escaping is applied on expressions after evaluation. For instance, when working with concatenation, &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; won&amp;rsquo;t give the expected result as escaping is applied on the result of the concatenation, not on the individual variables (so, the &lt;code&gt;raw&lt;/code&gt; filter won&amp;rsquo;t have any effect here).</source>
          <target state="translated">평가 후 표현식에 이스케이프가 적용되므로 자동 이스케이프에는 몇 가지 제한 사항이 있습니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 예를 들어 연결 작업을 할 때 &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; 는 개별 변수가 아닌 연결 결과에 이스케이프가 적용되므로 예상 결과를 제공하지 않습니다 (따라서 &lt;code&gt;raw&lt;/code&gt; 필터에는 여기에 모든 효과).</target>
        </trans-unit>
        <trans-unit id="cfc14d99847b7ea8cf4e92f97b1932faba4f8401" translate="yes" xml:space="preserve">
          <source>Note that autoescaping has some limitations as escaping is applied on expressions after evaluation. For instance, when working with concatenation, &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; won't give the expected result as escaping is applied on the result of the concatenation, not on the individual variables (so, the &lt;code&gt;raw&lt;/code&gt; filter won't have any effect here).</source>
          <target state="translated">자동 이스케이프에는 평가 후 표현식에 이스케이프가 적용되므로 몇 가지 제한 사항이 있습니다. 예를 들어, 연결 작업시 &lt;code&gt;{{ foo|raw ~ bar }}&lt;/code&gt; 는 개별 변수가 아닌 연결 결과에 이스케이프 처리가 적용되어 예상 결과를 제공하지 않습니다. 따라서 &lt;code&gt;raw&lt;/code&gt; 필터에는 여기에 어떤 영향).</target>
        </trans-unit>
        <trans-unit id="f12617a50472a5f6f4baa3d9893b0e771bd3b52b" translate="yes" xml:space="preserve">
          <source>Note that by default, the deprecation notices are silenced and never displayed nor logged. See &lt;a href=&quot;../recipes#deprecation-notices&quot;&gt;Displaying Deprecation Notices&lt;/a&gt; to learn how to handle them.</source>
          <target state="translated">기본적으로 사용 중단 알림은 자동으로 표시되며 표시되거나 기록되지 않습니다. 처리 방법에 대한 자세한 내용은 &lt;a href=&quot;../recipes#deprecation-notices&quot;&gt;사용 중단 알림 표시를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52433777175e4e0620007b39a0ba7268f5c3ecf1" translate="yes" xml:space="preserve">
          <source>Note that doing contextual escaping in HTML documents is hard and choosing the right escaping strategy depends on a lot of factors. Please, read related documentation like &lt;a href=&quot;https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md&quot;&gt;the OWASP prevention cheat sheet&lt;/a&gt; to learn more about this topic.</source>
          <target state="translated">HTML 문서에서 컨텍스트 이스케이프를 수행하는 것은 어렵고 올바른 이스케이프 전략을 선택하는 것은 많은 요인에 따라 달라집니다. 이 주제에 대해 자세히 알아 보려면 &lt;a href=&quot;https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md&quot;&gt;OWASP 방지 치트 시트&lt;/a&gt; 와 같은 관련 문서를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="1b876de0f99fe546d3c259ec56dbbfb1e7e52b1f" translate="yes" xml:space="preserve">
          <source>Note that if the start is greater than the end, &lt;code&gt;range&lt;/code&gt; assumes a step of &lt;code&gt;-1&lt;/code&gt;:</source>
          <target state="translated">시작이 끝보다 큰 경우 &lt;code&gt;range&lt;/code&gt; 는 &lt;code&gt;-1&lt;/code&gt; 단계로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="62a25da9e469d0a5c9b22e4af6be6a7710897fa3" translate="yes" xml:space="preserve">
          <source>Note that loops are scoped in Twig; therefore a variable declared inside a &lt;code&gt;for&lt;/code&gt; loop is not accessible outside the loop itself:</source>
          <target state="translated">루프는 Twig에서 범위가 지정됩니다. 따라서 &lt;code&gt;for&lt;/code&gt; 루프 내부에 선언 된 변수는 루프 자체 외부에서 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="51d2fdac6de82e6adea991a25c97f78b15376a8d" translate="yes" xml:space="preserve">
          <source>Note that most deprecation notices are triggered during &lt;strong&gt;compilation&lt;/strong&gt;, so they won&amp;rsquo;t be generated when templates are already cached.</source>
          <target state="translated">대부분의 지원 중단 알림은 &lt;strong&gt;컴파일&lt;/strong&gt; 중에 트리거 되므로 템플릿이 이미 캐시 된 경우 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb49b4359fbfd731f78d70761064fb47970b9ff5" translate="yes" xml:space="preserve">
          <source>Note that most deprecation notices are triggered during &lt;strong&gt;compilation&lt;/strong&gt;, so they won't be generated when templates are already cached.</source>
          <target state="translated">대부분의 지원 중단 알림은 &lt;strong&gt;컴파일&lt;/strong&gt; 과정에서 트리거 되므로 템플릿이 이미 캐시되어 있으면 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="932a8c7463111ba5585d513406372533fb7c97b8" translate="yes" xml:space="preserve">
          <source>Note that overloading the built-in Twig elements is not recommended as it might be confusing.</source>
          <target state="translated">내장 나뭇 가지 요소에 과부하가 걸리면 혼동 될 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ffb9e8311ff9b6abe89fad294990e4d58e7bdaf2" translate="yes" xml:space="preserve">
          <source>Note that since the child template doesn&amp;rsquo;t define the &lt;code&gt;footer&lt;/code&gt; block, the value from the parent template is used instead.</source>
          <target state="translated">하위 템플릿은 &lt;code&gt;footer&lt;/code&gt; 블록을 정의하지 않으므로 상위 템플릿의 값이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6db7db7bf54f23f6d10d27a94b93439147686a0d" translate="yes" xml:space="preserve">
          <source>Note that since the child template doesn't define the &lt;code&gt;footer&lt;/code&gt; block, the value from the parent template is used instead.</source>
          <target state="translated">자식 템플릿은 &lt;code&gt;footer&lt;/code&gt; 블록을 정의하지 않기 때문에 대신 부모 템플릿의 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="af71bfa6ffbaf9d16fe8b25378476a134a8bfb9d" translate="yes" xml:space="preserve">
          <source>Note that the CSS inliner works on an entire HTML document, not a fragment.</source>
          <target state="translated">CSS 인라이너는 조각이 아닌 전체 HTML 문서에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bf77acd7076a835dbc9f6e7fa623c253c891b164" translate="yes" xml:space="preserve">
          <source>Note that the arrow function has access to the current context.</source>
          <target state="translated">화살표 함수는 현재 컨텍스트에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb0061340983153c823eef7e2263aab480152430" translate="yes" xml:space="preserve">
          <source>Note that you can indent the Markdown content as leading whitespaces will be removed consistently before conversion:</source>
          <target state="translated">변환 전에 선행 공백이 일관되게 제거되므로 마크 다운 콘텐츠를 들여 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8fc14fd973764907951dac1bf26538235693b5" translate="yes" xml:space="preserve">
          <source>Note that you must use parentheses when combining it with the filter operator due to the &lt;a href=&quot;#twig-expressions&quot;&gt;operator precedence rules&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#twig-expressions&quot;&gt;연산자 우선 순위 규칙&lt;/a&gt; 으로 인해 필터 연산자와 결합 할 때 괄호를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d2d4febe0dd36197987d165680a9e744fccfccd9" translate="yes" xml:space="preserve">
          <source>Note the usage of the &lt;a href=&quot;https://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;spaceship&lt;/a&gt; operator to simplify the comparison.</source>
          <target state="translated">의 사용 참고 &lt;a href=&quot;https://www.php.net/manual/en/language.operators.comparison.php&quot;&gt;우주선의&lt;/a&gt; 비교를 단순화하기 위해 연산자를.</target>
        </trans-unit>
        <trans-unit id="269d903abeea808c099c43b2c89f7578f086ca67" translate="yes" xml:space="preserve">
          <source>Notice that the second argument of the environment is an array of options. The &lt;code&gt;cache&lt;/code&gt; option is a compilation cache directory, where Twig caches the compiled templates to avoid the parsing phase for sub-sequent requests. It is very different from the cache you might want to add for the evaluated templates. For such a need, you can use any available PHP cache library.</source>
          <target state="translated">환경의 두 번째 인수는 옵션 배열입니다. &lt;code&gt;cache&lt;/code&gt; 옵션은 나뭇 가지 하위 필연의 요청에 대한 분석 위상을 피하기 위해 컴파일 된 템플릿을 캐시 편집 캐시 디렉토리입니다. 평가 된 템플릿에 추가하려는 캐시와는 매우 다릅니다. 이러한 필요에 따라 사용 가능한 PHP 캐시 라이브러리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4ad646cbb98a73cb1d04b94c1aa2736693d8c6f" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;base.twig&lt;/code&gt; templates is defined in an array loader, you can remove it from the database, and everything else will still work as before.</source>
          <target state="translated">이제 것을 &lt;code&gt;base.twig&lt;/code&gt; 의 템플릿이 배열 로더에 정의되어, 데이터베이스에서 제거 할 수 있습니다, 그리고 모든 다른 여전히 이전처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3fff6fd40b39a92d65adb96f35a625770fee3304" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s define a loader able to use this database:</source>
          <target state="translated">이제이 데이터베이스를 사용할 수있는 로더를 정의 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="d44fdd0378c48c0a2cefb12275df414e10be8883" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s see the actual code of this class:</source>
          <target state="translated">이제이 클래스의 실제 코드를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="9374d94471423cb1528c253e82a16e501a97732b" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;filter&lt;/em&gt;:</source>
          <target state="translated">이제 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;필터를&lt;/em&gt; 사용하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="f0b0ac82ee4f0b3dad626021e51d61be5bf1b4f8" translate="yes" xml:space="preserve">
          <source>Now, let's define a loader able to use this database:</source>
          <target state="translated">이제이 데이터베이스를 사용할 수있는 로더를 정의 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="55944aa75cf0566648ae2016949aa3b6420ae3a6" translate="yes" xml:space="preserve">
          <source>Now, let's see the actual code of this class:</source>
          <target state="translated">이제이 클래스의 실제 코드를 보자 :</target>
        </trans-unit>
        <trans-unit id="3df63f485424893ca145d25bc027c8afb7d92810" translate="yes" xml:space="preserve">
          <source>Now, let's use a &lt;code&gt;lipsum&lt;/code&gt;&lt;em&gt;filter&lt;/em&gt;:</source>
          <target state="translated">이제 &lt;code&gt;lipsum&lt;/code&gt; &lt;em&gt;필터를 &lt;/em&gt;사용해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="ee3cf78fa4321b1a656162de09054591df25623f" translate="yes" xml:space="preserve">
          <source>Now, when rendering the child template, the loop is going to use the block defined in the child template instead of the one defined in the base one; the executed template is then equivalent to the following one:</source>
          <target state="translated">이제 자식 템플릿을 렌더링 할 때 루프는 기본 템플릿에 정의 된 블록 대신 자식 템플릿에 정의 된 블록을 사용합니다. 그런 다음 실행 된 템플릿은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c80a4c073f41e66657cf87483a913a12037c7c7d" translate="yes" xml:space="preserve">
          <source>Objects with a &lt;code&gt;__toString&lt;/code&gt; method are converted to strings and escaped. You can mark some classes and/or interfaces as being safe for some strategies via &lt;code&gt;EscaperExtension::addSafeClass()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;__toString&lt;/code&gt; 메서드가 있는 개체는 문자열로 변환되고 이스케이프됩니다. &lt;code&gt;EscaperExtension::addSafeClass()&lt;/code&gt; 를 통해 일부 전략에 대해 일부 클래스 및 / 또는 인터페이스를 안전한 것으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de2aec2c6115b1a0acdf36db9cfc0442cf7ad052" translate="yes" xml:space="preserve">
          <source>Of course, the name after the &lt;code&gt;endblock&lt;/code&gt; word must match the block name.</source>
          <target state="translated">물론 &lt;code&gt;endblock&lt;/code&gt; 블록 단어 뒤의 이름은 블록 이름과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e3d747c3ca751dfdcb72ca28bbd09f99edfd3ef" translate="yes" xml:space="preserve">
          <source>Of course, the name after the &lt;code&gt;endmacro&lt;/code&gt; word must match the macro name.</source>
          <target state="translated">물론, &lt;code&gt;endmacro&lt;/code&gt; 단어 뒤의 이름은 매크로 이름과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d623c3a29cf15cbf2e3aa6ab3acf410300c43a9" translate="yes" xml:space="preserve">
          <source>Of course, this extension does nothing for now. We will customize it in the next sections.</source>
          <target state="translated">물론이 확장은 현재로서는 아무 것도하지 않습니다. 다음 섹션에서이를 사용자 정의 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="3fb55b4c63bbfbc160e8fdaee768a3a1208ad506" translate="yes" xml:space="preserve">
          <source>Of course, this will not work as Twig will always load the template from &lt;code&gt;.../templates/mysite&lt;/code&gt;.</source>
          <target state="translated">물론, Twig는 항상 &lt;code&gt;.../templates/mysite&lt;/code&gt; 에서 템플릿을로드하므로 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8e501498dd887e4214dc7088168cf722d2eb9b7a" translate="yes" xml:space="preserve">
          <source>On Symfony projects, you can automatically enable it by installing the &lt;code&gt;twig/extra-bundle&lt;/code&gt;:</source>
          <target state="translated">Symfony 프로젝트에서는 &lt;code&gt;twig/extra-bundle&lt;/code&gt; 을 설치하여 자동으로 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f26c8678cbbdacce2482797f90493c9415e41580" translate="yes" xml:space="preserve">
          <source>One of the most exciting features of a template engine like Twig is the possibility to define new &lt;strong&gt;language constructs&lt;/strong&gt;. This is also the most complex feature as you need to understand how Twig&amp;rsquo;s internals work.</source>
          <target state="translated">Twig와 같은 템플릿 엔진의 가장 흥미로운 기능 중 하나는 새로운 &lt;strong&gt;언어 구조&lt;/strong&gt; 를 정의 할 수 있다는 것 입니다. Twig의 내부 작동 방식을 이해해야하는 가장 복잡한 기능이기도합니다.</target>
        </trans-unit>
        <trans-unit id="85db17d433557911a3bbd98ef14105129a2240b1" translate="yes" xml:space="preserve">
          <source>One of the most exciting features of a template engine like Twig is the possibility to define new language constructs. This is also the most complex feature as you need to understand how Twig's internals work.</source>
          <target state="translated">Twig와 같은 템플릿 엔진의 가장 흥미로운 기능 중 하나는 새로운 언어 구조를 정의 할 수 있다는 것입니다. 이것은 또한 Twig의 내부 작동 방식을 이해해야 할 때 가장 복잡한 기능입니다.</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="b2368527f5ef2990fd1abef077498e8c7aca7b6d" translate="yes" xml:space="preserve">
          <source>Operators are case sensitive.</source>
          <target state="translated">연산자는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="60d5ec08a38e822c97bde535785de0972ad7b2cd" translate="yes" xml:space="preserve">
          <source>Optimizer Extension</source>
          <target state="translated">옵티 마이저 확장</target>
        </trans-unit>
        <trans-unit id="fbc46fa272cc8f490d2973699d6c9d4a7aaccbc6" translate="yes" xml:space="preserve">
          <source>Or add the extension explicitly on the Twig environment:</source>
          <target state="translated">또는 Twig 환경에서 명시 적으로 확장을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fd13b94019000aaafc7f679d1d2b13d8082b8dbf" translate="yes" xml:space="preserve">
          <source>Other Operators</source>
          <target state="translated">다른 연산자</target>
        </trans-unit>
        <trans-unit id="cb2f163ccc20cb7388203cf1edbc6860b44ea0f0" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="translated">Overloading</target>
        </trans-unit>
        <trans-unit id="7d042791c6d03b8b65532d86de57a4e45528817d" translate="yes" xml:space="preserve">
          <source>Overriding a Template that also extends itself</source>
          <target state="translated">자체 확장되는 템플릿 재정의</target>
        </trans-unit>
        <trans-unit id="7c41fdf87d994d54c4375ddb9f40e24e5f85510a" translate="yes" xml:space="preserve">
          <source>Page template &lt;code&gt;foo.twig&lt;/code&gt;:</source>
          <target state="translated">페이지 템플릿 &lt;code&gt;foo.twig&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9d1fb6ff4699baace9bc278338c14b908486de9e" translate="yes" xml:space="preserve">
          <source>Parent Blocks</source>
          <target state="translated">부모 블록</target>
        </trans-unit>
        <trans-unit id="efa9d684a8a8fd8d907340a153d9ff2538136018" translate="yes" xml:space="preserve">
          <source>Parsing expressions is done by calling the &lt;code&gt;parseExpression()&lt;/code&gt; like we did for the &lt;code&gt;set&lt;/code&gt; tag.</source>
          <target state="translated">구문 분석 표현식은 &lt;code&gt;set&lt;/code&gt; 태그 와 마찬가지로 &lt;code&gt;parseExpression()&lt;/code&gt; 을 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="5e6823369b4670c3ba15d69df7cf750211fabe49" translate="yes" xml:space="preserve">
          <source>Profiler Extension</source>
          <target state="translated">프로파일 러 확장</target>
        </trans-unit>
        <trans-unit id="6208518abe3f135d3b04f664fbde54fd614e08ee" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space after the &lt;code&gt;:&lt;/code&gt; sign in hashes and &lt;code&gt;,&lt;/code&gt; in arrays and hashes:</source>
          <target state="translated">애프터 단 하나의 공간을 넣어 &lt;code&gt;:&lt;/code&gt; 해시에 로그인하고 &lt;code&gt;,&lt;/code&gt; 배열과 해시에 :</target>
        </trans-unit>
        <trans-unit id="c0a20a0e2ca5dc0d17d7efd8e205ac8ea7b27843" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space after the start of a delimiter (&lt;code&gt;{{&lt;/code&gt;, &lt;code&gt;{%&lt;/code&gt;, and &lt;code&gt;{#&lt;/code&gt;) and before the end of a delimiter (&lt;code&gt;}}&lt;/code&gt;, &lt;code&gt;%}&lt;/code&gt;, and &lt;code&gt;#}&lt;/code&gt;):</source>
          <target state="translated">구분 기호 시작 후 ( &lt;code&gt;{{&lt;/code&gt; , &lt;code&gt;{%&lt;/code&gt; , &lt;code&gt;{#&lt;/code&gt; ) 및 구분 기호 끝 ( &lt;code&gt;}}&lt;/code&gt; , &lt;code&gt;%}&lt;/code&gt; , &lt;code&gt;#}&lt;/code&gt; ) 앞에 하나의 공백을 두십시오 .</target>
        </trans-unit>
        <trans-unit id="f807293bb4406551b7f2ad035b45144b7ab5ce17" translate="yes" xml:space="preserve">
          <source>Put one (and only one) space before and after the following operators: comparison operators (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;), math operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;), logic operators (&lt;code&gt;not&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;), &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, and the ternary operator (&lt;code&gt;?:&lt;/code&gt;):</source>
          <target state="translated">(비교 연산자 : 다음 연산자 전후 단 하나의 공간을 넣어 &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; ), 수학 연산자 ( &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;//&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; ), 논리 연산자 ( &lt;code&gt;not&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; ), &lt;code&gt;~&lt;/code&gt; , &lt;code&gt;is&lt;/code&gt; , &lt;code&gt;in&lt;/code&gt; , 그리고 삼항 연산자 ( &lt;code&gt;?:&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e8a8372ae80166065b62384db97a6a02327c4eba" translate="yes" xml:space="preserve">
          <source>Read the chapter about &lt;a href=&quot;advanced&quot;&gt;extending Twig&lt;/a&gt; to learn how to create your own extensions.</source>
          <target state="translated">자신 만의 확장을 만드는 방법을 배우려면 &lt;a href=&quot;advanced&quot;&gt;Twig 확장에&lt;/a&gt; 대한 장을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="59ec32809687eb79bf3036f216e7894f2f9df7bf" translate="yes" xml:space="preserve">
          <source>Read the chapter about extending Twig to learn how to create your own extensions.</source>
          <target state="translated">자신 만의 확장을 만드는 방법을 배우려면 Twig 확장에 관한 장을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="ca8824fd81d472811585a1610376e2407b987863" translate="yes" xml:space="preserve">
          <source>Read the documentation for the &lt;a href=&quot;../tests/defined&quot;&gt;defined&lt;/a&gt; and &lt;a href=&quot;../tests/empty&quot;&gt;empty&lt;/a&gt; tests to learn more about their semantics.</source>
          <target state="translated">&lt;a href=&quot;../tests/defined&quot;&gt;정의&lt;/a&gt; 및 &lt;a href=&quot;../tests/empty&quot;&gt;빈&lt;/a&gt; 테스트에 대한 설명서를 읽고 의미에 대해 자세히 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="9c7c6706c310bb3998a273ba1502af82fa2c863d" translate="yes" xml:space="preserve">
          <source>Reading the existing &lt;code&gt;TokenParser&lt;/code&gt; classes is the best way to learn all the nitty-gritty details of the parsing process.</source>
          <target state="translated">기존의 &lt;code&gt;TokenParser&lt;/code&gt; 클래스를 읽는 것이 구문 분석 프로세스의 모든 중요한 세부 사항을 배우는 가장 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="9fb1092f32d4fcbf9e061ffd718d4ec689c6c95e" translate="yes" xml:space="preserve">
          <source>Recipes</source>
          <target state="translated">Recipes</target>
        </trans-unit>
        <trans-unit id="ad4374049d17600ffcdb2255846a2aa3c856f1a4" translate="yes" xml:space="preserve">
          <source>Refreshing modified Templates when OPcache or APC is enabled</source>
          <target state="translated">OPcache 또는 APC가 활성화 된 경우 수정 된 템플릿 새로 고침</target>
        </trans-unit>
        <trans-unit id="7c671004cb76b6dcc65fd61f71cf6a4c1e279381" translate="yes" xml:space="preserve">
          <source>Registering a new tag</source>
          <target state="translated">새 태그 등록</target>
        </trans-unit>
        <trans-unit id="fcc06caf9c40c5639bfc12d1e0cb27d22ada6057" translate="yes" xml:space="preserve">
          <source>Registering the tag.</source>
          <target state="translated">태그를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="41ef4ab18edbb01635b4770a7b1392471d9d3578" translate="yes" xml:space="preserve">
          <source>Renaming allows you to simulate inheritance by calling the &quot;parent&quot; block:</source>
          <target state="translated">이름을 바꾸면 &quot;parent&quot;블록을 호출하여 상속을 시뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3959d7eb7ad45f4eec0d5617fadcbe10f66bfca" translate="yes" xml:space="preserve">
          <source>Renaming allows you to simulate inheritance by calling the &amp;ldquo;parent&amp;rdquo; block:</source>
          <target state="translated">이름을 변경하면 &quot;부모&quot;블록을 호출하여 상속을 시뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99bd1e34cd164e21963997294779599c4962042e" translate="yes" xml:space="preserve">
          <source>Rendering Templates</source>
          <target state="translated">렌더링 템플릿</target>
        </trans-unit>
        <trans-unit id="66598cc6137bf9abd066764c4d7091ecd797ffa8" translate="yes" xml:space="preserve">
          <source>Returns a list containing an arithmetic progression of integers:</source>
          <target state="translated">정수의 산술 진행을 포함하는 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ff1112bb210b5d8b487698b1204697b834e1bb95" translate="yes" xml:space="preserve">
          <source>Reusing a stateful Node Visitor</source>
          <target state="translated">상태 저장 노드 방문자 재사용</target>
        </trans-unit>
        <trans-unit id="b0482778b8f01990f61e8fd56f3823b346d0a435" translate="yes" xml:space="preserve">
          <source>Sandbox Extension</source>
          <target state="translated">샌드 박스 확장</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="e7243d5cdb40f327926fed4254ded6a7971a3b95" translate="yes" xml:space="preserve">
          <source>Sets the default auto-escaping strategy (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;html_attr&lt;/code&gt;, or a PHP callback that takes the template &quot;filename&quot; and returns the escaping strategy to use -- the callback cannot be a function name to avoid collision with built-in escaping strategies); set it to &lt;code&gt;false&lt;/code&gt; to disable auto-escaping. The &lt;code&gt;name&lt;/code&gt; escaping strategy determines the escaping strategy to use for a template based on the template filename extension (this strategy does not incur any overhead at runtime as auto-escaping is done at compilation time.)</source>
          <target state="translated">템플릿 &quot;filename&quot;을 사용하고 사용할 이스케이프 전략을 반환 하는 기본 자동 이스케이프 전략 ( &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;html&lt;/code&gt; , &lt;code&gt;js&lt;/code&gt; , &lt;code&gt;css&lt;/code&gt; , &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;html_attr&lt;/code&gt; 또는 PHP 콜백을 설정합니다. 콜백은 충돌을 피하기위한 함수 이름 일 수 없습니다. 이스케이프 전략 내장); 자동 이스케이프를 사용하지 않으 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;name&lt;/code&gt; 탈출 전략은 템플릿 파일 이름 확장명에 따라 템플릿에 사용하는 탈출 전략 결정 (자동 이스케이프 컴파일시에 실시하는대로이 전략이 실행시에 어떤 오버 헤드가 발생하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="eaaa2fafed2843a018fa7e43e4bec9d280174b03" translate="yes" xml:space="preserve">
          <source>Sets the default auto-escaping strategy (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;html_attr&lt;/code&gt;, or a PHP callback that takes the template &amp;ldquo;filename&amp;rdquo; and returns the escaping strategy to use &amp;ndash; the callback cannot be a function name to avoid collision with built-in escaping strategies); set it to &lt;code&gt;false&lt;/code&gt; to disable auto-escaping. The &lt;code&gt;name&lt;/code&gt; escaping strategy determines the escaping strategy to use for a template based on the template filename extension (this strategy does not incur any overhead at runtime as auto-escaping is done at compilation time.)</source>
          <target state="translated">기본 자동 이스케이프 전략을 설정합니다 ( &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;html&lt;/code&gt; , &lt;code&gt;js&lt;/code&gt; , &lt;code&gt;css&lt;/code&gt; , &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;html_attr&lt;/code&gt; , 또는 템플릿 &quot;filename&quot;을 사용하고 사용할 이스케이프 전략을 반환하는 PHP 콜백) &amp;ndash; 콜백은 충돌을 피하기 위해 함수 이름이 될 수 없습니다. 내장 된 이스케이프 전략 자동 이스케이프를 사용하지 않으 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;name&lt;/code&gt; 탈출 전략은 템플릿 파일 이름 확장명에 따라 템플릿에 사용하는 탈출 전략 결정 (자동 이스케이프 컴파일시에 실시하는대로이 전략이 실행시에 어떤 오버 헤드가 발생하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="6a07d409a8bca74d5b1cfcdca5970e45d67bb7d8" translate="yes" xml:space="preserve">
          <source>Setting Variables</source>
          <target state="translated">변수 설정</target>
        </trans-unit>
        <trans-unit id="b4b928607a437ad5e0d739dcf50be282731834cb" translate="yes" xml:space="preserve">
          <source>Several variables can be assigned in one block:</source>
          <target state="translated">하나의 블록에 여러 변수를 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98451f04af922e592c06df098273788a4a72ef81" translate="yes" xml:space="preserve">
          <source>Since the use case may not be obvious, let&amp;rsquo;s look at a simplified example. Imagine a base template shared by multiple HTML pages, defining a single block named &amp;ldquo;content&amp;rdquo;:</source>
          <target state="translated">사용 사례가 명확하지 않을 수 있으므로 간단한 예를 살펴 보겠습니다. &quot;content&quot;라는 단일 블록을 정의하는 여러 HTML 페이지에서 공유하는 기본 템플릿을 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="0877d0fa0c3bb3055b8f88fa55ac5c42526ffe20" translate="yes" xml:space="preserve">
          <source>Since the use case may not be obvious, let's look at a simplified example. Imagine a base template shared by multiple HTML pages, defining a single block named &quot;content&quot;:</source>
          <target state="translated">사용 사례가 명확하지 않을 수 있으므로 간단한 예를 살펴 보겠습니다. &quot;content&quot;라는 단일 블록을 정의하여 여러 HTML 페이지가 공유하는 기본 템플릿을 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="076aecdf194c0acbcd569262d67a5c1b5180dcb5" translate="yes" xml:space="preserve">
          <source>Some filters may need to work on input that is already escaped or safe, for example when adding (safe) HTML tags to originally unsafe output. In such a case, set the &lt;code&gt;pre_escape&lt;/code&gt; option to escape the input data before it is run through your filter:</source>
          <target state="translated">일부 필터는 원래 안전하지 않은 출력에 (안전한) HTML 태그를 추가 할 때와 같이 이미 이스케이프되거나 안전한 입력에서 작동해야 할 수도 있습니다. 이러한 경우 &lt;code&gt;pre_escape&lt;/code&gt; 옵션을 설정 하여 입력 데이터가 필터를 통해 실행되기 전에 입력 데이터를 이스케이프하십시오.</target>
        </trans-unit>
        <trans-unit id="27db328c07d26d85d4cfb53732b20f728fea4b58" translate="yes" xml:space="preserve">
          <source>Some pages (&quot;foo&quot; and &quot;bar&quot;) share the same content structure - two vertically stacked boxes:</source>
          <target state="translated">일부 페이지 ( &quot;foo&quot;및 &quot;bar&quot;)는 동일한 컨텐츠 구조를 공유합니다-두 개의 세로로 쌓인 상자 :</target>
        </trans-unit>
        <trans-unit id="6a86061fc5d5cdbe99881184f9056f7383e0fdb6" translate="yes" xml:space="preserve">
          <source>Some pages (&amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;) share the same content structure - two vertically stacked boxes:</source>
          <target state="translated">일부 페이지 ( &quot;foo&quot;및 &quot;bar&quot;)는 동일한 콘텐츠 구조 (두 개의 세로로 쌓인 상자)를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="3ba99ddb5d740267821ed70cf3314f577b85b653" translate="yes" xml:space="preserve">
          <source>Sometimes, when using nested loops, you need to access the parent context. The parent context is always accessible via the &lt;code&gt;loop.parent&lt;/code&gt; variable. For instance, if you have the following template data:</source>
          <target state="translated">때때로 중첩 루프를 사용할 때 부모 컨텍스트에 액세스해야합니다. 부모 컨텍스트는 항상 &lt;code&gt;loop.parent&lt;/code&gt; 변수 를 통해 액세스 할 수 있습니다 . 예를 들어 다음과 같은 템플릿 데이터가있는 경우</target>
        </trans-unit>
        <trans-unit id="b94eab177d0450791e2bd87d5293995143f45c6d" translate="yes" xml:space="preserve">
          <source>Sounds complicated but it is very basic. It's easier to understand it by starting with an example.</source>
          <target state="translated">복잡해 보이지만 매우 기본적입니다. 예제로 시작하여 이해하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="4949c62fb969326b2fde8b8dab0281e60449d966" translate="yes" xml:space="preserve">
          <source>Still, if you want to use AngularJS and Twig in the same template, there are two ways to make it work depending on the amount of AngularJS you need to include in your templates:</source>
          <target state="translated">여전히 동일한 템플릿에서 AngularJS와 Twig를 사용하려면 템플릿에 포함해야하는 AngularJS의 양에 따라 작동하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcadc5a0cb117211f9dc789c191b1d6c306ecd43" translate="yes" xml:space="preserve">
          <source>String Interpolation</source>
          <target state="translated">문자열 보간</target>
        </trans-unit>
        <trans-unit id="ed19c64d1fe7c3fa1574fd852a215a59e822c2fd" translate="yes" xml:space="preserve">
          <source>String interpolation (&lt;code&gt;#{expression}&lt;/code&gt;) allows any valid expression to appear within a &lt;em&gt;double-quoted string&lt;/em&gt;. The result of evaluating that expression is inserted into the string:</source>
          <target state="translated">문자열 보간 ( &lt;code&gt;#{expression}&lt;/code&gt; )을 사용하면 유효한 식을 &lt;em&gt;큰 따옴표로 묶은 문자열&lt;/em&gt; 안에 표시 할 수 있습니다 . 해당 표현식을 평가 한 결과가 문자열에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="79983270e27e4282d9a5436b31f621d6a3e26f40" translate="yes" xml:space="preserve">
          <source>Styles loaded via the filter override the styles defined in the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag of the HTML document.</source>
          <target state="translated">필터를 통해로드 된 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 은 HTML 문서 의 &amp;lt;style&amp;gt; 태그에 정의 된 스타일을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="09b5c5d2f7deba96340dca0862672c4efc5ac069" translate="yes" xml:space="preserve">
          <source>Supported values are: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;full&lt;/code&gt;.</source>
          <target state="translated">지원되는 값은 &lt;code&gt;none&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;code&gt;full&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="d6b6bb3a1a939adefc8ad08e7880baf39f4c9d7b" translate="yes" xml:space="preserve">
          <source>Template Inheritance</source>
          <target state="translated">템플릿 상속</target>
        </trans-unit>
        <trans-unit id="3dd87e05efd2c362fafa221c98a5b8da06087ae9" translate="yes" xml:space="preserve">
          <source>Template inheritance is one of the most powerful features of Twig but it is limited to single inheritance; a template can only extend one other template. This limitation makes template inheritance simple to understand and easy to debug:</source>
          <target state="translated">템플릿 상속은 Twig의 가장 강력한 기능 중 하나이지만 단일 상속으로 제한됩니다. 템플릿은 다른 템플릿 하나만 확장 할 수 있습니다. 이 제한으로 템플릿 상속을 이해하기 쉽고 디버깅하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="2691b3f1f1c212aa5a3ce650bad359d76371d1b6" translate="yes" xml:space="preserve">
          <source>Test Operator</source>
          <target state="translated">테스트 연산자</target>
        </trans-unit>
        <trans-unit id="51bb693e68b00c8ad782a93c3be170057edee936" translate="yes" xml:space="preserve">
          <source>Test functions must always return &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">테스트 함수는 항상 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b31ecb33b837cbfc4706edad7573ceba634fad70" translate="yes" xml:space="preserve">
          <source>Test functions should always return true/false.</source>
          <target state="translated">테스트 함수는 항상 참 / 거짓을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6e82098b28b9a25feb0191a7549df268e2da2272" translate="yes" xml:space="preserve">
          <source>Testing an Extension</source>
          <target state="translated">확장 테스트</target>
        </trans-unit>
        <trans-unit id="c77cef40d68a9d5b02df3c7dfe86cb9171553b82" translate="yes" xml:space="preserve">
          <source>Testing the node visitors can be complex, so extend your test cases from &lt;code&gt;Twig_Test_NodeTestCase&lt;/code&gt;. Examples can be found in the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Node&quot;&gt;tests/Twig/Node&lt;/a&gt; directory.</source>
          <target state="translated">노드 방문자 테스트는 복잡 할 수 있으므로 &lt;code&gt;Twig_Test_NodeTestCase&lt;/code&gt; 에서 테스트 케이스를 확장하십시오 . 예는 Twig 저장소 &lt;a href=&quot;https://github.com/twigphp/Twig/tree/2.x/test/Twig/Tests/Node&quot;&gt;tests / Twig / Node&lt;/a&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8b5725046bd26e26c85ce47000748953def2557" translate="yes" xml:space="preserve">
          <source>Testing the node visitors can be complex, so extend your test cases from &lt;code&gt;\Twig\Test\NodeTestCase&lt;/code&gt;. Examples can be found in the Twig repository &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Node&quot;&gt;tests/Twig/Node&lt;/a&gt; directory.</source>
          <target state="translated">노드 방문자 테스트는 복잡 할 수 있으므로 &lt;code&gt;\Twig\Test\NodeTestCase&lt;/code&gt; 에서 테스트 케이스를 확장하십시오 . 예제는 Twig 저장소 &lt;a href=&quot;https://github.com/twigphp/Twig/tree/3.x/tests/Node&quot;&gt;tests / Twig / Node&lt;/a&gt; 디렉토리 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="ba364bf3ac703d87d4b6f4bfe2ada3ffd7d0ba0a" translate="yes" xml:space="preserve">
          <source>Tests allow you to create custom application specific logic for evaluating boolean conditions. As a simple example, let&amp;rsquo;s create a Twig test that checks if objects are &amp;lsquo;red&amp;rsquo;:</source>
          <target state="translated">테스트를 사용하면 부울 조건을 평가하기위한 사용자 지정 응용 프로그램 특정 논리를 만들 수 있습니다. 간단한 예로, 개체가 '빨간색'인지 확인하는 Twig 테스트를 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b591a4ce48960f6657e9b7732cf3fd020bc84733" translate="yes" xml:space="preserve">
          <source>Tests allow you to create custom application specific logic for evaluating boolean conditions. As a simple example, let's create a Twig test that checks if objects are 'red':</source>
          <target state="translated">테스트를 통해 부울 조건을 평가하기위한 사용자 지정 응용 프로그램 별 논리를 만들 수 있습니다. 간단한 예로, 객체가 '빨간색'인지 확인하는 나뭇 가지 테스트를 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="596bd57151aeb778febfe0c5deffffd75b69ed5a" translate="yes" xml:space="preserve">
          <source>Tests are defined in the exact same way as filters and functions, but you need to create an instance of &lt;code&gt;Twig_Test&lt;/code&gt;:</source>
          <target state="translated">테스트는 필터 및 함수와 동일한 방식으로 정의되지만 &lt;code&gt;Twig_Test&lt;/code&gt; 인스턴스를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6b7e25ca5def81bef756b710d3e6aee85e42d46e" translate="yes" xml:space="preserve">
          <source>Tests are defined in the exact same way as filters and functions, but you need to create an instance of &lt;code&gt;\Twig\TwigTest&lt;/code&gt;:</source>
          <target state="translated">테스트는 필터 및 함수와 똑같은 방식으로 정의되지만 &lt;code&gt;\Twig\TwigTest&lt;/code&gt; 의 인스턴스를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d016962d5b85e27a5c3c03381147db98d63e5bde" translate="yes" xml:space="preserve">
          <source>Tests can accept arguments too:</source>
          <target state="translated">테스트에서도 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fd8ac942a7735f28c5b6559de7283feb1d87ac5" translate="yes" xml:space="preserve">
          <source>Tests can be negated by using the &lt;code&gt;is not&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;is not&lt;/code&gt; 연산자를 사용하여 테스트를 무효화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc05d9ff1dea43b0d895530a510dde04588d1a01" translate="yes" xml:space="preserve">
          <source>That works, but using a tag for &lt;code&gt;lipsum&lt;/code&gt; is not a good idea for at least three main reasons:</source>
          <target state="translated">작동하지만 &lt;code&gt;lipsum&lt;/code&gt; 에 태그를 사용하는 것은 적어도 세 가지 주요 이유에서 좋지 않습니다.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="b9d9b80f14772854d52ed5dec4f0f258aaef1eda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;functions/include&quot;&gt;include&lt;/a&gt; function is useful to include a template and return the rendered content of that template into the current one:</source>
          <target state="translated">가 &lt;a href=&quot;functions/include&quot;&gt;포함&lt;/a&gt; 함수 템플릿을 포함하고, 현재의 하나에 해당 템플릿의 표시된 콘텐츠를 반환 유용</target>
        </trans-unit>
        <trans-unit id="7c517cc2140061caabf6eb26128d8f44b616831b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt; tag is the key here. It tells the template engine that this template &quot;extends&quot; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">은 &lt;a href=&quot;tags/extends&quot;&gt;확장&lt;/a&gt; 태그 여기 열쇠입니다. 이 템플릿은 다른 템플릿을 &quot;확장&quot;한다고 템플릿 엔진에 알려줍니다. 템플릿 시스템은이 템플릿을 평가할 때 먼저 부모를 찾습니다. 확장 태그는 템플릿의 첫 번째 태그 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d8262296b283b51f50141bd48d50664e5bad23a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/extends&quot;&gt;extends&lt;/a&gt; tag is the key here. It tells the template engine that this template &amp;ldquo;extends&amp;rdquo; another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.</source>
          <target state="translated">은 &lt;a href=&quot;tags/extends&quot;&gt;확장&lt;/a&gt; 태그 여기 열쇠입니다. 템플릿 엔진에이 템플릿이 다른 템플릿을 &quot;확장&quot;한다고 알려줍니다. 템플릿 시스템이이 템플릿을 평가할 때 먼저 부모를 찾습니다. extends 태그는 템플릿의 첫 번째 태그 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ca4b88e78723cbdc13ccc7c9b6d43a1ad2a2ff62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tags/if&quot;&gt;if&lt;/a&gt; tag can be used to test an expression:</source>
          <target state="translated">&lt;a href=&quot;tags/if&quot;&gt;경우&lt;/a&gt; 태그는 표현을 테스트 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d54ebb65540ace4eb941e7f3784ca2f7127ce402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;..&lt;/code&gt; operator can take any expression at both sides:</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; 연산자 양측에 어떤 표정을 취할 수</target>
        </trans-unit>
        <trans-unit id="7d412831cb118a24ce7d7fcddf89d5788006afcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;//&lt;/code&gt; operator is equivalent to &lt;code&gt;|round(0, 'floor')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; 연산자에 해당 &lt;code&gt;|round(0, 'floor')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f35426526d8abdeee2946e91d481308afc10a8bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IntegrationTest.php&lt;/code&gt; file should look like this:</source>
          <target state="translated">&lt;code&gt;IntegrationTest.php&lt;/code&gt; 의 파일은 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="8b91e9c23ee6c3474cb4e78d9874ad8965db4556" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Project_Set_Node&lt;/code&gt; class itself is quite short:</source>
          <target state="translated">&lt;code&gt;Project_Set_Node&lt;/code&gt; 의 클래스 자체는 매우 짧다 :</target>
        </trans-unit>
        <trans-unit id="4912dce360fccc8f06b66623452b245dee8c0800" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Project_Set_Node&lt;/code&gt; class itself is rather simple:</source>
          <target state="translated">&lt;code&gt;Project_Set_Node&lt;/code&gt; 의 클래스 자체는 오히려 간단하다 :</target>
        </trans-unit>
        <trans-unit id="e597681d224ad7a663bb9414aefb1f1c547bc38c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Twig_Filter&lt;/code&gt; class takes an array of options as its last argument:</source>
          <target state="translated">&lt;code&gt;Twig_Filter&lt;/code&gt; 의 클래스는 마지막 인수로 옵션의 배열을 취합니다</target>
        </trans-unit>
        <trans-unit id="3372eca0ea3bd5c6dcb73ae4b52e4842c6593fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\Twig\TwigFilter&lt;/code&gt; class takes an array of options as its last argument:</source>
          <target state="translated">&lt;code&gt;\Twig\TwigFilter&lt;/code&gt; 클래스는 마지막 인수로 옵션의 배열을 취합니다</target>
        </trans-unit>
        <trans-unit id="4cc7367fe154518c207585a0a01ccb6a38cc815b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abs&lt;/code&gt; filter returns the absolute value.</source>
          <target state="translated">&lt;code&gt;abs&lt;/code&gt; 필터의 절대 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="397f640604ac129faccfa043c349280ead0ad144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply&lt;/code&gt; tag allows you to apply Twig filters on a block of template data:</source>
          <target state="translated">는 &lt;code&gt;apply&lt;/code&gt; 태그는 템플릿 데이터의 블록에 나뭇 가지 필터를 적용 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bc2aae17b73685ca254c41d189b708101146d739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function can be used to access a &quot;dynamic&quot; attribute of a variable:</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 함수는 변수의 &quot;동적&quot;속성을 액세스하는데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="b87c4153c6c72c4c93e16248daaa32f1664c597d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function can be used to access a &amp;ldquo;dynamic&amp;rdquo; attribute of a variable:</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 함수는 변수의 &quot;동적&quot;속성을 액세스하는데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="4f54831e3c67d5cc675a204bd867fa26a69d8393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; function is also useful when the attribute contains special characters (like &lt;code&gt;-&lt;/code&gt; that would be interpreted as the minus operator):</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 속성이 (같은 특수 문자가 포함 된 경우 기능은 유용하다 &lt;code&gt;-&lt;/code&gt; 그가 마이너스 연산자로 해석됩니다)</target>
        </trans-unit>
        <trans-unit id="7fb5104325e06a74a519a351afca169722d58933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoescape&lt;/code&gt; tag has no effect on included files.</source>
          <target state="translated">&lt;code&gt;autoescape&lt;/code&gt; 의 태그가 포함 된 파일에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="348d6ce7ff8d8ffc7c825ab8e2a405cc69813269" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch&lt;/code&gt; filter &quot;batches&quot; items by returning a list of lists with the given number of items. A second parameter can be provided and used to fill in missing items:</source>
          <target state="translated">&lt;code&gt;batch&lt;/code&gt; 필터 &quot;배치&quot;항목의 지정된 번호 목록의 목록을 반환하여 항목. 누락 된 항목을 채우는 데 두 번째 매개 변수를 제공하고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f739a71c1cbb77f51c27a8297456b06e83f247b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;batch&lt;/code&gt; filter &amp;ldquo;batches&amp;rdquo; items by returning a list of lists with the given number of items. A second parameter can be provided and used to fill in missing items:</source>
          <target state="translated">&lt;code&gt;batch&lt;/code&gt; 필터 &quot;배치&quot;항목의 지정된 번호 목록의 목록을 반환하여 항목. 두 번째 매개 변수를 제공하여 누락 된 항목을 채우는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0493f95f4ab86e387482bff4024fbcbf3601106" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;block&lt;/code&gt; function can also be used to display one block from another template:</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 기능은 또한 다른 템플릿으로부터 하나 개의 블록을 표시하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="1fb899cca6fdbc401562019b85a1abc3a8b9f4e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capitalize&lt;/code&gt; filter capitalizes a value. The first character will be uppercase, all others lowercase:</source>
          <target state="translated">는 &lt;code&gt;capitalize&lt;/code&gt; 필터가 대문자 값. 첫 번째 문자는 대문자이며 다른 모든 문자는 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="ebaeff82f38de421a073bd9ccaf973cd2c74bbe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collectDir()&lt;/code&gt; method compiles all templates found in a directory, catches deprecation notices, and return them.</source>
          <target state="translated">&lt;code&gt;collectDir()&lt;/code&gt; 메소드가 디렉토리에있는 모든 템플릿을 컴파일, 어획량은 통지를 중단하고이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fd15af31281dd6a50afc7d11c9fcdc6daaf410f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;column&lt;/code&gt; filter returns the values from a single column in the input array.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; 필터는 입력 어레이의 단일 컬럼의 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="33a62715fae2d62c47ee6de7a2cad3d939529a3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convert_encoding&lt;/code&gt; filter converts a string from one encoding to another. The first argument is the expected output charset and the second one is the input charset:</source>
          <target state="translated">&lt;code&gt;convert_encoding&lt;/code&gt; 필터는 하나의 인코딩으로부터 다른 문자열로 변환한다. 첫 번째 인수는 예상 출력 문자 집합이고 두 번째 인수는 입력 문자 집합입니다.</target>
        </trans-unit>
        <trans-unit id="ce768f21be3c42687c07df2f1802dc76ff1f2020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;core&lt;/code&gt; extension defines all the core features of Twig:</source>
          <target state="translated">&lt;code&gt;core&lt;/code&gt; 확장은 코어 나뭇 가지의 기능을 모두 정의합니다 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
