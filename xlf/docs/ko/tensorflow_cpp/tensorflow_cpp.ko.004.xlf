<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="tensorflow_cpp">
    <body>
      <group id="tensorflow_cpp">
        <trans-unit id="cd65c00e5690a13a8595ee17508a73c22792d208" translate="yes" xml:space="preserve">
          <source>QueueIsClosed</source>
          <target state="translated">QueueIsClosed</target>
        </trans-unit>
        <trans-unit id="48d4ee108c5234cefcb377861755e8abf67a2b4f" translate="yes" xml:space="preserve">
          <source>QueueIsClosedV2</source>
          <target state="translated">QueueIsClosedV2</target>
        </trans-unit>
        <trans-unit id="f55a099776964839d119250d8f54ebdbeaf05905" translate="yes" xml:space="preserve">
          <source>QueueSize</source>
          <target state="translated">QueueSize</target>
        </trans-unit>
        <trans-unit id="39b2a9c08c62e19b013c7b003b76c141c37e9792" translate="yes" xml:space="preserve">
          <source>REQUIRES: &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt;&lt;/code&gt; &amp;gt;= 1 REQUIRES: &lt;code&gt;0 &amp;lt;= dim0_start &amp;lt;= dim0_limit &amp;lt;= dim_size(0)&lt;/code&gt;</source>
          <target state="translated">REQUIRES: &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt;&lt;/code&gt; &amp;gt;= 1 REQUIRES: &lt;code&gt;0 &amp;lt;= dim0_start &amp;lt;= dim0_limit &amp;lt;= dim_size(0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="beeaa5ade2b51426451f87ade26977c5b59e044e" translate="yes" xml:space="preserve">
          <source>REQUIRES: &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt;&lt;/code&gt; &amp;gt;= 1 REQUIRES: &lt;code&gt;0 &amp;lt;= index &amp;lt; dim_size(0)&lt;/code&gt;</source>
          <target state="translated">REQUIRES: &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt;&lt;/code&gt; &amp;gt;= 1 REQUIRES: &lt;code&gt;0 &amp;lt;= index &amp;lt; dim_size(0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32afcb2eb012060c62f2ee58d91ca01caa3fedaa" translate="yes" xml:space="preserve">
          <source>REQUIRES: &lt;code&gt;DataTypeCanUseMemcpy(dtype())&lt;/code&gt;.</source>
          <target state="translated">REQUIRES: &lt;code&gt;DataTypeCanUseMemcpy(dtype())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee545dd3dd66366a4a305b06c6d299a36f71ec38" translate="yes" xml:space="preserve">
          <source>RFC 4180 format is expected for the CSV records. (&lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;https://tools.ietf.org/html/rfc4180&lt;/a&gt;) Note that we allow leading and trailing spaces with int or float field.</source>
          <target state="translated">RFC 4180 format is expected for the CSV records. (&lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;https://tools.ietf.org/html/rfc4180&lt;/a&gt;) Note that we allow leading and trailing spaces with int or float field.</target>
        </trans-unit>
        <trans-unit id="0997e03242b4c5e45ae73ca58405168a4c4b5b87" translate="yes" xml:space="preserve">
          <source>RGBToHSV</source>
          <target state="translated">RGBToHSV</target>
        </trans-unit>
        <trans-unit id="cc686bfd5042462af905ffb83e3f91b4986fea0b" translate="yes" xml:space="preserve">
          <source>RaggedBincount</source>
          <target state="translated">RaggedBincount</target>
        </trans-unit>
        <trans-unit id="5cadcd3cf73811f8e65146ab61f26030fb211a45" translate="yes" xml:space="preserve">
          <source>RaggedTensor.row_split dtypes for the ragged FeatureList features.</source>
          <target state="translated">RaggedTensor.row_split dtypes for the ragged FeatureList features.</target>
        </trans-unit>
        <trans-unit id="865754fa750bbd4ffc39ade5f30942aa89fe099d" translate="yes" xml:space="preserve">
          <source>RaggedTensor.row_split dtypes for the ragged context features.</source>
          <target state="translated">RaggedTensor.row_split dtypes for the ragged context features.</target>
        </trans-unit>
        <trans-unit id="1e7c4a75a9d354fec5c9c1658d404c550b6e7071" translate="yes" xml:space="preserve">
          <source>RaggedTensor.value dtypes for the ragged FeatureList features.</source>
          <target state="translated">RaggedTensor.value dtypes for the ragged FeatureList features.</target>
        </trans-unit>
        <trans-unit id="37371b4e3f942e600ceb0903e36709abfffd329c" translate="yes" xml:space="preserve">
          <source>RaggedTensor.value dtypes for the ragged context features.</source>
          <target state="translated">RaggedTensor.value dtypes for the ragged context features.</target>
        </trans-unit>
        <trans-unit id="52d17b13fe6867d97b04154af8c8466e973330b8" translate="yes" xml:space="preserve">
          <source>Raise a exception to abort the process when called.</source>
          <target state="translated">Raise a exception to abort the process when called.</target>
        </trans-unit>
        <trans-unit id="ddb89693d7063e432d983cd3f9c674b3c190a616" translate="yes" xml:space="preserve">
          <source>Raises an error if the input tensor's shape does not match the specified shape. Returns the input tensor otherwise.</source>
          <target state="translated">Raises an error if the input tensor's shape does not match the specified shape. Returns the input tensor otherwise.</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="d9845bfdb1ec4d87c6427e1d41cc2b8eb91411aa" translate="yes" xml:space="preserve">
          <source>Random Ops</source>
          <target state="translated">Random Ops</target>
        </trans-unit>
        <trans-unit id="3766107e2f8317bf47c8741328c432872e6f3a85" translate="yes" xml:space="preserve">
          <source>Random seeds used to produce randomized records.</source>
          <target state="translated">Random seeds used to produce randomized records.</target>
        </trans-unit>
        <trans-unit id="377c637bd9661ce502d57ddf2a4a4d7c1881ba31" translate="yes" xml:space="preserve">
          <source>RandomGamma</source>
          <target state="translated">RandomGamma</target>
        </trans-unit>
        <trans-unit id="bbe2955a399ec97c8489007c2544840721c5a310" translate="yes" xml:space="preserve">
          <source>RandomNormal</source>
          <target state="translated">RandomNormal</target>
        </trans-unit>
        <trans-unit id="25d2695e62b785379f0e794f628f71773ef81e98" translate="yes" xml:space="preserve">
          <source>RandomPoissonV2</source>
          <target state="translated">RandomPoissonV2</target>
        </trans-unit>
        <trans-unit id="c066f63c3c6ab4bce1b47d9ae65bb34129e7656d" translate="yes" xml:space="preserve">
          <source>RandomShuffle</source>
          <target state="translated">RandomShuffle</target>
        </trans-unit>
        <trans-unit id="e5e6c72e338b0bdbdcd94ed6e1fa34d607b6b4d7" translate="yes" xml:space="preserve">
          <source>RandomShuffleQueue</source>
          <target state="translated">RandomShuffleQueue</target>
        </trans-unit>
        <trans-unit id="90ca3e2ff35fc307eb9de2edeb27300a57ede612" translate="yes" xml:space="preserve">
          <source>RandomUniform</source>
          <target state="translated">RandomUniform</target>
        </trans-unit>
        <trans-unit id="32ef994bcc3528b1756e27731bc78a3bb8bf09d8" translate="yes" xml:space="preserve">
          <source>RandomUniformInt</source>
          <target state="translated">RandomUniformInt</target>
        </trans-unit>
        <trans-unit id="f85e2f51067ecee6529ba3eb3e42b379423d299b" translate="yes" xml:space="preserve">
          <source>Randomly shuffles a tensor along its first dimension.</source>
          <target state="translated">첫 번째 치수를 따라 임의로 텐서를 섞습니다.</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="2c856c3bb3153647323bf0a737cb06ae5e289c74" translate="yes" xml:space="preserve">
          <source>RangeGiven</source>
          <target state="translated">RangeGiven</target>
        </trans-unit>
        <trans-unit id="794f65e9d2064ab6bfab0fa351dcff2763db23d3" translate="yes" xml:space="preserve">
          <source>Ratio</source>
          <target state="translated">Ratio</target>
        </trans-unit>
        <trans-unit id="7bb99667b41dfb582d22b4513e3c372351e27796" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/math#Segmentation&quot;&gt;the section on segmentation&lt;/a&gt; for an explanation of segments.</source>
          <target state="translated">&lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/math#Segmentation&quot;&gt;세그먼트&lt;/a&gt; 에 대한 설명은 세그먼트에 대한 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="270f9190b747082f7aa69ee67ba384de461ed9f5" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/sparse#Segmentation&quot;&gt;the section on segmentation&lt;/a&gt; for an explanation of segments.</source>
          <target state="translated">Read &lt;a href=&quot;https://tensorflow.org/api_docs/python/tf/sparse#Segmentation&quot;&gt;the section on segmentation&lt;/a&gt; for an explanation of segments.</target>
        </trans-unit>
        <trans-unit id="6d2db1c6f299947b27cfc396fd481daa5b0b71e9" translate="yes" xml:space="preserve">
          <source>Read an element from the &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Read an element from the &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7312ec6bfd5afb3a4e15b6f71e544179c83a122" translate="yes" xml:space="preserve">
          <source>Read an element from the &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Read an element from the &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af05943e6dda668dc7dc95398904555b538bc22f" translate="yes" xml:space="preserve">
          <source>Read an element from the &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Read an element from the &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; into output &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fd01a502310e8357802950d90a33ad1c88b094" translate="yes" xml:space="preserve">
          <source>ReadFile</source>
          <target state="translated">ReadFile</target>
        </trans-unit>
        <trans-unit id="42a62e98033ab30022aa06bc6ce3e9b12de4807d" translate="yes" xml:space="preserve">
          <source>ReaderNumRecordsProduced</source>
          <target state="translated">ReaderNumRecordsProduced</target>
        </trans-unit>
        <trans-unit id="e7c4e873ef4f48ebd054290bef87800d110153e9" translate="yes" xml:space="preserve">
          <source>ReaderNumWorkUnitsCompleted</source>
          <target state="translated">ReaderNumWorkUnitsCompleted</target>
        </trans-unit>
        <trans-unit id="40ee8a562b8a99dd60f4c25f4d9dab9e94554737" translate="yes" xml:space="preserve">
          <source>ReaderRead</source>
          <target state="translated">ReaderRead</target>
        </trans-unit>
        <trans-unit id="4bb7afbb84fdc5958fd3e299fa2865113a6d1aa4" translate="yes" xml:space="preserve">
          <source>ReaderReadUpTo</source>
          <target state="translated">ReaderReadUpTo</target>
        </trans-unit>
        <trans-unit id="b337807017d1e5a9e27b6d3e3382032a8a826283" translate="yes" xml:space="preserve">
          <source>ReaderReset</source>
          <target state="translated">ReaderReset</target>
        </trans-unit>
        <trans-unit id="26f36e1a4a1f7bab69ece656e37aaaf72c87b80f" translate="yes" xml:space="preserve">
          <source>ReaderRestoreState</source>
          <target state="translated">ReaderRestoreState</target>
        </trans-unit>
        <trans-unit id="3c5553d6b98c07eff3e3edc469c51ee4942d930e" translate="yes" xml:space="preserve">
          <source>ReaderSerializeState</source>
          <target state="translated">ReaderSerializeState</target>
        </trans-unit>
        <trans-unit id="f960af4d787f31c7bdaf2337a9da5c1dbc9481f6" translate="yes" xml:space="preserve">
          <source>Reads a tensor stored in one or several files. If there are several files (for instance because a tensor was saved as slices), &lt;code&gt;file_pattern&lt;/code&gt; may contain wildcard symbols (&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt;) in the filename portion only, not in the directory portion.</source>
          <target state="translated">Reads a tensor stored in one or several files. If there are several files (for instance because a tensor was saved as slices), &lt;code&gt;file_pattern&lt;/code&gt; may contain wildcard symbols ( &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; ) in the filename portion only, not in the directory portion.</target>
        </trans-unit>
        <trans-unit id="e1a5a364b8ba9f0d10ad50b5109800350e1064c4" translate="yes" xml:space="preserve">
          <source>Reads and outputs the entire contents of the input filename.</source>
          <target state="translated">입력 파일 이름의 전체 내용을 읽고 출력합니다.</target>
        </trans-unit>
        <trans-unit id="8e16e5b2c446aea3b142d9320755f82932fc2cdf" translate="yes" xml:space="preserve">
          <source>Real</source>
          <target state="translated">Real</target>
        </trans-unit>
        <trans-unit id="60df0b98c4886733e5f5cff9d65f57576be2d172" translate="yes" xml:space="preserve">
          <source>RealDiv</source>
          <target state="translated">RealDiv</target>
        </trans-unit>
        <trans-unit id="eea2df8ac2bb85a68b87dccd35351eef5237d72a" translate="yes" xml:space="preserve">
          <source>Rearranges (permutes) data from batch into blocks of spatial data, followed by cropping. This is the reverse transformation of SpaceToBatch. More specifically, this op outputs a copy of the input tensor where values from the &lt;code&gt;batch&lt;/code&gt; dimension are moved in spatial blocks to the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions, followed by cropping along the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions.</source>
          <target state="translated">배치에서 공간 데이터 블록으로 데이터를 재 배열 (순열) 한 다음 잘라냅니다. 이것은 SpaceToBatch의 역변환입니다. 구체적으로는,이 연산은 입력의 값 텐서의 카피 출력 &lt;code&gt;batch&lt;/code&gt; 치수는 공간을 블록으로 이동 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 치수는 다음에 따라 잘라내어 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 치수.</target>
        </trans-unit>
        <trans-unit id="338cce58d5eb23fb57650627ce326ba5e68dc2fb" translate="yes" xml:space="preserve">
          <source>Rearranges data from depth into blocks of spatial data. This is the reverse transformation of SpaceToDepth. More specifically, this op outputs a copy of the input tensor where values from the &lt;code&gt;depth&lt;/code&gt; dimension are moved in spatial blocks to the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; dimensions. The attr &lt;code&gt;block_size&lt;/code&gt; indicates the input block size and how the data is moved.</source>
          <target state="translated">깊이에서 공간 데이터 블록으로 데이터를 재정렬합니다. 이것은 SpaceToDepth의 역변환입니다. 보다 구체적으로,이 op는 &lt;code&gt;depth&lt;/code&gt; 차원의 값 이 공간 블록에서 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 차원 으로 이동 되는 입력 텐서의 사본을 출력 합니다. attr &lt;code&gt;block_size&lt;/code&gt; 는 입력 블록 크기와 데이터 이동 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2c5c4dec8b065db12059a0150ed730dfbfd66ebd" translate="yes" xml:space="preserve">
          <source>Reciprocal</source>
          <target state="translated">Reciprocal</target>
        </trans-unit>
        <trans-unit id="daaf95ca1df35445280818f0a91639852f0245b8" translate="yes" xml:space="preserve">
          <source>RecordInput</source>
          <target state="translated">RecordInput</target>
        </trans-unit>
        <trans-unit id="da793630fe087f7b5fce8452c7b098c69d0cf610" translate="yes" xml:space="preserve">
          <source>ReduceAll</source>
          <target state="translated">ReduceAll</target>
        </trans-unit>
        <trans-unit id="fbad7e6f2d50c05514bd4c5aed68ddec2138dbc6" translate="yes" xml:space="preserve">
          <source>ReduceAny</source>
          <target state="translated">ReduceAny</target>
        </trans-unit>
        <trans-unit id="6a8c3d480e47fd7c8362e2c53ac5446b7e9cedbd" translate="yes" xml:space="preserve">
          <source>ReduceJoin</source>
          <target state="translated">ReduceJoin</target>
        </trans-unit>
        <trans-unit id="4bc0c97b8babb3666b6e0fc2dfe98a69adc85a06" translate="yes" xml:space="preserve">
          <source>ReduceMax</source>
          <target state="translated">ReduceMax</target>
        </trans-unit>
        <trans-unit id="a75f541b028c90eea33478727972aee2af2a0c6e" translate="yes" xml:space="preserve">
          <source>ReduceMean</source>
          <target state="translated">ReduceMean</target>
        </trans-unit>
        <trans-unit id="8f9beb10eb4cd2a58e73ce6db863e32c2affbf36" translate="yes" xml:space="preserve">
          <source>ReduceMin</source>
          <target state="translated">ReduceMin</target>
        </trans-unit>
        <trans-unit id="cc3a44c8515ec9ce723d63b5853fb5f76d15554e" translate="yes" xml:space="preserve">
          <source>ReduceProd</source>
          <target state="translated">ReduceProd</target>
        </trans-unit>
        <trans-unit id="08074cb42b247d0f55bf74672db408c7784125d0" translate="yes" xml:space="preserve">
          <source>ReduceSum</source>
          <target state="translated">ReduceSum</target>
        </trans-unit>
        <trans-unit id="cc9ff5d81c8b5ba39ef9d62c49210c9ff3ccb4d8" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;input&lt;/code&gt; along the dimensions given in &lt;code&gt;axis&lt;/code&gt;. Unless &lt;code&gt;keep_dims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;keep_dims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">Reduces &lt;code&gt;input&lt;/code&gt; along the dimensions given in &lt;code&gt;axis&lt;/code&gt; . Unless &lt;code&gt;keep_dims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt; . If &lt;code&gt;keep_dims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</target>
        </trans-unit>
        <trans-unit id="bb3741a40b5b7912f512cf417c7e0a350d1f599b" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;sp_input&lt;/code&gt; along the dimensions given in &lt;code&gt;reduction_axes&lt;/code&gt;. Unless &lt;code&gt;keep_dims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;reduction_axes&lt;/code&gt;. If &lt;code&gt;keep_dims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</source>
          <target state="translated">Reduces &lt;code&gt;sp_input&lt;/code&gt; along the dimensions given in &lt;code&gt;reduction_axes&lt;/code&gt; . Unless &lt;code&gt;keep_dims&lt;/code&gt; is true, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;reduction_axes&lt;/code&gt; . If &lt;code&gt;keep_dims&lt;/code&gt; is true, the reduced dimensions are retained with length 1.</target>
        </trans-unit>
        <trans-unit id="33f6f42469b274e2162f75f436b2ac7bd5c58ff6" translate="yes" xml:space="preserve">
          <source>Reduces sparse updates into a variable reference using the &lt;code&gt;max&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 연산을 사용하여 희소 업데이트를 변수 참조로 줄 입니다.</target>
        </trans-unit>
        <trans-unit id="a98876ad2d7ca4ab81bfa5e519e1343c8042b034" translate="yes" xml:space="preserve">
          <source>Reduces sparse updates into a variable reference using the &lt;code&gt;min&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 작업을 사용하여 희소 업데이트를 변수 참조로 줄 입니다.</target>
        </trans-unit>
        <trans-unit id="47e2424e7d1be9cd6fbded7b6e4fa7f9d155eb75" translate="yes" xml:space="preserve">
          <source>ReductionType</source>
          <target state="translated">ReductionType</target>
        </trans-unit>
        <trans-unit id="396eec80e21a3025bd6202213aa54f1eb86c89cf" translate="yes" xml:space="preserve">
          <source>RefCountIsOne</source>
          <target state="translated">RefCountIsOne</target>
        </trans-unit>
        <trans-unit id="d0d4b3372d812ba664495c5656e0a2abb0131649" translate="yes" xml:space="preserve">
          <source>RefNextIteration</source>
          <target state="translated">RefNextIteration</target>
        </trans-unit>
        <trans-unit id="98c37f1c52cc1269c53f3e72fb9ed10686343903" translate="yes" xml:space="preserve">
          <source>RefSelect</source>
          <target state="translated">RefSelect</target>
        </trans-unit>
        <trans-unit id="9c0c50dea4538e0f620672527f9336093dd816cd" translate="yes" xml:space="preserve">
          <source>RefSwitch</source>
          <target state="translated">RefSwitch</target>
        </trans-unit>
        <trans-unit id="2d8c3210446234b1101f33e7f93a8856886a5b89" translate="yes" xml:space="preserve">
          <source>Refer to the following article for more information on base64 format: en.wikipedia.org/wiki/Base64. Base64 strings may have padding with '=' at the end so that the encoded has length multiple of 4. See Padding section of the link above.</source>
          <target state="translated">base64 형식에 대한 자세한 내용은 다음 문서를 참조하십시오. en.wikipedia.org/wiki/Base64 인코딩 된 길이가 4의 배수가되도록 Base64 문자열의 끝에 '='가 채워질 수 있습니다. 위 링크의 패딩 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bef5c4750f549d09ebe76ecb20fd87567f115aa5" translate="yes" xml:space="preserve">
          <source>RegexFullMatch</source>
          <target state="translated">RegexFullMatch</target>
        </trans-unit>
        <trans-unit id="c19825501b30b6375f2c41829190a00297af9e22" translate="yes" xml:space="preserve">
          <source>RegexReplace</source>
          <target state="translated">RegexReplace</target>
        </trans-unit>
        <trans-unit id="a7529549284105f617aeaf1ad12488fe1edee05f" translate="yes" xml:space="preserve">
          <source>Reinterpret the bytes of a string as a vector of numbers.</source>
          <target state="translated">Reinterpret the bytes of a string as a vector of numbers.</target>
        </trans-unit>
        <trans-unit id="cd5af7344f50420161f8f096f94794e6fe1580c6" translate="yes" xml:space="preserve">
          <source>Release notes</source>
          <target state="translated">릴리즈 노트</target>
        </trans-unit>
        <trans-unit id="fd0aeab0708161fda427865e5c3014d98bad07d0" translate="yes" xml:space="preserve">
          <source>ReleaseCallable</source>
          <target state="translated">ReleaseCallable</target>
        </trans-unit>
        <trans-unit id="74230f0cb6ae4d44c2b0b3dc54e10ded040e4e48" translate="yes" xml:space="preserve">
          <source>Releases resources associated with the given &lt;code&gt;handle&lt;/code&gt; in this session.</source>
          <target state="translated">Releases resources associated with the given &lt;code&gt;handle&lt;/code&gt; in this session.</target>
        </trans-unit>
        <trans-unit id="0fd46eeab7d7a32d1a86f973eb5ed74cbdda8c16" translate="yes" xml:space="preserve">
          <source>Relu</source>
          <target state="translated">Relu</target>
        </trans-unit>
        <trans-unit id="be58dbde26db1a794b5fb87f87045fd8f0081159" translate="yes" xml:space="preserve">
          <source>Relu6</source>
          <target state="translated">Relu6</target>
        </trans-unit>
        <trans-unit id="8dec058e7addf573f13e178178ef71f0168af54d" translate="yes" xml:space="preserve">
          <source>Render the first &lt;code&gt;max_entries&lt;/code&gt; values in &lt;code&gt;*this&lt;/code&gt; into a string.</source>
          <target state="translated">Render the first &lt;code&gt;max_entries&lt;/code&gt; values in &lt;code&gt;*this&lt;/code&gt; into a string.</target>
        </trans-unit>
        <trans-unit id="ce0aa0e59a239fc6ec0dd782aa697d4864e381a9" translate="yes" xml:space="preserve">
          <source>Reordering does not affect the shape of the SparseTensor.</source>
          <target state="translated">Reordering does not affect the shape of the SparseTensor.</target>
        </trans-unit>
        <trans-unit id="8b06553e718320f965b2b1feeed3e7c90413d7c4" translate="yes" xml:space="preserve">
          <source>Reorders a SparseTensor into the canonical, row-major ordering.</source>
          <target state="translated">Reorders a SparseTensor into the canonical, row-major ordering.</target>
        </trans-unit>
        <trans-unit id="e46d8bee78f5bfdef86cb3ab514bf11dee53afe2" translate="yes" xml:space="preserve">
          <source>ReplaceControlCharacters</source>
          <target state="translated">ReplaceControlCharacters</target>
        </trans-unit>
        <trans-unit id="0da346aeed6e84928eb57c47e5057ea24e5c760b" translate="yes" xml:space="preserve">
          <source>ReplaceGlobal</source>
          <target state="translated">ReplaceGlobal</target>
        </trans-unit>
        <trans-unit id="72eb3ca3b88dc8295801020492fc3ef1d82c4be2" translate="yes" xml:space="preserve">
          <source>ReplacementChar</source>
          <target state="translated">ReplacementChar</target>
        </trans-unit>
        <trans-unit id="e5bb1876d9e33d466275cf91a4eef07fde898ac6" translate="yes" xml:space="preserve">
          <source>Replaces matches of the &lt;code&gt;pattern&lt;/code&gt; regular expression in &lt;code&gt;input&lt;/code&gt; with the replacement string provided in &lt;code&gt;rewrite&lt;/code&gt;.</source>
          <target state="translated">Replaces matches of the &lt;code&gt;pattern&lt;/code&gt; regular expression in &lt;code&gt;input&lt;/code&gt; with the replacement string provided in &lt;code&gt;rewrite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e752f2f64f18caa926e9f3c931623036f1e8bbf9" translate="yes" xml:space="preserve">
          <source>Represents a node in the computation graph.</source>
          <target state="translated">Represents a node in the computation graph.</target>
        </trans-unit>
        <trans-unit id="aae92cbef62743164006370b64061fd2159ea040" translate="yes" xml:space="preserve">
          <source>Represents a tensor value produced by an &lt;a href=&quot;../class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value produced by an &lt;a href=&quot;../class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f88ca7fffa6764ef79b71b96746dc5c0c7eea353" translate="yes" xml:space="preserve">
          <source>Represents a tensor value produced by an &lt;a href=&quot;class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value produced by an &lt;a href=&quot;class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="77f0ac68471911dab03199662cd4371af8e34ca5" translate="yes" xml:space="preserve">
          <source>Represents a tensor value produced by an &lt;a href=&quot;operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value produced by an &lt;a href=&quot;operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a200ce90a07e6b74b0bd937d7e9b9107046e7efe" translate="yes" xml:space="preserve">
          <source>Represents a tensor value that can be used as an operand to an &lt;a href=&quot;../class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value that can be used as an operand to an &lt;a href=&quot;../class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a04a069ac57281929f7171b7695b06616cc59b2b" translate="yes" xml:space="preserve">
          <source>Represents a tensor value that can be used as an operand to an &lt;a href=&quot;class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value that can be used as an operand to an &lt;a href=&quot;class/tensorflow/operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b0db3424569671616b429bbaa4c23d832291fd66" translate="yes" xml:space="preserve">
          <source>Represents a tensor value that can be used as an operand to an &lt;a href=&quot;operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</source>
          <target state="translated">Represents a tensor value that can be used as an operand to an &lt;a href=&quot;operation#classtensorflow_1_1_operation&quot;&gt;Operation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="337400449fedc5f7a06c1c6882e174b1ed633f25" translate="yes" xml:space="preserve">
          <source>Represents an n-dimensional array of values.</source>
          <target state="translated">Represents an n-dimensional array of values.</target>
        </trans-unit>
        <trans-unit id="b12d35e3265695b11da07ca9c53aa60a60637cab" translate="yes" xml:space="preserve">
          <source>RequantizationRange</source>
          <target state="translated">RequantizationRange</target>
        </trans-unit>
        <trans-unit id="7fb569179f08d47e67541aa684b676d7d00b9627" translate="yes" xml:space="preserve">
          <source>Requantize</source>
          <target state="translated">Requantize</target>
        </trans-unit>
        <trans-unit id="273904bb695ea86dd876184b47660cf43e530cb1" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;updates.shape = indices.shape + ref.shape[1:]&lt;/code&gt; or &lt;code&gt;updates.shape = []&lt;/code&gt;.</source>
          <target state="translated">필요 &lt;code&gt;updates.shape = indices.shape + ref.shape[1:]&lt;/code&gt; 또는 &lt;code&gt;updates.shape = []&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea290bd8be711d3201142657b1c7ada3bfc64dab" translate="yes" xml:space="preserve">
          <source>Reshape &lt;code&gt;input&lt;/code&gt; to &lt;code&gt;reshaped&lt;/code&gt; of shape: [block_shape[0], ..., block_shape[M-1], batch / prod(block_shape), input_shape[1], ..., input_shape[N-1]]</source>
          <target state="translated">형태 를 &lt;code&gt;reshaped&lt;/code&gt; 하여 &lt;code&gt;input&lt;/code&gt; 형태 변경 : [block_shape [0], ..., block_shape [M-1], batch / prod (block_shape), input_shape [1], ..., input_shape [N-1]]</target>
        </trans-unit>
        <trans-unit id="b5b1c1ca288c56b839b939dab4cb2d481eea0d3c" translate="yes" xml:space="preserve">
          <source>Reshape &lt;code&gt;permuted&lt;/code&gt; to produce &lt;code&gt;reshaped_permuted&lt;/code&gt; of shape [batch / prod(block_shape),input_shape[1] * block_shape[0], ..., input_shape[M] * block_shape[M-1],input_shape[M+1], ..., input_shape[N-1]]</source>
          <target state="translated">Reshape &lt;code&gt;permuted&lt;/code&gt; to produce &lt;code&gt;reshaped_permuted&lt;/code&gt; of shape [batch / prod(block_shape),input_shape[1] * block_shape[0], ..., input_shape[M] * block_shape[M-1],input_shape[M+1], ..., input_shape[N-1]]</target>
        </trans-unit>
        <trans-unit id="c19269daac7d1c584330b1864e44249d21decc1a" translate="yes" xml:space="preserve">
          <source>Reshapes a SparseTensor to represent values in a new dense shape.</source>
          <target state="translated">Reshapes a SparseTensor to represent values in a new dense shape.</target>
        </trans-unit>
        <trans-unit id="9b71253781634ed03fb12c5d03ed05ab3ee23830" translate="yes" xml:space="preserve">
          <source>Reshapes a quantized tensor as per the Reshape op.</source>
          <target state="translated">Reshapes a quantized tensor as per the Reshape op.</target>
        </trans-unit>
        <trans-unit id="9c7d7697857d7adeb9a1e8d26fa311f55e7a412e" translate="yes" xml:space="preserve">
          <source>Reshaping does not affect the order of values in the SparseTensor.</source>
          <target state="translated">Reshaping does not affect the order of values in the SparseTensor.</target>
        </trans-unit>
        <trans-unit id="647f17e0b83a6bcd4a90a8351b51a34726bd8d50" translate="yes" xml:space="preserve">
          <source>Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using area interpolation.</source>
          <target state="translated">크기 조정 &lt;code&gt;images&lt;/code&gt; 에 &lt;code&gt;size&lt;/code&gt; 영역 보간을 사용하여.</target>
        </trans-unit>
        <trans-unit id="8649a846eb9c2b9760f61baf534f17fc5993832b" translate="yes" xml:space="preserve">
          <source>Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using bicubic interpolation.</source>
          <target state="translated">Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using bicubic interpolation.</target>
        </trans-unit>
        <trans-unit id="09c2c8979e17d49d3d9991d420485ecc4f65ba16" translate="yes" xml:space="preserve">
          <source>Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using bilinear interpolation.</source>
          <target state="translated">Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using bilinear interpolation.</target>
        </trans-unit>
        <trans-unit id="655f7ff3706ec6b39bcaa5341728cc5e7deceb50" translate="yes" xml:space="preserve">
          <source>Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using nearest neighbor interpolation.</source>
          <target state="translated">Resize &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using nearest neighbor interpolation.</target>
        </trans-unit>
        <trans-unit id="eca0246269b0d2aa47cf0be2e75cf02cf12012c0" translate="yes" xml:space="preserve">
          <source>Resize quantized &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using quantized bilinear interpolation.</source>
          <target state="translated">Resize quantized &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using quantized bilinear interpolation.</target>
        </trans-unit>
        <trans-unit id="c7302d26d8f590f3c110dc5bdb71f99ff73a99c9" translate="yes" xml:space="preserve">
          <source>ResizeAlignCorners</source>
          <target state="translated">ResizeAlignCorners</target>
        </trans-unit>
        <trans-unit id="0aeba64552ea41d069b31102622238970618d1c0" translate="yes" xml:space="preserve">
          <source>ResizeArea</source>
          <target state="translated">ResizeArea</target>
        </trans-unit>
        <trans-unit id="513f43d71739681754bec7a9c4cce9b968754392" translate="yes" xml:space="preserve">
          <source>ResizeBicubic</source>
          <target state="translated">ResizeBicubic</target>
        </trans-unit>
        <trans-unit id="fead317aca6e4b3dc7b19ecd22424ec9bcda862b" translate="yes" xml:space="preserve">
          <source>ResizeBilinear</source>
          <target state="translated">ResizeBilinear</target>
        </trans-unit>
        <trans-unit id="4b28c2298b14f36e8fab3878874dfdf85081ece6" translate="yes" xml:space="preserve">
          <source>ResizeNearestNeighbor</source>
          <target state="translated">ResizeNearestNeighbor</target>
        </trans-unit>
        <trans-unit id="139c8885b7100769ba055c7b494523e221448343" translate="yes" xml:space="preserve">
          <source>ResourceApplyAdadelta</source>
          <target state="translated">ResourceApplyAdadelta</target>
        </trans-unit>
        <trans-unit id="42d12defeac5942efc5184206fae7ae0fe8a314d" translate="yes" xml:space="preserve">
          <source>ResourceApplyAdagrad</source>
          <target state="translated">ResourceApplyAdagrad</target>
        </trans-unit>
        <trans-unit id="1be40485086eed80624f39c36ca7b106ed933cbb" translate="yes" xml:space="preserve">
          <source>ResourceApplyAdagradDA</source>
          <target state="translated">ResourceApplyAdagradDA</target>
        </trans-unit>
        <trans-unit id="6944de129646e4be2be99b7e255eb8cf37422021" translate="yes" xml:space="preserve">
          <source>ResourceApplyAdam</source>
          <target state="translated">ResourceApplyAdam</target>
        </trans-unit>
        <trans-unit id="87bcf98846c29c18108a5d5d9728e4c609f3c085" translate="yes" xml:space="preserve">
          <source>ResourceApplyAdamWithAmsgrad</source>
          <target state="translated">ResourceApplyAdamWithAmsgrad</target>
        </trans-unit>
        <trans-unit id="9d0036ca350a1728c9aae161420a5fd7a86b4c2e" translate="yes" xml:space="preserve">
          <source>ResourceApplyAddSign</source>
          <target state="translated">ResourceApplyAddSign</target>
        </trans-unit>
        <trans-unit id="929f5f65553c783988a0f4f7e21de147f13b5b61" translate="yes" xml:space="preserve">
          <source>ResourceApplyCenteredRMSProp</source>
          <target state="translated">ResourceApplyCenteredRMSProp</target>
        </trans-unit>
        <trans-unit id="91f23d6b05b7958d4f4fd41ea2a7409579cf27af" translate="yes" xml:space="preserve">
          <source>ResourceApplyFtrl</source>
          <target state="translated">ResourceApplyFtrl</target>
        </trans-unit>
        <trans-unit id="8ab8c140262c65c555ce26de4c8d07484d0c7a07" translate="yes" xml:space="preserve">
          <source>ResourceApplyFtrlV2</source>
          <target state="translated">ResourceApplyFtrlV2</target>
        </trans-unit>
        <trans-unit id="87a91db1743806afa092be6611a9f7ba83adc2d3" translate="yes" xml:space="preserve">
          <source>ResourceApplyGradientDescent</source>
          <target state="translated">ResourceApplyGradientDescent</target>
        </trans-unit>
        <trans-unit id="f0df5972b04d6b64d6e787f5632ae2e9e113bf75" translate="yes" xml:space="preserve">
          <source>ResourceApplyKerasMomentum</source>
          <target state="translated">ResourceApplyKerasMomentum</target>
        </trans-unit>
        <trans-unit id="84e3bfe1c46dcf84f55b7f4dee3bf725eea55301" translate="yes" xml:space="preserve">
          <source>ResourceApplyMomentum</source>
          <target state="translated">ResourceApplyMomentum</target>
        </trans-unit>
        <trans-unit id="6e4faecb876a5498a805d1e47a24ae3b177caa79" translate="yes" xml:space="preserve">
          <source>ResourceApplyPowerSign</source>
          <target state="translated">ResourceApplyPowerSign</target>
        </trans-unit>
        <trans-unit id="77864680744d68eee942d8b55ed730f91d99daba" translate="yes" xml:space="preserve">
          <source>ResourceApplyProximalAdagrad</source>
          <target state="translated">ResourceApplyProximalAdagrad</target>
        </trans-unit>
        <trans-unit id="e91288d186b0fc1697da194e07ef6ca3a4833bcd" translate="yes" xml:space="preserve">
          <source>ResourceApplyProximalGradientDescent</source>
          <target state="translated">ResourceApplyProximalGradientDescent</target>
        </trans-unit>
        <trans-unit id="03b50727dee351aedc02a237f8b73004b85d159a" translate="yes" xml:space="preserve">
          <source>ResourceApplyRMSProp</source>
          <target state="translated">ResourceApplyRMSProp</target>
        </trans-unit>
        <trans-unit id="01e171efd4c1ff5fce466da9a356ca6c5b8f37a0" translate="yes" xml:space="preserve">
          <source>ResourceCountUpTo</source>
          <target state="translated">ResourceCountUpTo</target>
        </trans-unit>
        <trans-unit id="881eca3720b1d540428f65c7e3cb5fa99975be47" translate="yes" xml:space="preserve">
          <source>ResourceScatterNdAdd</source>
          <target state="translated">ResourceScatterNdAdd</target>
        </trans-unit>
        <trans-unit id="9bfbc73d9577321f57b3090d3d6c6565c7ff1666" translate="yes" xml:space="preserve">
          <source>ResourceScatterNdMax</source>
          <target state="translated">ResourceScatterNdMax</target>
        </trans-unit>
        <trans-unit id="4ec238271fd166cd3d3c3c65bb16e29a8e5ccdbb" translate="yes" xml:space="preserve">
          <source>ResourceScatterNdMin</source>
          <target state="translated">ResourceScatterNdMin</target>
        </trans-unit>
        <trans-unit id="559664097eb4665d5649f2094eb58901fc3be0ff" translate="yes" xml:space="preserve">
          <source>ResourceScatterNdSub</source>
          <target state="translated">ResourceScatterNdSub</target>
        </trans-unit>
        <trans-unit id="4e2c3a235a4fd55c21159ac96506971af17cced9" translate="yes" xml:space="preserve">
          <source>ResourceScatterNdUpdate</source>
          <target state="translated">ResourceScatterNdUpdate</target>
        </trans-unit>
        <trans-unit id="df38bf06e0490789ae5a7bbeb99cce724e8fa70b" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyAdadelta</source>
          <target state="translated">ResourceSparseApplyAdadelta</target>
        </trans-unit>
        <trans-unit id="9505a9f899cfc7bd89a6e07702f200a525da4fa6" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyAdagrad</source>
          <target state="translated">ResourceSparseApplyAdagrad</target>
        </trans-unit>
        <trans-unit id="ab7224275b14b82d65f1c705894fb0e65327920c" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyAdagradDA</source>
          <target state="translated">ResourceSparseApplyAdagradDA</target>
        </trans-unit>
        <trans-unit id="aa507ab568ecdc56f144f90641bee483c2de00e0" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyCenteredRMSProp</source>
          <target state="translated">ResourceSparseApplyCenteredRMSProp</target>
        </trans-unit>
        <trans-unit id="f2a3d1c4f36848eed247f5f9bb90325672a1cfe4" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyFtrl</source>
          <target state="translated">ResourceSparseApplyFtrl</target>
        </trans-unit>
        <trans-unit id="f5ba2a02848303e85bb58a7d504a586ab43860db" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyFtrlV2</source>
          <target state="translated">ResourceSparseApplyFtrlV2</target>
        </trans-unit>
        <trans-unit id="cd291ab894c5ab4e950227ac8704584b4e7f0a87" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyKerasMomentum</source>
          <target state="translated">ResourceSparseApplyKerasMomentum</target>
        </trans-unit>
        <trans-unit id="4aa8f7508ddbf5bfe0c955a08d905d46928b786f" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyMomentum</source>
          <target state="translated">ResourceSparseApplyMomentum</target>
        </trans-unit>
        <trans-unit id="99e017342b828ed00b599d4a9cd3125d3b3763d9" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyProximalAdagrad</source>
          <target state="translated">ResourceSparseApplyProximalAdagrad</target>
        </trans-unit>
        <trans-unit id="5faa7ddd82f1ee66061096f9b253b3a43bd60bdf" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyProximalGradientDescent</source>
          <target state="translated">ResourceSparseApplyProximalGradientDescent</target>
        </trans-unit>
        <trans-unit id="cf3a9ef21e7a967da92ceb3750151327cfca7551" translate="yes" xml:space="preserve">
          <source>ResourceSparseApplyRMSProp</source>
          <target state="translated">ResourceSparseApplyRMSProp</target>
        </trans-unit>
        <trans-unit id="3cbe6d6b9a8d1596bb5bca12e14d81c9e108a1a3" translate="yes" xml:space="preserve">
          <source>Restore</source>
          <target state="translated">Restore</target>
        </trans-unit>
        <trans-unit id="e90c568de582b75b3c31a6d41e5e646dffef4bbf" translate="yes" xml:space="preserve">
          <source>RestoreSlice</source>
          <target state="translated">RestoreSlice</target>
        </trans-unit>
        <trans-unit id="d27d49d3fb2e683e97cc22d1d947e3c1f3331df8" translate="yes" xml:space="preserve">
          <source>RestoreV2</source>
          <target state="translated">RestoreV2</target>
        </trans-unit>
        <trans-unit id="b7c9c22669807f20d6ffee86db310806976e1d24" translate="yes" xml:space="preserve">
          <source>Restores a tensor from checkpoint files.</source>
          <target state="translated">Restores a tensor from checkpoint files.</target>
        </trans-unit>
        <trans-unit id="ae83e786c97c87a843d39756a381a7ee7e8b337d" translate="yes" xml:space="preserve">
          <source>Restores tensors from a V2 checkpoint.</source>
          <target state="translated">Restores tensors from a V2 checkpoint.</target>
        </trans-unit>
        <trans-unit id="f5d847e45e70d80e4210a8fa7f3bdf9a1fc73b24" translate="yes" xml:space="preserve">
          <source>Return a new scope.</source>
          <target state="translated">Return a new scope.</target>
        </trans-unit>
        <trans-unit id="450093e3c57c78cbe42d326131bd3c238070885c" translate="yes" xml:space="preserve">
          <source>Return a tensor with the same shape and contents as the input tensor or value.</source>
          <target state="translated">Return a tensor with the same shape and contents as the input tensor or value.</target>
        </trans-unit>
        <trans-unit id="3e28fc146b28c449b637cb4edcf06c8f0c7f11f7" translate="yes" xml:space="preserve">
          <source>Return a unique name, using default_name if an op name has not been specified.</source>
          <target state="translated">Return a unique name, using default_name if an op name has not been specified.</target>
        </trans-unit>
        <trans-unit id="826e148b4b1a21582452c5118385910771325a85" translate="yes" xml:space="preserve">
          <source>Return histogram of values.</source>
          <target state="translated">히스토그램 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1cdc9dd01646bc34741d3d090f4462f484d085eb" translate="yes" xml:space="preserve">
          <source>Return substrings from &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</source>
          <target state="translated">Return substrings from &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</target>
        </trans-unit>
        <trans-unit id="467306c83ba86f6737ab84dc7be1e0701de711b5" translate="yes" xml:space="preserve">
          <source>Return substrings from &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</source>
          <target state="translated">Return substrings from &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</target>
        </trans-unit>
        <trans-unit id="546d3928c2abc3ce15595817fe8db7cc9175dd06" translate="yes" xml:space="preserve">
          <source>Return substrings from &lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</source>
          <target state="translated">Return substrings from &lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of strings.</target>
        </trans-unit>
        <trans-unit id="7b1e62070fdafccf089eb43d077a9ce87ba9e88e" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; data as a &lt;code&gt;TensorMap&lt;/code&gt; of fixed size 1: &lt;code&gt;TensorMap&lt;tensorfixedsize&gt;&amp;gt;&lt;/tensorfixedsize&gt;&lt;/code&gt;.</source>
          <target state="translated">Return the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; data as a &lt;code&gt;TensorMap&lt;/code&gt; of fixed size 1: &lt;code&gt;TensorMap&lt;tensorfixedsize&gt;&amp;gt;&lt;/tensorfixedsize&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bfb0bfefe8eae1f22d36f85b1be46dd7c3e68af" translate="yes" xml:space="preserve">
          <source>Return the shape of s0 op s1 with broadcast.</source>
          <target state="translated">Return the shape of s0 op s1 with broadcast.</target>
        </trans-unit>
        <trans-unit id="4777446ab6ab4bd33f577b44bd2366a9a1665fd5" translate="yes" xml:space="preserve">
          <source>Return the tensor data as an &lt;code&gt;Eigen::Tensor&lt;/code&gt; of the data type and a specified shape.</source>
          <target state="translated">Return the tensor data as an &lt;code&gt;Eigen::Tensor&lt;/code&gt; of the data type and a specified shape.</target>
        </trans-unit>
        <trans-unit id="95790176babff62a1444d64cec64257203bb2b40" translate="yes" xml:space="preserve">
          <source>Return the tensor data as an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the type and sizes of this &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Return the tensor data as an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the type and sizes of this &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd5eebaec150321c9cd2ebd3188b87ed9e161e1" translate="yes" xml:space="preserve">
          <source>Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the last dimension elements converted into single elements of a larger type.</source>
          <target state="translated">Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the last dimension elements converted into single elements of a larger type.</target>
        </trans-unit>
        <trans-unit id="cdb6db6320cb820183a36828909a0f55616435d7" translate="yes" xml:space="preserve">
          <source>Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the new shape specified in &lt;code&gt;new_sizes&lt;/code&gt; and cast to a new dtype &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the new shape specified in &lt;code&gt;new_sizes&lt;/code&gt; and cast to a new dtype &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e67c0c38e911641baca7dd57d3833a2a43de3150" translate="yes" xml:space="preserve">
          <source>Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the same size but a bitwise cast to the specified dtype &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Return the tensor data to an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the same size but a bitwise cast to the specified dtype &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4775b4f5cf42128cfa5bc4618de8808635c8b592" translate="yes" xml:space="preserve">
          <source>Returns (x - y)(x - y) element-wise.</source>
          <target state="translated">요소별로 (x-y) (x-y)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2987ac62c5c50a4314b9b3d6d0a66a91327058d" translate="yes" xml:space="preserve">
          <source>Returns 0 if the denominator is zero.</source>
          <target state="translated">Returns 0 if the denominator is zero.</target>
        </trans-unit>
        <trans-unit id="5b0c96b1ff7186815bf82c0c0ddd7984ba8dde3f" translate="yes" xml:space="preserve">
          <source>Returns 0 if x == 0, and x * log(y) otherwise, elementwise.</source>
          <target state="translated">x == 0이면 0을, 그렇지 않으면 요소 별 x * log (y)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49612a4e54a8b028352c8c50c2b7d8e9993c3780" translate="yes" xml:space="preserve">
          <source>Returns 0 if x == 0, and x * log1p(y) otherwise, elementwise.</source>
          <target state="translated">Returns 0 if x == 0, and x * log1p(y) otherwise, elementwise.</target>
        </trans-unit>
        <trans-unit id="ee4a21bb1f02bf62b50f9d0cf34923d9ad18551f" translate="yes" xml:space="preserve">
          <source>Returns 0 if x == 0, and x / y otherwise, elementwise.</source>
          <target state="translated">x == 0이면 0을, 그렇지 않으면 x / y를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="738a50ec39840f1bb41f18844dd6bc17c3b17cde" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; iff the parsing succeeds. If the parsing fails, the state of &lt;code&gt;*this&lt;/code&gt; is unchanged.</source>
          <target state="translated">Returns &lt;code&gt;true&lt;/code&gt; iff the parsing succeeds. If the parsing fails, the state of &lt;code&gt;*this&lt;/code&gt; is unchanged.</target>
        </trans-unit>
        <trans-unit id="9e97593b695822c8086d864cd3126fda18a0f1a0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of same shape and type as the elements of &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="translated">Returns a &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of same shape and type as the elements of &lt;code&gt;inputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e86c0aa858b23d10101570e7bd438d3bba1d19a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;StringPiece&lt;/code&gt; mapping the current tensor's buffer.</source>
          <target state="translated">Returns a &lt;code&gt;StringPiece&lt;/code&gt; mapping the current tensor's buffer.</target>
        </trans-unit>
        <trans-unit id="3632844e50fb8d056f99ff1e532e333de9c2b50b" translate="yes" xml:space="preserve">
          <source>Returns a batched diagonal tensor with a given batched diagonal values.</source>
          <target state="translated">Returns a batched diagonal tensor with a given batched diagonal values.</target>
        </trans-unit>
        <trans-unit id="57489f698ad1d27833ed8392d75e734ff7b91a60" translate="yes" xml:space="preserve">
          <source>Returns a batched diagonal tensor with given batched diagonal values.</source>
          <target state="translated">주어진 배치 대각선 값으로 배치 대각선 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3535d7d50d75398967e09b62192aeedb1b12a85e" translate="yes" xml:space="preserve">
          <source>Returns a batched matrix tensor with new batched diagonal values.</source>
          <target state="translated">새로운 배치 대각선 값이있는 배치 매트릭스 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d96d7411b2db91d8854df42be91afb14ffbd8414" translate="yes" xml:space="preserve">
          <source>Returns a diagonal tensor with a given diagonal values.</source>
          <target state="translated">주어진 대각선 값으로 대각선 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cb81489b1d484966d9df1cc94363717da64943d1" translate="yes" xml:space="preserve">
          <source>Returns a list of tensors with the same shapes and contents as the input.</source>
          <target state="translated">Returns a list of tensors with the same shapes and contents as the input.</target>
        </trans-unit>
        <trans-unit id="a4b0cebcdac7f4b4eacfe282165a965e66bdd774" translate="yes" xml:space="preserve">
          <source>Returns a new scope.</source>
          <target state="translated">Returns a new scope.</target>
        </trans-unit>
        <trans-unit id="8f29273cdc69905f15c6556c6e79bd4818abf3f0" translate="yes" xml:space="preserve">
          <source>Returns a one-hot tensor.</source>
          <target state="translated">원핫 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc63b252e21f9ba324b238f6e420a96da20d9de5" translate="yes" xml:space="preserve">
          <source>Returns a set of windows called glimpses extracted at location &lt;code&gt;offsets&lt;/code&gt; from the input tensor. If the windows only partially overlaps the inputs, the non overlapping areas will be filled with random noise.</source>
          <target state="translated">입력 텐서 에서 위치 &lt;code&gt;offsets&lt;/code&gt; 에서 추출 된 글리프라고하는 창 집합을 반환합니다 . 창이 부분적으로 입력과 겹치는 경우 겹치지 않는 영역은 임의 노이즈로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="64b3b166ebf3bc883fa48af0d7a4168f770961e7" translate="yes" xml:space="preserve">
          <source>Returns a tensor of ones with the same shape and type as x.</source>
          <target state="translated">Returns a tensor of ones with the same shape and type as x.</target>
        </trans-unit>
        <trans-unit id="33b69170a743b1f838ca99f4a60745e03fb96b72" translate="yes" xml:space="preserve">
          <source>Returns a tensor of zeros with the same shape and type as x.</source>
          <target state="translated">Returns a tensor of zeros with the same shape and type as x.</target>
        </trans-unit>
        <trans-unit id="94cf76b28cdeb9b226da59f22b92abf8a1263b39" translate="yes" xml:space="preserve">
          <source>Returns a tensor that may be mutated, but only persists within a single step.</source>
          <target state="translated">Returns a tensor that may be mutated, but only persists within a single step.</target>
        </trans-unit>
        <trans-unit id="0e060ce3a3fbe63ccef47c57ece18cf5cbfa38f9" translate="yes" xml:space="preserve">
          <source>Returns a tensor with &lt;code&gt;crops&lt;/code&gt; from the input &lt;code&gt;image&lt;/code&gt; at positions defined at the bounding box locations in &lt;code&gt;boxes&lt;/code&gt;. The cropped boxes are all resized (with bilinear or nearest neighbor interpolation) to a fixed &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt;. The result is a 4-D tensor &lt;code&gt;[num_boxes, crop_height, crop_width, depth]&lt;/code&gt;. The resizing is corner aligned. In particular, if &lt;code&gt;boxes = [[0, 0, 1, 1]]&lt;/code&gt;, the method will give identical results to using &lt;code&gt;tf.image.resize_bilinear()&lt;/code&gt; or &lt;code&gt;tf.image.resize_nearest_neighbor()&lt;/code&gt;(depends on the &lt;code&gt;method&lt;/code&gt; argument) with &lt;code&gt;align_corners=True&lt;/code&gt;.</source>
          <target state="translated">와 텐서 반환 &lt;code&gt;crops&lt;/code&gt; 입력에서 &lt;code&gt;image&lt;/code&gt; 의 경계 상자 위치에서 정의 된 위치에 &lt;code&gt;boxes&lt;/code&gt; . 자른 상자는 모두 (선형 또는 가장 가까운 이웃 보간으로) 고정 된 &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt; 가 조정 됩니다. 결과는 4 차원 텐서 &lt;code&gt;[num_boxes, crop_height, crop_width, depth]&lt;/code&gt; 입니다. 크기 조정은 모서리 정렬됩니다. 특히 &lt;code&gt;boxes = [[0, 0, 1, 1]]&lt;/code&gt; 인 &lt;code&gt;tf.image.resize_bilinear()&lt;/code&gt; 메서드는 tf_image.resize_bilinear () 또는 &lt;code&gt;tf.image.resize_nearest_neighbor()&lt;/code&gt; ( &lt;code&gt;method&lt;/code&gt; 인수 에 따라 다름 )를 &lt;code&gt;align_corners=True&lt;/code&gt; 와 함께 사용하는 것과 동일한 결과를 제공합니다. = 참 .</target>
        </trans-unit>
        <trans-unit id="61119442786f0f1b0d57cb9936383cc2993af8ee" translate="yes" xml:space="preserve">
          <source>Returns a tensor with the &lt;code&gt;k[0]&lt;/code&gt;-th to &lt;code&gt;k[1]&lt;/code&gt;-th diagonals of the batched &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">되돌와 텐서 &lt;code&gt;k[0]&lt;/code&gt; 번째는하기 &lt;code&gt;k[1]&lt;/code&gt; 배치 화의 번째 대각선 &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5d1dccf3d55c3a74c54585d81905c203cb03c1b" translate="yes" xml:space="preserve">
          <source>Returns a tensor with the contents in &lt;code&gt;diagonal&lt;/code&gt; as &lt;code&gt;k[0]&lt;/code&gt;-th to &lt;code&gt;k[1]&lt;/code&gt;-th diagonals of a matrix, with everything else padded with &lt;code&gt;padding&lt;/code&gt;. &lt;code&gt;num_rows&lt;/code&gt; and &lt;code&gt;num_cols&lt;/code&gt; specify the dimension of the innermost matrix of the output. If both are not specified, the op assumes the innermost matrix is square and infers its size from &lt;code&gt;k&lt;/code&gt; and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt;. If only one of them is specified, the op assumes the unspecified value is the smallest possible based on other criteria.</source>
          <target state="translated">수익률 내용에 텐서를 &lt;code&gt;diagonal&lt;/code&gt; 등 &lt;code&gt;k[0]&lt;/code&gt; 번째는하기 &lt;code&gt;k[1]&lt;/code&gt; 패딩과 다른 모든 매트릭스의 번째 대각선 &lt;code&gt;padding&lt;/code&gt; . &lt;code&gt;num_rows&lt;/code&gt; 및 &lt;code&gt;num_cols&lt;/code&gt; 는 출력의 가장 안쪽 행렬의 차원을 지정합니다. 둘 다 지정하지 않으면 op는 가장 안쪽의 행렬이 정사각형이고 &lt;code&gt;k&lt;/code&gt; 의 크기 와 &lt;code&gt;diagonal&lt;/code&gt; 의 가장 안쪽 차원을 추정합니다 . 둘 중 하나만 지정하면 op는 지정되지 않은 값이 다른 기준에 따라 가능한 가장 작은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="45a88ec2bccba0b1c19ca07ff9136eb845b66f52" translate="yes" xml:space="preserve">
          <source>Returns an element-wise indication of the sign of a number.</source>
          <target state="translated">숫자 부호의 요소 별 표시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5f775eada57fc26f13f49edd6ab56eeb833eec96" translate="yes" xml:space="preserve">
          <source>Returns element-wise integer closest to x.</source>
          <target state="translated">x에 가장 가까운 요소 별 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33868b67e40eaaf4b431b638e1c216fd2b5b5e92" translate="yes" xml:space="preserve">
          <source>Returns element-wise largest integer not greater than x.</source>
          <target state="translated">x보다 크지 않은 요소 별 최대 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ce0ad9570fac8d2ca40c5e2dc5b2f6b89657c3d" translate="yes" xml:space="preserve">
          <source>Returns element-wise remainder of division.</source>
          <target state="translated">Returns element-wise remainder of division.</target>
        </trans-unit>
        <trans-unit id="c819517b64cfe2e4a6fb1b14c2c0c517c02d6287" translate="yes" xml:space="preserve">
          <source>Returns element-wise smallest integer not less than x.</source>
          <target state="translated">x 이상의 요소 별 최소 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d8bcb3b286782a07da66ed4a120d94745a1a3a3" translate="yes" xml:space="preserve">
          <source>Returns immutable tensor from memory region.</source>
          <target state="translated">Returns immutable tensor from memory region.</target>
        </trans-unit>
        <trans-unit id="c493e75bfe21431a5dcd1d4009752c3f0c3ddeea" translate="yes" xml:space="preserve">
          <source>Returns nothing but an exception.</source>
          <target state="translated">Returns nothing but an exception.</target>
        </trans-unit>
        <trans-unit id="4af4daa43c89db1f9e74a2d32affb040d4a5e1bb" translate="yes" xml:space="preserve">
          <source>Returns tensor &quot;output&quot; with same shape as grad, except for dimension 0 whose value is output_dim0.</source>
          <target state="translated">Returns tensor &quot;output&quot; with same shape as grad, except for dimension 0 whose value is output_dim0.</target>
        </trans-unit>
        <trans-unit id="5ab4cdaabe72e563120b90b92932277f9d8adb1e" translate="yes" xml:space="preserve">
          <source>Returns the argument of a complex number.</source>
          <target state="translated">Returns the argument of a complex number.</target>
        </trans-unit>
        <trans-unit id="cc3894fe4eb37355e07222cbefaea9217e001ed2" translate="yes" xml:space="preserve">
          <source>Returns the batched diagonal part of a batched tensor.</source>
          <target state="translated">배치 텐서의 배치 대각선 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66b9a67ff7af926ca025a4e38d7b617486094ba4" translate="yes" xml:space="preserve">
          <source>Returns the complex conjugate of a complex number.</source>
          <target state="translated">복소수의 복소수 켤레를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2507ec843a3f9b8790eb1696ddd5ba9993dc72c" translate="yes" xml:space="preserve">
          <source>Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing all &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions but the first NDIMS-1 into the last dimension of the result.</source>
          <target state="translated">Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing all &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions but the first NDIMS-1 into the last dimension of the result.</target>
        </trans-unit>
        <trans-unit id="c6b99e34f12ad6dffab5087c9a8261972bd06e49" translate="yes" xml:space="preserve">
          <source>Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing all &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions but the last NDIMS-1 into the first dimension of the result.</source>
          <target state="translated">Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing all &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions but the last NDIMS-1 into the first dimension of the result.</target>
        </trans-unit>
        <trans-unit id="4d5b0a9013abb1263980aa099f0f1cc5df5df026" translate="yes" xml:space="preserve">
          <source>Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing the first 'begin' &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions into the first dimension of the result and the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions of the last &lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt; - 'begin' - NDIMS into the last dimension of the result.</source>
          <target state="translated">Returns the data as an Eigen::Tensor with NDIMS dimensions, collapsing the first 'begin' &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions into the first dimension of the result and the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; dimensions of the last &lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1ac8a173cc6c97184139bfd81ff45e7da9&quot;&gt;dims()&lt;/a&gt; - 'begin' - NDIMS into the last dimension of the result.</target>
        </trans-unit>
        <trans-unit id="5fbb751ca6eb5bbfd69a2fe67e2f121ec8c1cde6" translate="yes" xml:space="preserve">
          <source>Returns the data type.</source>
          <target state="translated">Returns the data type.</target>
        </trans-unit>
        <trans-unit id="84e11713b3fd9911d9a4b0bd8f54b1eee15c5244" translate="yes" xml:space="preserve">
          <source>Returns the diagonal part of the tensor.</source>
          <target state="translated">텐서의 대각선 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3cd1ab5a8190960139499956c5df768d7e22800" translate="yes" xml:space="preserve">
          <source>Returns the dimension index in the destination data format given the one in.</source>
          <target state="translated">Returns the dimension index in the destination data format given the one in.</target>
        </trans-unit>
        <trans-unit id="497956863e3c19194810c843a894b39ee792dce5" translate="yes" xml:space="preserve">
          <source>Returns the element-wise max of two SparseTensors.</source>
          <target state="translated">두 SparseTensor의 요소 별 최대 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ba7baaccdf4505fc2d9e6f1203462c2a18eab02a" translate="yes" xml:space="preserve">
          <source>Returns the element-wise min of two SparseTensors.</source>
          <target state="translated">두 SparseTensor의 요소 별 최소값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fc26b2e54b7d17647dd2600509508bc4e15f0428" translate="yes" xml:space="preserve">
          <source>Returns the element-wise sum of a list of tensors.</source>
          <target state="translated">텐서 목록의 요소 별 합계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83f70e68eb14ca6723455bf9d4c44d53d56c899f" translate="yes" xml:space="preserve">
          <source>Returns the estimated memory usage of this tensor.</source>
          <target state="translated">Returns the estimated memory usage of this tensor.</target>
        </trans-unit>
        <trans-unit id="f7b81b64d9f8450196d6efb512d798a7e23888f0" translate="yes" xml:space="preserve">
          <source>Returns the imaginary part of a complex number.</source>
          <target state="translated">Returns the imaginary part of a complex number.</target>
        </trans-unit>
        <trans-unit id="e232f8b0bc0b1c46a3917ae2aa86520b79dd7287" translate="yes" xml:space="preserve">
          <source>Returns the index with the largest value across dimensions of a tensor.</source>
          <target state="translated">텐서의 차원에서 가장 큰 값을 가진 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="62ec3b7bddb331177667dd16832d2e7d26cdfa04" translate="yes" xml:space="preserve">
          <source>Returns the index with the smallest value across dimensions of a tensor.</source>
          <target state="translated">텐서의 차원에서 가장 작은 값을 가진 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bbed83d5592e50089c72cf595d61e1b5686c4e7f" translate="yes" xml:space="preserve">
          <source>Returns the input tensor without modification.</source>
          <target state="translated">수정하지 않고 입력 텐서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df53f3f50e165e0f4882f70d9b543608ba35ab38" translate="yes" xml:space="preserve">
          <source>Returns the max of x and y (i.e.</source>
          <target state="translated">Returns the max of x and y (i.e.</target>
        </trans-unit>
        <trans-unit id="587298bd790402dda1bc7e3f4093de6bc09603ad" translate="yes" xml:space="preserve">
          <source>Returns the min of x and y (i.e.</source>
          <target state="translated">Returns the min of x and y (i.e.</target>
        </trans-unit>
        <trans-unit id="fb8d28619a1abf1b7c4458b35e49d95bd166d859" translate="yes" xml:space="preserve">
          <source>Returns the next record (key, value pair) produced by a Reader.</source>
          <target state="translated">Returns the next record (key, value pair) produced by a Reader.</target>
        </trans-unit>
        <trans-unit id="91f3afabd6d33134178ce63b9e5c5aeeac6c14f6" translate="yes" xml:space="preserve">
          <source>Returns the next representable value of &lt;code&gt;x1&lt;/code&gt; in the direction of &lt;code&gt;x2&lt;/code&gt;, element-wise.</source>
          <target state="translated">&lt;code&gt;x2&lt;/code&gt; 방향으로 &lt;code&gt;x1&lt;/code&gt; 의 다음 표현 가능한 값을 요소 단위로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="90fa4aeb91b58b09f704308954f8abeefda5c0a8" translate="yes" xml:space="preserve">
          <source>Returns the number of gradients aggregated in the given accumulators.</source>
          <target state="translated">Returns the number of gradients aggregated in the given accumulators.</target>
        </trans-unit>
        <trans-unit id="00e774f78f3b4c14c1c6010198d02bbe102e3eb2" translate="yes" xml:space="preserve">
          <source>Returns the number of records this Reader has produced.</source>
          <target state="translated">Returns the number of records this Reader has produced.</target>
        </trans-unit>
        <trans-unit id="00832fa03f5b26b86ed5904dd5479d766ff626fb" translate="yes" xml:space="preserve">
          <source>Returns the number of work units this Reader has finished processing.</source>
          <target state="translated">Returns the number of work units this Reader has finished processing.</target>
        </trans-unit>
        <trans-unit id="bab76fe0b71708d801df5e58cfbb5b94a2d0f49c" translate="yes" xml:space="preserve">
          <source>Returns the permuted vector/tensor in the destination data format given the.</source>
          <target state="translated">Returns the permuted vector/tensor in the destination data format given the.</target>
        </trans-unit>
        <trans-unit id="74c8cacc710edb9d245e48337bf41707248c794f" translate="yes" xml:space="preserve">
          <source>Returns the real part of a complex number.</source>
          <target state="translated">Returns the real part of a complex number.</target>
        </trans-unit>
        <trans-unit id="b812002bad31d1b6d66af19cdfc98b070eb82786" translate="yes" xml:space="preserve">
          <source>Returns the set of files matching one or more glob patterns.</source>
          <target state="translated">하나 이상의 glob 패턴과 일치하는 파일 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d941baef5734198bd3d07ca4801f1c3aad87cf8b" translate="yes" xml:space="preserve">
          <source>Returns the shape of the tensor.</source>
          <target state="translated">Returns the shape of the tensor.</target>
        </trans-unit>
        <trans-unit id="4e7966d7db3ed632b9666d9929b6524399e9edfc" translate="yes" xml:space="preserve">
          <source>Returns the timestamp as a &lt;code&gt;float64&lt;/code&gt; for seconds since the Unix epoch.</source>
          <target state="translated">유닉스 시대 이후 의 타임 스탬프 를 초 동안 &lt;code&gt;float64&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c8078e098a37329188a00235407caa85710c9561" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x != y) element-wise.</source>
          <target state="translated">(x! = y)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="29b2f01f6d93046a8893124745f4879e03f41490" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x &amp;gt; y) element-wise.</source>
          <target state="translated">요소 별 (x&amp;gt; y)의 진리 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ebab054bdb7e7b17a49d1a804d1b95a72ac50ea9" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x &amp;gt;= y) element-wise.</source>
          <target state="translated">(x&amp;gt; = y)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22fce2d79233e74d48d389b02f76d4b09d6ea234" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x &amp;lt; y) element-wise.</source>
          <target state="translated">(x &amp;lt;y)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="07861d054d1db6d3d2b7b4e4e85aefc9ec725343" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x &amp;lt;= y) element-wise.</source>
          <target state="translated">(x &amp;lt;= y)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1469d559b904a30a3b4dd6f00fa31ee0c3c75021" translate="yes" xml:space="preserve">
          <source>Returns the truth value of (x == y) element-wise.</source>
          <target state="translated">(x == y)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="239c4d126061ebaf621e884db59ceb506ff29210" translate="yes" xml:space="preserve">
          <source>Returns the truth value of &lt;code&gt;NOT x&lt;/code&gt; element-wise.</source>
          <target state="translated">Returns the truth value of &lt;code&gt;NOT x&lt;/code&gt; element-wise.</target>
        </trans-unit>
        <trans-unit id="a6ac97a90886ca6e6838a43135183874ce2f9fd6" translate="yes" xml:space="preserve">
          <source>Returns the truth value of abs(x-y) &amp;lt; tolerance element-wise.</source>
          <target state="translated">Returns the truth value of abs(x-y) &amp;lt; tolerance element-wise.</target>
        </trans-unit>
        <trans-unit id="671b695179ab41333f138480cf4c76e23963c192" translate="yes" xml:space="preserve">
          <source>Returns the truth value of x AND y element-wise.</source>
          <target state="translated">x AND y의 실제 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5003b1c786ff0c40b1116c09389d13d216ee9323" translate="yes" xml:space="preserve">
          <source>Returns the truth value of x OR y element-wise.</source>
          <target state="translated">x OR y의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ef170119f5d239e415fccbcf646d7bcce7a72594" translate="yes" xml:space="preserve">
          <source>Returns true if queue is closed.</source>
          <target state="translated">큐가 닫힌 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="76312c447a33c801008e8133166892db06dd0c03" translate="yes" xml:space="preserve">
          <source>Returns true iff this tensor is aligned.</source>
          <target state="translated">Returns true iff this tensor is aligned.</target>
        </trans-unit>
        <trans-unit id="91076b9e17ac5cc8915dedbae42bd7d0353252e5" translate="yes" xml:space="preserve">
          <source>Returns up to &lt;code&gt;num_records&lt;/code&gt; (key, value) pairs produced by a Reader.</source>
          <target state="translated">Returns up to &lt;code&gt;num_records&lt;/code&gt; (key, value) pairs produced by a Reader.</target>
        </trans-unit>
        <trans-unit id="24bf6ea93431bf16b743f9cbdc4ce455473ba0ed" translate="yes" xml:space="preserve">
          <source>Returns which elements of x are Inf.</source>
          <target state="translated">x의 어떤 요소가 Inf인지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f6e16334582697a2d06581c47f526bd05a8ca1e2" translate="yes" xml:space="preserve">
          <source>Returns which elements of x are NaN.</source>
          <target state="translated">x의 어떤 원소가 NaN인지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3439b1d17301a1c4c8e0473b5185ceadef16a245" translate="yes" xml:space="preserve">
          <source>Returns which elements of x are finite.</source>
          <target state="translated">x의 어떤 요소가 유한인지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2d24110a0f536ccf1c37d269a9414e236d2365b4" translate="yes" xml:space="preserve">
          <source>Returns x * y element-wise, working on quantized buffers.</source>
          <target state="translated">Returns x * y element-wise, working on quantized buffers.</target>
        </trans-unit>
        <trans-unit id="0f74a335bb0b14f82d1d9cfd2b9d3792e5929efb" translate="yes" xml:space="preserve">
          <source>Returns x * y element-wise.</source>
          <target state="translated">요소 별 x * y를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bca45ba1c5634a0c7531d7bff78a147ef9c49fa5" translate="yes" xml:space="preserve">
          <source>Returns x + y element-wise, working on quantized buffers.</source>
          <target state="translated">Returns x + y element-wise, working on quantized buffers.</target>
        </trans-unit>
        <trans-unit id="2d3feb59f5cb4086516e87100a5b152e929f9b12" translate="yes" xml:space="preserve">
          <source>Returns x + y element-wise.</source>
          <target state="translated">x + y를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28afd2fb61d3ee23a477ca7ffbff56c54f64f1d1" translate="yes" xml:space="preserve">
          <source>Returns x - y element-wise.</source>
          <target state="translated">x-y를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="579c1c0373686676f3ef1923efe6186b9ff5d96f" translate="yes" xml:space="preserve">
          <source>Returns x / y element-wise for integer types.</source>
          <target state="translated">정수 유형에 대해 x / y를 요소 단위로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e1961cced64842bcfcc536675a5021ad4719869e" translate="yes" xml:space="preserve">
          <source>Returns x / y element-wise for real types.</source>
          <target state="translated">실수 형의 경우 x / y를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d53ba382a9e20ffa57f2e047421078f0f1f6d049" translate="yes" xml:space="preserve">
          <source>Returns x / y element-wise.</source>
          <target state="translated">Returns x / y element-wise.</target>
        </trans-unit>
        <trans-unit id="8ab280329ccb64d78c3ff63d1334007874c70c27" translate="yes" xml:space="preserve">
          <source>Returns x // y element-wise.</source>
          <target state="translated">요소 단위로 x // y를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e45c7b170be5ab783fa57db28088402696b10339" translate="yes" xml:space="preserve">
          <source>Returns zero if y is zero, even if x if infinite or NaN.</source>
          <target state="translated">Returns zero if y is zero, even if x if infinite or NaN.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="4aa05452ddb5eb93ca8cf6911da88d5297379aa4" translate="yes" xml:space="preserve">
          <source>Rint</source>
          <target state="translated">Rint</target>
        </trans-unit>
        <trans-unit id="ec7b59833520bb2b53fd4d44b3d581720b55c442" translate="yes" xml:space="preserve">
          <source>Round</source>
          <target state="translated">Round</target>
        </trans-unit>
        <trans-unit id="cd2c8860e612abf0e4346860597f36ff336077c7" translate="yes" xml:space="preserve">
          <source>RoundMode</source>
          <target state="translated">RoundMode</target>
        </trans-unit>
        <trans-unit id="81bbc1a875f09e17ed6bc8bce58d562baaf2c203" translate="yes" xml:space="preserve">
          <source>Rounds half to even. Also known as bankers rounding. If you want to round according to the current system rounding mode use std::cint.</source>
          <target state="translated">Rounds half to even. Also known as bankers rounding. If you want to round according to the current system rounding mode use std::cint.</target>
        </trans-unit>
        <trans-unit id="589f1d95234a657f8f9dc796becfeccc15eaf082" translate="yes" xml:space="preserve">
          <source>Rounds the values of a tensor to the nearest integer, element-wise.</source>
          <target state="translated">텐서의 값을 요소 단위로 가장 가까운 정수로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="0edf410dfe33f39c1aa529103e8be96b5c61d90f" translate="yes" xml:space="preserve">
          <source>Rows 1 and 4 are empty, so the output will be of shape &lt;code&gt;[5, 6]&lt;/code&gt; with values:</source>
          <target state="translated">행 1과 4는 비어 있으므로 출력은 다음 과 같은 값을 가진 &lt;code&gt;[5, 6]&lt;/code&gt; 모양입니다 .</target>
        </trans-unit>
        <trans-unit id="8647728c0bc88159c8b089ac126d1fad96d3dd56" translate="yes" xml:space="preserve">
          <source>Rsqrt</source>
          <target state="translated">Rsqrt</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="62e158b27cdabc47c63c8035f2885c26262eb80b" translate="yes" xml:space="preserve">
          <source>RunCallable</source>
          <target state="translated">RunCallable</target>
        </trans-unit>
        <trans-unit id="2f84a6fad2c0630e677f21a70fdd978c1ad15a65" translate="yes" xml:space="preserve">
          <source>SCALED mode Example</source>
          <target state="translated">SCALED mode Example</target>
        </trans-unit>
        <trans-unit id="e6d397f334eedcfa323be84ea508329345183da2" translate="yes" xml:space="preserve">
          <source>Same as above, but convenient to add control dependency on the operation producing the control_dep output.</source>
          <target state="translated">Same as above, but convenient to add control dependency on the operation producing the control_dep output.</target>
        </trans-unit>
        <trans-unit id="c31d5ec9464e93fcfdcf6e7c4d5f1cc277f2ffe5" translate="yes" xml:space="preserve">
          <source>Same as above, but use the empty string (&quot;&quot;) as the target specification.</source>
          <target state="translated">Same as above, but use the empty string (&quot;&quot;) as the target specification.</target>
        </trans-unit>
        <trans-unit id="c0f44f59981f3bb1e94ecace06c9281a90972f8b" translate="yes" xml:space="preserve">
          <source>Same as above, but use the mapping in &lt;code&gt;inputs&lt;/code&gt; as feeds.</source>
          <target state="translated">Same as above, but use the mapping in &lt;code&gt;inputs&lt;/code&gt; as feeds.</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">같은 상기와.</target>
        </trans-unit>
        <trans-unit id="9bfe05924c9e31ba23f3d26ed70bc5ef26bc5514" translate="yes" xml:space="preserve">
          <source>Same as above. Additionally runs the operations ins &lt;code&gt;run_outputs&lt;/code&gt;.</source>
          <target state="translated">Same as above. Additionally runs the operations ins &lt;code&gt;run_outputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4648f34d4ef07c70cd01c50e02c7373721b44508" translate="yes" xml:space="preserve">
          <source>SampleDistortedBoundingBox</source>
          <target state="translated">SampleDistortedBoundingBox</target>
        </trans-unit>
        <trans-unit id="395a2b04da6de8260ec4f9f1209915b14a40b8be" translate="yes" xml:space="preserve">
          <source>SampleDistortedBoundingBoxV2</source>
          <target state="translated">SampleDistortedBoundingBoxV2</target>
        </trans-unit>
        <trans-unit id="efc007a393f66cdb14d57d385822a3d9e36ef873" translate="yes" xml:space="preserve">
          <source>Save</source>
          <target state="translated">Save</target>
        </trans-unit>
        <trans-unit id="f013aca13dfb387842360d3a355c5fce3d4680ac" translate="yes" xml:space="preserve">
          <source>SaveSlices</source>
          <target state="translated">SaveSlices</target>
        </trans-unit>
        <trans-unit id="3ee5eb2571ea9f1c5e89cabc8eadb0f6756de8eb" translate="yes" xml:space="preserve">
          <source>SaveV2</source>
          <target state="translated">SaveV2</target>
        </trans-unit>
        <trans-unit id="23c88049ecd15b22b45b3d9078c38aa7d1a53451" translate="yes" xml:space="preserve">
          <source>Saves input tensors slices to disk.</source>
          <target state="translated">Saves input tensors slices to disk.</target>
        </trans-unit>
        <trans-unit id="90099ab6b395d14ff799df7ba269a45bae23224a" translate="yes" xml:space="preserve">
          <source>Saves tensors in V2 checkpoint format.</source>
          <target state="translated">Saves tensors in V2 checkpoint format.</target>
        </trans-unit>
        <trans-unit id="87910cc6da5ea6e6d5adf0c364c8e2b3befbd1dc" translate="yes" xml:space="preserve">
          <source>Saves the input tensors to disk.</source>
          <target state="translated">Saves the input tensors to disk.</target>
        </trans-unit>
        <trans-unit id="595bb841dad4d298649fc16e55c68f9974ddc6a3" translate="yes" xml:space="preserve">
          <source>Says whether the targets are in the top &lt;code&gt;K&lt;/code&gt; predictions.</source>
          <target state="translated">대상이 상위 &lt;code&gt;K&lt;/code&gt; 예측 에 있는지 여부를 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="19be4dc6fc037b29ac65833ea6af709fa6118cf0" translate="yes" xml:space="preserve">
          <source>ScalarSummary</source>
          <target state="translated">ScalarSummary</target>
        </trans-unit>
        <trans-unit id="ad5f92b65188e7eecc26b886f68b4725c0d5754d" translate="yes" xml:space="preserve">
          <source>ScaleAndTranslate</source>
          <target state="translated">ScaleAndTranslate</target>
        </trans-unit>
        <trans-unit id="c1e1082d2a59370b999ec935828941d904a59ebc" translate="yes" xml:space="preserve">
          <source>Scatter the data from the input value into specific &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Scatter the data from the input value into specific &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="5390626a9df8e82a9ffb676fc91ae58b2d424d17" translate="yes" xml:space="preserve">
          <source>Scatter the data from the input value into specific &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Scatter the data from the input value into specific &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="0f99f18e290a98e9394633f89e55c440b69b7bc5" translate="yes" xml:space="preserve">
          <source>Scatter the data from the input value into specific &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Scatter the data from the input value into specific &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="5b5899207b9b85397bef182048ef2f2f1dadd52b" translate="yes" xml:space="preserve">
          <source>ScatterAdd</source>
          <target state="translated">ScatterAdd</target>
        </trans-unit>
        <trans-unit id="e41832a2e59d36595c5e52ad69448b356e0a8eaf" translate="yes" xml:space="preserve">
          <source>ScatterDiv</source>
          <target state="translated">ScatterDiv</target>
        </trans-unit>
        <trans-unit id="fb33a2f6d997cdfde4867ff70701aa38f3a2d55a" translate="yes" xml:space="preserve">
          <source>ScatterMax</source>
          <target state="translated">ScatterMax</target>
        </trans-unit>
        <trans-unit id="35b768749543ae71330c3f4353b1ca1e4c51790a" translate="yes" xml:space="preserve">
          <source>ScatterMin</source>
          <target state="translated">ScatterMin</target>
        </trans-unit>
        <trans-unit id="7d375ee445fac53823890ffbf564176bbee6f6b1" translate="yes" xml:space="preserve">
          <source>ScatterMul</source>
          <target state="translated">ScatterMul</target>
        </trans-unit>
        <trans-unit id="482095200d3ca46a2ac6d0d34d57268668e7bf3d" translate="yes" xml:space="preserve">
          <source>ScatterNdAdd</source>
          <target state="translated">ScatterNdAdd</target>
        </trans-unit>
        <trans-unit id="afe88bc4893d2ab6d3a73794c5a062eda0089ac0" translate="yes" xml:space="preserve">
          <source>ScatterNdSub</source>
          <target state="translated">ScatterNdSub</target>
        </trans-unit>
        <trans-unit id="d9db4db250e377c6fc75f5eeda803c38df1c65d8" translate="yes" xml:space="preserve">
          <source>ScatterNdUpdate</source>
          <target state="translated">ScatterNdUpdate</target>
        </trans-unit>
        <trans-unit id="cc29c9dead6febdbf83ae03b2503b96b2162a2b1" translate="yes" xml:space="preserve">
          <source>ScatterSub</source>
          <target state="translated">ScatterSub</target>
        </trans-unit>
        <trans-unit id="bf3a5b52765daa8468cb6a78964496713cc8fbf0" translate="yes" xml:space="preserve">
          <source>ScatterUpdate</source>
          <target state="translated">ScatterUpdate</target>
        </trans-unit>
        <trans-unit id="f828e40cdbfe148f8269d270297173582c662d54" translate="yes" xml:space="preserve">
          <source>Scientific</source>
          <target state="translated">Scientific</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="cc97f97750b21286e6c6bef0d7bf89f30c5a5da7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://arxiv.org/abs/1511.07289&quot;&gt;Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)&lt;/a&gt;</source>
          <target state="translated">See &lt;a href=&quot;http://arxiv.org/abs/1511.07289&quot;&gt;Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="804a46857384ca551f15f7b23c931a5310282bc9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://en.wikipedia.org/wiki/Chroma_subsampling&quot;&gt;http://en.wikipedia.org/wiki/Chroma_subsampling&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;http://en.wikipedia.org/wiki/Chroma_subsampling&quot;&gt;http://en.wikipedia.org/wiki/Chroma_subsampling&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9c332ddc0027aafb146923583972ab6eb4b66dd5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://arxiv.org/abs/1706.02515&quot;&gt;Self-Normalizing Neural Networks&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://arxiv.org/abs/1706.02515&quot;&gt;자가 정규화 신경망&lt;/a&gt; 보기</target>
        </trans-unit>
        <trans-unit id="c279541cca3ffa8c343ea97a42a280a5b603c11f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;dynamic_stitch&lt;/code&gt; for an example on how to merge partitions back.</source>
          <target state="translated">파티션을 다시 병합하는 방법에 대한 예는 &lt;code&gt;dynamic_stitch&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e55fbfba2e771390511034c4a384d68b2d059d4c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;rgb_to_hsv&lt;/code&gt; for a description of the HSV encoding.</source>
          <target state="translated">HSV 인코딩에 대한 설명은 &lt;code&gt;rgb_to_hsv&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7b6bc53be00760ba760fae1aa662940021f5dd9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;tf.scatter_nd&lt;/code&gt; for more details about how to make updates to slices.</source>
          <target state="translated">See &lt;code&gt;tf.scatter_nd&lt;/code&gt; for more details about how to make updates to slices.</target>
        </trans-unit>
        <trans-unit id="e222aefc69ab5499c5c418f3ec04cae22503ba6f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;tf.sparse.segment_sum&lt;/code&gt; for usage examples.</source>
          <target state="translated">See &lt;code&gt;tf.sparse.segment_sum&lt;/code&gt; for usage examples.</target>
        </trans-unit>
        <trans-unit id="6ed6ce5cd9ac4bcb44abff675541e06067c337fb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;ref-switch#classtensorflow_1_1ops_1_1_ref_switch&quot;&gt;RefSwitch&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;merge#classtensorflow_1_1ops_1_1_merge&quot;&gt;Merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;&lt;a href=&quot;ref-switch#classtensorflow_1_1ops_1_1_ref_switch&quot;&gt;RefSwitch&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;merge#classtensorflow_1_1ops_1_1_merge&quot;&gt;Merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51c755909327fd5c2827347411649bcd48af554c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;restore-slice#classtensorflow_1_1ops_1_1_restore_slice&quot;&gt;RestoreSlice&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;&lt;a href=&quot;restore-slice#classtensorflow_1_1ops_1_1_restore_slice&quot;&gt;RestoreSlice&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a65584ed5b3f4cf3f51a6aed18ef83e8e4145f9e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;save#classtensorflow_1_1ops_1_1_save&quot;&gt;Save&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;&lt;a href=&quot;save#classtensorflow_1_1ops_1_1_save&quot;&gt;Save&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81dd479f30c7b13083dc35704a8340b1c823a441" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;save-slices#classtensorflow_1_1ops_1_1_save_slices&quot;&gt;SaveSlices&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;&lt;a href=&quot;save-slices#classtensorflow_1_1ops_1_1_save_slices&quot;&gt;SaveSlices&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eda417ec858a2e11c1aa1a422b3f4635143261b1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;switch#classtensorflow_1_1ops_1_1_switch&quot;&gt;Switch&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;merge#classtensorflow_1_1ops_1_1_merge&quot;&gt;Merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;&lt;a href=&quot;switch#classtensorflow_1_1ops_1_1_switch&quot;&gt;Switch&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;merge#classtensorflow_1_1ops_1_1_merge&quot;&gt;Merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="978cda2c23aecadb5cd56d2d379e806c4bcf143c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;tf.batch_gather&lt;/code&gt; and &lt;code&gt;tf.gather_nd&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;tf.batch_gather&lt;/code&gt; and &lt;code&gt;tf.gather_nd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d9bbf46aa85e6863b98758105a06cdeceb81155" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;tf.batch_scatter_update&lt;/code&gt; and &lt;code&gt;tf.scatter_nd_update&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;tf.batch_scatter_update&lt;/code&gt; and &lt;code&gt;tf.scatter_nd_update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a97dcaa1d35cbbfdbba46828b7c92c048e7a52e8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;tf.gather&lt;/code&gt; and &lt;code&gt;tf.batch_gather&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;tf.gather&lt;/code&gt; and &lt;code&gt;tf.batch_gather&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="698926ca1f403656c88db266d230a26a86cdb847" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;tf.scatter_update&lt;/code&gt; and &lt;code&gt;tf.batch_scatter_update&lt;/code&gt;.</source>
          <target state="translated">See also &lt;code&gt;tf.scatter_update&lt;/code&gt; and &lt;code&gt;tf.batch_scatter_update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1429e0b593a991a01cf3cc6fbcc9dc6ebec01e6b" translate="yes" xml:space="preserve">
          <source>See explanations of candidate sampling and the data formats at go/candidate-sampling.</source>
          <target state="translated">See explanations of candidate sampling and the data formats at go/candidate-sampling.</target>
        </trans-unit>
        <trans-unit id="2386b0feed3a59646be9e22c198ccc5eec77d2d1" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;&lt;a href=&quot;../../../../class/tensorflow/ops/restore#classtensorflow_1_1ops_1_1_restore&quot;&gt;Restore&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">See the documentation for &lt;code&gt;&lt;a href=&quot;../../../../class/tensorflow/ops/restore#classtensorflow_1_1ops_1_1_restore&quot;&gt;Restore&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e575752847c866cd9559f865dbf2d38f390aa2a2" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Rectifier_(neural_networks)&quot;&gt;https://en.wikipedia.org/wiki/Rectifier_(neural_networks)&lt;/a&gt; Example usage: tf.nn.relu([-2., 0., -0., 3.]).numpy() array([ 0., 0., -0., 3.], dtype=float32)</source>
          <target state="translated">See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Rectifier_(neural_networks)&quot;&gt;https://en.wikipedia.org/wiki/Rectifier_(neural_networks)&lt;/a&gt; Example usage: tf.nn.relu([-2., 0., -0., 3.]).numpy() array([ 0., 0., -0., 3.], dtype=float32)</target>
        </trans-unit>
        <trans-unit id="32fe9f5bda708f956b34e6513bbed17121f39547" translate="yes" xml:space="preserve">
          <source>Seed</source>
          <target state="translated">Seed</target>
        </trans-unit>
        <trans-unit id="173cc1553c5157d29598536b6e86c8a4d42727b9" translate="yes" xml:space="preserve">
          <source>Seed2</source>
          <target state="translated">Seed2</target>
        </trans-unit>
        <trans-unit id="c4aaf186aea9b0d2546265e3046b488f1273f5b1" translate="yes" xml:space="preserve">
          <source>SegmentMax</source>
          <target state="translated">SegmentMax</target>
        </trans-unit>
        <trans-unit id="9e3f65ae97824ca4e348ff6f4a7e514f80bf5425" translate="yes" xml:space="preserve">
          <source>SegmentMean</source>
          <target state="translated">SegmentMean</target>
        </trans-unit>
        <trans-unit id="d5bff01edebf101b186ea409052654e7319655b1" translate="yes" xml:space="preserve">
          <source>SegmentMin</source>
          <target state="translated">SegmentMin</target>
        </trans-unit>
        <trans-unit id="8d45f64281140e42a93ea33d2f4ef0c4c44dcc8f" translate="yes" xml:space="preserve">
          <source>SegmentProd</source>
          <target state="translated">SegmentProd</target>
        </trans-unit>
        <trans-unit id="3ca5f1c7e4bf9671f4d0731e2aefacdf7e074cc1" translate="yes" xml:space="preserve">
          <source>SegmentSum</source>
          <target state="translated">SegmentSum</target>
        </trans-unit>
        <trans-unit id="e752fb8663dc04680f02106b105690972823b624" translate="yes" xml:space="preserve">
          <source>Select a subslice from this tensor along the 1st dimension.</source>
          <target state="translated">Select a subslice from this tensor along the 1st dimension.</target>
        </trans-unit>
        <trans-unit id="0da2fedabe69690b9cd24e09ec0f98d9bfa5d475" translate="yes" xml:space="preserve">
          <source>SelectCols</source>
          <target state="translated">SelectCols</target>
        </trans-unit>
        <trans-unit id="807b04d1a262b73e83b34f004f586b7122601cf2" translate="yes" xml:space="preserve">
          <source>SelectV2</source>
          <target state="translated">SelectV2</target>
        </trans-unit>
        <trans-unit id="3b9c6ff23f0e00bb40e27e4e94c4482c6290e102" translate="yes" xml:space="preserve">
          <source>Selects elements from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, depending on &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="translated">Selects elements from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; , depending on &lt;code&gt;condition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20246288d6ddf30b8e57c7c4b2c6c769efbe6f18" translate="yes" xml:space="preserve">
          <source>Selu</source>
          <target state="translated">Selu</target>
        </trans-unit>
        <trans-unit id="b4b289a7b76be83adf9d38e7a3ee28190349bff2" translate="yes" xml:space="preserve">
          <source>Separator</source>
          <target state="translated">Separator</target>
        </trans-unit>
        <trans-unit id="fe3d88358ec671718e7f9963d956ebc78a5d8d21" translate="yes" xml:space="preserve">
          <source>Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="06eef1cad887026ca1832d6085c207747c4a5bfc" translate="yes" xml:space="preserve">
          <source>Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="18ed1710b8132ffff5833f99ebf3be2b724fdb0f" translate="yes" xml:space="preserve">
          <source>Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize a &lt;code&gt;SparseTensor&lt;/code&gt; into a &lt;code&gt;[3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="4d2c487433653df2d66e65e1379ea2fdd113f77f" translate="yes" xml:space="preserve">
          <source>Serialize an &lt;code&gt;N&lt;/code&gt;-minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize an &lt;code&gt;N&lt;/code&gt; -minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="5127fa34b4607b5c4cf38028d62bd228141e55f5" translate="yes" xml:space="preserve">
          <source>Serialize an &lt;code&gt;N&lt;/code&gt;-minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize an &lt;code&gt;N&lt;/code&gt; -minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="1c22af1b7d86464f7442c1abf84a1fdc73c7c194" translate="yes" xml:space="preserve">
          <source>Serialize an &lt;code&gt;N&lt;/code&gt;-minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Serialize an &lt;code&gt;N&lt;/code&gt; -minibatch &lt;code&gt;SparseTensor&lt;/code&gt; into an &lt;code&gt;[N, 3]&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="55ddcf48a913be5d59cfc67a4803554447347b3d" translate="yes" xml:space="preserve">
          <source>SerializeManySparse</source>
          <target state="translated">SerializeManySparse</target>
        </trans-unit>
        <trans-unit id="7407f259ccb96a2ad897660f3cd0acef7295f9c2" translate="yes" xml:space="preserve">
          <source>SerializeSparse</source>
          <target state="translated">SerializeSparse</target>
        </trans-unit>
        <trans-unit id="3d827c7a2e610ceaa51049b893c19edeb8568c3d" translate="yes" xml:space="preserve">
          <source>SerializeTensor</source>
          <target state="translated">SerializeTensor</target>
        </trans-unit>
        <trans-unit id="fa1d29a69b67df21c5a9c0ca407ef4d50f38646e" translate="yes" xml:space="preserve">
          <source>Serves as a control trigger for scheduling.</source>
          <target state="translated">Serves as a control trigger for scheduling.</target>
        </trans-unit>
        <trans-unit id="1427a5c89d700d78a2b453b602d7319214ba768e" translate="yes" xml:space="preserve">
          <source>Set use_nesterov = True if you want to use Nesterov momentum.</source>
          <target state="translated">Nesterov 모멘텀을 사용하려면 use_nesterov = True로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d3e62d4c66963a85c432d5ddc75ea42177b36baf" translate="yes" xml:space="preserve">
          <source>SetDiff1D</source>
          <target state="translated">SetDiff1D</target>
        </trans-unit>
        <trans-unit id="ece70bf52a9abb117716ee8941d38a6bd0c2b8e2" translate="yes" xml:space="preserve">
          <source>Sets output to the value of the &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; pointed to by 'ref', then destroys the temporary variable called 'var_name'. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; other uses of 'ref'</source>
          <target state="translated">Sets output to the value of the &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; pointed to by 'ref', then destroys the temporary variable called 'var_name'. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; other uses of 'ref'</target>
        </trans-unit>
        <trans-unit id="ea5c1a20b7cfcfec8a35fb4c6a419a1314233755" translate="yes" xml:space="preserve">
          <source>Shape</source>
          <target state="translated">Shape</target>
        </trans-unit>
        <trans-unit id="b1985e387405e4d4afb40d5dac9b2656f5d6f770" translate="yes" xml:space="preserve">
          <source>Shapes</source>
          <target state="translated">Shapes</target>
        </trans-unit>
        <trans-unit id="712da99c9c7fffce7442b3b8c5e4630307808b60" translate="yes" xml:space="preserve">
          <source>Shard</source>
          <target state="translated">Shard</target>
        </trans-unit>
        <trans-unit id="c5684e555ff9394574e3f3390bbe05a25a0508e1" translate="yes" xml:space="preserve">
          <source>ShardedFilename</source>
          <target state="translated">ShardedFilename</target>
        </trans-unit>
        <trans-unit id="8abd13a4e707fd63e153a9a168b4cc0ae6ec04f9" translate="yes" xml:space="preserve">
          <source>ShardedFilespec</source>
          <target state="translated">ShardedFilespec</target>
        </trans-unit>
        <trans-unit id="67eb92eccca4412a1f5c1dccb6a766803daa222a" translate="yes" xml:space="preserve">
          <source>SharedName</source>
          <target state="translated">SharedName</target>
        </trans-unit>
        <trans-unit id="911955a038f9425db35ab8cc51c965a96ddd4907" translate="yes" xml:space="preserve">
          <source>SharesBufferWith</source>
          <target state="translated">SharesBufferWith</target>
        </trans-unit>
        <trans-unit id="52fc357aee1d0d59f6d412272c23672269d6fbc8" translate="yes" xml:space="preserve">
          <source>Shifts the list of files after the list is randomly shuffled.</source>
          <target state="translated">Shifts the list of files after the list is randomly shuffled.</target>
        </trans-unit>
        <trans-unit id="da93563b4e0bb873eccab6d711cb7eb3ecd2986b" translate="yes" xml:space="preserve">
          <source>Shortest</source>
          <target state="translated">Shortest</target>
        </trans-unit>
        <trans-unit id="31abc090cf7575b0a3615e76f90c0ca025c0be9c" translate="yes" xml:space="preserve">
          <source>Shuffle dimensions of x according to a permutation and conjugate the result.</source>
          <target state="translated">순열에 따라 x의 차원을 섞고 결과를 결합합니다.</target>
        </trans-unit>
        <trans-unit id="40cbe2acb9d6a109dfc4fb28692090f839183dea" translate="yes" xml:space="preserve">
          <source>Sigmoid</source>
          <target state="translated">Sigmoid</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="2e4e62530a1d66f6804c31eae87a65768d0b6703" translate="yes" xml:space="preserve">
          <source>Sign up for the TensorFlow monthly newsletter&lt;a href=&quot;https://services.google.com/fb/forms/tensorflow/&quot;&gt; Subscribe &lt;/a&gt;</source>
          <target state="translated">TensorFlow 월간 뉴스 레터 &lt;a href=&quot;https://services.google.com/fb/forms/tensorflow/&quot;&gt;구독 신청&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f5464a8b817d7e52cab4be446774c09b6b64003" translate="yes" xml:space="preserve">
          <source>SignedInput</source>
          <target state="translated">SignedInput</target>
        </trans-unit>
        <trans-unit id="e4b7513a956d9d61b4d670032e40a8f1840154fe" translate="yes" xml:space="preserve">
          <source>Similar to FusedResizeAndPadConv2d, this op allows for an optimized implementation where the spatial padding transformation stage is fused with the im2col lookup, but in this case without the bilinear filtering required for resizing. Fusing the padding prevents the need to write out the intermediate results as whole tensors, reducing memory pressure, and we can get some latency gains by merging the transformation calculations. The data_format attribute for &lt;a href=&quot;conv2-d#classtensorflow_1_1ops_1_1_conv2_d&quot;&gt;Conv2D&lt;/a&gt; isn't supported by this op, and 'NHWC' order is used instead. Internally this op uses a single per-graph scratch buffer, which means that it will block if multiple versions are being run in parallel. This is because this operator is primarily an optimization to minimize memory usage.</source>
          <target state="translated">Similar to FusedResizeAndPadConv2d, this op allows for an optimized implementation where the spatial padding transformation stage is fused with the im2col lookup, but in this case without the bilinear filtering required for resizing. Fusing the padding prevents the need to write out the intermediate results as whole tensors, reducing memory pressure, and we can get some latency gains by merging the transformation calculations. The data_format attribute for &lt;a href=&quot;conv2-d#classtensorflow_1_1ops_1_1_conv2_d&quot;&gt;Conv2D&lt;/a&gt; isn't supported by this op, and 'NHWC' order is used instead. Internally this op uses a single per-graph scratch buffer, which means that it will block if multiple versions are being run in parallel. This is because this operator is primarily an optimization to minimize memory usage.</target>
        </trans-unit>
        <trans-unit id="0768bcef93a383a73ce3fb5f54fa961f8ac3fc39" translate="yes" xml:space="preserve">
          <source>Similar to TensorArrayGradV3. However it creates an accumulator with an expanded shape compared to the input &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; whose gradient is being computed. This enables multiple gradients for the same &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; to be calculated using the same accumulator.</source>
          <target state="translated">Similar to TensorArrayGradV3. However it creates an accumulator with an expanded shape compared to the input &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; whose gradient is being computed. This enables multiple gradients for the same &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; to be calculated using the same accumulator.</target>
        </trans-unit>
        <trans-unit id="e6111f09e0dac798ce37b958000c7772f9a4fc90" translate="yes" xml:space="preserve">
          <source>Simple indexing into a matrix:</source>
          <target state="translated">행렬로 간단한 색인 생성 :</target>
        </trans-unit>
        <trans-unit id="1baaf4288309b641acaf8ca1164546c4028a35a7" translate="yes" xml:space="preserve">
          <source>Sin</source>
          <target state="translated">Sin</target>
        </trans-unit>
        <trans-unit id="e5d65368cdcef8d43d81f8b1167171bcc9e4d453" translate="yes" xml:space="preserve">
          <source>Sinh</source>
          <target state="translated">Sinh</target>
        </trans-unit>
        <trans-unit id="edca58f2739800083751ca74b3ca2b2d73b3d865" translate="yes" xml:space="preserve">
          <source>Size (in bytes) of the buffer.</source>
          <target state="translated">Size (in bytes) of the buffer.</target>
        </trans-unit>
        <trans-unit id="bc7635b4643bdd3f47dd63a14555e4fa93e00908" translate="yes" xml:space="preserve">
          <source>SkipEmpty</source>
          <target state="translated">SkipEmpty</target>
        </trans-unit>
        <trans-unit id="d896e361c53a6254c18e30f138138e2f2ae68fad" translate="yes" xml:space="preserve">
          <source>SkipHeaderLines</source>
          <target state="translated">SkipHeaderLines</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="afa161d58faa496409e6fdcef9370d3637e56a3f" translate="yes" xml:space="preserve">
          <source>Slice a &lt;code&gt;SparseTensor&lt;/code&gt; based on the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 기준으로 &lt;code&gt;SparseTensor&lt;/code&gt; 를 슬라이스합니다 .</target>
        </trans-unit>
        <trans-unit id="ee71d16608227222a38300f09a56709ba50fac40" translate="yes" xml:space="preserve">
          <source>Slice indexing into a matrix:</source>
          <target state="translated">인덱스를 행렬로 슬라이스 :</target>
        </trans-unit>
        <trans-unit id="93c77cde1dad9f64f5dd204f26395f3472594293" translate="yes" xml:space="preserve">
          <source>Slice this tensor along the 1st dimension.</source>
          <target state="translated">Slice this tensor along the 1st dimension.</target>
        </trans-unit>
        <trans-unit id="06a2c3db74f0f43566dbc7efd5bedd81dfa46888" translate="yes" xml:space="preserve">
          <source>Softmax</source>
          <target state="translated">Softmax</target>
        </trans-unit>
        <trans-unit id="56fdc5ff7f780a57675cd3ce19fac49f22e1f960" translate="yes" xml:space="preserve">
          <source>SoftmaxCrossEntropyWithLogits</source>
          <target state="translated">SoftmaxCrossEntropyWithLogits</target>
        </trans-unit>
        <trans-unit id="90ba42633b716cf810a9a32d70553b14c097c177" translate="yes" xml:space="preserve">
          <source>Softplus</source>
          <target state="translated">Softplus</target>
        </trans-unit>
        <trans-unit id="2b10804bb8f17cdf24b14774ca1d70aa3ba213d6" translate="yes" xml:space="preserve">
          <source>Softsign</source>
          <target state="translated">Softsign</target>
        </trans-unit>
        <trans-unit id="e3e7a5cb4ec97e37aff5d6dffd403a2ac69afbb5" translate="yes" xml:space="preserve">
          <source>Some diagonals are shorter than &lt;code&gt;max_diag_len&lt;/code&gt; and need to be padded.</source>
          <target state="translated">Some diagonals are shorter than &lt;code&gt;max_diag_len&lt;/code&gt; and need to be padded.</target>
        </trans-unit>
        <trans-unit id="4c48b1d1e86f2b2608be9d7366644d3071986fef" translate="yes" xml:space="preserve">
          <source>Some examples below.</source>
          <target state="translated">아래에 몇 가지 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="acb384f2588e4c06c94e42a72c9317a2f55781ee" translate="yes" xml:space="preserve">
          <source>Sorted</source>
          <target state="translated">Sorted</target>
        </trans-unit>
        <trans-unit id="e112a9fa79b6ee43efb9041afd65d91aa58739b0" translate="yes" xml:space="preserve">
          <source>Sparse Ops</source>
          <target state="translated">Sparse Ops</target>
        </trans-unit>
        <trans-unit id="fd4a8b5726a640c6ed69cf0e30bab1e6e2ffb32d" translate="yes" xml:space="preserve">
          <source>Sparse update '*var' as FOBOS algorithm with fixed learning rate.</source>
          <target state="translated">고정 학습률을 사용하는 FOBOS 알고리즘으로 스파 스 업데이트 '* var'.</target>
        </trans-unit>
        <trans-unit id="fe19b8496036d0b6f0fb37a6b0d2b97f3eb30704" translate="yes" xml:space="preserve">
          <source>Sparse update entries in '*var' and '*accum' according to FOBOS algorithm.</source>
          <target state="translated">Sparse update entries in '*var' and '*accum' according to FOBOS algorithm.</target>
        </trans-unit>
        <trans-unit id="8bfde9fc0aa278505d4dfa97aa1b467e722aa8e8" translate="yes" xml:space="preserve">
          <source>SparseAccumulatorApplyGradient</source>
          <target state="translated">SparseAccumulatorApplyGradient</target>
        </trans-unit>
        <trans-unit id="bdd7ea5381f2da5f60515c1c2776cf94f0431cbd" translate="yes" xml:space="preserve">
          <source>SparseAccumulatorTakeGradient</source>
          <target state="translated">SparseAccumulatorTakeGradient</target>
        </trans-unit>
        <trans-unit id="249f12388f8e22f1c462f0fdfc7611ab0874399a" translate="yes" xml:space="preserve">
          <source>SparseAdd</source>
          <target state="translated">SparseAdd</target>
        </trans-unit>
        <trans-unit id="dcc522bee3927102912fd66127381b4718966e6c" translate="yes" xml:space="preserve">
          <source>SparseAddGrad</source>
          <target state="translated">SparseAddGrad</target>
        </trans-unit>
        <trans-unit id="1cdfbb3c5ab2d562fe3c475ab94c701cb796104c" translate="yes" xml:space="preserve">
          <source>SparseApplyAdadelta</source>
          <target state="translated">SparseApplyAdadelta</target>
        </trans-unit>
        <trans-unit id="3d418cb7a1ad844d45b106ce39b28c8d703bbf1d" translate="yes" xml:space="preserve">
          <source>SparseApplyAdagrad</source>
          <target state="translated">SparseApplyAdagrad</target>
        </trans-unit>
        <trans-unit id="9367876d4671a0952c532dc60536c6bd51dfd3d3" translate="yes" xml:space="preserve">
          <source>SparseApplyAdagradDA</source>
          <target state="translated">SparseApplyAdagradDA</target>
        </trans-unit>
        <trans-unit id="b77eb40a01e4db883fe1ee8dd8dfe4307a2a1aaa" translate="yes" xml:space="preserve">
          <source>SparseApplyCenteredRMSProp</source>
          <target state="translated">SparseApplyCenteredRMSProp</target>
        </trans-unit>
        <trans-unit id="4877869e59f0ea0b186f27748e4f15df0c034e2d" translate="yes" xml:space="preserve">
          <source>SparseApplyFtrl</source>
          <target state="translated">SparseApplyFtrl</target>
        </trans-unit>
        <trans-unit id="800d3891ccb155f6396234527980fa18782b4933" translate="yes" xml:space="preserve">
          <source>SparseApplyFtrlV2</source>
          <target state="translated">SparseApplyFtrlV2</target>
        </trans-unit>
        <trans-unit id="a22f1b0250fab301e3982b2a1cdf630ee577baa8" translate="yes" xml:space="preserve">
          <source>SparseApplyMomentum</source>
          <target state="translated">SparseApplyMomentum</target>
        </trans-unit>
        <trans-unit id="43918531d5decd8bc5f29c17a5ab14d60c356787" translate="yes" xml:space="preserve">
          <source>SparseApplyProximalAdagrad</source>
          <target state="translated">SparseApplyProximalAdagrad</target>
        </trans-unit>
        <trans-unit id="c31a2accba554579538ec14c88a2c1d8888ed3f2" translate="yes" xml:space="preserve">
          <source>SparseApplyProximalGradientDescent</source>
          <target state="translated">SparseApplyProximalGradientDescent</target>
        </trans-unit>
        <trans-unit id="73ff23530143b457e0b5aa626f580af31cb2805a" translate="yes" xml:space="preserve">
          <source>SparseApplyRMSProp</source>
          <target state="translated">SparseApplyRMSProp</target>
        </trans-unit>
        <trans-unit id="69f1147a0bb3348ad6860c7cf47c3b1be2927cfc" translate="yes" xml:space="preserve">
          <source>SparseBincount</source>
          <target state="translated">SparseBincount</target>
        </trans-unit>
        <trans-unit id="9741604df92212d707cf823523096c0c10605504" translate="yes" xml:space="preserve">
          <source>SparseConcat</source>
          <target state="translated">SparseConcat</target>
        </trans-unit>
        <trans-unit id="e172228800bb4ef266cfae249360c9adb18c222b" translate="yes" xml:space="preserve">
          <source>SparseConditionalAccumulator</source>
          <target state="translated">SparseConditionalAccumulator</target>
        </trans-unit>
        <trans-unit id="fc393f647312656ab5f2d94fea4751142ed63d03" translate="yes" xml:space="preserve">
          <source>SparseCross</source>
          <target state="translated">SparseCross</target>
        </trans-unit>
        <trans-unit id="b6bca69b1b714f2d3ea37d2437a5d444c90d3630" translate="yes" xml:space="preserve">
          <source>SparseCrossHashed</source>
          <target state="translated">SparseCrossHashed</target>
        </trans-unit>
        <trans-unit id="790117eab2ba1913ce866d879ee430b559bb3b5a" translate="yes" xml:space="preserve">
          <source>SparseCrossV2</source>
          <target state="translated">SparseCrossV2</target>
        </trans-unit>
        <trans-unit id="17b61339890f8722663e2e5f752e314dad0d56df" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseAdd</source>
          <target state="translated">SparseDenseCwiseAdd</target>
        </trans-unit>
        <trans-unit id="fc5f908a0a14da3d930f57bd0a310cc42f95c577" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseDiv</source>
          <target state="translated">SparseDenseCwiseDiv</target>
        </trans-unit>
        <trans-unit id="4fe72e75eb5b66d560741c8aa08e1d5c0f66c139" translate="yes" xml:space="preserve">
          <source>SparseDenseCwiseMul</source>
          <target state="translated">SparseDenseCwiseMul</target>
        </trans-unit>
        <trans-unit id="62f8d22d634ba8ed1c8905b6b404fb4b601cc5f7" translate="yes" xml:space="preserve">
          <source>SparseFillEmptyRows</source>
          <target state="translated">SparseFillEmptyRows</target>
        </trans-unit>
        <trans-unit id="ab7cf0e36f1467fdc9b3ae7d80d58d84eb0f1ab7" translate="yes" xml:space="preserve">
          <source>SparseFillEmptyRowsGrad</source>
          <target state="translated">SparseFillEmptyRowsGrad</target>
        </trans-unit>
        <trans-unit id="ce8bfa77ed4ac9f3fa1d2a359f566ebe70c39b48" translate="yes" xml:space="preserve">
          <source>SparseMatMul</source>
          <target state="translated">SparseMatMul</target>
        </trans-unit>
        <trans-unit id="cf14b376c29c3c02d073e282519a42fad3b16c08" translate="yes" xml:space="preserve">
          <source>SparseReduceMax</source>
          <target state="translated">SparseReduceMax</target>
        </trans-unit>
        <trans-unit id="abe4ee718716b4f2e1444db7308390e1ee3ed7ac" translate="yes" xml:space="preserve">
          <source>SparseReduceMaxSparse</source>
          <target state="translated">SparseReduceMaxSparse</target>
        </trans-unit>
        <trans-unit id="0fd09e8caf8a4d6991cfd23e07910f3f9c598d41" translate="yes" xml:space="preserve">
          <source>SparseReduceSum</source>
          <target state="translated">SparseReduceSum</target>
        </trans-unit>
        <trans-unit id="30eac2752ce1ceab0de7a5545abdb8ca33742ae0" translate="yes" xml:space="preserve">
          <source>SparseReduceSumSparse</source>
          <target state="translated">SparseReduceSumSparse</target>
        </trans-unit>
        <trans-unit id="6339f44ab9a27d89470df90d3d6c053bd1d15396" translate="yes" xml:space="preserve">
          <source>SparseReorder</source>
          <target state="translated">SparseReorder</target>
        </trans-unit>
        <trans-unit id="db860331321faa0d2837c12e83a4dc71a4d1ea38" translate="yes" xml:space="preserve">
          <source>SparseReshape</source>
          <target state="translated">SparseReshape</target>
        </trans-unit>
        <trans-unit id="a02cc82cd67e5d1fd156cbcd34d472d5fc5ef081" translate="yes" xml:space="preserve">
          <source>SparseSegmentMean</source>
          <target state="translated">SparseSegmentMean</target>
        </trans-unit>
        <trans-unit id="26f1162ce1d82f470fd702e14f79d5e7c9e39609" translate="yes" xml:space="preserve">
          <source>SparseSegmentMeanGrad</source>
          <target state="translated">SparseSegmentMeanGrad</target>
        </trans-unit>
        <trans-unit id="5146d89f1fd003f0d5bc8a63fe20aa9844ce7202" translate="yes" xml:space="preserve">
          <source>SparseSegmentMeanWithNumSegments</source>
          <target state="translated">SparseSegmentMeanWithNumSegments</target>
        </trans-unit>
        <trans-unit id="3e4e8a4d496f5ca492077964d5dc9586fef486e1" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtN</source>
          <target state="translated">SparseSegmentSqrtN</target>
        </trans-unit>
        <trans-unit id="ccba9de2aad7b2af6dbc3cdd0e9d48e92197309f" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtNGrad</source>
          <target state="translated">SparseSegmentSqrtNGrad</target>
        </trans-unit>
        <trans-unit id="0c8b21214653614b8e14c4a9191ad289716fc3ed" translate="yes" xml:space="preserve">
          <source>SparseSegmentSqrtNWithNumSegments</source>
          <target state="translated">SparseSegmentSqrtNWithNumSegments</target>
        </trans-unit>
        <trans-unit id="f3f0a05296f1ec028f1ecacda18d19691113dd3f" translate="yes" xml:space="preserve">
          <source>SparseSegmentSum</source>
          <target state="translated">SparseSegmentSum</target>
        </trans-unit>
        <trans-unit id="4c106d8d638767bc6148f2ac91b51f75b015d9f8" translate="yes" xml:space="preserve">
          <source>SparseSegmentSumWithNumSegments</source>
          <target state="translated">SparseSegmentSumWithNumSegments</target>
        </trans-unit>
        <trans-unit id="bde3aa2f1ff79895c18f788c8aaa0a84703fc850" translate="yes" xml:space="preserve">
          <source>SparseSlice</source>
          <target state="translated">SparseSlice</target>
        </trans-unit>
        <trans-unit id="07ee0f62ef583185aec4e065c61c02f50b42d3e8" translate="yes" xml:space="preserve">
          <source>SparseSliceGrad</source>
          <target state="translated">SparseSliceGrad</target>
        </trans-unit>
        <trans-unit id="1e170979bb98e066666e1d7c02b1980ab0de0f1e" translate="yes" xml:space="preserve">
          <source>SparseSoftmax</source>
          <target state="translated">SparseSoftmax</target>
        </trans-unit>
        <trans-unit id="f1a6fa9f8ea7ca8850a5f1ec7eb72dfce8fcb36b" translate="yes" xml:space="preserve">
          <source>SparseSoftmaxCrossEntropyWithLogits</source>
          <target state="translated">SparseSoftmaxCrossEntropyWithLogits</target>
        </trans-unit>
        <trans-unit id="c1aadec295283e1c2e27af2edb9e7a99885ecfa2" translate="yes" xml:space="preserve">
          <source>SparseSparseMaximum</source>
          <target state="translated">SparseSparseMaximum</target>
        </trans-unit>
        <trans-unit id="0db7745b65e7336d0412c2ecedfd8e19202d9a9b" translate="yes" xml:space="preserve">
          <source>SparseSparseMinimum</source>
          <target state="translated">SparseSparseMinimum</target>
        </trans-unit>
        <trans-unit id="17f6a95e588289e6f27054ecb850364d5a4110d1" translate="yes" xml:space="preserve">
          <source>SparseSplit</source>
          <target state="translated">SparseSplit</target>
        </trans-unit>
        <trans-unit id="4b02c490105a73e4677e7af826183a355e348428" translate="yes" xml:space="preserve">
          <source>SparseTensorDenseAdd</source>
          <target state="translated">SparseTensorDenseAdd</target>
        </trans-unit>
        <trans-unit id="9b0e03d3f005e119dab66c03dae6ae4555a46d37" translate="yes" xml:space="preserve">
          <source>SparseTensorDenseMatMul</source>
          <target state="translated">SparseTensorDenseMatMul</target>
        </trans-unit>
        <trans-unit id="c7001c1ac0b17fbd7ca3a02ab7f20b52959b8e41" translate="yes" xml:space="preserve">
          <source>Specifically, &lt;code&gt;y = 1 / (1 + exp(-x))&lt;/code&gt;.</source>
          <target state="translated">구체적으로, &lt;code&gt;y = 1 / (1 + exp(-x))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9ff7d39e693899b2fb01c2af7e0b9aad8efd43b" translate="yes" xml:space="preserve">
          <source>Specifically:</source>
          <target state="translated">Specifically:</target>
        </trans-unit>
        <trans-unit id="ddf69f59c495918735a3ad4cb6737344f4cfd6ff" translate="yes" xml:space="preserve">
          <source>Specify the data format of the input and output data.</source>
          <target state="translated">Specify the data format of the input and output data.</target>
        </trans-unit>
        <trans-unit id="bcd7a6074afeef60305a9e51917dbd2dc92f5a1d" translate="yes" xml:space="preserve">
          <source>Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along one dimension.</source>
          <target state="translated">Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along one dimension.</target>
        </trans-unit>
        <trans-unit id="13b61710ceda0a0a714c192ec19ac0321dd2bcae" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;delimiter&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2879700e56cee4a5b7ddb5f51a7d51aed2bf2ce6" translate="yes" xml:space="preserve">
          <source>Split elements of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">Split elements of &lt;code&gt;source&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5956ae8196d576bff8be43d5d3c6ba9f293914e" translate="yes" xml:space="preserve">
          <source>Split the data from the input value into &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Split the data from the input value into &lt;a href=&quot;../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="d9e55341b5ba36117dbeb9a206895c2d92d1e70a" translate="yes" xml:space="preserve">
          <source>Split the data from the input value into &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Split the data from the input value into &lt;a href=&quot;class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="0ee50b255554ecb2e148bc749b563d4451d34ee7" translate="yes" xml:space="preserve">
          <source>Split the data from the input value into &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</source>
          <target state="translated">Split the data from the input value into &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements.</target>
        </trans-unit>
        <trans-unit id="6bbb118b36018412cea4de47bc914f00685c9ac5" translate="yes" xml:space="preserve">
          <source>Sqrt</source>
          <target state="translated">Sqrt</target>
        </trans-unit>
        <trans-unit id="82810cb97184cf542141f811b63d90bc5de31d1b" translate="yes" xml:space="preserve">
          <source>Square</source>
          <target state="translated">Square</target>
        </trans-unit>
        <trans-unit id="f12d31a6bd87230a11338cd4f02ec5d2853d03df" translate="yes" xml:space="preserve">
          <source>SquaredDifference</source>
          <target state="translated">SquaredDifference</target>
        </trans-unit>
        <trans-unit id="1d7ecc92df442184b86e5397e495d36ea18fe01d" translate="yes" xml:space="preserve">
          <source>SrcFormat</source>
          <target state="translated">SrcFormat</target>
        </trans-unit>
        <trans-unit id="83e5a0d3d2ef19df258412a4d3ef3f9533b0c0c1" translate="yes" xml:space="preserve">
          <source>Stack</source>
          <target state="translated">Stack</target>
        </trans-unit>
        <trans-unit id="47dd9a3d44ce99e3bbd366c9c91a60fc96281e66" translate="yes" xml:space="preserve">
          <source>Stack Overflow</source>
          <target state="translated">Stack Overflow</target>
        </trans-unit>
        <trans-unit id="ca6d0e3aaa7d6cc0e9d9fe14eed28587f7ee1133" translate="yes" xml:space="preserve">
          <source>Stage</source>
          <target state="translated">Stage</target>
        </trans-unit>
        <trans-unit id="e9db0ce530e0e3406692c3626215571ff7c1e17e" translate="yes" xml:space="preserve">
          <source>StageClear</source>
          <target state="translated">StageClear</target>
        </trans-unit>
        <trans-unit id="ca4cd8248268a1a015d8be8ae12c3f40b95b4e29" translate="yes" xml:space="preserve">
          <source>StagePeek</source>
          <target state="translated">StagePeek</target>
        </trans-unit>
        <trans-unit id="cfaff0bfbcd716db675c7ddfbebd0f108a568bca" translate="yes" xml:space="preserve">
          <source>StageSize</source>
          <target state="translated">StageSize</target>
        </trans-unit>
        <trans-unit id="0ed1f9b8566baf7f0dbf0f79b5eaa6b0264bf7d1" translate="yes" xml:space="preserve">
          <source>State Ops</source>
          <target state="translated">State Ops</target>
        </trans-unit>
        <trans-unit id="925338de78ef990dae5c63810e8a9d9dde59c9df" translate="yes" xml:space="preserve">
          <source>Stay connected</source>
          <target state="translated">Stay connected</target>
        </trans-unit>
        <trans-unit id="b06e8e16410bacae116aaf4c85d647ff5691dee0" translate="yes" xml:space="preserve">
          <source>Store the input tensor in the state of the current session.</source>
          <target state="translated">Store the input tensor in the state of the current session.</target>
        </trans-unit>
        <trans-unit id="b28aca4ae944354b0ac05057ec3ff4f3c8088086" translate="yes" xml:space="preserve">
          <source>String Ops</source>
          <target state="translated">String Ops</target>
        </trans-unit>
        <trans-unit id="7b4c8e7832ea4bb28fb1ecea1eb04c21acf3235a" translate="yes" xml:space="preserve">
          <source>String lengths of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">의 문자열 길이를 &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56b757ccca43c3d5c7122b7bf0be5d39f94aadf7" translate="yes" xml:space="preserve">
          <source>StringFormat</source>
          <target state="translated">StringFormat</target>
        </trans-unit>
        <trans-unit id="febc3a9504942ba66d2686cf86922d3cf5631c76" translate="yes" xml:space="preserve">
          <source>StringJoin</source>
          <target state="translated">StringJoin</target>
        </trans-unit>
        <trans-unit id="747a6d9f79ce26bfcb75595cb97a96bf75d5f237" translate="yes" xml:space="preserve">
          <source>StringLength</source>
          <target state="translated">StringLength</target>
        </trans-unit>
        <trans-unit id="ecf4b9136eb2c585e0aa43773e5e6a271f4470d9" translate="yes" xml:space="preserve">
          <source>StringLower</source>
          <target state="translated">StringLower</target>
        </trans-unit>
        <trans-unit id="e701cf755f940d71be4654653b031b62a6f90a39" translate="yes" xml:space="preserve">
          <source>StringNGrams</source>
          <target state="translated">StringNGrams</target>
        </trans-unit>
        <trans-unit id="b6b8c2f2fe292b14e30b9dc4b3d2d0d73d2b3c78" translate="yes" xml:space="preserve">
          <source>StringSplit</source>
          <target state="translated">StringSplit</target>
        </trans-unit>
        <trans-unit id="83d070fc52da8b7c49d1eec25e4840e7ac623a94" translate="yes" xml:space="preserve">
          <source>StringSplitV2</source>
          <target state="translated">StringSplitV2</target>
        </trans-unit>
        <trans-unit id="3447a6da016b573f4a9b57aa81505e26c81f4c33" translate="yes" xml:space="preserve">
          <source>StringStrip</source>
          <target state="translated">StringStrip</target>
        </trans-unit>
        <trans-unit id="2456fea4c53341cb4fa48e9be5e86cf767c91827" translate="yes" xml:space="preserve">
          <source>StringToHashBucket</source>
          <target state="translated">StringToHashBucket</target>
        </trans-unit>
        <trans-unit id="a315e5a8362dbfb1db15edd08ef7acd2d1adc141" translate="yes" xml:space="preserve">
          <source>StringToHashBucketFast</source>
          <target state="translated">StringToHashBucketFast</target>
        </trans-unit>
        <trans-unit id="a1ebd64aa8e6e6b490c1de5f8d0e189cfe523c84" translate="yes" xml:space="preserve">
          <source>StringToHashBucketStrong</source>
          <target state="translated">StringToHashBucketStrong</target>
        </trans-unit>
        <trans-unit id="17895bd3a37cd75adfc52553eed6e06dfb429e14" translate="yes" xml:space="preserve">
          <source>StringToNumber</source>
          <target state="translated">StringToNumber</target>
        </trans-unit>
        <trans-unit id="4bed54a5cbfb94f15143c106342c651aa6141d46" translate="yes" xml:space="preserve">
          <source>StringUpper</source>
          <target state="translated">StringUpper</target>
        </trans-unit>
        <trans-unit id="696a1bcbc539979caaaa6f614bf5327bfc8b3ab2" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing whitespaces from the &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Strip leading and trailing whitespaces from the &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="705a4a9efae5f92fdaeedc31a06d8b0c69263698" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing whitespaces from the &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Strip leading and trailing whitespaces from the &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5766df640c84c49f6462cb566b89ec3728c0c2b6" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing whitespaces from the &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Strip leading and trailing whitespaces from the &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="66b9bcf6fa135918752a0ac296373b9fc45c7435" translate="yes" xml:space="preserve">
          <source>Structs</source>
          <target state="translated">Structs</target>
        </trans-unit>
        <trans-unit id="1f3c17ad45052c3c8faf844ec9d98e802f713c26" translate="yes" xml:space="preserve">
          <source>Sub</source>
          <target state="translated">Sub</target>
        </trans-unit>
        <trans-unit id="3fbcf9daff1af014dc0a28808dca2252730f739a" translate="yes" xml:space="preserve">
          <source>SubSlice</source>
          <target state="translated">SubSlice</target>
        </trans-unit>
        <trans-unit id="aeeea8448907cebd24c27fdb058a5a2b0063306c" translate="yes" xml:space="preserve">
          <source>Substr</source>
          <target state="translated">Substr</target>
        </trans-unit>
        <trans-unit id="ae5f61e523ef194692c08eae320b323a03f8bb9b" translate="yes" xml:space="preserve">
          <source>Subtract</source>
          <target state="translated">Subtract</target>
        </trans-unit>
        <trans-unit id="d0df54d59a0a8e3d7213b02b8f3dd1802f26c838" translate="yes" xml:space="preserve">
          <source>Subtracts &lt;code&gt;v&lt;/code&gt; into specified rows of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Subtracts &lt;code&gt;v&lt;/code&gt; into specified rows of &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7f817b1800d31c4059e5eec01c90ea508fa2de1" translate="yes" xml:space="preserve">
          <source>Subtracts sparse updates to a variable reference.</source>
          <target state="translated">변수 참조에 대한 희소 업데이트를 뺍니다.</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="9763dad72dd460e5575210b5538e3f1b017bce2c" translate="yes" xml:space="preserve">
          <source>Summarize</source>
          <target state="translated">Summarize</target>
        </trans-unit>
        <trans-unit id="401043c9db61507a2925656a2a52dd3bf643ef90" translate="yes" xml:space="preserve">
          <source>SummarizeValue</source>
          <target state="translated">SummarizeValue</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="e964d3014915281d079adadf918032ad21ee9376" translate="yes" xml:space="preserve">
          <source>Supports many numeric types and boolean.</source>
          <target state="translated">많은 숫자 유형과 부울을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1ed5b73f01ec764b2e1451778b0c4aa2a7352d61" translate="yes" xml:space="preserve">
          <source>Suppose that</source>
          <target state="translated">Suppose that</target>
        </trans-unit>
        <trans-unit id="3e44c920427e845df4958295eb8c3045b55fcfd5" translate="yes" xml:space="preserve">
          <source>Switch</source>
          <target state="translated">Switch</target>
        </trans-unit>
        <trans-unit id="8df4b52fbc8864648ac860405c6438c112669392" translate="yes" xml:space="preserve">
          <source>TFRecordReader</source>
          <target state="translated">TFRecordReader</target>
        </trans-unit>
        <trans-unit id="0670d6d1899b8c7a6ede58b5b723e5aff4b026c8" translate="yes" xml:space="preserve">
          <source>TODO: add doc.</source>
          <target state="translated">TODO : 문서를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="418198072f449c4293d3dd6569c308961e01e7f6" translate="yes" xml:space="preserve">
          <source>Tactivation</source>
          <target state="translated">Tactivation</target>
        </trans-unit>
        <trans-unit id="a3522d0ef2e1ef6cfcb989e2949bc04f709898b0" translate="yes" xml:space="preserve">
          <source>Tactivation: The type of output produced by activation function following this operation.</source>
          <target state="translated">Tactivation: The type of output produced by activation function following this operation.</target>
        </trans-unit>
        <trans-unit id="7ee4315c990a8694721e69dc5dd134c3ac40eb91" translate="yes" xml:space="preserve">
          <source>Tactivation_</source>
          <target state="translated">Tactivation_</target>
        </trans-unit>
        <trans-unit id="2eab7790b3d93d34755a8f59c3c006f04c2bbed3" translate="yes" xml:space="preserve">
          <source>TakeManySparseFromTensorsMap</source>
          <target state="translated">TakeManySparseFromTensorsMap</target>
        </trans-unit>
        <trans-unit id="c8cdf739c22a4d4562a4121cb9924e968d8c70c9" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;T&lt;/code&gt; elements of shapes</source>
          <target state="translated">Takes &lt;code&gt;T&lt;/code&gt; elements of shapes</target>
        </trans-unit>
        <trans-unit id="90f2cc362e7961321edf03101ab5c11b209fdfe1" translate="yes" xml:space="preserve">
          <source>Takes the given number of completed elements from a barrier.</source>
          <target state="translated">Takes the given number of completed elements from a barrier.</target>
        </trans-unit>
        <trans-unit id="6a4bc3c503c1251fa317296676237f5dd2f5cbff" translate="yes" xml:space="preserve">
          <source>Takes vectors reverse_index_map, shaped &lt;code&gt;[N]&lt;/code&gt;, and grad_values, shaped &lt;code&gt;[N_full]&lt;/code&gt;, where &lt;code&gt;N_full &amp;gt;= N&lt;/code&gt; and copies data into either &lt;code&gt;d_values&lt;/code&gt; or &lt;code&gt;d_default_value&lt;/code&gt;. Here &lt;code&gt;d_values&lt;/code&gt; is shaped &lt;code&gt;[N]&lt;/code&gt; and &lt;code&gt;d_default_value&lt;/code&gt; is a scalar.</source>
          <target state="translated">Takes vectors reverse_index_map, shaped &lt;code&gt;[N]&lt;/code&gt; , and grad_values, shaped &lt;code&gt;[N_full]&lt;/code&gt; , where &lt;code&gt;N_full &amp;gt;= N&lt;/code&gt; and copies data into either &lt;code&gt;d_values&lt;/code&gt; or &lt;code&gt;d_default_value&lt;/code&gt; . Here &lt;code&gt;d_values&lt;/code&gt; is shaped &lt;code&gt;[N]&lt;/code&gt; and &lt;code&gt;d_default_value&lt;/code&gt; is a scalar.</target>
        </trans-unit>
        <trans-unit id="133552ebfbcce8310f8920695422699d5256bac9" translate="yes" xml:space="preserve">
          <source>Tan</source>
          <target state="translated">Tan</target>
        </trans-unit>
        <trans-unit id="19bff9fbbbadd7b339e0ee0ae1715d62fea9cae0" translate="yes" xml:space="preserve">
          <source>Tanh</source>
          <target state="translated">Tanh</target>
        </trans-unit>
        <trans-unit id="48bfd06aa9437752b46b50adb64df66aa68d0e59" translate="yes" xml:space="preserve">
          <source>Targmax</source>
          <target state="translated">Targmax</target>
        </trans-unit>
        <trans-unit id="4006de31b29a18daec6c8bbec517985dc8bbf46d" translate="yes" xml:space="preserve">
          <source>Targmax_</source>
          <target state="translated">Targmax_</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="7587797028f9f977f3dcc7f5d6cb4ce9b3c6d940" translate="yes" xml:space="preserve">
          <source>TemporaryVariable</source>
          <target state="translated">TemporaryVariable</target>
        </trans-unit>
        <trans-unit id="680cb2d3fe397d144ed6bcd0531961c3a05ca6c0" translate="yes" xml:space="preserve">
          <source>Tensor</source>
          <target state="translated">Tensor</target>
        </trans-unit>
        <trans-unit id="e8cfa50554daa966a4bf3a8b045b195bf8bcb8b8" translate="yes" xml:space="preserve">
          <source>TensorArray</source>
          <target state="translated">TensorArray</target>
        </trans-unit>
        <trans-unit id="e48afa0d245404da5744de2c8636a3f5d39cfbe8" translate="yes" xml:space="preserve">
          <source>TensorArrayClose</source>
          <target state="translated">TensorArrayClose</target>
        </trans-unit>
        <trans-unit id="5cce057beabc2f9e2d52bcda9a2dd1007f597b54" translate="yes" xml:space="preserve">
          <source>TensorArrayConcat</source>
          <target state="translated">TensorArrayConcat</target>
        </trans-unit>
        <trans-unit id="cde7b38270db7c0b9c0de6e1377158f2b6c50c32" translate="yes" xml:space="preserve">
          <source>TensorArrayGather</source>
          <target state="translated">TensorArrayGather</target>
        </trans-unit>
        <trans-unit id="761aefb90e9078ba089d2df6236ad882da9a2007" translate="yes" xml:space="preserve">
          <source>TensorArrayGrad</source>
          <target state="translated">TensorArrayGrad</target>
        </trans-unit>
        <trans-unit id="9535f959112da37dbc6ef9e2abbdbb12a36ed126" translate="yes" xml:space="preserve">
          <source>TensorArrayGradWithShape</source>
          <target state="translated">TensorArrayGradWithShape</target>
        </trans-unit>
        <trans-unit id="2d23fe6cc863877773e1f3df504e6553cfeaec8d" translate="yes" xml:space="preserve">
          <source>TensorArrayName</source>
          <target state="translated">TensorArrayName</target>
        </trans-unit>
        <trans-unit id="7f889e1897d306a796c336146bd972099f47ac16" translate="yes" xml:space="preserve">
          <source>TensorArrayRead</source>
          <target state="translated">TensorArrayRead</target>
        </trans-unit>
        <trans-unit id="a853dee84c85c35795c3288b8fb9db2742f9d103" translate="yes" xml:space="preserve">
          <source>TensorArrayScatter</source>
          <target state="translated">TensorArrayScatter</target>
        </trans-unit>
        <trans-unit id="25d813ebee7cd1073b3ae4cce1ff827658177cf1" translate="yes" xml:space="preserve">
          <source>TensorArraySize</source>
          <target state="translated">TensorArraySize</target>
        </trans-unit>
        <trans-unit id="fbb5cce9e596e13305fdac67b26638bce1c4584a" translate="yes" xml:space="preserve">
          <source>TensorArraySplit</source>
          <target state="translated">TensorArraySplit</target>
        </trans-unit>
        <trans-unit id="059449a07f82b191b2b757ec228ea9591e698946" translate="yes" xml:space="preserve">
          <source>TensorArrayWrite</source>
          <target state="translated">TensorArrayWrite</target>
        </trans-unit>
        <trans-unit id="2e9d21785ddcb99f9d09243b883d13c86c1e65ef" translate="yes" xml:space="preserve">
          <source>TensorBuffer</source>
          <target state="translated">TensorBuffer</target>
        </trans-unit>
        <trans-unit id="0bfa3c3e3d03fb3fc3c1360a772c88e0f77ce025" translate="yes" xml:space="preserve">
          <source>TensorFlow C++</source>
          <target state="translated">TensorFlow C++</target>
        </trans-unit>
        <trans-unit id="f66f01dc0a275c37c55dfc00e4ad4501333be60d" translate="yes" xml:space="preserve">
          <source>TensorFlow C++ Reference</source>
          <target state="translated">TensorFlow C++ Reference</target>
        </trans-unit>
        <trans-unit id="cb9605b0e23dcfcc6641ff9040f90cf6eae32f09" translate="yes" xml:space="preserve">
          <source>TensorSummary</source>
          <target state="translated">TensorSummary</target>
        </trans-unit>
        <trans-unit id="f1b1e925cc812364ca2646b501ac9b1813d7be72" translate="yes" xml:space="preserve">
          <source>TensorSummaryV2</source>
          <target state="translated">TensorSummaryV2</target>
        </trans-unit>
        <trans-unit id="a55a275aa676930d9258569485d5b38eb1196630" translate="yes" xml:space="preserve">
          <source>Terms</source>
          <target state="translated">Terms</target>
        </trans-unit>
        <trans-unit id="00504b1255a96c459911faa4e9c084086511e171" translate="yes" xml:space="preserve">
          <source>TextLineReader</source>
          <target state="translated">TextLineReader</target>
        </trans-unit>
        <trans-unit id="3bd93c93ad7351313ce7fcdddf6eae9396528ebd" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows:</source>
          <target state="translated">That is for rows we have grad for, we update var and accum as follows:</target>
        </trans-unit>
        <trans-unit id="929ca813ba0d0e0e8019d57d723a975ded7a98c1" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows: accum += grad * grad prox_v = var prox_v -= lr * grad * (1 / sqrt(accum)) var = sign(prox_v)/(1+lr*l2) * max{|prox_v|-lr*l1,0}</source>
          <target state="translated">That is for rows we have grad for, we update var and accum as follows: accum += grad * grad prox_v = var prox_v -= lr * grad * (1 / sqrt(accum)) var = sign(prox_v)/(1+lr*l2) * max{|prox_v|-lr*l1,0}</target>
        </trans-unit>
        <trans-unit id="9ef1d3736ee1570a99e3839352b8be40fa69fa3b" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var and accum as follows: accum += grad * grad var -= lr * grad * (1 / sqrt(accum))</source>
          <target state="translated">That is for rows we have grad for, we update var and accum as follows: accum += grad * grad var -= lr * grad * (1 / sqrt(accum))</target>
        </trans-unit>
        <trans-unit id="e3002670e140323f193822e7322051db5b0796ae" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var as follows:</source>
          <target state="translated">That is for rows we have grad for, we update var as follows:</target>
        </trans-unit>
        <trans-unit id="87f1c5e604fe8b91203c415d93576c5c698bbe19" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var as follows: prox_v = var - alpha * grad var = sign(prox_v)/(1+alpha*l2) * max{|prox_v|-alpha*l1,0}</source>
          <target state="translated">That is for rows we have grad for, we update var as follows: prox_v = var - alpha * grad var = sign(prox_v)/(1+alpha*l2) * max{|prox_v|-alpha*l1,0}</target>
        </trans-unit>
        <trans-unit id="faa2fc81a8cc984f4e78327801816384e2824a57" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows:</source>
          <target state="translated">That is for rows we have grad for, we update var, accum and linear as follows:</target>
        </trans-unit>
        <trans-unit id="edbeb8da53ac3780cd97043899b23bcb49bd08f0" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: accum_new = accum + grad * grad linear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">That is for rows we have grad for, we update var, accum and linear as follows: accum_new = accum + grad * grad linear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="ae53fa0352a639df9f5ce6648263083ffb0e5c21" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad * grad linear += grad_with_shrinkage - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad * grad linear += grad_with_shrinkage - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="1fa4e061d9d26a6b3da848e09b858d3702ecff6b" translate="yes" xml:space="preserve">
          <source>That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad_with_shrinkage * grad_with_shrinkage linear += grad_with_shrinkage + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</source>
          <target state="translated">That is for rows we have grad for, we update var, accum and linear as follows: grad_with_shrinkage = grad + 2 * l2_shrinkage * var accum_new = accum + grad_with_shrinkage * grad_with_shrinkage linear += grad_with_shrinkage + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var quadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2 var = (sign(linear) * l1 - linear) / quadratic if |linear| &amp;gt; l1 else 0.0 accum = accum_new</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="3a52b8f9f913becb6fd29a8f15a03fd3134ed102" translate="yes" xml:space="preserve">
          <source>The 'round_mode' attribute controls which rounding tie-breaking algorithm is used when rounding float values to their quantized equivalents.</source>
          <target state="translated">The 'round_mode' attribute controls which rounding tie-breaking algorithm is used when rounding float values to their quantized equivalents.</target>
        </trans-unit>
        <trans-unit id="310600070b5ce2b07429f189bd9cdba9eeaed7e3" translate="yes" xml:space="preserve">
          <source>The 4-D &lt;code&gt;input&lt;/code&gt; tensor is treated as a 3-D array of 1-D vectors (along the last dimension), and each vector is normalized independently. Within a given vector, each component is divided by the weighted, squared sum of inputs within &lt;code&gt;depth_radius&lt;/code&gt;. In detail,</source>
          <target state="translated">4 차원 &lt;code&gt;input&lt;/code&gt; 텐서는 1 차원 벡터 (마지막 차원)의 3 차원 배열로 취급되며 각 벡터는 독립적으로 정규화됩니다. 주어진 벡터 내에서 각 구성 요소는 &lt;code&gt;depth_radius&lt;/code&gt; 내의 가중 제곱 입력 합으로 나뉩니다 . 상세히,</target>
        </trans-unit>
        <trans-unit id="8950c2a02860a272b1d610d3a00f1aa067b9780d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scope#classtensorflow_1_1_scope&quot;&gt;Scope&lt;/a&gt; class provides various With&amp;lt;&amp;gt; functions that create a new scope. The new scope typically has one property changed while other properties are inherited from the parent scope. NewSubScope(name) method appends &lt;code&gt;name&lt;/code&gt; to the prefix of names for ops created within the scope, and &lt;a href=&quot;scope#classtensorflow_1_1_scope_1aa716951887f54604c548553e1302fdb3&quot;&gt;WithOpName()&lt;/a&gt; changes the suffix which otherwise defaults to the type of the op.</source>
          <target state="translated">The &lt;a href=&quot;scope#classtensorflow_1_1_scope&quot;&gt;Scope&lt;/a&gt; class provides various With&amp;lt;&amp;gt; functions that create a new scope. The new scope typically has one property changed while other properties are inherited from the parent scope. NewSubScope(name) method appends &lt;code&gt;name&lt;/code&gt; to the prefix of names for ops created within the scope, and &lt;a href=&quot;scope#classtensorflow_1_1_scope_1aa716951887f54604c548553e1302fdb3&quot;&gt;WithOpName()&lt;/a&gt; changes the suffix which otherwise defaults to the type of the op.</target>
        </trans-unit>
        <trans-unit id="cb380f285dc02054e2b716f259635a1742019a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op calculates A + B, where A, B, and the sum are all represented as &lt;code&gt;SparseTensor&lt;/code&gt; objects. This op takes in the upstream gradient w.r.t. non-empty values of the sum, and outputs the gradients w.r.t. the non-empty values of A and B.</source>
          <target state="translated">The &lt;a href=&quot;sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op calculates A + B, where A, B, and the sum are all represented as &lt;code&gt;SparseTensor&lt;/code&gt; objects. This op takes in the upstream gradient w.r.t. non-empty values of the sum, and outputs the gradients w.r.t. the non-empty values of A and B.</target>
        </trans-unit>
        <trans-unit id="9826cfd16388cdd3717eae21c447d913b2b14afe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; can then be read out as part of a minibatch by passing the key as a vector element to &lt;code&gt;&lt;a href=&quot;take-many-sparse-from-tensors-map#classtensorflow_1_1ops_1_1_take_many_sparse_from_tensors_map&quot;&gt;TakeManySparseFromTensorsMap&lt;/a&gt;&lt;/code&gt;. To ensure the correct &lt;code&gt;SparseTensorsMap&lt;/code&gt; is accessed, ensure that the same &lt;code&gt;container&lt;/code&gt; and &lt;code&gt;shared_name&lt;/code&gt; are passed to that Op. If no &lt;code&gt;shared_name&lt;/code&gt; is provided here, instead use the</source>
          <target state="translated">The &lt;code&gt;SparseTensor&lt;/code&gt; can then be read out as part of a minibatch by passing the key as a vector element to &lt;code&gt;&lt;a href=&quot;take-many-sparse-from-tensors-map#classtensorflow_1_1ops_1_1_take_many_sparse_from_tensors_map&quot;&gt;TakeManySparseFromTensorsMap&lt;/a&gt;&lt;/code&gt; . To ensure the correct &lt;code&gt;SparseTensorsMap&lt;/code&gt; is accessed, ensure that the same &lt;code&gt;container&lt;/code&gt; and &lt;code&gt;shared_name&lt;/code&gt; are passed to that Op. If no &lt;code&gt;shared_name&lt;/code&gt; is provided here, instead use the</target>
        </trans-unit>
        <trans-unit id="e408353ec897db2100239f8ae8da9071b4cc1520" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SparseTensor&lt;/code&gt; must have rank &lt;code&gt;R&lt;/code&gt; greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the &lt;code&gt;SparseTensor&lt;/code&gt; must be sorted in increasing order of this first dimension. The serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects going into each row of &lt;code&gt;serialized_sparse&lt;/code&gt; will have rank &lt;code&gt;R-1&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;SparseTensor&lt;/code&gt; must have rank &lt;code&gt;R&lt;/code&gt; greater than 1, and the first dimension is treated as the minibatch dimension. Elements of the &lt;code&gt;SparseTensor&lt;/code&gt; must be sorted in increasing order of this first dimension. The serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects going into each row of &lt;code&gt;serialized_sparse&lt;/code&gt; will have rank &lt;code&gt;R-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8af58715c30e66d456c8d6905c0d5153fbdbbc7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;band&lt;/code&gt; part is computed as follows: Assume &lt;code&gt;input&lt;/code&gt; has &lt;code&gt;k&lt;/code&gt; dimensions &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt;, then the output is a tensor with the same shape where</source>
          <target state="translated">&lt;code&gt;band&lt;/code&gt; 다음 부분이 계산된다 가정 &lt;code&gt;input&lt;/code&gt; 갖는 &lt;code&gt;k&lt;/code&gt; 개의 치수 &lt;code&gt;[I, J, K, ..., M, N]&lt;/code&gt; , 그 출력이 동일한 형상을 가진 곳 텐서</target>
        </trans-unit>
        <trans-unit id="01ab58045b90ae07778088607a3eab393fc1bb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; tensor acts as a mask that chooses, based on the value at each element, whether the corresponding element / row in the output should be taken from &lt;code&gt;x&lt;/code&gt; (if true) or &lt;code&gt;y&lt;/code&gt; (if false).</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; 텐서는 각 요소의 값에 기초하여 선택한다면가 출력 내의 대응하는 요소 / 행에서 수행되어야하는지 여부 것을 마스크로서 역할을 &lt;code&gt;x&lt;/code&gt; (true 인 경우), 또는 &lt;code&gt;y&lt;/code&gt; (FALSE 경우).</target>
        </trans-unit>
        <trans-unit id="facc94a32b1104f4cf40a2df2cff62adde7bf05f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; tensor must be a scalar if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scalars. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are vectors or higher rank, then &lt;code&gt;condition&lt;/code&gt; must be either a scalar, a vector with size matching the first dimension of &lt;code&gt;x&lt;/code&gt;, or must have the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;condition&lt;/code&gt; tensor must be a scalar if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scalars. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are vectors or higher rank, then &lt;code&gt;condition&lt;/code&gt; must be either a scalar, a vector with size matching the first dimension of &lt;code&gt;x&lt;/code&gt; , or must have the same shape as &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdd71fb6bd2b9b57b19cddd99579978c6dafa2a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_format&lt;/code&gt; attr specifies the layout of the input and output tensors with the following options: &quot;NHWC&quot;: &lt;code&gt;[ batch, height, width, channels ]&lt;/code&gt; &quot;NCHW&quot;: &lt;code&gt;[ batch, channels, height, width ]&lt;/code&gt; &quot;NCHW_VECT_C&quot;: &lt;code&gt;qint8 [ batch, channels / 4, height, width, 4 ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data_format&lt;/code&gt; 의 ATTR의 지정은 다음 옵션 입출력 텐서의 레이아웃 &quot;NHWC&quot; &lt;code&gt;[ batch, height, width, channels ]&lt;/code&gt; &quot;NCHW&quot; &lt;code&gt;[ batch, channels, height, width ]&lt;/code&gt; &quot;NCHW_VECT_C&quot; &lt;code&gt;qint8 [ batch, channels / 4, height, width, 4 ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26ebf3d28ccf55474553bc1e991d09503b0491c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dtype&lt;/code&gt; to use for serialization; the supported types are &lt;code&gt;string&lt;/code&gt; (default) and &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;dtype&lt;/code&gt; to use for serialization; the supported types are &lt;code&gt;string&lt;/code&gt; (default) and &lt;code&gt;variant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cca3019d062a9892e2676ec309dbc9e2a90d317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; tensor has shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; and the &lt;code&gt;filter&lt;/code&gt; tensor has shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;, i.e., each input channel is processed independently of the others with its own structuring function. The &lt;code&gt;output&lt;/code&gt; tensor has shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;. The spatial dimensions of the output tensor depend on the &lt;code&gt;padding&lt;/code&gt; algorithm. We currently only support the default &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 텐서 형상 갖는다 &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt; 상기 &lt;code&gt;filter&lt;/code&gt; 텐서 형상 갖는다 &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt; 즉, 각각의 입력 채널이 독립적으로 자신의 구조 기능 다른 것의 처리된다. &lt;code&gt;output&lt;/code&gt; 텐서는 형상을 갖고 &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; . 출력 텐서의 공간 치수는 &lt;code&gt;padding&lt;/code&gt; 알고리즘 에 따라 다릅니다 . 현재 기본 &quot;NHWC&quot; &lt;code&gt;data_format&lt;/code&gt; 만 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="d13bfd7a5ca2e420c3f8127a4926e69a983fa787" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output&lt;/code&gt; is a string &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of the same shape as &lt;code&gt;bytes&lt;/code&gt;, each element containing the decompressed data from the corresponding element in &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;output&lt;/code&gt; is a string &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of the same shape as &lt;code&gt;bytes&lt;/code&gt; , each element containing the decompressed data from the corresponding element in &lt;code&gt;bytes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de524f73c4314e7c1d91fd220ad1d6d3224de54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; and &lt;code&gt;exclusive&lt;/code&gt; kwargs can also be combined:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; 및 &lt;code&gt;exclusive&lt;/code&gt; kwargs로도 결합 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="8b50b1f6924595eb632ea11ab0952b5d11d264a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape_and_slice&lt;/code&gt; input has the same format as the elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input of the &lt;code&gt;&lt;a href=&quot;save-slices#classtensorflow_1_1ops_1_1_save_slices&quot;&gt;SaveSlices&lt;/a&gt;&lt;/code&gt; op.</source>
          <target state="translated">The &lt;code&gt;shape_and_slice&lt;/code&gt; input has the same format as the elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input of the &lt;code&gt;&lt;a href=&quot;save-slices#classtensorflow_1_1ops_1_1_save_slices&quot;&gt;SaveSlices&lt;/a&gt;&lt;/code&gt; op.</target>
        </trans-unit>
        <trans-unit id="53206259248744399fbd24897c8067df1a6c0465" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; argument is a scalar &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. It is used to build the &lt;code&gt;tag&lt;/code&gt; of the summary values:</source>
          <target state="translated">The &lt;code&gt;tag&lt;/code&gt; argument is a scalar &lt;code&gt;&lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt; . It is used to build the &lt;code&gt;tag&lt;/code&gt; of the summary values:</target>
        </trans-unit>
        <trans-unit id="69729f00c8f95ede39f1e1c8779a9d3dafea8bbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tf.math.asin&lt;/code&gt; operation returns the inverse of &lt;code&gt;tf.math.sin&lt;/code&gt;, such that if &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;tf.math.asin&lt;/code&gt; operation returns the inverse of &lt;code&gt;tf.math.sin&lt;/code&gt; , such that if &lt;code&gt;y = tf.math.sin(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.asin(y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8c5ac866141b41cab32820b2eb907ac7184a1c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tf.math.atan&lt;/code&gt; operation returns the inverse of &lt;code&gt;tf.math.tan&lt;/code&gt;, such that if &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;tf.math.atan&lt;/code&gt; operation returns the inverse of &lt;code&gt;tf.math.tan&lt;/code&gt; , such that if &lt;code&gt;y = tf.math.tan(x)&lt;/code&gt; then, &lt;code&gt;x = tf.math.atan(y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7671379c01d658910f965c7fbeadd766859617c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt; tensors must all have the same shape, and the output will also have that shape.</source>
          <target state="translated">The &lt;code&gt;x&lt;/code&gt; , and &lt;code&gt;y&lt;/code&gt; tensors must all have the same shape, and the output will also have that shape.</target>
        </trans-unit>
        <trans-unit id="d81e5e619b3ab76ee0da2d228e26df5c365438e4" translate="yes" xml:space="preserve">
          <source>The Hurwitz zeta function is defined as:</source>
          <target state="translated">Hurwitz zeta 함수는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3d6c86d0708bda3da64a9da6d3c863b9ab737231" translate="yes" xml:space="preserve">
          <source>The Y, X coordinates within each block of the output image are determined by the high order component of the input channel index.</source>
          <target state="translated">출력 이미지의 각 블록 내의 Y, X 좌표는 입력 채널 인덱스의 상위 성분에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="8cd36e977186fec64e8448a96228fbf260cd4605" translate="yes" xml:space="preserve">
          <source>The ZLIB compression level, &lt;code&gt;compression&lt;/code&gt;, can be -1 for the PNG-encoder default or a value from 0 to 9. 9 is the highest compression level, generating the smallest output, but is slower.</source>
          <target state="translated">ZLIB 압축 수준 &lt;code&gt;compression&lt;/code&gt; 은 PNG 인코더 기본값의 경우 -1이거나 0에서 9 사이의 값일 수 있습니다. 9는 가장 높은 압축 수준으로 가장 작은 출력을 생성하지만 느립니다.</target>
        </trans-unit>
        <trans-unit id="9ef3aa1fdfb679e9cef445f78d4851d53a003535" translate="yes" xml:space="preserve">
          <source>The above round function rounds the value based on the given round_mode.</source>
          <target state="translated">The above round function rounds the value based on the given round_mode.</target>
        </trans-unit>
        <trans-unit id="fa718bc26e2d4009bae4f7cc79776b6a1f114908" translate="yes" xml:space="preserve">
          <source>The accumulator accepts gradients marked with local_step greater or equal to the most recent global_step known to the accumulator. The average can be extracted from the accumulator, provided sufficient gradients have been accumulated. Extracting the average automatically resets the aggregate to 0, and increments the global_step recorded by the accumulator.</source>
          <target state="translated">The accumulator accepts gradients marked with local_step greater or equal to the most recent global_step known to the accumulator. The average can be extracted from the accumulator, provided sufficient gradients have been accumulated. Extracting the average automatically resets the aggregate to 0, and increments the global_step recorded by the accumulator.</target>
        </trans-unit>
        <trans-unit id="f24861cc1a42612e73b3f3665071eeed2c9ea315" translate="yes" xml:space="preserve">
          <source>The additional robustness comes at a cost of roughly 4x higher compute time than &lt;code&gt;tf.string_to_hash_bucket_fast&lt;/code&gt;.</source>
          <target state="translated">추가적인 견고성은 &lt;code&gt;tf.string_to_hash_bucket_fast&lt;/code&gt; 보다 계산 시간이 약 4 배 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="23463dc8793b352e4536a04ab556ea601344e39c" translate="yes" xml:space="preserve">
          <source>The advantages of sampling candidates per-batch are simplicity and the possibility of efficient dense matrix multiplication. The disadvantage is that the sampled candidates must be chosen independently of the context and of the true labels.</source>
          <target state="translated">The advantages of sampling candidates per-batch are simplicity and the possibility of efficient dense matrix multiplication. The disadvantage is that the sampled candidates must be chosen independently of the context and of the true labels.</target>
        </trans-unit>
        <trans-unit id="d2d3e064486f4100aead5629a0acce01f2954896" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;normalized&lt;/code&gt; and &lt;code&gt;centered&lt;/code&gt; controls how the windows are built:</source>
          <target state="translated">논쟁은 &lt;code&gt;normalized&lt;/code&gt; 되고 &lt;code&gt;centered&lt;/code&gt; 는 창을 만드는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1b8141113a16ee9c1ee49249a42c4ec753fd4479" translate="yes" xml:space="preserve">
          <source>The argument returned by this operation is of the form \(atan2(b, a)\).</source>
          <target state="translated">The argument returned by this operation is of the form \(atan2(b, a)\).</target>
        </trans-unit>
        <trans-unit id="d8f6f1e67bc16f32d9f24b6bf9dc1327c99b4c20" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;block_size&lt;/code&gt; must be greater than one. It indicates the block size.</source>
          <target state="translated">attr &lt;code&gt;block_size&lt;/code&gt; 는 1보다 커야합니다. 블록 크기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b44ab2abacbb2efdb69194961a5971ce5296193c" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;channels&lt;/code&gt; indicates the desired number of color channels for the decoded image.</source>
          <target state="translated">attr &lt;code&gt;channels&lt;/code&gt; 은 디코딩 된 이미지에 대한 원하는 컬러 채널 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="60563f76a3b65c009555c6aca9d9b0a28f8e6c56" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;format&lt;/code&gt; can be used to override the color format of the encoded output. Values can be:</source>
          <target state="translated">attr &lt;code&gt;format&lt;/code&gt; 을 사용하여 인코딩 된 출력의 색상 형식을 재정의 할 수 있습니다. 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae606ee2da5f189375721f138e9665ac82e81365" translate="yes" xml:space="preserve">
          <source>The attr &lt;code&gt;ratio&lt;/code&gt; allows downscaling the image by an integer factor during decoding. Allowed values are: 1, 2, 4, and 8. This is much faster than downscaling the image later.</source>
          <target state="translated">attr &lt;code&gt;ratio&lt;/code&gt; 은 디코딩 중에 이미지를 정수로 축소 할 수 있습니다. 허용되는 값은 1, 2, 4 및 8입니다. 이것은 나중에 이미지를 축소하는 것보다 훨씬 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="d9b9a1df5bcde31b68f129f1217703cff10aebda" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;source&lt;/code&gt; is added as a suffix to the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt;'s name when performing the creation / lookup, so that each separate gradient calculation gets its own &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; accumulator.</source>
          <target state="translated">The attribute &lt;code&gt;source&lt;/code&gt; is added as a suffix to the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt;'s name when performing the creation / lookup, so that each separate gradient calculation gets its own &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; accumulator.</target>
        </trans-unit>
        <trans-unit id="eaf9bdc79969635901c1b7428a237e7743aef889" translate="yes" xml:space="preserve">
          <source>The axis to fill (default: -1, a new inner-most axis).</source>
          <target state="translated">The axis to fill (default: -1, a new inner-most axis).</target>
        </trans-unit>
        <trans-unit id="e683aeb65a23e8619a38b301846fe9aa22a79e70" translate="yes" xml:space="preserve">
          <source>The backward operation for &quot;BiasAdd&quot; on the &quot;bias&quot; tensor.</source>
          <target state="translated">The backward operation for &quot;BiasAdd&quot; on the &quot;bias&quot; tensor.</target>
        </trans-unit>
        <trans-unit id="ded41e0565ef5f400dbd93cc56863d8aef5c6704" translate="yes" xml:space="preserve">
          <source>The basic functionality is similar to dequeue with many fewer capabilities and options. This Op is optimized for performance.</source>
          <target state="translated">The basic functionality is similar to dequeue with many fewer capabilities and options. This Op is optimized for performance.</target>
        </trans-unit>
        <trans-unit id="dade1361cd3ab94fd2385c47804539cc6fda3a6a" translate="yes" xml:space="preserve">
          <source>The basic functionality of this Op is similar to a queue with many fewer capabilities and options. This Op is optimized for performance.</source>
          <target state="translated">The basic functionality of this Op is similar to a queue with many fewer capabilities and options. This Op is optimized for performance.</target>
        </trans-unit>
        <trans-unit id="3253e5040032a27dffdd2e2255ecd2897d899ea6" translate="yes" xml:space="preserve">
          <source>The batch size.</source>
          <target state="translated">The batch size.</target>
        </trans-unit>
        <trans-unit id="d9d6c8abb90d01f2c83046e4ffaae926e1136406" translate="yes" xml:space="preserve">
          <source>The biggest difference between this and MIN_COMBINED is that the minimum range is rounded first, before it's subtracted from the rounded value. With MIN_COMBINED, a small bias is introduced where repeated iterations of quantizing and dequantizing will introduce a larger and larger error.</source>
          <target state="translated">이것과 MIN_COMBINED의 가장 큰 차이점은 반올림 값에서 빼기 전에 최소 범위가 먼저 반올림된다는 것입니다. MIN_COMBINED를 사용하면 반복적 인 양자화 및 역 양자화 반복이 더 큰 오류를 발생시키는 작은 바이어스가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1b8c51d786a68de27c6b4224613923d5f7bdaf37" translate="yes" xml:space="preserve">
          <source>The bitwidth of the quantization.</source>
          <target state="translated">The bitwidth of the quantization.</target>
        </trans-unit>
        <trans-unit id="83f626bad95509351cc633a448d85b6d372484f3" translate="yes" xml:space="preserve">
          <source>The bitwidth of the quantization; between 2 and 16, inclusive.</source>
          <target state="translated">The bitwidth of the quantization; between 2 and 16, inclusive.</target>
        </trans-unit>
        <trans-unit id="97a3e93dff60feb98085f89713fa7e5052a9f72d" translate="yes" xml:space="preserve">
          <source>The bitwidth of the quantization; between 2 and 8, inclusive.</source>
          <target state="translated">The bitwidth of the quantization; between 2 and 8, inclusive.</target>
        </trans-unit>
        <trans-unit id="efe0154f3129d8797ae4d86ea67593b071a195fb" translate="yes" xml:space="preserve">
          <source>The capacity of the barrier.</source>
          <target state="translated">The capacity of the barrier.</target>
        </trans-unit>
        <trans-unit id="d65e2fd04371734d652468cc491b0cee4ff69e4f" translate="yes" xml:space="preserve">
          <source>The centered RMSProp algorithm uses an estimate of the centered second moment (i.e., the variance) for normalization, as opposed to regular RMSProp, which uses the (uncentered) second moment. This often helps with training, but is slightly more expensive in terms of computation and memory.</source>
          <target state="translated">The centered RMSProp algorithm uses an estimate of the centered second moment (i.e., the variance) for normalization, as opposed to regular RMSProp, which uses the (uncentered) second moment. This often helps with training, but is slightly more expensive in terms of computation and memory.</target>
        </trans-unit>
        <trans-unit id="2a97fc9aeef3aac0ee7b0d6fc3913b5f131a8ce4" translate="yes" xml:space="preserve">
          <source>The complex conjugate returned by this operation is of the form \(a - bj\).</source>
          <target state="translated">이 오퍼레이션에 의해 리턴되는 켤레 복소수는 \ (a-bj \) 형식입니다.</target>
        </trans-unit>
        <trans-unit id="c2a070804637f1f7cd7f3478e19c13e4ff6876a9" translate="yes" xml:space="preserve">
          <source>The components input has k elements, which correspond to the components of tuples stored in the given queue.</source>
          <target state="translated">The components input has k elements, which correspond to the components of tuples stored in the given queue.</target>
        </trans-unit>
        <trans-unit id="c59eec3d2d0b5c59df01393a6f2a9e914a2a5275" translate="yes" xml:space="preserve">
          <source>The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op.</source>
          <target state="translated">The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op.</target>
        </trans-unit>
        <trans-unit id="51a652696d1eae6c275cf4fcec2b4d27818f7652" translate="yes" xml:space="preserve">
          <source>The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op.</source>
          <target state="translated">The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op.</target>
        </trans-unit>
        <trans-unit id="71b0b2f0883e23c0d78b36ea03ea580817cc91c4" translate="yes" xml:space="preserve">
          <source>The cropped area of the image must contain a fraction of the supplied image within this range.</source>
          <target state="translated">The cropped area of the image must contain a fraction of the supplied image within this range.</target>
        </trans-unit>
        <trans-unit id="a1d398c1a2850ca3f4a7c36c1cb5543ff9933b51" translate="yes" xml:space="preserve">
          <source>The cropped area of the image must contain at least this fraction of any bounding box supplied.</source>
          <target state="translated">The cropped area of the image must contain at least this fraction of any bounding box supplied.</target>
        </trans-unit>
        <trans-unit id="eac8662859218b34ff995e896aa3fd1d80245ab4" translate="yes" xml:space="preserve">
          <source>The cropped area of the image must have an aspect ratio = width / height within this range.</source>
          <target state="translated">The cropped area of the image must have an aspect ratio = width / height within this range.</target>
        </trans-unit>
        <trans-unit id="0e1e3663ead0f80d5379392c5fb54bbf32b5424f" translate="yes" xml:space="preserve">
          <source>The current implementation memmaps the tensor from a file.</source>
          <target state="translated">The current implementation memmaps the tensor from a file.</target>
        </trans-unit>
        <trans-unit id="bf42808fe4395d81a684a226abb32ba71c4946b7" translate="yes" xml:space="preserve">
          <source>The data format for x and y.</source>
          <target state="translated">The data format for x and y.</target>
        </trans-unit>
        <trans-unit id="94b1be4c6b136a722f7820938ea2b4ca157da2ce" translate="yes" xml:space="preserve">
          <source>The data format for y_backprop, x, x_backprop.</source>
          <target state="translated">The data format for y_backprop, x, x_backprop.</target>
        </trans-unit>
        <trans-unit id="aa1ea8e350a880711b875a188009969f91feba6e" translate="yes" xml:space="preserve">
          <source>The data format of the input and output data.</source>
          <target state="translated">The data format of the input and output data.</target>
        </trans-unit>
        <trans-unit id="c6821495b92401f5f268e1a77a58afdd3ec07d6c" translate="yes" xml:space="preserve">
          <source>The default capacity is MAX_INT32, which is the largest capacity of the underlying queue.</source>
          <target state="translated">The default capacity is MAX_INT32, which is the largest capacity of the underlying queue.</target>
        </trans-unit>
        <trans-unit id="14677f62117afd0f039c6514a425b63a1e9ea352" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;uniform&lt;/code&gt; which means the the noise type will be decided by &lt;code&gt;uniform_noise&lt;/code&gt;.</source>
          <target state="translated">The default is &lt;code&gt;uniform&lt;/code&gt; which means the the noise type will be decided by &lt;code&gt;uniform_noise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2137c8c00ab29126bb362981cb4aca8aa9eecd42" translate="yes" xml:space="preserve">
          <source>The depth of the input tensor must be divisible by &lt;code&gt;block_size * block_size&lt;/code&gt;.</source>
          <target state="translated">입력 텐서의 깊이는 &lt;code&gt;block_size * block_size&lt;/code&gt; 로 나눌 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bcc3aba817880e065f4223ea3362fcfb9ea484b3" translate="yes" xml:space="preserve">
          <source>The difference between concat and parallel_concat is that concat requires all of the inputs be computed before the operation will begin but doesn't require that the input shapes be known during graph construction. Parallel concat will copy pieces of the input into the output as they become available, in some situations this can provide a performance benefit.</source>
          <target state="translated">The difference between concat and parallel_concat is that concat requires all of the inputs be computed before the operation will begin but doesn't require that the input shapes be known during graph construction. Parallel concat will copy pieces of the input into the output as they become available, in some situations this can provide a performance benefit.</target>
        </trans-unit>
        <trans-unit id="9086b4746f7b8b313042a6aaf12c1c0c2e510a00" translate="yes" xml:space="preserve">
          <source>The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="translated">The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt; . If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt; , see above for details. Dilations in the batch and depth dimensions must be 1.</target>
        </trans-unit>
        <trans-unit id="f8ad31dad954ef59a9a77a7e1c97a5653c440bfb" translate="yes" xml:space="preserve">
          <source>The distortion is used to skew the unigram probability distribution.</source>
          <target state="translated">The distortion is used to skew the unigram probability distribution.</target>
        </trans-unit>
        <trans-unit id="b86ebc65ff7fe45f105d160f18d2c35f7cb8da0f" translate="yes" xml:space="preserve">
          <source>The empty string, in which case the corresponding tensor is saved normally.</source>
          <target state="translated">The empty string, in which case the corresponding tensor is saved normally.</target>
        </trans-unit>
        <trans-unit id="c3aeafaf8f36325e7f515de971621d719406107b" translate="yes" xml:space="preserve">
          <source>The end result is that if the input is marked as an explicit endianness the transcoding is faithful to all codepoints in the source. If it is not marked with an explicit endianness, the BOM is not considered part of the string itself but as metadata, and so is not preserved in the output.</source>
          <target state="translated">최종 결과는 입력이 명시 적 엔디안으로 표시되면 트랜스 코딩이 소스의 모든 코드 포인트에 충실하다는 것입니다. 명시 적 엔디안으로 표시되지 않은 경우 BOM은 문자열 자체의 일부가 아니라 메타 데이터로 간주되므로 출력에 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d65550a30b121d05bb828827dc66796e2fe9871" translate="yes" xml:space="preserve">
          <source>The expected shape of an element, if known, excluding the first dimension.</source>
          <target state="translated">The expected shape of an element, if known, excluding the first dimension.</target>
        </trans-unit>
        <trans-unit id="5d3441c3fae20a395f14da8afd8c138849b1d308" translate="yes" xml:space="preserve">
          <source>The expected shape of an element, if known.</source>
          <target state="translated">The expected shape of an element, if known.</target>
        </trans-unit>
        <trans-unit id="82655e42b1437bc19f6847136811112cc62f1982" translate="yes" xml:space="preserve">
          <source>The filename is printf formatted as</source>
          <target state="translated">The filename is printf formatted as</target>
        </trans-unit>
        <trans-unit id="86857a5c0b84584ed052008e915aded29e0a59f0" translate="yes" xml:space="preserve">
          <source>The following rounding modes are currently supported:</source>
          <target state="translated">The following rounding modes are currently supported:</target>
        </trans-unit>
        <trans-unit id="007ebe6728618a7898441ae12a0f6cd50a3e68eb" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt;`Summary`&lt;/a&gt; has one summary value containing a histogram for &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">The generated &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt;`Summary`&lt;/a&gt; has one summary value containing a histogram for &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4d0e9a2a91b309d7ff0adf11bf3c435181bcb9c" translate="yes" xml:space="preserve">
          <source>The generated values are uniform integers in the range &lt;code&gt;[minval, maxval)&lt;/code&gt;. The lower bound &lt;code&gt;minval&lt;/code&gt; is included in the range, while the upper bound &lt;code&gt;maxval&lt;/code&gt; is excluded.</source>
          <target state="translated">The generated values are uniform integers in the range &lt;code&gt;[minval, maxval)&lt;/code&gt; . The lower bound &lt;code&gt;minval&lt;/code&gt; is included in the range, while the upper bound &lt;code&gt;maxval&lt;/code&gt; is excluded.</target>
        </trans-unit>
        <trans-unit id="aaccd314351760e5cabf42f9640ec2685d7cb77b" translate="yes" xml:space="preserve">
          <source>The generated values follow a normal distribution with mean 0 and standard deviation 1, except that values whose magnitude is more than 2 standard deviations from the mean are dropped and re-picked.</source>
          <target state="translated">The generated values follow a normal distribution with mean 0 and standard deviation 1, except that values whose magnitude is more than 2 standard deviations from the mean are dropped and re-picked.</target>
        </trans-unit>
        <trans-unit id="ad922f688ee4660e4c8bf530c9eb75a9c98e5b45" translate="yes" xml:space="preserve">
          <source>The generated values follow a uniform distribution in the range &lt;code&gt;[0, 1)&lt;/code&gt;. The lower bound 0 is included in the range, while the upper bound 1 is excluded.</source>
          <target state="translated">The generated values follow a uniform distribution in the range &lt;code&gt;[0, 1)&lt;/code&gt; . The lower bound 0 is included in the range, while the upper bound 1 is excluded.</target>
        </trans-unit>
        <trans-unit id="3ef793d516e9c255e6083a55e2c214fa9d53e3d0" translate="yes" xml:space="preserve">
          <source>The generated values will have mean 0 and standard deviation 1.</source>
          <target state="translated">The generated values will have mean 0 and standard deviation 1.</target>
        </trans-unit>
        <trans-unit id="3d3156853168009a94a5c1b0cfac4b477414f449" translate="yes" xml:space="preserve">
          <source>The gradient computation of this operation will only take advantage of sparsity in the input gradient when that gradient comes from a &lt;a href=&quot;relu#classtensorflow_1_1ops_1_1_relu&quot;&gt;Relu&lt;/a&gt;.</source>
          <target state="translated">The gradient computation of this operation will only take advantage of sparsity in the input gradient when that gradient comes from a &lt;a href=&quot;relu#classtensorflow_1_1ops_1_1_relu&quot;&gt;Relu&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ddad7a54a42d2a8dce33fcb49c94553c48cd2a15" translate="yes" xml:space="preserve">
          <source>The gradient of &lt;a href=&quot;../class/tensorflow/ops/sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</source>
          <target state="translated">The gradient of &lt;a href=&quot;../class/tensorflow/ops/sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc85fa6cb5f01e7c779ccad28c0d4aa2f2af78cd" translate="yes" xml:space="preserve">
          <source>The gradient of &lt;a href=&quot;class/tensorflow/ops/sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</source>
          <target state="translated">The gradient of &lt;a href=&quot;class/tensorflow/ops/sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bebb9a6111d7719d46b2070517bba5ff99726a0f" translate="yes" xml:space="preserve">
          <source>The gradient of &lt;a href=&quot;sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</source>
          <target state="translated">The gradient of &lt;a href=&quot;sparse-fill-empty-rows#classtensorflow_1_1ops_1_1_sparse_fill_empty_rows&quot;&gt;SparseFillEmptyRows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e35b26108abe0c2d5560b5ab503f3a6f79320b11" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;../class/tensorflow/ops/sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;../class/tensorflow/ops/sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="c3516ca8a36e35062aa42e0c459f7724c77f475c" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;../class/tensorflow/ops/sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;../class/tensorflow/ops/sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="5881d78401158cd41bc5cf10b84dd64c9dad250d" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;class/tensorflow/ops/sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;class/tensorflow/ops/sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="8e4e9d5466e69ced6f6a002d11e6767272f27618" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;class/tensorflow/ops/sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;class/tensorflow/ops/sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="a57125e540bd021576cbffff088641689ccf4e4f" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;sparse-add#classtensorflow_1_1ops_1_1_sparse_add&quot;&gt;SparseAdd&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="5958072175c1e94de472a5ad40c895a81690562c" translate="yes" xml:space="preserve">
          <source>The gradient operator for the &lt;a href=&quot;sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</source>
          <target state="translated">The gradient operator for the &lt;a href=&quot;sparse-slice#classtensorflow_1_1ops_1_1_sparse_slice&quot;&gt;SparseSlice&lt;/a&gt; op.</target>
        </trans-unit>
        <trans-unit id="c25b5fcafad4d428cc7e0cc08a978a7f77c68f28" translate="yes" xml:space="preserve">
          <source>The handle flow_in forces the execution of the gradient lookup to occur only after certain other operations have occurred. For example, when the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is dynamically sized, writes to this &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; may resize the object. The gradient &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is statically sized based on the size of the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; when this operation executes. Furthermore, the size of the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is frozen by this call. As a result, the flow is used to ensure that the call to generate the gradient &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; only happens after all writes are executed.</source>
          <target state="translated">The handle flow_in forces the execution of the gradient lookup to occur only after certain other operations have occurred. For example, when the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is dynamically sized, writes to this &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; may resize the object. The gradient &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is statically sized based on the size of the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; when this operation executes. Furthermore, the size of the forward &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; is frozen by this call. As a result, the flow is used to ensure that the call to generate the gradient &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; only happens after all writes are executed.</target>
        </trans-unit>
        <trans-unit id="0f4987b71fd23d4d24937f4f99fea76affcae8b1" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process and will never change. However, it is not suitable for cryptography. This function may be used when CPU time is scarce and inputs are trusted or unimportant. There is a risk of adversaries constructing inputs that all hash to the same bucket. To prevent this problem, use a strong hash function with &lt;code&gt;tf.string_to_hash_bucket_strong&lt;/code&gt;.</source>
          <target state="translated">해시 함수는 프로세스 내의 문자열 내용에 결정적이며 절대 변경되지 않습니다. 그러나 암호화에는 적합하지 않습니다. 이 기능은 CPU 시간이 부족하고 입력을 신뢰할 수 있거나 중요하지 않은 경우에 사용할 수 있습니다. 공격자가 모두 동일한 버킷에 해시하는 입력을 구성 할 위험이 있습니다. 이 문제를 방지하려면 &lt;code&gt;tf.string_to_hash_bucket_strong&lt;/code&gt; 과 함께 강력한 해시 함수를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd0bfc8db5880e8eee54fb3385531988b2ad4a55" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process.</source>
          <target state="translated">해시 함수는 프로세스 내의 문자열 내용에 결정적입니다.</target>
        </trans-unit>
        <trans-unit id="61f428a10a4305c850461ee00f387b0cacfe0ef7" translate="yes" xml:space="preserve">
          <source>The hash function is deterministic on the content of the string within the process. The hash function is a keyed hash function, where attribute &lt;code&gt;key&lt;/code&gt; defines the key of the hash function. &lt;code&gt;key&lt;/code&gt; is an array of 2 elements.</source>
          <target state="translated">해시 함수는 프로세스 내의 문자열 내용에 결정적입니다. 해시 함수는 키가있는 해시 함수이며, 여기서 속성 &lt;code&gt;key&lt;/code&gt; 는 해시 함수의 키를 정의합니다. &lt;code&gt;key&lt;/code&gt; 는 2 개의 요소로 구성된 배열입니다.</target>
        </trans-unit>
        <trans-unit id="c48ed1044647075aee18b6c60d833446c1e6e4e9" translate="yes" xml:space="preserve">
          <source>The images have the same number of channels as the input tensor. For float input, the values are normalized one image at a time to fit in the range &lt;code&gt;[0, 255]&lt;/code&gt;. &lt;code&gt;uint8&lt;/code&gt; values are unchanged. The op uses two different normalization algorithms:</source>
          <target state="translated">The images have the same number of channels as the input tensor. For float input, the values are normalized one image at a time to fit in the range &lt;code&gt;[0, 255]&lt;/code&gt; . &lt;code&gt;uint8&lt;/code&gt; values are unchanged. The op uses two different normalization algorithms:</target>
        </trans-unit>
        <trans-unit id="14e09cd196d124b973e167954c771249f4762ea9" translate="yes" xml:space="preserve">
          <source>The indicator function</source>
          <target state="translated">표시기 기능</target>
        </trans-unit>
        <trans-unit id="e479f7d6722440bc7a24c4b0e9bd9fc43faf862a" translate="yes" xml:space="preserve">
          <source>The indices in &lt;code&gt;argmax&lt;/code&gt; are flattened, so that a maximum value at position &lt;code&gt;[b, y, x, c]&lt;/code&gt; becomes flattened index: &lt;code&gt;(y * width + x) * channels + c&lt;/code&gt; if &lt;code&gt;include_batch_in_index&lt;/code&gt; is False; &lt;code&gt;((b * height + y) * width + x) * channels + c&lt;/code&gt; if &lt;code&gt;include_batch_in_index&lt;/code&gt; is True.</source>
          <target state="translated">있는 인덱스 &lt;code&gt;argmax&lt;/code&gt; 는 제 위치에서 최대 값 것을 평탄화된다 &lt;code&gt;[b, y, x, c]&lt;/code&gt; 평면화 인덱스된다 : &lt;code&gt;(y * width + x) * channels + c&lt;/code&gt; 경우 &lt;code&gt;include_batch_in_index&lt;/code&gt; 가 거짓이고; &lt;code&gt;include_batch_in_index&lt;/code&gt; 가 True 인 경우 &lt;code&gt;((b * height + y) * width + x) * channels + c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6678184e53cf5eab61e8f12ffd050f2da0981541" translate="yes" xml:space="preserve">
          <source>The indices returned are always in &lt;code&gt;[0, height) x [0, width)&lt;/code&gt; before flattening, even if padding is involved and the mathematically correct answer is outside (either negative or too large). This is a bug, but fixing it is difficult to do in a safe backwards compatible way, especially due to flattening.</source>
          <target state="translated">패딩이 관련되어 있고 수학적으로 정답이 외부에 있거나 (음수이거나 너무 큰 경우 &lt;code&gt;[0, height) x [0, width)&lt;/code&gt; 반환 된 인덱스는 전개하기 전에 항상 [0, 높이) x [0, 너비 )입니다. 이것은 버그이지만 수정하는 것은 특히 병합으로 인해 이전 버전과 호환되는 안전한 방법으로 수행하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="f25a7f282e145204d03b73aafeaa7a9ae16b013a" translate="yes" xml:space="preserve">
          <source>The innermost dimension of &lt;code&gt;indices&lt;/code&gt; (with length &lt;code&gt;K&lt;/code&gt;) corresponds to indices into elements (if &lt;code&gt;K = P&lt;/code&gt;) or slices (if &lt;code&gt;K &amp;lt; P&lt;/code&gt;) along the &lt;code&gt;K&lt;/code&gt;th dimension of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">가장 긴 &lt;code&gt;indices&lt;/code&gt; 길이 (길이 &lt;code&gt;K&lt;/code&gt; ) 는 &lt;code&gt;ref&lt;/code&gt; 의 &lt;code&gt;K&lt;/code&gt; 번째 차원을 따라 요소 ( &lt;code&gt;K = P&lt;/code&gt; ) 또는 슬라이스 ( &lt;code&gt;K &amp;lt; P&lt;/code&gt; 경우)의 인덱스에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="9d4e204148af56a0113e634b28635c0d262a9319" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; is represented via the tuple of inputs (&lt;code&gt;indices&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;dense_shape&lt;/code&gt;). The output &lt;code&gt;SparseTensor&lt;/code&gt; has the same &lt;code&gt;dense_shape&lt;/code&gt; but with indices &lt;code&gt;output_indices&lt;/code&gt; and values &lt;code&gt;output_values&lt;/code&gt;.</source>
          <target state="translated">The input &lt;code&gt;SparseTensor&lt;/code&gt; is represented via the tuple of inputs ( &lt;code&gt;indices&lt;/code&gt; , &lt;code&gt;values&lt;/code&gt; , &lt;code&gt;dense_shape&lt;/code&gt; ). The output &lt;code&gt;SparseTensor&lt;/code&gt; has the same &lt;code&gt;dense_shape&lt;/code&gt; but with indices &lt;code&gt;output_indices&lt;/code&gt; and values &lt;code&gt;output_values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4122ef9419d7c4992e5a30a65a054715ee1b15f" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, after this step run &lt;code&gt;&lt;a href=&quot;sparse-reorder#classtensorflow_1_1ops_1_1_sparse_reorder&quot;&gt;SparseReorder&lt;/a&gt;&lt;/code&gt; to restore index ordering.</source>
          <target state="translated">The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, after this step run &lt;code&gt;&lt;a href=&quot;sparse-reorder#classtensorflow_1_1ops_1_1_sparse_reorder&quot;&gt;SparseReorder&lt;/a&gt;&lt;/code&gt; to restore index ordering.</target>
        </trans-unit>
        <trans-unit id="ea061c83223812290d9b063bcec4749e30f7e982" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, before this step run &lt;code&gt;&lt;a href=&quot;sparse-reorder#classtensorflow_1_1ops_1_1_sparse_reorder&quot;&gt;SparseReorder&lt;/a&gt;&lt;/code&gt; to restore index ordering.</source>
          <target state="translated">The input &lt;code&gt;SparseTensor&lt;/code&gt; objects' indices are assumed ordered in standard lexicographic order. If this is not the case, before this step run &lt;code&gt;&lt;a href=&quot;sparse-reorder#classtensorflow_1_1ops_1_1_sparse_reorder&quot;&gt;SparseReorder&lt;/a&gt;&lt;/code&gt; to restore index ordering.</target>
        </trans-unit>
        <trans-unit id="2012b3ce183ce65c2f550e404c7e93013bbddf2e" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;serialized_sparse&lt;/code&gt; must be a string matrix of shape &lt;code&gt;[N x 3]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the minibatch size and the rows correspond to packed outputs of &lt;code&gt;&lt;a href=&quot;serialize-sparse#classtensorflow_1_1ops_1_1_serialize_sparse&quot;&gt;SerializeSparse&lt;/a&gt;&lt;/code&gt;. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, it has rank one higher than the ranks of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects (they have been concatenated along a new row dimension).</source>
          <target state="translated">The input &lt;code&gt;serialized_sparse&lt;/code&gt; must be a string matrix of shape &lt;code&gt;[N x 3]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the minibatch size and the rows correspond to packed outputs of &lt;code&gt;&lt;a href=&quot;serialize-sparse#classtensorflow_1_1ops_1_1_serialize_sparse&quot;&gt;SerializeSparse&lt;/a&gt;&lt;/code&gt; . The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, it has rank one higher than the ranks of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects (they have been concatenated along a new row dimension).</target>
        </trans-unit>
        <trans-unit id="1a26b3031ce9b2139c0f9a566a88efe37f0d9f15" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;serialized_sparse&lt;/code&gt; must have the shape &lt;code&gt;[?, ?, ..., ?, 3]&lt;/code&gt; where the last dimension stores serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects and the other N dimensions (N &amp;gt;= 0) correspond to a batch. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, its rank is the rank of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects plus N; the sparse tensors have been concatenated along new dimensions, one for each batch.</source>
          <target state="translated">The input &lt;code&gt;serialized_sparse&lt;/code&gt; must have the shape &lt;code&gt;[?, ?, ..., ?, 3]&lt;/code&gt; where the last dimension stores serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects and the other N dimensions (N &amp;gt;= 0) correspond to a batch. The ranks of the original &lt;code&gt;SparseTensor&lt;/code&gt; objects must all match. When the final &lt;code&gt;SparseTensor&lt;/code&gt; is created, its rank is the rank of the incoming &lt;code&gt;SparseTensor&lt;/code&gt; objects plus N; the sparse tensors have been concatenated along new dimensions, one for each batch.</target>
        </trans-unit>
        <trans-unit id="6797d5a30fe0809d6c99b3fe7233e4388f788d3d" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; must have the same shape. The generated summary has a summary value for each tag-value pair in &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">The input &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; must have the same shape. The generated summary has a summary value for each tag-value pair in &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d751c1504cdeea4fe2c77555b81110d615e4802e" translate="yes" xml:space="preserve">
          <source>The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A delta is then applied all the hue values, and then remapped back to RGB colorspace.</source>
          <target state="translated">The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A delta is then applied all the hue values, and then remapped back to RGB colorspace.</target>
        </trans-unit>
        <trans-unit id="6a0a6cfeac0c5da1f89ebf29a1c3a1974b9f86fa" translate="yes" xml:space="preserve">
          <source>The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A scale is then applied all the saturation values, and then remapped back to RGB colorspace.</source>
          <target state="translated">The input image is considered in the RGB colorspace. Conceptually, the RGB colors are first mapped into HSV. A scale is then applied all the saturation values, and then remapped back to RGB colorspace.</target>
        </trans-unit>
        <trans-unit id="15c3bd95f3bdb097d2884e98ee9f1d72a626a4eb" translate="yes" xml:space="preserve">
          <source>The input is a string tensor of any shape. The output is a string tensor of the same shape containing the transcoded strings. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; strings are always valid unicode. If the input contains invalid encoding positions, the &lt;code&gt;errors&lt;/code&gt; attribute sets the policy for how to deal with them. If the default error-handling policy is used, invalid formatting will be substituted in the output by the &lt;code&gt;replacement_char&lt;/code&gt;. If the errors policy is to &lt;code&gt;ignore&lt;/code&gt;, any invalid encoding positions in the input are skipped and not included in the output. If it set to &lt;code&gt;strict&lt;/code&gt; then any invalid formatting will result in an InvalidArgument error.</source>
          <target state="translated">The input is a string tensor of any shape. The output is a string tensor of the same shape containing the transcoded strings. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; strings are always valid unicode. If the input contains invalid encoding positions, the &lt;code&gt;errors&lt;/code&gt; attribute sets the policy for how to deal with them. If the default error-handling policy is used, invalid formatting will be substituted in the output by the &lt;code&gt;replacement_char&lt;/code&gt; . If the errors policy is to &lt;code&gt;ignore&lt;/code&gt; , any invalid encoding positions in the input are skipped and not included in the output. If it set to &lt;code&gt;strict&lt;/code&gt; then any invalid formatting will result in an InvalidArgument error.</target>
        </trans-unit>
        <trans-unit id="f41ed33e18d35e0df944af43170682bbfbe88dab" translate="yes" xml:space="preserve">
          <source>The input is a string tensor of any shape. The pattern is a scalar string tensor which is applied to every element of the input tensor. The boolean values (True or False) of the output tensor indicate if the input matches the regex pattern provided.</source>
          <target state="translated">입력은 모든 모양의 문자열 텐서입니다. 패턴은 입력 텐서의 모든 요소에 적용되는 스칼라 문자열 텐서입니다. 출력 텐서의 부울 값 (True 또는 False)은 입력이 제공된 정규식 패턴과 일치하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b4fb5738c7b407c21bcad2cacc1ef5ec4dff9b6d" translate="yes" xml:space="preserve">
          <source>The input must be at least a matrix.</source>
          <target state="translated">입력은 적어도 행렬이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8bd030040de18dc6a388054f2ae79e10c262d194" translate="yes" xml:space="preserve">
          <source>The input tensors &lt;code&gt;real&lt;/code&gt; and &lt;code&gt;imag&lt;/code&gt; must have the same shape.</source>
          <target state="translated">입력 텐서 &lt;code&gt;real&lt;/code&gt; 과 &lt;code&gt;imag&lt;/code&gt; 는 같은 모양이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b8ff1df3e5bbb4197a5fcf6ebfa2ea96c023b0d7" translate="yes" xml:space="preserve">
          <source>The input tensors &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are 2-D or higher with shape &lt;code&gt;[..., r_x, c_x]&lt;/code&gt; and &lt;code&gt;[..., r_y, c_y]&lt;/code&gt;.</source>
          <target state="translated">The input tensors &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are 2-D or higher with shape &lt;code&gt;[..., r_x, c_x]&lt;/code&gt; and &lt;code&gt;[..., r_y, c_y]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff60fbd9db5f41897771ca434c8e26b7b8f91862" translate="yes" xml:space="preserve">
          <source>The input tensors are all required to have size 1 in the first dimension.</source>
          <target state="translated">The input tensors are all required to have size 1 in the first dimension.</target>
        </trans-unit>
        <trans-unit id="d0798e60c9a60a309c2780811ed22bf523e44034" translate="yes" xml:space="preserve">
          <source>The inputs are quantized tensors where the lowest value represents the real number of the associated minimum, and the highest represents the maximum. This means that you can only interpret the quantized output in the same way, by taking the returned minimum and maximum values into account.</source>
          <target state="translated">입력 값은 양자화 된 텐서이며, 가장 낮은 값은 연관된 최소값의 실수를 나타내고 가장 높은 값은 최대 값을 나타냅니다. 즉, 반환 된 최소값과 최대 값을 고려하여 양자화 된 출력 만 동일한 방식으로 해석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d5491d4d1fe59ff0b726933e4fd0f37e6b34849" translate="yes" xml:space="preserve">
          <source>The inputs are variable-length sequences provided by SparseTensors (hypothesis_indices, hypothesis_values, hypothesis_shape) and (truth_indices, truth_values, truth_shape).</source>
          <target state="translated">The inputs are variable-length sequences provided by SparseTensors (hypothesis_indices, hypothesis_values, hypothesis_shape) and (truth_indices, truth_values, truth_shape).</target>
        </trans-unit>
        <trans-unit id="9b2d715db408ed4c68b80c58649420f90265275e" translate="yes" xml:space="preserve">
          <source>The inputs are:</source>
          <target state="translated">The inputs are:</target>
        </trans-unit>
        <trans-unit id="bd731653b58f2631c265c170d9e7475175fa31c7" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; (after being transposed if transpose_a is true) must match the outer dimension of &quot;b&quot; (after being transposed if transposed_b is true).</source>
          <target state="translated">The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; (after being transposed if transpose_a is true) must match the outer dimension of &quot;b&quot; (after being transposed if transposed_b is true).</target>
        </trans-unit>
        <trans-unit id="d493cf2e48e2540009bc06591ee64b3bd796587b" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; must match the outer dimension of &quot;b&quot;. Both &quot;a&quot; and &quot;b&quot; must be &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt;s not &lt;code&gt;SparseTensor&lt;/code&gt;s. This op is optimized for the case where at least one of &quot;a&quot; or &quot;b&quot; is sparse, in the sense that they have a large proportion of zero values. The breakeven for using this versus a dense matrix multiply on one platform was 30% zero values in the sparse matrix.</source>
          <target state="translated">The inputs must be two-dimensional matrices and the inner dimension of &quot;a&quot; must match the outer dimension of &quot;b&quot;. Both &quot;a&quot; and &quot;b&quot; must be &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; s not &lt;code&gt;SparseTensor&lt;/code&gt; s. This op is optimized for the case where at least one of &quot;a&quot; or &quot;b&quot; is sparse, in the sense that they have a large proportion of zero values. The breakeven for using this versus a dense matrix multiply on one platform was 30% zero values in the sparse matrix.</target>
        </trans-unit>
        <trans-unit id="ff06fbddb811e99d2772aad28bf55f55c80fc380" translate="yes" xml:space="preserve">
          <source>The inputs must be two-dimensional matrices and the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero).</source>
          <target state="translated">The inputs must be two-dimensional matrices and the inner dimension of &lt;code&gt;a&lt;/code&gt; (after being transposed if &lt;code&gt;transpose_a&lt;/code&gt; is non-zero) must match the outer dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero).</target>
        </trans-unit>
        <trans-unit id="ea6567bbb82a2153b18593d35fddb52d49ff3e46" translate="yes" xml:space="preserve">
          <source>The inputs represent an N-D SparseTensor with logical shape &lt;code&gt;[..., B, C]&lt;/code&gt; (where &lt;code&gt;N &amp;gt;= 2&lt;/code&gt;), and with indices sorted in the canonical lexicographic order.</source>
          <target state="translated">입력 값은 논리적 모양 &lt;code&gt;[..., B, C]&lt;/code&gt; (여기서 &lt;code&gt;N &amp;gt;= 2&lt;/code&gt; )이며 표준 사전 사전 순으로 정렬 된 ND SparseTensor를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="78cc8d00f8e7491129a68b99d8285b81a0423488" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; can be at most the rank of &lt;code&gt;params&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 의 마지막 차원은 최대 &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecdf342100af669eb1e5196eae29b7087572c686" translate="yes" xml:space="preserve">
          <source>The last dimension of &lt;code&gt;indices&lt;/code&gt; corresponds to elements (if &lt;code&gt;indices.shape[-1] == params.rank&lt;/code&gt;) or slices (if &lt;code&gt;indices.shape[-1] &amp;lt; params.rank&lt;/code&gt;) along dimension &lt;code&gt;indices.shape[-1]&lt;/code&gt; of &lt;code&gt;params&lt;/code&gt;. The output tensor has shape</source>
          <target state="translated">&lt;code&gt;indices&lt;/code&gt; 의 마지막 차원 은 &lt;code&gt;params&lt;/code&gt; &lt;code&gt;indices.shape[-1]&lt;/code&gt; 차원을 따라 요소 ( &lt;code&gt;indices.shape[-1] == params.rank&lt;/code&gt; ) 또는 슬라이스 ( &lt;code&gt;indices.shape[-1] &amp;lt; params.rank&lt;/code&gt; )에 해당합니다. . 출력 텐서 모양</target>
        </trans-unit>
        <trans-unit id="238d11f1c0c001291a18168ac810cf131a10d350" translate="yes" xml:space="preserve">
          <source>The length of this attr must be either 0 or the same as the length of component_types. If the length of this attr is 0, the shapes of queue elements are not constrained, and only one element may be dequeued at a time.</source>
          <target state="translated">The length of this attr must be either 0 or the same as the length of component_types. If the length of this attr is 0, the shapes of queue elements are not constrained, and only one element may be dequeued at a time.</target>
        </trans-unit>
        <trans-unit id="d2e280d20a3a9d3254029145c1ad7b57994d625d" translate="yes" xml:space="preserve">
          <source>The length of this attr must be either 0 or the same as the length of component_types. Shapes of fixed rank but variable size are allowed by setting any shape dimension to -1. In this case, the inputs' shape may vary along the given dimension, and DequeueMany will pad the given dimension with zeros up to the maximum shape of all elements in the given batch. If the length of this attr is 0, different queue elements may have different ranks and shapes, but only one element may be dequeued at a time.</source>
          <target state="translated">The length of this attr must be either 0 or the same as the length of component_types. Shapes of fixed rank but variable size are allowed by setting any shape dimension to -1. In this case, the inputs' shape may vary along the given dimension, and DequeueMany will pad the given dimension with zeros up to the maximum shape of all elements in the given batch. If the length of this attr is 0, different queue elements may have different ranks and shapes, but only one element may be dequeued at a time.</target>
        </trans-unit>
        <trans-unit id="7016678a2375c9753e8eaf54d3415095320d885f" translate="yes" xml:space="preserve">
          <source>The locations represented by indices in &lt;code&gt;indices&lt;/code&gt; take value &lt;code&gt;on_value&lt;/code&gt;, while all other locations take value &lt;code&gt;off_value&lt;/code&gt;.</source>
          <target state="translated">인덱스에서 &lt;code&gt;indices&lt;/code&gt; 표시되는 위치는 &lt;code&gt;on_value&lt;/code&gt; 값 을 사용하고 다른 모든 위치는 &lt;code&gt;off_value&lt;/code&gt; 값을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="90f307f8c8cab35fd072b8a08ea2d9e8126898ba" translate="yes" xml:space="preserve">
          <source>The lower regularized incomplete Gamma function is defined as:</source>
          <target state="translated">정규화되지 않은 불완전한 감마 함수는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="92e2ad7451bc39b5a9f66295a075f0e536414b99" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes allowed for Tensors in the Staging Area.</source>
          <target state="translated">The maximum number of bytes allowed for Tensors in the Staging Area.</target>
        </trans-unit>
        <trans-unit id="c879ab9978d630c89fff8cae92e9db4343f09490" translate="yes" xml:space="preserve">
          <source>The minibatch size &lt;code&gt;N&lt;/code&gt; is extracted from &lt;code&gt;sparse_shape[0]&lt;/code&gt;.</source>
          <target state="translated">미니 배치 크기 &lt;code&gt;N&lt;/code&gt; 은 sparse_shape &lt;code&gt;sparse_shape[0]&lt;/code&gt; 에서 추출됩니다 .</target>
        </trans-unit>
        <trans-unit id="748060b9904052ad723859b34604e40f348874c8" translate="yes" xml:space="preserve">
          <source>The minimum required fraction of lines before a truncated input is accepted.</source>
          <target state="translated">The minimum required fraction of lines before a truncated input is accepted.</target>
        </trans-unit>
        <trans-unit id="7a542f609ddb2b589a1785974f51dc264ee2ecd5" translate="yes" xml:space="preserve">
          <source>The number of elements in the Feature corresponding to context_dense_key[j] must always equal context_dense_shapes[j].NumEntries(). The shape of context_dense_values[j] will match context_dense_shapes[j].</source>
          <target state="translated">The number of elements in the Feature corresponding to context_dense_key[j] must always equal context_dense_shapes[j].NumEntries(). The shape of context_dense_values[j] will match context_dense_shapes[j].</target>
        </trans-unit>
        <trans-unit id="6f11ab21ce4b38c69293a29e14d4b10bfb9ed39d" translate="yes" xml:space="preserve">
          <source>The numeric type to interpret each string in &lt;code&gt;string_tensor&lt;/code&gt; as.</source>
          <target state="translated">The numeric type to interpret each string in &lt;code&gt;string_tensor&lt;/code&gt; as.</target>
        </trans-unit>
        <trans-unit id="2a51ce2977b54408b0ebf05f943b7e7ef7f2b4b9" translate="yes" xml:space="preserve">
          <source>The op blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it returns the average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</source>
          <target state="translated">The op blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it returns the average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</target>
        </trans-unit>
        <trans-unit id="4c7eaeb0f4f2891f98f97c987e5d0efb52332d5c" translate="yes" xml:space="preserve">
          <source>The op takes two lists, one of 2D &lt;code&gt;SparseTensor&lt;/code&gt; and one of 2D &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt;, each representing features of one feature column. It outputs a 2D &lt;code&gt;SparseTensor&lt;/code&gt; with the batchwise crosses of these features.</source>
          <target state="translated">The op takes two lists, one of 2D &lt;code&gt;SparseTensor&lt;/code&gt; and one of 2D &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; , each representing features of one feature column. It outputs a 2D &lt;code&gt;SparseTensor&lt;/code&gt; with the batchwise crosses of these features.</target>
        </trans-unit>
        <trans-unit id="cdf5001b31416df4d7ddde7f5a11360958f3382b" translate="yes" xml:space="preserve">
          <source>The op will blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it will return its average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</source>
          <target state="translated">The op will blocks until sufficient (i.e., more than num_required) gradients have been accumulated. If the accumulator has already aggregated more than num_required gradients, it will return its average of the accumulated gradients. Also automatically increments the recorded global_step in the accumulator by 1, and resets the aggregate to 0.</target>
        </trans-unit>
        <trans-unit id="6cbee182d1e93b7a67194ace24e07bb1fbf0e4bc" translate="yes" xml:space="preserve">
          <source>The op-constructor functions taking the returned scope as the scope argument will exit as soon as an error is detected, instead of setting the status on the scope.</source>
          <target state="translated">The op-constructor functions taking the returned scope as the scope argument will exit as soon as an error is detected, instead of setting the status on the scope.</target>
        </trans-unit>
        <trans-unit id="5de4376c6188e4d08a540cf134fa2a4b31768037" translate="yes" xml:space="preserve">
          <source>The order of tensors in &lt;code&gt;feed_tensors&lt;/code&gt; must match the order of names in &lt;code&gt;CallableOptions::feed()&lt;/code&gt; and the order of tensors in &lt;code&gt;fetch_tensors&lt;/code&gt; will match the order of names in &lt;code&gt;CallableOptions::fetch()&lt;/code&gt; when this subgraph was created. NOTE: This API is still experimental and may change.</source>
          <target state="translated">The order of tensors in &lt;code&gt;feed_tensors&lt;/code&gt; must match the order of names in &lt;code&gt;CallableOptions::feed()&lt;/code&gt; and the order of tensors in &lt;code&gt;fetch_tensors&lt;/code&gt; will match the order of names in &lt;code&gt;CallableOptions::fetch()&lt;/code&gt; when this subgraph was created. NOTE: This API is still experimental and may change.</target>
        </trans-unit>
        <trans-unit id="8d650eca6a136e51fc7375e0969bc2ea1115b2e2" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; object's shape values for all dimensions but the first are the max across the input &lt;code&gt;SparseTensor&lt;/code&gt; objects' shape values for the corresponding dimensions. Its first shape value is &lt;code&gt;N&lt;/code&gt;, the minibatch size.</source>
          <target state="translated">모든 치수에 대한 출력 &lt;code&gt;SparseTensor&lt;/code&gt; 객체의 모양 값이지만 첫 번째는 해당 치수에 대한 입력 &lt;code&gt;SparseTensor&lt;/code&gt; 객체의 모양 값에 대한 최대 값입니다. 첫 번째 도형 값은 미니 배치 크기 인 &lt;code&gt;N&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f7899fd3a60fa39b01002b08a0bd2e514e0a6d60" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; object's shape values for the original dimensions are the max across the input &lt;code&gt;SparseTensor&lt;/code&gt; objects' shape values for the corresponding dimensions. The new dimensions match the size of the batch.</source>
          <target state="translated">The output &lt;code&gt;SparseTensor&lt;/code&gt; object's shape values for the original dimensions are the max across the input &lt;code&gt;SparseTensor&lt;/code&gt; objects' shape values for the corresponding dimensions. The new dimensions match the size of the batch.</target>
        </trans-unit>
        <trans-unit id="27cd935b967006cc01a667a4b3f9d0444d7da4c5" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;SparseTensor&lt;/code&gt; will be in row-major order and will have the same shape as the input.</source>
          <target state="translated">출력 &lt;code&gt;SparseTensor&lt;/code&gt; 는 행 주요 순서이며 입력과 동일한 모양을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ac7bc3e3640548894477903c76a63029f0684b7b" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;y&lt;/code&gt; has the same rank as &lt;code&gt;x&lt;/code&gt;. The shapes of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; satisfy: &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt;&lt;code&gt;y[i,j,k,...,s,t,u] == conj(x[perm[i], perm[j], perm[k],...,perm[s], perm[t], perm[u]])&lt;/code&gt;</source>
          <target state="translated">The output &lt;code&gt;y&lt;/code&gt; has the same rank as &lt;code&gt;x&lt;/code&gt; . The shapes of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; satisfy: &lt;code&gt;y.shape[i] == x.shape[perm[i]] for i in [0, 1, ..., rank(x) - 1]&lt;/code&gt; &lt;code&gt;y[i,j,k,...,s,t,u] == conj(x[perm[i], perm[j], perm[k],...,perm[s], perm[t], perm[u]])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01cfec4a29cc69f6abe94502062c73070782ab76" translate="yes" xml:space="preserve">
          <source>The output elements will be resorted to preserve the sort order along increasing dimension number.</source>
          <target state="translated">치수 요소가 증가함에 따라 정렬 순서를 유지하기 위해 출력 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="38c8f8944795768b987abf44161bc29810671bc1" translate="yes" xml:space="preserve">
          <source>The output is a tensor of rank &lt;code&gt;k+1&lt;/code&gt; with dimensions &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt;. If &lt;code&gt;k&lt;/code&gt; is scalar or &lt;code&gt;k[0] == k[1]&lt;/code&gt;:</source>
          <target state="translated">출력은 크기가 &lt;code&gt;[I, J, ..., L, M, N]&lt;/code&gt; 인 순위 &lt;code&gt;k+1&lt;/code&gt; 의 텐서입니다 . 경우 &lt;code&gt;k&lt;/code&gt; 는 스칼라이거나 &lt;code&gt;k[0] == k[1]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6194740e93c206c46e0bfecd7aa22357ddec1b58" translate="yes" xml:space="preserve">
          <source>The output is computed as follows:</source>
          <target state="translated">The output is computed as follows:</target>
        </trans-unit>
        <trans-unit id="b74ff8ee45b0b8f3cea227a5cb8b0ca2512e0fa1" translate="yes" xml:space="preserve">
          <source>The output is:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="02cc9038a532f36829ca3735f949f57712e9a776" translate="yes" xml:space="preserve">
          <source>The output locations corresponding to the implicitly zero elements in the sparse tensor will be zero (i.e., will not take up storage space), regardless of the contents of the dense tensor (even if it's +/-INF and that INF*0 == NaN).</source>
          <target state="translated">희박한 텐서의 암시 적으로 0 요소에 해당하는 출력 위치는 밀도 텐서의 내용에 관계없이 0입니다 (즉, 저장 공간을 차지하지 않습니다) (+/- INF이고 INF * 0 == 인 경우에도) NaN).</target>
        </trans-unit>
        <trans-unit id="0ac4ecff90e8ac9d36695efeac0ffda5a29603fe" translate="yes" xml:space="preserve">
          <source>The output of this Op is a single bounding box that may be used to crop the original image. The output is returned as 3 tensors: &lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bboxes&lt;/code&gt;. The first 2 tensors can be fed directly into &lt;code&gt;tf.slice&lt;/code&gt; to crop the image. The latter may be supplied to &lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt; to visualize what the bounding box looks like.</source>
          <target state="translated">The output of this Op is a single bounding box that may be used to crop the original image. The output is returned as 3 tensors: &lt;code&gt;begin&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;bboxes&lt;/code&gt; . The first 2 tensors can be fed directly into &lt;code&gt;tf.slice&lt;/code&gt; to crop the image. The latter may be supplied to &lt;code&gt;tf.image.draw_bounding_boxes&lt;/code&gt; to visualize what the bounding box looks like.</target>
        </trans-unit>
        <trans-unit id="753b9e20d6aac1628ca75bf0511c387d43eb2530" translate="yes" xml:space="preserve">
          <source>The output of this operation is a set of integers indexing into the input collection of bounding boxes representing the selected boxes. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;code&gt;tf.gather operation&lt;/code&gt;. For example:</source>
          <target state="translated">The output of this operation is a set of integers indexing into the input collection of bounding boxes representing the selected boxes. The bounding box coordinates corresponding to the selected indices can then be obtained using the &lt;code&gt;tf.gather operation&lt;/code&gt; . For example:</target>
        </trans-unit>
        <trans-unit id="da6a14177a19f48147884875b20440b0d347e68f" translate="yes" xml:space="preserve">
          <source>The output shape is identical to the inputs', except along the concat dimension, where it is the sum of the inputs' sizes along that dimension.</source>
          <target state="translated">The output shape is identical to the inputs', except along the concat dimension, where it is the sum of the inputs' sizes along that dimension.</target>
        </trans-unit>
        <trans-unit id="d0270145e0963e3fa6b4466fddef88fdbf60e481" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 2, 2, 1]&lt;/code&gt; and value:</source>
          <target state="translated">출력 텐서는 모양 &lt;code&gt;[1, 2, 2, 1]&lt;/code&gt; 과 값을 갖습니다 :</target>
        </trans-unit>
        <trans-unit id="aff644b1606cf977042c3f329c0b44912b343d5f" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 2, 2, 3]&lt;/code&gt; and value:</source>
          <target state="translated">출력 텐서는 모양 &lt;code&gt;[1, 2, 2, 3]&lt;/code&gt; 과 값을 갖습니다 :</target>
        </trans-unit>
        <trans-unit id="26ecc2d485656620c8ddae36c3377b136f2c8ef6" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[1, 4, 4, 1]&lt;/code&gt; and value:</source>
          <target state="translated">출력 텐서는 모양 &lt;code&gt;[1, 4, 4, 1]&lt;/code&gt; 과 값을 갖습니다 :</target>
        </trans-unit>
        <trans-unit id="413cce56d7e73e0557f6955da012eeb198f78207" translate="yes" xml:space="preserve">
          <source>The output tensor has shape &lt;code&gt;[2, 2, 4, 1]&lt;/code&gt; and value:</source>
          <target state="translated">출력 텐서는 모양 &lt;code&gt;[2, 2, 4, 1]&lt;/code&gt; 과 값을 갖습니다 :</target>
        </trans-unit>
        <trans-unit id="8a7212b9117e06db921246aafe5499cc8ff0cedb" translate="yes" xml:space="preserve">
          <source>The output tensor is 2-D or higher with shape &lt;code&gt;[..., r_o, c_o]&lt;/code&gt;, where:</source>
          <target state="translated">The output tensor is 2-D or higher with shape &lt;code&gt;[..., r_o, c_o]&lt;/code&gt; , where:</target>
        </trans-unit>
        <trans-unit id="d7864ae5ef3f0b7a2f3aacd5831a1402dbade9c3" translate="yes" xml:space="preserve">
          <source>The output will be:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4fe37226e907ad6b84032ccb7a1a60c428d9656" translate="yes" xml:space="preserve">
          <source>The padded size of each dimension D of the output is:</source>
          <target state="translated">출력의 각 차원 D의 패딩 크기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="97e48b1b75e7e87fe99f8cd80c70124dfe7706f9" translate="yes" xml:space="preserve">
          <source>The parameters may each be a</source>
          <target state="translated">The parameters may each be a</target>
        </trans-unit>
        <trans-unit id="0dab2a06ad633869bd90e943c4184ac0e2fe54a0" translate="yes" xml:space="preserve">
          <source>The pattern follows the re2 syntax (&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;https://github.com/google/re2/wiki/Syntax&lt;/a&gt;)</source>
          <target state="translated">The pattern follows the re2 syntax (&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;https://github.com/google/re2/wiki/Syntax&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="3adcc83502b5bf35b4db3b88505bc6feb67f24c9" translate="yes" xml:space="preserve">
          <source>The polygamma function is defined as:</source>
          <target state="translated">폴리 감마 함수는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="032383bde12ed97c71835aee14f3993fa3ffacfb" translate="yes" xml:space="preserve">
          <source>The post-decimal precision to use for floating point numbers.</source>
          <target state="translated">The post-decimal precision to use for floating point numbers.</target>
        </trans-unit>
        <trans-unit id="cf2591fdff5d530b2526efe01b41c14d72949b69" translate="yes" xml:space="preserve">
          <source>The random integers are slightly biased unless &lt;code&gt;maxval - minval&lt;/code&gt; is an exact power of two. The bias is small for values of &lt;code&gt;maxval - minval&lt;/code&gt; significantly smaller than the range of the output (either &lt;code&gt;2^32&lt;/code&gt; or &lt;code&gt;2^64&lt;/code&gt;).</source>
          <target state="translated">The random integers are slightly biased unless &lt;code&gt;maxval - minval&lt;/code&gt; is an exact power of two. The bias is small for values of &lt;code&gt;maxval - minval&lt;/code&gt; significantly smaller than the range of the output (either &lt;code&gt;2^32&lt;/code&gt; or &lt;code&gt;2^64&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5063edcc540459efc720ae891622260d25e4849e" translate="yes" xml:space="preserve">
          <source>The randomization shuffling buffer.</source>
          <target state="translated">The randomization shuffling buffer.</target>
        </trans-unit>
        <trans-unit id="445545e9cd687875415537f18613f8c40d7d282e" translate="yes" xml:space="preserve">
          <source>The range of pixel values for the output image might be slightly different from the range for the input image because of limited numerical precision. To guarantee an output range, for example &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, apply &lt;code&gt;tf.clip_by_value&lt;/code&gt; to the output.</source>
          <target state="translated">The range of pixel values for the output image might be slightly different from the range for the input image because of limited numerical precision. To guarantee an output range, for example &lt;code&gt;[0.0, 1.0]&lt;/code&gt; , apply &lt;code&gt;tf.clip_by_value&lt;/code&gt; to the output.</target>
        </trans-unit>
        <trans-unit id="626421317b8daa7c4481578d7b1400cbc817027c" translate="yes" xml:space="preserve">
          <source>The regularized incomplete beta integral is defined as:</source>
          <target state="translated">정규화 된 불완전 베타 통합은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="1afd7345ed3d32a274516fc21436c821a0801bfe" translate="yes" xml:space="preserve">
          <source>The replacement character codepoint to be used in place of any invalid formatting in the input when &lt;code&gt;errors='replace'&lt;/code&gt;.</source>
          <target state="translated">The replacement character codepoint to be used in place of any invalid formatting in the input when &lt;code&gt;errors='replace'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d06ff612c69fb3df1f3d794bb785e13f8da40620" translate="yes" xml:space="preserve">
          <source>The result is a 4-D tensor of shape &lt;code&gt;[batch_size, glimpse_height, glimpse_width, channels]&lt;/code&gt;. The channels and batch dimensions are the same as that of the input tensor. The height and width of the output windows are specified in the &lt;code&gt;size&lt;/code&gt; parameter.</source>
          <target state="translated">결과는 모양의 4 차원 텐서입니다 &lt;code&gt;[batch_size, glimpse_height, glimpse_width, channels]&lt;/code&gt; . 채널 및 배치 치수는 입력 텐서와 동일합니다. 출력 창의 높이와 너비는 &lt;code&gt;size&lt;/code&gt; 매개 변수에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="381b1e6543678db4ed459c1cba156ecc8ca01172" translate="yes" xml:space="preserve">
          <source>The resulting update to ref would look like this:</source>
          <target state="translated">ref에 대한 결과 업데이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2bc735db9780b41fcdc1fb49a76fa800ba1e30df" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; is not a scalar (shape {}), but is instead an empty one-dimensional &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; (shape {0}, &lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1a9dcfa39b1a721efeef32cf3692938a3a&quot;&gt;NumElements()&lt;/a&gt; == 0). Since it has no elements, it does not need to be assigned a value and is initialized by default (&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1aa44336c38c4baf3ed69f63aee131ba87&quot;&gt;IsInitialized()&lt;/a&gt; is true). If this is undesirable, consider creating a one-element scalar which does require initialization:</source>
          <target state="translated">The returned &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; is not a scalar (shape {}), but is instead an empty one-dimensional &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; (shape {0}, &lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1a9dcfa39b1a721efeef32cf3692938a3a&quot;&gt;NumElements()&lt;/a&gt; == 0). Since it has no elements, it does not need to be assigned a value and is initialized by default (&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1aa44336c38c4baf3ed69f63aee131ba87&quot;&gt;IsInitialized()&lt;/a&gt; is true). If this is undesirable, consider creating a one-element scalar which does require initialization:</target>
        </trans-unit>
        <trans-unit id="2743acdd9d6fa65f5144eddd156176f598556c53" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;StringPiece&lt;/code&gt; may point to memory location on devices that the CPU cannot address directly.</source>
          <target state="translated">The returned &lt;code&gt;StringPiece&lt;/code&gt; may point to memory location on devices that the CPU cannot address directly.</target>
        </trans-unit>
        <trans-unit id="5158c81c5ea5bb74de68daed2eacbf5dc32d4ad8" translate="yes" xml:space="preserve">
          <source>The runtime is then free to make optimizations based on this.</source>
          <target state="translated">그런 다음 런타임은이를 기반으로 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96ea6a5e6213abb6658f0fe99a6756ce2d5a4eb1" translate="yes" xml:space="preserve">
          <source>The scaling_factor is determined from &lt;code&gt;min_range&lt;/code&gt;, &lt;code&gt;max_range&lt;/code&gt;, and &lt;code&gt;narrow_range&lt;/code&gt; in a way that is compatible with &lt;code&gt;QuantizeAndDequantize{V2|V3}&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;quantize-v2#classtensorflow_1_1ops_1_1_quantize_v2&quot;&gt;QuantizeV2&lt;/a&gt;&lt;/code&gt;, using the following algorithm:</source>
          <target state="translated">The scaling_factor is determined from &lt;code&gt;min_range&lt;/code&gt; , &lt;code&gt;max_range&lt;/code&gt; , and &lt;code&gt;narrow_range&lt;/code&gt; in a way that is compatible with &lt;code&gt;QuantizeAndDequantize{V2|V3}&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;quantize-v2#classtensorflow_1_1ops_1_1_quantize_v2&quot;&gt;QuantizeV2&lt;/a&gt;&lt;/code&gt; , using the following algorithm:</target>
        </trans-unit>
        <trans-unit id="73916e07f6ea34c81abd799027349571045df1c6" translate="yes" xml:space="preserve">
          <source>The second innermost dimension of &lt;code&gt;diagonal&lt;/code&gt; has double meaning. When &lt;code&gt;k&lt;/code&gt; is scalar or &lt;code&gt;k[0] == k[1]&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt; is part of the batch size [I, J, ..., M], and the output tensor is:</source>
          <target state="translated">&lt;code&gt;diagonal&lt;/code&gt; 의 두 번째 가장 안쪽 치수 는 이중 의미를 갖습니다. 되면 &lt;code&gt;k&lt;/code&gt; 는 스칼라이거나 &lt;code&gt;k[0] == k[1]&lt;/code&gt; , &lt;code&gt;M&lt;/code&gt; 은 배치 크기 [I, J, ..., M]의 일부이며, 상기 출력 텐서이다 :</target>
        </trans-unit>
        <trans-unit id="7fc1feb3fdbb360e147eefe78ceea772c7e9a8df" translate="yes" xml:space="preserve">
          <source>The separator to use when joining.</source>
          <target state="translated">The separator to use when joining.</target>
        </trans-unit>
        <trans-unit id="e4d397cf585c1ab4d14dd1e76d6956ce222cbb28" translate="yes" xml:space="preserve">
          <source>The shape of each Feature in the FeatureList corresponding to feature_list_dense_key[j] must always equal feature_list_dense_shapes[j].NumEntries().</source>
          <target state="translated">The shape of each Feature in the FeatureList corresponding to feature_list_dense_key[j] must always equal feature_list_dense_shapes[j].NumEntries().</target>
        </trans-unit>
        <trans-unit id="7459dfb15efa81624ea1905978e81c0d5378e2db" translate="yes" xml:space="preserve">
          <source>The shape of each component in a value.</source>
          <target state="translated">The shape of each component in a value.</target>
        </trans-unit>
        <trans-unit id="eec1a80a4255f17b68100593fb3e57f23686ffd5" translate="yes" xml:space="preserve">
          <source>The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op.</source>
          <target state="translated">The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op.</target>
        </trans-unit>
        <trans-unit id="0df6b99cf3092e630c914c8e9d8335b3edcb3f0c" translate="yes" xml:space="preserve">
          <source>The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op.</source>
          <target state="translated">The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op.</target>
        </trans-unit>
        <trans-unit id="8c730f2755df0951b225a0138c6c5b2d885cf90a" translate="yes" xml:space="preserve">
          <source>The size of &lt;code&gt;tensor_names&lt;/code&gt; must match the number of tensors in &lt;code&gt;data&lt;/code&gt;. &lt;code&gt;data[i]&lt;/code&gt; is written to &lt;code&gt;filename&lt;/code&gt; with name &lt;code&gt;tensor_names[i]&lt;/code&gt;.</source>
          <target state="translated">The size of &lt;code&gt;tensor_names&lt;/code&gt; must match the number of tensors in &lt;code&gt;data&lt;/code&gt; . &lt;code&gt;data[i]&lt;/code&gt; is written to &lt;code&gt;filename&lt;/code&gt; with name &lt;code&gt;tensor_names[i]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="017e6c560666c8b8adcda856df4242248fd294ae" translate="yes" xml:space="preserve">
          <source>The sizes of the pooling regions are generated randomly but are fairly uniform. For example, let's look at the height dimension, and the constraints on the list of rows that will be pool boundaries.</source>
          <target state="translated">풀링 영역의 크기는 무작위로 생성되지만 상당히 균일합니다. 예를 들어, 높이 차원과 풀 경계가 될 행 목록의 제약 조건을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="5cbab611b64793eae24925e28f43bdc8dec42067" translate="yes" xml:space="preserve">
          <source>The solution is to identify which gradient call this particular &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; gradient is being called in. This is performed by identifying a unique string (e.g. &quot;gradients&quot;, &quot;gradients_1&quot;, ...) from the input gradient &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;'s name. This string is used as a suffix when creating the &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; gradient object here (the attribute &lt;code&gt;source&lt;/code&gt;).</source>
          <target state="translated">The solution is to identify which gradient call this particular &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; gradient is being called in. This is performed by identifying a unique string (e.g. &quot;gradients&quot;, &quot;gradients_1&quot;, ...) from the input gradient &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;'s name. This string is used as a suffix when creating the &lt;a href=&quot;tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; gradient object here (the attribute &lt;code&gt;source&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc503fc832fae0582037d46d99a283b2143a5687" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;-&lt;/code&gt; meaning that the slice covers all indices of this dimension</source>
          <target state="translated">The string &lt;code&gt;-&lt;/code&gt; meaning that the slice covers all indices of this dimension</target>
        </trans-unit>
        <trans-unit id="b87e105d01203888c35de69e0d8cabac2d7238b3" translate="yes" xml:space="preserve">
          <source>The summary has up to &lt;code&gt;max_images&lt;/code&gt; summary values containing images. The images are built from &lt;code&gt;tensor&lt;/code&gt; which must be 4-D with shape &lt;code&gt;[batch_size, height, width, channels]&lt;/code&gt; and where &lt;code&gt;channels&lt;/code&gt; can be:</source>
          <target state="translated">The summary has up to &lt;code&gt;max_images&lt;/code&gt; summary values containing images. The images are built from &lt;code&gt;tensor&lt;/code&gt; which must be 4-D with shape &lt;code&gt;[batch_size, height, width, channels]&lt;/code&gt; and where &lt;code&gt;channels&lt;/code&gt; can be:</target>
        </trans-unit>
        <trans-unit id="f3f45fd11021d0fbbacbdd0bd0b9e463916250a5" translate="yes" xml:space="preserve">
          <source>The summary has up to &lt;code&gt;max_outputs&lt;/code&gt; summary values containing audio. The audio is built from &lt;code&gt;tensor&lt;/code&gt; which must be 3-D with shape &lt;code&gt;[batch_size, frames, channels]&lt;/code&gt; or 2-D with shape &lt;code&gt;[batch_size, frames]&lt;/code&gt;. The values are assumed to be in the range of &lt;code&gt;[-1.0, 1.0]&lt;/code&gt; with a sample rate of &lt;code&gt;sample_rate&lt;/code&gt;.</source>
          <target state="translated">The summary has up to &lt;code&gt;max_outputs&lt;/code&gt; summary values containing audio. The audio is built from &lt;code&gt;tensor&lt;/code&gt; which must be 3-D with shape &lt;code&gt;[batch_size, frames, channels]&lt;/code&gt; or 2-D with shape &lt;code&gt;[batch_size, frames]&lt;/code&gt; . The values are assumed to be in the range of &lt;code&gt;[-1.0, 1.0]&lt;/code&gt; with a sample rate of &lt;code&gt;sample_rate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b8bac0316b66126d9a5f3d03ead635dc9c4e503" translate="yes" xml:space="preserve">
          <source>The tensor is shuffled along dimension 0, such that each &lt;code&gt;value[j]&lt;/code&gt; is mapped to one and only one &lt;code&gt;output[i]&lt;/code&gt;. For example, a mapping that might occur for a 3x2 tensor is:</source>
          <target state="translated">텐서는 각각의 &lt;code&gt;value[j]&lt;/code&gt; 이 하나의 &lt;code&gt;output[i]&lt;/code&gt; 에만 매핑되도록 차원 0을 따라 섞 입니다. 예를 들어 3x2 텐서에서 발생할 수있는 매핑은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="15f83091dd490510c6ff3aa666c8fe3c7dc63c7f" translate="yes" xml:space="preserve">
          <source>The type of compression for the file.</source>
          <target state="translated">The type of compression for the file.</target>
        </trans-unit>
        <trans-unit id="b1daab1e795d2b786c08cf71ec0b79e562593795" translate="yes" xml:space="preserve">
          <source>The type of each component in a value.</source>
          <target state="translated">The type of each component in a value.</target>
        </trans-unit>
        <trans-unit id="965cad360b0c990be0d91062174ff555e8796ef8" translate="yes" xml:space="preserve">
          <source>The type of encoding for the file.</source>
          <target state="translated">The type of encoding for the file.</target>
        </trans-unit>
        <trans-unit id="5bdbb6de65bbd5967cc3156e54d129f7fce9c6c6" translate="yes" xml:space="preserve">
          <source>The type of output produced by activation function following this operation.</source>
          <target state="translated">The type of output produced by activation function following this operation.</target>
        </trans-unit>
        <trans-unit id="9ebb1c9f9fca72e907003c2e6f465cb2ef0530a8" translate="yes" xml:space="preserve">
          <source>The underlying buffer is allocated using a &lt;code&gt;CPUAllocator&lt;/code&gt;.</source>
          <target state="translated">The underlying buffer is allocated using a &lt;code&gt;CPUAllocator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2c4b8c46660cbdf553e7be1b77fe8082441b8d1" translate="yes" xml:space="preserve">
          <source>The unit that is counted to compute string length.</source>
          <target state="translated">The unit that is counted to compute string length.</target>
        </trans-unit>
        <trans-unit id="00d707c23f7e036165ba3f7e4324b6082fe8c4dc" translate="yes" xml:space="preserve">
          <source>The unit that is used to create the substring.</source>
          <target state="translated">The unit that is used to create the substring.</target>
        </trans-unit>
        <trans-unit id="1a31dedbc72a4c9a9b5e962d41d669b0c1198dbc" translate="yes" xml:space="preserve">
          <source>The upper bound on the number of elements in this queue.</source>
          <target state="translated">The upper bound on the number of elements in this queue.</target>
        </trans-unit>
        <trans-unit id="5d8daec55baf3c813ce2f2fc4a5eab596ea78fbf" translate="yes" xml:space="preserve">
          <source>The upper regularized incomplete Gamma function is defined as:</source>
          <target state="translated">정규화 된 불완전한 상위 감마 함수는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9d7cb814f4abb044dd1008d89790ac3a354af272" translate="yes" xml:space="preserve">
          <source>The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</source>
          <target state="translated">The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</target>
        </trans-unit>
        <trans-unit id="4d8152ebe9c29a30f5fc406dde1821cf13da350c" translate="yes" xml:space="preserve">
          <source>The value of this parameter should be non-negative. In the case of 0, the cropped area does not need to overlap any of the bounding boxes supplied.</source>
          <target state="translated">The value of this parameter should be non-negative. In the case of 0, the cropped area does not need to overlap any of the bounding boxes supplied.</target>
        </trans-unit>
        <trans-unit id="a65feb70b75102709dacddb444c135b5484ebba0" translate="yes" xml:space="preserve">
          <source>The value to pad if width &amp;gt; -1.</source>
          <target state="translated">The value to pad if width &amp;gt; -1.</target>
        </trans-unit>
        <trans-unit id="19d4eea76535e0ef35e976c59387c007d4a7d185" translate="yes" xml:space="preserve">
          <source>The values are returned as &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; objects in &lt;code&gt;outputs&lt;/code&gt;. The number and order of &lt;code&gt;outputs&lt;/code&gt; will match &lt;code&gt;fetch_outputs&lt;/code&gt;.</source>
          <target state="translated">The values are returned as &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; objects in &lt;code&gt;outputs&lt;/code&gt; . The number and order of &lt;code&gt;outputs&lt;/code&gt; will match &lt;code&gt;fetch_outputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c61a71eb4077cf30110803e381657708b49ae932" translate="yes" xml:space="preserve">
          <source>The values must include 0. There can be no duplicate values or negative values.</source>
          <target state="translated">값은 0을 포함해야합니다. 중복 값이나 음수 값은있을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cde4cff8a5ecda6c3308cd587b5940a27adec93c" translate="yes" xml:space="preserve">
          <source>The vocabulary file should be in CSV-like format, with the last field being the weight associated with the word.</source>
          <target state="translated">The vocabulary file should be in CSV-like format, with the last field being the weight associated with the word.</target>
        </trans-unit>
        <trans-unit id="15e91da427b6cf2b2fbc5ac9447fe8b24dd8aa82" translate="yes" xml:space="preserve">
          <source>The width the output tensor is &lt;code&gt;input_depth * block_size&lt;/code&gt;, whereas the height is &lt;code&gt;input_height * block_size&lt;/code&gt;.</source>
          <target state="translated">출력 텐서의 너비는 &lt;code&gt;input_depth * block_size&lt;/code&gt; &lt;code&gt;input_height * block_size&lt;/code&gt; 이고 높이는 input_height * block_size 입니다.</target>
        </trans-unit>
        <trans-unit id="fb44a39f5e3304ba1e47cd9001107c1190200e02" translate="yes" xml:space="preserve">
          <source>Then output is &lt;code&gt;[2 x 2 x 3]&lt;/code&gt;:</source>
          <target state="translated">Then output is &lt;code&gt;[2 x 2 x 3]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="70803c29e37a6cdd022ef83164306a19f47318ca" translate="yes" xml:space="preserve">
          <source>Then output is &lt;code&gt;[3 x 4]&lt;/code&gt;:</source>
          <target state="translated">Then output is &lt;code&gt;[3 x 4]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="609a89b6f4ea61b7d43929c28cac3cb16c1a8704" translate="yes" xml:space="preserve">
          <source>Then output is &lt;code&gt;[4 x 3]&lt;/code&gt;:</source>
          <target state="translated">Then output is &lt;code&gt;[4 x 3]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18c6dda9e31a83fdb5a90169c27005c658e8056f" translate="yes" xml:space="preserve">
          <source>Then, row_pooling_sequence should satisfy:</source>
          <target state="translated">그런 다음 row_pooling_sequence는 다음을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0dc8d396849561a849ade939c069a913c651243" translate="yes" xml:space="preserve">
          <source>There are different ways to quantize. This version uses only scaling, so 0.0 maps to 0.</source>
          <target state="translated">There are different ways to quantize. This version uses only scaling, so 0.0 maps to 0.</target>
        </trans-unit>
        <trans-unit id="bc574714a1f025e0084057f239f2dc1696ae520e" translate="yes" xml:space="preserve">
          <source>These methods allow you to access the data with the dimensions and sizes of your choice. You do not need to know the number of dimensions of the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; to call them. However, they &lt;code&gt;CHECK&lt;/code&gt; that the type matches and the dimensions requested creates an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the same number of elements as the tensor.</source>
          <target state="translated">These methods allow you to access the data with the dimensions and sizes of your choice. You do not need to know the number of dimensions of the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; to call them. However, they &lt;code&gt;CHECK&lt;/code&gt; that the type matches and the dimensions requested creates an &lt;code&gt;Eigen::Tensor&lt;/code&gt; with the same number of elements as the tensor.</target>
        </trans-unit>
        <trans-unit id="9bbbc71838cec9daa4b798c766e634988ae8eda0" translate="yes" xml:space="preserve">
          <source>This Op does not require &lt;code&gt;a_indices&lt;/code&gt; be sorted in standard lexicographic order.</source>
          <target state="translated">This Op does not require &lt;code&gt;a_indices&lt;/code&gt; be sorted in standard lexicographic order.</target>
        </trans-unit>
        <trans-unit id="b3230f00e0154436022761e6b1f967d770055298" translate="yes" xml:space="preserve">
          <source>This Op first attempts to find the V2 index file pointed to by &quot;prefix&quot;, and if found proceed to read it as a V2 checkpoint;</source>
          <target state="translated">This Op first attempts to find the V2 index file pointed to by &quot;prefix&quot;, and if found proceed to read it as a V2 checkpoint;</target>
        </trans-unit>
        <trans-unit id="9035e96f03775a3e50f30b8809b0446806dad6b9" translate="yes" xml:space="preserve">
          <source>This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_max()&lt;/code&gt;. In contrast to &lt;a href=&quot;sparse-reduce-max#classtensorflow_1_1ops_1_1_sparse_reduce_max&quot;&gt;SparseReduceMax&lt;/a&gt;, this Op returns a SparseTensor.</source>
          <target state="translated">This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_max()&lt;/code&gt; . In contrast to &lt;a href=&quot;sparse-reduce-max#classtensorflow_1_1ops_1_1_sparse_reduce_max&quot;&gt;SparseReduceMax&lt;/a&gt;, this Op returns a SparseTensor.</target>
        </trans-unit>
        <trans-unit id="4ad8d5591334e1e10dc31454b8445ff37e75c202" translate="yes" xml:space="preserve">
          <source>This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_max()&lt;/code&gt;. In particular, this Op also returns a dense &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; instead of a sparse one.</source>
          <target state="translated">This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_max()&lt;/code&gt; . In particular, this Op also returns a dense &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; instead of a sparse one.</target>
        </trans-unit>
        <trans-unit id="44ceac0d3bd6b6d21e5bc355d0f0c16aca7d7e6d" translate="yes" xml:space="preserve">
          <source>This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_sum()&lt;/code&gt;. In contrast to &lt;a href=&quot;sparse-reduce-sum#classtensorflow_1_1ops_1_1_sparse_reduce_sum&quot;&gt;SparseReduceSum&lt;/a&gt;, this Op returns a SparseTensor.</source>
          <target state="translated">This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_sum()&lt;/code&gt; . In contrast to &lt;a href=&quot;sparse-reduce-sum#classtensorflow_1_1ops_1_1_sparse_reduce_sum&quot;&gt;SparseReduceSum&lt;/a&gt;, this Op returns a SparseTensor.</target>
        </trans-unit>
        <trans-unit id="9bc0ca2b2a48edbf9173a252430a3e0858b46e1a" translate="yes" xml:space="preserve">
          <source>This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_sum()&lt;/code&gt;. In particular, this Op also returns a dense &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; instead of a sparse one.</source>
          <target state="translated">This Op takes a SparseTensor and is the sparse counterpart to &lt;code&gt;tf.reduce_sum()&lt;/code&gt; . In particular, this Op also returns a dense &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; instead of a sparse one.</target>
        </trans-unit>
        <trans-unit id="b2b44dd711367ce157b45e58130e61f7deb447e5" translate="yes" xml:space="preserve">
          <source>This allows certain behaviors, like dynamically checking for consistent shapes on write, and being able to fill in properly shaped zero tensors on stack even if the element_shape attribute is not fully defined.</source>
          <target state="translated">This allows certain behaviors, like dynamically checking for consistent shapes on write, and being able to fill in properly shaped zero tensors on stack even if the element_shape attribute is not fully defined.</target>
        </trans-unit>
        <trans-unit id="2a72a2fe57c098cd087cbfaddaa2bf9683de7e11" translate="yes" xml:space="preserve">
          <source>This call requires that the &lt;code&gt;other&lt;/code&gt; tensor and the given type and shape are &quot;compatible&quot; (i.e. they occupy the same number of bytes).</source>
          <target state="translated">This call requires that the &lt;code&gt;other&lt;/code&gt; tensor and the given type and shape are &quot;compatible&quot; (i.e. they occupy the same number of bytes).</target>
        </trans-unit>
        <trans-unit id="a556f518046c350ff022e6dc8201ca96e17eaed8" translate="yes" xml:space="preserve">
          <source>This creates a new graph and all operations constructed in this graph should use the returned object as the &quot;root&quot; scope.</source>
          <target state="translated">This creates a new graph and all operations constructed in this graph should use the returned object as the &quot;root&quot; scope.</target>
        </trans-unit>
        <trans-unit id="d4ec2fcde3efc35d02e71967ec7a960959cebd46" translate="yes" xml:space="preserve">
          <source>This disables multiple read semantics but allows early release of memory.</source>
          <target state="translated">This disables multiple read semantics but allows early release of memory.</target>
        </trans-unit>
        <trans-unit id="8fa5d102aa81c9acfaafbf67c8d721720c74eef3" translate="yes" xml:space="preserve">
          <source>This emulates C semantics in that</source>
          <target state="translated">This emulates C semantics in that</target>
        </trans-unit>
        <trans-unit id="e158c4e53eb8ef556e4d562ffa77e16f6fc696bb" translate="yes" xml:space="preserve">
          <source>This enables the user to close and release the resource in the middle of a step/run.</source>
          <target state="translated">This enables the user to close and release the resource in the middle of a step/run.</target>
        </trans-unit>
        <trans-unit id="274b88cc762999ed627c3e882a518fb5ef41180a" translate="yes" xml:space="preserve">
          <source>This ensures a minimum level of mixing of elements.</source>
          <target state="translated">This ensures a minimum level of mixing of elements.</target>
        </trans-unit>
        <trans-unit id="2327df0bf46e83abea005fad69c721654d8ca723" translate="yes" xml:space="preserve">
          <source>This function computes the exponential of every element in the input tensor. i.e. &lt;code&gt;exp(x)&lt;/code&gt; or &lt;code&gt;e^(x)&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the input tensor. &lt;code&gt;e&lt;/code&gt; denotes Euler's number and is approximately equal to 2.718281. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; is positive for any real input.</source>
          <target state="translated">This function computes the exponential of every element in the input tensor. i.e. &lt;code&gt;exp(x)&lt;/code&gt; or &lt;code&gt;e^(x)&lt;/code&gt; , where &lt;code&gt;x&lt;/code&gt; is the input tensor. &lt;code&gt;e&lt;/code&gt; denotes Euler's number and is approximately equal to 2.718281. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; is positive for any real input.</target>
        </trans-unit>
        <trans-unit id="a46be17f0883d72abe9cd7e317c5e57cad43758b" translate="yes" xml:space="preserve">
          <source>This is a legacy version of the more general &lt;a href=&quot;batch-to-space-n-d#classtensorflow_1_1ops_1_1_batch_to_space_n_d&quot;&gt;BatchToSpaceND&lt;/a&gt;.</source>
          <target state="translated">This is a legacy version of the more general &lt;a href=&quot;batch-to-space-n-d#classtensorflow_1_1ops_1_1_batch_to_space_n_d&quot;&gt;BatchToSpaceND&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="94418a15bacb8cdae2fdd8106d4ad556191360b2" translate="yes" xml:space="preserve">
          <source>This is a map of &lt;code&gt;&lt;a href=&quot;output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; objects returned by op-constructors to the value to feed them with. See &lt;code&gt;&lt;a href=&quot;../../struct/tensorflow/input/initializer#structtensorflow_1_1_input_1_1_initializer&quot;&gt;Input::Initializer&lt;/a&gt;&lt;/code&gt; for details on what can be used as feed values.</source>
          <target state="translated">This is a map of &lt;code&gt;&lt;a href=&quot;output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; objects returned by op-constructors to the value to feed them with. See &lt;code&gt;&lt;a href=&quot;../../struct/tensorflow/input/initializer#structtensorflow_1_1_input_1_1_initializer&quot;&gt;Input::Initializer&lt;/a&gt;&lt;/code&gt; for details on what can be used as feed values.</target>
        </trans-unit>
        <trans-unit id="226f03473171f7b7a9d630392eb2554779d7e306" translate="yes" xml:space="preserve">
          <source>This is a special case of &lt;code&gt;tf.add&lt;/code&gt; where &lt;code&gt;bias&lt;/code&gt; is restricted to be 1-D. Broadcasting is supported, so &lt;code&gt;value&lt;/code&gt; may have any number of dimensions.</source>
          <target state="translated">This is a special case of &lt;code&gt;tf.add&lt;/code&gt; where &lt;code&gt;bias&lt;/code&gt; is restricted to be 1-D. Broadcasting is supported, so &lt;code&gt;value&lt;/code&gt; may have any number of dimensions.</target>
        </trans-unit>
        <trans-unit id="7d1642f9e9da0671dc58facb27e0af8b382ce7b7" translate="yes" xml:space="preserve">
          <source>This is almost identical to &lt;a href=&quot;quantize-and-dequantize-v2#classtensorflow_1_1ops_1_1_quantize_and_dequantize_v2&quot;&gt;QuantizeAndDequantizeV2&lt;/a&gt;, except that num_bits is a tensor, so its value can change during training.</source>
          <target state="translated">This is almost identical to &lt;a href=&quot;quantize-and-dequantize-v2#classtensorflow_1_1ops_1_1_quantize_and_dequantize_v2&quot;&gt;QuantizeAndDequantizeV2&lt;/a&gt;, except that num_bits is a tensor, so its value can change during training.</target>
        </trans-unit>
        <trans-unit id="f0c3e68e0358a0f76609938022081ba5ccf573dd" translate="yes" xml:space="preserve">
          <source>This is an experimental op for internal use only and it is possible to use this op in unsafe ways. DO NOT USE unless you fully understand the risks.</source>
          <target state="translated">This is an experimental op for internal use only and it is possible to use this op in unsafe ways. DO NOT USE unless you fully understand the risks.</target>
        </trans-unit>
        <trans-unit id="ee120082860f7ba2e01f5cb80d2904b41d2b0de3" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&lt;a href=&quot;restore#classtensorflow_1_1ops_1_1_restore&quot;&gt;Restore&lt;/a&gt;&lt;/code&gt; except that restored tensor can be listed as filling only a slice of a larger tensor. &lt;code&gt;shape_and_slice&lt;/code&gt; specifies the shape of the larger tensor and the slice that the restored tensor covers.</source>
          <target state="translated">This is like &lt;code&gt;&lt;a href=&quot;restore#classtensorflow_1_1ops_1_1_restore&quot;&gt;Restore&lt;/a&gt;&lt;/code&gt; except that restored tensor can be listed as filling only a slice of a larger tensor. &lt;code&gt;shape_and_slice&lt;/code&gt; specifies the shape of the larger tensor and the slice that the restored tensor covers.</target>
        </trans-unit>
        <trans-unit id="54528536c3b79f02b1890a47e99d9dfc6a07fb0b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&lt;a href=&quot;save#classtensorflow_1_1ops_1_1_save&quot;&gt;Save&lt;/a&gt;&lt;/code&gt; except that tensors can be listed in the saved file as being a slice of a larger tensor. &lt;code&gt;shapes_and_slices&lt;/code&gt; specifies the shape of the larger tensor and the slice that this tensor covers. &lt;code&gt;shapes_and_slices&lt;/code&gt; must have as many elements as &lt;code&gt;tensor_names&lt;/code&gt;.</source>
          <target state="translated">This is like &lt;code&gt;&lt;a href=&quot;save#classtensorflow_1_1ops_1_1_save&quot;&gt;Save&lt;/a&gt;&lt;/code&gt; except that tensors can be listed in the saved file as being a slice of a larger tensor. &lt;code&gt;shapes_and_slices&lt;/code&gt; specifies the shape of the larger tensor and the slice that this tensor covers. &lt;code&gt;shapes_and_slices&lt;/code&gt; must have as many elements as &lt;code&gt;tensor_names&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48afe34b5c159f29307a01d1f5ee0f95c21cc1fd" translate="yes" xml:space="preserve">
          <source>This is more efficient than using separate &lt;code&gt;tf.reverse&lt;/code&gt; ops.</source>
          <target state="translated">This is more efficient than using separate &lt;code&gt;tf.reverse&lt;/code&gt; ops.</target>
        </trans-unit>
        <trans-unit id="de1ccde80af58e574021a352a25ea9428febf6dc" translate="yes" xml:space="preserve">
          <source>This is the angle ( [-, ] ) such that [ x = r () ] and [ y = r () ] where (r = (x^2 + y^2) ).</source>
          <target state="translated">This is the angle ( [-, ] ) such that [ x = r () ] and [ y = r () ] where (r = (x^2 + y^2) ).</target>
        </trans-unit>
        <trans-unit id="c3ea6e7a75310a4a77e1b1f56fba56b3219204d9" translate="yes" xml:space="preserve">
          <source>This is the opposite of &lt;code&gt;unpack&lt;/code&gt;.</source>
          <target state="translated">This is the opposite of &lt;code&gt;unpack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58f966602b5d4ff51ae2b5c0b4e2223ec003e919" translate="yes" xml:space="preserve">
          <source>This is the same as the number of &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; executions that have succeeded.</source>
          <target state="translated">This is the same as the number of &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; executions that have succeeded.</target>
        </trans-unit>
        <trans-unit id="672eb1650593e0adfc41bec970711f434038efe6" translate="yes" xml:space="preserve">
          <source>This is useful to write code such as ops::Concat(ops::Split(x, 4)).</source>
          <target state="translated">This is useful to write code such as ops::Concat(ops::Split(x, 4)).</target>
        </trans-unit>
        <trans-unit id="53a52d98446448532e361c5ab0b1a6a4bc35f1f2" translate="yes" xml:space="preserve">
          <source>This method can be used to merge partitions created by &lt;code&gt;dynamic_partition&lt;/code&gt; as illustrated on the following example:</source>
          <target state="translated">이 방법을 사용 하면 다음 예제와 같이 &lt;code&gt;dynamic_partition&lt;/code&gt; 으로 만든 파티션을 병합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="739d09cc347d37887487c132a76071a68cf15e0c" translate="yes" xml:space="preserve">
          <source>This op accepts a ragged tensor with 1 ragged dimension containing only strings and outputs a ragged tensor with 1 ragged dimension containing ngrams of that string, joined along the innermost axis.</source>
          <target state="translated">This op accepts a ragged tensor with 1 ragged dimension containing only strings and outputs a ragged tensor with 1 ragged dimension containing ngrams of that string, joined along the innermost axis.</target>
        </trans-unit>
        <trans-unit id="5fa1114f375b9880e62fbc5a662e7acc5ce57fbe" translate="yes" xml:space="preserve">
          <source>This op also returns an indicator vector shaped &lt;code&gt;[dense_shape[0]]&lt;/code&gt; such that</source>
          <target state="translated">This op also returns an indicator vector shaped &lt;code&gt;[dense_shape[0]]&lt;/code&gt; such that</target>
        </trans-unit>
        <trans-unit id="b1e6cc6e9511604090a185a0df03b1bd61a9883d" translate="yes" xml:space="preserve">
          <source>This op also supports decoding JPEGs and PNGs, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt;.</source>
          <target state="translated">This op also supports decoding JPEGs and PNGs, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31d2bf008938ed74b856e09041a254bb0aa97fa8" translate="yes" xml:space="preserve">
          <source>This op also supports decoding JPEGs and non-animated GIFs since the interface is the same, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt;.</source>
          <target state="translated">This op also supports decoding JPEGs and non-animated GIFs since the interface is the same, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="353d1cb9982a80fecf15803ab042cc2f04026ca5" translate="yes" xml:space="preserve">
          <source>This op also supports decoding PNGs and non-animated GIFs since the interface is the same, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt;.</source>
          <target state="translated">This op also supports decoding PNGs and non-animated GIFs since the interface is the same, though it is cleaner to use &lt;code&gt;tf.io.decode_image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88d4e65ada667e4924bd61aa913d0b719a3489bc" translate="yes" xml:space="preserve">
          <source>This op can be used to override the gradient for complicated functions. For example, suppose y = f(x) and we wish to apply a custom function g for backprop such that dx = g(dy). In Python,</source>
          <target state="translated">이 op는 복잡한 기능에 대한 그래디언트를 재정의하는 데 사용할 수 있습니다. 예를 들어, y = f (x)라고 가정하고 dx = g (dy)와 같은 백프로 프에 사용자 정의 함수 g를 적용하려고합니다. 파이썬에서</target>
        </trans-unit>
        <trans-unit id="4ad180f0dd332b2d3f6b4df1c373a76e679bd889" translate="yes" xml:space="preserve">
          <source>This op creates a &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt;`Summary`&lt;/a&gt; protocol buffer that contains the union of all the values in the input summaries.</source>
          <target state="translated">This op creates a &lt;a href=&quot;https://www.tensorflow.org/code/tensorflow/core/framework/summary.proto&quot;&gt;`Summary`&lt;/a&gt; protocol buffer that contains the union of all the values in the input summaries.</target>
        </trans-unit>
        <trans-unit id="f52df9d3566b5d5a2e99897bd4229991f61b8378" translate="yes" xml:space="preserve">
          <source>This op decompresses each element of the &lt;code&gt;bytes&lt;/code&gt; input &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt;, which is assumed to be compressed using the given &lt;code&gt;compression_type&lt;/code&gt;.</source>
          <target state="translated">This op decompresses each element of the &lt;code&gt;bytes&lt;/code&gt; input &lt;code&gt;&lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; , which is assumed to be compressed using the given &lt;code&gt;compression_type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca6b920060424a35214647a956bfc883925dbdc" translate="yes" xml:space="preserve">
          <source>This op determines the maximum scale_factor that would map the initial [input_min, input_max] range to a range that lies within the representable quantized range.</source>
          <target state="translated">This op determines the maximum scale_factor that would map the initial [input_min, input_max] range to a range that lies within the representable quantized range.</target>
        </trans-unit>
        <trans-unit id="6fcde341bc16f91f21275b0c9eb0d836f06faca1" translate="yes" xml:space="preserve">
          <source>This op inserts a single entry for every row that doesn't have any values. The index is created as &lt;code&gt;[row, 0, ..., 0]&lt;/code&gt; and the inserted value is &lt;code&gt;default_value&lt;/code&gt;.</source>
          <target state="translated">This op inserts a single entry for every row that doesn't have any values. The index is created as &lt;code&gt;[row, 0, ..., 0]&lt;/code&gt; and the inserted value is &lt;code&gt;default_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ca65d9f0672a77dba043ed7cbbbb7c146613cfb" translate="yes" xml:space="preserve">
          <source>This op is being phased out in favor of &lt;a href=&quot;tensor-summary-v2#classtensorflow_1_1ops_1_1_tensor_summary_v2&quot;&gt;TensorSummaryV2&lt;/a&gt;, which lets callers pass a tag as well as a serialized SummaryMetadata proto string that contains plugin-specific data. We will keep this op to maintain backwards compatibility.</source>
          <target state="translated">This op is being phased out in favor of &lt;a href=&quot;tensor-summary-v2#classtensorflow_1_1ops_1_1_tensor_summary_v2&quot;&gt;TensorSummaryV2&lt;/a&gt;, which lets callers pass a tag as well as a serialized SummaryMetadata proto string that contains plugin-specific data. We will keep this op to maintain backwards compatibility.</target>
        </trans-unit>
        <trans-unit id="c713324056105460ec357fcbf53f2f413fa95e9a" translate="yes" xml:space="preserve">
          <source>This op is deprecated and will be removed in the future. Prefer &lt;code&gt;tf.nn.batch_normalization&lt;/code&gt;.</source>
          <target state="translated">This op is deprecated and will be removed in the future. Prefer &lt;code&gt;tf.nn.batch_normalization&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b87cc3af47427c02281fe6857f8b0797eaf3588b" translate="yes" xml:space="preserve">
          <source>This op is equivalent to applying the normal &lt;code&gt;tf.nn.softmax()&lt;/code&gt; to each innermost logical submatrix with shape &lt;code&gt;[B, C]&lt;/code&gt;, but with the catch that</source>
          <target state="translated">This op is equivalent to applying the normal &lt;code&gt;tf.nn.softmax()&lt;/code&gt; to each innermost logical submatrix with shape &lt;code&gt;[B, C]&lt;/code&gt; , but with the catch that</target>
        </trans-unit>
        <trans-unit id="9f3c57195c3a48d6087d2de6a616b3e7ac7825fb" translate="yes" xml:space="preserve">
          <source>This op is hidden from public in Python. It is used by TensorFlow Debugger to register gradient tensors for gradient debugging. This op operates on non-reference-type tensors.</source>
          <target state="translated">This op is hidden from public in Python. It is used by TensorFlow Debugger to register gradient tensors for gradient debugging. This op operates on non-reference-type tensors.</target>
        </trans-unit>
        <trans-unit id="5208058dc424b56d5683c09cc9ca79f806771d57" translate="yes" xml:space="preserve">
          <source>This op is hidden from public in Python. It is used by TensorFlow Debugger to register gradient tensors for gradient debugging. This op operates on reference-type tensors.</source>
          <target state="translated">This op is hidden from public in Python. It is used by TensorFlow Debugger to register gradient tensors for gradient debugging. This op operates on reference-type tensors.</target>
        </trans-unit>
        <trans-unit id="f203a177776b5542a0c1ceaa5f6e224ea5b3965d" translate="yes" xml:space="preserve">
          <source>This op only parses the image header, so it is much faster than &lt;a href=&quot;decode-jpeg#classtensorflow_1_1ops_1_1_decode_jpeg&quot;&gt;DecodeJpeg&lt;/a&gt;.</source>
          <target state="translated">This op only parses the image header, so it is much faster than &lt;a href=&quot;decode-jpeg#classtensorflow_1_1ops_1_1_decode_jpeg&quot;&gt;DecodeJpeg&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4ca1b1701aa5c064253c44ce1aad741cb653df7b" translate="yes" xml:space="preserve">
          <source>This op reports an &lt;code&gt;InvalidArgument&lt;/code&gt; error if any value is not finite.</source>
          <target state="translated">이 op는 값이 유한하지 않은 경우 &lt;code&gt;InvalidArgument&lt;/code&gt; 오류를 보고합니다 .</target>
        </trans-unit>
        <trans-unit id="a524bdef26722689a646035ff3a30a89b59c896f" translate="yes" xml:space="preserve">
          <source>This op runs in &lt;code&gt;O(M log M)&lt;/code&gt; time, where &lt;code&gt;M&lt;/code&gt; is the total number of non-empty values across all inputs. This is due to the need for an internal sort in order to concatenate efficiently across an arbitrary dimension.</source>
          <target state="translated">이 op는 &lt;code&gt;O(M log M)&lt;/code&gt; 시간으로 실행되며 여기서 &lt;code&gt;M&lt;/code&gt; 은 모든 입력에서 비어 있지 않은 값의 총 수입니다. 이는 임의의 차원에서 효율적으로 연결하기 위해 내부 정렬이 필요하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d483631861e7a19423d30b1c89ca7bd9af9deb77" translate="yes" xml:space="preserve">
          <source>This op simulates the precision loss from the quantized forward pass by:</source>
          <target state="translated">This op simulates the precision loss from the quantized forward pass by:</target>
        </trans-unit>
        <trans-unit id="ad5fa7632826618c2d76f2d4a4592c97b627433a" translate="yes" xml:space="preserve">
          <source>This op takes in the upstream gradient w.r.t. non-empty values of the sliced &lt;code&gt;SparseTensor&lt;/code&gt;, and outputs the gradients w.r.t. the non-empty values of input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">This op takes in the upstream gradient w.r.t. non-empty values of the sliced &lt;code&gt;SparseTensor&lt;/code&gt; , and outputs the gradients w.r.t. the non-empty values of input &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edecba4e86376242d273ba622ca63b2965a5a438" translate="yes" xml:space="preserve">
          <source>This op translates a tensor containing Example records, encoded using the &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/proto3#json&quot;&gt;standard JSON mapping&lt;/a&gt;, into a tensor containing the same records encoded as binary protocol buffers. The resulting tensor can then be fed to any of the other Example-parsing ops.</source>
          <target state="translated">이 op는 &lt;a href=&quot;https://developers.google.com/protocol-buffers/docs/proto3#json&quot;&gt;표준 JSON 매핑을&lt;/a&gt; 사용하여 인코딩 된 Example 레코드를 포함 하는 텐서를 이진 프로토콜 버퍼와 인코딩 된 동일한 레코드를 포함하는 텐서로 변환합니다. 그런 다음 결과 텐서는 다른 예제 구문 분석 작업에 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aed6dcb7e60458715d6ef5c3c8eddc95029d6141" translate="yes" xml:space="preserve">
          <source>This op uses the algorithm by Marsaglia et al. to acquire samples via transformation-rejection from pairs of uniform and normal random variables. See &lt;a href=&quot;http://dl.acm.org/citation.cfm?id=358414&quot;&gt;http://dl.acm.org/citation.cfm?id=358414&lt;/a&gt;</source>
          <target state="translated">This op uses the algorithm by Marsaglia et al. to acquire samples via transformation-rejection from pairs of uniform and normal random variables. See &lt;a href=&quot;http://dl.acm.org/citation.cfm?id=358414&quot;&gt;http://dl.acm.org/citation.cfm?id=358414&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ecf84a6a9d97a311ab4ebb7ed7fa5bb402e0b94" translate="yes" xml:space="preserve">
          <source>This op uses two algorithms, depending on rate. If rate &amp;gt;= 10, then the algorithm by Hormann is used to acquire samples via transformation-rejection. See &lt;a href=&quot;http://www.sciencedirect.com/science/article/pii/0167668793909974&quot;&gt;http://www.sciencedirect.com/science/article/pii/0167668793909974&lt;/a&gt;.</source>
          <target state="translated">This op uses two algorithms, depending on rate. If rate &amp;gt;= 10, then the algorithm by Hormann is used to acquire samples via transformation-rejection. See &lt;a href=&quot;http://www.sciencedirect.com/science/article/pii/0167668793909974&quot;&gt;http://www.sciencedirect.com/science/article/pii/0167668793909974&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="14d876872d62a220ab5753fd3b852a5a6bcb76ef" translate="yes" xml:space="preserve">
          <source>This operation can be used with &lt;code&gt;output_encoding = input_encoding&lt;/code&gt; to enforce correct formatting for inputs even if they are already in the desired encoding.</source>
          <target state="translated">이 연산은 &lt;code&gt;output_encoding = input_encoding&lt;/code&gt; 과 함께 사용하여 입력이 이미 원하는 인코딩으로되어 있어도 입력에 올바른 형식을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf8af72c7ec5c03a0a302901ae0b02f8840934f4" translate="yes" xml:space="preserve">
          <source>This operation computes</source>
          <target state="translated">이 작업은 계산</target>
        </trans-unit>
        <trans-unit id="df2c8f127a35805203dd552ccd88657669212f89" translate="yes" xml:space="preserve">
          <source>This operation computes the inverse of an index permutation. It takes a 1-D integer tensor &lt;code&gt;x&lt;/code&gt;, which represents the indices of a zero-based array, and swaps each value with its index position. In other words, for an output tensor &lt;code&gt;y&lt;/code&gt; and an input tensor &lt;code&gt;x&lt;/code&gt;, this operation computes the following:</source>
          <target state="translated">이 연산은 인덱스 순열의 역수를 계산합니다. 0부터 시작하는 배열의 인덱스를 나타내는 1 차원 정수 텐서 &lt;code&gt;x&lt;/code&gt; 를 취하고 각 값을 인덱스 위치로 바꿉니다. 다시 말해, 출력 텐서 &lt;code&gt;y&lt;/code&gt; 및 입력 텐서 &lt;code&gt;x&lt;/code&gt; 의 경우이 작업은 다음을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="9ce96baa1d2aec98a8f7f3b28803c0d5bf74ec4e" translate="yes" xml:space="preserve">
          <source>This operation concatenates completed-element component tensors along the 0th dimension to make a single component tensor.</source>
          <target state="translated">This operation concatenates completed-element component tensors along the 0th dimension to make a single component tensor.</target>
        </trans-unit>
        <trans-unit id="f4a0229a89081dfeae5e96d391a46f03437f169b" translate="yes" xml:space="preserve">
          <source>This operation concatenates queue-element component tensors along the 0th dimension to make a single component tensor. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the components in the dequeued tuple will have size &lt;code&gt;n&lt;/code&gt; in the 0th dimension.</source>
          <target state="translated">This operation concatenates queue-element component tensors along the 0th dimension to make a single component tensor. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the components in the dequeued tuple will have size &lt;code&gt;n&lt;/code&gt; in the 0th dimension.</target>
        </trans-unit>
        <trans-unit id="0b11d49484a6d257df936e42c30516ab5cf38069" translate="yes" xml:space="preserve">
          <source>This operation concatenates queue-element component tensors along the 0th dimension to make a single component tensor. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the components in the dequeued tuple will have size n in the 0th dimension.</source>
          <target state="translated">This operation concatenates queue-element component tensors along the 0th dimension to make a single component tensor. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the components in the dequeued tuple will have size n in the 0th dimension.</target>
        </trans-unit>
        <trans-unit id="f439c8c2f635ac725d723e4d2593ae466c1eeb8d" translate="yes" xml:space="preserve">
          <source>This operation converts Unicode code points to script codes corresponding to each code point. Script codes correspond to International Components for Unicode (ICU) UScriptCode values. See &lt;a href=&quot;http://icu-project.org/apiref/icu4c/uscript_8h.html&quot;&gt;http://icu-project.org/apiref/icu4c/uscript_8h.html&lt;/a&gt;. Returns -1 (USCRIPT_INVALID_CODE) for invalid codepoints. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; shape will match input shape.</source>
          <target state="translated">This operation converts Unicode code points to script codes corresponding to each code point. Script codes correspond to International Components for Unicode (ICU) UScriptCode values. See &lt;a href=&quot;http://icu-project.org/apiref/icu4c/uscript_8h.html&quot;&gt;http://icu-project.org/apiref/icu4c/uscript_8h.html&lt;/a&gt;. Returns -1 (USCRIPT_INVALID_CODE) for invalid codepoints. &lt;a href=&quot;../output#classtensorflow_1_1_output&quot;&gt;Output&lt;/a&gt; shape will match input shape.</target>
        </trans-unit>
        <trans-unit id="52687eaf04e092c6367552afd7b0ecbe304d63d1" translate="yes" xml:space="preserve">
          <source>This operation creates a sequence of numbers that begins at &lt;code&gt;start&lt;/code&gt; and extends by increments of &lt;code&gt;delta&lt;/code&gt; up to but not including &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="translated">This operation creates a sequence of numbers that begins at &lt;code&gt;start&lt;/code&gt; and extends by increments of &lt;code&gt;delta&lt;/code&gt; up to but not including &lt;code&gt;limit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92df0de1d5e9953fcab8fedab1e1918021371c50" translate="yes" xml:space="preserve">
          <source>This operation creates a tensor of &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">This operation creates a tensor of &lt;code&gt;shape&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0aaf5e994752ce058c39711d4638a06e40443f56" translate="yes" xml:space="preserve">
          <source>This operation creates a tensor of shape &lt;code&gt;dims&lt;/code&gt; and fills it with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">이 작업은 모양이 &lt;code&gt;dims&lt;/code&gt; 텐서를 만들고 &lt;code&gt;value&lt;/code&gt; 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="2f4879a7545e74fa85acacd4cf01d74137ecf234" translate="yes" xml:space="preserve">
          <source>This operation has &lt;code&gt;k&lt;/code&gt; outputs, where &lt;code&gt;k&lt;/code&gt; is the number of components in the tuples stored in the given queue, and output &lt;code&gt;i&lt;/code&gt; is the ith component of the dequeued tuple.</source>
          <target state="translated">This operation has &lt;code&gt;k&lt;/code&gt; outputs, where &lt;code&gt;k&lt;/code&gt; is the number of components in the tuples stored in the given queue, and output &lt;code&gt;i&lt;/code&gt; is the ith component of the dequeued tuple.</target>
        </trans-unit>
        <trans-unit id="2d3ec2c39ae0a5c24c1de4e22eea70e184fc371a" translate="yes" xml:space="preserve">
          <source>This operation has a gradient and thus allows for training &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; values.</source>
          <target state="translated">이 작업에는 기울기가 있으므로 &lt;code&gt;min&lt;/code&gt; 과 &lt;code&gt;max&lt;/code&gt; 값 을 학습 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="701111c6d7bceddee66d3b31a146ad5d2ba5dd35" translate="yes" xml:space="preserve">
          <source>This operation has k outputs, where k is the number of components in the tuples stored in the given queue, and output i is the ith component of the dequeued tuple.</source>
          <target state="translated">This operation has k outputs, where k is the number of components in the tuples stored in the given queue, and output i is the ith component of the dequeued tuple.</target>
        </trans-unit>
        <trans-unit id="920eea1003570a2934a5442842f0411a9537123b" translate="yes" xml:space="preserve">
          <source>This operation has the same semantics as reshape on the represented dense tensor. The &lt;code&gt;input_indices&lt;/code&gt; are recomputed based on the requested &lt;code&gt;new_shape&lt;/code&gt;.</source>
          <target state="translated">This operation has the same semantics as reshape on the represented dense tensor. The &lt;code&gt;input_indices&lt;/code&gt; are recomputed based on the requested &lt;code&gt;new_shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c77c133cb2aa87b66c50cea9b24338cf94df91e2" translate="yes" xml:space="preserve">
          <source>This operation is equivalent to the following steps:</source>
          <target state="translated">이 작업은 다음 단계와 같습니다.</target>
        </trans-unit>
        <trans-unit id="197a06d7811b56e8d6bce80b3c815e4a4c56a4a7" translate="yes" xml:space="preserve">
          <source>This operation is not supported by all queues. If a queue does not support DequeueUpTo, then an Unimplemented error is returned.</source>
          <target state="translated">This operation is not supported by all queues. If a queue does not support DequeueUpTo, then an Unimplemented error is returned.</target>
        </trans-unit>
        <trans-unit id="6db0a8622252241b3dd8e4da9fc3d6ba84977a9c" translate="yes" xml:space="preserve">
          <source>This operation is related to &lt;code&gt;squeeze()&lt;/code&gt;, which removes dimensions of size 1.</source>
          <target state="translated">이 작업은 크기 1의 크기를 제거 하는 &lt;code&gt;squeeze()&lt;/code&gt; 와 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a39ff6aff1d832bca041bbe0ecd1ce428c1522da" translate="yes" xml:space="preserve">
          <source>This operation is useful for Locality-Sensitive-Hashing (LSH) and other algorithms that use hashing approximations of cosine and &lt;code&gt;L2&lt;/code&gt; distances; codes can be generated from an input via:</source>
          <target state="translated">This operation is useful for Locality-Sensitive-Hashing (LSH) and other algorithms that use hashing approximations of cosine and &lt;code&gt;L2&lt;/code&gt; distances; codes can be generated from an input via:</target>
        </trans-unit>
        <trans-unit id="5397809ea0e6b96d049101c13960159515304d67" translate="yes" xml:space="preserve">
          <source>This operation is useful for resizing the activations between convolutions (but keeping all data), e.g. instead of pooling. It is also useful for training purely convolutional models.</source>
          <target state="translated">이 작업은 풀링 대신 컨볼 루션 간의 활성화 크기를 조정하지만 모든 데이터를 유지하는 데 유용합니다. 순전히 컨볼 루션 모델을 훈련하는 데에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e6cbba91c74639c8cb40de16428e2bef0563e905" translate="yes" xml:space="preserve">
          <source>This operation is useful if you want to add a batch dimension to a single element. For example, if you have a single image of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;, you can make it a batch of 1 image with &lt;code&gt;expand_dims(image, 0)&lt;/code&gt;, which will make the shape &lt;code&gt;[1, height, width, channels]&lt;/code&gt;.</source>
          <target state="translated">이 작업은 단일 요소에 배치 차원을 추가하려는 경우에 유용합니다. 예를 들어, 모양 &lt;code&gt;[height, width, channels]&lt;/code&gt; 의 단일 이미지가있는 경우 &lt;code&gt;expand_dims(image, 0)&lt;/code&gt; 을 사용하여 모양이 &lt;code&gt;[1, height, width, channels]&lt;/code&gt; 인 1 개의 이미지를 일괄 적으로 만들 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="082051a9c25e40abb9ca51ba30204e50cec28855" translate="yes" xml:space="preserve">
          <source>This operation outputs &quot;ref&quot; after the assignment is done. This makes it easier to chain operations that need to use the reset value.</source>
          <target state="translated">This operation outputs &quot;ref&quot; after the assignment is done. This makes it easier to chain operations that need to use the reset value.</target>
        </trans-unit>
        <trans-unit id="45e5d0f78a3a33704d46216d94caf563cfac246a" translate="yes" xml:space="preserve">
          <source>This operation outputs &quot;ref&quot; after the update is done. This makes it easier to chain operations that need to use the reset value.</source>
          <target state="translated">This operation outputs &quot;ref&quot; after the update is done. This makes it easier to chain operations that need to use the reset value.</target>
        </trans-unit>
        <trans-unit id="7e16eef80cf37c2d9c02fad5e714a6e559684854" translate="yes" xml:space="preserve">
          <source>This operation outputs &lt;code&gt;ref&lt;/code&gt; after the update is done. This makes it easier to chain operations that need to use the reset value.</source>
          <target state="translated">이 작업 은 업데이트가 완료된 후 &lt;code&gt;ref&lt;/code&gt; 을 출력 합니다. 따라서 재설정 값을 사용해야하는 작업을 쉽게 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff9194e8e7be6d4ad4f022b42bf00a1d9dcc3aad" translate="yes" xml:space="preserve">
          <source>This operation pads &lt;code&gt;input&lt;/code&gt; according to the &lt;code&gt;paddings&lt;/code&gt; and &lt;code&gt;constant_values&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[Dn, 2]&lt;/code&gt;, where n is the rank of &lt;code&gt;input&lt;/code&gt;. For each dimension D of &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many padding values to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many padding values to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension. &lt;code&gt;constant_values&lt;/code&gt; is a scalar tensor of the same type as &lt;code&gt;input&lt;/code&gt; that indicates the value to use for padding &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">This operation pads &lt;code&gt;input&lt;/code&gt; according to the &lt;code&gt;paddings&lt;/code&gt; and &lt;code&gt;constant_values&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[Dn, 2]&lt;/code&gt; , where n is the rank of &lt;code&gt;input&lt;/code&gt; . For each dimension D of &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many padding values to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many padding values to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension. &lt;code&gt;constant_values&lt;/code&gt; is a scalar tensor of the same type as &lt;code&gt;input&lt;/code&gt; that indicates the value to use for padding &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7dac094042ba8225a6a7449892b847dafe951a8" translate="yes" xml:space="preserve">
          <source>This operation pads a &lt;code&gt;input&lt;/code&gt; with mirrored values according to the &lt;code&gt;paddings&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[n, 2]&lt;/code&gt;, where n is the rank of &lt;code&gt;input&lt;/code&gt;. For each dimension D of &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many values to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many values to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension. Both &lt;code&gt;paddings[D, 0]&lt;/code&gt; and &lt;code&gt;paddings[D, 1]&lt;/code&gt; must be no greater than &lt;code&gt;input.dim_size(D)&lt;/code&gt; (or &lt;code&gt;input.dim_size(D) - 1&lt;/code&gt;) if &lt;code&gt;copy_border&lt;/code&gt; is true (if false, respectively).</source>
          <target state="translated">This operation pads a &lt;code&gt;input&lt;/code&gt; with mirrored values according to the &lt;code&gt;paddings&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[n, 2]&lt;/code&gt; , where n is the rank of &lt;code&gt;input&lt;/code&gt; . For each dimension D of &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many values to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many values to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension. Both &lt;code&gt;paddings[D, 0]&lt;/code&gt; and &lt;code&gt;paddings[D, 1]&lt;/code&gt; must be no greater than &lt;code&gt;input.dim_size(D)&lt;/code&gt; (or &lt;code&gt;input.dim_size(D) - 1&lt;/code&gt; ) if &lt;code&gt;copy_border&lt;/code&gt; is true (if false, respectively).</target>
        </trans-unit>
        <trans-unit id="98dc6d3604c67365b92527ae5f26da565365534d" translate="yes" xml:space="preserve">
          <source>This operation pads a &lt;code&gt;input&lt;/code&gt; with zeros according to the &lt;code&gt;paddings&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[Dn, 2]&lt;/code&gt;, where n is the rank of &lt;code&gt;input&lt;/code&gt;. For each dimension D of &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many zeros to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many zeros to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension.</source>
          <target state="translated">This operation pads a &lt;code&gt;input&lt;/code&gt; with zeros according to the &lt;code&gt;paddings&lt;/code&gt; you specify. &lt;code&gt;paddings&lt;/code&gt; is an integer tensor with shape &lt;code&gt;[Dn, 2]&lt;/code&gt; , where n is the rank of &lt;code&gt;input&lt;/code&gt; . For each dimension D of &lt;code&gt;input&lt;/code&gt; , &lt;code&gt;paddings[D, 0]&lt;/code&gt; indicates how many zeros to add before the contents of &lt;code&gt;input&lt;/code&gt; in that dimension, and &lt;code&gt;paddings[D, 1]&lt;/code&gt; indicates how many zeros to add after the contents of &lt;code&gt;input&lt;/code&gt; in that dimension.</target>
        </trans-unit>
        <trans-unit id="ece6bb1bca3b5a4f71fcb2a4c7bb7def98bb6471" translate="yes" xml:space="preserve">
          <source>This operation performs non_max_suppression on the inputs per batch, across all classes. Prunes away boxes that have high intersection-over-union (IOU) overlap with previously selected boxes. Bounding boxes are supplied as [y1, x1, y2, x2], where (y1, x1) and (y2, x2) are the coordinates of any diagonal pair of box corners and the coordinates can be provided as normalized (i.e., lying in the interval [0, 1]) or absolute. Note that this algorithm is agnostic to where the origin is in the coordinate system. Also note that this algorithm is invariant to orthogonal transformations and translations of the coordinate system; thus translating or reflections of the coordinate system result in the same boxes being selected by the algorithm. The output of this operation is the final boxes, scores and classes tensor returned after performing non_max_suppression.</source>
          <target state="translated">이 작업은 모든 클래스에서 배치 당 입력에 대해 non_max_suppression을 수행합니다. 높은 IOU (교집합 교차)가있는 상자를 이전에 선택한 상자와 겹치십시오. 경계 상자는 [y1, x1, y2, x2]로 제공되며, 여기서 (y1, x1) 및 (y2, x2)는 상자 모서리의 대각선 쌍의 좌표이며 좌표는 정규화 된대로 제공 할 수 있습니다 (즉, 간격 [0, 1]) 또는 절대 값. 이 알고리즘은 원점이 좌표계의 위치와 관계가 없습니다. 또한이 알고리즘은 좌표계의 직교 변환 및 변환에 변하지 않습니다. 따라서 좌표계의 변환 또는 반사는 알고리즘에 의해 동일한 박스가 선택되게한다. 이 작업의 결과는 마지막 상자입니다.non_max_suppression을 수행 한 후 점수 및 클래스 텐서가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2656ea13a552cbb0836e0031c2afa8bfe371a2e1" translate="yes" xml:space="preserve">
          <source>This operation requires that:</source>
          <target state="translated">이 작업에는 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="85455e262fab5e8f9fc55d0016d69887ed46e6fb" translate="yes" xml:space="preserve">
          <source>This operation reshapes the &quot;batch&quot; dimension 0 into &lt;code&gt;M + 1&lt;/code&gt; dimensions of shape &lt;code&gt;block_shape + [batch]&lt;/code&gt;, interleaves these blocks back into the grid defined by the spatial dimensions &lt;code&gt;[1, ..., M]&lt;/code&gt;, to obtain a result with the same rank as the input. The spatial dimensions of this intermediate result are then optionally cropped according to &lt;code&gt;crops&lt;/code&gt; to produce the output. This is the reverse of SpaceToBatch. See below for a precise description.</source>
          <target state="translated">이 작업은 &quot;일괄 처리&quot;차원 0을 형태 &lt;code&gt;block_shape + [batch]&lt;/code&gt; 의 &lt;code&gt;M + 1&lt;/code&gt; 차원으로 재구성 하고 공간 블록 &lt;code&gt;[1, ..., M]&lt;/code&gt; 의해 정의 된 그리드로이 블록을 인터리브 하여 입력과 같은 순위입니다. 이어서,이 중간 결과의 공간 치수는 &lt;code&gt;crops&lt;/code&gt; 에 따라 선택적으로 크롭 되어 출력을 생성한다. 이것은 SpaceToBatch의 반대입니다. 자세한 설명은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="476cbc978c015f266a3353221077ac3bad3036de" translate="yes" xml:space="preserve">
          <source>This operation returns a tensor with the &lt;code&gt;diagonal&lt;/code&gt; part of the &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;diagonal&lt;/code&gt; part is computed as follows:</source>
          <target state="translated">이 작업은 &lt;code&gt;input&lt;/code&gt; 의 &lt;code&gt;diagonal&lt;/code&gt; 부분이 있는 텐서를 반환합니다 . &lt;code&gt;diagonal&lt;/code&gt; 다음 부분이 계산된다 :</target>
        </trans-unit>
        <trans-unit id="4aefd218f88fe56a44f84be48601325a8bfff9a5" translate="yes" xml:space="preserve">
          <source>This operation returns a tensor with the &lt;code&gt;diagonal&lt;/code&gt; part of the batched &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;diagonal&lt;/code&gt; part is computed as follows:</source>
          <target state="translated">This operation returns a tensor with the &lt;code&gt;diagonal&lt;/code&gt; part of the batched &lt;code&gt;input&lt;/code&gt; . The &lt;code&gt;diagonal&lt;/code&gt; part is computed as follows:</target>
        </trans-unit>
        <trans-unit id="e2b8bbf455ec7dda7bf033c368dcb34b158ee06e" translate="yes" xml:space="preserve">
          <source>This operation returns the same result as the C++ std::nextafter function.</source>
          <target state="translated">이 작업은 C ++ std :: nextafter 함수와 동일한 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cba2fef602700f559d54f64ca39679c7fe5a39cf" translate="yes" xml:space="preserve">
          <source>This operation returns true if the queue is closed and false if the queue is open.</source>
          <target state="translated">이 작업은 큐가 닫혀 있으면 true를, 큐가 열려 있으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03d601007c00ecaaf281c99e7ccdb7f989fc3f40" translate="yes" xml:space="preserve">
          <source>This operation signals that no more elements will be enqueued in the given queue. Subsequent Enqueue(Many) operations will fail. Subsequent Dequeue(Many) operations will continue to succeed if sufficient elements remain in the queue. Subsequent Dequeue(Many) operations that would block will fail immediately.</source>
          <target state="translated">This operation signals that no more elements will be enqueued in the given queue. Subsequent Enqueue(Many) operations will fail. Subsequent Dequeue(Many) operations will continue to succeed if sufficient elements remain in the queue. Subsequent Dequeue(Many) operations that would block will fail immediately.</target>
        </trans-unit>
        <trans-unit id="5ec52846420c7cbfc81445413d50c93e2addb827" translate="yes" xml:space="preserve">
          <source>This operation signals that no more new elements will be inserted in the given barrier. Subsequent InsertMany that try to introduce a new key will fail. Subsequent InsertMany operations that just add missing components to already existing elements will continue to succeed. Subsequent TakeMany operations will continue to succeed if sufficient completed elements remain in the barrier. Subsequent TakeMany operations that would block will fail immediately.</source>
          <target state="translated">This operation signals that no more new elements will be inserted in the given barrier. Subsequent InsertMany that try to introduce a new key will fail. Subsequent InsertMany operations that just add missing components to already existing elements will continue to succeed. Subsequent TakeMany operations will continue to succeed if sufficient completed elements remain in the barrier. Subsequent TakeMany operations that would block will fail immediately.</target>
        </trans-unit>
        <trans-unit id="b8bdc6b534f905cf96c588287c2b2a6b2355e944" translate="yes" xml:space="preserve">
          <source>This operation slices each component tensor along the 0th dimension to make multiple queue elements. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the tuple components must have the same size in the 0th dimension.</source>
          <target state="translated">This operation slices each component tensor along the 0th dimension to make multiple queue elements. &lt;a href=&quot;all#classtensorflow_1_1ops_1_1_all&quot;&gt;All&lt;/a&gt; of the tuple components must have the same size in the 0th dimension.</target>
        </trans-unit>
        <trans-unit id="c09d355015c640623e774187c625203da78fb3a6" translate="yes" xml:space="preserve">
          <source>This operation would return:</source>
          <target state="translated">이 작업은 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92dd41b791dbf13ddc6a327806e125ee583ae520" translate="yes" xml:space="preserve">
          <source>This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the maximum such that:</source>
          <target state="translated">This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the maximum such that:</target>
        </trans-unit>
        <trans-unit id="93ced2fb3cbcea518ba73655a87ad7c031bf33a9" translate="yes" xml:space="preserve">
          <source>This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the minimum such that:</source>
          <target state="translated">This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the minimum such that:</target>
        </trans-unit>
        <trans-unit id="35879cb01f9aab174c8105047c42ae9245e51470" translate="yes" xml:space="preserve">
          <source>This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the product of all entries belonging to a segment such that:</source>
          <target state="translated">This operator is similar to the unsorted segment sum operator found &lt;a href=&quot;../../../api_docs/python/math_ops.md#UnsortedSegmentSum&quot;&gt;(here)&lt;/a&gt;. Instead of computing the sum over segments, it computes the product of all entries belonging to a segment such that:</target>
        </trans-unit>
        <trans-unit id="d243b49a16809ba508894c3eb53aaf2744d8ff3a" translate="yes" xml:space="preserve">
          <source>This operator represents the loop termination condition used by the &quot;pivot&quot; switches of a loop.</source>
          <target state="translated">This operator represents the loop termination condition used by the &quot;pivot&quot; switches of a loop.</target>
        </trans-unit>
        <trans-unit id="efbc958735ecb1b79fddfae66e71db4081b1ceb7" translate="yes" xml:space="preserve">
          <source>This operator takes the given &lt;code&gt;SparseTensor&lt;/code&gt; and adds it to a container object (a &lt;code&gt;SparseTensorsMap&lt;/code&gt;). A unique key within this container is generated in the form of an &lt;code&gt;int64&lt;/code&gt;, and this is the value that is returned.</source>
          <target state="translated">This operator takes the given &lt;code&gt;SparseTensor&lt;/code&gt; and adds it to a container object (a &lt;code&gt;SparseTensorsMap&lt;/code&gt; ). A unique key within this container is generated in the form of an &lt;code&gt;int64&lt;/code&gt; , and this is the value that is returned.</target>
        </trans-unit>
        <trans-unit id="8beab818ce538eb5919197a98807ea337b127bd0" translate="yes" xml:space="preserve">
          <source>This operator tries to squeeze as much precision as possible into an output with a lower bit depth by calculating the actual min and max values found in the data. For example, maybe that quint16 input has no values lower than 16,384 and none higher than 49,152. That means only half the range is actually needed, all the float interpretations are between -0.5f and 0.5f, so if we want to compress the data into a quint8 output, we can use that range rather than the theoretical -1.0f to 1.0f that is suggested by the input min and max.</source>
          <target state="translated">This operator tries to squeeze as much precision as possible into an output with a lower bit depth by calculating the actual min and max values found in the data. For example, maybe that quint16 input has no values lower than 16,384 and none higher than 49,152. That means only half the range is actually needed, all the float interpretations are between -0.5f and 0.5f, so if we want to compress the data into a quint8 output, we can use that range rather than the theoretical -1.0f to 1.0f that is suggested by the input min and max.</target>
        </trans-unit>
        <trans-unit id="6022260ba29a606d83e3d42730947f16a2206ca9" translate="yes" xml:space="preserve">
          <source>This outputs a &lt;code&gt;batch_size&lt;/code&gt; bool array, an entry &lt;code&gt;out[i]&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if the prediction for the target class is among the top &lt;code&gt;k&lt;/code&gt; predictions among all predictions for example &lt;code&gt;i&lt;/code&gt;. Note that the behavior of &lt;code&gt;&lt;a href=&quot;in-top-k#classtensorflow_1_1ops_1_1_in_top_k&quot;&gt;InTopK&lt;/a&gt;&lt;/code&gt; differs from the &lt;code&gt;&lt;a href=&quot;top-k#classtensorflow_1_1ops_1_1_top_k&quot;&gt;TopK&lt;/a&gt;&lt;/code&gt; op in its handling of ties; if multiple classes have the same prediction value and straddle the top-&lt;code&gt;k&lt;/code&gt; boundary, all of those classes are considered to be in the top &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">This outputs a &lt;code&gt;batch_size&lt;/code&gt; bool array, an entry &lt;code&gt;out[i]&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if the prediction for the target class is among the top &lt;code&gt;k&lt;/code&gt; predictions among all predictions for example &lt;code&gt;i&lt;/code&gt; . Note that the behavior of &lt;code&gt;&lt;a href=&quot;in-top-k#classtensorflow_1_1ops_1_1_in_top_k&quot;&gt;InTopK&lt;/a&gt;&lt;/code&gt; differs from the &lt;code&gt;&lt;a href=&quot;top-k#classtensorflow_1_1ops_1_1_top_k&quot;&gt;TopK&lt;/a&gt;&lt;/code&gt; op in its handling of ties; if multiple classes have the same prediction value and straddle the top- &lt;code&gt;k&lt;/code&gt; boundary, all of those classes are considered to be in the top &lt;code&gt;k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7ab8b6958ccc94a917e6e532cc62e7e52c1c58" translate="yes" xml:space="preserve">
          <source>This parameter (together with 'num_shards') indicates the particular partition number of a sampler op, when partitioning is being used.</source>
          <target state="translated">This parameter (together with 'num_shards') indicates the particular partition number of a sampler op, when partitioning is being used.</target>
        </trans-unit>
        <trans-unit id="93143bdab6fc5039d6a26207dd43e86940e0dcfb" translate="yes" xml:space="preserve">
          <source>This parameter (together with 'shard') indicates the number of partitions that are being used in the overall computation.</source>
          <target state="translated">This parameter (together with 'shard') indicates the number of partitions that are being used in the overall computation.</target>
        </trans-unit>
        <trans-unit id="1726e729f24c9b4d2f0d7ad29889dfc436075665" translate="yes" xml:space="preserve">
          <source>This should only be used for specifying a backward edge, needed by control flow.</source>
          <target state="translated">This should only be used for specifying a backward edge, needed by control flow.</target>
        </trans-unit>
        <trans-unit id="c20a94227889e09bca43148edd64b1ff53603540" translate="yes" xml:space="preserve">
          <source>This tensor shares other's underlying storage. Returns &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;other.shape()&lt;/code&gt; has the same number of elements of the given &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">This tensor shares other's underlying storage. Returns &lt;code&gt;true&lt;/code&gt; iff &lt;code&gt;other.shape()&lt;/code&gt; has the same number of elements of the given &lt;code&gt;shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e11028386ce8d3ec51e22188331a6eee4d25d4eb" translate="yes" xml:space="preserve">
          <source>Thread safety:</source>
          <target state="translated">스레드 안전 :</target>
        </trans-unit>
        <trans-unit id="ba021a87a7ab86edf2ac4ff0e8908a06507c8b85" translate="yes" xml:space="preserve">
          <source>TimeoutMs</source>
          <target state="translated">TimeoutMs</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="42749cd48a57185da63f11aaee50b42e43b1f9e3" translate="yes" xml:space="preserve">
          <source>To be used together with `initializer = tf.variance_scaling_initializer(factor=1.0, mode='FAN_IN')&lt;code&gt;. For correct dropout, use&lt;/code&gt;tf.contrib.nn.alpha_dropout`.</source>
          <target state="translated">To be used together with `initializer = tf.variance_scaling_initializer(factor=1.0, mode='FAN_IN') &lt;code&gt;. For correct dropout, use&lt;/code&gt; tf.contrib.nn.alpha_dropout`.</target>
        </trans-unit>
        <trans-unit id="7b6029c7e3bb01f2a957dbd1f843cf6eb439da03" translate="yes" xml:space="preserve">
          <source>To use, enqueue filenames in a Queue. The output of &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; will be a filename (key) and the contents of that file (value).</source>
          <target state="translated">To use, enqueue filenames in a Queue. The output of &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; will be a filename (key) and the contents of that file (value).</target>
        </trans-unit>
        <trans-unit id="102516e4c33c89f8aa3a19ee8215130a64c6dbe2" translate="yes" xml:space="preserve">
          <source>To use, enqueue strings in a Queue. &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; will take the front work string and output (work, work).</source>
          <target state="translated">To use, enqueue strings in a Queue. &lt;a href=&quot;reader-read#classtensorflow_1_1ops_1_1_reader_read&quot;&gt;ReaderRead&lt;/a&gt; will take the front work string and output (work, work).</target>
        </trans-unit>
        <trans-unit id="abd788726598395cc6a2fd60d02df0ac7380f38a" translate="yes" xml:space="preserve">
          <source>ToGraphDef</source>
          <target state="translated">ToGraphDef</target>
        </trans-unit>
        <trans-unit id="6d91e0bb03db855ca6abf158ff2a073989866cac" translate="yes" xml:space="preserve">
          <source>Tolerance</source>
          <target state="translated">Tolerance</target>
        </trans-unit>
        <trans-unit id="00a0204649835b513c94e7dcd17a04a18748c48f" translate="yes" xml:space="preserve">
          <source>TopK</source>
          <target state="translated">TopK</target>
        </trans-unit>
        <trans-unit id="4d01722ddd383292db940da232fcea5075cc0859" translate="yes" xml:space="preserve">
          <source>TotalBytes</source>
          <target state="translated">TotalBytes</target>
        </trans-unit>
        <trans-unit id="6b0b09b8a698b71592ca3b343dbb307dc3a83a6e" translate="yes" xml:space="preserve">
          <source>Tout</source>
          <target state="translated">Tout</target>
        </trans-unit>
        <trans-unit id="3c20249737b037232dcdbd248c1cead76ebbb82f" translate="yes" xml:space="preserve">
          <source>Tout_</source>
          <target state="translated">Tout_</target>
        </trans-unit>
        <trans-unit id="4953cd7624a90ae5d124a596e3cb822a7d0c027a" translate="yes" xml:space="preserve">
          <source>Toutput</source>
          <target state="translated">Toutput</target>
        </trans-unit>
        <trans-unit id="e29d31e3eb16526f9f0f7839f39ee3fef7d4574f" translate="yes" xml:space="preserve">
          <source>Toutput_</source>
          <target state="translated">Toutput_</target>
        </trans-unit>
        <trans-unit id="8d2d0f0bd040316fa2587294248e80bd36443f34" translate="yes" xml:space="preserve">
          <source>Training Ops</source>
          <target state="translated">Training Ops</target>
        </trans-unit>
        <trans-unit id="e5238d35744e76f113cfe81d17fbfa29f295ac05" translate="yes" xml:space="preserve">
          <source>Transcode the input text from a source encoding to a destination encoding.</source>
          <target state="translated">입력 텍스트를 소스 인코딩에서 대상 인코딩으로 코드 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="6f6dde083b017079a9ff49f078d38966fdc08fb2" translate="yes" xml:space="preserve">
          <source>Transforms a &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</source>
          <target state="translated">Transforms a &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</target>
        </trans-unit>
        <trans-unit id="aeca6fabef30377c6c6445e192eabc8f3a207600" translate="yes" xml:space="preserve">
          <source>Transforms a &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</source>
          <target state="translated">Transforms a &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</target>
        </trans-unit>
        <trans-unit id="543bbfdd7e17310081eba1eecdd0aef4db9ff475" translate="yes" xml:space="preserve">
          <source>Transforms a &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</source>
          <target state="translated">Transforms a &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; into a serialized TensorProto proto.</target>
        </trans-unit>
        <trans-unit id="4999b7a71f3c11d96be3e3808c9e8fc9eb261a51" translate="yes" xml:space="preserve">
          <source>Transforms a scalar brain.SequenceExample proto (as strings) into typed tensors.</source>
          <target state="translated">Transforms a scalar brain.SequenceExample proto (as strings) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="57b381d9b5a7e82f0f4b7b791e4125f18f1c5e56" translate="yes" xml:space="preserve">
          <source>Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;../class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="65496485673f1bc83ec5fcf58e4b550466e5ad4a" translate="yes" xml:space="preserve">
          <source>Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;../tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7cf924c74de49065c1c5f08196fef1ca9016f5b6" translate="yes" xml:space="preserve">
          <source>Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</source>
          <target state="translated">Transforms a serialized tensorflow.TensorProto proto into a &lt;a href=&quot;class/tensorflow/tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bd2f17793a2563570a330d4671f70e89b2937951" translate="yes" xml:space="preserve">
          <source>Transforms a tf.Example proto (as a string) into typed tensors.</source>
          <target state="translated">Transforms a tf.Example proto (as a string) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="0b8677520a5e74e9b4b4788602fe7bc1e6fe1360" translate="yes" xml:space="preserve">
          <source>Transforms a vector of brain.Example protos (as strings) into typed tensors.</source>
          <target state="translated">Transforms a vector of brain.Example protos (as strings) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="be5a4de021d7eadbe941c3409ada3c7b1dabaea1" translate="yes" xml:space="preserve">
          <source>Transforms a vector of brain.SequenceExample protos (as strings) into typed tensors.</source>
          <target state="translated">Transforms a vector of brain.SequenceExample protos (as strings) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="eb363dfb8e50cc87a12a26568447baf08e0619fb" translate="yes" xml:space="preserve">
          <source>Transforms a vector of tf.Example protos (as strings) into typed tensors.</source>
          <target state="translated">Transforms a vector of tf.Example protos (as strings) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="21a1f49b819ce2dd95bbd5c582105a0ecb5e69da" translate="yes" xml:space="preserve">
          <source>Transforms a vector of tf.io.SequenceExample protos (as strings) into typed tensors.</source>
          <target state="translated">Transforms a vector of tf.io.SequenceExample protos (as strings) into typed tensors.</target>
        </trans-unit>
        <trans-unit id="91ca9de6cdfc05c9ff55126bfffc27ca1db52021" translate="yes" xml:space="preserve">
          <source>TransposeA</source>
          <target state="translated">TransposeA</target>
        </trans-unit>
        <trans-unit id="8220d682b5cfbe9d971d451f0d5e3af1c4fe7e2b" translate="yes" xml:space="preserve">
          <source>TransposeB</source>
          <target state="translated">TransposeB</target>
        </trans-unit>
        <trans-unit id="48c20240aabee5be73215aad358929a60b233d4f" translate="yes" xml:space="preserve">
          <source>Truncate</source>
          <target state="translated">Truncate</target>
        </trans-unit>
        <trans-unit id="4a2f0a78e05a23faa43333403bbc8e7bb4a127d9" translate="yes" xml:space="preserve">
          <source>TruncateDiv</source>
          <target state="translated">TruncateDiv</target>
        </trans-unit>
        <trans-unit id="88d5fe1e339e14bfa5e83a1a1041f877f78fa654" translate="yes" xml:space="preserve">
          <source>TruncateMod</source>
          <target state="translated">TruncateMod</target>
        </trans-unit>
        <trans-unit id="8d3a40687cec52a1bff7b5d6bca4d6f71c493699" translate="yes" xml:space="preserve">
          <source>Truncate_</source>
          <target state="translated">Truncate_</target>
        </trans-unit>
        <trans-unit id="5b6f413272cd888b5af448b50b30ef69c71b431f" translate="yes" xml:space="preserve">
          <source>TruncatedNormal</source>
          <target state="translated">TruncatedNormal</target>
        </trans-unit>
        <trans-unit id="92168509493479e056dbb5c856ca03524c3c988c" translate="yes" xml:space="preserve">
          <source>Truncation designates that negative numbers will round fractional quantities toward zero. I.e. -7 / 5 = -1. This matches C semantics but it is different than Python semantics. See &lt;code&gt;&lt;a href=&quot;floor-div#classtensorflow_1_1ops_1_1_floor_div&quot;&gt;FloorDiv&lt;/a&gt;&lt;/code&gt; for a division function that matches Python Semantics.</source>
          <target state="translated">Truncation designates that negative numbers will round fractional quantities toward zero. I.e. -7 / 5 = -1. This matches C semantics but it is different than Python semantics. See &lt;code&gt;&lt;a href=&quot;floor-div#classtensorflow_1_1ops_1_1_floor_div&quot;&gt;FloorDiv&lt;/a&gt;&lt;/code&gt; for a division function that matches Python Semantics.</target>
        </trans-unit>
        <trans-unit id="90886aa9238a43d542ae9b8a1f380da1acccf1b2" translate="yes" xml:space="preserve">
          <source>TryRecoverTruncated</source>
          <target state="translated">TryRecoverTruncated</target>
        </trans-unit>
        <trans-unit id="5392c950bdde4be7e5f5b8fdc6a1ca5f21e905cf" translate="yes" xml:space="preserve">
          <source>Twitter</source>
          <target state="translated">Twitter</target>
        </trans-unit>
        <trans-unit id="0b062c858f99166360106e6f70f0d9f2be6edbc4" translate="yes" xml:space="preserve">
          <source>Type of the output tensor.</source>
          <target state="translated">Type of the output tensor.</target>
        </trans-unit>
        <trans-unit id="ca804ab74bf9fa2667ceb8c95926b696eb69be50" translate="yes" xml:space="preserve">
          <source>Typedefs</source>
          <target state="translated">Typedefs</target>
        </trans-unit>
        <trans-unit id="d48a266454de5c99b64f1535df01a2aa732eb493" translate="yes" xml:space="preserve">
          <source>UnicodeScript</source>
          <target state="translated">UnicodeScript</target>
        </trans-unit>
        <trans-unit id="c03f6044710be2f868218b1b8ef3d1a0cb70d8e9" translate="yes" xml:space="preserve">
          <source>UnicodeTranscode</source>
          <target state="translated">UnicodeTranscode</target>
        </trans-unit>
        <trans-unit id="2408554486ca40a7df4bc74cb3619a293981c6a8" translate="yes" xml:space="preserve">
          <source>UniformCandidateSampler</source>
          <target state="translated">UniformCandidateSampler</target>
        </trans-unit>
        <trans-unit id="130279ebbdabdc6bce06140c1fcb04b5358be21d" translate="yes" xml:space="preserve">
          <source>UniformNoise</source>
          <target state="translated">UniformNoise</target>
        </trans-unit>
        <trans-unit id="897c6a67400786d2d4f5ef2f114cb809095df3d8" translate="yes" xml:space="preserve">
          <source>Unigrams</source>
          <target state="translated">Unigrams</target>
        </trans-unit>
        <trans-unit id="f6b935ab337145efdeadda28cae18aa89a845e36" translate="yes" xml:space="preserve">
          <source>Unit</source>
          <target state="translated">Unit</target>
        </trans-unit>
        <trans-unit id="9dbb5ec27226d958cd0f05b907e9fd942e5821e4" translate="yes" xml:space="preserve">
          <source>Unit used to specify &lt;code&gt;x_density&lt;/code&gt; and &lt;code&gt;y_density&lt;/code&gt;: pixels per inch (&lt;code&gt;'in'&lt;/code&gt;) or centimeter (&lt;code&gt;'cm'&lt;/code&gt;).</source>
          <target state="translated">Unit used to specify &lt;code&gt;x_density&lt;/code&gt; and &lt;code&gt;y_density&lt;/code&gt; : pixels per inch ( &lt;code&gt;'in'&lt;/code&gt; ) or centimeter ( &lt;code&gt;'cm'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="92bc36a11673092bb7f8bbcf5f6bdaa311da0056" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;softmax-cross-entropy-with-logits#classtensorflow_1_1ops_1_1_softmax_cross_entropy_with_logits&quot;&gt;SoftmaxCrossEntropyWithLogits&lt;/a&gt;&lt;/code&gt;, this operation does not accept a matrix of label probabilities, but rather a single label per row of features. This label is considered to have probability 1.0 for the given row.</source>
          <target state="translated">Unlike &lt;code&gt;&lt;a href=&quot;softmax-cross-entropy-with-logits#classtensorflow_1_1ops_1_1_softmax_cross_entropy_with_logits&quot;&gt;SoftmaxCrossEntropyWithLogits&lt;/a&gt;&lt;/code&gt; , this operation does not accept a matrix of label probabilities, but rather a single label per row of features. This label is considered to have probability 1.0 for the given row.</target>
        </trans-unit>
        <trans-unit id="33c0f5ca96c96a12269cd4ff95c4f773357fb44e" translate="yes" xml:space="preserve">
          <source>Unlike the original &lt;code&gt;accumulate_n&lt;/code&gt;, &lt;code&gt;accumulate_n_v2&lt;/code&gt; is differentiable.</source>
          <target state="translated">Unlike the original &lt;code&gt;accumulate_n&lt;/code&gt; , &lt;code&gt;accumulate_n_v2&lt;/code&gt; is differentiable.</target>
        </trans-unit>
        <trans-unit id="c078806c3230eeddb272499b9dbad894b90d6581" translate="yes" xml:space="preserve">
          <source>UnsafeCopyFromInternal</source>
          <target state="translated">UnsafeCopyFromInternal</target>
        </trans-unit>
        <trans-unit id="9329b6002fc399b1c6e7eb106d68b0ce50955b52" translate="yes" xml:space="preserve">
          <source>UnsortedSegmentJoin</source>
          <target state="translated">UnsortedSegmentJoin</target>
        </trans-unit>
        <trans-unit id="0982334ce0fca73c3a5e3ea913a7e0313a459f82" translate="yes" xml:space="preserve">
          <source>UnsortedSegmentMax</source>
          <target state="translated">UnsortedSegmentMax</target>
        </trans-unit>
        <trans-unit id="366fa15ecb43d76a152b506219741a7b3f5f0bcd" translate="yes" xml:space="preserve">
          <source>UnsortedSegmentMin</source>
          <target state="translated">UnsortedSegmentMin</target>
        </trans-unit>
        <trans-unit id="6ef6286b2679e6c430cc36837f66e9730b079a8c" translate="yes" xml:space="preserve">
          <source>UnsortedSegmentProd</source>
          <target state="translated">UnsortedSegmentProd</target>
        </trans-unit>
        <trans-unit id="88334ca532d2e8466fab68a79d76f33ec76acf9a" translate="yes" xml:space="preserve">
          <source>UnsortedSegmentSum</source>
          <target state="translated">UnsortedSegmentSum</target>
        </trans-unit>
        <trans-unit id="7298d7ed988425fb6199864e49341c509f32d027" translate="yes" xml:space="preserve">
          <source>Unstage</source>
          <target state="translated">Unstage</target>
        </trans-unit>
        <trans-unit id="e38d308cee1cac8d9c2edb27c5ab629ef7fac7d9" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the Adam algorithm.</source>
          <target state="translated">Update '*var' according to the Adam algorithm.</target>
        </trans-unit>
        <trans-unit id="1b43e05874006f2166053362d39efb24c1da40cb" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the AddSign update.</source>
          <target state="translated">Update '*var' according to the AddSign update.</target>
        </trans-unit>
        <trans-unit id="52d1d116ee95e78e3bbfd1ce841dc358b8929317" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the Ftrl-proximal scheme.</source>
          <target state="translated">Update '*var' according to the Ftrl-proximal scheme.</target>
        </trans-unit>
        <trans-unit id="471071d3477d079bfcbcf7383ae1d699f1fecd50" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the RMSProp algorithm.</source>
          <target state="translated">Update '*var' according to the RMSProp algorithm.</target>
        </trans-unit>
        <trans-unit id="ff81ee48686edeb07f152d5d3567bb2505faedfb" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the adadelta scheme.</source>
          <target state="translated">Update '*var' according to the adadelta scheme.</target>
        </trans-unit>
        <trans-unit id="5d5ebbbd0b1837c20103e258d32dcbcdda20ba7d" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the adagrad scheme.</source>
          <target state="translated">Update '*var' according to the adagrad scheme.</target>
        </trans-unit>
        <trans-unit id="868d113999a0543f3fad5d44d43245c1668a6d37" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the centered RMSProp algorithm.</source>
          <target state="translated">Update '*var' according to the centered RMSProp algorithm.</target>
        </trans-unit>
        <trans-unit id="e800b9c7484bc8710e98c151f2fff6a2fd5d03ac" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the momentum scheme.</source>
          <target state="translated">Update '*var' according to the momentum scheme.</target>
        </trans-unit>
        <trans-unit id="9d77d08a52fed9d23da57628bfa85afe8cc236bc" translate="yes" xml:space="preserve">
          <source>Update '*var' according to the proximal adagrad scheme.</source>
          <target state="translated">Update '*var' according to the proximal adagrad scheme.</target>
        </trans-unit>
        <trans-unit id="0c90fbd05f43f7a48b1a12b3f8f8beca912ef400" translate="yes" xml:space="preserve">
          <source>Update '*var' and '*accum' according to FOBOS with Adagrad learning rate.</source>
          <target state="translated">Update '*var' and '*accum' according to FOBOS with Adagrad learning rate.</target>
        </trans-unit>
        <trans-unit id="787674ac15a7f58c7a9bd7dc691b153215067ce5" translate="yes" xml:space="preserve">
          <source>Update '*var' as FOBOS algorithm with fixed learning rate.</source>
          <target state="translated">Update '*var' as FOBOS algorithm with fixed learning rate.</target>
        </trans-unit>
        <trans-unit id="abf5d76205f9777481707bb7900ee4d7f09321a8" translate="yes" xml:space="preserve">
          <source>Update '*var' by subtracting 'alpha' * 'delta' from it.</source>
          <target state="translated">Update '*var' by subtracting 'alpha' * 'delta' from it.</target>
        </trans-unit>
        <trans-unit id="fe20dc33f34485fdead6adf9d07e849e8a936d69" translate="yes" xml:space="preserve">
          <source>Update 'ref' by adding 'value' to it.</source>
          <target state="translated">Update 'ref' by adding 'value' to it.</target>
        </trans-unit>
        <trans-unit id="c9257701af71d4f765da34dcd01e8df105b8aa44" translate="yes" xml:space="preserve">
          <source>Update 'ref' by assigning 'value' to it.</source>
          <target state="translated">Update 'ref' by assigning 'value' to it.</target>
        </trans-unit>
        <trans-unit id="29365e08f06cd2686f25f0d377b66ff5415b759c" translate="yes" xml:space="preserve">
          <source>Update 'ref' by subtracting 'value' from it.</source>
          <target state="translated">Update 'ref' by subtracting 'value' from it.</target>
        </trans-unit>
        <trans-unit id="c61b9a2b5c8bb3c5a6bf911d1b99d68d950f76c9" translate="yes" xml:space="preserve">
          <source>Update entries in '*var' and '*accum' according to the proximal adagrad scheme.</source>
          <target state="translated">Update entries in '*var' and '*accum' according to the proximal adagrad scheme.</target>
        </trans-unit>
        <trans-unit id="447e87cca9a900913e2b362703c44b530d8ad36e" translate="yes" xml:space="preserve">
          <source>Update relevant entries in '*var' according to the Ftrl-proximal scheme.</source>
          <target state="translated">Update relevant entries in '*var' according to the Ftrl-proximal scheme.</target>
        </trans-unit>
        <trans-unit id="eb694ddeb34e132a317d56980ab4f95c7139ccc6" translate="yes" xml:space="preserve">
          <source>Update relevant entries in '*var' and '*accum' according to the adagrad scheme.</source>
          <target state="translated">Update relevant entries in '*var' and '*accum' according to the adagrad scheme.</target>
        </trans-unit>
        <trans-unit id="43409a70d3a3fb69b80d1b22fedd7e019788df87" translate="yes" xml:space="preserve">
          <source>Update relevant entries in '*var' and '*accum' according to the momentum scheme.</source>
          <target state="translated">Update relevant entries in '*var' and '*accum' according to the momentum scheme.</target>
        </trans-unit>
        <trans-unit id="ba6633f10b4633ec4274d01bc667ca393393a675" translate="yes" xml:space="preserve">
          <source>Update the status on this scope.</source>
          <target state="translated">Update the status on this scope.</target>
        </trans-unit>
        <trans-unit id="1da7fc7e38146dedff0f18164f0ad0d2fdf8e761" translate="yes" xml:space="preserve">
          <source>UpdateSlots</source>
          <target state="translated">UpdateSlots</target>
        </trans-unit>
        <trans-unit id="1e1f3aa5db84d69c92c75865b7a2cdad5d7c557d" translate="yes" xml:space="preserve">
          <source>UpdateStatus</source>
          <target state="translated">UpdateStatus</target>
        </trans-unit>
        <trans-unit id="c1444a8720b007d3bc3efc14cd0416a718bdfe20" translate="yes" xml:space="preserve">
          <source>Updates specified rows 'i' with values 'v'.</source>
          <target state="translated">Updates specified rows 'i' with values 'v'.</target>
        </trans-unit>
        <trans-unit id="da9e8385ef1cee6fd5a3ef89050fbd2471b13c5e" translate="yes" xml:space="preserve">
          <source>Updates the accumulator with a new value for global_step.</source>
          <target state="translated">Updates the accumulator with a new value for global_step.</target>
        </trans-unit>
        <trans-unit id="9629fc5be7eebf84f66a1a4fe14d7eee29fbc498" translate="yes" xml:space="preserve">
          <source>Usage Example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="67ae77d8c1c232638992f50858b1f2497903d5dd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;run_options&lt;/code&gt; to turn on performance profiling.</source>
          <target state="translated">Use &lt;code&gt;run_options&lt;/code&gt; to turn on performance profiling.</target>
        </trans-unit>
        <trans-unit id="3e2e0e49e1f4a0e3cfc2d11ce7bc8bdeeafa6dbf" translate="yes" xml:space="preserve">
          <source>Use scientific notation for floating point numbers.</source>
          <target state="translated">Use scientific notation for floating point numbers.</target>
        </trans-unit>
        <trans-unit id="fb1c7b08aac7bf132e2b74d47f173de95ec56738" translate="yes" xml:space="preserve">
          <source>Use shortest representation (either scientific or standard) for floating point numbers.</source>
          <target state="translated">Use shortest representation (either scientific or standard) for floating point numbers.</target>
        </trans-unit>
        <trans-unit id="2803c460b5a731dcffb13c26e15791c3d843cb16" translate="yes" xml:space="preserve">
          <source>Use the adjoint of A in the matrix multiply.</source>
          <target state="translated">Use the adjoint of A in the matrix multiply.</target>
        </trans-unit>
        <trans-unit id="131256c92e68722cd8c1007ea02d50d0025759b1" translate="yes" xml:space="preserve">
          <source>Use the adjoint of B in the matrix multiply.</source>
          <target state="translated">Use the adjoint of B in the matrix multiply.</target>
        </trans-unit>
        <trans-unit id="131246813af1e1114d3a6adbf76cd523de207d02" translate="yes" xml:space="preserve">
          <source>Use these methods when you know the data type and the number of dimensions of the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; and you want an &lt;code&gt;Eigen::Tensor&lt;/code&gt; automatically sized to the &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; sizes. The implementation check fails if either type or sizes mismatch.</source>
          <target state="translated">Use these methods when you know the data type and the number of dimensions of the &lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt; and you want an &lt;code&gt;Eigen::Tensor&lt;/code&gt; automatically sized to the &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor&quot;&gt;Tensor&lt;/a&gt;&lt;/code&gt; sizes. The implementation check fails if either type or sizes mismatch.</target>
        </trans-unit>
        <trans-unit id="acd5926040a6fabf60768430cb930c4f27364457" translate="yes" xml:space="preserve">
          <source>UseCudnnOnGpu</source>
          <target state="translated">UseCudnnOnGpu</target>
        </trans-unit>
        <trans-unit id="105bcf0d0692f8873cade9c05512d70d1afa61b4" translate="yes" xml:space="preserve">
          <source>UseImageIfNoBoundingBoxes</source>
          <target state="translated">UseImageIfNoBoundingBoxes</target>
        </trans-unit>
        <trans-unit id="9f99e7e57b411f98714da56fb9cb93431648eea9" translate="yes" xml:space="preserve">
          <source>UseLocking</source>
          <target state="translated">UseLocking</target>
        </trans-unit>
        <trans-unit id="b56676a1739db49b1565a01431ab269013ee8763" translate="yes" xml:space="preserve">
          <source>UseNesterov</source>
          <target state="translated">UseNesterov</target>
        </trans-unit>
        <trans-unit id="ff8f78cf0e01efff82fd36c64b66e12422c2436b" translate="yes" xml:space="preserve">
          <source>UseQuoteDelim</source>
          <target state="translated">UseQuoteDelim</target>
        </trans-unit>
        <trans-unit id="217322c88ee60833bdac295afec301ba9bb4452a" translate="yes" xml:space="preserve">
          <source>Used to validate the shapes of &lt;a href=&quot;../../../../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements. If this shape is not fully specified, concatenating zero-size TensorArrays is an error.</source>
          <target state="translated">Used to validate the shapes of &lt;a href=&quot;../../../../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements. If this shape is not fully specified, concatenating zero-size TensorArrays is an error.</target>
        </trans-unit>
        <trans-unit id="8902a38b052ac44fb279b700bb265661deceb304" translate="yes" xml:space="preserve">
          <source>Used to validate the shapes of &lt;a href=&quot;../../../../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements. If this shape is not fully specified, gathering zero-size TensorArrays is an error.</source>
          <target state="translated">Used to validate the shapes of &lt;a href=&quot;../../../../class/tensorflow/ops/tensor-array#classtensorflow_1_1ops_1_1_tensor_array&quot;&gt;TensorArray&lt;/a&gt; elements. If this shape is not fully specified, gathering zero-size TensorArrays is an error.</target>
        </trans-unit>
        <trans-unit id="2c162068f6d2673c0d1e37e670b21e118d35909f" translate="yes" xml:space="preserve">
          <source>Useful special cases:</source>
          <target state="translated">유용한 특수 사례 :</target>
        </trans-unit>
        <trans-unit id="86728be2b42e74e786234ac723507c198f7ed10a" translate="yes" xml:space="preserve">
          <source>User Ops</source>
          <target state="translated">User Ops</target>
        </trans-unit>
        <trans-unit id="d20dbcb46ee02b7a4f4e5d587e878e10f0fafe9d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1aacce92855f6b83eea728203de8016c78&quot;&gt;scalar()&lt;/a&gt;&lt;/code&gt; allows the compiler to perform optimizations as the size of the tensor is known at compile time.</source>
          <target state="translated">Using &lt;code&gt;&lt;a href=&quot;tensor#classtensorflow_1_1_tensor_1aacce92855f6b83eea728203de8016c78&quot;&gt;scalar()&lt;/a&gt;&lt;/code&gt; allows the compiler to perform optimizations as the size of the tensor is known at compile time.</target>
        </trans-unit>
        <trans-unit id="159ac66854831fd41477c6614f26e3ff55888f88" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; with same shape as &lt;code&gt;input&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 과 같은 모양의 &lt;code&gt;pos&lt;/code&gt; 및 &lt;code&gt;len&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="428caf1d7c9ecf07e9140ac1b18e8066ccd91af0" translate="yes" xml:space="preserve">
          <source>Using a bitcast is useful for move and copy operations. NOTE: this is the same as &lt;code&gt;tensor()&lt;/code&gt; except a bitcast is allowed.</source>
          <target state="translated">Using a bitcast is useful for move and copy operations. NOTE: this is the same as &lt;code&gt;tensor()&lt;/code&gt; except a bitcast is allowed.</target>
        </trans-unit>
        <trans-unit id="55651e50ecf85dcbe3d56d47542dce84b705f325" translate="yes" xml:space="preserve">
          <source>Using a bitcast is useful for move and copy operations. The allowed bitcast is the only difference from &lt;code&gt;shaped()&lt;/code&gt;.</source>
          <target state="translated">Using a bitcast is useful for move and copy operations. The allowed bitcast is the only difference from &lt;code&gt;shaped()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45c1897ccbe225e4b4bb0b5776304a91ccc424dd" translate="yes" xml:space="preserve">
          <source>Using scalar &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt;:</source>
          <target state="translated">스칼라 &lt;code&gt;pos&lt;/code&gt; 및 &lt;code&gt;len&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="35518c8805a079add4f049afa6e4dddd224a6729" translate="yes" xml:space="preserve">
          <source>V2 format specific: merges the metadata files of sharded checkpoints.</source>
          <target state="translated">V2 format specific: merges the metadata files of sharded checkpoints.</target>
        </trans-unit>
        <trans-unit id="fe2c3931a426b1fc27bfd070622c654a3eeb5d9a" translate="yes" xml:space="preserve">
          <source>ValidateIndices</source>
          <target state="translated">ValidateIndices</target>
        </trans-unit>
        <trans-unit id="909f22a5b297b511afd65f3b37f14888ef6a77a1" translate="yes" xml:space="preserve">
          <source>ValidateShape</source>
          <target state="translated">ValidateShape</target>
        </trans-unit>
        <trans-unit id="c8135245dd023c2e4f7434ae0f55cba75c7acbdb" translate="yes" xml:space="preserve">
          <source>Value used for extrapolation, when applicable.</source>
          <target state="translated">Value used for extrapolation, when applicable.</target>
        </trans-unit>
        <trans-unit id="8d7ed4b00c373ad508c05214223e0bc9686b078f" translate="yes" xml:space="preserve">
          <source>Values are merged in order, so if an index appears in both &lt;code&gt;indices[m][i]&lt;/code&gt; and &lt;code&gt;indices[n][j]&lt;/code&gt; for &lt;code&gt;(m,i) &amp;lt; (n,j)&lt;/code&gt; the slice &lt;code&gt;data[n][j]&lt;/code&gt; will appear in the merged result. If you do not need this guarantee, &lt;a href=&quot;parallel-dynamic-stitch#classtensorflow_1_1ops_1_1_parallel_dynamic_stitch&quot;&gt;ParallelDynamicStitch&lt;/a&gt; might perform better on some devices.</source>
          <target state="translated">Values are merged in order, so if an index appears in both &lt;code&gt;indices[m][i]&lt;/code&gt; and &lt;code&gt;indices[n][j]&lt;/code&gt; for &lt;code&gt;(m,i) &amp;lt; (n,j)&lt;/code&gt; the slice &lt;code&gt;data[n][j]&lt;/code&gt; will appear in the merged result. If you do not need this guarantee, &lt;a href=&quot;parallel-dynamic-stitch#classtensorflow_1_1ops_1_1_parallel_dynamic_stitch&quot;&gt;ParallelDynamicStitch&lt;/a&gt; might perform better on some devices.</target>
        </trans-unit>
        <trans-unit id="ee2d365c74f97141598697d434a691d20762875a" translate="yes" xml:space="preserve">
          <source>Values in &lt;code&gt;arr&lt;/code&gt; outside of the range [0, size) are ignored.</source>
          <target state="translated">Values in &lt;code&gt;arr&lt;/code&gt; outside of the range [0, size) are ignored.</target>
        </trans-unit>
        <trans-unit id="eb7eb6c254a6439552e5ab83ee6d434fd0c29e71" translate="yes" xml:space="preserve">
          <source>Values may be merged in parallel, so if an index appears in both &lt;code&gt;indices[m][i]&lt;/code&gt; and &lt;code&gt;indices[n][j]&lt;/code&gt;, the result may be invalid. This differs from the normal &lt;a href=&quot;dynamic-stitch#classtensorflow_1_1ops_1_1_dynamic_stitch&quot;&gt;DynamicStitch&lt;/a&gt; operator that defines the behavior in that case.</source>
          <target state="translated">Values may be merged in parallel, so if an index appears in both &lt;code&gt;indices[m][i]&lt;/code&gt; and &lt;code&gt;indices[n][j]&lt;/code&gt; , the result may be invalid. This differs from the normal &lt;a href=&quot;dynamic-stitch#classtensorflow_1_1ops_1_1_dynamic_stitch&quot;&gt;DynamicStitch&lt;/a&gt; operator that defines the behavior in that case.</target>
        </trans-unit>
        <trans-unit id="f123f793dd439ad762f7c51e88cad426181d7814" translate="yes" xml:space="preserve">
          <source>VarName</source>
          <target state="translated">VarName</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="fad16e163b18a5adad4a6b1f9bafad182b1fc5e8" translate="yes" xml:space="preserve">
          <source>Variable-size shapes are allowed by setting the corresponding shape dimensions to 0 in the shape attr. In this case DequeueMany will pad up to the maximum size of any given element in the minibatch. See below for details.</source>
          <target state="translated">Variable-size shapes are allowed by setting the corresponding shape dimensions to 0 in the shape attr. In this case DequeueMany will pad up to the maximum size of any given element in the minibatch. See below for details.</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="7094f6d47c79609b8cf66b648535163e5de6d649" translate="yes" xml:space="preserve">
          <source>VarianceEpsilon</source>
          <target state="translated">VarianceEpsilon</target>
        </trans-unit>
        <trans-unit id="c6b8ee05595b393b4447bdb1d9ccd6ff810db79d" translate="yes" xml:space="preserve">
          <source>Vertical pixels per density unit.</source>
          <target state="translated">Vertical pixels per density unit.</target>
        </trans-unit>
        <trans-unit id="5aeb287355532e04a234861dad954502f7212004" translate="yes" xml:space="preserve">
          <source>VocabFile</source>
          <target state="translated">VocabFile</target>
        </trans-unit>
        <trans-unit id="3a1d862b022cc62e0ff8f5223761eb4453350eb3" translate="yes" xml:space="preserve">
          <source>WaitForIncomplete</source>
          <target state="translated">WaitForIncomplete</target>
        </trans-unit>
        <trans-unit id="ee86e3990a38d113aeda3e686a64aed6a6c21a17" translate="yes" xml:space="preserve">
          <source>We specify the size-related attributes as:</source>
          <target state="translated">크기 관련 속성을 다음과 같이 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c1e896bf769945f02ba4270d6713548acfff861f" translate="yes" xml:space="preserve">
          <source>Web-safe means that the encoder uses - and _ instead of + and /.</source>
          <target state="translated">웹 안전은 인코더가 + 및 / 대신-및 _를 사용함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3d953c462a78770490b4f8a5897afa73662afd7f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;x &amp;lt; 0&lt;/code&gt; xor &lt;code&gt;y &amp;lt; 0&lt;/code&gt; is</source>
          <target state="translated">When &lt;code&gt;x &amp;lt; 0&lt;/code&gt; xor &lt;code&gt;y &amp;lt; 0&lt;/code&gt; is</target>
        </trans-unit>
        <trans-unit id="13d3fbe26af35daa9bb0d8a47a6e4b1e39a6da13" translate="yes" xml:space="preserve">
          <source>When building ops to compute gradients, the TensorFlow gradient system will return an error when trying to lookup the gradient of this op, because no gradient must ever be registered for this function. This op exists to prevent subtle bugs from silently returning unimplemented gradients in some corner cases.</source>
          <target state="translated">When building ops to compute gradients, the TensorFlow gradient system will return an error when trying to lookup the gradient of this op, because no gradient must ever be registered for this function. This op exists to prevent subtle bugs from silently returning unimplemented gradients in some corner cases.</target>
        </trans-unit>
        <trans-unit id="933ca78b0f0aab236f7c30d0b7d8200f4284ead1" translate="yes" xml:space="preserve">
          <source>When doing broadcasted operations such as multiplying a tensor by a scalar, broadcasting (usually) confers some time or space benefit, as the broadcasted tensor is never materialized.</source>
          <target state="translated">When doing broadcasted operations such as multiplying a tensor by a scalar, broadcasting (usually) confers some time or space benefit, as the broadcasted tensor is never materialized.</target>
        </trans-unit>
        <trans-unit id="bac64cb9d33552a3e872e7c5fb90f9f381853ebe" translate="yes" xml:space="preserve">
          <source>When doing log-odds NCE, the result of this op should be passed through a SparseToDense op, then added to the logits of the sampled candidates. This has the effect of 'removing' the sampled labels that match the true labels by making the classifier sure that they are sampled labels.</source>
          <target state="translated">When doing log-odds NCE, the result of this op should be passed through a SparseToDense op, then added to the logits of the sampled candidates. This has the effect of 'removing' the sampled labels that match the true labels by making the classifier sure that they are sampled labels.</target>
        </trans-unit>
        <trans-unit id="f4e19c79dfb2ba307013a448936b4d81569267d0" translate="yes" xml:space="preserve">
          <source>When executed in a graph, this op outputs its input tensor as-is.</source>
          <target state="translated">그래프에서 실행될 때이 op는 입력 텐서를 그대로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="804a4081fa0150c23f0874e51744c2d16c4bc0d6" translate="yes" xml:space="preserve">
          <source>When fed with an N-dimensional tensor, this method returns a tensor with N-1 dimensions, where the returned tensor is a subslice of the input tensor along the first dimension. The N-1 dimensions of the returned tensor are the last N-1 dimensions of the input tensor.</source>
          <target state="translated">When fed with an N-dimensional tensor, this method returns a tensor with N-1 dimensions, where the returned tensor is a subslice of the input tensor along the first dimension. The N-1 dimensions of the returned tensor are the last N-1 dimensions of the input tensor.</target>
        </trans-unit>
        <trans-unit id="5daba03f6deb76abbd325d7e2dabcd4dcf7b3fac" translate="yes" xml:space="preserve">
          <source>When formatting the tensor summaries print the first and last summarize entries of each tensor dimension.</source>
          <target state="translated">When formatting the tensor summaries print the first and last summarize entries of each tensor dimension.</target>
        </trans-unit>
        <trans-unit id="4cd96e8d064773862a00f08fa46097675a613f49" translate="yes" xml:space="preserve">
          <source>When run, reports an &lt;code&gt;InvalidArgument&lt;/code&gt; error if &lt;code&gt;tensor&lt;/code&gt; has any values that are not a number (NaN) or infinity (Inf). Otherwise, passes &lt;code&gt;tensor&lt;/code&gt; as-is.</source>
          <target state="translated">실행시 &lt;code&gt;tensor&lt;/code&gt; 에 숫자 (NaN) 또는 무한대 (Inf)가 아닌 값이 있으면 &lt;code&gt;InvalidArgument&lt;/code&gt; 오류 가보고됩니다. 그렇지 않으면 &lt;code&gt;tensor&lt;/code&gt; 그대로 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="4e648c1b2def4c8457d8cf5c11195103cc5f3da1" translate="yes" xml:space="preserve">
          <source>When set to True, a fixed pooling region will be used when iterating over a &lt;a href=&quot;../../../../class/tensorflow/ops/fractional-avg-pool#classtensorflow_1_1ops_1_1_fractional_avg_pool&quot;&gt;FractionalAvgPool&lt;/a&gt; node in the computation graph.</source>
          <target state="translated">When set to True, a fixed pooling region will be used when iterating over a &lt;a href=&quot;../../../../class/tensorflow/ops/fractional-avg-pool#classtensorflow_1_1ops_1_1_fractional_avg_pool&quot;&gt;FractionalAvgPool&lt;/a&gt; node in the computation graph.</target>
        </trans-unit>
        <trans-unit id="72ad33dcd4341128a95fd851cebeccf022efa2d5" translate="yes" xml:space="preserve">
          <source>When set to True, a fixed pooling region will be used when iterating over a &lt;a href=&quot;../../../../class/tensorflow/ops/fractional-max-pool#classtensorflow_1_1ops_1_1_fractional_max_pool&quot;&gt;FractionalMaxPool&lt;/a&gt; node in the computation graph.</source>
          <target state="translated">When set to True, a fixed pooling region will be used when iterating over a &lt;a href=&quot;../../../../class/tensorflow/ops/fractional-max-pool#classtensorflow_1_1ops_1_1_fractional_max_pool&quot;&gt;FractionalMaxPool&lt;/a&gt; node in the computation graph.</target>
        </trans-unit>
        <trans-unit id="67f73b290a4d1a9bb8b534b4343d1d8a9539086d" translate="yes" xml:space="preserve">
          <source>When set to True, find the nth-largest value in the vector and vice versa.</source>
          <target state="translated">When set to True, find the nth-largest value in the vector and vice versa.</target>
        </trans-unit>
        <trans-unit id="b60e5bab6717cc251366ad8328c3105b677f9671" translate="yes" xml:space="preserve">
          <source>When set to True, generates the pooling sequence in a pseudorandom fashion, otherwise, in a random fashion.</source>
          <target state="translated">When set to True, generates the pooling sequence in a pseudorandom fashion, otherwise, in a random fashion.</target>
        </trans-unit>
        <trans-unit id="7ac02c5dfe36217b096cba5baf807ecd799032af" translate="yes" xml:space="preserve">
          <source>When set to True, it means when pooling, the values at the boundary of adjacent pooling cells are used by both cells.</source>
          <target state="translated">When set to True, it means when pooling, the values at the boundary of adjacent pooling cells are used by both cells.</target>
        </trans-unit>
        <trans-unit id="62b085231fa47179e1be16442d315153db83ffe4" translate="yes" xml:space="preserve">
          <source>When the Op is run, it reports an &lt;code&gt;InvalidArgument&lt;/code&gt; error if multiple values in the summaries to merge use the same tag.</source>
          <target state="translated">Op가 실행될 때 병합 할 요약의 여러 값이 동일한 태그를 사용하는 경우 &lt;code&gt;InvalidArgument&lt;/code&gt; 오류를 보고합니다 .</target>
        </trans-unit>
        <trans-unit id="525f61b6729229b1a8854a9e50bcaa52ea96b131" translate="yes" xml:space="preserve">
          <source>Where</source>
          <target state="translated">Where</target>
        </trans-unit>
        <trans-unit id="860b396142dd64c82a8a2aa0beafb08efd7ae428" translate="yes" xml:space="preserve">
          <source>Where3</source>
          <target state="translated">Where3</target>
        </trans-unit>
        <trans-unit id="fd5d916594b3e6a2033d8ec7947186b1a39af076" translate="yes" xml:space="preserve">
          <source>Whereas in &lt;code&gt;tf.gather&lt;/code&gt;&lt;code&gt;indices&lt;/code&gt; defines slices into the &lt;code&gt;axis&lt;/code&gt; dimension of &lt;code&gt;params&lt;/code&gt;, in &lt;code&gt;tf.gather_nd&lt;/code&gt;, &lt;code&gt;indices&lt;/code&gt; defines slices into the first &lt;code&gt;N&lt;/code&gt; dimensions of &lt;code&gt;params&lt;/code&gt;, where &lt;code&gt;N = indices.shape[-1]&lt;/code&gt;.</source>
          <target state="translated">Whereas in &lt;code&gt;tf.gather&lt;/code&gt; &lt;code&gt;indices&lt;/code&gt; defines slices into the &lt;code&gt;axis&lt;/code&gt; dimension of &lt;code&gt;params&lt;/code&gt; , in &lt;code&gt;tf.gather_nd&lt;/code&gt; , &lt;code&gt;indices&lt;/code&gt; defines slices into the first &lt;code&gt;N&lt;/code&gt; dimensions of &lt;code&gt;params&lt;/code&gt; , where &lt;code&gt;N = indices.shape[-1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a9076ce25ec66e0937b339c0ce0efa7ff4590b" translate="yes" xml:space="preserve">
          <source>Whether the input &lt;code&gt;bytes&lt;/code&gt; are in little-endian order.</source>
          <target state="translated">Whether the input &lt;code&gt;bytes&lt;/code&gt; are in little-endian order.</target>
        </trans-unit>
        <trans-unit id="beb5985d61e16403e315ab6347d3a107e2a89857" translate="yes" xml:space="preserve">
          <source>Whether the input &lt;code&gt;input_bytes&lt;/code&gt; is in little-endian order.</source>
          <target state="translated">Whether the input &lt;code&gt;input_bytes&lt;/code&gt; is in little-endian order.</target>
        </trans-unit>
        <trans-unit id="e464702564a803f513408c70d97d888a2b68e437" translate="yes" xml:space="preserve">
          <source>Whether the quantization is signed or unsigned.</source>
          <target state="translated">Whether the quantization is signed or unsigned.</target>
        </trans-unit>
        <trans-unit id="5d8eb6c2e7582dc49a99868a0bf50f4e64b30583" translate="yes" xml:space="preserve">
          <source>Whether the range is given or should be determined from the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="translated">Whether the range is given or should be determined from the &lt;code&gt;input&lt;/code&gt; tensor.</target>
        </trans-unit>
        <trans-unit id="2859301fb5a172c104f48531e077695bc463e45a" translate="yes" xml:space="preserve">
          <source>Whether this &lt;a href=&quot;tensor-buffer#classtensorflow_1_1_tensor_buffer&quot;&gt;TensorBuffer&lt;/a&gt; owns the underlying memory.</source>
          <target state="translated">Whether this &lt;a href=&quot;tensor-buffer#classtensorflow_1_1_tensor_buffer&quot;&gt;TensorBuffer&lt;/a&gt; owns the underlying memory.</target>
        </trans-unit>
        <trans-unit id="1293467a9bdbb992fa3ecf3da8ee05470e54b052" translate="yes" xml:space="preserve">
          <source>Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="translated">Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="866dcca2132c0070606051646d9ad9aef4826cfd" translate="yes" xml:space="preserve">
          <source>Whether to quantize into 2^num_bits - 1 distinct values.</source>
          <target state="translated">Whether to quantize into 2^num_bits - 1 distinct values.</target>
        </trans-unit>
        <trans-unit id="b7a54dfcad313bcbdbef4e0dcbfc84db1a050335" translate="yes" xml:space="preserve">
          <source>Whether to replace the C0 control characters (00-1F) with the &lt;code&gt;replacement_char&lt;/code&gt;.</source>
          <target state="translated">Whether to replace the C0 control characters (00-1F) with the &lt;code&gt;replacement_char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d21e39cec1dbe57a37b90b0658bf80c4c7b4e18" translate="yes" xml:space="preserve">
          <source>WholeFileReader</source>
          <target state="translated">WholeFileReader</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="6e81584ed61357b1b186fac5166f41cac4e1e993" translate="yes" xml:space="preserve">
          <source>Will be printed in the error when anyone tries to differentiate this operation.</source>
          <target state="translated">Will be printed in the error when anyone tries to differentiate this operation.</target>
        </trans-unit>
        <trans-unit id="4ba78cccf43ec749a3b3f63b99ca41d71764e130" translate="yes" xml:space="preserve">
          <source>Will dequeue from the input queue if necessary (e.g. when the Reader needs to start reading from a new file since it has finished with the previous file).</source>
          <target state="translated">Will dequeue from the input queue if necessary (e.g. when the Reader needs to start reading from a new file since it has finished with the previous file).</target>
        </trans-unit>
        <trans-unit id="f6ac5cb110e37a221155d9f3ad0cb5d4f454d263" translate="yes" xml:space="preserve">
          <source>Will dequeue from the input queue if necessary (e.g. when the Reader needs to start reading from a new file since it has finished with the previous file). It may return less than &lt;code&gt;num_records&lt;/code&gt; even before the last batch.</source>
          <target state="translated">Will dequeue from the input queue if necessary (e.g. when the Reader needs to start reading from a new file since it has finished with the previous file). It may return less than &lt;code&gt;num_records&lt;/code&gt; even before the last batch.</target>
        </trans-unit>
        <trans-unit id="09bc19d3f211899e88643ba760643900cffe54d6" translate="yes" xml:space="preserve">
          <source>With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</source>
          <target state="translated">With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</target>
        </trans-unit>
        <trans-unit id="d54a46077e771fd5b7a2f24bf2f9d1b0297c6436" translate="yes" xml:space="preserve">
          <source>With the default format &quot;NHWC&quot;, the bias tensor will be added to the last dimension of the value tensor. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. The tensor will be added to &quot;in_channels&quot;, the third-to-the-last dimension.</source>
          <target state="translated">With the default format &quot;NHWC&quot;, the bias tensor will be added to the last dimension of the value tensor. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. The tensor will be added to &quot;in_channels&quot;, the third-to-the-last dimension.</target>
        </trans-unit>
        <trans-unit id="222f2eaf7f4eb7f05c2ded9601c1e638b778f12c" translate="yes" xml:space="preserve">
          <source>With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, height, width, channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, channels, height, width].</source>
          <target state="translated">With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, height, width, channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, channels, height, width].</target>
        </trans-unit>
        <trans-unit id="da49e3f9bc902f25d08e312a7a89579599dec8a2" translate="yes" xml:space="preserve">
          <source>With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width].</source>
          <target state="translated">With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width].</target>
        </trans-unit>
        <trans-unit id="82b9a53d69b82a2a37f69b6e30ff185de60c58cd" translate="yes" xml:space="preserve">
          <source>WithAssignedDevice</source>
          <target state="translated">WithAssignedDevice</target>
        </trans-unit>
        <trans-unit id="9e525d096346f900ba213096f2bdcb680c0ef7f0" translate="yes" xml:space="preserve">
          <source>WithControlDependencies</source>
          <target state="translated">WithControlDependencies</target>
        </trans-unit>
        <trans-unit id="9cfc54d193a12e44b756e0b6dfe41911c29ec854" translate="yes" xml:space="preserve">
          <source>WithDevice</source>
          <target state="translated">WithDevice</target>
        </trans-unit>
        <trans-unit id="80f46d996958b068c2a97961c762eae7b2a71e35" translate="yes" xml:space="preserve">
          <source>WithKernelLabel</source>
          <target state="translated">WithKernelLabel</target>
        </trans-unit>
        <trans-unit id="b8b089baa798ebcc39e3d7614ada3f0abe7027be" translate="yes" xml:space="preserve">
          <source>WithNoControlDependencies</source>
          <target state="translated">WithNoControlDependencies</target>
        </trans-unit>
        <trans-unit id="e9c4846330076709ced8de688824de5c93d43703" translate="yes" xml:space="preserve">
          <source>WithOpName</source>
          <target state="translated">WithOpName</target>
        </trans-unit>
        <trans-unit id="4ef6b4b78c67c10b6c2930bae994867f46258ff4" translate="yes" xml:space="preserve">
          <source>WithXlaCluster</source>
          <target state="translated">WithXlaCluster</target>
        </trans-unit>
        <trans-unit id="61f330bc93ccdaf24823ff722556ec64642374a9" translate="yes" xml:space="preserve">
          <source>Write data via Write and read via Read or Pack.</source>
          <target state="translated">Write data via Write and read via Read or Pack.</target>
        </trans-unit>
        <trans-unit id="94dee2fafe1d10d5ce6db659eb0c0fcb3d5842be" translate="yes" xml:space="preserve">
          <source>WriteFile</source>
          <target state="translated">WriteFile</target>
        </trans-unit>
        <trans-unit id="5917eff56ebbf44f97d716d0f5d4fdea54e4adf7" translate="yes" xml:space="preserve">
          <source>Writes contents to the file at input filename.</source>
          <target state="translated">Writes contents to the file at input filename.</target>
        </trans-unit>
        <trans-unit id="225167a2fb172450537341f8873e3d0096b10438" translate="yes" xml:space="preserve">
          <source>XDensity</source>
          <target state="translated">XDensity</target>
        </trans-unit>
        <trans-unit id="1b60eef1486f042121cb1abb403bfa5983083402" translate="yes" xml:space="preserve">
          <source>Xdivy</source>
          <target state="translated">Xdivy</target>
        </trans-unit>
        <trans-unit id="9ed9396da589e127b120b5abc619086b34774295" translate="yes" xml:space="preserve">
          <source>Xlog1py</source>
          <target state="translated">Xlog1py</target>
        </trans-unit>
        <trans-unit id="12f9191163bb7e9e63172afc062b7b9642ca43a1" translate="yes" xml:space="preserve">
          <source>Xlogy</source>
          <target state="translated">Xlogy</target>
        </trans-unit>
        <trans-unit id="685acf65a57578fce2c9989212b29eea5d3925e8" translate="yes" xml:space="preserve">
          <source>XmpMetadata</source>
          <target state="translated">XmpMetadata</target>
        </trans-unit>
        <trans-unit id="0ec3e3ce0c4f58ff3652262c49fb7718ac8a2aa0" translate="yes" xml:space="preserve">
          <source>YDensity</source>
          <target state="translated">YDensity</target>
        </trans-unit>
        <trans-unit id="558865a16feb9f751b8bcebf46a954afbeba0b24" translate="yes" xml:space="preserve">
          <source>YouTube</source>
          <target state="translated">YouTube</target>
        </trans-unit>
        <trans-unit id="4d36ebc164878eb0250ad6fbc3f90d46f066decf" translate="yes" xml:space="preserve">
          <source>Zero-element Tensors are always considered initialized, even if they have never been assigned to and do not have any memory allocated.</source>
          <target state="translated">Zero-element Tensors are always considered initialized, even if they have never been assigned to and do not have any memory allocated.</target>
        </trans-unit>
        <trans-unit id="dfee31bddce3aa2ae0eb9ab0a81354d098ee985f" translate="yes" xml:space="preserve">
          <source>ZerosLike</source>
          <target state="translated">ZerosLike</target>
        </trans-unit>
        <trans-unit id="d4dde75ca731d6afffc873406bc9b30fd639401e" translate="yes" xml:space="preserve">
          <source>Zeta</source>
          <target state="translated">Zeta</target>
        </trans-unit>
        <trans-unit id="690066f3139e111a254b9b22702420163ce9e6c3" translate="yes" xml:space="preserve">
          <source>[-128, 127] for signed, num_bits = 8, or</source>
          <target state="translated">[-128, 127] for signed, num_bits = 8, or</target>
        </trans-unit>
        <trans-unit id="7f0f7b84b517d1011bde2787a1af440ee2991478" translate="yes" xml:space="preserve">
          <source>[0, 255] for unsigned, num_bits = 8.</source>
          <target state="translated">[0, 255] for unsigned, num_bits = 8.</target>
        </trans-unit>
        <trans-unit id="d8a02b4024d1f91043f88e51a21c86cf6a2b1f8b" translate="yes" xml:space="preserve">
          <source>[input_min, input_max] are scalar floats that specify the range for the float interpretation of the 'input' data. For example, if input_min is -1.0f and input_max is 1.0f, and we are dealing with quint16 quantized data, then a 0 value in the 16-bit data should be interpreted as -1.0f, and a 65535 means 1.0f.</source>
          <target state="translated">[input_min, input_max] are scalar floats that specify the range for the float interpretation of the 'input' data. For example, if input_min is -1.0f and input_max is 1.0f, and we are dealing with quint16 quantized data, then a 0 value in the 16-bit data should be interpreted as -1.0f, and a 65535 means 1.0f.</target>
        </trans-unit>
        <trans-unit id="143b12af78e15f28dfa0f3a68b2560666f6d5995" translate="yes" xml:space="preserve">
          <source>[min_range, max_range] are scalar floats that specify the range for the 'input' data. The 'mode' attribute controls exactly which calculations are used to convert the float values to their quantized equivalents. The 'round_mode' attribute controls which rounding tie-breaking algorithm is used when rounding float values to their quantized equivalents.</source>
          <target state="translated">[min_range, max_range]는 '입력'데이터의 범위를 지정하는 스칼라 부동 소수점입니다. 'mode'속성은 부동 소수점 값을 양자화 된 등가로 변환하는 데 사용되는 계산을 정확하게 제어합니다. 'round_mode'속성은 부동 소수점 값을 양자화 된 동등 값으로 반올림 할 때 사용할 반올림 타이 브레이킹 알고리즘을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1fa2da75f60f4f3a22685794db19c7508c0c1baa" translate="yes" xml:space="preserve">
          <source>[min_range, max_range] are scalar floats that specify the range for the output. The 'mode' attribute controls exactly which calculations are used to convert the float values to their quantized equivalents.</source>
          <target state="translated">[min_range, max_range]는 출력 범위를 지정하는 스칼라 부동 소수점입니다. 'mode'속성은 부동 소수점 값을 양자화 된 등가로 변환하는 데 사용되는 계산을 정확하게 제어합니다.</target>
        </trans-unit>
        <trans-unit id="26c7106ba748e7355bb888e1a80524ca395b176f" translate="yes" xml:space="preserve">
          <source>\((x, q) = {n=0}^{} (q + n)^{-x}\)</source>
          <target state="translated">\((x, q) = {n=0}^{} (q + n)^{-x}\)</target>
        </trans-unit>
        <trans-unit id="a94e91686c151abbee9c56f6ceccc47a2284a2a3" translate="yes" xml:space="preserve">
          <source>\(B(x; a, b) = ^x t^{a-1} (1 - t)^{b-1} dt\)</source>
          <target state="translated">\(B(x; a, b) = ^x t^{a-1} (1 - t)^{b-1} dt\)</target>
        </trans-unit>
        <trans-unit id="970db3511a505697e0ae977f7f1d0c3caf7a1622" translate="yes" xml:space="preserve">
          <source>\(Gamma(a, x) = int_{x}^{} t^{a-1} exp(-t) dt\)</source>
          <target state="translated">\(Gamma(a, x) = int_{x}^{} t^{a-1} exp(-t) dt\)</target>
        </trans-unit>
        <trans-unit id="9f728bcffd92b294e059db30e16fbe6a9a950049" translate="yes" xml:space="preserve">
          <source>\(I_x(a, b) = {B(x; a, b)}{B(a, b)}\)</source>
          <target state="translated">\(I_x(a, b) = {B(x; a, b)}{B(a, b)}\)</target>
        </trans-unit>
        <trans-unit id="9b977890dfd27609aefecb3c22cf9edc2b5b6c7c" translate="yes" xml:space="preserve">
          <source>\(P(a, x) = gamma(a, x) / Gamma(a) = 1 - Q(a, x)\)</source>
          <target state="translated">\ (P (a, x) = 감마 (a, x) / 감마 (a) = 1-Q (a, x) \)</target>
        </trans-unit>
        <trans-unit id="3c43fa9908d595b3f6dccdce0d125247c097b9f4" translate="yes" xml:space="preserve">
          <source>\(Q(a, x) = Gamma(a, x) / Gamma(a) = 1 - P(a, x)\)</source>
          <target state="translated">\ (Q (a, x) = 감마 (a, x) / 감마 (a) = 1-P (a, x) \)</target>
        </trans-unit>
        <trans-unit id="6e6f7e7706249f691ddec7d21161770a340b4323" translate="yes" xml:space="preserve">
          <source>\(^{(a)}(x) = {d^a}{dx^a} (x)\)</source>
          <target state="translated">\(^{(a)}(x) = {d^a}{dx^a} (x)\)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
