<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="030677f98287911c5db2c34495fc6bece1a43f9f" translate="yes" xml:space="preserve">
          <source>Adds an additional WHERE condition to the existing one but ignores &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;empty operands&lt;/a&gt;.</source>
          <target state="translated">기존 조건에 추가 WHERE 조건을 추가하지만 &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;빈 피연산자를&lt;/a&gt; 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="08d1f39a6586ad4bac4b9b63aa4e36c0d700007a" translate="yes" xml:space="preserve">
          <source>Adds an additional WHERE condition to the existing one ignoring empty parameters.</source>
          <target state="translated">빈 매개 변수를 무시하고 기존 조건에 추가 WHERE 조건을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b20872c436ba9e0ae97c7fba0713647c4fd331d8" translate="yes" xml:space="preserve">
          <source>Adds an additional WHERE condition to the existing one.</source>
          <target state="translated">기존 조건에 추가 WHERE 조건을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="596305fc18f84730dcc5d6ee64993008a14c154f" translate="yes" xml:space="preserve">
          <source>Adds an aggregation to this query. Supports nested aggregations.</source>
          <target state="translated">이 쿼리에 집계를 추가합니다. 중첩 집계를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8d64e876b9facc14161b5c28310668711ca5eae9" translate="yes" xml:space="preserve">
          <source>Adds an auth item to the RBAC system.</source>
          <target state="translated">인증 항목을 RBAC 시스템에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="16d34b588eeca056de1712413e6b0d628bd0f072" translate="yes" xml:space="preserve">
          <source>Adds an error about the specified attribute to the model object.</source>
          <target state="translated">지정된 속성에 대한 오류를 모델 객체에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e4bce4018aa46baca0bda6bc303192dc83187fb6" translate="yes" xml:space="preserve">
          <source>Adds an item as a child of another item.</source>
          <target state="translated">항목을 다른 항목의 자식으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="587c8b1b5839536c06c7b77767b61f727f423b49" translate="yes" xml:space="preserve">
          <source>Adds aria HTML attributes &lt;code&gt;aria-required&lt;/code&gt; and &lt;code&gt;aria-invalid&lt;/code&gt; for inputs</source>
          <target state="translated">입력에 &lt;code&gt;aria-invalid&lt;/code&gt; &lt;code&gt;aria-required&lt;/code&gt; 및 aria-invalid 인 aria HTML 속성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4668b72c2d33cbefa2e9f25cf6316082589793c8" translate="yes" xml:space="preserve">
          <source>Adds aria attributes to the input options</source>
          <target state="translated">입력 옵션에 aria 속성을 추가합니다</target>
        </trans-unit>
        <trans-unit id="41d3384d13c0444efbc25be257ee9b7924695ca4" translate="yes" xml:space="preserve">
          <source>Adds custom extensions</source>
          <target state="translated">맞춤 확장을 추가합니다</target>
        </trans-unit>
        <trans-unit id="cc00cc94307c3352c463328190930fd62321308c" translate="yes" xml:space="preserve">
          <source>Adds custom filters</source>
          <target state="translated">맞춤 필터 추가</target>
        </trans-unit>
        <trans-unit id="985ddad71f8837d0b6641f0caa74c216e7708a46" translate="yes" xml:space="preserve">
          <source>Adds custom functions</source>
          <target state="translated">사용자 정의 기능 추가</target>
        </trans-unit>
        <trans-unit id="09b3ae536b80d6723f253c68ecf0c50a82d5d9a3" translate="yes" xml:space="preserve">
          <source>Adds custom header value to the message.</source>
          <target state="translated">메시지에 사용자 정의 헤더 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5e3606bbd2d83138847a4300791fe1200cc681ed" translate="yes" xml:space="preserve">
          <source>Adds data fields to the existing ones.</source>
          <target state="translated">기존 필드에 데이터 필드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3c18b8c6104179802fda25ad5d58380ba03f2744" translate="yes" xml:space="preserve">
          <source>Adds data filtering rule.</source>
          <target state="translated">데이터 필터링 규칙을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="aba7f264261c7798706e81ac6af117eacc7ef24d" translate="yes" xml:space="preserve">
          <source>Adds default primary key to fields list if there's no primary key specified</source>
          <target state="translated">기본 키가 지정되지 않은 경우 기본 기본 키를 필드 목록에 추가합니다</target>
        </trans-unit>
        <trans-unit id="8d96e8564dbc9a9eab51a12ba54dd3bf489a65c7" translate="yes" xml:space="preserve">
          <source>Adds fallback paths to twig loader</source>
          <target state="translated">나뭇 가지 로더에 폴백 경로 추가</target>
        </trans-unit>
        <trans-unit id="32653041d9132c228fcf5f03e860f3c48067b1cc" translate="yes" xml:space="preserve">
          <source>Adds filtering condition for a given attribute</source>
          <target state="translated">주어진 속성에 대한 필터링 조건을 추가합니다</target>
        </trans-unit>
        <trans-unit id="ac5a48a8b0edf9772e7ef1c567b3b7a0b8b2640a" translate="yes" xml:space="preserve">
          <source>Adds global objects or static classes</source>
          <target state="translated">전역 객체 또는 정적 클래스를 추가합니다</target>
        </trans-unit>
        <trans-unit id="113c516d7867f496bf2fca3f60af9d0c809fed44" translate="yes" xml:space="preserve">
          <source>Adds informational links to the given PHP type/class.</source>
          <target state="translated">주어진 PHP 타입 / 클래스에 정보 링크를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bab3f667b0e410bbd06868e88adbf912cb051262" translate="yes" xml:space="preserve">
          <source>Adds inverse relations</source>
          <target state="translated">역관계를 추가합니다</target>
        </trans-unit>
        <trans-unit id="2d96e3bb0955324b6f4d95e2d1dd13cd7ecb81fb" translate="yes" xml:space="preserve">
          <source>Adds message signature.</source>
          <target state="translated">메시지 서명을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="12240f3923bcda41420c31517f32275c0228aa08" translate="yes" xml:space="preserve">
          <source>Adds more cookies to the already defined ones.</source>
          <target state="translated">이미 정의 된 쿠키에 더 많은 쿠키를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b8a0fd9ad99592867c433700e6a11b1ab6927630" translate="yes" xml:space="preserve">
          <source>Adds more headers to the already defined ones.</source>
          <target state="translated">이미 정의 된 헤더에 더 많은 헤더를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6d8864ce515aefba210e8438db1399c2c6e66d9a" translate="yes" xml:space="preserve">
          <source>Adds more options to already defined ones.</source>
          <target state="translated">이미 정의 된 옵션에 더 많은 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fc65e48237e094b6101c9348af942dd893cc0bf0" translate="yes" xml:space="preserve">
          <source>Adds more options, overwriting existing options.</source>
          <target state="translated">더 많은 옵션을 추가하여 기존 옵션을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="8b7c786e80f3adefd3803d1a62e635d978787148" translate="yes" xml:space="preserve">
          <source>Adds multiple key-value pairs to cache.</source>
          <target state="translated">여러 키-값 쌍을 캐시에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="87a52e8ee11922f2298aa18050d5a392645d6a12" translate="yes" xml:space="preserve">
          <source>Adds new migration entry to the history.</source>
          <target state="translated">기록에 새 마이그레이션 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2fb5e67c96a1c1d3d0fbff24475029676fbf3ae3" translate="yes" xml:space="preserve">
          <source>Adds or removes trailing slashes from $pathInfo depending on whether the $suffix has a trailing slash or not.</source>
          <target state="translated">$ suffix에 후행 슬래시가 있는지 여부에 따라 $ pathInfo에서 후행 슬래시를 추가하거나 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1da7d273d5ef2d437dc843ea12c0adb3eb798332" translate="yes" xml:space="preserve">
          <source>Adds order by condition to the query</source>
          <target state="translated">쿼리에 조건 별 순서를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d273c159dd3ee8237a9eda8579b6151a3d2362d9" translate="yes" xml:space="preserve">
          <source>Adds stream content to the upload.</source>
          <target state="translated">업로드에 스트림 컨텐츠를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="64c9de62a141f2e65ab50ba4862b39ec80c93832" translate="yes" xml:space="preserve">
          <source>Adds string content to the upload.</source>
          <target state="translated">업로드에 문자열 컨텐츠를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b0ee2e763c87c324105fde3ccdf90d9dc61cae69" translate="yes" xml:space="preserve">
          <source>Adds the CORS headers to the response</source>
          <target state="translated">응답에 CORS 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="02d0887dd0c0c82391c8a874c1a5c1286febbae9" translate="yes" xml:space="preserve">
          <source>Adds the cookie to the collection.</source>
          <target state="translated">쿠키를 컬렉션에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f0acaf448bf143e6f136d89ec89671119f6722b6" translate="yes" xml:space="preserve">
          <source>Adds the delete operation to the batch command.</source>
          <target state="translated">삭제 명령을 배치 명령에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9748ac699f9d596b51b5d9432b063c9162db807f" translate="yes" xml:space="preserve">
          <source>Adds the header to the collection.</source>
          <target state="translated">컬렉션에 헤더를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1883dd5d099de8d1baa4c494f626b046a05373c9" translate="yes" xml:space="preserve">
          <source>Adds the insert operation to the batch command.</source>
          <target state="translated">배치 명령에 삽입 조작을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0eb8fab3f46d2e62ea51b070de91263ec0b46e74" translate="yes" xml:space="preserve">
          <source>Adds the rate limit headers to the response</source>
          <target state="translated">응답에 속도 제한 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="f32ee6157b80f6a68b85959613dfbb80cc341667" translate="yes" xml:space="preserve">
          <source>Adds the specified CSS style to the HTML options.</source>
          <target state="translated">지정된 CSS 스타일을 HTML 옵션에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b47479e76dfd5e47efa2e7f9f4d2c8ae3cda2bf1" translate="yes" xml:space="preserve">
          <source>Adds the update operation to the batch command.</source>
          <target state="translated">배치 명령에 업데이트 작업을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0c0c3d5d338500d709cbdd5726b7fee0504716bb" translate="yes" xml:space="preserve">
          <source>Adds users providers to the faker generator.</source>
          <target state="translated">사용자 제공자를 위조 생성기에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0b52d83da9334a2356f424bafe7f8eaf37726ccf" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;@npm&lt;/code&gt; and &lt;code&gt;@bower&lt;/code&gt;&lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt; in you &lt;a href=&quot;guide-concept-configurations&quot;&gt;application configuration&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;guide-concept-configurations&quot;&gt;애플리케이션 구성&lt;/a&gt; 에서 &lt;code&gt;@npm&lt;/code&gt; 및 &lt;code&gt;@bower&lt;/code&gt; &lt;a href=&quot;guide-concept-aliases&quot;&gt;별명&lt;/a&gt; 을 조정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="228fee8a77bc147640914e4eecde5ed0bc88f343" translate="yes" xml:space="preserve">
          <source>Adjust dependencies between asset bundles in the way source bundles begin to depend on output ones.</source>
          <target state="translated">소스 번들이 출력 번들에 의존하기 시작하는 방식으로 자산 번들 간의 종속성을 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="34ed19187d22e487293a359ce5bad67a1f84f180" translate="yes" xml:space="preserve">
          <source>Adjust your web application config to use compressed assets.</source>
          <target state="translated">압축 된 자산을 사용하도록 웹 애플리케이션 구성을 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="175c32460d35260e403be68fb45b9a244ebcb13f" translate="yes" xml:space="preserve">
          <source>Adjusted CSS content.</source>
          <target state="translated">CSS 내용을 조정했습니다.</target>
        </trans-unit>
        <trans-unit id="51a21864f61ecf5a53aa0c29518733f62fbdaa36" translate="yes" xml:space="preserve">
          <source>Adjusts CSS content allowing URL references pointing to the original resources.</source>
          <target state="translated">원본 리소스를 가리키는 URL 참조를 허용하는 CSS 내용을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="9bc59ecb3d0f03d6a5356bb8e72e0dd2df18c891" translate="yes" xml:space="preserve">
          <source>Adjusts the &lt;code&gt;for&lt;/code&gt; attribute for the label based on the input options.</source>
          <target state="translated">입력 옵션을 기반으로 레이블 의 &lt;code&gt;for&lt;/code&gt; 속성을 조정합니다 .</target>
        </trans-unit>
        <trans-unit id="723bf15ca88237a7d6a9ddb1c32911bf71f08c18" translate="yes" xml:space="preserve">
          <source>Advanced Practical Usage</source>
          <target state="translated">고급 실용 사용법</target>
        </trans-unit>
        <trans-unit id="8076c88aa477d981f7c8b113beed824259bb7b2d" translate="yes" xml:space="preserve">
          <source>Advances the reader to the next result when reading the results of a batch of statements.</source>
          <target state="translated">일련의 문의 결과를 읽을 때 다음 결과로 독자를 발전시킵니다.</target>
        </trans-unit>
        <trans-unit id="8dc2e8b2a2640c1c3aaff675e536673bab69db12" translate="yes" xml:space="preserve">
          <source>Advances the reader to the next row in a result set.</source>
          <target state="translated">결과 집합에서 다음 행으로 리더를 진행시킵니다.</target>
        </trans-unit>
        <trans-unit id="591a1e2af3c5ecc1506fa39bf0caccdb50549923" translate="yes" xml:space="preserve">
          <source>After a user is authenticated, you probably want to check if he or she has the permission to perform the requested action for the requested resource. This process is called &lt;em&gt;authorization&lt;/em&gt; which is covered in detail in the &lt;a href=&quot;guide-security-authorization&quot;&gt;Authorization section&lt;/a&gt;.</source>
          <target state="translated">사용자가 인증 된 후에는 요청 된 자원에 대해 요청 된 조치를 수행 할 권한이 있는지 확인하려고합니다. 이 프로세스를 &lt;em&gt;권한 부여&lt;/em&gt; 라고하며 &lt;em&gt;권한 &lt;/em&gt;&lt;a href=&quot;guide-security-authorization&quot;&gt;부여 섹션&lt;/a&gt; 에 자세히 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="229f32355fd48565706076765527d6450ad6c475" translate="yes" xml:space="preserve">
          <source>After authentication is enabled as described above, for every API request, the requested controller will try to authenticate the user in its &lt;code&gt;beforeAction()&lt;/code&gt; step.</source>
          <target state="translated">위에서 설명한대로 인증이 활성화 된 후 모든 API 요청에 대해 요청 된 컨트롤러는 &lt;code&gt;beforeAction()&lt;/code&gt; 단계 에서 사용자 인증을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="13d3b1bd3c4dfee24ed756b12f920745b1208057" translate="yes" xml:space="preserve">
          <source>After calling this method, if &lt;a href=&quot;yii-data-basedataprovider#getModels()-detail&quot;&gt;getModels()&lt;/a&gt;, &lt;a href=&quot;yii-data-basedataprovider#getKeys()-detail&quot;&gt;getKeys()&lt;/a&gt; or &lt;a href=&quot;yii-data-basedataprovider#getTotalCount()-detail&quot;&gt;getTotalCount()&lt;/a&gt; is called again, they will re-execute the query and return the latest data available.</source>
          <target state="translated">이 메소드를 호출 한 후 &lt;a href=&quot;yii-data-basedataprovider#getModels()-detail&quot;&gt;getModels ()&lt;/a&gt; , &lt;a href=&quot;yii-data-basedataprovider#getKeys()-detail&quot;&gt;getKeys ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-data-basedataprovider#getTotalCount()-detail&quot;&gt;getTotalCount ()&lt;/a&gt; 가 다시 호출되면 쿼리가 다시 실행되고 사용 가능한 최신 데이터가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="625394fea2634d8f55e82d931c74e6570c58b0e3" translate="yes" xml:space="preserve">
          <source>After combining and compressing, we get one CSS file and one JavaScript file. Assume they are named as &lt;code&gt;all-xyz.css&lt;/code&gt; and &lt;code&gt;all-xyz.js&lt;/code&gt;, where &lt;code&gt;xyz&lt;/code&gt; stands for a timestamp or a hash that is used to make the file name unique to avoid HTTP caching problems.</source>
          <target state="translated">결합하고 압축하면 하나의 CSS 파일과 하나의 JavaScript 파일이 생성됩니다. 그것들의 이름이 &lt;code&gt;all-xyz.css&lt;/code&gt; 및 &lt;code&gt;all-xyz.js&lt;/code&gt; 라고 가정 하면 , &lt;code&gt;xyz&lt;/code&gt; 는 파일 이름을 고유하게 만들어 HTTP 캐싱 문제를 방지하는 데 사용되는 타임 스탬프 또는 해시를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c9adf5c0fee5e8094bf5259ffddef6a0b8c61061" translate="yes" xml:space="preserve">
          <source>After configuring Composer to support Bower and NPM:</source>
          <target state="translated">Bower 및 NPM을 지원하도록 Composer를 구성한 후 :</target>
        </trans-unit>
        <trans-unit id="7274437bd360b72dbe0e2dc484f56be531ae34cc" translate="yes" xml:space="preserve">
          <source>After creating the resource classes and specifying how resource data should be formatted, the next thing to do is to create controller actions to expose the resources to end users through RESTful APIs.</source>
          <target state="translated">자원 클래스를 작성하고 자원 데이터의 형식화 방법을 지정한 후 다음으로해야 할 일은 RESTful API를 통해 자원을 최종 사용자에게 노출시키는 제어기 조치를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="69039f6e8861ed9d5b92584daeb1eafa24ab947e" translate="yes" xml:space="preserve">
          <source>After declaring an Active Record class, you can use it to query data from the corresponding database table. The process usually takes the following three steps:</source>
          <target state="translated">Active Record 클래스를 선언 한 후이를 사용하여 해당 데이터베이스 테이블에서 데이터를 조회 할 수 있습니다. 이 프로세스는 일반적으로 다음 세 단계를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e388d7fff2f865f32bb09526e2f445d78ccad416" translate="yes" xml:space="preserve">
          <source>After declaring relations, you can access relational data through relation names. This is just like accessing an object &lt;a href=&quot;guide-concept-properties&quot;&gt;property&lt;/a&gt; defined by the relation method. For this reason, we call it &lt;em&gt;relation property&lt;/em&gt;. For example,</source>
          <target state="translated">관계를 선언 한 후 관계 이름을 통해 관계형 데이터에 액세스 할 수 있습니다. 이것은 관계 방법으로 정의 된 객체 &lt;a href=&quot;guide-concept-properties&quot;&gt;속성에&lt;/a&gt; 액세스하는 것과 같습니다 . 이러한 이유로 &lt;em&gt;관계 속성&lt;/em&gt; 이라고 부릅니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="f2bb9d31851053f2eac96fd902a45184437ad0e8" translate="yes" xml:space="preserve">
          <source>After executing the code &lt;code&gt;$array&lt;/code&gt; will contain &lt;code&gt;['options' =&amp;gt; [1, 2]]&lt;/code&gt; and &lt;code&gt;$type&lt;/code&gt; will be &lt;code&gt;A&lt;/code&gt;. Note that unlike &lt;code&gt;getValue&lt;/code&gt; method, &lt;code&gt;remove&lt;/code&gt; supports simple key names only.</source>
          <target state="translated">코드 실행 후 &lt;code&gt;$array&lt;/code&gt; 는 &lt;code&gt;['options' =&amp;gt; [1, 2]]&lt;/code&gt; 하고 &lt;code&gt;$type&lt;/code&gt; 은 &lt;code&gt;A&lt;/code&gt; 입니다. &lt;code&gt;getValue&lt;/code&gt; 메소드 와 달리 &lt;code&gt;remove&lt;/code&gt; 는 간단한 키 이름 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="df1c99cae36c4ee635a1fd6bc625ed90f6982bf4" translate="yes" xml:space="preserve">
          <source>After installation is done, either configure your web server (see next section) or use the &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.webserver.php&quot;&gt;built-in PHP web server&lt;/a&gt; by running the following console command while in the project &lt;code&gt;web&lt;/code&gt; directory:</source>
          <target state="translated">설치가 완료되면 웹 서버를 구성하거나 (다음 섹션 참조) 프로젝트 &lt;code&gt;web&lt;/code&gt; 디렉토리 에서 다음 콘솔 명령을 실행하여 &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.webserver.php&quot;&gt;내장 PHP 웹 서버&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="06bb1c6e31524add941808a5acc14e96b34b2a6c" translate="yes" xml:space="preserve">
          <source>After it's done the process is repeated again for another feature or improvement. If the existing feature is to be changed, tests should be changed as well.</source>
          <target state="translated">완료되면 다른 기능이나 개선을 위해 프로세스가 다시 반복됩니다. 기존 기능을 변경하려면 테스트도 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="20df5690488652862dca7e00443321e8bd99eb02" translate="yes" xml:space="preserve">
          <source>After logging in a user:</source>
          <target state="translated">사용자 로그인 후 :</target>
        </trans-unit>
        <trans-unit id="a7e9bd64fe457d3c7f20f6a58af59ef618b5848b" translate="yes" xml:space="preserve">
          <source>After sorting we'll get the following in &lt;code&gt;$data&lt;/code&gt;:</source>
          <target state="translated">정렬 한 후 &lt;code&gt;$data&lt;/code&gt; 다음이 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="81f3c6956052133c23206baf68ab314fb97534e7" translate="yes" xml:space="preserve">
          <source>After that you can use this UserView active record with search models, without additional specification of sorting and filtering attributes. All attributes will be working out of the box. Note that this approach has several pros and cons:</source>
          <target state="translated">그런 다음 정렬 및 필터링 속성에 대한 추가 스펙없이 검색 모델과 함께이 UserView 활성 레코드를 사용할 수 있습니다. 모든 속성이 기본적으로 작동합니다. 이 방법에는 몇 가지 장단점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9783b667b274572ce904b44c559fb18999325226" translate="yes" xml:space="preserve">
          <source>After the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method is called once, any further call to this method will be ignored. This means once the response is sent out, you will not be able to append more content to it.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send ()&lt;/a&gt; 메소드가 한 번 호출 된 후이 메소드에 대한 추가 호출은 무시됩니다. 즉, 응답이 전송되면 더 많은 내용을 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a55d47573fdfb75d3850e263287750ca3e41ed9b" translate="yes" xml:space="preserve">
          <source>After the CacheSession object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">CacheSession 오브젝트가 작성된 후이 특성을 변경하려면 캐시 오브젝트로만 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d480b6c263798ec72ffc5c3b38bbc1423b8b8946" translate="yes" xml:space="preserve">
          <source>After the DB connection is established, one can execute SQL statements like the following:</source>
          <target state="translated">DB 연결이 설정되면 다음과 같은 SQL 문을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb9caf83e05f0b4fa9a4182da3fadcd82604de50" translate="yes" xml:space="preserve">
          <source>After the DbMessageSource object is created, if you want to change this property, you should only assign it with a DB connection object.</source>
          <target state="translated">DbMessageSource 객체가 생성 된 후이 속성을 변경하려면 DB 연결 객체 만 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="514ce56ea1d72c76c207e920ebe92146170ac2da" translate="yes" xml:space="preserve">
          <source>After the DbMessageSource object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">DbMessageSource 오브젝트가 작성된 후이 특성을 변경하려면 캐시 오브젝트로만 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="86b4c540c10c9dbdc8a673c3ca12d1aa22a6cf16" translate="yes" xml:space="preserve">
          <source>After the Mongo connection is established, one can access Mongo databases and collections:</source>
          <target state="translated">Mongo 연결이 설정되면 Mongo 데이터베이스 및 콜렉션에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="982f24355b2c8c28082500564da21e33d64290cd" translate="yes" xml:space="preserve">
          <source>After the MongoDbMessageSource object is created, if you want to change this property, you should only assign it with a MongoDB connection object.</source>
          <target state="translated">MongoDbMessageSource 객체가 생성 된 후이 속성을 변경하려면 MongoDB 연결 객체 만 사용하여 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="912e899ebeba2892f409b6c1b424797850741cbf" translate="yes" xml:space="preserve">
          <source>After the MongoDbMessageSource object is created, if you want to change this property, you should only assign it with a cache object.</source>
          <target state="translated">MongoDbMessageSource 오브젝트가 작성된 후이 특성을 변경하려면 캐시 오브젝트로만 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d89a90c4a96868396aa0ac6283344011cd63e469" translate="yes" xml:space="preserve">
          <source>After the SessionStateStorage object is created, if you want to change this property, you should only assign it with a session object.</source>
          <target state="translated">SessionStateStorage 객체가 생성 된 후이 속성을 변경하려면 세션 객체 만 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="85ae30057495d6c077a2234d3171651fe0d6333c" translate="yes" xml:space="preserve">
          <source>After the Sphinx connection is established, one can execute SQL statements like the following:</source>
          <target state="translated">스핑크스 연결이 설정되면 다음과 같은 SQL 문을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f23b17249cf76ad5a9355c3815b46bf575aa477e" translate="yes" xml:space="preserve">
          <source>After the UrlManager object is created, if you want to change this property, you should only assign it with a cache object. Set this property to &lt;code&gt;false&lt;/code&gt; if you do not want to cache the URL rules.</source>
          <target state="translated">UrlManager 객체가 생성 된 후이 속성을 변경하려면 캐시 객체 만 할당해야합니다. URL 규칙을 캐시하지 않으려면 이 특성을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d6d818e3a0476a2d7c544d830e7216b0069a265" translate="yes" xml:space="preserve">
          <source>After the fixture is loaded, you can access the loaded data via the &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$data&lt;/a&gt; property. If you set &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt;, you will also be able to retrieve an instance of &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; with the populated data via &lt;a href=&quot;yii-test-baseactivefixture#getModel()-detail&quot;&gt;getModel()&lt;/a&gt;.</source>
          <target state="translated">조명기가로드 된 후 &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$ data&lt;/a&gt; 속성을 통해로드 된 데이터에 액세스 할 수 있습니다 . &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt; 를 설정 하면 &lt;a href=&quot;yii-test-baseactivefixture#getModel()-detail&quot;&gt;getModel ()을&lt;/a&gt; 통해 채워진 데이터 로 &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt; 인스턴스를 검색 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="acff2af201ab3f17e2e4bdefab4eb9feaf569c36" translate="yes" xml:space="preserve">
          <source>After the installation, you should see the directory &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; under &lt;code&gt;BasePath/vendor&lt;/code&gt;. You should also see another directory &lt;code&gt;imagine/imagine&lt;/code&gt; which contains the installed dependent package.</source>
          <target state="translated">설치 후 &lt;code&gt;BasePath/vendor&lt;/code&gt; 아래에 &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; 디렉토리가 나타납니다 . 또한 설치된 종속 패키지가 포함 된 다른 디렉토리 &lt;code&gt;imagine/imagine&lt;/code&gt; 이 표시되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="f5c79a0ad7dca6f81431ebfe79c1d148cc13b3ff" translate="yes" xml:space="preserve">
          <source>After the module is initialized, this property will become an array of generator instances which are created based on the configurations previously taken by this property.</source>
          <target state="translated">모듈이 초기화되면이 속성은 이전에이 속성에서 사용 된 구성을 기반으로 생성 된 생성기 인스턴스의 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="39531824816a6b8fd6be0ba00f83c91fef0d309e" translate="yes" xml:space="preserve">
          <source>After this mode is enabled, methods, returning query results like &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one()&lt;/a&gt;, &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all()&lt;/a&gt;, &lt;a href=&quot;yii-db-queryinterface#exists()-detail&quot;&gt;exists()&lt;/a&gt; and so on, will return empty or false values. You should use this method in case your program logic indicates query should not return any results, like in case you set false where condition like &lt;code&gt;0=1&lt;/code&gt;.</source>
          <target state="translated">이 모드가 활성화되면 &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one ()&lt;/a&gt; , &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all ()&lt;/a&gt; , &lt;a href=&quot;yii-db-queryinterface#exists()-detail&quot;&gt;exist ()&lt;/a&gt; 등과 같은 쿼리 결과를 반환하는 메서드 는 비어 있거나 잘못된 값을 반환합니다. 조건이 &lt;code&gt;0=1&lt;/code&gt; 과 같이 false를 설정 한 경우와 같이 프로그램 논리가 쿼리가 결과를 반환하지 않아야한다고 표시하는 경우이 방법을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d4c78bab34be69acc3ece582addfa308adcfe716" translate="yes" xml:space="preserve">
          <source>After this mode is enabled, methods, returning query results like \yii\db\one(), \yii\db\all(), \yii\db\exists() and so on, will return empty or false values. You should use this method in case your program logic indicates query should not return any results, like in case you set false where condition like &lt;code&gt;0=1&lt;/code&gt;.</source>
          <target state="translated">이 모드가 활성화되면 \ yii \ db \ one (), \ yii \ db \ all (), \ yii \ db \ exists () 등과 같은 쿼리 결과를 반환하는 메서드는 비어 있거나 잘못된 값을 반환합니다. 조건이 &lt;code&gt;0=1&lt;/code&gt; 과 같이 false를 설정 한 경우와 같이 프로그램 논리가 쿼리가 결과를 반환하지 않아야한다고 표시하는 경우이 방법을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="64ea859af07aefcea21b7237fab5fbfe7f258a5e" translate="yes" xml:space="preserve">
          <source>After translation the message will be formatted using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt; if it contains ICU message format and &lt;code&gt;$params&lt;/code&gt; are not empty.</source>
          <target state="translated">변환 후 메시지 에 ICU 메시지 형식이 포함되어 있고 &lt;code&gt;$params&lt;/code&gt; 가 비어 있지 않은 경우 &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii \ i18n \ MessageFormatter를&lt;/a&gt; 사용하여 메시지가 형식화됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b21cd515587188a044d7b4e26a060939047f021" translate="yes" xml:space="preserve">
          <source>After validation, you can check if the validation succeeded or not by calling the &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors()&lt;/a&gt; method, and then get the validation errors from the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;errors&lt;/a&gt; property, like you do with a normal model. You may also access the dynamic attributes defined through the model instance, e.g., &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; and &lt;code&gt;$model-&amp;gt;email&lt;/code&gt;.</source>
          <target state="translated">유효성 검사 후 &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors ()&lt;/a&gt; 메서드 를 호출하여 유효성 검사가 성공했는지 여부를 확인한 다음 일반 모델에서와 같이 &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;errors&lt;/a&gt; 속성 에서 유효성 검사 오류를 가져올 수 있습니다. 모델 인스턴스를 통해 정의 된 동적 속성 (예 : &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; 및 &lt;code&gt;$model-&amp;gt;email&lt;/code&gt; 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0840ead2c2193e794bc6e3e409e09cf99961c7a1" translate="yes" xml:space="preserve">
          <source>After you prepared needed templates for tables you can simply generate your fixtures via command</source>
          <target state="translated">테이블에 필요한 템플릿을 준비한 후에는 명령을 통해 조명기를 생성 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="bdfb012df57a9009771d71e1ebcf597d7fd0da6b" translate="yes" xml:space="preserve">
          <source>After you set all needed fields in callback, you need to return $fixture array back from the callback.</source>
          <target state="translated">콜백에서 필요한 모든 필드를 설정 한 후 콜백에서 $ fixture 배열을 다시 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="86ffa4a81f0a062488b04212bd502995065dd755" translate="yes" xml:space="preserve">
          <source>AfterSaveEvent represents the information available in &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;yii\db\ActiveRecord::EVENT_AFTER_INSERT&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;yii\db\ActiveRecord::EVENT_AFTER_UPDATE&lt;/a&gt;.</source>
          <target state="translated">AfterSaveEvent은에서 사용할 수있는 정보를 나타냅니다 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;YII \ DB \ 액티브 :: EVENT_AFTER_INSERT&lt;/a&gt; 및 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;YII \ DB \ 액티브 :: EVENT_AFTER_UPDATE을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34b0e46ba312d5a9a38e7d35a9a5f0703c0c63ca" translate="yes" xml:space="preserve">
          <source>Aggregation name.</source>
          <target state="translated">집계 이름</target>
        </trans-unit>
        <trans-unit id="fc39530259492095f22bb99217b9415395213ab0" translate="yes" xml:space="preserve">
          <source>Aggregation operator.</source>
          <target state="translated">집계 연산자.</target>
        </trans-unit>
        <trans-unit id="4719cd098acba3ad9bc6b960732c34c49e95ac19" translate="yes" xml:space="preserve">
          <source>Aggregation result.</source>
          <target state="translated">집계 결과.</target>
        </trans-unit>
        <trans-unit id="96cc7a4e6c7ed5239620adb8e58a76ec141164dd" translate="yes" xml:space="preserve">
          <source>Aggregation results.</source>
          <target state="translated">집계 결과.</target>
        </trans-unit>
        <trans-unit id="e3004d2e67eaadc74c62aaac74f43b3a988fbed6" translate="yes" xml:space="preserve">
          <source>Ajax attribute input search value</source>
          <target state="translated">Ajax 속성 입력 검색 값</target>
        </trans-unit>
        <trans-unit id="63b0e0fa2efb230b1c55c37368935e475a2fadf6" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-mongodb-file-download#toFile()-detail&quot;&gt;toFile()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;yii-mongodb-file-download#toFile()-detail&quot;&gt;toFile ()&lt;/a&gt; 메소드의 별명 .</target>
        </trans-unit>
        <trans-unit id="3f01c31cdc0570fba6dc8ee077db101c9069c5e8" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-mongodb-file-download#toString()-detail&quot;&gt;toString()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;yii-mongodb-file-download#toString()-detail&quot;&gt;toString ()&lt;/a&gt; 메소드의 별명 .</target>
        </trans-unit>
        <trans-unit id="1a81cd69a0ecd9aaf035c909676a827376b8ea94" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;yii-sphinx-connection#quoteIndexName()-detail&quot;&gt;quoteIndexName()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-sphinx-connection#quoteIndexName()-detail&quot;&gt;quoteIndexName ()의&lt;/a&gt; 별명 .</target>
        </trans-unit>
        <trans-unit id="2df77c71c913b612e90b61efbc7de05f2c90b1d5" translate="yes" xml:space="preserve">
          <source>Alias to the fixture data path, where data files should be written.</source>
          <target state="translated">데이터 파일을 작성해야하는 조명기 데이터 경로의 별명.</target>
        </trans-unit>
        <trans-unit id="3d02a8477722fb38146ee3e15c94f2f2dfad791b" translate="yes" xml:space="preserve">
          <source>Alias to the template path, where all tables templates are stored.</source>
          <target state="translated">모든 테이블 템플릿이 저장되는 템플릿 경로의 별칭.</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="469971b6112deff647e0dbbbccbdf79ec47c4405" translate="yes" xml:space="preserve">
          <source>Aliases are recognized in many places in Yii without needing to call &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; to convert them into paths or URLs. For example, &lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;yii\caching\FileCache::$cachePath&lt;/a&gt; can accept both a file path and an alias representing a file path, thanks to the &lt;code&gt;@&lt;/code&gt; prefix which allows it to differentiate a file path from an alias.</source>
          <target state="translated">별칭은 경로 또는 URL로 변환하기 위해 &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii :: getAlias ​​()&lt;/a&gt; 를 호출 할 필요없이 Yii의 여러 곳에서 인식 됩니다. 예를 들어, &lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;yii \ caching \ FileCache :: $ cachePath&lt;/a&gt; 는 파일 경로와 별칭 을 구분할 수 있는 &lt;code&gt;@&lt;/code&gt; 접두사로 인해 파일 경로와 파일 경로를 나타내는 별칭을 모두 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21204fc892dcb8379b4e86af84935004ccc95657" translate="yes" xml:space="preserve">
          <source>Aliases are used to represent file paths or URLs so that you don't have to hard-code absolute paths or URLs in your project. An alias must start with the &lt;code&gt;@&lt;/code&gt; character to be differentiated from normal file paths and URLs. Alias defined without leading &lt;code&gt;@&lt;/code&gt; will be prefixed with &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">별명은 파일 경로 또는 URL을 나타내는 데 사용되므로 프로젝트에서 절대 경로 또는 URL을 하드 코딩 할 필요가 없습니다. 별명은 일반 파일 경로 및 URL과 구별되도록 &lt;code&gt;@&lt;/code&gt; 문자로 시작해야 합니다. 앞에 &lt;code&gt;@&lt;/code&gt; 없이 정의 된 별칭 은 앞에 &lt;code&gt;@&lt;/code&gt; 문자 가 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="0e75c6a2260ca48552cd58cc7cd818490dfa5c52" translate="yes" xml:space="preserve">
          <source>All Classes</source>
          <target state="translated">모든 수업</target>
        </trans-unit>
        <trans-unit id="15ce1c4105795b1ccebd3c08f672fa464ba0b216" translate="yes" xml:space="preserve">
          <source>All aggregations results</source>
          <target state="translated">모든 집계 결과</target>
        </trans-unit>
        <trans-unit id="9ced8bbeed2324b7a41185a70b21a3be09b21bdb" translate="yes" xml:space="preserve">
          <source>All ancestor modules that this controller is located within.</source>
          <target state="translated">이 컨트롤러가있는 모든 상위 모듈.</target>
        </trans-unit>
        <trans-unit id="bfa3e070b30fd13067d8cd8dc004be2e670efea6" translate="yes" xml:space="preserve">
          <source>All auth items (name =&amp;gt; Item)</source>
          <target state="translated">모든 인증 품목 (이름 =&amp;gt; 품목)</target>
        </trans-unit>
        <trans-unit id="dc8a523f609748e42a0626475faba8a6cfd33ef3" translate="yes" xml:space="preserve">
          <source>All auth rules (name =&amp;gt; Rule)</source>
          <target state="translated">모든 인증 규칙 (이름 =&amp;gt; 규칙)</target>
        </trans-unit>
        <trans-unit id="aed57276b08d5f335c9a2f7d3bc8c9be56d8a5f6" translate="yes" xml:space="preserve">
          <source>All available action IDs.</source>
          <target state="translated">사용 가능한 모든 조치 ID.</target>
        </trans-unit>
        <trans-unit id="6dada28f7acde322548b6b75755cd8550e3262e6" translate="yes" xml:space="preserve">
          <source>All available command names</source>
          <target state="translated">사용 가능한 모든 명령 이름</target>
        </trans-unit>
        <trans-unit id="d2cfbd344b64bda80f416daad27d927383934889" translate="yes" xml:space="preserve">
          <source>All available commands as keys and their description as values.</source>
          <target state="translated">키로 사용 가능한 모든 명령과 값으로 설명.</target>
        </trans-unit>
        <trans-unit id="0d4a6ed741eee857d41bd8c8d76f608c17a2c2e5" translate="yes" xml:space="preserve">
          <source>All cache components have the same base class &lt;a href=&quot;yii-caching-cache&quot;&gt;yii\caching\Cache&lt;/a&gt; and thus support the following APIs:</source>
          <target state="translated">모든 캐시 구성 요소는 동일한 기본 클래스 &lt;a href=&quot;yii-caching-cache&quot;&gt;yii \ caching \ Cache&lt;/a&gt; 를 가지며 다음 API를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6803f0e8417ba3711b7aba14abb63ee8fcdfdbc0" translate="yes" xml:space="preserve">
          <source>All db schema names or an array with a single empty string</source>
          <target state="translated">모든 DB 스키마 이름 또는 하나의 빈 문자열이있는 배열</target>
        </trans-unit>
        <trans-unit id="3d817e60570b9a7e2df7672e3236f77b3dcf55d0" translate="yes" xml:space="preserve">
          <source>All dependent asset bundles will be registered.</source>
          <target state="translated">모든 종속 자산 번들이 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="6e738d64d2efbdfd4b4e61b8c57cb86e522b8be9" translate="yes" xml:space="preserve">
          <source>All dependent fixtures will also be created.</source>
          <target state="translated">모든 종속 설비도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9c1eb49d0577b00ce13951634fe4705eef6c64b7" translate="yes" xml:space="preserve">
          <source>All direct permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">사용자가 가진 모든 직접 권한. 배열은 권한 이름으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="bd9dc1c9ba0079f8590a118d2e143128a314c457" translate="yes" xml:space="preserve">
          <source>All existing old attribute values will be discarded.</source>
          <target state="translated">기존의 모든 기존 속성 값이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="30095d31c403907368597d0ea60545093212931c" translate="yes" xml:space="preserve">
          <source>All generate the same code.</source>
          <target state="translated">모두 동일한 코드를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="40645c3ca37288d3875bd676b164fcb7a518c2f6" translate="yes" xml:space="preserve">
          <source>All index names in the Sphinx.</source>
          <target state="translated">스핑크스의 모든 색인 이름.</target>
        </trans-unit>
        <trans-unit id="20a512ccb50a2d0d1bf5d0c2fd9b68f6312a2d4c" translate="yes" xml:space="preserve">
          <source>All index types in the Sphinx in format: index name =&amp;gt; index type.</source>
          <target state="translated">Sphinx의 모든 색인 유형 : 색인 이름 =&amp;gt; 색인 유형.</target>
        </trans-unit>
        <trans-unit id="97999c7205e8e0f0d4e8a93c5216c5a2e0e4903e" translate="yes" xml:space="preserve">
          <source>All inherited permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">사용자가 가진 모든 상속 된 권한. 배열은 권한 이름으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="c2ef6e6d53dc2ae5fe880333345a500b3b00bd98" translate="yes" xml:space="preserve">
          <source>All non-fatal PHP errors (e.g. warnings, notices) are converted into catchable exceptions.</source>
          <target state="translated">치명적이지 않은 모든 PHP 오류 (예 : 경고,주의 사항)는 포착 가능한 예외로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="49c1a66eca2021f53f8721541c4d33825e4d4605" translate="yes" xml:space="preserve">
          <source>All parent child relations will be adjusted accordingly.</source>
          <target state="translated">모든 부모 자녀 관계는 이에 따라 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="b28141b01d43e6076cd3810992266a479a663ab2" translate="yes" xml:space="preserve">
          <source>All permissions in the system.</source>
          <target state="translated">시스템의 모든 권한</target>
        </trans-unit>
        <trans-unit id="93b5c2e75545336a0739edf32e59148ed7586bdc" translate="yes" xml:space="preserve">
          <source>All permissions in the system. The array is indexed by the permission names.</source>
          <target state="translated">시스템의 모든 권한 배열은 권한 이름으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="9c5ea8222f2cfdc8afe85deba75358ec3f198e9b" translate="yes" xml:space="preserve">
          <source>All permissions that the role represents. The array is indexed by the permission names.</source>
          <target state="translated">역할이 나타내는 모든 권한 배열은 권한 이름으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="ce171c8e6ce915e6946d4257ff0e49a3023402cd" translate="yes" xml:space="preserve">
          <source>All permissions that the user has. The array is indexed by the permission names.</source>
          <target state="translated">사용자가 가진 모든 권한. 배열은 권한 이름으로 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="f31f4559b681040547cd4bbd1603a6d4204df8bb" translate="yes" xml:space="preserve">
          <source>All roles and permissions which have rules will be adjusted accordingly.</source>
          <target state="translated">규칙이있는 모든 역할과 권한이 그에 따라 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="9065999e5c68217dcd0440ae4a4be22cf916718b" translate="yes" xml:space="preserve">
          <source>All roles directly assigned to the user. The array is indexed by the role names.</source>
          <target state="translated">사용자에게 직접 지정된 모든 역할 배열은 역할 이름으로 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="587a0c0cfeaffe22e81eba4fae7c88460be7e960" translate="yes" xml:space="preserve">
          <source>All roles in the system.</source>
          <target state="translated">시스템의 모든 역할</target>
        </trans-unit>
        <trans-unit id="cabcf662c27cbc2cbd7282da826e47be521bde59" translate="yes" xml:space="preserve">
          <source>All roles in the system. The array is indexed by the role names.</source>
          <target state="translated">시스템의 모든 역할 배열은 역할 이름으로 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="443d8306b5c087d1bd114698a5b70812ac0fe720" translate="yes" xml:space="preserve">
          <source>All rows of the query result. Each array element is an array representing a row of data. An empty array is returned if the query results in nothing.</source>
          <target state="translated">쿼리 결과의 모든 행 각 배열 요소는 데이터 행을 나타내는 배열입니다. 쿼리 결과가 없으면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2040f173a7a7e5bc3e7ee06f166fa2494ae39543" translate="yes" xml:space="preserve">
          <source>All schema names in the database, except system schemas</source>
          <target state="translated">시스템 스키마를 제외한 데이터베이스의 모든 스키마 이름</target>
        </trans-unit>
        <trans-unit id="16c3c223a155ff1797fb52bafd6a098c61fc9660" translate="yes" xml:space="preserve">
          <source>All schema names in the database, except system schemas.</source>
          <target state="translated">시스템 스키마를 제외한 데이터베이스의 모든 스키마 이름</target>
        </trans-unit>
        <trans-unit id="f16e983dcba17168dcd9f5856641a30a9208b194" translate="yes" xml:space="preserve">
          <source>All table names in the database.</source>
          <target state="translated">데이터베이스의 모든 테이블 이름</target>
        </trans-unit>
        <trans-unit id="66895ff8052d0444fb72bf7fe94ca3acd41cee8f" translate="yes" xml:space="preserve">
          <source>All table names in the database. The names have NO schema name prefix.</source>
          <target state="translated">데이터베이스의 모든 테이블 이름 이름에는 스키마 이름 접두사가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5bc8a60b0a1fa2abc7ca0ad6f7c8a7f84ccb15c7" translate="yes" xml:space="preserve">
          <source>All the validators declared in the model.</source>
          <target state="translated">모델에서 선언 된 모든 유효성 검사기</target>
        </trans-unit>
        <trans-unit id="6dd3e06ecb09f23d9d45847d97f457bd5166d545" translate="yes" xml:space="preserve">
          <source>All these actions are declared through the &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions()&lt;/a&gt; method. You may configure these actions or disable some of them by overriding the &lt;code&gt;actions()&lt;/code&gt; method, like shown the following,</source>
          <target state="translated">이러한 모든 작업은 &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions ()&lt;/a&gt; 메서드를 통해 선언됩니다 . 다음과 같이 &lt;code&gt;actions()&lt;/code&gt; 메서드 를 재정 의하여 이러한 작업을 구성하거나 일부 작업을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de5621693fc76b4ddac7e4343f4e72eeb2bbebc3" translate="yes" xml:space="preserve">
          <source>All these query methods take an optional &lt;code&gt;$db&lt;/code&gt; parameter representing the &lt;a href=&quot;yii-db-connection&quot;&gt;DB connection&lt;/a&gt; that should be used to perform a DB query. If you omit this parameter, the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; will be used as the DB connection. Below is another example using the &lt;a href=&quot;yii-db-query#count()-detail&quot;&gt;count()&lt;/a&gt; query method:</source>
          <target state="translated">이러한 모든 쿼리 메소드 는 DB 쿼리를 수행하는 데 사용해야 하는 &lt;a href=&quot;yii-db-connection&quot;&gt;DB 연결&lt;/a&gt; 을 나타내는 선택적 &lt;code&gt;$db&lt;/code&gt; 매개 변수를 사용합니다. 이 매개 변수를 생략하면 &lt;code&gt;db&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;애플리케이션 구성 요소&lt;/a&gt; 가 DB 연결로 사용됩니다. 다음은 &lt;a href=&quot;yii-db-query#count()-detail&quot;&gt;count ()&lt;/a&gt; 쿼리 메소드 를 사용하는 또 다른 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f446f4881ed2b86a801a303b9c185ef4ad3f4a04" translate="yes" xml:space="preserve">
          <source>All these session classes support the same set of API methods. As a result, you can switch to a different session storage class without the need to modify your application code that uses sessions.</source>
          <target state="translated">이러한 모든 세션 클래스는 동일한 API 메소드 세트를 지원합니다. 결과적으로 세션을 사용하는 애플리케이션 코드를 수정하지 않고도 다른 세션 스토리지 클래스로 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ca66882744c7e48dd09a65f5bc6d535213cf836" translate="yes" xml:space="preserve">
          <source>All these tools are accessible through the command &lt;code&gt;yii migrate&lt;/code&gt;. In this section we will describe in detail how to accomplish various tasks using these tools. You may also get the usage of each tool via the help command &lt;code&gt;yii help migrate&lt;/code&gt;.</source>
          <target state="translated">이 모든 도구는 &lt;code&gt;yii migrate&lt;/code&gt; 명령을 통해 액세스 할 수 있습니다 . 이 섹션에서는 이러한 도구를 사용하여 다양한 작업을 수행하는 방법을 자세히 설명합니다. help 명령 &lt;code&gt;yii help migrate&lt;/code&gt; 를 통해 각 도구의 사용법을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a689f25bb0e0052fbc2678ff63894b5fb2d53ce" translate="yes" xml:space="preserve">
          <source>All three operations: insert, update, delete. This is a shortcut of the expression: OP_INSERT | OP_UPDATE | OP_DELETE.</source>
          <target state="translated">세 가지 작업 모두 : 삽입, 업데이트, 삭제. 다음은 표현식 바로 가기입니다. OP_INSERT | OP_UPDATE | OP_DELETE.</target>
        </trans-unit>
        <trans-unit id="fe07d83e6a842570b38a8fdebdb5b164b9e561bb" translate="yes" xml:space="preserve">
          <source>All translations are saved under the &lt;a href=&quot;yii-i18n-gettextmessagesource#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt; directory.</source>
          <target state="translated">모든 번역은 &lt;a href=&quot;yii-i18n-gettextmessagesource#%24basePath-detail&quot;&gt;$ basePath&lt;/a&gt; 디렉토리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4b2e8d98dccc862c58d92ce93877fb28c544eb5" translate="yes" xml:space="preserve">
          <source>All unique foreign key pairs if the table is a junction table, or false if the table is not a junction table.</source>
          <target state="translated">테이블이 접합 테이블 인 경우 모든 고유 외부 키 쌍이거나 테이블이 접합 테이블이 아닌 경우 false입니다.</target>
        </trans-unit>
        <trans-unit id="a19feb5c65bdaa663207b8342675f446d60ff3f9" translate="yes" xml:space="preserve">
          <source>All unique indexes for the given table.</source>
          <target state="translated">주어진 테이블에 대한 모든 고유 인덱스.</target>
        </trans-unit>
        <trans-unit id="2c7af4ac58c49f72104dc4a2376edb8b74d00bf0" translate="yes" xml:space="preserve">
          <source>All view names in the database.</source>
          <target state="translated">데이터베이스의 모든 뷰 이름</target>
        </trans-unit>
        <trans-unit id="0bdf15cdd01c18835d7af81433996ddc6048015d" translate="yes" xml:space="preserve">
          <source>All views names in the database. The names have NO schema name prefix.</source>
          <target state="translated">데이터베이스의 모든 뷰 이름. 이름에는 스키마 이름 접두사가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b1d7cc06bc7814c3560e7b7910d26b209252bd3e" translate="yes" xml:space="preserve">
          <source>Allow all guest (not yet authenticated) users to access the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;signup&lt;/code&gt; actions. The &lt;code&gt;roles&lt;/code&gt; option contains a question mark &lt;code&gt;?&lt;/code&gt; which is a special token representing &quot;guest users&quot;.</source>
          <target state="translated">모든 게스트 (아직 인증되지 않은) 사용자가 &lt;code&gt;login&lt;/code&gt; 및 &lt;code&gt;signup&lt;/code&gt; 작업 에 액세스 할 수 있도록합니다 . &lt;code&gt;roles&lt;/code&gt; 옵션은 물음표를 포함 &lt;code&gt;?&lt;/code&gt; &quot;게스트 사용자&quot;를 나타내는 특수 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="89f64f45766a4fe32f0af3d9e8cb4a72cbb92408" translate="yes" xml:space="preserve">
          <source>Allow authenticated users to access the &lt;code&gt;logout&lt;/code&gt; action. The &lt;code&gt;@&lt;/code&gt; character is another special token representing &quot;authenticated users&quot;.</source>
          <target state="translated">인증 된 사용자가 &lt;code&gt;logout&lt;/code&gt; 작업 에 액세스 할 수 있도록합니다 . &lt;code&gt;@&lt;/code&gt; 의 문자는 &quot;인증 된 사용자&quot;를 나타내는 토큰 또 다른 특별하다.</target>
        </trans-unit>
        <trans-unit id="70b32974d681513bbaf733c546b98fd50c460985" translate="yes" xml:space="preserve">
          <source>Allow the extended HtmlPurifier class to set some default config options.</source>
          <target state="translated">확장 HtmlPurifier 클래스가 일부 기본 구성 옵션을 설정하도록 허용하십시오.</target>
        </trans-unit>
        <trans-unit id="c913a724c8c7d0059ffbd3514b912531d5611cfa" translate="yes" xml:space="preserve">
          <source>Allowed columns for GridView.</source>
          <target state="translated">GridView에 허용되는 열.</target>
        </trans-unit>
        <trans-unit id="e124d090eb43939fe0291502d5cc74a464358269" translate="yes" xml:space="preserve">
          <source>Allows issuing all supported commands via magic methods.</source>
          <target state="translated">매직 메소드를 통해 지원되는 모든 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13379886bc305f363f910d0c0391fff81bf651f2" translate="yes" xml:space="preserve">
          <source>Allows you to combine and compress your JavaScript and CSS files.</source>
          <target state="translated">JavaScript 및 CSS 파일을 결합하고 압축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4956941ad7c122256fa27a787a4847c237721ddb" translate="yes" xml:space="preserve">
          <source>Allows you to flush cache.</source>
          <target state="translated">캐시를 플러시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a605907c306161ff1d007ffc83606f463bef1e84" translate="yes" xml:space="preserve">
          <source>Already loaded bundles list.</source>
          <target state="translated">이미로드 된 번들 목록.</target>
        </trans-unit>
        <trans-unit id="c236c4714d489f49080f3baed53b322e0a7afff5" translate="yes" xml:space="preserve">
          <source>Also a default &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; can be applied. For example if &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; is &lt;code&gt;tbl_&lt;/code&gt;, &lt;code&gt;Customer&lt;/code&gt; becomes &lt;code&gt;tbl_customer&lt;/code&gt; and &lt;code&gt;OrderItem&lt;/code&gt; becomes &lt;code&gt;tbl_order_item&lt;/code&gt;.</source>
          <target state="translated">또한 기본 &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; 를 적용 할 수 있습니다. 예를 들어 &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; 가 &lt;code&gt;tbl_&lt;/code&gt; 인 경우 &lt;code&gt;Customer&lt;/code&gt; 는 &lt;code&gt;tbl_customer&lt;/code&gt; 가 되고 &lt;code&gt;OrderItem&lt;/code&gt; 은 &lt;code&gt;tbl_order_item&lt;/code&gt; 이 됩니다 .</target>
        </trans-unit>
        <trans-unit id="e835a0cd5faac8a9e0b272cbb647bcd861436d1f" translate="yes" xml:space="preserve">
          <source>Also a default &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; can be applied. Implementation instructions are in the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;&quot;Quoting Tables&quot; section of the &quot;Database Access Objects&quot; guide&lt;/a&gt;.</source>
          <target state="translated">또한 기본 &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;tablePrefix&lt;/a&gt; 를 적용 할 수 있습니다. 구현 지침은 &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;&quot;데이터베이스 액세스 개체&quot;안내서&lt;/a&gt; 의 &quot;쿼팅 테이블&quot;섹션에 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bac50868a3df10c590b7bb6d0bd54b810f7e28a" translate="yes" xml:space="preserve">
          <source>Also check the section on &lt;a href=&quot;guide-rest-controllers#cors&quot;&gt;REST Controllers&lt;/a&gt; if you want to add the CORS filter to an &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; class in your API.</source>
          <target state="translated">CORS 필터를 API 의 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt; 클래스에 추가하려면 &lt;a href=&quot;guide-rest-controllers#cors&quot;&gt;REST Controller&lt;/a&gt; 섹션도 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf264927b1e48142dd15a8f161eab81e37ce50ef" translate="yes" xml:space="preserve">
          <source>Also note that if you modify RBAC items, rules or parent-child relationships from outside of this component, you have to manually call &lt;a href=&quot;yii-mongodb-rbac-mongodbmanager#invalidateCache()-detail&quot;&gt;invalidateCache()&lt;/a&gt; to ensure data consistency.</source>
          <target state="translated">또한이 구성 요소 외부에서 RBAC 항목, 규칙 또는 상위-하위 관계를 수정하는 경우 데이터 일관성을 보장하기 위해 &lt;a href=&quot;yii-mongodb-rbac-mongodbmanager#invalidateCache()-detail&quot;&gt;invalidateCache ()&lt;/a&gt; 를 수동으로 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="2cf5efa787da5c95c7e39e4f9ff51ef20f2ae782" translate="yes" xml:space="preserve">
          <source>Also note that if you modify RBAC items, rules or parent-child relationships from outside of this component, you have to manually call &lt;a href=&quot;yii-rbac-dbmanager#invalidateCache()-detail&quot;&gt;invalidateCache()&lt;/a&gt; to ensure data consistency.</source>
          <target state="translated">또한이 구성 요소 외부에서 RBAC 항목, 규칙 또는 상위-하위 관계를 수정하는 경우 데이터 일관성을 보장하기 위해 &lt;a href=&quot;yii-rbac-dbmanager#invalidateCache()-detail&quot;&gt;invalidateCache ()&lt;/a&gt; 를 수동으로 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="e749c872a8d11043270ddc15d3ddc5047612ec70" translate="yes" xml:space="preserve">
          <source>Also note that the created command is not executed until &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute()&lt;/a&gt; is called.</source>
          <target state="translated">또한 실행 된 명령은 &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute ()&lt;/a&gt; 가 호출 될 때까지 실행 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="640c87db9d516fbe9022c9884ac6180c5701b031" translate="yes" xml:space="preserve">
          <source>Also note that when running an HTTPS server, you need to add &lt;code&gt;fastcgi_param HTTPS on;&lt;/code&gt; so that Yii can properly detect if a connection is secure.</source>
          <target state="translated">또한 HTTPS 서버를 실행할 때 &lt;code&gt;fastcgi_param HTTPS on;&lt;/code&gt; 를 추가해야합니다 . Yii가 연결이 안전한지 올바르게 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ec50f40edb3f2b766e3cc97860ce4af213ba0ac" translate="yes" xml:space="preserve">
          <source>Also the &lt;a href=&quot;guide-concept-autoloading&quot;&gt;guide section on autoloading&lt;/a&gt;.</source>
          <target state="translated">또한 &lt;a href=&quot;guide-concept-autoloading&quot;&gt;자동 로딩에&lt;/a&gt; 대한 가이드 섹션 .</target>
        </trans-unit>
        <trans-unit id="4c2ca5ee01e5ea2566eac9238aecd49623123d18" translate="yes" xml:space="preserve">
          <source>Also, if &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$label&lt;/a&gt; is not specified, the label associated with the attribute will be displayed.</source>
          <target state="translated">또한 &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;$ label을&lt;/a&gt; 지정하지 않으면 속성과 연관된 레이블이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6728faa4c0ff27813fefe7730ebc6cbb518d8c08" translate="yes" xml:space="preserve">
          <source>Also, when specifying the &lt;a href=&quot;yii-data-sort#%24defaultOrder-detail&quot;&gt;defaultOrder&lt;/a&gt; for sorting, you need to use the relation name instead of the alias:</source>
          <target state="translated">또한 정렬을 위해 &lt;a href=&quot;yii-data-sort#%24defaultOrder-detail&quot;&gt;defaultOrder&lt;/a&gt; 를 지정할 때 별명 대신 관계 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="729591bc23d4755d39dd88b21625254e3d8a9dd8" translate="yes" xml:space="preserve">
          <source>Also, you do not need to specify the data for auto-incremental columns. Yii will automatically fill the actual values into the rows when the fixture is being loaded.</source>
          <target state="translated">또한 자동 증분 열에 대한 데이터를 지정할 필요가 없습니다. Yii는 조명기가로드 될 때 실제 값을 자동으로 행에 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="1de40cf7f3ffee92547f9ab7afccf9c97fa07a77" translate="yes" xml:space="preserve">
          <source>Also, you may use options to dynamically change parameters for extraction.</source>
          <target state="translated">또한 옵션을 사용하여 추출을위한 매개 변수를 동적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c260a4720d37123d84dfb4920076a81a3eb7bcbc" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">또는 &lt;code&gt;php:&lt;/code&gt; 접두사가 붙은 문자열 일 수도 있습니다. PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date ()&lt;/a&gt; 함수 가 인식 할 수있는 형식을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="eb42d7503470ac7c266b8e339d737eea93e912bb" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ccef770a642e1e25e7ccbdc11a252cad1f7182" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP Datetime class. Please refer to &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;http://php.net/manual/en/datetime.createfromformat.php&lt;/a&gt; on supported formats.</source>
          <target state="translated">또는 &lt;code&gt;php:&lt;/code&gt; 접두사가 붙은 문자열 일 수도 있습니다. PHP Datetime 클래스에서 인식 할 수있는 형식을 나타냅니다. 지원되는 형식 은 &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;http://php.net/manual/en/datetime.createfromformat.php&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="667365e759aeb0a1c4c1a26f46e22e3b71aae7bf" translate="yes" xml:space="preserve">
          <source>Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP Datetime class. Please refer to &lt;a href=&quot;https://php.net/manual/en/datetime.createfromformat.php&quot;&gt;http://php.net/manual/en/datetime.createfromformat.php&lt;/a&gt; on supported formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2003b56529b17146d488aa85a5c2b3a97ec5e0" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be accomplished with the following migration:</source>
          <target state="translated">또는 다음 마이그레이션으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f53a7da871abb541ee9f314f53e94350ce51ec87" translate="yes" xml:space="preserve">
          <source>Alternatively, you may attach event handlers during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrapping process&lt;/a&gt; after the application instance is created. For example:</source>
          <target state="translated">또는 애플리케이션 인스턴스가 작성된 후 &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;부트 스트랩 프로세스&lt;/a&gt; 중에 이벤트 핸들러를 첨부 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="79c43c5191036dd4f0991db1c610a68306f8f3c9" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the following more &quot;classic&quot; syntax to perform ad hoc data validation:</source>
          <target state="translated">또는 다음과 같은 &quot;클래식&quot;구문을 사용하여 임시 데이터 유효성 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05d375712f127c63526124e97277c237770534ed" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the following more &quot;classic&quot; syntax to perform ad-hoc data validation:</source>
          <target state="translated">또는 다음과 같은 &quot;클래식&quot;구문을 사용하여 임시 데이터 유효성 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1986782af17e3e09c03278962231b9042e55a8b" translate="yes" xml:space="preserve">
          <source>Alternatives are searched using the following steps:</source>
          <target state="translated">대체는 다음 단계를 사용하여 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="d8aef0bafdb8a209f9fe0e79528fd32a11e9b3a4" translate="yes" xml:space="preserve">
          <source>Always call the parent constructor &lt;em&gt;at the end&lt;/em&gt; of your overriding constructor.</source>
          <target state="translated">항상 재정의 생성자 &lt;em&gt;의 끝에서&lt;/em&gt; 부모 생성자 &lt;em&gt;를&lt;/em&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="f84b5f4859a3bc59abcb3bbccd2c6627f3ada54e" translate="yes" xml:space="preserve">
          <source>Among the above steps, if any error occurs, a &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; will be thrown, indicating the failure of the routing process.</source>
          <target state="translated">위 단계 중 오류가 발생 하면 라우팅 프로세스의 실패를 나타내는 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="68db5115f7d4b6e2c091e3ce0a8e9eec3a46ecc8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Upload&lt;/code&gt; object is usually created by calling &lt;a href=&quot;yii-mongodb-file-collection#createUpload()-detail&quot;&gt;yii\mongodb\file\Collection::createUpload()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Upload&lt;/code&gt; 객체는 일반적으로 호출하여 생성 &lt;a href=&quot;yii-mongodb-file-collection#createUpload()-detail&quot;&gt;YII \ MongoDB를 \ 파일 \ 컬렉션 :: createUpload ()을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f7b917116f3b793bcdc16396a6d52a053b995c3" translate="yes" xml:space="preserve">
          <source>An ActiveQuery can be a normal query or be used in a relational context.</source>
          <target state="translated">ActiveQuery는 일반 쿼리이거나 관계형 컨텍스트에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="f5e3e0045eb3628e06f8996fcb72c6b51361e92d" translate="yes" xml:space="preserve">
          <source>An HTML hyperlink that can be displayed on your Web page showing &quot;Powered by Yii Framework&quot; information</source>
          <target state="translated">&quot;Powered by Yii Framework&quot;정보를 보여주는 웹 페이지에 표시 될 수있는 HTML 하이퍼 링크</target>
        </trans-unit>
        <trans-unit id="3827428f9514996f16e7313c06a61493b11d9f31" translate="yes" xml:space="preserve">
          <source>An ID that identifies a Memcached instance.</source>
          <target state="translated">Memcached 인스턴스를 식별하는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="e2e0b802f5121fe7c455865fb79ef40fb7501b32" translate="yes" xml:space="preserve">
          <source>An ID that identifies a Memcached instance. This property is used only when &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$useMemcached&lt;/a&gt; is true. By default the Memcached instances are destroyed at the end of the request. To create an instance that persists between requests, you may specify a unique ID for the instance. All instances created with the same ID will share the same connection.</source>
          <target state="translated">Memcached 인스턴스를 식별하는 ID입니다. 이 속성은 &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$ useMemcached&lt;/a&gt; 가 true 인 경우에만 사용됩니다 . 기본적으로 Memcached 인스턴스는 요청 끝에서 삭제됩니다. 요청간에 지속되는 인스턴스를 작성하려면 인스턴스의 고유 ID를 지정할 수 있습니다. 동일한 ID로 생성 된 모든 인스턴스는 동일한 연결을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="39e68202ebe7dcd417bc556c1b5a2fe608c83388" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies a user identity.</source>
          <target state="translated">사용자 ID를 고유하게 식별하는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="f1bb64465f8820d0603bb5df7aff1fa106203f01" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies the data provider among all data providers.</source>
          <target state="translated">모든 데이터 공급자 중에서 데이터 공급자를 고유하게 식별하는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="4e8d4e569a9b7e3cdd951196b309931ecfd7c7e6" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies the data provider among all data providers. Generated automatically the following way in case it is not set:</source>
          <target state="translated">모든 데이터 공급자 중에서 데이터 공급자를 고유하게 식별하는 ID입니다. 설정되지 않은 경우 다음과 같은 방법으로 자동 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="55895ddbe561fe9e1a349f6a518751396f53ba0e" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies this code file.</source>
          <target state="translated">이 코드 파일을 고유하게 식별하는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="994046f96305a62076f9545c9db3320de4aeb42f" translate="yes" xml:space="preserve">
          <source>An ID that uniquely identifies this module among other modules which have the same &lt;a href=&quot;yii-base-module#%24module-detail&quot;&gt;parent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-module#%24module-detail&quot;&gt;부모&lt;/a&gt; 가 같은 다른 모듈 중에서이 모듈을 고유하게 식별하는 ID입니다 .</target>
        </trans-unit>
        <trans-unit id="b6641f53a376ff2b925592e023ec06e8137e5272" translate="yes" xml:space="preserve">
          <source>An action filter will participate in the action execution workflow by responding to the &lt;code&gt;beforeAction&lt;/code&gt; and &lt;code&gt;afterAction&lt;/code&gt; events triggered by modules and controllers.</source>
          <target state="translated">액션 필터는 응답으로 작업 실행 워크 플로우에 참여 &lt;code&gt;beforeAction&lt;/code&gt; 및 &lt;code&gt;afterAction&lt;/code&gt; 모듈 및 컨트롤러에 의해 트리거 이벤트.</target>
        </trans-unit>
        <trans-unit id="76583a56230ab0c84d077b55ce3437dcbea6caa8" translate="yes" xml:space="preserve">
          <source>An action is often designed to perform a particular manipulation of a resource. For this reason, action IDs are usually verbs, such as &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, etc.</source>
          <target state="translated">활동은 종종 특정 자원 조작을 수행하도록 설계되었습니다. 이러한 이유로 활동 ID는 일반적으로 &lt;code&gt;view&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; 등과 같은 동사입니다 .</target>
        </trans-unit>
        <trans-unit id="ad2acdfb536ae1ee00f3549e05e518cd37a02b89" translate="yes" xml:space="preserve">
          <source>An active attribute is one that is subject to validation in the current scenario. The returned array should be in the following format:</source>
          <target state="translated">활성 속성은 현재 시나리오에서 유효성을 검사해야하는 속성입니다. 반환 된 배열은 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="15d4ac9aa881b90dc995721b888a5caac29fb9a2" translate="yes" xml:space="preserve">
          <source>An alias is automatically defined for each &lt;a href=&quot;guide-structure-extensions&quot;&gt;extension&lt;/a&gt; that is installed via Composer. Each alias is named after the root namespace of the extension as declared in its &lt;code&gt;composer.json&lt;/code&gt; file, and each alias represents the root directory of the package. For example, if you install the &lt;code&gt;yiisoft/yii2-jui&lt;/code&gt; extension, you will automatically have the alias &lt;code&gt;@yii/jui&lt;/code&gt; defined during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrapping&lt;/a&gt; stage, equivalent to:</source>
          <target state="translated">작성기는 Composer를 통해 설치된 각 &lt;a href=&quot;guide-structure-extensions&quot;&gt;확장&lt;/a&gt; 에 대해 자동으로 정의됩니다 . 각 별명은 &lt;code&gt;composer.json&lt;/code&gt; 파일에 선언 된 확장의 루트 네임 스페이스 이름을 따서 지정 되며 각 별명은 패키지의 루트 디렉토리를 나타냅니다. 예를 들어, &lt;code&gt;yiisoft/yii2-jui&lt;/code&gt; 확장 을 설치 하면 &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;부트 스트랩&lt;/a&gt; 단계에서 다음과 같은 &lt;code&gt;@yii/jui&lt;/code&gt; 별칭이 자동으로 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="e45d08c213e323935a70d0d53a9dbdc11a20cf39" translate="yes" xml:space="preserve">
          <source>An anonymous function can be used in the grouping array as well.</source>
          <target state="translated">익명 배열은 그룹화 배열에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e37a78e43927d066fb74c4ccccb8523ecc437e6" translate="yes" xml:space="preserve">
          <source>An anonymous function can be used in the grouping array as well:</source>
          <target state="translated">익명 배열은 그룹화 배열에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b3fa12355abbaf51626b5f0585390b7306e300c" translate="yes" xml:space="preserve">
          <source>An anonymous function or a string that is used to determine the value to display in the current column.</source>
          <target state="translated">현재 열에 표시 할 값을 결정하는 데 사용되는 익명 함수 또는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b032769fab5a8a55d09627d1a24f55398666cf84" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that returns the client validation code.</source>
          <target state="translated">클라이언트 유효성 검사 코드를 반환하는 익명 함수 또는 모델 클래스 메서드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9556326967ea8855f2fe17a373b7f4f6ae574b34" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that returns the client validation code. The signature of the method should be like the following:</source>
          <target state="translated">클라이언트 유효성 검사 코드를 반환하는 익명 함수 또는 모델 클래스 메서드의 이름입니다. 메소드의 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="63ffc7ecc2dbdb7f2726700e7689e8567f4b12e2" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that will be called to perform the actual validation.</source>
          <target state="translated">실제 유효성 검사를 수행하기 위해 호출되는 익명 함수 또는 모델 클래스 메서드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e106efbd82afcbd0a191d1e850798bd349daaea8" translate="yes" xml:space="preserve">
          <source>An anonymous function or the name of a model class method that will be called to perform the actual validation. The signature of the method should be like the following:</source>
          <target state="translated">실제 유효성 검사를 수행하기 위해 호출되는 익명 함수 또는 모델 클래스 메서드의 이름입니다. 메소드의 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="37609269ef4e8aa8f629a9935f45706e4db8b1a7" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once AFTER rendering each data model.</source>
          <target state="translated">각 데이터 모델을 렌더링 한 후 한 번 호출되는 익명 함수입니다.</target>
        </trans-unit>
        <trans-unit id="da216a5b133b1c870b3ccd508838592e7461f0fd" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once AFTER rendering each data model. It should have the similar signature as &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$rowOptions&lt;/a&gt;. The return result of the function will be rendered directly.</source>
          <target state="translated">각 데이터 모델을 렌더링 한 후 한 번 호출되는 익명 함수입니다. &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$ rowOptions&lt;/a&gt; 와 비슷한 서명이 있어야합니다 . 함수의 반환 결과는 직접 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="9f390b9f47fb8d5ae21fd8606abfcdcf6bbf0458" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model.</source>
          <target state="translated">각 데이터 모델을 렌더링하기 전에 한 번 호출되는 익명 함수입니다.</target>
        </trans-unit>
        <trans-unit id="de3dcd4ae79c94678f4545a40d7162ce8726a7b0" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model. It should have the following signature:</source>
          <target state="translated">각 데이터 모델을 렌더링하기 전에 한 번 호출되는 익명 함수입니다. 다음과 같은 서명이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4ca229868fdb965d285b11aa16685e19387792b0" translate="yes" xml:space="preserve">
          <source>An anonymous function that is called once BEFORE rendering each data model. It should have the similar signature as &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$rowOptions&lt;/a&gt;. The return result of the function will be rendered directly.</source>
          <target state="translated">각 데이터 모델을 렌더링하기 전에 한 번 호출되는 익명 함수입니다. &lt;a href=&quot;yii-grid-gridview#%24rowOptions-detail&quot;&gt;$ rowOptions&lt;/a&gt; 와 비슷한 서명이 있어야합니다 . 함수의 반환 결과는 직접 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="e34c2855e943fe65b1de67dc9d4d3cf9fbde5001" translate="yes" xml:space="preserve">
          <source>An anonymous function will be called after the config was created. The signature should be: &lt;code&gt;function($config)&lt;/code&gt; where &lt;code&gt;$config&lt;/code&gt; will be an instance of &lt;code&gt;HTMLPurifier_Config&lt;/code&gt;.</source>
          <target state="translated">구성이 생성 된 후 익명 함수가 호출됩니다. 서명은 &lt;code&gt;function($config)&lt;/code&gt; 이어야합니다. 여기서 &lt;code&gt;$config&lt;/code&gt; 는 &lt;code&gt;HTMLPurifier_Config&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="dad1b0c757a6277bd06227c04820722580d4926e" translate="yes" xml:space="preserve">
          <source>An application component is created the first time it is accessed through the above expression. Any further accesses will return the same component instance.</source>
          <target state="translated">응용 프로그램 구성 요소는 위 식을 통해 처음 액세스 할 때 만들어집니다. 추가 액세스는 동일한 구성 요소 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01cc576b282109eafacf8514a86726101330e5ca" translate="yes" xml:space="preserve">
          <source>An application triggers several events during the lifecycle of handling a request. You may attach event handlers to these events in application configurations as follows:</source>
          <target state="translated">응용 프로그램은 요청 처리 수명주기 동안 여러 이벤트를 트리거합니다. 다음과 같이 응용 프로그램 구성에서 이러한 이벤트에 이벤트 처리기를 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4939fe8718deb509a193bdbe180c91916018c9f3" translate="yes" xml:space="preserve">
          <source>An arbitrary string to convert</source>
          <target state="translated">변환 할 임의의 문자열</target>
        </trans-unit>
        <trans-unit id="f5eac93d14543fe046d28ada4ff59f2f51633b76" translate="yes" xml:space="preserve">
          <source>An array containing formatting values. You can pass any of the &lt;code&gt;FG_*&lt;/code&gt;, &lt;code&gt;BG_*&lt;/code&gt; and &lt;code&gt;TEXT_*&lt;/code&gt; constants and also &lt;a href=&quot;yii-helpers-baseconsole#xtermFgColor()-detail&quot;&gt;xtermFgColor()&lt;/a&gt; and &lt;a href=&quot;yii-helpers-baseconsole#xtermBgColor()-detail&quot;&gt;xtermBgColor()&lt;/a&gt; to specify a format.</source>
          <target state="translated">포맷팅 값을 포함하는 배열입니다. 당신은 어떤 전달할 수 &lt;code&gt;FG_*&lt;/code&gt; , &lt;code&gt;BG_*&lt;/code&gt; 및 &lt;code&gt;TEXT_*&lt;/code&gt; 또한 상수와 &lt;a href=&quot;yii-helpers-baseconsole#xtermFgColor()-detail&quot;&gt;xtermFgColor ()&lt;/a&gt; 및 &lt;a href=&quot;yii-helpers-baseconsole#xtermBgColor()-detail&quot;&gt;xtermBgColor ()&lt;/a&gt; 형식을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f16780050f50f5c622df86abf6605f999c632958" translate="yes" xml:space="preserve">
          <source>An array containing items extracted, or &lt;code&gt;FALSE&lt;/code&gt; on error.</source>
          <target state="translated">추출 된 항목을 포함하는 배열이거나 오류가 발생하면 &lt;code&gt;FALSE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c62a8cb4a800b954b103106c14ab0f1f060b6693" translate="yes" xml:space="preserve">
          <source>An array is associative if all its keys are strings. If &lt;code&gt;$allStrings&lt;/code&gt; is false, then an array will be treated as associative if at least one of its keys is a string.</source>
          <target state="translated">모든 키가 문자열이면 배열은 연관됩니다. 경우 &lt;code&gt;$allStrings&lt;/code&gt; 거짓의 키 중 적어도 하나가 문자열 인 경우, 다음 배열 연관으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="bea73ff8efa8d1cfa55a156a2b82d8f411743fb7" translate="yes" xml:space="preserve">
          <source>An array is indexed if all its keys are integers. If &lt;code&gt;$consecutive&lt;/code&gt; is true, then the array keys must be a consecutive sequence starting from 0.</source>
          <target state="translated">모든 키가 정수이면 배열이 색인됩니다. 경우 &lt;code&gt;$consecutive&lt;/code&gt; 사실이다, 다음 배열의 키는 0부터 시작하는 연속적인 순서해야합니다.</target>
        </trans-unit>
        <trans-unit id="10a085e7f12731a15243aa39b98a39b18be5e94d" translate="yes" xml:space="preserve">
          <source>An array of ($width, $height) or false when it was not able to determine size.</source>
          <target state="translated">크기를 결정할 수없는 경우 ($ width, $ height) 배열 또는 false입니다.</target>
        </trans-unit>
        <trans-unit id="046b41e47941ac92f1a0461797e9d7df957763e6" translate="yes" xml:space="preserve">
          <source>An array of ActiveRecord instance, or an empty array if nothing matches.</source>
          <target state="translated">ActiveRecord 인스턴스의 배열이거나 일치하는 것이 없으면 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="99c5694acf151e5c6d9c2fe47335dbd980a78453" translate="yes" xml:space="preserve">
          <source>An array of ActiveRecord instances, or an empty array if nothing matches.</source>
          <target state="translated">ActiveRecord 인스턴스의 배열이거나 일치하는 것이 없으면 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b2af5b72183736f66ca9dd0090eaa9310265ed39" translate="yes" xml:space="preserve">
          <source>An array of action IDs entered by the user</source>
          <target state="translated">사용자가 입력 한 작업 ID 배열</target>
        </trans-unit>
        <trans-unit id="715de38ab6f60ca186ae18b45bab38b4cdb659eb" translate="yes" xml:space="preserve">
          <source>An array of an additional data stored in a cache entry or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">캐시 엔트리 또는 저장 부가 데이터 배열 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33157dc338986f271f067a56cb6a1e52f66e1806" translate="yes" xml:space="preserve">
          <source>An array of groups to maintain a statistics aggregation for.</source>
          <target state="translated">통계 집계를 유지할 그룹의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="51c051f2cd17dba0d519142fab581cb14d022385" translate="yes" xml:space="preserve">
          <source>An array of models to be validated.</source>
          <target state="translated">검증 할 모델의 배열.</target>
        </trans-unit>
        <trans-unit id="a2ce0ef4a8b39eec50b14b5b07c0af7ac1c66fbf" translate="yes" xml:space="preserve">
          <source>An array of parameter values indexed by parameter names</source>
          <target state="translated">매개 변수 이름으로 색인화 된 매개 변수 값의 배열</target>
        </trans-unit>
        <trans-unit id="8536afd2bbd21a4482c411826842304aa0ebc1d0" translate="yes" xml:space="preserve">
          <source>An array of primaryKey values</source>
          <target state="translated">primaryKey 값의 배열</target>
        </trans-unit>
        <trans-unit id="9924bfb27ac9b41b17797097522a6480a842f0be" translate="yes" xml:space="preserve">
          <source>An array of related records indexed by relation names.</source>
          <target state="translated">관계 이름으로 색인화 된 관련 레코드의 배열.</target>
        </trans-unit>
        <trans-unit id="c0945d5d8b916c265e6eb9817e02b83479750152" translate="yes" xml:space="preserve">
          <source>An array of strings that should be concatenated and converted to generate the slug value.</source>
          <target state="translated">슬러그 값을 생성하기 위해 연결되고 변환되어야하는 문자열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ed2c9608710e998feea635b70cb4b7fa0af7d39f" translate="yes" xml:space="preserve">
          <source>An array of two elements. The first element is the maximum number of allowed requests, and the second element is the size of the window in seconds.</source>
          <target state="translated">두 요소의 배열 첫 번째 요소는 허용 된 최대 요청 수이고 두 번째 요소는 창 크기 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="75f47cd6a30047ea025987c5bc0fe9c1b65613ad" translate="yes" xml:space="preserve">
          <source>An array of two elements. The first element is the number of allowed requests, and the second element is the corresponding UNIX timestamp.</source>
          <target state="translated">두 요소의 배열 첫 번째 요소는 허용 된 요청 수이고 두 번째 요소는 해당 UNIX 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="91f49a67f81589d1280a87e801247fb4628f7f99" translate="yes" xml:space="preserve">
          <source>An array of two or three operands</source>
          <target state="translated">2 개 또는 3 개의 피연산자 배열</target>
        </trans-unit>
        <trans-unit id="8b8864a89d7361beb1877170b5770d9d0c552067" translate="yes" xml:space="preserve">
          <source>An array will be passed to the &lt;code&gt;HTMLPurifier_Config::create()&lt;/code&gt; method.</source>
          <target state="translated">배열은 &lt;code&gt;HTMLPurifier_Config::create()&lt;/code&gt; 메소드 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="8421ad68caadfb8b4285de09200615dd0ad19075" translate="yes" xml:space="preserve">
          <source>An asset bundle can depend on other asset bundles. When registering an asset bundle with a view, all its dependent asset bundles will be automatically registered.</source>
          <target state="translated">자산 번들은 다른 자산 번들에 의존 할 수 있습니다. 보기로 자산 번들을 등록하면 모든 종속 자산 번들이 자동으로 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="5d7acac1b525a25d5ac564c48d5a327b4a522553" translate="yes" xml:space="preserve">
          <source>An asset in Yii is a file that may be referenced in a Web page. It can be a CSS file, a JavaScript file, an image or video file, etc. Assets are located in Web-accessible directories and are directly served by Web servers.</source>
          <target state="translated">Yii의 자산은 웹 페이지에서 참조 할 수있는 파일입니다. CSS 파일, JavaScript 파일, 이미지 또는 비디오 파일 등일 수 있습니다. 자산은 웹 액세스 가능 디렉토리에 있으며 웹 서버에서 직접 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6b5379254c0e5de439311a6f9ebf70a624e9dce0" translate="yes" xml:space="preserve">
          <source>An associative array of parameters that will be merged with the current GET parameters. If a parameter value is null, the corresponding GET parameter will be removed.</source>
          <target state="translated">현재 GET 매개 변수와 병합 될 매개 변수의 연관 배열. 매개 변수 값이 널이면 해당 GET 매개 변수가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="401f9d82acc07a615b38c7fbf7727c3f010cf5af" translate="yes" xml:space="preserve">
          <source>An attribute can also be specified in terms of an array with the following elements:</source>
          <target state="translated">다음 요소를 사용하여 배열 측면에서 속성을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b877818fdea233e29560b1b665ce3fa3a7f984af" translate="yes" xml:space="preserve">
          <source>An attribute can be specified as a string in the format of &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;attribute:format&lt;/code&gt; or &lt;code&gt;attribute:format:label&lt;/code&gt;, where &lt;code&gt;attribute&lt;/code&gt; refers to the attribute name, and &lt;code&gt;format&lt;/code&gt; represents the format of the attribute. The &lt;code&gt;format&lt;/code&gt; is passed to the &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;yii\i18n\Formatter::format()&lt;/a&gt; method to format an attribute value into a displayable text. Please refer to &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; for the supported types. Both &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;label&lt;/code&gt; are optional. They will take default values if absent.</source>
          <target state="translated">속성은 형식의 문자열로 지정할 수있는 &lt;code&gt;attribute&lt;/code&gt; , &lt;code&gt;attribute:format&lt;/code&gt; 이나 &lt;code&gt;attribute:format:label&lt;/code&gt; , &lt;code&gt;attribute&lt;/code&gt; 속성 이름을 참조를하고, &lt;code&gt;format&lt;/code&gt; 속성의 형식을 나타냅니다. 이 &lt;code&gt;format&lt;/code&gt; 은 속성 값을 표시 가능한 텍스트로 &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;형식화&lt;/a&gt; 하기 위해 yii \ i18n \ Formatter :: format () 메소드로 전달됩니다. 지원되는 유형은 &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt; 를 참조하십시오 . 두 &lt;code&gt;format&lt;/code&gt; 및 &lt;code&gt;label&lt;/code&gt; 선택 사항입니다. 없는 경우 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="853a1ed3b40f731c7d8ec6faf07576f1060842bc" translate="yes" xml:space="preserve">
          <source>An attribute expression is an attribute name prefixed and/or suffixed with array indexes. It is mainly used in tabular data input and/or input of array type. Below are some examples:</source>
          <target state="translated">속성 표현식은 속성 색인이 접두사 및 / 또는 배열 색인으로 끝나는 속성 이름입니다. 주로 테이블 형식의 데이터 입력 및 / 또는 배열 유형의 입력에 사용됩니다. 다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="6921fb2e3b72ba55aeff2e010b8a995cc70d53ea" translate="yes" xml:space="preserve">
          <source>An attribute will be validated if and only if it is an active attribute declared in &lt;code&gt;scenarios()&lt;/code&gt; and is associated with one or multiple active rules declared in &lt;code&gt;rules()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scenarios()&lt;/code&gt; 선언 된 활성 속성 이고 &lt;code&gt;rules()&lt;/code&gt; 선언 된 하나 이상의 활성 규칙과 연관된 경우에만 속성의 유효성이 검사됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ae179cc9f6087ab3883ac7a187654a3fd14a97a" translate="yes" xml:space="preserve">
          <source>An easy rule to remember this is, as you see in the example above, you write the column that belongs to the related Active Record directly next to it. You see there that &lt;code&gt;customer_id&lt;/code&gt; is a property of &lt;code&gt;Order&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is a property of &lt;code&gt;Customer&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 볼 수 있듯이이를 기억하기 쉬운 규칙은 관련 활성 레코드에 속하는 열을 바로 옆에 작성하는 것입니다. 당신은 거기 참조 &lt;code&gt;customer_id&lt;/code&gt; 의 한 속성입니다 &lt;code&gt;Order&lt;/code&gt; 및 &lt;code&gt;id&lt;/code&gt; 의 한 속성입니다 &lt;code&gt;Customer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef701d29b8c899351081d907d3ed4c2615ff4474" translate="yes" xml:space="preserve">
          <source>An error code describing the status of this file uploading.</source>
          <target state="translated">이 파일 업로드 상태를 설명하는 오류 코드입니다.</target>
        </trans-unit>
        <trans-unit id="599042e6528008689b690678ed4ca7dc49a7b63e" translate="yes" xml:space="preserve">
          <source>An error message is typically logged when an unrecoverable error occurs during the execution of an application.</source>
          <target state="translated">일반적으로 응용 프로그램을 실행하는 동안 복구 할 수없는 오류가 발생하면 오류 메시지가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="7a376eb8d7345ba7370c5c22bae6def44179d869" translate="yes" xml:space="preserve">
          <source>An even easier way of implementing transactional migrations is to put migration code in the &lt;code&gt;safeUp()&lt;/code&gt; and &lt;code&gt;safeDown()&lt;/code&gt; methods. These two methods differ from &lt;code&gt;up()&lt;/code&gt; and &lt;code&gt;down()&lt;/code&gt; in that they are enclosed implicitly in a transaction. As a result, if any operation in these methods fails, all prior operations will be rolled back automatically.</source>
          <target state="translated">트랜잭션 마이그레이션을 구현하는 더 쉬운 방법은 &lt;code&gt;safeUp()&lt;/code&gt; 및 &lt;code&gt;safeDown()&lt;/code&gt; 메서드 에 마이그레이션 코드를 넣는 것 입니다. 이 두 메소드 는 트랜잭션에 내재적으로 포함되어 있다는 점에서 &lt;code&gt;up()&lt;/code&gt; 및 &lt;code&gt;down()&lt;/code&gt; 과 다릅니다 . 결과적으로 이러한 방법의 작업이 실패하면 모든 이전 작업이 자동으로 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="a32bdea2615c873d270a8123bc4c08aa2929884b" translate="yes" xml:space="preserve">
          <source>An event handler is a &lt;a href=&quot;http://www.php.net/manual/en/language.types.callable.php&quot;&gt;PHP callback&lt;/a&gt; that gets executed when the event it is attached to is triggered. You can use any of the following callbacks:</source>
          <target state="translated">이벤트 핸들러는 연결된 이벤트가 트리거 될 때 실행 되는 &lt;a href=&quot;http://www.php.net/manual/en/language.types.callable.php&quot;&gt;PHP 콜백&lt;/a&gt; 입니다. 다음 콜백 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08166f995bafeb8640256560deac714b3f1e3c44" translate="yes" xml:space="preserve">
          <source>An event is identified by a name that should be unique within the class it is defined at. Event names are &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="translated">이벤트는 정의 된 클래스 내에서 고유해야하는 이름으로 식별됩니다. 이벤트 이름은 &lt;em&gt;대소 문자를 구분&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="deac1aa683c442f226ce0e882f0ee490f323a460" translate="yes" xml:space="preserve">
          <source>An event raised after executing a controller action.</source>
          <target state="translated">컨트롤러 작업을 실행 한 후 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="f033c843da0efb9e38fc36c7fa265b755d44c3e7" translate="yes" xml:space="preserve">
          <source>An event raised after the application successfully handles a request (before the response is sent out).</source>
          <target state="translated">애플리케이션이 요청을 성공적으로 처리 한 후 (응답이 전송되기 전에) 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="1449dc2fc910e8ad05867a955ff0b5cc6c8b1733" translate="yes" xml:space="preserve">
          <source>An event raised at the beginning of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate ()&lt;/a&gt; 시작시 발생하는 이벤트 입니다.</target>
        </trans-unit>
        <trans-unit id="99968d4de62e7f07dd41a1afa51e7b86f6516926" translate="yes" xml:space="preserve">
          <source>An event raised at the beginning of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be false to stop the validation.</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate ()&lt;/a&gt; 시작시 발생하는 이벤트 입니다. 유효성 검사를 중지하기 위해 &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt; 를 false로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c1e77871b4dee3a44a0a6dae39bb8e9673311d1" translate="yes" xml:space="preserve">
          <source>An event raised at the end of &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate ()&lt;/a&gt; 의 끝에서 발생한 이벤트</target>
        </trans-unit>
        <trans-unit id="8d4f2b3bbca5bccfe7af783e688a14939ac01eca" translate="yes" xml:space="preserve">
          <source>An event raised before executing a controller action.</source>
          <target state="translated">컨트롤러 작업을 실행하기 전에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="d3635a1ac16cc82cc4ccb2265fd42b1951c3164d" translate="yes" xml:space="preserve">
          <source>An event raised before executing a controller action. You may set &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to cancel the action execution.</source>
          <target state="translated">컨트롤러 작업을 실행하기 전에 발생한 이벤트입니다. 조치 실행을 취소 하기 위해 &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii \ base \ ActionEvent :: $ isValid&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="566ae54926a8d4c3aa0c38e52be7d8142ad4d05e" translate="yes" xml:space="preserve">
          <source>An event raised before the application starts to handle a request.</source>
          <target state="translated">애플리케이션이 요청을 처리하기 전에 발생하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="c6a511137f8b53b1e23ca8cdd525cf2278c1f413" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a controller action.</source>
          <target state="translated">컨트롤러 작업을 실행 한 직후에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="3f3b7a3aacf5fe675e113cfee5dcfd81bb030dfe" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a widget.</source>
          <target state="translated">위젯을 실행 한 직후에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="1e6221131ed8cdddec54aa8caee33a1299bad447" translate="yes" xml:space="preserve">
          <source>An event raised right after executing a widget. (available since version 2.0.11)</source>
          <target state="translated">위젯을 실행 한 직후에 발생한 이벤트입니다. (버전 2.0.11부터 사용 가능)</target>
        </trans-unit>
        <trans-unit id="46996b5ef305329c3c1b515f170f201bf600ce2f" translate="yes" xml:space="preserve">
          <source>An event raised right after request has been sent.</source>
          <target state="translated">요청이 전송 된 직후에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="8f9a7deca3f26dd6de89ff74762d7a8fee713256" translate="yes" xml:space="preserve">
          <source>An event raised right after send.</source>
          <target state="translated">전송 직후에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="25e7e64cde22f3c8acffd0d68487bf2e1fefd6d2" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a controller action.</source>
          <target state="translated">컨트롤러 작업을 실행하기 직전에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="860fb413364a70b9476b439f28f7f972320a63cb" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a controller action. You may set &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; to be false to cancel the action execution.</source>
          <target state="translated">컨트롤러 작업을 실행하기 직전에 발생한 이벤트입니다. 조치 실행을 취소하기 위해 &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii \ base \ ActionEvent :: $ isValid&lt;/a&gt; 를 false로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3933ded45ebfe0221e194511f4c49c2f07224904" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a widget. (available since version 2.0.11)</source>
          <target state="translated">위젯을 실행하기 직전에 발생한 이벤트입니다. (버전 2.0.11부터 사용 가능)</target>
        </trans-unit>
        <trans-unit id="8774dd88209dff3924a73a6a38fc315f47b8d730" translate="yes" xml:space="preserve">
          <source>An event raised right before executing a widget. You may set &lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;yii\base\WidgetEvent::$isValid&lt;/a&gt; to be false to cancel the widget execution.</source>
          <target state="translated">위젯을 실행하기 직전에 발생한 이벤트입니다. 위젯 실행을 취소하기 위해 &lt;a href=&quot;yii-base-widgetevent#%24isValid-detail&quot;&gt;yii \ base \ WidgetEvent :: $ isValid&lt;/a&gt; 를 false로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f9b7a2388b140c536366cf03c3407988ea1aa42" translate="yes" xml:space="preserve">
          <source>An event raised right before send.</source>
          <target state="translated">보내기 직전에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e369522a4beba6aebadedc2a249177dc5f90017b" translate="yes" xml:space="preserve">
          <source>An event raised right before send. You may set &lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;yii\mail\MailEvent::$isValid&lt;/a&gt; to be false to cancel the send.</source>
          <target state="translated">보내기 직전에 발생한 이벤트입니다. 송신을 취소하기 위해 &lt;a href=&quot;yii-mail-mailevent#%24isValid-detail&quot;&gt;yii \ mail \ MailEvent :: $ isValid&lt;/a&gt; 를 false로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6dc8cc7aa2e86db639d61807b374574a258c3a8a" translate="yes" xml:space="preserve">
          <source>An event raised right before sending request.</source>
          <target state="translated">요청을 보내기 직전에 발생한 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="9887e8e503bd77f541dc42e342a6645c4507fb9e" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a DB connection is established</source>
          <target state="translated">DB 연결이 설정된 후 트리거되는 이벤트</target>
        </trans-unit>
        <trans-unit id="65bc024f2f13dd05fd7f111fe008d511f8e006a8" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is deleted.</source>
          <target state="translated">레코드가 삭제 된 후 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="97cb1751ddf82f9b602c9d537a2bdf74195a7d57" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is inserted.</source>
          <target state="translated">레코드가 삽입 된 후 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="5943462b4eb622215f5a84e95ba4a02c9d33178f" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is refreshed.</source>
          <target state="translated">레코드를 새로 고친 후 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="21dd6ce07c85616b62e6fdbf964a995541362810" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is refreshed. (available since version 2.0.8)</source>
          <target state="translated">레코드를 새로 고친 후 트리거되는 이벤트입니다. (버전 2.0.8부터 사용 가능)</target>
        </trans-unit>
        <trans-unit id="1b6196e2b362bfe92b26e78fb39da27ffe52b4d5" translate="yes" xml:space="preserve">
          <source>An event that is triggered after a record is updated.</source>
          <target state="translated">레코드가 업데이트 된 후 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="492519361bac0922ab23bd66b7e960ac7316a9f3" translate="yes" xml:space="preserve">
          <source>An event that is triggered after the record is created and populated with query result.</source>
          <target state="translated">레코드가 작성되고 쿼리 결과로 채워진 후에 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="5d21f7692687805719ec350a27d147bc551b2c8e" translate="yes" xml:space="preserve">
          <source>An event that is triggered at the beginning of &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send ()&lt;/a&gt; 시작시 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="716168179796383cdd97ff1aaf041bc6449130ab" translate="yes" xml:space="preserve">
          <source>An event that is triggered at the end of &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send ()&lt;/a&gt; 끝에서 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="ab366a52d6394e8f3411a089f0b4339b46526e2e" translate="yes" xml:space="preserve">
          <source>An event that is triggered before deleting a record.</source>
          <target state="translated">레코드를 삭제하기 전에 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="d036f8be460625fa788dca7379160b3e22536e09" translate="yes" xml:space="preserve">
          <source>An event that is triggered before deleting a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the deletion.</source>
          <target state="translated">레코드를 삭제하기 전에 트리거되는 이벤트입니다. 삭제를 중지 하기 위해 &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3dbb4ac469558e3dacef1b72a69c21f235f558ad" translate="yes" xml:space="preserve">
          <source>An event that is triggered before inserting a record.</source>
          <target state="translated">레코드를 삽입하기 전에 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="689e4e8c03e4549a90b04fefc1f24f1169614399" translate="yes" xml:space="preserve">
          <source>An event that is triggered before inserting a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the insertion.</source>
          <target state="translated">레코드를 삽입하기 전에 트리거되는 이벤트입니다. 삽입을 중지 하기 위해 &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16371a4b6966ba70ab9ae4b35904b6fa382b0b9c" translate="yes" xml:space="preserve">
          <source>An event that is triggered before updating a record.</source>
          <target state="translated">레코드를 업데이트하기 전에 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="60ab674ad814692c449cbe1d1dd92fdb556c0420" translate="yes" xml:space="preserve">
          <source>An event that is triggered before updating a record. You may set &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii\base\ModelEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt; to stop the update.</source>
          <target state="translated">레코드를 업데이트하기 전에 트리거되는 이벤트입니다. 업데이트를 중지 하기 위해 &lt;a href=&quot;yii-base-modelevent#%24isValid-detail&quot;&gt;yii \ base \ ModelEvent :: $ isValid&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2d439087f0bb0c3cb16512b6bf3ea4989cea6e" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#beginPage()-detail&quot;&gt;beginPage()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-view#beginPage()-detail&quot;&gt;beginPage ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="2bcbca47e88f03367b02989538d51f040c3c4d58" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#endPage()-detail&quot;&gt;endPage()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-view#endPage()-detail&quot;&gt;endPage ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="1a903ff9f55ec9d42c06db9f82fb5c475d62a939" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; right after it renders a view file.</source>
          <target state="translated">뷰 파일을 렌더링 한 직후 &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="622e7dac74cf4b702f26e160bd643614f6d87351" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; right before it renders a view file.</source>
          <target state="translated">뷰 파일을 렌더링하기 직전 에 &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="1028dfcc1c0cc4c6528327f2be5758b9ce9f6716" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-web-view#beginBody()-detail&quot;&gt;beginBody()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-view#beginBody()-detail&quot;&gt;beginBody ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="a77ba61ccf7b2e3c73e21d5e51ff1ba8f942c675" translate="yes" xml:space="preserve">
          <source>An event that is triggered by &lt;a href=&quot;yii-web-view#endBody()-detail&quot;&gt;endBody()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-view#endBody()-detail&quot;&gt;endBody ()&lt;/a&gt; 에 의해 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="5475da88f1687b2785f3f2206a690b2447a9958a" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after &lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare()&lt;/a&gt; is called in &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare ()&lt;/a&gt; 직후 트리거 된 이벤트 는 &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send ()&lt;/a&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad0456d6fac6f89ecbdb746d0d763ef978bb48cb" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after &lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare()&lt;/a&gt; is called in &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt;. You may respond to this event to filter the response content before it is sent to the client.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#prepare()-detail&quot;&gt;prepare ()&lt;/a&gt; 직후 트리거 된 이벤트 는 &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send ()&lt;/a&gt; 에서 호출됩니다 . 이 이벤트에 응답하여 응답 컨텐츠를 클라이언트에 보내기 전에 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f141ea16aec8f61049ba4a255bb5744729d4dee" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after a top-level transaction is committed</source>
          <target state="translated">최상위 트랜잭션이 커밋 된 직후 트리거되는 이벤트</target>
        </trans-unit>
        <trans-unit id="2058d1a3a79c15bbd18e9a3c6eb58cfc703ba279" translate="yes" xml:space="preserve">
          <source>An event that is triggered right after a top-level transaction is rolled back</source>
          <target state="translated">최상위 트랜잭션이 롤백 된 직후 트리거되는 이벤트</target>
        </trans-unit>
        <trans-unit id="da9886403f60b7ab0f40e9e3f2aeb1951ecdee0d" translate="yes" xml:space="preserve">
          <source>An event that is triggered right before a top-level transaction is started</source>
          <target state="translated">최상위 트랜잭션이 시작되기 직전에 트리거되는 이벤트</target>
        </trans-unit>
        <trans-unit id="6b0171121f78fddf9672e8cd1f0d2b404a311c09" translate="yes" xml:space="preserve">
          <source>An event that is triggered when a message translation is not found.</source>
          <target state="translated">메시지 번역을 찾을 수 없을 때 트리거되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="07e267041e1f46f66c59e26e48e7d3f61335bcef" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-db-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-db-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="2a9d31f2c4fdc6d1babb494634ad2e4dfb845e5a" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-elasticsearch-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-elasticsearch-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="feac8125b3fe5d4285df6d7db1406fe9e6b93bb8" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-mongodb-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-mongodb-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="7491c655bde3ed1e70cb1a7865717124fedaee5e" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-mongodb-file-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-mongodb-file-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="061fe05477dcfe6792ce0472a5240bd0ecf3284e" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-redis-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-redis-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="487f5950ba9b3b8e6a35b58a654e37eda188e993" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the query is initialized via &lt;a href=&quot;yii-sphinx-activequery#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">쿼리가 &lt;a href=&quot;yii-sphinx-activequery#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="680624c80f548f6e111135d9e613327dd832e2d0" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the record is initialized via &lt;a href=&quot;yii-db-baseactiverecord#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">레코드가 &lt;a href=&quot;yii-db-baseactiverecord#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="8f31c8c5a6091c26af0b06f0171ed7d0c48d8b74" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the widget is initialized via &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init()&lt;/a&gt;.</source>
          <target state="translated">위젯이 &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="ad2863212a35a72b9c06a27dbba33dd13422b953" translate="yes" xml:space="preserve">
          <source>An event that is triggered when the widget is initialized via &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init()&lt;/a&gt;. (available since version 2.0.11)</source>
          <target state="translated">위젯이 &lt;a href=&quot;yii-base-widget#init()-detail&quot;&gt;init ()&lt;/a&gt; 를 통해 초기화 될 때 트리거되는 이벤트입니다 . (버전 2.0.11부터 사용 가능)</target>
        </trans-unit>
        <trans-unit id="f4ea3fbd6f3532d2ba6d00c0480e681e8ac7d1be" translate="yes" xml:space="preserve">
          <source>An example may be found in the &lt;a href=&quot;guide-rest-quick-start#trying-it-out&quot;&gt;Quick Start&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;guide-rest-quick-start#trying-it-out&quot;&gt;빠른 시작&lt;/a&gt; 섹션 에 예제가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a977f55a5ccece9a2809aee3f3ca7ed633865de4" translate="yes" xml:space="preserve">
          <source>An example of how to use the prompt method with a validator function.</source>
          <target state="translated">유효성 검증기 함수와 함께 prompt 메소드를 사용하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="25da80857c244f028459a5487aef4343e8c8c2b0" translate="yes" xml:space="preserve">
          <source>An example usage is as follows:</source>
          <target state="translated">사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="12e8ba729ae9efc963987257dcf724b569ec4015" translate="yes" xml:space="preserve">
          <source>An explanation for each hit on how its score was computed.</source>
          <target state="translated">점수 계산 방법에 대한 각 조회에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="ebddd9681f4eef20a2d99119a85ac6fb26cabc57" translate="yes" xml:space="preserve">
          <source>An expression can also be bound with parameters specified via &lt;a href=&quot;yii-db-expression#%24params-detail&quot;&gt;$params&lt;/a&gt;.</source>
          <target state="translated">식은 &lt;a href=&quot;yii-db-expression#%24params-detail&quot;&gt;$ params&lt;/a&gt; 를 통해 지정된 매개 변수로 바인딩 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddfe30a2e2f0bf135d7922cffd5e1a7bf950b30d" translate="yes" xml:space="preserve">
          <source>An external script can be added like the following:</source>
          <target state="translated">다음과 같이 외부 스크립트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6926e2df7c73bf21fc0b10c4afad42786f99fc85" translate="yes" xml:space="preserve">
          <source>An informative message is typically logged by an application to keep record of something important (e.g. an administrator logs in).</source>
          <target state="translated">유익한 메시지는 일반적으로 응용 프로그램에 의해 기록되어 중요한 정보 (예 : 관리자 로그인)를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="e0ac36f178530c5330237bc399089634049109cd" translate="yes" xml:space="preserve">
          <source>An inline validator is one defined in terms of a model method or an anonymous function. The signature of the method/function is:</source>
          <target state="translated">인라인 유효성 검사기는 모델 메서드 또는 익명 함수로 정의 된 검사기입니다. 방법 / 기능의 서명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8e22d6bd83f4d55c3fdfdca5a7f709bd8c14e692" translate="yes" xml:space="preserve">
          <source>An inline validator that checks if the attribute value refers to a valid namespaced class name.</source>
          <target state="translated">속성 값이 유효한 네임 스페이스 클래스 이름을 참조하는지 확인하는 인라인 유효성 검증기입니다.</target>
        </trans-unit>
        <trans-unit id="7c54d00922a8f54941b844d4dcf463a9df6e07fc" translate="yes" xml:space="preserve">
          <source>An inline validator that checks if the attribute value refers to an existing class name.</source>
          <target state="translated">속성 값이 기존 클래스 이름을 참조하는지 확인하는 인라인 유효성 검증기입니다.</target>
        </trans-unit>
        <trans-unit id="d0e71cf7c2a0096c9a3bbff9e63947e4673bee16" translate="yes" xml:space="preserve">
          <source>An input widget can be associated with a data model and an attribute, or a name and a value. If the former, the name and the value will be generated automatically.</source>
          <target state="translated">입력 위젯은 데이터 모델 및 속성 또는 이름 및 값과 연관 될 수 있습니다. 전자의 경우 이름과 값이 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e46a0d95432509af0112938b6390ae25da58b129" translate="yes" xml:space="preserve">
          <source>An instance of Dispatcher is registered as a core application component and can be accessed using &lt;code&gt;Yii::$app-&amp;gt;log&lt;/code&gt;.</source>
          <target state="translated">Dispatcher 인스턴스는 핵심 애플리케이션 구성 요소로 등록되며 &lt;code&gt;Yii::$app-&amp;gt;log&lt;/code&gt; 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3104416de2a00a9294d0e7e58ff1cf8480f275af" translate="yes" xml:space="preserve">
          <source>An instance of the requested class.</source>
          <target state="translated">요청 된 클래스의 인스턴스</target>
        </trans-unit>
        <trans-unit id="48d7112781d572cc148540e26f0a005621a9271a" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the cookies in the collection.</source>
          <target state="translated">컬렉션의 쿠키를 통과하기위한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="2f7b2c04dfad4b55ea6f418f115d517b68435efd" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the headers in the collection.</source>
          <target state="translated">컬렉션의 헤더를 순회하기위한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="2687f8369362a67906752d4edf165f25136aecc0" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the items in the list.</source>
          <target state="translated">목록의 항목을 순회하기위한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="b156f95e92e8323615c5fb12c92ea4eaed6efd2d" translate="yes" xml:space="preserve">
          <source>An iterator for traversing the session variables.</source>
          <target state="translated">세션 변수를 순회하기위한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="f1dea75e5ef73db069b400b7bf2afd42bc99c05e" translate="yes" xml:space="preserve">
          <source>An object implementing the SessionHandlerInterface or a configuration array.</source>
          <target state="translated">SessionHandlerInterface 또는 구성 배열을 구현하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="38ea8f0b6ebebac0428c2671c5bafabec11a4a4a" translate="yes" xml:space="preserve">
          <source>An object implementing the SessionHandlerInterface or a configuration array. If set, will be used to provide persistency instead of build-in methods.</source>
          <target state="translated">SessionHandlerInterface 또는 구성 배열을 구현하는 객체입니다. 설정하면 내장 메소드 대신 지속성을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5a3271b1f00fa57b150ee276a2ad4ed9ee72205e" translate="yes" xml:space="preserve">
          <source>An object or a reference to the desired object. You may specify a reference in terms of a component ID or an Instance object. Starting from version 2.0.2, you may also pass in a configuration array for creating the object. If the &quot;class&quot; value is not specified in the configuration array, it will use the value of &lt;code&gt;$type&lt;/code&gt;.</source>
          <target state="translated">객체 또는 원하는 객체에 대한 참조입니다. 구성 요소 ID 또는 인스턴스 오브젝트와 관련하여 참조를 지정할 수 있습니다. 버전 2.0.2부터는 객체를 만들기 위해 구성 배열을 전달할 수도 있습니다. &quot;class&quot;값이 구성 배열에 지정되지 않은 경우 &lt;code&gt;$type&lt;/code&gt; 값을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="6aa8ebf00eadd7301388afca0eb1a6ec8c00e076" translate="yes" xml:space="preserve">
          <source>An option character the user chose</source>
          <target state="translated">사용자가 선택한 옵션 문자</target>
        </trans-unit>
        <trans-unit id="f01a6622b79c8dc21777b9d96cb22df3857f4bab" translate="yes" xml:space="preserve">
          <source>An optional mapping of ANSI control codes such as FG_&lt;em&gt;COLOR&lt;/em&gt; or &lt;a href=&quot;yii-helpers-baseconsole#BOLD-detail&quot;&gt;BOLD&lt;/a&gt; to a set of css style definitions. The CSS style definitions are represented as an array where the array keys correspond to the css style attribute names and the values are the css values. values may be arrays that will be merged and imploded with &lt;code&gt;' '&lt;/code&gt; when rendered.</source>
          <target state="translated">FG_ &lt;em&gt;COLOR&lt;/em&gt; 또는 &lt;a href=&quot;yii-helpers-baseconsole#BOLD-detail&quot;&gt;BOLD&lt;/a&gt; 와 같은 ANSI 제어 코드 를 CSS 스타일 정의 세트에 선택적으로 맵핑 합니다. CSS 스타일 정의는 배열 키가 css 스타일 속성 이름에 해당하고 값이 css 값인 배열로 표시됩니다. 값은 렌더링 될 때 병합되고 &lt;code&gt;' '&lt;/code&gt; 내포 될 배열 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be0bc802f6f0710a1593f8abe94cdf19d5be0116" translate="yes" xml:space="preserve">
          <source>An optional string to display before the progress bar. Default to empty string which results in no prefix to be displayed.</source>
          <target state="translated">진행률 표시 줄 앞에 표시 할 선택적 문자열입니다. 기본값은 빈 문자열이며 접두사가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="27d0248faa6e52a76dd5917dfff766af3e87b817" translate="yes" xml:space="preserve">
          <source>An optional string to display before the progress bar. Defaults to null meaning the prefix specified by &lt;a href=&quot;yii-helpers-baseconsole#startProgress()-detail&quot;&gt;startProgress()&lt;/a&gt; will be used. If prefix is specified it will update the prefix that will be used by later calls.</source>
          <target state="translated">진행률 표시 줄 앞에 표시 할 선택적 문자열입니다. &lt;a href=&quot;yii-helpers-baseconsole#startProgress()-detail&quot;&gt;startProgress ()로&lt;/a&gt; 지정된 접두사 가 사용됨을 의미하는 기본값은 null 입니다. 접두사가 지정되면 나중에 호출 할 때 사용되는 접두사가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="153cb43015bb0662f858c1387380aa98bdb7b86a" translate="yes" xml:space="preserve">
          <source>An optional third operand can also be provided to specify how to escape special characters in the value(s). The operand should be an array of mappings from the special characters to their escaped counterparts. If this operand is not provided, a default escape mapping will be used. You may use &lt;code&gt;false&lt;/code&gt; or an empty array to indicate the values are already escaped and no escape should be applied. Note that when using an escape mapping (or the third operand is not provided), the values will be automatically enclosed within a pair of percentage characters.</source>
          <target state="translated">값에서 특수 문자를 이스케이프 처리하는 방법을 지정하기 위해 선택적 세 번째 피연산자가 제공 될 수도 있습니다. 피연산자는 특수 문자에서 이스케이프 대응 문자로의 맵핑 배열이어야합니다. 이 피연산자가 제공되지 않으면 기본 이스케이프 매핑이 사용됩니다. 값이 이미 이스케이프되어 이스케이프가 적용되지 않음을 나타 내기 위해 &lt;code&gt;false&lt;/code&gt; 또는 빈 배열을 사용할 수 있습니다 . 이스케이프 매핑을 사용하는 경우 (또는 세 번째 피연산자가 제공되지 않은 경우) 값은 자동으로 한 쌍의 백분율 문자로 묶입니다.</target>
        </trans-unit>
        <trans-unit id="ee01470c3a435a7a34ff2efb8cef7dffddbca5e4" translate="yes" xml:space="preserve">
          <source>An unmasked token, or an empty string in case of token format is invalid.</source>
          <target state="translated">마스크되지 않은 토큰 또는 토큰 형식의 경우 빈 문자열이 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="298abe4e02378670319be4a11b3e6acaf441f585" translate="yes" xml:space="preserve">
          <source>An unmasked token.</source>
          <target state="translated">마스크되지 않은 토큰.</target>
        </trans-unit>
        <trans-unit id="3119139b10adc7ff9994fd3f57b3dc4f5085994e" translate="yes" xml:space="preserve">
          <source>An upgrade file in the package root directory: it gives the instructions on how to upgrade from older releases of the extension. The file may be written in Markdown format and named as &lt;code&gt;upgrade.md&lt;/code&gt;.</source>
          <target state="translated">패키지 루트 디렉토리의 업그레이드 파일 : 이전 버전의 확장에서 업그레이드하는 방법에 대한 지침을 제공합니다. 파일은 마크 다운 형식으로 작성되고 &lt;code&gt;upgrade.md&lt;/code&gt; 로 이름이 지정 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9bb2b90bb9d220235d42c10abcf8dae35f4487f8" translate="yes" xml:space="preserve">
          <source>And add the representative fields to the filter form:</source>
          <target state="translated">필터 필드에 대표 필드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b2af27346b32b004354020d2fe400600ec150d45" translate="yes" xml:space="preserve">
          <source>And finally in the controller action, you should call &lt;code&gt;UploadedFile::getInstances()&lt;/code&gt; instead of &lt;code&gt;UploadedFile::getInstance()&lt;/code&gt; to assign an array of &lt;code&gt;UploadedFile&lt;/code&gt; instances to &lt;code&gt;UploadForm::imageFiles&lt;/code&gt;.</source>
          <target state="translated">마지막으로 컨트롤러 작업에서 &lt;code&gt;UploadedFile::getInstances()&lt;/code&gt; 대신 &lt;code&gt;UploadedFile::getInstance()&lt;/code&gt; 를 호출 하여 &lt;code&gt;UploadedFile&lt;/code&gt; 인스턴스 배열을 &lt;code&gt;UploadForm::imageFiles&lt;/code&gt; 에 할당해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5d117fb31146a340ff80f323fe94b7d1f6b49fa6" translate="yes" xml:space="preserve">
          <source>And in the view you then assign the &lt;code&gt;$dataProvider&lt;/code&gt; and &lt;code&gt;$searchModel&lt;/code&gt; to the GridView:</source>
          <target state="translated">그리고 뷰에서 &lt;code&gt;$dataProvider&lt;/code&gt; 와 &lt;code&gt;$searchModel&lt;/code&gt; 을 GridView에 할당합니다 :</target>
        </trans-unit>
        <trans-unit id="b6637441ceb39aa83ca0a06574fb871ba7d77d7e" translate="yes" xml:space="preserve">
          <source>And the following API endpoints are supported by this rule:</source>
          <target state="translated">이 규칙은 다음 API 엔드 포인트를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7f5e18269c4a5c0bc76f83cb841a21d31b95dd19" translate="yes" xml:space="preserve">
          <source>And the following example shows how a class retrieves a component from a service locator:</source>
          <target state="translated">그리고 다음 예제는 클래스가 서비스 로케이터에서 구성 요소를 검색하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5e2d8c931b64208ab8ca180d2d9423976050127a" translate="yes" xml:space="preserve">
          <source>And the following example shows how to use ActiveDataProvider without ActiveRecord:</source>
          <target state="translated">다음 예제는 ActiveRecord없이 ActiveDataProvider를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="59b6a0cae9508308c22a2a60525e315437e5a694" translate="yes" xml:space="preserve">
          <source>And the following steps show how to deploy a new release with database migrations to production:</source>
          <target state="translated">다음 단계는 데이터베이스를 프로덕션으로 마이그레이션하여 새 릴리스를 배포하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a6180737f083ca090fa4e906f75eb9d24ae57b1d" translate="yes" xml:space="preserve">
          <source>And the parameters provided for the action are: &lt;code&gt;['id' =&amp;gt; 1]&lt;/code&gt;. Then the &lt;code&gt;run()&lt;/code&gt; method will be invoked as &lt;code&gt;run(1)&lt;/code&gt; automatically.</source>
          <target state="translated">조치에 제공되는 매개 변수는 &lt;code&gt;['id' =&amp;gt; 1]&lt;/code&gt; 입니다. 그러면 &lt;code&gt;run()&lt;/code&gt; 메소드가 &lt;code&gt;run(1)&lt;/code&gt; 으로 자동 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="3c5ee401b8c8ef355db347fca7339d8a822678d0" translate="yes" xml:space="preserve">
          <source>And then overriding default in sub-views:</source>
          <target state="translated">그런 다음 하위 뷰에서 기본값을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="c6c698165e3be8715d87cfb6f414fb564dd39079" translate="yes" xml:space="preserve">
          <source>And two classes, that implement it:</source>
          <target state="translated">그리고 그것을 구현하는 두 개의 클래스 :</target>
        </trans-unit>
        <trans-unit id="6dd4bafb98d15729cd654a79057caa1806de2d9d" translate="yes" xml:space="preserve">
          <source>And use the new rule class in the &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii\web\UrlManager::$rules&lt;/a&gt; configuration:</source>
          <target state="translated">&lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii \ web \ UrlManager :: $ rules&lt;/a&gt; 구성 에서 새 규칙 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ae5c0ef5a16bed74cafbcbd12b08760354a27b4" translate="yes" xml:space="preserve">
          <source>And when the rules are used to create URLs:</source>
          <target state="translated">규칙을 사용하여 URL을 만드는 경우 :</target>
        </trans-unit>
        <trans-unit id="5d2e6f48f3d12b8f490e0cab11cd3a8ba9a59876" translate="yes" xml:space="preserve">
          <source>And|or define how target attributes are related</source>
          <target state="translated">그리고 | 또는 대상 속성이 어떻게 관련되는지 정의</target>
        </trans-unit>
        <trans-unit id="bd730d8a99626f196456a1a1beea6054acb58110" translate="yes" xml:space="preserve">
          <source>Anonymous function, passed as a &lt;code&gt;$key&lt;/code&gt;, gives the same result:</source>
          <target state="translated">&lt;code&gt;$key&lt;/code&gt; 로 전달 된 익명 함수 는 동일한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="33718acd50e2ddccb7a4b47a58718bfc6994cc8e" translate="yes" xml:space="preserve">
          <source>Another example is to take advantage of the automatic constructor injection of the DI container. Assume your controller class depends on some other objects, such as a hotel booking service. You can declare the dependency through a constructor parameter and let the DI container to resolve it for you.</source>
          <target state="translated">다른 예는 DI 컨테이너의 자동 생성자 주입을 이용하는 것입니다. 컨트롤러 클래스가 호텔 예약 서비스와 같은 다른 객체에 의존한다고 가정합니다. 생성자 매개 변수를 통해 종속성을 선언하고 DI 컨테이너가이를 해결하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6510a65cdc5c3cc43bdc89434ba8ccf0369e6074" translate="yes" xml:space="preserve">
          <source>Another item</source>
          <target state="translated">다른 아이템</target>
        </trans-unit>
        <trans-unit id="2980bf8472493bed81209e01791850695af2ad51" translate="yes" xml:space="preserve">
          <source>Another practical example is in the application configuration for the &lt;a href=&quot;guide-start-installation&quot;&gt;Basic Project Template&lt;/a&gt;, where the &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;gii&lt;/code&gt; modules are configured as bootstrapping components when the application is running in the development environment:</source>
          <target state="translated">또 다른 실제적인 예는 대한 응용 프로그램 구성에 &lt;a href=&quot;guide-start-installation&quot;&gt;기본 프로젝트 템플릿&lt;/a&gt; 1, &lt;code&gt;debug&lt;/code&gt; 및 &lt;code&gt;gii&lt;/code&gt; 모듈이 응용 프로그램 개발 환경에서 실행중인 부트 스트랩 구성 요소로 구성되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3b15eea03006d19e5deecf2fd08a8094188b36b8" translate="yes" xml:space="preserve">
          <source>Another step on configuration optimization is to register some dependencies as singletons. A dependency registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; will be instantiated each time it is needed. Some classes do not change the state during runtime, therefore they may be registered as singletons in order to increase the application performance.</source>
          <target state="translated">구성 최적화의 또 다른 단계는 일부 종속성을 싱글 톤으로 등록하는 것입니다. &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set ()&lt;/a&gt; 을 통해 등록 된 종속성 은 필요할 때마다 인스턴스화됩니다. 일부 클래스는 런타임 중에 상태를 변경하지 않으므로 응용 프로그램 성능을 향상시키기 위해 단일 클래스로 등록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f75336542a47b09df53e5c27808b600d5d6a57d" translate="yes" xml:space="preserve">
          <source>Another strategy that you can take to migrate multiple databases is to keep migrations for different databases in different migration paths. Then you can migrate these databases in separate commands like the following:</source>
          <target state="translated">여러 데이터베이스를 마이그레이션하기 위해 취할 수있는 또 다른 전략은 다른 데이터베이스의 마이그레이션을 다른 마이그레이션 경로에 유지하는 것입니다. 그런 다음 다음과 같은 별도의 명령으로 이러한 데이터베이스를 마이그레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d3704f7ea081a8fd87d77d8296cbed77e10c326" translate="yes" xml:space="preserve">
          <source>Another value being compared</source>
          <target state="translated">비교되는 또 다른 가치</target>
        </trans-unit>
        <trans-unit id="83ba7473590bec9bceb42e5edf49b47391d9c6de" translate="yes" xml:space="preserve">
          <source>Any SQL queries in the anonymous function will be cached for the specified duration with the specified dependency. If the result of a query is found valid in the cache, the query will be skipped and the result will be served from the cache instead. If you do not specify the &lt;code&gt;$duration&lt;/code&gt; parameter, the value of &lt;a href=&quot;yii-db-connection#%24queryCacheDuration-detail&quot;&gt;queryCacheDuration&lt;/a&gt; will be used instead.</source>
          <target state="translated">익명 함수의 모든 SQL 쿼리는 지정된 종속성으로 지정된 기간 동안 캐시됩니다. 캐시에서 쿼리 결과가 유효하면 쿼리를 건너 뛰고 대신 캐시에서 결과가 제공됩니다. &lt;code&gt;$duration&lt;/code&gt; 매개 변수를 지정하지 않으면 &lt;a href=&quot;yii-db-connection#%24queryCacheDuration-detail&quot;&gt;queryCacheDuration&lt;/a&gt; 의 값이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="53b25972597782005d482e6bbc8d55ff2fcade5b" translate="yes" xml:space="preserve">
          <source>Any content enclosed between the &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls of NavBar is treated as the content of the navbar. You may use widgets such as &lt;a href=&quot;yii-bootstrap-nav&quot;&gt;yii\bootstrap\Nav&lt;/a&gt; or &lt;a href=&quot;yii-widgets-menu&quot;&gt;yii\widgets\Menu&lt;/a&gt; to build up such content. For example,</source>
          <target state="translated">NavBar 의 &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end ()&lt;/a&gt; 호출 사이에 포함 된 모든 내용 은 탐색 모음의 내용으로 처리됩니다. 당신은 같은 위젯을 사용할 수 있습니다 &lt;a href=&quot;yii-bootstrap-nav&quot;&gt;YII \ 부트 스트랩 \ 탐색&lt;/a&gt; 또는 &lt;a href=&quot;yii-widgets-menu&quot;&gt;YII \ 위젯 \ 메뉴를&lt;/a&gt; 이러한 콘텐츠를 구축 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="3e013944d0271ebdb70b758c708c6f8ce5652b38" translate="yes" xml:space="preserve">
          <source>Any relative URL that starts with a single forward slash &quot;/&quot; will be converted into an absolute one by prepending it with the host info of the current request.</source>
          <target state="translated">단일 슬래시 &quot;/&quot;로 시작하는 상대 URL은 현재 요청의 호스트 정보 앞에 추가하여 절대 URL로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a73508e674a6b1f2bd9262ff35b760dcc345dc28" translate="yes" xml:space="preserve">
          <source>Any trailing '/' and '\' characters in the given path will be trimmed.</source>
          <target state="translated">주어진 경로에서 후행 '/'및 '\'문자는 잘립니다.</target>
        </trans-unit>
        <trans-unit id="7da34f288079812aa931a91ba8e228ca94611e6c" translate="yes" xml:space="preserve">
          <source>Apache 2: &lt;a href=&quot;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&quot;&gt;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&lt;/a&gt;</source>
          <target state="translated">아파치 2 : &lt;a href=&quot;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&quot;&gt;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a521d2ac38e7c8532cd9920e86e547e55c889c4a" translate="yes" xml:space="preserve">
          <source>Apache 2: &lt;a href=&quot;https://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&quot;&gt;http://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb80fd4953e6e08054b69ea88e66ea1009b5714e" translate="yes" xml:space="preserve">
          <source>Apache: &lt;a href=&quot;http://tn123.org/mod_xsendfile&quot;&gt;X-Sendfile&lt;/a&gt;</source>
          <target state="translated">아파치 : &lt;a href=&quot;http://tn123.org/mod_xsendfile&quot;&gt;X-Sendfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f1084a454dd8e385ac068ef2da7a5e740ee0f8c" translate="yes" xml:space="preserve">
          <source>Apache: &lt;a href=&quot;https://tn123.org/mod_xsendfile&quot;&gt;X-Sendfile&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11392dff1e730f4e8a2fc4d71e432a2c14b8f8d3" translate="yes" xml:space="preserve">
          <source>ApcCache provides APC caching in terms of an application component.</source>
          <target state="translated">ApcCache는 응용 프로그램 구성 요소 측면에서 APC 캐싱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5d6ea696bfc5029fa79907064d60a6bcddd12bd9" translate="yes" xml:space="preserve">
          <source>Append the suffix &lt;code&gt;Controller&lt;/code&gt;.</source>
          <target state="translated">접미사 &lt;code&gt;Controller&lt;/code&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e838304820d9ae6f3d00c7cf9ca8de1da3968e5" translate="yes" xml:space="preserve">
          <source>Appending Conditions</source>
          <target state="translated">입학 조건</target>
        </trans-unit>
        <trans-unit id="1c6378d836e1da5d91a66cf7b3d6806ea2d6cf87" translate="yes" xml:space="preserve">
          <source>Appends a JOIN part to the query.</source>
          <target state="translated">쿼리에 JOIN 파트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="db9b0ea031341ed1a20e4040b91f1f13de025942" translate="yes" xml:space="preserve">
          <source>Appends a LEFT OUTER JOIN part to the query.</source>
          <target state="translated">LEFT OUTER JOIN 부분을 쿼리에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f84d03dfaed4dd063f0f8a33186f4a3d41d897e1" translate="yes" xml:space="preserve">
          <source>Appends a RIGHT OUTER JOIN part to the query.</source>
          <target state="translated">쿼리에 RIGHT OUTER JOIN 부분을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cd26e6fb3371574aaa486c80f073ecd2df98f921" translate="yes" xml:space="preserve">
          <source>Appends a SQL statement using UNION operator.</source>
          <target state="translated">UNION 연산자를 사용하여 SQL 문을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1680471d402f618338ed007948e6fde0eaa76b2a" translate="yes" xml:space="preserve">
          <source>Appends an INNER JOIN part to the query.</source>
          <target state="translated">INNER JOIN 파트를 쿼리에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e6afd6f97c01258164173df1600578611c3bc377" translate="yes" xml:space="preserve">
          <source>Application Components</source>
          <target state="translated">응용 프로그램 구성 요소</target>
        </trans-unit>
        <trans-unit id="fc3dc02f2eed26ec68b7f655e0c082d0c5d80d4d" translate="yes" xml:space="preserve">
          <source>Application Configurations</source>
          <target state="translated">응용 프로그램 구성</target>
        </trans-unit>
        <trans-unit id="43d9ac0286bd4cf919461e1e4f7426fee4f1df01" translate="yes" xml:space="preserve">
          <source>Application Events</source>
          <target state="translated">응용 프로그램 이벤트</target>
        </trans-unit>
        <trans-unit id="d6a57cc95d512e5364ca4edb5405c3ae4211a3ec" translate="yes" xml:space="preserve">
          <source>Application Lifecycle</source>
          <target state="translated">응용 프로그램 수명주기</target>
        </trans-unit>
        <trans-unit id="3252c8dd86809c12991ca3ce9c641976809cb4ca" translate="yes" xml:space="preserve">
          <source>Application Properties</source>
          <target state="translated">응용 프로그램 속성</target>
        </trans-unit>
        <trans-unit id="30ca4882f3a44a01cbb9dbbf545efd0155fdfae5" translate="yes" xml:space="preserve">
          <source>Application components can be any objects. You can register them by configuring the &lt;a href=&quot;yii-di-servicelocator#%24components-detail&quot;&gt;yii\base\Application::$components&lt;/a&gt; property in &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configurations&lt;/a&gt;. For example,</source>
          <target state="translated">응용 프로그램 구성 요소는 모든 개체가 될 수 있습니다. 당신은 구성하여이를 등록 할 수 있습니다 &lt;a href=&quot;yii-di-servicelocator#%24components-detail&quot;&gt;YII \ 기본 \ 응용 프로그램 : $ 구성 요소&lt;/a&gt; 의 특성 &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;응용 프로그램 구성&lt;/a&gt; . 예를 들어</target>
        </trans-unit>
        <trans-unit id="2ff37659319a0ba411a584b05313bacd0679854f" translate="yes" xml:space="preserve">
          <source>Application config</source>
          <target state="translated">응용 프로그램 구성</target>
        </trans-unit>
        <trans-unit id="cb2434fdf7fd93ee3ab19630741f55aa2516476a" translate="yes" xml:space="preserve">
          <source>Application configuration example:</source>
          <target state="translated">응용 프로그램 구성 예 :</target>
        </trans-unit>
        <trans-unit id="13392ff375892debc3e77407f145d0bbc5b93958" translate="yes" xml:space="preserve">
          <source>Application extends from &lt;a href=&quot;yii-base-application&quot;&gt;yii\base\Application&lt;/a&gt; by providing functionalities that are specific to console requests. In particular, it deals with console requests through a command-based approach:</source>
          <target state="translated">응용 프로그램은 콘솔 요청과 관련된 기능을 제공 하여 &lt;a href=&quot;yii-base-application&quot;&gt;yii \ base \ Application&lt;/a&gt; 에서 확장됩니다 . 특히 명령 기반 접근 방식을 통해 콘솔 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="0c27e1ffe913d59fbb505833353e87a1c647eb9a" translate="yes" xml:space="preserve">
          <source>Application is the base class for all application classes.</source>
          <target state="translated">응용 프로그램은 모든 응용 프로그램 클래스의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="986da0675c9d6bc473feb023ca05ce18c28f1099" translate="yes" xml:space="preserve">
          <source>Application is the base class for all web application classes.</source>
          <target state="translated">응용 프로그램은 모든 웹 응용 프로그램 클래스의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="767725b8b939480bcee8194b9c16a941023f4e40" translate="yes" xml:space="preserve">
          <source>Application represents a console application.</source>
          <target state="translated">응용 프로그램은 콘솔 응용 프로그램을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="543166750256db6d06f94c1566a731f2e1966b12" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application has ended.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$ state에&lt;/a&gt; 의해 사용 된 응용 프로그램 상태 : 응용 프로그램이 종료되었습니다.</target>
        </trans-unit>
        <trans-unit id="05246379e5981d53d1eb2f3d48d8b6c6033b8d90" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is about to send response.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$ state에&lt;/a&gt; 의해 사용 된 응용 프로그램 상태 : 응용 프로그램이 응답을 보내려고합니다.</target>
        </trans-unit>
        <trans-unit id="92d35435dccf1009415ba58b513f9ec16d85e7f3" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is handling the request.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state가 사용하는 응용 프로그램 상태 : 응용 프로그램이 요청을 처리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b71a78d795d5239c7702c2e52499a0796514acc0" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is initializing.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state가 사용하는 응용 프로그램 상태 : 응용 프로그램이 초기화 중입니다.</target>
        </trans-unit>
        <trans-unit id="c88b05bb12922c2fbf86fc12388d45cac28706bd" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is triggering &lt;a href=&quot;yii-base-application#EVENT_AFTER_REQUEST-detail&quot;&gt;EVENT_AFTER_REQUEST&lt;/a&gt;. .</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state가 사용하는 응용 프로그램 상태 : 응용 프로그램이 &lt;a href=&quot;yii-base-application#EVENT_AFTER_REQUEST-detail&quot;&gt;EVENT_AFTER_REQUEST를&lt;/a&gt; 트리거 합니다 . .</target>
        </trans-unit>
        <trans-unit id="487e550a5bcd524526d5f025c7c9e51d66eba88d" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application is triggering &lt;a href=&quot;yii-base-application#EVENT_BEFORE_REQUEST-detail&quot;&gt;EVENT_BEFORE_REQUEST&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$ state에&lt;/a&gt; 의해 사용 된 응용 프로그램 상태 : 응용 프로그램이 &lt;a href=&quot;yii-base-application#EVENT_BEFORE_REQUEST-detail&quot;&gt;EVENT_BEFORE_REQUEST를&lt;/a&gt; 트리거 합니다 .</target>
        </trans-unit>
        <trans-unit id="0e8ba3647d009059e2f538f7bf9bd48ff5f46046" translate="yes" xml:space="preserve">
          <source>Application state used by &lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$state&lt;/a&gt;: application just started.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24state-detail&quot;&gt;$&lt;/a&gt; state가 사용하는 어플리케이션 상태 : 어플리케이션이 방금 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="ca2bc1835b0666393d94310011a91f78e72487ab" translate="yes" xml:space="preserve">
          <source>Applications are &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locators&lt;/a&gt;. They host a set of the so-called &lt;em&gt;application components&lt;/em&gt; that provide different services for processing requests. For example, the &lt;code&gt;urlManager&lt;/code&gt; component is responsible for routing Web requests to appropriate controllers; the &lt;code&gt;db&lt;/code&gt; component provides DB-related services; and so on.</source>
          <target state="translated">응용 프로그램은 &lt;a href=&quot;guide-concept-service-locator&quot;&gt;서비스 로케이터&lt;/a&gt; 입니다. 요청을 처리하기 위해 다른 서비스를 제공하는 소위 &lt;em&gt;응용 프로그램 구성 요소&lt;/em&gt; 집합을 호스팅 합니다. 예를 들어 &lt;code&gt;urlManager&lt;/code&gt; 구성 요소는 웹 요청을 적절한 컨트롤러로 라우팅합니다. &lt;code&gt;db&lt;/code&gt; 구성 요소는 DB 관련 서비스를 제공한다; 등등.</target>
        </trans-unit>
        <trans-unit id="62efd227a737df1b4490120333388277316e90b5" translate="yes" xml:space="preserve">
          <source>Applications are objects that govern the overall structure and lifecycle of Yii application systems. Each Yii application system contains a single application object which is created in the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; and is globally accessible through the expression &lt;code&gt;\Yii::$app&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램은 Yii 응용 프로그램 시스템의 전체 구조와 수명주기를 제어하는 ​​개체입니다. 각 Yii 애플리케이션 시스템에는 &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;입력 스크립트&lt;/a&gt; 에서 작성되고 &lt;code&gt;\Yii::$app&lt;/code&gt; 표현식을 통해 전체적으로 액세스 할 수 있는 단일 애플리케이션 오브젝트가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d59917b4d5d2dd7d89b8933266a966a7173c3ed" translate="yes" xml:space="preserve">
          <source>Applies &lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$accessToken&lt;/a&gt; to the request.</source>
          <target state="translated">요청에 &lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$ accessToken&lt;/a&gt; 을 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="bb2c2cc168e8c823635dfb473b7a9f3ca5c9d718" translate="yes" xml:space="preserve">
          <source>Applies a random mask to the token and prepends the mask used to the result making the string always unique. Used to mitigate BREACH attack by randomizing how token is outputted on each request.</source>
          <target state="translated">임의 마스크를 토큰에 적용하고 결과에 사용 된 마스크를 추가하여 문자열을 항상 고유하게 만듭니다. 각 요청에서 토큰이 출력되는 방식을 무작위로 지정하여 BREACH 공격을 완화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="12d4af2ff78af162c31026ac3b863b2aa2040baa" translate="yes" xml:space="preserve">
          <source>Applies access token to the HTTP request instance.</source>
          <target state="translated">HTTP 요청 인스턴스에 액세스 토큰을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="ab00664f7756d642bacf51bf27e8551435722fe2" translate="yes" xml:space="preserve">
          <source>Applies client credentials (e.g. &lt;a href=&quot;yii-authclient-oauth2#%24clientId-detail&quot;&gt;$clientId&lt;/a&gt; and &lt;a href=&quot;yii-authclient-oauth2#%24clientSecret-detail&quot;&gt;$clientSecret&lt;/a&gt;) to the HTTP request instance.</source>
          <target state="translated">클라이언트 자격 증명 (예 : &lt;a href=&quot;yii-authclient-oauth2#%24clientId-detail&quot;&gt;$ clientId&lt;/a&gt; 및 &lt;a href=&quot;yii-authclient-oauth2#%24clientSecret-detail&quot;&gt;$ clientSecret&lt;/a&gt; )을 HTTP 요청 인스턴스에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="0f30e0b04c9c86227e73e8a6d153b699f222f967" translate="yes" xml:space="preserve">
          <source>Applies configuration from the given file to self instance.</source>
          <target state="translated">주어진 파일에서 자체 인스턴스로 구성을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="cc2de1b1d57f6d3937c589525d0820f38e3eb9af" translate="yes" xml:space="preserve">
          <source>Applies filter on a given array and returns filtered data.</source>
          <target state="translated">주어진 배열에 필터를 적용하고 필터링 된 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44ccc8f98f497196ad73004d4b631b2e721e2a64" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the application in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 순서대로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="214ffe0193aabf387f2d7606c4ead5b0537a9932" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the application in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 역순으로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="698d5d1c38233796d6ee7a848f8f9c12839c0630" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the controller in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">컨트롤러에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 순서대로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9547ca87b410e64f49254419b3f10e8613e26f6d" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the controller in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">컨트롤러에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 역순으로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="623454840bbf1f49bb6d373d472e100ea8d794f6" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the module in the order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">모듈에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 순서대로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3cf369ec30c9fde0e32e8f5aa29c747c920d0964" translate="yes" xml:space="preserve">
          <source>Apply filters declared in the module in the reverse order they are listed in &lt;code&gt;behaviors()&lt;/code&gt;.</source>
          <target state="translated">모듈에 선언 된 필터를 &lt;code&gt;behaviors()&lt;/code&gt; 나열된 역순으로 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0aeb27d1e5aa3454f04d78811439517eade54259" translate="yes" xml:space="preserve">
          <source>Applying Migrations</source>
          <target state="translated">마이그레이션 적용</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="33118eabb12b06bcdf20447e0a74a81f14a9f0a1" translate="yes" xml:space="preserve">
          <source>Arguments array to be converted</source>
          <target state="translated">변환 할 인수 배열</target>
        </trans-unit>
        <trans-unit id="056d61270fd8b57b18cb52770b2b3bcb49e69d01" translate="yes" xml:space="preserve">
          <source>Array Data Provider</source>
          <target state="translated">배열 데이터 제공자</target>
        </trans-unit>
        <trans-unit id="74397669308f245b16a683127df65188c45706f5" translate="yes" xml:space="preserve">
          <source>Array either MUST contain both username and password on not contain any authentication credentials.</source>
          <target state="translated">배열에는 인증 자격 증명이 포함되어 있지 않으면 사용자 이름과 암호가 모두 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa3b8678b611aaa7173b7189e129fd203aa1029d" translate="yes" xml:space="preserve">
          <source>Array elements:</source>
          <target state="translated">배열 요소 :</target>
        </trans-unit>
        <trans-unit id="8bdd9c0e755963e545282e2afe85bf7e265be42d" translate="yes" xml:space="preserve">
          <source>Array input options</source>
          <target state="translated">배열 입력 옵션</target>
        </trans-unit>
        <trans-unit id="469b440e7006a7c0ccc78db2e29bc7e7af9d3449" translate="yes" xml:space="preserve">
          <source>Array keys are not always required. When an array value does not have a key, the matching of the requested language will be based on a language fallback mechanism. For example, a value of &lt;code&gt;en&lt;/code&gt; will match &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;en_US&lt;/code&gt;, &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;en-GB&lt;/code&gt;, etc.</source>
          <target state="translated">배열 키가 항상 필요한 것은 아닙니다. 배열 값에 키가없는 경우 요청 된 언어의 일치는 언어 폴백 메커니즘을 기반으로합니다. 예를 들어, 값 &lt;code&gt;en&lt;/code&gt; 일치 &lt;code&gt;en&lt;/code&gt; , &lt;code&gt;en_US&lt;/code&gt; , &lt;code&gt;en-US&lt;/code&gt; , &lt;code&gt;en-GB&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="ea3b33abfbe2209b46883b419977cf00c729d01e" translate="yes" xml:space="preserve">
          <source>Array of 2 elements:</source>
          <target state="translated">두 요소의 배열 :</target>
        </trans-unit>
        <trans-unit id="afa0810357b508ae32ed48856131ae1cb8171704" translate="yes" xml:space="preserve">
          <source>Array of UploadedFile objects. Empty array is returned if no available file was found for the given attribute.</source>
          <target state="translated">UploadedFile 객체의 배열입니다. 주어진 속성에 사용 가능한 파일이 없으면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="78478793379d7765da90f911b4ac89274e4483ba" translate="yes" xml:space="preserve">
          <source>Array of actions to add to the debug modules default controller.</source>
          <target state="translated">디버그 모듈 기본 제어기에 추가 할 조치 배열.</target>
        </trans-unit>
        <trans-unit id="0cb7f236a65a038797361a6796ebfe91b26c022d" translate="yes" xml:space="preserve">
          <source>Array of actions to add to the debug modules default controller. This array will be merged with all other panels actions property. See &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;yii\base\Controller::actions()&lt;/a&gt; for the format.</source>
          <target state="translated">디버그 모듈 기본 제어기에 추가 할 조치 배열. 이 배열은 다른 모든 패널 작업 속성과 병합됩니다. 형식은 &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;yii \ base \ Controller :: actions ()&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89073326118322a6767f9807d83bd5498e70ecd3" translate="yes" xml:space="preserve">
          <source>Array of additional options</source>
          <target state="translated">추가 옵션 배열</target>
        </trans-unit>
        <trans-unit id="b63da124153843be4e0f7c75dd501b70cb4677ff" translate="yes" xml:space="preserve">
          <source>Array of arrays or objects to be inserted.</source>
          <target state="translated">삽입 할 배열 또는 객체의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="c25476f14f471f13f85324c74a8681d47595175a" translate="yes" xml:space="preserve">
          <source>Array of attributes with keys being the AX schema names, e.g. 'contact/email'</source>
          <target state="translated">키가 AX 스키마 이름 인 속성의 배열 (예 : 'contact / email'</target>
        </trans-unit>
        <trans-unit id="00e1f0a1aa1d86f05c426c160590e432a73b8fa0" translate="yes" xml:space="preserve">
          <source>Array of attributes.</source>
          <target state="translated">속성의 배열.</target>
        </trans-unit>
        <trans-unit id="cda3dd1fc730b2616329b66cde0e490decf015cb" translate="yes" xml:space="preserve">
          <source>Array of bundles to formatting.</source>
          <target state="translated">형식화 할 번들 배열입니다.</target>
        </trans-unit>
        <trans-unit id="5d714cb2be2e1eb05e07824b36c17a7ac813116f" translate="yes" xml:space="preserve">
          <source>Array of column names</source>
          <target state="translated">열 이름의 배열</target>
        </trans-unit>
        <trans-unit id="d5b8e2a4f6a3340f40fda96d630e66fdf066d20d" translate="yes" xml:space="preserve">
          <source>Array of definitions. There are two allowed formats of array. The first format:</source>
          <target state="translated">정의의 배열. 배열에는 두 가지 형식이 허용됩니다. 첫 번째 형식 :</target>
        </trans-unit>
        <trans-unit id="5abd08f8def634c8db82b8a6ab8892f08d516a55" translate="yes" xml:space="preserve">
          <source>Array of distinct values</source>
          <target state="translated">고유 한 값의 배열</target>
        </trans-unit>
        <trans-unit id="f70e664625936358926fdf1f251fcdeecff8c23f" translate="yes" xml:space="preserve">
          <source>Array of distinct values, or &quot;false&quot; on failure.</source>
          <target state="translated">고유 한 값의 배열 또는 실패시 &quot;false&quot;</target>
        </trans-unit>
        <trans-unit id="828330fe5c8e671f9f372b9fea39ecec3c9b0921" translate="yes" xml:space="preserve">
          <source>Array of failed keys</source>
          <target state="translated">실패한 키 배열</target>
        </trans-unit>
        <trans-unit id="647daeb9b41fc7ea32592fea871a927d5133543a" translate="yes" xml:space="preserve">
          <source>Array of failed keys.</source>
          <target state="translated">실패한 키 배열.</target>
        </trans-unit>
        <trans-unit id="cf5ef11fba1b8e53f956362b5b18ab1e3aafa9b9" translate="yes" xml:space="preserve">
          <source>Array of found fixtures</source>
          <target state="translated">발견 된 비품의 배열</target>
        </trans-unit>
        <trans-unit id="37feecd468948ec260c865352b6cb57cd816649a" translate="yes" xml:space="preserve">
          <source>Array of messages or null if file not found</source>
          <target state="translated">메시지 배열 또는 파일을 찾을 수없는 경우 null</target>
        </trans-unit>
        <trans-unit id="f47dfa01ef7c9109700acdd0f00326690f7e880d" translate="yes" xml:space="preserve">
          <source>Array of method arguments.</source>
          <target state="translated">메소드 인수의 배열</target>
        </trans-unit>
        <trans-unit id="5ac7383d9855238f2ccebe3bfab29394daa4dd6b" translate="yes" xml:space="preserve">
          <source>Array of names of fixtures that should not be loaded</source>
          <target state="translated">로드해서는 안되는 조명기 이름의 배열</target>
        </trans-unit>
        <trans-unit id="633ad4897aa3926f00fedcfcab860d1a47d02daf" translate="yes" xml:space="preserve">
          <source>Array of parameters to highlight results.</source>
          <target state="translated">결과를 강조하기위한 매개 변수의 배열.</target>
        </trans-unit>
        <trans-unit id="504f638b263299d6837bd213f7e9fcd853be5b7c" translate="yes" xml:space="preserve">
          <source>Array of primary key attributes. Only the first element of the array will be used.</source>
          <target state="translated">기본 키 속성의 배열 배열의 첫 번째 요소 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="60dfcef65050ade4eb247ac898903a4adc9d14b6" translate="yes" xml:space="preserve">
          <source>Array of singleton definitions.</source>
          <target state="translated">싱글 톤 정의의 배열.</target>
        </trans-unit>
        <trans-unit id="ca96f1255540252a7cd7f654373df0f08faa8121" translate="yes" xml:space="preserve">
          <source>Array of singleton definitions. See &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions()&lt;/a&gt; for allowed formats of array.</source>
          <target state="translated">싱글 톤 정의의 배열. 허용되는 배열 형식은 &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions ()&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaaecf3dae3401a9adc89bcce0ef13b6f5a9049a" translate="yes" xml:space="preserve">
          <source>Array of user ID strings</source>
          <target state="translated">사용자 ID 문자열 배열</target>
        </trans-unit>
        <trans-unit id="9cbc3d81168c904a9e92540b2121fb26e3560463" translate="yes" xml:space="preserve">
          <source>Array of user's assignments</source>
          <target state="translated">사용자 할당 배열</target>
        </trans-unit>
        <trans-unit id="c86c17fb8f3eab027753c140d1233cd635b85724" translate="yes" xml:space="preserve">
          <source>Array or object to extract value from</source>
          <target state="translated">값을 추출 할 배열 또는 객체</target>
        </trans-unit>
        <trans-unit id="6234cfac56337af117a3b05543629271ef23e16b" translate="yes" xml:space="preserve">
          <source>Array to be merged from. You can specify additional arrays via third argument, fourth argument etc.</source>
          <target state="translated">병합 할 배열입니다. 세 번째 인수, 네 번째 인수 등을 통해 추가 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15344f5fadea9877805ce80ae94c0421d4afc97b" translate="yes" xml:space="preserve">
          <source>Array to be merged to</source>
          <target state="translated">병합 할 배열</target>
        </trans-unit>
        <trans-unit id="e2acf8ed2916fb5b2a0ff723712c73f9bc3394be" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value</source>
          <target state="translated">키가 값인 동안 캐시 키에 해당하는 배열</target>
        </trans-unit>
        <trans-unit id="5907a712a841b1816ab31a630344637776fa3313" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value is the value stored</source>
          <target state="translated">키가 캐시 키에 해당하고 value는 저장된 값인 배열</target>
        </trans-unit>
        <trans-unit id="95374e8d8c3a3ef39938a1ef6c3a6f3df37ebd78" translate="yes" xml:space="preserve">
          <source>Array where key corresponds to cache key while value is the value stored.</source>
          <target state="translated">키가 캐시 키에 해당하는 반면, 값은 저장된 값입니다.</target>
        </trans-unit>
        <trans-unit id="b3f2e985db383c94521559410abfe5a507362e26" translate="yes" xml:space="preserve">
          <source>ArrayAccess</source>
          <target state="translated">ArrayAccess</target>
        </trans-unit>
        <trans-unit id="f82c963f66c6ba2747c723e834999f968ae2239c" translate="yes" xml:space="preserve">
          <source>ArrayAccessTrait provides the implementation for &lt;a href=&quot;http://www.php.net/class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;, &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;http://www.php.net/class.countable&quot;&gt;Countable&lt;/a&gt;.</source>
          <target state="translated">ArrayAccessTrait는 &lt;a href=&quot;http://www.php.net/class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt; , &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; 및 &lt;a href=&quot;http://www.php.net/class.countable&quot;&gt;Countable&lt;/a&gt; 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="8aa8beaba0f0f92ea7a94cc00f268421e16a6621" translate="yes" xml:space="preserve">
          <source>ArrayCache provides caching for the current request only by storing the values in an array.</source>
          <target state="translated">ArrayCache는 값을 배열에 저장하여 현재 요청에 대한 캐싱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ca4acc405078a0fb8630fa75df5a7882fa35a81" translate="yes" xml:space="preserve">
          <source>ArrayDataProvider implements a data provider based on a data array.</source>
          <target state="translated">ArrayDataProvider는 데이터 배열을 기반으로 데이터 공급자를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="9b67ce491b983e5e0b1e445476ad40d77b4d934a" translate="yes" xml:space="preserve">
          <source>ArrayDataProvider may be used in the following way:</source>
          <target state="translated">ArrayDataProvider는 다음과 같은 방식으로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b6977012514023f0d4e7309c7da5910f737be79" translate="yes" xml:space="preserve">
          <source>ArrayFixture represents arbitrary fixture that can be loaded from PHP files.</source>
          <target state="translated">ArrayFixture는 PHP 파일에서로드 할 수있는 임의의 조명기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3a91c2a88cc5f629889533e012cc822c78d2aa6d" translate="yes" xml:space="preserve">
          <source>ArrayHelper</source>
          <target state="translated">ArrayHelper</target>
        </trans-unit>
        <trans-unit id="776719d86c43bfe323717d4658d932c70f44e404" translate="yes" xml:space="preserve">
          <source>ArrayHelper provides additional array functionality that you can use in your application.</source>
          <target state="translated">ArrayHelper는 응용 프로그램에서 사용할 수있는 추가 배열 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="41eb415c07831f366e7c8a298f4997f3beb0eb62" translate="yes" xml:space="preserve">
          <source>ArrayIterator</source>
          <target state="translated">ArrayIterator</target>
        </trans-unit>
        <trans-unit id="c3e3b6d1d92f95ad0f0b55a2d3e955e5f18f94d4" translate="yes" xml:space="preserve">
          <source>ArrayObject</source>
          <target state="translated">ArrayObject</target>
        </trans-unit>
        <trans-unit id="fbebff73abaef1a72758d8d123134fcf9a569f77" translate="yes" xml:space="preserve">
          <source>Arrayable is the interface that should be implemented by classes who want to support customizable representation of their instances.</source>
          <target state="translated">Arrayable은 인스턴스의 사용자 정의 가능한 표현을 지원하려는 클래스에 의해 구현되어야하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="4de51d1ce03915d12cd3a763430c6c41bc16b83d" translate="yes" xml:space="preserve">
          <source>ArrayableTrait implements &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;toArray()&lt;/a&gt; by respecting the field definitions as declared in &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields()&lt;/a&gt; and &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields()&lt;/a&gt;.</source>
          <target state="translated">ArrayableTrait 는 &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;fields ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;extraFields ()에&lt;/a&gt; 선언 된 필드 정의를 존중하여 &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;toArray ()&lt;/a&gt; 를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="45fd31062256ce4b54d432bf4a32178261f31241" translate="yes" xml:space="preserve">
          <source>ArrayableTrait provides a common implementation of the &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii\base\Arrayable&lt;/a&gt; interface.</source>
          <target state="translated">ArrayableTrait는 yii &lt;a href=&quot;yii-base-arrayable&quot;&gt;\ base \ Arrayable&lt;/a&gt; 인터페이스 의 일반적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f475debd2f84169fd5f0bbf4f9eece9de2a48b47" translate="yes" xml:space="preserve">
          <source>As a result, we will not see error message near form fields. To display it, we can include the error summary in view:</source>
          <target state="translated">결과적으로 양식 필드 근처에 오류 메시지가 표시되지 않습니다. 이를 표시하기 위해 오류 요약을보기에 포함시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca7e8b6043f5ac61b1f1cc888796e522fb938403" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, you should never trust the data received from end users and should always validate it before putting it to good use.</source>
          <target state="translated">일반적으로 최종 사용자로부터받은 데이터를 신뢰해서는 안되며 데이터를 올바르게 사용하기 전에 항상 유효성을 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="36e2419d1789031ad93dde73d1e0fb4080f0896a" translate="yes" xml:space="preserve">
          <source>As a shortcut format, a string may be used to specify the configuration of a data column which only contains &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;attribute&lt;/a&gt;, &lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;format&lt;/a&gt;, and/or &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;label&lt;/a&gt; options: &lt;code&gt;&quot;attribute:format:label&quot;&lt;/code&gt;. For example, the above &quot;name&quot; column can also be specified as: &lt;code&gt;&quot;name:text:Name&quot;&lt;/code&gt;. Both &quot;format&quot; and &quot;label&quot; are optional. They will take default values if absent.</source>
          <target state="translated">바로 가기 형식으로 문자열을 사용하여 &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;attribute&lt;/a&gt; , &lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;format&lt;/a&gt; 및 / 또는 &lt;a href=&quot;yii-grid-datacolumn#%24label-detail&quot;&gt;레이블&lt;/a&gt; 옵션 만 포함하는 데이터 열의 구성을 지정할 수 있습니다 : &lt;code&gt;&quot;attribute:format:label&quot;&lt;/code&gt; . 예를 들어, 위의 &quot;name&quot;열을 &lt;code&gt;&quot;name:text:Name&quot;&lt;/code&gt; 으로 지정할 수도 있습니다 . &quot;형식&quot;및 &quot;라벨&quot;은 모두 선택 사항입니다. 없는 경우 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="484dd72010beb69264280f48883059a497658025" translate="yes" xml:space="preserve">
          <source>As aforementioned, a view is simply a PHP script mixed with HTML and PHP code. The following is the view that presents a login form. As you can see, PHP code is used to generate the dynamic content, such as the page title and the form, while HTML code organizes them into a presentable HTML page.</source>
          <target state="translated">앞에서 언급했듯이보기는 HTML과 PHP 코드가 혼합 된 PHP 스크립트입니다. 다음은 로그인 양식을 보여주는보기입니다. 보시다시피, PHP 코드는 페이지 제목 및 양식과 같은 동적 컨텐츠를 생성하는 데 사용되며 HTML 코드는이를 표시 가능한 HTML 페이지로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5ba0a7635fe3c5ecee6359b765e4712453d078fd" translate="yes" xml:space="preserve">
          <source>As aforementioned, besides using the default &lt;code&gt;response&lt;/code&gt; application component, you can also create your own response objects and send them to end users. You can do so by returning such object in an action method, like the following,</source>
          <target state="translated">앞에서 설명한 것처럼 기본 &lt;code&gt;response&lt;/code&gt; 응용 프로그램 구성 요소를 사용하는 것 외에도 고유 한 응답 개체를 만들어 최종 사용자에게 보낼 수도 있습니다. 다음과 같은 액션 메소드에서 이러한 객체를 반환하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d14ee148c10118344541047d1e58d23e3ea28ae0" translate="yes" xml:space="preserve">
          <source>As aforementioned, if an asset bundle is located in a directory that is not Web accessible, its assets will be copied to a Web directory when the bundle is being registered with a view. This process is called &lt;em&gt;asset publishing&lt;/em&gt;, and is done automatically by the &lt;a href=&quot;yii-web-assetmanager&quot;&gt;asset manager&lt;/a&gt;.</source>
          <target state="translated">앞에서 언급 한 것처럼 자산 번들이 웹에 액세스 할 수없는 디렉토리에 있으면 번들이보기에 등록 될 때 자산이 웹 디렉토리에 복사됩니다. 이 프로세스를 &lt;em&gt;자산 공개&lt;/em&gt; 라고 하며 &lt;a href=&quot;yii-web-assetmanager&quot;&gt;자산 관리자가&lt;/a&gt; 자동으로 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="2837bb903592caf8a0d1223e3b2429bd516ecd81" translate="yes" xml:space="preserve">
          <source>As aforementioned, log messages are maintained in an array by the &lt;a href=&quot;yii-log-logger&quot;&gt;logger object&lt;/a&gt;. To limit the memory consumption by this array, the logger will flush the recorded messages to the &lt;a href=&quot;#log-targets&quot;&gt;log targets&lt;/a&gt; each time the array accumulates a certain number of log messages. You can customize this number by configuring the &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; property of the &lt;code&gt;log&lt;/code&gt; component:</source>
          <target state="translated">앞서 언급했듯이 로그 메시지는 &lt;a href=&quot;yii-log-logger&quot;&gt;로거 객체에&lt;/a&gt; 의해 배열로 유지됩니다 . 이 어레이의 메모리 소비를 제한하기 위해 로거는 어레이가 특정 수의 로그 메시지를 누적 할 때마다 기록 된 메시지를 &lt;a href=&quot;#log-targets&quot;&gt;로그 대상으로&lt;/a&gt; 플러시 합니다. &lt;code&gt;log&lt;/code&gt; 구성 요소 의 &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; 특성을 구성하여이 숫자를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f961a6f658e8c4090464ab86e837f5d261b33df" translate="yes" xml:space="preserve">
          <source>As aforementioned, rules add additional constraint to roles and permissions. A rule is a class extending from &lt;a href=&quot;yii-rbac-rule&quot;&gt;yii\rbac\Rule&lt;/a&gt;. It must implement the &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;execute()&lt;/a&gt; method. In the hierarchy we've created previously author cannot edit his own post. Let's fix it. First we need a rule to verify that the user is the post author:</source>
          <target state="translated">앞서 언급했듯이 규칙은 역할 및 권한에 추가적인 제약 조건을 추가합니다. 규칙은 &lt;a href=&quot;yii-rbac-rule&quot;&gt;yii \ rbac \ Rule&lt;/a&gt; 에서 확장되는 클래스 입니다. 반드시 &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;execute ()&lt;/a&gt; 메소드를 구현해야합니다 . 이전에 만든 계층 구조에서 작성자는 자신의 게시물을 편집 할 수 없습니다. 고치자 먼저 사용자가 포스트 작성자인지 확인하는 규칙이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8af00427a3bb997dde063dc2c60652d6c2b81612" translate="yes" xml:space="preserve">
          <source>As aforementioned, the data brought back from the database are populated into Active Record instances, and each row of the query result corresponds to a single Active Record instance. You can access the column values by accessing the attributes of the Active Record instances, for example,</source>
          <target state="translated">앞에서 언급 한 것처럼 데이터베이스에서 가져온 데이터는 Active Record 인스턴스에 채워지고 쿼리 결과의 각 행은 단일 Active Record 인스턴스에 해당합니다. 예를 들어, 활성 레코드 인스턴스의 속성에 액세스하여 열 값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="850bd5fabdff0df28992bb2351e107c8e94bc6d9" translate="yes" xml:space="preserve">
          <source>As aforementioned, the error handler turns all non-fatal PHP errors into catchable exceptions. This means you can use the following code to deal with PHP errors:</source>
          <target state="translated">앞에서 언급했듯이 오류 처리기는 치명적이지 않은 모든 PHP 오류를 catch 가능한 예외로 변환합니다. 즉, 다음 코드를 사용하여 PHP 오류를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f504177d6ad022f06d1300b6e044c49da2e21c9d" translate="yes" xml:space="preserve">
          <source>As aforementioned, the formatter may use the currently active &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;locale&lt;/a&gt; to determine how to format a value that is suitable in the target country/region. For example, the same date value may be formatted differently for different locales:</source>
          <target state="translated">전술 한 바와 같이, 포맷터는 현재 활성화 된 &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;로케일&lt;/a&gt; 을 사용하여 타겟 국가 / 지역에 적합한 값을 포맷하는 방법을 결정할 수있다. 예를 들어, 동일한 날짜 값은 다른 로케일에 따라 다르게 형식화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aeef30065b0adef9628d7576516a55a98eb2cb7d" translate="yes" xml:space="preserve">
          <source>As an example, say that the &lt;code&gt;Customer&lt;/code&gt; ActiveRecord class is associated with the &lt;code&gt;customer&lt;/code&gt; table. This would mean that the class's &lt;code&gt;name&lt;/code&gt; attribute is automatically mapped to the &lt;code&gt;name&lt;/code&gt; column in &lt;code&gt;customer&lt;/code&gt; table. Thanks to Active Record, assuming the variable &lt;code&gt;$customer&lt;/code&gt; is an object of type &lt;code&gt;Customer&lt;/code&gt;, to get the value of the &lt;code&gt;name&lt;/code&gt; column for the table row, you can use the expression &lt;code&gt;$customer-&amp;gt;name&lt;/code&gt;. In this example, Active Record is providing an object-oriented interface for accessing data stored in the database. But Active Record provides much more functionality than this.</source>
          <target state="translated">예를 들어 &lt;code&gt;Customer&lt;/code&gt; ActiveRecord 클래스가 &lt;code&gt;customer&lt;/code&gt; 테이블 과 연관되어 있다고 가정하십시오 . 이는 클래스의 &lt;code&gt;name&lt;/code&gt; 속성이 &lt;code&gt;customer&lt;/code&gt; 테이블 의 &lt;code&gt;name&lt;/code&gt; 열에 자동으로 매핑 됨을 의미 합니다. 변수 &lt;code&gt;$customer&lt;/code&gt; 가 &lt;code&gt;Customer&lt;/code&gt; 유형의 객체 라고 가정하고 Active Record 덕분에 테이블 행 의 &lt;code&gt;name&lt;/code&gt; 열 값을 얻으려면 &lt;code&gt;$customer-&amp;gt;name&lt;/code&gt; 표현식을 사용할 수 있습니다 . 이 예에서 Active Record는 데이터베이스에 저장된 데이터에 액세스하기위한 객체 지향 인터페이스를 제공합니다. 그러나 Active Record는 이보다 훨씬 더 많은 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9261305a0066fedd72b31c2be00661bbbe4da402" translate="yes" xml:space="preserve">
          <source>As an example, to only have the view, and update button you can add the ActionColumn to your GridView columns as follows:</source>
          <target state="translated">예를 들어,보기 및 업데이트 단추 만 갖기 위해 다음과 같이 ActionColumn을 GridView 열에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2294e31a91d8ebe38022a75f5269af8817bed489" translate="yes" xml:space="preserve">
          <source>As can be seen in the code above, the console application uses its own configuration file, named &lt;code&gt;console.php&lt;/code&gt;. In this file you should configure various &lt;a href=&quot;guide-structure-application-components&quot;&gt;application components&lt;/a&gt; and properties for the console application in particular.</source>
          <target state="translated">위의 코드에서 볼 수 있듯이 콘솔 응용 프로그램은 &lt;code&gt;console.php&lt;/code&gt; 라는 자체 구성 파일을 사용합니다 . 이 파일에서는 특히 콘솔 응용 프로그램에 대한 다양한 &lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소&lt;/a&gt; 및 속성을 구성 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7239db934b4f387094639d2d671db3e5fd4b87cb" translate="yes" xml:space="preserve">
          <source>As described above, the &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; method serves for two purposes: determining which attributes should be validated, and determining which attributes are safe. In some rare cases, you may want to validate an attribute but do not want to mark it safe. You can do so by prefixing an exclamation mark &lt;code&gt;!&lt;/code&gt; to the attribute name when declaring it in &lt;code&gt;scenarios()&lt;/code&gt;, like the &lt;code&gt;secret&lt;/code&gt; attribute in the following:</source>
          <target state="translated">위에서 설명한 것처럼 &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii \ base \ Model :: scenarios ()&lt;/a&gt; 메서드는 유효성을 검사 할 특성을 결정하고 안전한 특성을 결정하는 두 가지 용도로 사용됩니다. 드문 경우이지만 속성의 유효성을 검사하고 싶지만 안전한 것으로 표시하지 않을 수 있습니다. 느낌표를 접두사로 사용하면됩니다 &lt;code&gt;!&lt;/code&gt; 다음 의 &lt;code&gt;secret&lt;/code&gt; 속성 과 같이 &lt;code&gt;scenarios()&lt;/code&gt; 에서 선언 할 때 속성 이름으로</target>
        </trans-unit>
        <trans-unit id="51430248033b063f779afc2ba45fed3a8de4f4db" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;#rendering-in-controllers&quot;&gt;Rendering in Controllers&lt;/a&gt; subsection, when you render a view by calling the &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; method in a controller, a layout will be applied to the rendering result. By default, the layout &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;a href=&quot;#rendering-in-controllers&quot;&gt;컨트롤러&lt;/a&gt; 에서 렌더링 하위 섹션 에 설명 된대로 컨트롤러 에서 &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render ()&lt;/a&gt; 메서드를 호출하여 뷰를 렌더링 하면 레이아웃이 렌더링 결과에 적용됩니다. 기본적으로 &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e07d3fe2092cf163fd9d0e2991a34a7c1606d475" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;#resolving-dependencies&quot;&gt;Resolving Dependencies&lt;/a&gt; subsection, &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; and &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt; can optionally take dependency's constructor parameters as a third argument. To set the constructor parameters, you may use the following configuration array format:</source>
          <target state="translated">&lt;a href=&quot;#resolving-dependencies&quot;&gt;종속성 해결&lt;/a&gt; 하위 섹션에 설명 된대로 &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set ()&lt;/a&gt; 및 &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton ()&lt;/a&gt; 은 선택적으로 종속성의 생성자 매개 변수를 세 번째 인수로 사용할 수 있습니다. 생성자 매개 변수를 설정하려면 다음 구성 배열 형식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0029b31d99f2e78be6c6229de75f036e664e3f4f" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;Customizing Asset Bundles&lt;/a&gt; subsection, the above configuration changes the default behavior of each bundle. In particular, Bundle A, B, C and D no longer have any asset files. They now all depend on the &lt;code&gt;all&lt;/code&gt; bundle which contains the combined &lt;code&gt;all-xyz.css&lt;/code&gt; and &lt;code&gt;all-xyz.js&lt;/code&gt; files. Consequently, for Page X, instead of including the original source files from Bundle A, B and C, only these two combined files will be included; the same thing happens to Page Y.</source>
          <target state="translated">&lt;a href=&quot;#customizing-asset-bundles&quot;&gt;자산 번들 사용자 정의&lt;/a&gt; 하위 섹션에 설명 된대로 위 구성은 각 번들의 기본 동작을 변경합니다. 특히 번들 A, B, C 및 D에는 더 이상 자산 파일이 없습니다. 그들은 지금 모든에 따라 &lt;code&gt;all&lt;/code&gt; 조합이 포함되어 번들 &lt;code&gt;all-xyz.css&lt;/code&gt; 및 &lt;code&gt;all-xyz.js&lt;/code&gt; 파일을. 따라서 페이지 X의 경우 번들 A, B 및 C의 원본 소스 파일을 포함하는 대신이 두 결합 파일 만 포함됩니다. 페이지 Y에서도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="1573d6adb6188fdbfa3506a698a80dcd68e25d1d" translate="yes" xml:space="preserve">
          <source>As explained previously, you only need to implement &lt;code&gt;getAuthKey()&lt;/code&gt; and &lt;code&gt;validateAuthKey()&lt;/code&gt; if your application uses cookie-based login feature. In this case, you may use the following code to generate an auth key for each user and store it in the &lt;code&gt;user&lt;/code&gt; table:</source>
          <target state="translated">앞에서 설명한 것처럼 응용 프로그램에서 쿠키 기반 로그인 기능을 사용하는 경우 &lt;code&gt;getAuthKey()&lt;/code&gt; 및 &lt;code&gt;validateAuthKey()&lt;/code&gt; 만 구현하면됩니다 . 이 경우 다음 코드를 사용하여 각 사용자에 대한 인증 키를 생성하고이를 &lt;code&gt;user&lt;/code&gt; 테이블 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed48c38ecf8ab6a07e5efc79531962415dc94881" translate="yes" xml:space="preserve">
          <source>As mentioned above, an application component will only be instantiated when it is being accessed the first time. If it is not accessed at all during a request, it will not be instantiated. Sometimes, however, you may want to instantiate an application component for every request, even if it is not explicitly accessed. To do so, you may list its ID in the &lt;a href=&quot;yii-base-application#bootstrap()-detail&quot;&gt;bootstrap&lt;/a&gt; property of the application.</source>
          <target state="translated">위에서 언급했듯이 응용 프로그램 구성 요소는 처음 액세스 할 때만 인스턴스화됩니다. 요청 중에 전혀 액세스하지 않으면 인스턴스화되지 않습니다. 그러나 때로는 명시 적으로 액세스하지 않더라도 모든 요청에 ​​대해 응용 프로그램 구성 요소를 인스턴스화 할 수 있습니다. 이를 위해 애플리케이션 의 &lt;a href=&quot;yii-base-application#bootstrap()-detail&quot;&gt;부트 스트랩&lt;/a&gt; 속성에 해당 ID를 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da8bf91de7ece2fd9cb4f6c59cdee44e1787b5e3" translate="yes" xml:space="preserve">
          <source>As noted before, when using JOIN in a query, we need to disambiguate column names. Therefor often an alias is defined for a table. Setting an alias for the relational query would be possible by customizing the relation query in the following way:</source>
          <target state="translated">앞에서 언급했듯이 쿼리에서 JOIN을 사용할 때는 열 이름을 명확하게해야합니다. 따라서 종종 테이블에 대한 별명이 정의됩니다. 다음과 같은 방법으로 관계 쿼리를 사용자 정의하면 관계형 쿼리의 별칭을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9873ec58ed12881c76e1239a377080fdc3fd77f" translate="yes" xml:space="preserve">
          <source>As shown above, &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; allows you to access a component like a property using the component ID. When you access a component for the first time, &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; will use the component registration information to create a new instance of the component and return it. Later, if the component is accessed again, the service locator will return the same instance.</source>
          <target state="translated">위에 표시된 것처럼 &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator를&lt;/a&gt; 사용하면 구성 요소 ID를 사용하여 속성과 같은 구성 요소에 액세스 할 수 있습니다. 처음으로 컴포넌트에 액세스하면 &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator&lt;/a&gt; 는 컴포넌트 등록 정보를 사용하여 컴포넌트의 새 인스턴스를 작성하여 리턴합니다. 나중에 구성 요소에 다시 액세스하면 서비스 로케이터는 동일한 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57275728031bb518e3560944782495830b64498d" translate="yes" xml:space="preserve">
          <source>As shown above, the child layout content should be enclosed within &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent()&lt;/a&gt; and &lt;a href=&quot;yii-base-view#endContent()-detail&quot;&gt;endContent()&lt;/a&gt;. The parameter passed to &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent()&lt;/a&gt; specifies what is the parent layout. It can be either a layout file or alias.</source>
          <target state="translated">위에 표시된대로 하위 레이아웃 컨텐츠는 &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-view#endContent()-detail&quot;&gt;endContent ()로 묶어야&lt;/a&gt; 합니다. &lt;a href=&quot;yii-base-view#beginContent()-detail&quot;&gt;beginContent ()에&lt;/a&gt; 전달 된 매개 변수 는 부모 레이아웃을 지정합니다. 레이아웃 파일 또는 별명 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cddc62b1f64a706e416f8810a02e7256d0f4ec1" translate="yes" xml:space="preserve">
          <source>As this header directive is non-standard different directives exists for different web servers applications:</source>
          <target state="translated">이 헤더 지시문은 비표준이기 때문에 다른 웹 서버 응용 프로그램에 다른 지시문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="452d63e0d4bb32d7f5c85597d447cd098bcc9ab9" translate="yes" xml:space="preserve">
          <source>As validators are executed in the order they are specified this will first validate that the values entered in &lt;code&gt;fromDate&lt;/code&gt; and &lt;code&gt;toDate&lt;/code&gt; are valid date values and if so, they will be converted into a machine readable format. Afterwards these two values are compared with the compare validator. Client validation is not enabled as this will only work on the server-side because the date validator currently does not provide client validation, so &lt;a href=&quot;yii-validators-validator#%24enableClientValidation-detail&quot;&gt;$enableClientValidation&lt;/a&gt; is set to &lt;code&gt;false&lt;/code&gt; on the compare validator too.</source>
          <target state="translated">지정된 순서대로 유효성 검사기를 실행하면 먼저 &lt;code&gt;fromDate&lt;/code&gt; 및 &lt;code&gt;toDate&lt;/code&gt; 에 입력 한 값 이 유효한 날짜 값인지 확인하고, 유효한 경우 머신에서 읽을 수있는 형식으로 변환됩니다. 그런 다음이 두 값을 비교 유효성 검증기와 비교합니다. 날짜 유효성 검사기가 현재 클라이언트 유효성 검사를 제공하지 않기 때문에 서버 쪽에서 만 작동하므로 클라이언트 유효성 검사는 사용할 수 없으므로 비교 유효성 검사기에서도 &lt;a href=&quot;yii-validators-validator#%24enableClientValidation-detail&quot;&gt;$ enableClientValidation&lt;/a&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d585c94b400fa4319d142bdbe63d1929ee736d58" translate="yes" xml:space="preserve">
          <source>As was mentioned earlier it's recommended to use asset bundles instead of registering CSS and JavaScript files directly. You can get details on how to define asset bundles in the &lt;a href=&quot;guide-structure-assets&quot;&gt;&quot;Assets&quot; section&lt;/a&gt;. As for using already defined asset bundles, it's very straightforward:</source>
          <target state="translated">앞에서 언급했듯이 CSS 및 JavaScript 파일을 직접 등록하는 대신 자산 번들을 사용하는 것이 좋습니다. &lt;a href=&quot;guide-structure-assets&quot;&gt;&quot;자산&quot;섹션&lt;/a&gt; 에서 자산 번들을 정의하는 방법에 대한 세부 사항을 얻을 수 있습니다 . 이미 정의 된 자산 번들을 사용하는 경우 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="9672da2617d161f8c35249335357a5fbae5539bc" translate="yes" xml:space="preserve">
          <source>As we described earlier, a fixture may depend on other fixtures. For example, a &lt;code&gt;UserProfileFixture&lt;/code&gt; may need to depends on &lt;code&gt;UserFixture&lt;/code&gt; because the user profile table contains a foreign key pointing to the user table. The dependency is specified via the &lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;yii\test\Fixture::$depends&lt;/a&gt; property, like the following,</source>
          <target state="translated">앞에서 설명한 바와 같이, 조명기는 다른 조명기에 의존 할 수 있습니다. 예를 들어, &lt;code&gt;UserProfileFixture&lt;/code&gt; 는 사용자 프로파일 테이블이 사용자 테이블을 가리키는 외래 키를 포함하므로 &lt;code&gt;UserFixture&lt;/code&gt; 에 의존해야 할 수도 있습니다 . 종속성은 다음과 같이 &lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;yii \ test \ Fixture :: $ depends&lt;/a&gt; 속성을 통해 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="94568645b114617fea333e40949a91933d722067" translate="yes" xml:space="preserve">
          <source>As we have described above, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; is the central piece responsible for converting resource objects or collections into arrays. It recognizes objects implementing &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii\base\Arrayable&lt;/a&gt; as well as &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;. The former is mainly implemented by resource objects, while the latter resource collections.</source>
          <target state="translated">위에서 설명한 것처럼 &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii \ rest \ Serializer&lt;/a&gt; 는 리소스 개체 또는 컬렉션을 배열로 변환하는 핵심 요소입니다. &lt;a href=&quot;yii-base-arrayable&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;\ data \ DataProviderInterface&lt;/a&gt; 뿐만 아니라 yii \ base \ Arrayable 을 구현하는 객체를 인식합니다 . 전자는 주로 자원 객체로 구현되고 후자는 자원 수집으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="7dac11129364483f5c1fb018d0ee796d8ee0c500" translate="yes" xml:space="preserve">
          <source>As with all places where raw SQL is involved, you may use the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS agnostic quoting syntax&lt;/a&gt; for table and column names when writing DB expressions in select.</source>
          <target state="translated">원시 SQL이 관련된 모든 장소와 마찬가지로 select에서 DB 표현식을 작성할 때 테이블 및 열 이름에 &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS 독립적 인용 구문&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0793ad6a7d027728dd879ebeeb1f8dafd3e323cb" translate="yes" xml:space="preserve">
          <source>As with all places where raw SQL is involved, you may use the &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS agnostic quoting syntax&lt;/a&gt; for table and column names when writing conditions in string format.</source>
          <target state="translated">원시 SQL이 관련된 모든 장소와 마찬가지로, 조건을 문자열 형식으로 쓸 때 테이블 및 열 이름에 &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;DBMS 독립적 인용 구문&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c90a3583d2da4dfa6924c00a79cf1617238633f" translate="yes" xml:space="preserve">
          <source>As you can see from the code comment above, there are 101 SQL statements being executed! This is because each time you access the &lt;code&gt;orders&lt;/code&gt; relation property of a different &lt;code&gt;Customer&lt;/code&gt; object in the for-loop, a SQL statement will be executed.</source>
          <target state="translated">위의 코드 주석에서 볼 수 있듯이 101 개의 SQL 문이 실행 중입니다! for 루프에서 다른 &lt;code&gt;Customer&lt;/code&gt; 오브젝트 의 &lt;code&gt;orders&lt;/code&gt; 관계 특성에 액세스 할 때마다 SQL 문이 실행되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="af91e94d99d50cd2f1ace10873ad9120ffe39c48" translate="yes" xml:space="preserve">
          <source>As you can see in the screenshot, Yii has already defined a set of commands that are available by default:</source>
          <target state="translated">스크린 샷에서 볼 수 있듯이 Yii는 기본적으로 사용할 수있는 일련의 명령을 이미 정의했습니다.</target>
        </trans-unit>
        <trans-unit id="59165dba75660573a50efa9e01b0e0074781d685" translate="yes" xml:space="preserve">
          <source>As you can see, PHP's output buffer is started in &lt;code&gt;init()&lt;/code&gt; so that any output between the calls of &lt;code&gt;init()&lt;/code&gt; and &lt;code&gt;run()&lt;/code&gt; can be captured, processed and returned in &lt;code&gt;run()&lt;/code&gt;.</source>
          <target state="translated">보다시피, PHP의 출력 버퍼는 &lt;code&gt;init()&lt;/code&gt; 에서 시작 되므로 &lt;code&gt;init()&lt;/code&gt; 와 &lt;code&gt;run()&lt;/code&gt; 호출 사이의 모든 출력을 캡처, 처리 및 &lt;code&gt;run()&lt;/code&gt; 에서 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3737fbfcf8ec2a290e673827b88ce473ff4606a0" translate="yes" xml:space="preserve">
          <source>As you can see, all these methods are named as &lt;code&gt;asXyz()&lt;/code&gt;, where &lt;code&gt;Xyz&lt;/code&gt; stands for a supported format. Alternatively, you may format data using the generic method &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;format()&lt;/a&gt;, which allows you to control the desired format programmatically and is commonly used by widgets like &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt; and &lt;a href=&quot;yii-widgets-detailview&quot;&gt;yii\widgets\DetailView&lt;/a&gt;. For example,</source>
          <target state="translated">보시다시피 이러한 모든 방법의 이름은 &lt;code&gt;asXyz()&lt;/code&gt; 여기서 &lt;code&gt;Xyz&lt;/code&gt; 는 지원되는 형식을 나타냅니다. 또는 일반 메소드 &lt;a href=&quot;yii-i18n-formatter#format()-detail&quot;&gt;format ()을&lt;/a&gt; 사용하여 데이터를 형식화 할 수 있습니다 .이를 통해 원하는 형식을 프로그래밍 방식으로 제어 할 수 있으며 &lt;a href=&quot;yii-widgets-detailview&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-grid-gridview&quot;&gt;\ grid \ GridView&lt;/a&gt; 및 yii \ widgets \ DetailView 와 같은 위젯에서 일반적으로 사용됩니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="73fa135256d4d4ca0b681a9540ea9079a2b78eb3" translate="yes" xml:space="preserve">
          <source>As you can see, although &lt;code&gt;$component&lt;/code&gt; does not define &lt;code&gt;prop1&lt;/code&gt; and &lt;code&gt;foo()&lt;/code&gt;, they can be used as if they are part of the component definition due to the attached behavior.</source>
          <target state="translated">보시다시피, &lt;code&gt;$component&lt;/code&gt; 는 &lt;code&gt;prop1&lt;/code&gt; 과 &lt;code&gt;foo()&lt;/code&gt; 정의하지 않지만 연결된 동작으로 인해 컴포넌트 정의의 일부인 것처럼 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c52b75701591352076bfed31dc60f8af996668d" translate="yes" xml:space="preserve">
          <source>As you can see, in the &lt;code&gt;update&lt;/code&gt; view you would render input fields using two models &lt;code&gt;$user&lt;/code&gt; and &lt;code&gt;$profile&lt;/code&gt;.</source>
          <target state="translated">보시다시피, &lt;code&gt;update&lt;/code&gt; 보기 에서 두 개의 모델 &lt;code&gt;$user&lt;/code&gt; 및 &lt;code&gt;$profile&lt;/code&gt; 사용하여 입력 필드를 렌더링 합니다 .</target>
        </trans-unit>
        <trans-unit id="cf3da484741cd88799acaff0ad68f3b2ec0fa95c" translate="yes" xml:space="preserve">
          <source>As you can see, in the response headers, there is information about the total count, page count, etc. There are also links that allow you to navigate to other pages of data. For example, &lt;code&gt;http://localhost/users?page=2&lt;/code&gt; would give you the next page of the user data.</source>
          <target state="translated">보시다시피 응답 헤더에는 총 수, 페이지 수 등에 대한 정보가 있습니다. 다른 페이지의 데이터를 탐색 할 수있는 링크도 있습니다. 예를 들어 &lt;code&gt;http://localhost/users?page=2&lt;/code&gt; 는 사용자 데이터의 다음 페이지를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="71fced5eaeb58aa9eb35094a317952401ad8a6e8" translate="yes" xml:space="preserve">
          <source>As you can see, page caching is very similar to &lt;a href=&quot;guide-caching-fragment&quot;&gt;fragment caching&lt;/a&gt;. They both support options such as &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;dependencies&lt;/code&gt;, &lt;code&gt;variations&lt;/code&gt;, and &lt;code&gt;enabled&lt;/code&gt;. Their main difference is that page caching is implemented as an &lt;a href=&quot;guide-structure-filters&quot;&gt;action filter&lt;/a&gt; while fragment caching a &lt;a href=&quot;guide-structure-widgets&quot;&gt;widget&lt;/a&gt;.</source>
          <target state="translated">보다시피, 페이지 캐싱은 &lt;a href=&quot;guide-caching-fragment&quot;&gt;조각 캐싱&lt;/a&gt; 과 매우 유사합니다 . &lt;code&gt;duration&lt;/code&gt; , &lt;code&gt;dependencies&lt;/code&gt; , &lt;code&gt;variations&lt;/code&gt; 및 &lt;code&gt;enabled&lt;/code&gt; 와 같은 옵션을 모두 지원합니다. 합니다. 주요 차이점은 페이지 캐싱이 &lt;a href=&quot;guide-structure-widgets&quot;&gt;위젯&lt;/a&gt; 을 조각 캐싱하는 동안 &lt;a href=&quot;guide-structure-filters&quot;&gt;작업 필터&lt;/a&gt; 로 구현된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="84260914752fb6ac84f0c0ab25f0bc20cbe84ae7" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method triggers several useful events. By responding to these events, it is possible to adjust or decorate the response.</source>
          <target state="translated">보다시피, &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send ()&lt;/a&gt; 메소드는 여러 유용한 이벤트를 트리거합니다. 이러한 이벤트에 응답함으로써 응답을 조정하거나 장식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebda101cc9d30b2e3c9fda857168b641e88cf8da" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;actions()&lt;/code&gt; method should return an array whose keys are action IDs and values the corresponding action class names or &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;. Unlike inline actions, action IDs for standalone actions can contain arbitrary characters, as long as they are declared in the &lt;code&gt;actions()&lt;/code&gt; method.</source>
          <target state="translated">보시다시피, &lt;code&gt;actions()&lt;/code&gt; 메소드는 키가 조치 ID 인 배열을 리턴하고 해당 조치 클래스 이름 또는 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 값을 지정해야 합니다. . 인라인 조치와 달리 독립형 조치의 조치 ID는 &lt;code&gt;actions()&lt;/code&gt; 메소드에 선언되어있는 한 임의의 문자를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e241100b1416c0bbf91ff397c70a5ea72779f7e8" translate="yes" xml:space="preserve">
          <source>As you can see, the asset bundles are divided into three groups: &lt;code&gt;allShared&lt;/code&gt;, &lt;code&gt;allBackEnd&lt;/code&gt; and &lt;code&gt;allFrontEnd&lt;/code&gt;. They each depends on an appropriate set of asset bundles. For example, &lt;code&gt;allBackEnd&lt;/code&gt; depends on &lt;code&gt;app\assets\AdminAsset&lt;/code&gt;. When running &lt;code&gt;asset&lt;/code&gt; command with this configuration, it will combine asset bundles according to the above specification.</source>
          <target state="translated">보시다시피 자산 번들은 &lt;code&gt;allShared&lt;/code&gt; , &lt;code&gt;allBackEnd&lt;/code&gt; 및 &lt;code&gt;allFrontEnd&lt;/code&gt; 의 세 그룹으로 나뉩니다 . 각각 적절한 자산 번들 세트에 따라 다릅니다. 예를 들어 &lt;code&gt;allBackEnd&lt;/code&gt; 는 &lt;code&gt;app\assets\AdminAsset&lt;/code&gt; 에 따라 다릅니다 . 달릴 때 &lt;code&gt;asset&lt;/code&gt; 이 구성으로 자산 명령을 하면 위 사양에 따라 자산 번들이 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="99332175435a66cd5c51183af5f6b3b4a859ea2c" translate="yes" xml:space="preserve">
          <source>As you can see, the key includes all necessary information needed to uniquely specify a database table.</source>
          <target state="translated">보시다시피 키에는 데이터베이스 테이블을 고유하게 지정하는 데 필요한 모든 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="550dc6a26877cd64fc5b67d37d76bdc822bfa83c" translate="yes" xml:space="preserve">
          <source>As you can see, the layout generates the HTML tags that are common to all pages. Within the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; section, the layout echoes the &lt;code&gt;$content&lt;/code&gt; variable which represents the rendering result of content views and is pushed into the layout when &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii\base\Controller::render()&lt;/a&gt; is called.</source>
          <target state="translated">보다시피, 레이아웃은 모든 페이지에 공통 인 HTML 태그를 생성합니다. &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 섹션 내에서 레이아웃 은 컨텐츠 뷰의 렌더링 결과를 나타내는 &lt;code&gt;$content&lt;/code&gt; 변수를 에코하고 &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii \ base \ Controller :: render ()&lt;/a&gt; 가 호출 될 때 레이아웃으로 푸시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d0e2ab6807efff8fb37e1aeb98600891aac3db0" translate="yes" xml:space="preserve">
          <source>As you can see, the property takes an array of extension specifications. Each extension is specified with an array consisting of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; elements. If an extension needs to run during the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrap&lt;/a&gt; process, a &lt;code&gt;bootstrap&lt;/code&gt; element may be specified with a bootstrapping class name or a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; array. An extension may also define a few &lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt;.</source>
          <target state="translated">보시다시피이 속성은 확장 사양 배열을 사용합니다. 각 확장은 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;version&lt;/code&gt; 요소 로 구성된 배열로 지정됩니다 . &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;부트 스트랩&lt;/a&gt; 프로세스 중에 확장을 실행해야하는 경우 부트 스트랩 클래스 이름 또는 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 배열 로 &lt;code&gt;bootstrap&lt;/code&gt; 요소를 지정할 수 있습니다 . 확장은 또한 몇 개의 &lt;a href=&quot;guide-concept-aliases&quot;&gt;별칭을&lt;/a&gt; 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e74f74fd0ea0faba2799d34ade6c6cb9b94cde44" translate="yes" xml:space="preserve">
          <source>As you can see, the query builder is intelligent enough to properly handle values that are nulls or arrays.</source>
          <target state="translated">보다시피, 쿼리 빌더는 널 또는 배열 인 값을 올바르게 처리 할 수있을 정도로 지능적입니다.</target>
        </trans-unit>
        <trans-unit id="fcd76f089ba69e28c7f33d693e5af4e36c0731c4" translate="yes" xml:space="preserve">
          <source>As you can see, these validation rules do not really validate the inputs. Instead, they will process the values and save them back to the attributes being validated.</source>
          <target state="translated">보시다시피 이러한 유효성 검사 규칙은 실제로 입력의 유효성을 검사하지는 않습니다. 대신, 값을 처리하고 유효성을 검증 할 속성에 다시 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9f978b1695a46272efc31459c84f8c674dc1e9c0" translate="yes" xml:space="preserve">
          <source>As you can see, this is very similar to the procedure with &lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt;. The only difference is that instead of using the &lt;code&gt;new&lt;/code&gt; operator to create a query object, you call &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii\db\ActiveRecord::find()&lt;/a&gt; to return a new query object which is of class &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;.</source>
          <target state="translated">보다시피, 이것은 &lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt; 를 사용한 프로 시저와 매우 유사합니다 . 유일한 차이점은 &lt;code&gt;new&lt;/code&gt; 연산자를 사용하여 쿼리 개체를 만드는 대신 &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii \ db \ ActiveRecord :: find ()&lt;/a&gt; 를 호출 하여 클래스 &lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery 인&lt;/a&gt; 새 쿼리 개체를 반환 한다는 것입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="327c3e579d0a27f963e7d0a5abccdd867f6a3ce0" translate="yes" xml:space="preserve">
          <source>As you can see, you can register a bootstrapping class in terms of either a class name or a configuration class.</source>
          <target state="translated">보시다시피, 클래스 이름 또는 구성 클래스 측면에서 부트 스트랩 클래스를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66874a8c759dd90f1fea9ad669ffac7f7fb9cf05" translate="yes" xml:space="preserve">
          <source>Asks the user for input. Ends when the user types a carriage return (PHP_EOL). Optionally, It also provides a prompt.</source>
          <target state="translated">사용자에게 입력을 요청합니다. 사용자가 캐리지 리턴 (PHP_EOL)을 입력하면 종료됩니다. 선택적으로 프롬프트도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="00b2ffc22ffe6ef0219c2c2b2b4d7f8c3f96c1f8" translate="yes" xml:space="preserve">
          <source>Asks user to confirm by typing y or n.</source>
          <target state="translated">y 또는 n을 입력하여 확인하도록 사용자에게 요청합니다.</target>
        </trans-unit>
        <trans-unit id="bda98c2151f56027efb69a688308b94576e1a797" translate="yes" xml:space="preserve">
          <source>Asset Bundles</source>
          <target state="translated">자산 번들</target>
        </trans-unit>
        <trans-unit id="6ac54a516f95d6101ba93ee141d79aa0e7ece8e7" translate="yes" xml:space="preserve">
          <source>Asset Conversion</source>
          <target state="translated">자산 전환</target>
        </trans-unit>
        <trans-unit id="43b5fc750a0a8ca9974237e9d72a2580f28eff9c" translate="yes" xml:space="preserve">
          <source>Asset Dependencies</source>
          <target state="translated">자산 의존성</target>
        </trans-unit>
        <trans-unit id="7b1699acb6cee23628544fb69294d1c3727d8b50" translate="yes" xml:space="preserve">
          <source>Asset Locations</source>
          <target state="translated">자산 위치</target>
        </trans-unit>
        <trans-unit id="0b898c33049a821c2822ba3c3379df098743bfca" translate="yes" xml:space="preserve">
          <source>Asset Mapping</source>
          <target state="translated">자산 매핑</target>
        </trans-unit>
        <trans-unit id="f6a0a74290e12a8804e0de36f4933ce849205be7" translate="yes" xml:space="preserve">
          <source>Asset Options</source>
          <target state="translated">자산 옵션</target>
        </trans-unit>
        <trans-unit id="d73761c7e77ee2b98737782d3ff5cd1bb1a3b17f" translate="yes" xml:space="preserve">
          <source>Asset Publishing</source>
          <target state="translated">자산 출판</target>
        </trans-unit>
        <trans-unit id="6f5721b3b2dcacaf4d4cef0647f5a92a2ee55f2e" translate="yes" xml:space="preserve">
          <source>Asset base path and command working directory</source>
          <target state="translated">자산 기본 경로 및 명령 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="6815c144110478082c7ca9cd28a9e17e396bc899" translate="yes" xml:space="preserve">
          <source>Asset bundles are specified as PHP classes extending from &lt;a href=&quot;yii-web-assetbundle&quot;&gt;yii\web\AssetBundle&lt;/a&gt;. The name of a bundle is simply its corresponding fully qualified PHP class name (without the leading backslash). An asset bundle class should be &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloadable&lt;/a&gt;. It usually specifies where the assets are located, what CSS and JavaScript files the bundle contains, and how the bundle depends on other bundles.</source>
          <target state="translated">자산 번들은 &lt;a href=&quot;yii-web-assetbundle&quot;&gt;yii \ web \ AssetBundle&lt;/a&gt; 에서 확장되는 PHP 클래스로 지정됩니다 . 번들의 이름은 단순히 해당하는 완전한 PHP 클래스 이름입니다 (앞의 백 슬래시 없음). 자산 번들 클래스는 &lt;a href=&quot;guide-concept-autoloading&quot;&gt;자동로드 가능&lt;/a&gt; 해야합니다 . 일반적으로 자산의 위치, 번들에 포함 된 CSS 및 JavaScript 파일 및 번들이 다른 번들에 의존하는 방식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="74e332a516d450d6e3754b627c9abb5d84c6171f" translate="yes" xml:space="preserve">
          <source>Asset bundles list.</source>
          <target state="translated">자산 번들 목록.</target>
        </trans-unit>
        <trans-unit id="26188e03af51e4da4b42e3faa72c64710f25988e" translate="yes" xml:space="preserve">
          <source>Asset dependencies are mainly specified through the &lt;a href=&quot;yii-web-assetbundle#%24depends-detail&quot;&gt;yii\web\AssetBundle::$depends&lt;/a&gt; property. In the &lt;code&gt;AppAsset&lt;/code&gt; example, the asset bundle depends on two other asset bundles: &lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii\web\YiiAsset&lt;/a&gt; and &lt;a href=&quot;yii-bootstrap-bootstrapasset&quot;&gt;yii\bootstrap\BootstrapAsset&lt;/a&gt;, which means the CSS and JavaScript files in &lt;code&gt;AppAsset&lt;/code&gt; will be included &lt;em&gt;after&lt;/em&gt; those files in the two dependent bundles.</source>
          <target state="translated">자산 종속성은 주로 &lt;a href=&quot;yii-web-assetbundle#%24depends-detail&quot;&gt;yii \ web \ AssetBundle :: $ depends&lt;/a&gt; 속성을 통해 지정됩니다 . 에서 &lt;code&gt;AppAsset&lt;/code&gt; 의 예를 들어, 자산 번들은 다른 두 자산의 번들에 따라 달라집니다 &lt;a href=&quot;yii-web-yiiasset&quot;&gt;YII \ 웹 \ YiiAsset&lt;/a&gt; 및 &lt;a href=&quot;yii-bootstrap-bootstrapasset&quot;&gt;YII \ 부트 스트랩 \ BootstrapAsset&lt;/a&gt; 에서 CSS와 자바 스크립트 파일을 의미 &lt;code&gt;AppAsset&lt;/code&gt; 이 포함됩니다 &lt;em&gt;후&lt;/em&gt; 두 의존 번들에서 해당 파일.</target>
        </trans-unit>
        <trans-unit id="ffd541ea7684e943685ef29a37c86a04e3ab08cd" translate="yes" xml:space="preserve">
          <source>Asset dependencies are transitive. This means if bundle A depends on B which depends on C, A will depend on C, too.</source>
          <target state="translated">자산 의존성은 전 이적입니다. 이것은 번들 A가 C에 의존하는 B에 의존하고 A가 C에 의존하는 경우를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5598d0c865c21c0e9bb5ffe40fc59576b5adcca9" translate="yes" xml:space="preserve">
          <source>Asset manager instance or its array configuration.</source>
          <target state="translated">자산 관리자 인스턴스 또는 해당 배열 구성.</target>
        </trans-unit>
        <trans-unit id="8594df8e750358fd470e3a09930439a35a07fa01" translate="yes" xml:space="preserve">
          <source>Asset manager instance.</source>
          <target state="translated">자산 관리자 인스턴스.</target>
        </trans-unit>
        <trans-unit id="f66e9c2528c620b17814663d7b63f9b0fef363c0" translate="yes" xml:space="preserve">
          <source>AssetBundle represents a collection of asset files, such as CSS, JS, images.</source>
          <target state="translated">AssetBundle은 CSS, JS, 이미지와 같은 자산 파일 모음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ba1ac37456a75903f6940da2674acb9a17754c0f" translate="yes" xml:space="preserve">
          <source>AssetConverter supports conversion of several popular script formats into JS or CSS scripts.</source>
          <target state="translated">AssetConverter는 널리 사용되는 여러 스크립트 형식을 JS 또는 CSS 스크립트로 변환하는 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="90992fac1e21c4cb1ba55ef4b848a407ba8a39c1" translate="yes" xml:space="preserve">
          <source>AssetManager is configured as an application component in &lt;a href=&quot;yii-web-application&quot;&gt;yii\web\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;assetManager&lt;/code&gt;.</source>
          <target state="translated">AssetManager는 기본적으로 &lt;a href=&quot;yii-web-application&quot;&gt;yii \ web \ Application&lt;/a&gt; 에서 응용 프로그램 구성 요소로 구성됩니다 . &lt;code&gt;Yii::$app-&amp;gt;assetManager&lt;/code&gt; 를 통해 해당 인스턴스에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d99eace589737bba73e19787d6fd07b01d837d2" translate="yes" xml:space="preserve">
          <source>AssetManager manages asset bundle configuration and loading.</source>
          <target state="translated">AssetManager는 자산 번들 구성 및로드를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="cfbe502f01d8d6b72053de040f8a04a4e976c04e" translate="yes" xml:space="preserve">
          <source>Assets, based on their location, can be classified as:</source>
          <target state="translated">위치에 따라 자산은 다음과 같이 분류 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1048f29ec321509fa4b87338907236e9fe24f98" translate="yes" xml:space="preserve">
          <source>Assign new values to Active Record attributes</source>
          <target state="translated">활성 레코드 속성에 새 값 지정</target>
        </trans-unit>
        <trans-unit id="7c7c96ccbb2af072864f03a56adfad48b398b303" translate="yes" xml:space="preserve">
          <source>Assigning roles to users</source>
          <target state="translated">사용자에게 역할 할당</target>
        </trans-unit>
        <trans-unit id="8a81c6bfb3eebe6ed9dae29295b99b18127ebbfe" translate="yes" xml:space="preserve">
          <source>Assignment represents an assignment of a role to a user.</source>
          <target state="translated">할당은 사용자에게 역할을 할당하는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5b95fb01a2cdf3c4d5614bd6b969a38748209711" translate="yes" xml:space="preserve">
          <source>Assigns a role to a user.</source>
          <target state="translated">사용자에게 역할을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="df5a7676484bec7031afe76829f37b5d2d08a6e8" translate="yes" xml:space="preserve">
          <source>Associated stream resource context.</source>
          <target state="translated">연관된 스트림 자원 컨텍스트.</target>
        </trans-unit>
        <trans-unit id="6017e17eb15a136356ed4bc5410b1a7e08b27a69" translate="yes" xml:space="preserve">
          <source>Associated stream resource context. This property is set automatically by PHP once wrapper is instantiated.</source>
          <target state="translated">연관된 스트림 자원 컨텍스트. 이 속성은 래퍼가 인스턴스화되면 PHP에 의해 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fec288fc3e278eb0fcf755ae0d8d0db7967e3069" translate="yes" xml:space="preserve">
          <source>Associated with each role or permission, there may be a &lt;em&gt;rule&lt;/em&gt;. A rule represents a piece of code that will be executed during access check to determine if the corresponding role or permission applies to the current user. For example, the &quot;update post&quot; permission may have a rule that checks if the current user is the post creator. During access checking, if the user is NOT the post creator, he/she will be considered not having the &quot;update post&quot; permission.</source>
          <target state="translated">각 역할 또는 권한과 관련하여 &lt;em&gt;규칙&lt;/em&gt; 이있을 수 있습니다 . 규칙은 해당 역할 또는 권한이 현재 사용자에게 적용되는지 확인하기 위해 액세스 확인 중에 실행될 코드를 나타냅니다. 예를 들어 &quot;게시물 업데이트&quot;권한에는 현재 사용자가 게시물 작성자인지 확인하는 규칙이있을 수 있습니다. 액세스 확인 중에 사용자가 게시물 작성자가 아닌 경우 &quot;게시물 업데이트&quot;권한이없는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e5be3bbe9f953e22e5ea6a7e130594b51128b0b9" translate="yes" xml:space="preserve">
          <source>Assume in the user table, you have a &lt;code&gt;group&lt;/code&gt; column which uses 1 to represent the administrator group and 2 the author group. You plan to have two RBAC roles &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;author&lt;/code&gt; to represent the permissions for these two groups, respectively. You can set up the RBAC data as follows,</source>
          <target state="translated">사용자 테이블에 1을 사용하여 관리자 그룹을 나타내고 2는 작성자 그룹을 사용 하는 &lt;code&gt;group&lt;/code&gt; 열이 있다고 가정하십시오 . 이 두 그룹에 대한 권한을 각각 나타내는 두 개의 RBAC 역할 &lt;code&gt;admin&lt;/code&gt; 및 &lt;code&gt;author&lt;/code&gt; 을 갖도록 계획합니다 . 다음과 같이 RBAC 데이터를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08c631b2150158dce256e7d5d3cd4dc60641a1a5" translate="yes" xml:space="preserve">
          <source>Assume we want to list the &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt; models for which we have already prepared two data providers in &lt;code&gt;$userProvider&lt;/code&gt; and &lt;code&gt;$postProvider&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;$userProvider&lt;/code&gt; 와 &lt;code&gt;$postProvider&lt;/code&gt; 에 이미 두 개의 데이터 제공자를 준비한 &lt;code&gt;Post&lt;/code&gt; 및 &lt;code&gt;User&lt;/code&gt; 모델 을 나열하려고한다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e420beeb42afd4d60dd10a4a03feda866e71def2" translate="yes" xml:space="preserve">
          <source>Assume you want to expose the user data via RESTful APIs. The user data are stored in the &lt;code&gt;user&lt;/code&gt; DB table, and you have already created the &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt; class &lt;code&gt;app\models\User&lt;/code&gt; to access the user data.</source>
          <target state="translated">RESTful API를 통해 사용자 데이터를 노출한다고 가정하십시오. 사용자 데이터는 &lt;code&gt;user&lt;/code&gt; DB 테이블에 저장되며 사용자 데이터에 액세스하기 위해 이미 &lt;a href=&quot;guide-db-active-record&quot;&gt;활성 레코드&lt;/a&gt; 클래스 &lt;code&gt;app\models\User&lt;/code&gt; 를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="dda4c315aa9e6f2f500333b92166d75247610bc6" translate="yes" xml:space="preserve">
          <source>Assume your application has two pages, X and Y. Page X uses asset bundles A, B and C, while Page Y uses asset bundles B, C and D.</source>
          <target state="translated">애플리케이션에 X와 Y라는 두 페이지가 있다고 가정하십시오. 페이지 X는 자산 번들 A, B 및 C를 사용하고 페이지 Y는 자산 번들 B, C 및 D를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c290e5e329db8890c22474c05707bbdff542dd5a" translate="yes" xml:space="preserve">
          <source>Assuming the URL being requested is &lt;code&gt;http://example.com/admin/index.php/product?id=100&lt;/code&gt;, you can get various parts of this URL as summarized in the following:</source>
          <target state="translated">요청되는 URL이 &lt;code&gt;http://example.com/admin/index.php/product?id=100&lt;/code&gt; 이라고 가정하면 다음과 같이이 URL의 다양한 부분을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ebee97a4c9505ff6c3dab4884070dbde12be345" translate="yes" xml:space="preserve">
          <source>Attach a content as file and return it's CID source.</source>
          <target state="translated">컨텐츠를 파일로 첨부하고 CID 소스로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="f30d3b2ad07394d046f41e43478aed87242ac463" translate="yes" xml:space="preserve">
          <source>Attach a file and return it's CID source.</source>
          <target state="translated">파일을 첨부하고 CID 소스로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="5c0fbac87cd094db00f5a599ab04defd2a4663b8" translate="yes" xml:space="preserve">
          <source>Attach specified content as file for the email message.</source>
          <target state="translated">지정된 내용을 이메일 메시지의 파일로 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="95a409751b721fe36d1e20d006e2aceb1bfdb4ec" translate="yes" xml:space="preserve">
          <source>Attaches a behavior to this component.</source>
          <target state="translated">이 컴포넌트에 동작을 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="686998eb219b35dff2117997927b8c0c0f3a9c20" translate="yes" xml:space="preserve">
          <source>Attaches a list of behaviors to the component.</source>
          <target state="translated">동작 목록을 구성 요소에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="917e4f2507c4c988afcccf72344b099990c2e001" translate="yes" xml:space="preserve">
          <source>Attaches an event handler to a class-level event.</source>
          <target state="translated">이벤트 핸들러를 클래스 레벨 이벤트에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="40eed125cc09317c19b8db77acf7a530e5a46e06" translate="yes" xml:space="preserve">
          <source>Attaches an event handler to an event.</source>
          <target state="translated">이벤트 핸들러를 이벤트에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="df2ad1db5725d0e2c6d2d0990faa79992afa0e22" translate="yes" xml:space="preserve">
          <source>Attaches existing file to the email message.</source>
          <target state="translated">기존 파일을 전자 메일 메시지에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="b24e04f19d140f9683a0723f72a92bef5dd83ab6" translate="yes" xml:space="preserve">
          <source>Attaches the behavior object to the component.</source>
          <target state="translated">비헤이비어 객체를 컴포넌트에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="070a3875e53d5501a800ef9c8331993b2fcd7005" translate="yes" xml:space="preserve">
          <source>Attaching Behaviors</source>
          <target state="translated">동작 첨부</target>
        </trans-unit>
        <trans-unit id="26f0fbe9c5ffe93e1655eb0444714819b12ef57b" translate="yes" xml:space="preserve">
          <source>Attaching Event Handlers</source>
          <target state="translated">이벤트 핸들러 첨부</target>
        </trans-unit>
        <trans-unit id="3358189ca675cc317d9fc150be5d598afbb62797" translate="yes" xml:space="preserve">
          <source>Attachment CID.</source>
          <target state="translated">첨부 파일 CID.</target>
        </trans-unit>
        <trans-unit id="0ea417f3d550475cb38059e8a19a39772db98496" translate="yes" xml:space="preserve">
          <source>Attachment file content.</source>
          <target state="translated">첨부 파일 내용.</target>
        </trans-unit>
        <trans-unit id="e0462b8b192dce941d7a313abe813fadf6823011" translate="yes" xml:space="preserve">
          <source>Attention: do not confuse &lt;a href=&quot;yii-bootstrap-html&quot;&gt;yii\bootstrap\Html&lt;/a&gt; and &lt;a href=&quot;yii-helpers-html&quot;&gt;yii\helpers\Html&lt;/a&gt;, be careful in which class you are using inside your views.</source>
          <target state="translated">주의 : &lt;a href=&quot;yii-bootstrap-html&quot;&gt;yii \ bootstrap \ Html&lt;/a&gt; 및 &lt;a href=&quot;yii-helpers-html&quot;&gt;yii \ helpers \ Html&lt;/a&gt; 혼동하지 마십시오 . 뷰 내부에서 사용중인 클래스에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="8a140ec5fb5b95453a67e75f8c3d4ed2e3b4d560" translate="yes" xml:space="preserve">
          <source>Attribute Labels</source>
          <target state="translated">속성 라벨</target>
        </trans-unit>
        <trans-unit id="ff1297b52c798c4392080811b068b18a9efbf979" translate="yes" xml:space="preserve">
          <source>Attribute hints (name =&amp;gt; hint)</source>
          <target state="translated">속성 힌트 (이름 =&amp;gt; 힌트)</target>
        </trans-unit>
        <trans-unit id="a1fc6cb52ee546495bc6f3357ecdeea04f0222ff" translate="yes" xml:space="preserve">
          <source>Attribute hints are mainly used for display purpose. For example, given an attribute &lt;code&gt;isPublic&lt;/code&gt;, we can declare a hint &lt;code&gt;Whether the post should be visible for not logged in users&lt;/code&gt;, which provides user-friendly description of the attribute meaning and can be displayed to end users.</source>
          <target state="translated">속성 힌트는 주로 표시 목적으로 사용됩니다. 예를 들어, &lt;code&gt;isPublic&lt;/code&gt; 속성을 사용 &lt;code&gt;Whether the post should be visible for not logged in users&lt;/code&gt; 대한 힌트를 선언 할 수 있습니다 . 이는 사용자에게 속성 의미에 대한 설명을 제공하고 최종 사용자에게 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3090cc0f8edcfcec24b7354eb8e5990e59efa6ce" translate="yes" xml:space="preserve">
          <source>Attribute labels (name =&amp;gt; label)</source>
          <target state="translated">속성 레이블 (이름 =&amp;gt; 레이블)</target>
        </trans-unit>
        <trans-unit id="e75614a42973b5398f30064c09dd9c1a8e0d4deb" translate="yes" xml:space="preserve">
          <source>Attribute labels are mainly used for display purpose. For example, given an attribute &lt;code&gt;firstName&lt;/code&gt;, we can declare a label &lt;code&gt;First Name&lt;/code&gt; which is more user-friendly and can be displayed to end users.</source>
          <target state="translated">속성 레이블은 주로 표시 목적으로 사용됩니다. 예를 들어 &lt;code&gt;firstName&lt;/code&gt; 속성 을 사용하면보다 사용자 친화적이고 최종 사용자에게 표시 할 수있는 &lt;code&gt;First Name&lt;/code&gt; 레이블을 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd11efd3b2bb215beb5fe4deac5b15c31b49871e" translate="yes" xml:space="preserve">
          <source>Attribute name</source>
          <target state="translated">속성 이름</target>
        </trans-unit>
        <trans-unit id="8db7e8cffe657361faaaf56deedf7fa4f39ce959" translate="yes" xml:space="preserve">
          <source>Attribute name.</source>
          <target state="translated">속성 이름</target>
        </trans-unit>
        <trans-unit id="8ede9958403ab60d04f161223c6a855b9a36c94c" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to check all attributes.</source>
          <target state="translated">속성 이름 모든 속성을 확인하려면 null을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2f13689b8a3182ca0e4f6f3cbb2cb4af248f2be9" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to remove errors for all attributes.</source>
          <target state="translated">속성 이름 모든 속성에 대한 오류를 제거하려면 널을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fd84f620fb0ef3f8e8b5eee3b5a9ea2080ee38ad" translate="yes" xml:space="preserve">
          <source>Attribute name. Use null to retrieve errors for all attributes.</source>
          <target state="translated">속성 이름 모든 속성에 대한 오류를 검색하려면 null을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fe361a9ca59aba572035e2c674667c798b69c014" translate="yes" xml:space="preserve">
          <source>Attribute names.</source>
          <target state="translated">속성 이름</target>
        </trans-unit>
        <trans-unit id="5bc187c6bb23c9b6e94c2e84257f39487ee1b621" translate="yes" xml:space="preserve">
          <source>Attribute search</source>
          <target state="translated">속성 검색</target>
        </trans-unit>
        <trans-unit id="6eccf09fc6ad265b4388da07ec948a88efff0dc3" translate="yes" xml:space="preserve">
          <source>Attribute to filter</source>
          <target state="translated">필터링 할 속성</target>
        </trans-unit>
        <trans-unit id="8d6ff1182bbc90bca8d3caa72103bbdb27617be1" translate="yes" xml:space="preserve">
          <source>Attribute type map.</source>
          <target state="translated">속성 유형 맵</target>
        </trans-unit>
        <trans-unit id="9c18077e02f919025a99caba4e3c471093e1530d" translate="yes" xml:space="preserve">
          <source>Attribute typecast map in format: attributeName =&amp;gt; type.</source>
          <target state="translated">속성 유형 캐스트 ​​맵 형식 : attributeName =&amp;gt; type.</target>
        </trans-unit>
        <trans-unit id="e332ab229cc0f7c426bdefb2c9ad9702bdd9b433" translate="yes" xml:space="preserve">
          <source>Attribute typecast map in format: attributeName =&amp;gt; type. Type can be set via PHP callable, which accept raw value as an argument and should return typecast result. For example:</source>
          <target state="translated">속성 유형 캐스트 ​​맵 형식 : attributeName =&amp;gt; type. 타입은 PHP 호출 가능을 통해 설정 될 수 있으며, 이는 원시 값을 인수로 받아들이고 타입 캐스트 결과를 반환해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ec8da9af31528a5dd69e8a911d49cec2d8d539d" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value)</source>
          <target state="translated">속성 값 (이름 =&amp;gt; 값)</target>
        </trans-unit>
        <trans-unit id="1fabaa7bc628d734e7e73bd95c95415d2cf2b991" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value) to be assigned to the model.</source>
          <target state="translated">모델에 할당 할 속성 값 (이름 =&amp;gt; 값)</target>
        </trans-unit>
        <trans-unit id="e3aa0e7a131bfbd77309948518307cae49c7f46d" translate="yes" xml:space="preserve">
          <source>Attribute values (name =&amp;gt; value).</source>
          <target state="translated">속성 값 (이름 =&amp;gt; 값)</target>
        </trans-unit>
        <trans-unit id="36cab2ad702a5e63a9a824753f822c2dce191018" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved for the record. Unlike &lt;a href=&quot;yii-db-activerecordinterface#update()-detail&quot;&gt;update()&lt;/a&gt; these are not going to be validated.</source>
          <target state="translated">레코드에 저장할 속성 값 (이름-값 쌍). &lt;a href=&quot;yii-db-activerecordinterface#update()-detail&quot;&gt;update ()&lt;/a&gt; 와 달리 이것들은 검증되지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="d3d8bf04d7c6499b62f8cd001fb6499bc9e950b3" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved into the collection</source>
          <target state="translated">콜렉션에 저장 될 속성 값 (이름-값 쌍)</target>
        </trans-unit>
        <trans-unit id="97a32393a214c811d3dfcbfbb97c28332ada0726" translate="yes" xml:space="preserve">
          <source>Attribute values (name-value pairs) to be saved into the table</source>
          <target state="translated">테이블에 저장 될 속성 값 (이름-값 쌍)</target>
        </trans-unit>
        <trans-unit id="1d2d877b27fa46b13b0d96f616b5e7ea21684dd3" translate="yes" xml:space="preserve">
          <source>Attribute will be considered as valid, if it is an instance of \MongoId or a its string value.</source>
          <target state="translated">속성이 \ MongoId의 인스턴스이거나 문자열 값인 경우 유효한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e0a48affdfcddaef11bf192245f329c7c40dd73f" translate="yes" xml:space="preserve">
          <source>AttributeBehavior automatically assigns a specified value to one or multiple attributes of an ActiveRecord object when certain events happen.</source>
          <target state="translated">AttributeBehavior는 특정 이벤트가 발생할 때 지정된 값을 ActiveRecord 객체의 하나 이상의 속성에 자동으로 할당합니다.</target>
        </trans-unit>
        <trans-unit id="556c9a535846d9dbff04cf42fba00907745abec0" translate="yes" xml:space="preserve">
          <source>AttributeTypecastBehavior provides an ability of automatic model attribute typecasting.</source>
          <target state="translated">AttributeTypecastBehavior는 자동 모델 속성 유형 캐스팅 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="8482f83b7546f22971cd4670a57c0fe6bcf7152d" translate="yes" xml:space="preserve">
          <source>Attributes Typecasting</source>
          <target state="translated">속성 유형 캐스팅</target>
        </trans-unit>
        <trans-unit id="1cb6f49b272fbe3e96fbe69e0f2b7f28ac95abdf" translate="yes" xml:space="preserve">
          <source>Attributes are names of fields of the corresponding elasticsearch document. The primaryKey for elasticsearch documents is the &lt;code&gt;_id&lt;/code&gt; field by default which is not part of the attributes. You may define &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; fields and thus becomes part of the attributes.</source>
          <target state="translated">속성은 해당 elasticsearch 문서의 필드 이름입니다. elasticsearch 문서의 기본 키는 기본적으로 속성의 일부가 아닌 &lt;code&gt;_id&lt;/code&gt; 필드입니다. &lt;code&gt;_id&lt;/code&gt; 필드가 &lt;code&gt;_source&lt;/code&gt; 필드의 일부이므로 속성의 일부 가되도록 _id 필드에 대한 &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;경로 매핑&lt;/a&gt; 을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45ce5de3e053d5abdb74ed34b5d27fed574d1de7" translate="yes" xml:space="preserve">
          <source>Attributes are names of fields of the corresponding elasticsearch document. The primaryKey for elasticsearch documents is the &lt;code&gt;_id&lt;/code&gt; field by default which is not part of the attributes. You may define &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; fields and thus becomes part of the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8678ab4d9afb1a301024abbab79aa58e2d74ccf5" translate="yes" xml:space="preserve">
          <source>Attributes to be rendered. The attribute values will be HTML-encoded using &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt;.</source>
          <target state="translated">렌더링 할 속성 속성 값은 &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode ()를&lt;/a&gt; 사용하여 HTML로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="533ebe182164ad7e00d611b91b202abb49c2c7c0" translate="yes" xml:space="preserve">
          <source>Attributes to be validated by this validator.</source>
          <target state="translated">이 유효성 검증 기가 유효성을 검증 할 속성입니다.</target>
        </trans-unit>
        <trans-unit id="bed4d5a7ae59b186ccf81de2496f2a4dca596f59" translate="yes" xml:space="preserve">
          <source>Attributes to be validated by this validator. For multiple attributes, please specify them as an array; for single attribute, you may use either a string or an array.</source>
          <target state="translated">이 유효성 검증 기가 유효성을 검증 할 속성입니다. 여러 속성의 경우 배열로 지정하십시오. 단일 속성의 경우 문자열 또는 배열을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a106210845944741729a91a4f0f533f4e6b43298" translate="yes" xml:space="preserve">
          <source>Attributes to update</source>
          <target state="translated">업데이트 할 속성</target>
        </trans-unit>
        <trans-unit id="05c5c2a8586f3dbfbd311371b0f065758b2cd537" translate="yes" xml:space="preserve">
          <source>Attributes whose values are null will not be rendered.</source>
          <target state="translated">값이 null 인 속성은 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19f81a911352f97b48b83360e0e46a4a9ee17c15" translate="yes" xml:space="preserve">
          <source>Attributes whose values are of boolean type will be treated as &lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html#boolean-attributes&quot;&gt;boolean attributes&lt;/a&gt;.</source>
          <target state="translated">값이 부울 유형 인 &lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html#boolean-attributes&quot;&gt;속성&lt;/a&gt; 은 부울 속성 으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3da16c3a7c6f38dcff4974491cfd56dea156d458" translate="yes" xml:space="preserve">
          <source>Attributes whose values are of boolean type will be treated as &lt;a href=&quot;https://www.w3.org/TR/html5/infrastructure.html#boolean-attributes&quot;&gt;boolean attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d26fe4835700ee65b26c915769c15b126054bbb" translate="yes" xml:space="preserve">
          <source>Auth Clients</source>
          <target state="translated">인증 클라이언트</target>
        </trans-unit>
        <trans-unit id="c59b236beefd5d3a0db03cf0e21402310ff0310f" translate="yes" xml:space="preserve">
          <source>Auth URL.</source>
          <target state="translated">인증 URL.</target>
        </trans-unit>
        <trans-unit id="a7e8b310afdb52d7b24b6dd89907ad1ed6bb9fe7" translate="yes" xml:space="preserve">
          <source>Auth callback URL.</source>
          <target state="translated">인증 콜백 URL</target>
        </trans-unit>
        <trans-unit id="953d05b758aa9042d7098ec63b11c9f504c7302d" translate="yes" xml:space="preserve">
          <source>Auth client id.</source>
          <target state="translated">인증 클라이언트 ID.</target>
        </trans-unit>
        <trans-unit id="efafc1433e384a6405ca0a10bf514d18a4c35c84" translate="yes" xml:space="preserve">
          <source>Auth client instance configuration.</source>
          <target state="translated">인증 클라이언트 인스턴스 구성.</target>
        </trans-unit>
        <trans-unit id="5122eb4ffd5ae70ec0258b4cafed3d98213e4280" translate="yes" xml:space="preserve">
          <source>Auth client instance.</source>
          <target state="translated">인증 클라이언트 인스턴스.</target>
        </trans-unit>
        <trans-unit id="1365d10c829ffb42524b293c2157a6e440d7de09" translate="yes" xml:space="preserve">
          <source>Auth clients list.</source>
          <target state="translated">인증 클라이언트 목록.</target>
        </trans-unit>
        <trans-unit id="c49160e4c2bec22f044211ee892afca5031ecbef" translate="yes" xml:space="preserve">
          <source>Auth item parent-child relationships (childName =&amp;gt; list of parents)</source>
          <target state="translated">인증 항목 상위-하위 관계 (childName =&amp;gt; 상위 목록)</target>
        </trans-unit>
        <trans-unit id="b47c7390a9072d404b80205a46ca0a93a275703e" translate="yes" xml:space="preserve">
          <source>Auth nonce value.</source>
          <target state="translated">인증 논스 가치.</target>
        </trans-unit>
        <trans-unit id="231c15762e3e6fdcf99b45e74c1395b7f9549e74" translate="yes" xml:space="preserve">
          <source>Auth providers</source>
          <target state="translated">인증 제공자</target>
        </trans-unit>
        <trans-unit id="1046e77eb6c88123a74f1ff5c6825dfad7a82fbf" translate="yes" xml:space="preserve">
          <source>Auth request scope.</source>
          <target state="translated">인증 요청 범위.</target>
        </trans-unit>
        <trans-unit id="406ae04f7b503e9b41209a37600c82a62cf2ce2f" translate="yes" xml:space="preserve">
          <source>Auth state value.</source>
          <target state="translated">인증 상태 값.</target>
        </trans-unit>
        <trans-unit id="f98b8f87d971db7a8c750159e3185d2751519c8c" translate="yes" xml:space="preserve">
          <source>Auth token instance.</source>
          <target state="translated">인증 토큰 인스턴스.</target>
        </trans-unit>
        <trans-unit id="ce5fb4449f0226df41b3e53606890f21de2b41ae" translate="yes" xml:space="preserve">
          <source>Auth token to be saved.</source>
          <target state="translated">인증 토큰이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="0e731ee342395a59b9d5b3219fcf4f8da16355c4" translate="yes" xml:space="preserve">
          <source>Auth token.</source>
          <target state="translated">인증 토큰.</target>
        </trans-unit>
        <trans-unit id="66a4777cfe73992b97da10a02d2e261dd111e0a5" translate="yes" xml:space="preserve">
          <source>Auth user attributes.</source>
          <target state="translated">인증 사용자 속성.</target>
        </trans-unit>
        <trans-unit id="d5ef90f467a4d96e12c5fe178bc54e6385fb5815" translate="yes" xml:space="preserve">
          <source>AuthInterface is the interface that should be implemented by auth method classes.</source>
          <target state="translated">AuthInterface는 인증 메소드 클래스로 구현해야하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="485ef26e67288d8da89763adc66f8e840c5698e0" translate="yes" xml:space="preserve">
          <source>AuthMethod is a base class implementing the &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii\filters\auth\AuthInterface&lt;/a&gt; interface.</source>
          <target state="translated">AuthMethod는 yii &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;\ filters \ auth \ AuthInterface&lt;/a&gt; 인터페이스를 구현하는 기본 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="ab86936b488c04880e5a9478a2337cccbee3719f" translate="yes" xml:space="preserve">
          <source>Authenticate OAuth client directly at the provider without third party (user) involved, using 'client_credentials' grant type.</source>
          <target state="translated">'client_credentials'부여 유형을 사용하여 제 3 자 (사용자)가 관여하지 않고 공급자에서 직접 OAuth 클라이언트를 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="1657569ad67bd1619a6cd55dc4aa1aa3d016504a" translate="yes" xml:space="preserve">
          <source>Authenticates the current user.</source>
          <target state="translated">현재 사용자를 인증합니다.</target>
        </trans-unit>
        <trans-unit id="74a4b1e8ce75eb179431fc2f912e7ea098c45ab9" translate="yes" xml:space="preserve">
          <source>Authenticates user directly by 'username/password' pair, using 'password' grant type.</source>
          <target state="translated">'password'권한 부여 유형을 사용하여 'username / password'쌍으로 사용자를 직접 인증합니다.</target>
        </trans-unit>
        <trans-unit id="ca33d368885f6aa32476efda0d2e515f3666443e" translate="yes" xml:space="preserve">
          <source>Authenticates user directly using JSON Web Token (JWT).</source>
          <target state="translated">JWT (JSON Web Token)를 사용하여 사용자를 직접 인증합니다.</target>
        </trans-unit>
        <trans-unit id="c74df4cd67c24e1f63bd9617843c2417b3331eba" translate="yes" xml:space="preserve">
          <source>Authenticating user (see &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii\filters\auth\AuthInterface&lt;/a&gt;);</source>
          <target state="translated">인증 사용자 ( &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii \ filters \ auth \ AuthInterface 참조&lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="0d357d90fb22ff0162023a0dec13665985d921ca" translate="yes" xml:space="preserve">
          <source>Authentication Events</source>
          <target state="translated">인증 이벤트</target>
        </trans-unit>
        <trans-unit id="f77359147493ed8911d60cab4549d20748630ab6" translate="yes" xml:space="preserve">
          <source>Authentication Method Filters</source>
          <target state="translated">인증 방법 필터</target>
        </trans-unit>
        <trans-unit id="9d5bf9c32e4fc3a3783fa3199b6da56b4d63b235" translate="yes" xml:space="preserve">
          <source>Authentication URL.</source>
          <target state="translated">인증 URL.</target>
        </trans-unit>
        <trans-unit id="4b314936f04340e6178d7594bc27cb061f6e42cf" translate="yes" xml:space="preserve">
          <source>Authentication and authorization;</source>
          <target state="translated">인증 및 권한 부여;</target>
        </trans-unit>
        <trans-unit id="ee7cad3c9691f82a678f5eb25c778e94e26f643c" translate="yes" xml:space="preserve">
          <source>Authentication base URL, which should be used to compose actual authentication URL by &lt;a href=&quot;yii-authclient-openid#buildAuthUrl()-detail&quot;&gt;buildAuthUrl()&lt;/a&gt; method.</source>
          <target state="translated">인증 기반 URL . &lt;a href=&quot;yii-authclient-openid#buildAuthUrl()-detail&quot;&gt;buildAuthUrl ()&lt;/a&gt; 메소드로 실제 인증 URL을 작성하는 데 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7fecf6dddd27b80b54a4d18b1e6516b3da35684a" translate="yes" xml:space="preserve">
          <source>Authentication data used to connect to the ElasticSearch node.</source>
          <target state="translated">ElasticSearch 노드에 연결하는 데 사용되는 인증 데이터.</target>
        </trans-unit>
        <trans-unit id="5f144bf3978cda1d9bdcc971ff9d76134d20f50d" translate="yes" xml:space="preserve">
          <source>Authentication is the process of verifying the identity of a user. It usually uses an identifier (e.g. a username or an email address) and a secret token (e.g. a password or an access token) to judge if the user is the one whom he claims as. Authentication is the basis of the login feature.</source>
          <target state="translated">인증은 사용자의 신원을 확인하는 프로세스입니다. 일반적으로 식별자 (예 : 사용자 이름 또는 이메일 주소)와 비밀 토큰 (예 : 비밀번호 또는 액세스 토큰)을 사용하여 사용자가 자신이 주장하는 사람인지 판단합니다. 인증은 로그인 기능의 기초입니다.</target>
        </trans-unit>
        <trans-unit id="d03a04fc073a9858caea8df05687bfb7d6158d6d" translate="yes" xml:space="preserve">
          <source>Authentication method filters are commonly used in implementing RESTful APIs. For more details, please refer to the RESTful &lt;a href=&quot;guide-rest-authentication&quot;&gt;Authentication&lt;/a&gt; section.</source>
          <target state="translated">인증 방법 필터는 일반적으로 RESTful API 구현에 사용됩니다. 자세한 내용은 RESTful &lt;a href=&quot;guide-rest-authentication&quot;&gt;인증을&lt;/a&gt; 참조하십시오 섹션을 .</target>
        </trans-unit>
        <trans-unit id="d98b98143f1a8da99c9c634a1420b997ed10230b" translate="yes" xml:space="preserve">
          <source>Authentication method filters are used to authenticate a user using various methods, such as &lt;a href=&quot;http://en.wikipedia.org/wiki/Basic_access_authentication&quot;&gt;HTTP Basic Auth&lt;/a&gt;, &lt;a href=&quot;http://oauth.net/2/&quot;&gt;OAuth 2&lt;/a&gt;. These filter classes are all under the &lt;code&gt;yii\filters\auth&lt;/code&gt; namespace.</source>
          <target state="translated">인증 방법 필터는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Basic_access_authentication&quot;&gt;HTTP Basic Auth&lt;/a&gt; , &lt;a href=&quot;http://oauth.net/2/&quot;&gt;OAuth 2&lt;/a&gt; 와 같은 다양한 방법을 사용하여 사용자를 인증하는 데 사용됩니다 . 이 필터 클래스는 모두 &lt;code&gt;yii\filters\auth&lt;/code&gt; 네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cc3bb6df019410e707afd0436eed6733c2c46f4" translate="yes" xml:space="preserve">
          <source>Authentication method filters are used to authenticate a user using various methods, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Basic_access_authentication&quot;&gt;HTTP Basic Auth&lt;/a&gt;, &lt;a href=&quot;https://oauth.net/2/&quot;&gt;OAuth 2&lt;/a&gt;. These filter classes are all under the &lt;code&gt;yii\filters\auth&lt;/code&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99b7372d4f473cf7ea264672eb187440680dba9" translate="yes" xml:space="preserve">
          <source>Authentication return URL.</source>
          <target state="translated">인증 반환 URL.</target>
        </trans-unit>
        <trans-unit id="52d2fce9c6f50872f11114102f0ab83a37fa18be" translate="yes" xml:space="preserve">
          <source>Author can create post, admin can update post and do everything author can.</source>
          <target state="translated">작성자는 게시물을 작성하고 관리자는 게시물을 업데이트하고 작성자가 할 수있는 모든 것을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="3fe6d9d7a61025be60ba5bc6aa46c9404e1618fc" translate="yes" xml:space="preserve">
          <source>Authorization URL.</source>
          <target state="translated">인증 URL.</target>
        </trans-unit>
        <trans-unit id="c73c31d9ef69b6ec000ce4acf4c78082084622ba" translate="yes" xml:space="preserve">
          <source>Authorization code, usually comes at $_GET['code'].</source>
          <target state="translated">인증 코드는 보통 $ _GET [ 'code']에 있습니다.</target>
        </trans-unit>
        <trans-unit id="353011b387322b0e64037c7f9e47efbc48348925" translate="yes" xml:space="preserve">
          <source>Authorization header in format: [name =&amp;gt; content].</source>
          <target state="translated">[이름 =&amp;gt; 내용] 형식의 인증 헤더</target>
        </trans-unit>
        <trans-unit id="f717182a7245caba3863f5ddf872259c272cb336" translate="yes" xml:space="preserve">
          <source>Authorization is the process of verifying that a user has enough permission to do something. Yii provides two authorization methods: Access Control Filter (ACF) and Role-Based Access Control (RBAC).</source>
          <target state="translated">권한 부여는 사용자에게 무언가를 수행 할 수있는 권한이 있는지 확인하는 프로세스입니다. Yii는 ACF (Access Control Filter)와 RBAC (Role-Based Access Control)의 두 가지 인증 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="baefea20c54f3d3ab45ecee686f05fe7a0ea5a31" translate="yes" xml:space="preserve">
          <source>Authorization realm.</source>
          <target state="translated">권한 영역.</target>
        </trans-unit>
        <trans-unit id="d62c81beced099459ac93734776f6a7f79c53cd0" translate="yes" xml:space="preserve">
          <source>Authorize URL</source>
          <target state="translated">URL 승인</target>
        </trans-unit>
        <trans-unit id="aab1fe13ba17b5b5c886f223a02aee3cf9b7666d" translate="yes" xml:space="preserve">
          <source>Authorize URL.</source>
          <target state="translated">URL을 승인하십시오.</target>
        </trans-unit>
        <trans-unit id="c2116f0671e14b9d6599649cc500b5c5d3eb5676" translate="yes" xml:space="preserve">
          <source>Auto complete data (array of callables or scalars)</source>
          <target state="translated">자동 완성 데이터 (콜 러블 또는 스칼라 배열)</target>
        </trans-unit>
        <trans-unit id="26a7d66c70fc92443eaedade1fa40d2ea702dc73" translate="yes" xml:space="preserve">
          <source>Auto-completion of command arguments is a useful thing when working with the shell. Since version 2.0.11, the &lt;code&gt;./yii&lt;/code&gt; command provides auto completion for the Bash and ZSH out of the box.</source>
          <target state="translated">명령 인수의 자동 완성은 쉘 작업시 유용합니다. 버전 2.0.11부터 &lt;code&gt;./yii&lt;/code&gt; 명령은 Bash 및 ZSH에 대해 자동 완성 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a0bfa8a8b9f6f1b70dd2a496cc0a3eaa28470167" translate="yes" xml:space="preserve">
          <source>Auto-generating fixtures</source>
          <target state="translated">자동 생성 설비</target>
        </trans-unit>
        <trans-unit id="24e5a4c731c39bc5e20071a6de760f4c26c932d6" translate="yes" xml:space="preserve">
          <source>Auto-generating fixtures and populating it with random data.</source>
          <target state="translated">조명기를 자동 생성하고 임의의 데이터로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="3fa81ba949fafdad4688aed6d9380f82976ca9d7" translate="yes" xml:space="preserve">
          <source>Autoloading</source>
          <target state="translated">Autoloading</target>
        </trans-unit>
        <trans-unit id="77b23a7b48607c3fd602ea01a0a4c7fd636b6bb4" translate="yes" xml:space="preserve">
          <source>Autoloading Extension Classes</source>
          <target state="translated">자동 로딩 확장 클래스</target>
        </trans-unit>
        <trans-unit id="dd1c710f9ff5f7d2cfd10df176a0ef1dc920f5f7" translate="yes" xml:space="preserve">
          <source>Available calendar names can be found in the &lt;a href=&quot;http://userguide.icu-project.org/datetime/calendar&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 캘린더 이름은 &lt;a href=&quot;http://userguide.icu-project.org/datetime/calendar&quot;&gt;ICU 매뉴얼&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="776cc36af429871c62a3419a2ff6a47133902976" translate="yes" xml:space="preserve">
          <source>Available lock modes</source>
          <target state="translated">사용 가능한 잠금 모드</target>
        </trans-unit>
        <trans-unit id="8f6c1bd506f2e67b4d62d326fff3b21139729716" translate="yes" xml:space="preserve">
          <source>Available properties you can configure are:</source>
          <target state="translated">구성 할 수있는 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6af39876529075630fb13c8ac2d873aaae0a89f9" translate="yes" xml:space="preserve">
          <source>Available since version</source>
          <target state="translated">버전 이후 사용 가능</target>
        </trans-unit>
        <trans-unit id="4b88fdf3b0ce5638c371e1039bb9e02600c4c052" translate="yes" xml:space="preserve">
          <source>Avoiding &lt;code&gt;Host&lt;/code&gt;-header attacks</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 헤더 공격 방지</target>
        </trans-unit>
        <trans-unit id="18e1df08b882b5cbb4719739c3146f9e8d9b4788" translate="yes" xml:space="preserve">
          <source>Avoiding CSRF</source>
          <target state="translated">CSRF 피하기</target>
        </trans-unit>
        <trans-unit id="dd931c8c9b64f8bebdd76f65d2ca68a8e1cc44dc" translate="yes" xml:space="preserve">
          <source>Avoiding SQL injections</source>
          <target state="translated">SQL 주입 피하기</target>
        </trans-unit>
        <trans-unit id="67f4a5d4a0a8ea88345fb91e915b67e184547fe7" translate="yes" xml:space="preserve">
          <source>Avoiding XSS</source>
          <target state="translated">XSS 피하기</target>
        </trans-unit>
        <trans-unit id="d17ab5745972bdec6596582bb458bb8f8e4fa710" translate="yes" xml:space="preserve">
          <source>Avoiding XSS is quite easy in Yii. There are generally two cases:</source>
          <target state="translated">Xii를 피하는 것은 Yii에서 매우 쉽습니다. 일반적으로 두 가지 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ac3473adf52e6488f92a8c8409d45c6c3bb324c" translate="yes" xml:space="preserve">
          <source>Avoiding debug info and tools in production</source>
          <target state="translated">프로덕션에서 디버그 정보 및 도구 피하기</target>
        </trans-unit>
        <trans-unit id="3d8c52952e9f09e3f175828142f1bfe6308d07ff" translate="yes" xml:space="preserve">
          <source>Avoiding file exposure</source>
          <target state="translated">파일 노출 방지</target>
        </trans-unit>
        <trans-unit id="0b0153beb9d5b6645438683eb23924f810fb5d1e" translate="yes" xml:space="preserve">
          <source>BASE_MIGRATION</source>
          <target state="translated">BASE_MIGRATION</target>
        </trans-unit>
        <trans-unit id="3c4f9f9f26058e514f17130b3c7ee244ff8fdd0f" translate="yes" xml:space="preserve">
          <source>BG_BLACK</source>
          <target state="translated">BG_BLACK</target>
        </trans-unit>
        <trans-unit id="0d35002bb8fd625e8bb94fdec84d71c1eecc81c0" translate="yes" xml:space="preserve">
          <source>BG_BLUE</source>
          <target state="translated">BG_BLUE</target>
        </trans-unit>
        <trans-unit id="c4c6dac991b9e42e45794793d33415b85f06b3e7" translate="yes" xml:space="preserve">
          <source>BG_CYAN</source>
          <target state="translated">BG_CYAN</target>
        </trans-unit>
        <trans-unit id="5d508f46beabd6119420efd5b48faf15f52799ca" translate="yes" xml:space="preserve">
          <source>BG_GREEN</source>
          <target state="translated">BG_GREEN</target>
        </trans-unit>
        <trans-unit id="5443c4a5e5a551a13a5b98fe2f55aa8008f23aed" translate="yes" xml:space="preserve">
          <source>BG_GREY</source>
          <target state="translated">BG_GREY</target>
        </trans-unit>
        <trans-unit id="92577b4f906466a032ca4697f736cddc5a4b56a0" translate="yes" xml:space="preserve">
          <source>BG_PURPLE</source>
          <target state="translated">BG_PURPLE</target>
        </trans-unit>
        <trans-unit id="0ce85a6fed63049f245d64acde30cf2ec1b65ea1" translate="yes" xml:space="preserve">
          <source>BG_RED</source>
          <target state="translated">BG_RED</target>
        </trans-unit>
        <trans-unit id="a900edc9af729f9053377b75ec6510110d835858" translate="yes" xml:space="preserve">
          <source>BG_YELLOW</source>
          <target state="translated">BG_YELLOW</target>
        </trans-unit>
        <trans-unit id="23adb632666e647dfff3c24f09614be906d7af7a" translate="yes" xml:space="preserve">
          <source>BLINK</source>
          <target state="translated">BLINK</target>
        </trans-unit>
        <trans-unit id="7f5468283ffb5e8bbed87d8fba2648d355d1d029" translate="yes" xml:space="preserve">
          <source>BOLD</source>
          <target state="translated">BOLD</target>
        </trans-unit>
        <trans-unit id="e93a82aabe0fa8b97d0c801d88a5ed7f0a40dd6e" translate="yes" xml:space="preserve">
          <source>BadMethodCallException</source>
          <target state="translated">BadMethodCallException</target>
        </trans-unit>
        <trans-unit id="e8cc1be5e4fade274c620069fd4b4cc7f58bad6c" translate="yes" xml:space="preserve">
          <source>BadRequestHttpException represents a &quot;Bad Request&quot; HTTP exception with status code 400.</source>
          <target state="translated">BadRequestHttpException은 상태 코드 400의 &quot;잘못된 요청&quot;HTTP 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="67816a95b7fd479f292b6c5df322708027f68a32" translate="yes" xml:space="preserve">
          <source>Base URL.</source>
          <target state="translated">기본 URL.</target>
        </trans-unit>
        <trans-unit id="3c7cc3e1ca6cb8f481be05d588470400c7101844" translate="yes" xml:space="preserve">
          <source>Base auth URL configuration.</source>
          <target state="translated">기본 인증 URL 구성</target>
        </trans-unit>
        <trans-unit id="5fd9adda35ec3d4a2bedfd92745dad1e4ba75cea" translate="yes" xml:space="preserve">
          <source>Base request URL.</source>
          <target state="translated">기본 요청 URL</target>
        </trans-unit>
        <trans-unit id="f6e65642853508e9fc334a079cc049567bbbdc4b" translate="yes" xml:space="preserve">
          <source>Base signature string.</source>
          <target state="translated">기본 서명 문자열</target>
        </trans-unit>
        <trans-unit id="4464801a9a9a338b85d2a72bf6e1a60dccd26173" translate="yes" xml:space="preserve">
          <source>Base slug value</source>
          <target state="translated">기본 슬러그 값</target>
        </trans-unit>
        <trans-unit id="2a251ed2d45373b18f154e7f85729dc799989030" translate="yes" xml:space="preserve">
          <source>Base value to check</source>
          <target state="translated">확인할 기본 값</target>
        </trans-unit>
        <trans-unit id="e489e0158a972e540c37daaecdd811253c218fb7" translate="yes" xml:space="preserve">
          <source>BaseActiveFixture is the base class for fixture classes that support accessing fixture data as ActiveRecord objects.</source>
          <target state="translated">BaseActiveFixture는 조명기 데이터를 ActiveRecord 객체로 액세스하는 것을 지원하는 조명기 클래스의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0b44a159f663f0da6e6ab5b5ed7bec8b86dd5879" translate="yes" xml:space="preserve">
          <source>BaseArrayHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-arrayhelper&quot;&gt;yii\helpers\ArrayHelper&lt;/a&gt;.</source>
          <target state="translated">BaseArrayHelper는 yii &lt;a href=&quot;yii-helpers-arrayhelper&quot;&gt;\ helpers \ ArrayHelper에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d02b24076f41c9121de33e88c452cf35a8c140a6" translate="yes" xml:space="preserve">
          <source>BaseConsole provides concrete implementation for &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">BaseConsole은 yii &lt;a href=&quot;yii-helpers-console&quot;&gt;\ helpers \ Console에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4fc14fdcce9c48e3c056fbcf442d5686f01959ec" translate="yes" xml:space="preserve">
          <source>BaseDataProvider provides a base class that implements the &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;.</source>
          <target state="translated">BaseDataProvider는 &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii \ data \ DataProviderInterface&lt;/a&gt; 를 구현하는 기본 클래스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f7449ee9c677e1b1550c1e20748adc164b1a919f" translate="yes" xml:space="preserve">
          <source>BaseFileHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-filehelper&quot;&gt;yii\helpers\FileHelper&lt;/a&gt;.</source>
          <target state="translated">BaseFileHelper는 &lt;a href=&quot;yii-helpers-filehelper&quot;&gt;yii \ helpers \ FileHelper에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="968b5ea443459de1b47df3c012a478091bbb609f" translate="yes" xml:space="preserve">
          <source>BaseFormatConverter provides concrete implementation for &lt;a href=&quot;yii-helpers-formatconverter&quot;&gt;yii\helpers\FormatConverter&lt;/a&gt;.</source>
          <target state="translated">BaseFormatConverter는 &lt;a href=&quot;yii-helpers-formatconverter&quot;&gt;yii \ helpers \ FormatConverter에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="86c137e871336a4b9a11a248b9940fcd3d4e472f" translate="yes" xml:space="preserve">
          <source>BaseHtml provides concrete implementation for &lt;a href=&quot;yii-helpers-html&quot;&gt;yii\helpers\Html&lt;/a&gt;.</source>
          <target state="translated">BaseHtml은 yii &lt;a href=&quot;yii-helpers-html&quot;&gt;\ helpers \ Html에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ead872170d66606ef27c6a92b1c4591e8b44ee0e" translate="yes" xml:space="preserve">
          <source>BaseHtmlPurifier provides concrete implementation for &lt;a href=&quot;yii-helpers-htmlpurifier&quot;&gt;yii\helpers\HtmlPurifier&lt;/a&gt;.</source>
          <target state="translated">BaseHtmlPurifier는 yii &lt;a href=&quot;yii-helpers-htmlpurifier&quot;&gt;\ helpers \ HtmlPurifier에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="fb3a65c3b01e0a0c84c9697ff0aa34a13c563b1c" translate="yes" xml:space="preserve">
          <source>BaseInflector provides concrete implementation for &lt;a href=&quot;yii-helpers-inflector&quot;&gt;yii\helpers\Inflector&lt;/a&gt;.</source>
          <target state="translated">BaseInflector는 yii &lt;a href=&quot;yii-helpers-inflector&quot;&gt;\ helpers \ Inflector에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7f14f8d80276e0099da49cad54e7f341373bd2c7" translate="yes" xml:space="preserve">
          <source>BaseJson provides concrete implementation for &lt;a href=&quot;yii-helpers-json&quot;&gt;yii\helpers\Json&lt;/a&gt;.</source>
          <target state="translated">BaseJson은 yii &lt;a href=&quot;yii-helpers-json&quot;&gt;\ helpers \ Json에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9570a4c72df91ff567a63ea04ae8b71119e3c3a4" translate="yes" xml:space="preserve">
          <source>BaseListView is a base class for widgets displaying data from data provider such as ListView and GridView.</source>
          <target state="translated">BaseListView는 ListView 및 GridView와 같은 데이터 제공자의 데이터를 표시하는 위젯의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b2017d39f924365b23430a2656ceef0a84e4a306" translate="yes" xml:space="preserve">
          <source>BaseMailer serves as a base class that implements the basic functions required by &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii\mail\MailerInterface&lt;/a&gt;.</source>
          <target state="translated">BaseMailer는 yii &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;\ mail \ MailerInterface에&lt;/a&gt; 필요한 기본 기능을 구현하는 기본 클래스 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="f5a7a93ded2874f9a51f093b603e60d794506988" translate="yes" xml:space="preserve">
          <source>BaseManager is a base class implementing &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;yii\rbac\ManagerInterface&lt;/a&gt; for RBAC management.</source>
          <target state="translated">BaseManager는 RBAC 관리를 위해 yii &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;\ rbac \ ManagerInterface&lt;/a&gt; 를 구현하는 기본 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="3e66b6d8386848dd184b5f9a81e7deef27812489" translate="yes" xml:space="preserve">
          <source>BaseMarkdown provides concrete implementation for &lt;a href=&quot;yii-helpers-markdown&quot;&gt;yii\helpers\Markdown&lt;/a&gt;.</source>
          <target state="translated">BaseMarkdown은 yii &lt;a href=&quot;yii-helpers-markdown&quot;&gt;\ helpers \ Markdown에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5a9916e2b02b50baa147e0596e72a65b5bd61b6b" translate="yes" xml:space="preserve">
          <source>BaseMessage serves as a base class that implements the &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send()&lt;/a&gt; method required by &lt;a href=&quot;yii-mail-messageinterface&quot;&gt;yii\mail\MessageInterface&lt;/a&gt;.</source>
          <target state="translated">BaseMessage는 yii &lt;a href=&quot;yii-mail-messageinterface&quot;&gt;\ mail \ MessageInterface에&lt;/a&gt; 필요한 &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send ()&lt;/a&gt; 메소드 를 구현하는 기본 클래스 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="9f7cf8d9fadc25b3d9468ad9ebdb42f4ca77f55e" translate="yes" xml:space="preserve">
          <source>BaseMigrateController is the base class for migrate controllers.</source>
          <target state="translated">BaseMigrateController는 마이그레이션 컨트롤러의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ced57bb5bc7efc34184ac0f9215167cd67828a97" translate="yes" xml:space="preserve">
          <source>BaseStringHelper provides concrete implementation for &lt;a href=&quot;yii-helpers-stringhelper&quot;&gt;yii\helpers\StringHelper&lt;/a&gt;.</source>
          <target state="translated">BaseStringHelper는 yii &lt;a href=&quot;yii-helpers-stringhelper&quot;&gt;\ helpers \ StringHelper에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="75ed4b0ced00aaf9ec55b7d67d9fcc2a9c901437" translate="yes" xml:space="preserve">
          <source>BaseUrl provides concrete implementation for &lt;a href=&quot;yii-helpers-url&quot;&gt;yii\helpers\Url&lt;/a&gt;.</source>
          <target state="translated">BaseUrl은 yii &lt;a href=&quot;yii-helpers-url&quot;&gt;\ helpers \ Url에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="46a12e49b3ee24c45f5fa77b088833833d9fe280" translate="yes" xml:space="preserve">
          <source>BaseVarDumper provides concrete implementation for &lt;a href=&quot;yii-helpers-vardumper&quot;&gt;yii\helpers\VarDumper&lt;/a&gt;.</source>
          <target state="translated">BaseVarDumper는 yii &lt;a href=&quot;yii-helpers-vardumper&quot;&gt;\ helpers \ VarDumper에&lt;/a&gt; 대한 구체적인 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d53852b7efea4da6257eb80ec9e9a6f0424d3b55" translate="yes" xml:space="preserve">
          <source>BaseYii</source>
          <target state="translated">BaseYii</target>
        </trans-unit>
        <trans-unit id="74bb711129e6fc121f995d45dd319dd953902415" translate="yes" xml:space="preserve">
          <source>BaseYii $aliases</source>
          <target state="translated">BaseYii $ 별칭</target>
        </trans-unit>
        <trans-unit id="207bce5e5111d2b287bd1d827600c16e16e61b2a" translate="yes" xml:space="preserve">
          <source>BaseYii $app</source>
          <target state="translated">BaseYii $ 앱</target>
        </trans-unit>
        <trans-unit id="aaa2a86d10bfde5f6daedd4bee370ca8e13c5951" translate="yes" xml:space="preserve">
          <source>BaseYii $classMap</source>
          <target state="translated">BaseYii $ classMap</target>
        </trans-unit>
        <trans-unit id="9b561e909791736deda6480ea07325bff99f4893" translate="yes" xml:space="preserve">
          <source>BaseYii $container</source>
          <target state="translated">BaseYii $ 컨테이너</target>
        </trans-unit>
        <trans-unit id="00d7d908ca55ba30242bcde02d7e5a03b02df9e9" translate="yes" xml:space="preserve">
          <source>BaseYii autoload()</source>
          <target state="translated">BaseYii 자동로드 ()</target>
        </trans-unit>
        <trans-unit id="9d2c09d267096def3d264a728faf8bf8702fcbf1" translate="yes" xml:space="preserve">
          <source>BaseYii beginProfile()</source>
          <target state="translated">BaseYii beginProfile ()</target>
        </trans-unit>
        <trans-unit id="14d694dc54eb6cc715c143cb603c8a27a64dd889" translate="yes" xml:space="preserve">
          <source>BaseYii configure()</source>
          <target state="translated">BaseYii configure ()</target>
        </trans-unit>
        <trans-unit id="d826cd8a120d3bfa8738ec01b9e308bbf413d3a5" translate="yes" xml:space="preserve">
          <source>BaseYii createObject()</source>
          <target state="translated">BaseYii createObject ()</target>
        </trans-unit>
        <trans-unit id="eaaaf05c6853d673e42e725f5ef1a7b120ee516d" translate="yes" xml:space="preserve">
          <source>BaseYii endProfile()</source>
          <target state="translated">BaseYii endProfile ()</target>
        </trans-unit>
        <trans-unit id="1486bdc7a5bc8d4bd928924f8c4614d3310db17c" translate="yes" xml:space="preserve">
          <source>BaseYii error()</source>
          <target state="translated">BaseYii 오류 ()</target>
        </trans-unit>
        <trans-unit id="c7565c305343176bdf5ae955a97a0caa2db5ff97" translate="yes" xml:space="preserve">
          <source>BaseYii getAlias()</source>
          <target state="translated">BaseYii getAlias ​​()</target>
        </trans-unit>
        <trans-unit id="05a2933233d2c94be3b8283d60bea2b169733956" translate="yes" xml:space="preserve">
          <source>BaseYii getLogger()</source>
          <target state="translated">BaseYii getLogger ()</target>
        </trans-unit>
        <trans-unit id="cdfb70a6aba34d45329a25e94883da938da4c6e6" translate="yes" xml:space="preserve">
          <source>BaseYii getObjectVars()</source>
          <target state="translated">BaseYii getObjectVars ()</target>
        </trans-unit>
        <trans-unit id="e2fe913136db9fc8fdc4aa45474eac5ebff3b87e" translate="yes" xml:space="preserve">
          <source>BaseYii getRootAlias()</source>
          <target state="translated">BaseYii getRootAlias ​​()</target>
        </trans-unit>
        <trans-unit id="fea43e7f063bc56a5d01bd2552c4ed58f6ad4a01" translate="yes" xml:space="preserve">
          <source>BaseYii getVersion()</source>
          <target state="translated">BaseYii getVersion ()</target>
        </trans-unit>
        <trans-unit id="337c67c9e7de8262868db82cac710618a34d08f8" translate="yes" xml:space="preserve">
          <source>BaseYii info()</source>
          <target state="translated">BaseYii 정보 ()</target>
        </trans-unit>
        <trans-unit id="a86868f982e69d18bb53f60530456535a7f4018a" translate="yes" xml:space="preserve">
          <source>BaseYii is the core helper class for the Yii framework.</source>
          <target state="translated">BaseYii는 Yii 프레임 워크의 핵심 도우미 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="80f70e17869621b898ce0ce8e49c3ff143dc03e7" translate="yes" xml:space="preserve">
          <source>BaseYii powered()</source>
          <target state="translated">BaseYii 전원 공급 장치 ()</target>
        </trans-unit>
        <trans-unit id="a68516c3eea0542e26e5d17eaa0f4cbbedbb2327" translate="yes" xml:space="preserve">
          <source>BaseYii setAlias()</source>
          <target state="translated">BaseYii setAlias ​​()</target>
        </trans-unit>
        <trans-unit id="fd7ddcb119e1ab1ef7b80c087fedd18cd3ae62d1" translate="yes" xml:space="preserve">
          <source>BaseYii setLogger()</source>
          <target state="translated">BaseYii setLogger ()</target>
        </trans-unit>
        <trans-unit id="c3b6eeebb2f1644de9e4b4daffab553c3484958f" translate="yes" xml:space="preserve">
          <source>BaseYii t()</source>
          <target state="translated">베이스 Yii t ()</target>
        </trans-unit>
        <trans-unit id="5fc8020ffbc8f7108af8f1296f2693baa3cf698c" translate="yes" xml:space="preserve">
          <source>BaseYii trace()</source>
          <target state="translated">BaseYii 추적 ()</target>
        </trans-unit>
        <trans-unit id="22e0e753cf16e910c41420c0efd917420df1713f" translate="yes" xml:space="preserve">
          <source>BaseYii warning()</source>
          <target state="translated">BaseYii 경고 ()</target>
        </trans-unit>
        <trans-unit id="cfae77f67bac8e0d97669657a7770fd72bec3e4e" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://github.com/cebe/markdown&quot;&gt;cebe/markdown&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cebe/markdown&quot;&gt;cebe / markdown을&lt;/a&gt; 기반으로 합니다.</target>
        </trans-unit>
        <trans-unit id="6414ebe1bb4ace2f0ab1574d69f489ffcfaa5351" translate="yes" xml:space="preserve">
          <source>Based on the sort direction, the CSS class of the generated hyperlink will be appended with &quot;asc&quot; or &quot;desc&quot;.</source>
          <target state="translated">정렬 방향에 따라 생성 된 하이퍼 링크의 CSS 클래스에 &quot;asc&quot;또는 &quot;desc&quot;가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e63f51f7e5afad0c831b1acc1916d16e437f5b4a" translate="yes" xml:space="preserve">
          <source>Bash completion</source>
          <target state="translated">배쉬 완성</target>
        </trans-unit>
        <trans-unit id="5eab8fc3ffa32aa796174a77104a420884806a36" translate="yes" xml:space="preserve">
          <source>Basic Concepts</source>
          <target state="translated">기본 개념</target>
        </trans-unit>
        <trans-unit id="49d7bd87df3d5071be5328113fddee7069deefee" translate="yes" xml:space="preserve">
          <source>Basic headers handled for the CORS requests.</source>
          <target state="translated">CORS 요청에 대해 처리 된 기본 헤더.</target>
        </trans-unit>
        <trans-unit id="c59bab2761efa2dc78ea4cbc3be5405c02bb44ec" translate="yes" xml:space="preserve">
          <source>Basic principles</source>
          <target state="translated">기본 원리들</target>
        </trans-unit>
        <trans-unit id="cbd09c3ec35517548a74e9155de3de4190f95554" translate="yes" xml:space="preserve">
          <source>Basic slug value</source>
          <target state="translated">기본 슬러그 값</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="72539f0f51a3099df9234f65310a0fd23c204da3" translate="yes" xml:space="preserve">
          <source>Basic usage is the following:</source>
          <target state="translated">기본 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="dda8947615266767ff87d8f18b927639a69c4bb3" translate="yes" xml:space="preserve">
          <source>Batch Query</source>
          <target state="translated">배치 쿼리</target>
        </trans-unit>
        <trans-unit id="bb1b5e8a6c9f44d479cfbd84336aa07dfb98bd17" translate="yes" xml:space="preserve">
          <source>Batch options.</source>
          <target state="translated">배치 옵션.</target>
        </trans-unit>
        <trans-unit id="73bc6ce52f957f97e5a856207b74f34f89ea0729" translate="yes" xml:space="preserve">
          <source>Batch query can be used like the following:</source>
          <target state="translated">배치 쿼리는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4d105c518f4942d711a8bc5983c31743f590a02" translate="yes" xml:space="preserve">
          <source>Batch size is determined by the &lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii\elasticsearch\Query::$limit&lt;/a&gt; setting. &lt;a href=&quot;yii-db-querytrait#%24offset-detail&quot;&gt;yii\elasticsearch\Query::$offset&lt;/a&gt; setting is ignored. New batches will be obtained until the server runs out of results.</source>
          <target state="translated">배치 크기는 &lt;a href=&quot;yii-db-querytrait#%24limit-detail&quot;&gt;yii \ elasticsearch \ Query :: $ limit&lt;/a&gt; 설정에 의해 결정됩니다 . &lt;a href=&quot;yii-db-querytrait#%24offset-detail&quot;&gt;yii \ elasticsearch \ Query :: $ offset&lt;/a&gt; 설정은 무시됩니다. 서버에 결과가 없어 질 때까지 새로운 배치가 확보됩니다.</target>
        </trans-unit>
        <trans-unit id="44c8c77a96ae4e610b04659073f1cf4936126b24" translate="yes" xml:space="preserve">
          <source>Batch size is determined by the &lt;code&gt;limit&lt;/code&gt; setting (note that in scan mode batch limit is per shard).</source>
          <target state="translated">배치 크기는 &lt;code&gt;limit&lt;/code&gt; 설정 에 따라 결정됩니다 (스캔 모드에서 배치 한계는 샤드 당임).</target>
        </trans-unit>
        <trans-unit id="4be246d85e35ff9c8228c9cdc1f8ac352967895d" translate="yes" xml:space="preserve">
          <source>BatchQueryResult represents a batch query from which you can retrieve data in batches.</source>
          <target state="translated">BatchQueryResult는 배치로 데이터를 검색 할 수있는 배치 쿼리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4f49b6c4b389fdd50e921cd5401b3c220b4e6414" translate="yes" xml:space="preserve">
          <source>Bcc attribute input search value</source>
          <target state="translated">숨은 참조 속성 입력 검색 값</target>
        </trans-unit>
        <trans-unit id="6ad3337a3f1f1b9bcef749cb395d745cbfdc40e6" translate="yes" xml:space="preserve">
          <source>Be careful of performing this operation if the cache is shared among multiple applications.</source>
          <target state="translated">캐시가 여러 애플리케이션간에 공유되는 경우이 작업을 수행하는 데주의하십시오.</target>
        </trans-unit>
        <trans-unit id="a5bac5d9fdee10b215823af0cb372254c962c827" translate="yes" xml:space="preserve">
          <source>Be careful when naming form elements such as submit buttons. According to the &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery documentation&lt;/a&gt; there are some reserved names that can cause conflicts, e.g. &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, or &lt;code&gt;method&lt;/code&gt;.</source>
          <target state="translated">제출 단추와 같은 양식 요소의 이름을 지정할 때주의하십시오. &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery 문서&lt;/a&gt; 에 따르면 &lt;code&gt;submit&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; 또는 &lt;code&gt;method&lt;/code&gt; 와 같이 충돌을 일으킬 수있는 예약 된 이름이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="343e8a4650e718d9ae9776d5a2a9b4a7e8b95a29" translate="yes" xml:space="preserve">
          <source>Be careful when naming form elements such as submit buttons. According to the &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery documentation&lt;/a&gt; there are some reserved names that can cause conflicts:</source>
          <target state="translated">제출 단추와 같은 양식 요소의 이름을 지정할 때주의하십시오. &lt;a href=&quot;https://api.jquery.com/submit/&quot;&gt;jQuery 문서&lt;/a&gt; 에 따르면 충돌을 일으킬 수있는 예약 된 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f8859b4f0ec2a660e7af3f087092a06dd4cf2a0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-base-module&quot;&gt;yii\base\Module&lt;/a&gt; extends from ServiceLocator, modules and the application are all service locators.</source>
          <target state="translated">&lt;a href=&quot;yii-base-module&quot;&gt;yii \ base \ Module&lt;/a&gt; 은 ServiceLocator에서 확장 되므로 모듈과 응용 프로그램은 모두 서비스 로케이터입니다.</target>
        </trans-unit>
        <trans-unit id="d9a43d61ec67d4a93b4e2cf4541812ca34f7a9f8" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-caching-cache&quot;&gt;yii\caching\Cache&lt;/a&gt; implements &lt;code&gt;ArrayAccess&lt;/code&gt;, a cache component can be used like an array. The following are some examples:</source>
          <target state="translated">때문에 &lt;a href=&quot;yii-caching-cache&quot;&gt;YII \ 캐싱 \ 캐시&lt;/a&gt; 구현 &lt;code&gt;ArrayAccess&lt;/code&gt; , 캐시 구성 요소는 배열처럼 사용될 수있다. 다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="296371f589d001ae05e8975d96532652b64f3cc0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; extends from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, it inherits &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; features, such as attributes, validation rules, data serialization, etc.</source>
          <target state="translated">때문에 &lt;a href=&quot;yii-db-activerecord&quot;&gt;YII \ DB \ 액티브는&lt;/a&gt; 에서 확장 &lt;a href=&quot;yii-base-model&quot;&gt;YII \ 기본 \ 모델&lt;/a&gt; , 그것은 상속 &lt;em&gt;모든 &lt;/em&gt;&lt;a href=&quot;guide-structure-models&quot;&gt;모델&lt;/a&gt; 등 속성, 유효성 검사 규칙, 데이터 직렬화와 같은 기능을</target>
        </trans-unit>
        <trans-unit id="c20709b15190252e6c2a041197eb0da3d6b619a2" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; extends from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, it shares the same &lt;a href=&quot;guide-input-validation&quot;&gt;data validation&lt;/a&gt; feature. You can declare validation rules by overriding the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method and perform data validation by calling the &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt; method.</source>
          <target state="translated">때문에 &lt;a href=&quot;yii-db-activerecord&quot;&gt;YII \ DB \ 액티브가&lt;/a&gt; 에서 확장 &lt;a href=&quot;yii-base-model&quot;&gt;YII \ 기본 \ 모델&lt;/a&gt; , 그것은 같은 공유 &lt;a href=&quot;guide-input-validation&quot;&gt;데이터 유효성 검사&lt;/a&gt; 기능을. &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 메서드 를 재정 의하여 유효성 검사 규칙을 선언 하고 &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate ()&lt;/a&gt; 메서드를 호출하여 데이터 유효성 검사를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="187242f2dbfcfd6fa70b117f73a19c5dbbbeadbf" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;yii-db-command#bindParam()-detail&quot;&gt;bindParam()&lt;/a&gt; supports binding parameters by references, the above code can also be written like the following:</source>
          <target state="translated">때문에 &lt;a href=&quot;yii-db-command#bindParam()-detail&quot;&gt;bindParam ()&lt;/a&gt; 에서 지원하는 부호를 파라미터 바인딩, 상기 코드는 또한 다음과 같이 쓸 수있다 :</target>
        </trans-unit>
        <trans-unit id="3fcd2020a4c2afcc93489f07488e5b9da87e768e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;UserProfileFixture&lt;/code&gt; extends from &lt;code&gt;ActiveFixture&lt;/code&gt;, you may further use the following syntax to access the data provided by the fixture:</source>
          <target state="translated">&lt;code&gt;UserProfileFixture&lt;/code&gt; 는 &lt;code&gt;ActiveFixture&lt;/code&gt; 에서 확장 되므로 다음 구문을 사용하여 조명기에서 제공 한 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a10e0ffcab85a75c37e7a5d5302e7081e3bbb17a" translate="yes" xml:space="preserve">
          <source>Because Active Record attributes are named after table columns, you may find you are writing PHP code like &lt;code&gt;$customer-&amp;gt;first_name&lt;/code&gt;, which uses underscores to separate words in attribute names if your table columns are named in this way. If you are concerned about code style consistency, you should rename your table columns accordingly (to use camelCase, for example).</source>
          <target state="translated">Active Record 속성은 테이블 열의 이름을 따서 명명되므로 &lt;code&gt;$customer-&amp;gt;first_name&lt;/code&gt; 과 같은 PHP 코드를 작성하는 것을 알 수 있습니다 .이 방법은 테이블 열의 이름이 이런 식으로 지정되면 밑줄을 사용하여 속성 이름에서 단어를 구분합니다. 코드 스타일 일관성에 관심이있는 경우, 예를 들어 camelCase를 사용하기 위해 테이블 ​​열의 이름을 적절히 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="3fb4016ec98e1dc1ddfb6ff6a48cda045f74ff6f" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">ActiveQuery는 yii &lt;a href=&quot;yii-db-query&quot;&gt;\ db \ Query&lt;/a&gt; 에서 확장되므로 &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85da14873ea82a9923e87d66ad94b1122dc5d455" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-elasticsearch-query&quot;&gt;yii\elasticsearch\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">ActiveQuery는 yii &lt;a href=&quot;yii-elasticsearch-query&quot;&gt;\ elasticsearch \ Query&lt;/a&gt; 에서 확장되므로 &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a70917033619bceca3d511b58c383c9f6a6bc1a" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii\mongodb\file\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">ActiveQuery는 yii &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;\ mongodb \ file \ Query&lt;/a&gt; 에서 확장되므로 &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b701177194fa70f11dd884ac1b767d527a6f15d4" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii\mongodb\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">ActiveQuery는 yii &lt;a href=&quot;yii-mongodb-query&quot;&gt;\ mongodb \ Query&lt;/a&gt; 에서 확장되므로 &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c6c236499c44f0aea76bf24537eb2899f3f27d" translate="yes" xml:space="preserve">
          <source>Because ActiveQuery extends from &lt;a href=&quot;yii-sphinx-query&quot;&gt;yii\sphinx\Query&lt;/a&gt;, one can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">ActiveQuery는 yii &lt;a href=&quot;yii-sphinx-query&quot;&gt;\ sphinx \ Query&lt;/a&gt; 에서 확장되므로 &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6a5e467c985cfafb9c183c9bfacadd78473892d" translate="yes" xml:space="preserve">
          <source>Because Cache implements the &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, it can be used like an array. For example,</source>
          <target state="translated">캐시는 &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; 인터페이스를 구현하므로 배열처럼 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="3dec77ec660e177aae7b181f1bd14b74582bf7fa" translate="yes" xml:space="preserve">
          <source>Because CacheInterface extends the &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, it can be used like an array. For example,</source>
          <target state="translated">CacheInterface는 &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; 인터페이스를 확장하므로 배열처럼 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="710910cf6aa85ab704edd15b5e3ccd7278293e0e" translate="yes" xml:space="preserve">
          <source>Because Gii generates new code files on the server, you should only use it on your own development machine. To prevent other people from using this module, by default, Gii can only be accessed by localhost. You may configure its &lt;a href=&quot;yii-gii-module#%24allowedIPs-detail&quot;&gt;$allowedIPs&lt;/a&gt; property if you want to make it accessible on other machines.</source>
          <target state="translated">Gii는 서버에서 새 코드 파일을 생성하므로 자체 개발 시스템에서만 사용해야합니다. 다른 사람이이 모듈을 사용하지 못하도록 기본적으로 Gii는 localhost 만 액세스 할 수 있습니다. 당신은 구성 할 수 있습니다 &lt;a href=&quot;yii-gii-module#%24allowedIPs-detail&quot;&gt;$의 allowedIPs의&lt;/a&gt; 다른 컴퓨터에 액세스 할 수 있도록하려면 속성을.</target>
        </trans-unit>
        <trans-unit id="3e614fa849facdacbe81fff64ddf044bd6c519b3" translate="yes" xml:space="preserve">
          <source>Because Yii embraces Composer as a package dependency manager, it is recommended that you also install the Composer autoloader. If you are using 3rd-party libraries that have their own autoloaders, you should also install those.</source>
          <target state="translated">Yii는 Composer를 패키지 종속성 관리자로 채택하므로 Composer 오토로더도 설치하는 것이 좋습니다. 자체 오토로더가있는 써드 파티 라이브러리를 사용하는 경우 해당 라이브러리도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9289d8285d66e744a22db5e188215cd2408a8fc6" translate="yes" xml:space="preserve">
          <source>Because a DB connection often needs to be accessed in different places, a common practice is to configure it in terms of an &lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; like the following:</source>
          <target state="translated">DB 연결은 다른 위치에서 액세스해야하는 경우가 많으므로 일반적으로 다음과 같은 &lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소&lt;/a&gt; 측면에서 구성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="e749146cf895d5cd00af02d9f6240f5457f0388b" translate="yes" xml:space="preserve">
          <source>Because a relation method returns an instance of &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;, you can further build this query using query building methods before performing DB query. For example,</source>
          <target state="translated">관계형 메서드는 &lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt; 의 인스턴스를 반환하므로 DB 쿼리를 수행하기 전에 쿼리 작성 방법을 사용하여이 쿼리를 추가로 빌드 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a79b062db1558c6ffb9cbc2a0563d1557df5d3f6" translate="yes" xml:space="preserve">
          <source>Because all cache components support the same set of APIs, you can swap the underlying cache component with a different one by reconfiguring it in the application configuration without modifying the code that uses the cache. For example, you can modify the above configuration to use &lt;a href=&quot;yii-caching-apccache&quot;&gt;APC cache&lt;/a&gt;:</source>
          <target state="translated">모든 캐시 구성 요소는 동일한 API 집합을 지원하므로 캐시를 사용하는 코드를 수정하지 않고 응용 프로그램 구성에서 기본 캐시 구성 요소를 다른 구성 요소로 다시 구성 할 수 있습니다. 예를 들어 &lt;a href=&quot;yii-caching-apccache&quot;&gt;APC 캐시&lt;/a&gt; 를 사용하도록 위 구성을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2580aa1ab34f1a08564b46eced2e312853eb367" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">속성 값은이 동작에 의해 자동으로 설정되므로 일반적으로 사용자 입력이 아니므로 유효성을 검사 해서는 안됩니다. 즉, &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; 는 모델 의 &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 메소드에 나타나지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="be465f3c7b0e10cc089af80dffeca6c797704401" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. &lt;code&gt;created_by&lt;/code&gt; and &lt;code&gt;updated_by&lt;/code&gt; should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">속성 값은이 동작에 의해 자동으로 설정되므로 일반적으로 사용자 입력이 아니므로 유효성을 검사 해서는 안됩니다. 즉, &lt;code&gt;created_by&lt;/code&gt; 및 &lt;code&gt;updated_by&lt;/code&gt; 는 모델 의 &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 메소드에 나타나지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="86880942c47713f6b2e57ae18d59350535d53183" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. the &lt;code&gt;slug&lt;/code&gt; attribute should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">속성 값은이 동작에 의해 자동으로 설정되므로 일반적으로 사용자 입력이 아니므로 유효성을 검사 해서는 안됩니다. 즉, &lt;code&gt;slug&lt;/code&gt; 속성은 모델 의 &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 메소드에 나타나지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="d1d556cef46fa7cdfb32efd0170fd78500b6ba3f" translate="yes" xml:space="preserve">
          <source>Because attribute values will be set automatically by this behavior, they are usually not user input and should therefore not be validated, i.e. they should not appear in the &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules()&lt;/a&gt; method of the model.</source>
          <target state="translated">속성 값은이 동작에 의해 자동으로 설정되므로 일반적으로 사용자 입력이 아니므로 유효성을 검사해서는 안됩니다. 즉 , 모델 의 &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 메소드에 표시되지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="ea2da1d0acb18fd2d52039c2b1c0797933dbde1d" translate="yes" xml:space="preserve">
          <source>Because breadcrumbs usually appears in nearly every page of a website, you may consider placing it in a layout view. You can use a view parameter (e.g. &lt;code&gt;$this-&amp;gt;params['breadcrumbs']&lt;/code&gt;) to configure the links in different views. In the layout view, you assign this view parameter to the &lt;a href=&quot;yii-widgets-breadcrumbs#%24links-detail&quot;&gt;$links&lt;/a&gt; property like the following:</source>
          <target state="translated">이동 경로는 일반적으로 웹 사이트의 거의 모든 페이지에 표시되므로 레이아웃보기에 배치하는 것을 고려할 수 있습니다. 보기 매개 변수 (예 : &lt;code&gt;$this-&amp;gt;params['breadcrumbs']&lt;/code&gt; )를 사용하여 다른보기에서 링크를 구성 할 수 있습니다. 레이아웃보기에서이보기 매개 변수를 다음과 같이 &lt;a href=&quot;yii-widgets-breadcrumbs#%24links-detail&quot;&gt;$ links&lt;/a&gt; 특성에 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bf90ffec0b936767b859768f83383e965528a16" translate="yes" xml:space="preserve">
          <source>Because by default the response format is &lt;a href=&quot;yii-web-response#FORMAT_HTML-detail&quot;&gt;HTML&lt;/a&gt;, you should only return a string in an action method. If you want to use a different response format, you should set it first before returning the data. For example,</source>
          <target state="translated">기본적으로 응답 형식은 &lt;a href=&quot;yii-web-response#FORMAT_HTML-detail&quot;&gt;HTML&lt;/a&gt; 이므로 액션 메서드에는 문자열 만 반환해야합니다. 다른 응답 형식을 사용하려면 데이터를 반환하기 전에 먼저 설정해야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="b0da934f3c5d97ac0ed8b419488543534bc57e19" translate="yes" xml:space="preserve">
          <source>Because dependencies are needed when new objects are being created, their registration should be done as early as possible. The following are the recommended practices:</source>
          <target state="translated">새 객체를 만들 때는 종속성이 필요하므로 등록을 가능한 빨리 수행해야합니다. 권장되는 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="420687bc398ae45a48fe9f097148bec0c52ca110" translate="yes" xml:space="preserve">
          <source>Because extensions are meant to be used by other people, you often need to make an extra effort during development. Below we introduce some common and recommended practices in creating high quality extensions.</source>
          <target state="translated">확장은 다른 사람들이 사용하기 때문에 개발 중에 추가 노력을 기울여야하는 경우가 종종 있습니다. 아래에서는 고품질 확장을 만드는 데 일반적이고 권장되는 방법을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="90958be63fe611ca0eb30c39df2434afc5b2793c" translate="yes" xml:space="preserve">
          <source>Because it is a common task to query by primary key values or a set of column values, Yii provides two shortcut methods for this purpose:</source>
          <target state="translated">기본 키 값 또는 일련의 열 값으로 쿼리하는 것이 일반적인 작업이므로 Yii는이를 위해 두 가지 바로 가기 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ef5f330df44fd2f7ee5d7461819693dc35b5acb5" translate="yes" xml:space="preserve">
          <source>Because layouts are also views, they can be created in the similar way as normal views. By default, layouts are stored in the directory &lt;code&gt;@app/views/layouts&lt;/code&gt;. For layouts used within a &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt;, they should be stored in the &lt;code&gt;views/layouts&lt;/code&gt; directory under the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;module directory&lt;/a&gt;. You may customize the default layout directory by configuring the &lt;a href=&quot;yii-base-module#%24layoutPath-detail&quot;&gt;yii\base\Module::$layoutPath&lt;/a&gt; property of the application or modules.</source>
          <target state="translated">레이아웃도 뷰이므로 일반 뷰와 유사한 방식으로 만들 수 있습니다. 기본적으로 레이아웃은 &lt;code&gt;@app/views/layouts&lt;/code&gt; 디렉토리에 저장됩니다 . &lt;a href=&quot;guide-structure-modules&quot;&gt;모듈&lt;/a&gt; 내에서 사용되는 &lt;code&gt;views/layouts&lt;/code&gt; 경우 &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;모듈 디렉토리&lt;/a&gt; 아래의 views / layouts 디렉토리에 저장해야합니다 . 응용 프로그램 또는 모듈 의 &lt;a href=&quot;yii-base-module#%24layoutPath-detail&quot;&gt;yii \ base \ Module :: $ layoutPath&lt;/a&gt; 속성을 구성하여 기본 레이아웃 디렉토리를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6336648679a3e6cc0a89b52d58cf7aaaf793b367" translate="yes" xml:space="preserve">
          <source>Because of the flushing and exporting level setting, by default when you call &lt;code&gt;Yii::trace()&lt;/code&gt; or any other logging method, you will NOT see the log message immediately in the log targets. This could be a problem for some long-running console applications. To make each log message appear immediately in the log targets, you should set both &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; and &lt;a href=&quot;yii-log-target#%24exportInterval-detail&quot;&gt;exportInterval&lt;/a&gt; to be 1, as shown below:</source>
          <target state="translated">플러시 및 내보내기 레벨 설정으로 인해 기본적으로 &lt;code&gt;Yii::trace()&lt;/code&gt; 또는 다른 로깅 메소드 를 호출 하면 로그 대상에 로그 메시지가 즉시 표시되지 않습니다. 장기 실행 콘솔 응용 프로그램에서 문제가 될 수 있습니다. 각 로그 메시지를 로그 대상에 즉시 표시하려면 아래 표시된 것처럼 &lt;a href=&quot;yii-log-dispatcher#%24flushInterval-detail&quot;&gt;flushInterval&lt;/a&gt; 및 &lt;a href=&quot;yii-log-target#%24exportInterval-detail&quot;&gt;exportInterval&lt;/a&gt; 을 모두 1로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2430a076d138167e46ba181727a6f2a925241c8f" translate="yes" xml:space="preserve">
          <source>Because service locators are often being created with &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;, a writable property named &lt;a href=&quot;yii-di-servicelocator#setComponents()-detail&quot;&gt;components&lt;/a&gt; is provided. This allows you to configure and register multiple components at once. The following code shows a configuration array that can be used to configure a service locator (e.g. an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;) with the &lt;code&gt;db&lt;/code&gt;, &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;search&lt;/code&gt; components:</source>
          <target state="translated">서비스 로케이터는 종종 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 으로 작성되기 때문에 &lt;a href=&quot;yii-di-servicelocator#setComponents()-detail&quot;&gt;components&lt;/a&gt; 라는 쓰기 가능한 특성 이 제공됩니다. 이를 통해 여러 구성 요소를 한 번에 구성하고 등록 할 수 있습니다. 다음 코드는 &lt;code&gt;db&lt;/code&gt; , &lt;code&gt;cache&lt;/code&gt; 및 &lt;code&gt;search&lt;/code&gt; 구성 요소 를 사용하여 서비스 로케이터 (예 : &lt;a href=&quot;guide-structure-applications&quot;&gt;응용 프로그램&lt;/a&gt; ) 를 구성하는 데 사용할 수있는 구성 배열을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3324f10752241de408a51d282208ebbab5dfa067" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;components&lt;/code&gt; configuration is complex too, you store it in a separate file called &lt;code&gt;components.php&lt;/code&gt; and &quot;require&quot; this file in &lt;code&gt;web.php&lt;/code&gt; as shown above. The content of &lt;code&gt;components.php&lt;/code&gt; is as follows,</source>
          <target state="translated">때문에 &lt;code&gt;components&lt;/code&gt; 구성이 너무 복잡 별도라는 파일에 저장 &lt;code&gt;components.php&lt;/code&gt; 에서이 파일을 &quot;필요&quot;를 &lt;code&gt;web.php&lt;/code&gt; 을 위의 그림과 같이. &lt;code&gt;components.php&lt;/code&gt; 의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e0efb6818ef7b93fdab512bd9a523cc259d11aa4" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;layout&lt;/code&gt; property may be configured at different levels (controllers, modules, application), behind the scene Yii takes two steps to determine what is the actual layout file being used for a particular controller.</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; 속성은 서로 다른 레벨 (컨트롤러, 모듈, 애플리케이션)로 구성 될 수 있기 때문에 이면 뒤에서 특정 컨트롤러에 사용되는 실제 레이아웃 파일이 무엇인지 결정하기 위해 두 단계를 거칩니다.</target>
        </trans-unit>
        <trans-unit id="d1f815f1a877c71d7d484ad86d8773a17d49f547" translate="yes" xml:space="preserve">
          <source>Because the bootstrapping work has to be done before handling &lt;em&gt;every&lt;/em&gt; request, it is very important to keep this process light and optimize it as much as possible.</source>
          <target state="translated">&lt;em&gt;모든&lt;/em&gt; 요청을 처리하기 전에 부트 스트랩 작업을 수행해야하므로이 프로세스를 가볍게 유지하고 최대한 최적화하는 것이 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="70e301c5481aff560779eb109497734db12a4d27" translate="yes" xml:space="preserve">
          <source>Because the default implementation of &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; will return all scenarios and attributes found in &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt;, if you do not override this method, it means an attribute is safe as long as it appears in one of the active validation rules.</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii \ base \ Model :: scenarios ()&lt;/a&gt; 의 기본 구현은 yii \ base \ Model :: &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;rules ()&lt;/a&gt; 에있는 모든 시나리오 및 속성을 리턴 하므로이 메소드를 대체하지 않으면 속성이 오랫동안 안전하다는 의미입니다 활성 유효성 검사 규칙 중 하나에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="6230f0fe655618bda928da46c5be3a9970ccb35c" translate="yes" xml:space="preserve">
          <source>Because this class is a behavior, when it is attached to a component, that component will then also have the &lt;code&gt;prop1&lt;/code&gt; and &lt;code&gt;prop2&lt;/code&gt; properties and the &lt;code&gt;foo()&lt;/code&gt; method.</source>
          <target state="translated">이 클래스는 동작이므로 구성 요소에 연결되면 해당 구성 요소에도 &lt;code&gt;prop1&lt;/code&gt; 및 &lt;code&gt;prop2&lt;/code&gt; 속성과 &lt;code&gt;foo()&lt;/code&gt; 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="55920b46f3eaea3b0285ed66a8cc5265cef83185" translate="yes" xml:space="preserve">
          <source>Because this method returns an ArrayObject object, you may manipulate it by inserting or removing validators (useful in model behaviors). For example,</source>
          <target state="translated">이 메소드는 ArrayObject 객체를 반환하므로 유효성 검사기를 삽입하거나 제거하여 모델 동작에 유용 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="efb385432b7ece23df097332cd4171d31a52a4bb" translate="yes" xml:space="preserve">
          <source>Before feature can be used this wrapper should be registered via &lt;a href=&quot;yii-mongodb-file-streamwrapper#register()-detail&quot;&gt;register()&lt;/a&gt; method. It is usually performed via \yii\mongodb\file\yii\mongodb\Connection::registerFileStreamWrapper().</source>
          <target state="translated">기능을 사용하려면이 래퍼를 &lt;a href=&quot;yii-mongodb-file-streamwrapper#register()-detail&quot;&gt;register ()&lt;/a&gt; 메소드 를 통해 등록 해야합니다 . 일반적으로 \ yii \ mongodb \ file \ yii \ mongodb \ Connection :: registerFileStreamWrapper ()를 통해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="07227dfbf64a71bb46357a6f19b053b70c5fedba" translate="yes" xml:space="preserve">
          <source>Before the redirection, the current URL (if it's not an AJAX url) will be kept as &lt;a href=&quot;yii-web-user#%24returnUrl-detail&quot;&gt;$returnUrl&lt;/a&gt; so that the user browser may be redirected back to the current page after successful login.</source>
          <target state="translated">리디렉션하기 전에 현재 URL (AJAX URL이 아닌 경우)은 &lt;a href=&quot;yii-web-user#%24returnUrl-detail&quot;&gt;$ returnUrl&lt;/a&gt; 로 유지 되므로 로그인 후 사용자 브라우저가 현재 페이지로 다시 리디렉션 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9358b14f20904e289a4cb2a46bbb15d363b9fe8" translate="yes" xml:space="preserve">
          <source>Before we set off to define authorization data and perform access checking, we need to configure the &lt;a href=&quot;yii-base-application#%24authManager-detail&quot;&gt;authManager&lt;/a&gt; application component. Yii provides two types of authorization managers: &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii\rbac\PhpManager&lt;/a&gt; and &lt;a href=&quot;yii-rbac-dbmanager&quot;&gt;yii\rbac\DbManager&lt;/a&gt;. The former uses a PHP script file to store authorization data, while the latter stores authorization data in a database. You may consider using the former if your application does not require very dynamic role and permission management.</source>
          <target state="translated">권한 부여 데이터를 정의하고 액세스 확인을 수행하기 전에 &lt;a href=&quot;yii-base-application#%24authManager-detail&quot;&gt;authManager&lt;/a&gt; 애플리케이션 구성 요소 를 구성해야합니다 . : YII 권한 부여 관리자의 두 가지 유형 제공 &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;YII \ RBAC \ PhpManager&lt;/a&gt; 및 &lt;a href=&quot;yii-rbac-dbmanager&quot;&gt;YII \ RBAC \ DbManager을&lt;/a&gt; . 전자는 PHP 스크립트 파일을 사용하여 인증 데이터를 저장하고 후자는 인증 데이터를 데이터베이스에 저장합니다. 응용 프로그램에 매우 역동적 인 역할 및 권한 관리가 필요하지 않은 경우 전자를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="33443d8a5c9e9bcde056a8f254827236ba6db71b" translate="yes" xml:space="preserve">
          <source>Before you can go on you need to create those tables in the database. To do this, you can use the migration stored in &lt;code&gt;@yii/rbac/migrations&lt;/code&gt;:</source>
          <target state="translated">계속 진행하기 전에 데이터베이스에서 해당 테이블을 작성해야합니다. 이를 위해 &lt;code&gt;@yii/rbac/migrations&lt;/code&gt; 저장된 마이그레이션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b729f9d33c28cf3cd936af16905711d45583ec20" translate="yes" xml:space="preserve">
          <source>Begins a form field.</source>
          <target state="translated">양식 필드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">거래를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="98c22a82cdb5c9cc429e4d6f64edc457a50804ad" translate="yes" xml:space="preserve">
          <source>Begins a widget.</source>
          <target state="translated">위젯을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="f411290d37d609a2351cac68bca982929f1bf1b6" translate="yes" xml:space="preserve">
          <source>Begins fragment caching.</source>
          <target state="translated">조각 캐싱을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e995d5bde231b1bc4282273e17f03af039cc1e23" translate="yes" xml:space="preserve">
          <source>Begins recording a block.</source>
          <target state="translated">블록 녹화를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="c9d1fe33c8a269d673c20ddeac18de3469b81c0d" translate="yes" xml:space="preserve">
          <source>Begins the rendering of content that is to be decorated by the specified view.</source>
          <target state="translated">지정된 뷰로 장식 할 내용의 렌더링을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="5204572a175f0f672aa0cedd8c61b0dc6a6b363a" translate="yes" xml:space="preserve">
          <source>Behavior classes, like normal classes, support inheritance. Traits, on the other hand, can be considered as language-supported copy and paste. They do not support inheritance.</source>
          <target state="translated">일반 클래스와 같은 동작 클래스는 상속을 지원합니다. 반면에 특성은 언어 지원 복사 및 붙여 넣기로 간주 될 수 있습니다. 상속을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdda77c9441838913592429d41fa040581d64c30" translate="yes" xml:space="preserve">
          <source>Behavior is the base class for all behavior classes.</source>
          <target state="translated">행동은 모든 행동 클래스의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b615d319efe934d18d838650aea75dd222232f9" translate="yes" xml:space="preserve">
          <source>Behaviors</source>
          <target state="translated">Behaviors</target>
        </trans-unit>
        <trans-unit id="f61e2abbbeb1421331b1db9905a3e01885e419f1" translate="yes" xml:space="preserve">
          <source>Behaviors are configurable while traits are not.</source>
          <target state="translated">특성은 구성하지 않지만 동작을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bdd3edf26829f49718d8257f2a7375e6b1a6fff" translate="yes" xml:space="preserve">
          <source>Behaviors are instances of &lt;a href=&quot;yii-base-behavior&quot;&gt;yii\base\Behavior&lt;/a&gt;, or of a child class. Behaviors, also known as &lt;a href=&quot;http://en.wikipedia.org/wiki/Mixin&quot;&gt;mixins&lt;/a&gt;, allow you to enhance the functionality of an existing &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; class without needing to change the class's inheritance. Attaching a behavior to a component &quot;injects&quot; the behavior's methods and properties into the component, making those methods and properties accessible as if they were defined in the component class itself. Moreover, a behavior can respond to the &lt;a href=&quot;guide-concept-events&quot;&gt;events&lt;/a&gt; triggered by the component, which allows behaviors to also customize the normal code execution of the component.</source>
          <target state="translated">동작은 &lt;a href=&quot;yii-base-behavior&quot;&gt;yii \ base \ Behavior&lt;/a&gt; 또는 자식 클래스의 인스턴스입니다 . &lt;a href=&quot;http://en.wikipedia.org/wiki/Mixin&quot;&gt;mixins&lt;/a&gt; 라고도하는 동작 을 사용하면 클래스의 상속을 변경하지 않고도 기존 &lt;a href=&quot;yii-base-component&quot;&gt;구성 요소&lt;/a&gt; 클래스 의 기능을 향상시킬 수 있습니다 . 구성 요소에 동작을 연결하면 동작의 메서드와 속성을 구성 요소에 &quot;주입&quot;하여 해당 메서드와 속성을 구성 요소 클래스 자체에 정의 된 것처럼 액세스 할 수 있습니다. 또한 비헤이비어는 구성 요소에 의해 트리거 된 &lt;a href=&quot;guide-concept-events&quot;&gt;이벤트&lt;/a&gt; 에 응답 할 수 있으므로 비헤이비어가 구성 요소의 정상적인 코드 실행을 사용자 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="804140ef0fa047de61b4eaa89982c162514ad4cc" translate="yes" xml:space="preserve">
          <source>Behaviors are instances of &lt;a href=&quot;yii-base-behavior&quot;&gt;yii\base\Behavior&lt;/a&gt;, or of a child class. Behaviors, also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Mixin&quot;&gt;mixins&lt;/a&gt;, allow you to enhance the functionality of an existing &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; class without needing to change the class's inheritance. Attaching a behavior to a component &quot;injects&quot; the behavior's methods and properties into the component, making those methods and properties accessible as if they were defined in the component class itself. Moreover, a behavior can respond to the &lt;a href=&quot;guide-concept-events&quot;&gt;events&lt;/a&gt; triggered by the component, which allows behaviors to also customize the normal code execution of the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d3de1a4372ca69ff9f876f056b006d22aa5837" translate="yes" xml:space="preserve">
          <source>Behaviors can be attached and detached to a component dynamically without requiring modification of the component class. To use a trait, you must modify the code of the class using it.</source>
          <target state="translated">컴포넌트 클래스를 수정하지 않고도 컴포넌트에 동적으로 동작을 첨부하거나 분리 할 수 ​​있습니다. 특성을 사용하려면이를 사용하여 클래스의 코드를 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a54dddc2b5e4525eedbc1b338cd525f1eb5e596b" translate="yes" xml:space="preserve">
          <source>Behaviors can customize the code execution of a component by responding to its events.</source>
          <target state="translated">동작은 이벤트에 응답하여 구성 요소의 코드 실행을 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80ff3ff60f2728f23284dab06fd494771bf4e723" translate="yes" xml:space="preserve">
          <source>Behaviors declared in this method will be attached to the component automatically (on demand).</source>
          <target state="translated">이 방법으로 선언 된 동작은 요청시 구성 요소에 자동으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="09fdf16da13f87d391115a4ba0b0badfb2e07ff8" translate="yes" xml:space="preserve">
          <source>Behind the scene, &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; will read the validation rules declared in the model and generate appropriate JavaScript code for validators that support client-side validation. When a user changes the value of an input field or submit the form, the client-side validation JavaScript will be triggered.</source>
          <target state="translated">뒤에서 &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm&lt;/a&gt; 은 모델에 선언 된 유효성 검사 규칙을 읽고 클라이언트 쪽 유효성 검사를 지원하는 유효성 검사기에 적합한 JavaScript 코드를 생성합니다. 사용자가 입력 필드의 값을 변경하거나 양식을 제출하면 클라이언트 측 유효성 검사 JavaScript가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="6c64c783443c8049ce1c834958eec695222b1cce" translate="yes" xml:space="preserve">
          <source>Behind the scene, before a RESTful API controller action is executed, the &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii\filters\ContentNegotiator&lt;/a&gt; filter will check the &lt;code&gt;Accept&lt;/code&gt; HTTP header in the request and set the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;response format&lt;/a&gt; to be &lt;code&gt;'json'&lt;/code&gt;. After the action is executed and returns the resulting resource object or collection, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; will convert the result into an array. And finally, &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii\web\JsonResponseFormatter&lt;/a&gt; will serialize the array into a JSON string and include it in the response body.</source>
          <target state="translated">씬 뒤에서 RESTful API 컨트롤러 조치가 실행되기 전에 &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii \ filters \ ContentNegotiator&lt;/a&gt; 필터는 요청에서 &lt;code&gt;Accept&lt;/code&gt; HTTP 헤더를 확인 하고 &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;응답 형식&lt;/a&gt; 을 &lt;code&gt;'json'&lt;/code&gt; 으로 설정합니다 . 조치가 실행되고 결과 자원 오브젝트 또는 콜렉션을 리턴하면 &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii \ rest \ Serializer&lt;/a&gt; 는 결과를 배열로 변환합니다. 마지막으로 &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii \ web \ JsonResponseFormatter&lt;/a&gt; 는 배열을 JSON 문자열로 직렬화하여 응답 본문에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="202996e9ee577a289b3d1ce78800eccf592634f8" translate="yes" xml:space="preserve">
          <source>Behind the scene, the DI container does much more work than just creating a new object. The container will first inspect the class constructor to find out dependent class or interface names and then automatically resolve those dependencies recursively.</source>
          <target state="translated">뒤에서 DI 컨테이너는 단순히 새 객체를 만드는 것보다 훨씬 많은 작업을 수행합니다. 컨테이너는 먼저 클래스 생성자를 검사하여 종속 클래스 또는 인터페이스 이름을 찾은 다음 해당 종속성을 재귀 적으로 자동으로 해결합니다.</target>
        </trans-unit>
        <trans-unit id="28901dcfc2c4de7933df3176a509c10a87f7bac2" translate="yes" xml:space="preserve">
          <source>Being a regular PHP class asset bundle can bear some extra logic related to it and may adjust its internal parameters dynamically. For example: you may use some sophisticated JavaScript library, which provides some internationalization packed in separated source files: each per each supported language. Thus you will need to add particular '.js' file to your page in order to make library translation work. This can be achieved overriding &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii\web\AssetBundle::init()&lt;/a&gt; method:</source>
          <target state="translated">일반적인 PHP 클래스 자산 번들은 이와 관련된 추가 로직을 보유하고 내부 매개 변수를 동적으로 조정할 수 있습니다. 예를 들어, 정교한 JavaScript 라이브러리를 사용할 수 있습니다.이 라이브러리는 지원되는 각 언어마다 개별 소스 파일로 압축 된 일부 국제화를 제공합니다. 따라서 라이브러리 번역이 작동하려면 특정 '.js'파일을 페이지에 추가해야합니다. 이것은 &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii \ web \ AssetBundle :: init ()&lt;/a&gt; 메소드를 대체하여 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1361bf42bf8100e7707fc4b7cc0aa034658099c6" translate="yes" xml:space="preserve">
          <source>Being populated by query results &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; performs automatic typecast for its attribute values, using information from &lt;a href=&quot;guide-db-dao#database-schema&quot;&gt;database table schema&lt;/a&gt;. This allows data retrieved from table column declared as integer to be populated in ActiveRecord instance with PHP integer, boolean with boolean and so on. However, typecasting mechanism has several limitations:</source>
          <target state="translated">쿼리 결과로 채워지는 &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt; 는 &lt;a href=&quot;guide-db-dao#database-schema&quot;&gt;데이터베이스 테이블 스키마의&lt;/a&gt; 정보를 사용하여 속성 값에 대해 자동 유형 변환을 수행합니다 . 이를 통해 정수로 선언 된 테이블 열에서 검색된 데이터를 ActiveRecord 인스턴스에서 PHP 정수로, 부울로 부울 등을 채울 수 있습니다. 그러나 형식 캐스팅 메커니즘에는 몇 가지 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e0c0c1e7675c049dc953cf3ccae38ca1df94fa9" translate="yes" xml:space="preserve">
          <source>Below are some common usages of this command:</source>
          <target state="translated">다음은이 명령의 일반적인 사용법입니다.</target>
        </trans-unit>
        <trans-unit id="1dd172103223f61f7631b02fb8d576484648d0a8" translate="yes" xml:space="preserve">
          <source>Below are some examples of using this method:</source>
          <target state="translated">다음은이 방법을 사용하는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="56e4cfa1166ebefaad30cf26945e71483c2c1283" translate="yes" xml:space="preserve">
          <source>Below are some examples showing how to use Active Query to query data:</source>
          <target state="translated">다음은 Active Query를 사용하여 데이터를 쿼리하는 방법을 보여주는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="1dd6d0e4c96ee178dec190fc1f5650780670c1c1" translate="yes" xml:space="preserve">
          <source>Below are some examples:</source>
          <target state="translated">다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="f3cac87a4fb2d6726928b2bf44c115a2f2f44e7c" translate="yes" xml:space="preserve">
          <source>Below are some usage examples,</source>
          <target state="translated">다음은 몇 가지 사용 예입니다.</target>
        </trans-unit>
        <trans-unit id="b347e2c55ac996616fa8cb09db1739dfc3853f85" translate="yes" xml:space="preserve">
          <source>Below are some usage examples:</source>
          <target state="translated">다음은 몇 가지 사용 예입니다.</target>
        </trans-unit>
        <trans-unit id="8a808de5ca5c38204dd098f7b6ebc50607fe39a3" translate="yes" xml:space="preserve">
          <source>Below are the basic steps you may follow to create an extension as a Composer package.</source>
          <target state="translated">다음은 Composer 패키지로 확장을 작성하기 위해 수행 할 수있는 기본 단계입니다.</target>
        </trans-unit>
        <trans-unit id="288b2d89a324ba4a9d927cf9c44f5eeb1e7919d4" translate="yes" xml:space="preserve">
          <source>Below is a summary of the available cache dependencies:</source>
          <target state="translated">다음은 사용 가능한 캐시 종속성에 대한 요약입니다.</target>
        </trans-unit>
        <trans-unit id="e8f5d807e092f978ba7d687cc583eb868df54ec2" translate="yes" xml:space="preserve">
          <source>Below is a variant of &lt;code&gt;HelloWidget&lt;/code&gt; which takes the content enclosed within the &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt; calls, HTML-encodes it and then displays it.</source>
          <target state="translated">다음은 &lt;code&gt;begin()&lt;/code&gt; 및 &lt;code&gt;end()&lt;/code&gt; 호출로 묶인 내용을 가져 와서 HTML로 인코딩 한 다음 표시하는 &lt;code&gt;HelloWidget&lt;/code&gt; 의 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="4a9ed104286cf1a327ccbc7033c42cb67020310e" translate="yes" xml:space="preserve">
          <source>Below is an example of a data provider that reads CSV data efficiently:</source>
          <target state="translated">다음은 CSV 데이터를 효율적으로 읽는 데이터 공급자의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7662644db5a92bb033265992ed664aee29de259b" translate="yes" xml:space="preserve">
          <source>Below is an example of how you could use the above validator class within your model.</source>
          <target state="translated">아래는 모델 내에서 위의 유효성 검사기 클래스를 사용하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="f3877074d1dbfd4d7cacef2613fbda57ae7c625e" translate="yes" xml:space="preserve">
          <source>Below is an example of using Container:</source>
          <target state="translated">아래는 컨테이너를 사용하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="fcf0c4c83669641c3d0634fb9d467d6bec73e0c2" translate="yes" xml:space="preserve">
          <source>Below is an example showing a configuration with initial property values, event handlers, and behaviors:</source>
          <target state="translated">다음은 초기 특성 값, 이벤트 핸들러 및 동작이있는 구성을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="5aea25b4fa49af115ec8d171a39191512a52975f" translate="yes" xml:space="preserve">
          <source>Below is an example showing how to make use of the &lt;code&gt;matchCallback&lt;/code&gt; option, which allows you to write arbitrary access check logic:</source>
          <target state="translated">다음은 &lt;code&gt;matchCallback&lt;/code&gt; 옵션 을 사용하는 방법을 보여주는 예입니다. 이를 통해 임의 액세스 확인 논리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87ac5f1d823e1b3695168c9fb11b97231c9aada6" translate="yes" xml:space="preserve">
          <source>Below is an example showing some typical usage of ActiveRecord:</source>
          <target state="translated">다음은 ActiveRecord의 일반적인 사용법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="3a70d04c1ef62c14933cff1c5df6d13ef6a06dc8" translate="yes" xml:space="preserve">
          <source>Below is an example:</source>
          <target state="translated">아래는 예입니다.</target>
        </trans-unit>
        <trans-unit id="9bf8b3832997209243e02211047b12f15517b93e" translate="yes" xml:space="preserve">
          <source>Below is the list of all these database accessing methods:</source>
          <target state="translated">다음은 이러한 모든 데이터베이스 액세스 방법 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a106c6ba2f89aac0c36e518ea900fe1e4ca75faa" translate="yes" xml:space="preserve">
          <source>Below is the list of the predefined core application components. You may configure and customize them like you do with normal application components. When you are configuring a core application component, if you do not specify its class, the default one will be used.</source>
          <target state="translated">아래는 사전 정의 된 핵심 애플리케이션 구성 요소의 목록입니다. 일반적인 응용 프로그램 구성 요소와 마찬가지로 구성 및 사용자 정의 할 수 있습니다. 핵심 응용 프로그램 구성 요소를 구성 할 때 해당 클래스를 지정하지 않으면 기본 구성 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3f344dd80165d206dafc90ed37837ef04bb54a0f" translate="yes" xml:space="preserve">
          <source>Below we'll review common security principles and describe how to avoid threats when developing applications using Yii. Most of these priciples are not unique to Yii alone but apply to website or software development in general, so we you will also find links for further reading on the general ideas behind these.</source>
          <target state="translated">아래에서는 일반적인 보안 원칙을 검토하고 Yii를 사용하여 응용 프로그램을 개발할 때 위협을 피하는 방법을 설명합니다. 이러한 원칙의 대부분은 Yii에만 해당되는 것이 아니라 일반적으로 웹 사이트 또는 소프트웨어 개발에 적용되므로 이러한 기본 개념에 대한 추가 정보를 얻을 수있는 링크도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="10ebb3efe69e50a44f9917020d1e2f6967e2c0c2" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt;, the first argument can accept routes, parameters and URLs, in the same way &lt;a href=&quot;guide-helper-url&quot;&gt;Url::to()&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;guide-concept-aliases&quot;&gt;aliases&lt;/a&gt; 외에도 첫 번째 인수는 &lt;a href=&quot;guide-helper-url&quot;&gt;Url :: to ()&lt;/a&gt; 와 같은 방식으로 경로, 매개 변수 및 URL을 허용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47b251c2af4b639de8852e330be5aee6b301833e" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;$this&lt;/code&gt;, there may be other predefined variables in a view, such as &lt;code&gt;$model&lt;/code&gt; in the above example. These variables represent the data that are &lt;em&gt;pushed&lt;/em&gt; into the view by &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt; or other objects which trigger the &lt;a href=&quot;#rendering-views&quot;&gt;view rendering&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; 외에 , 위의 예에서 &lt;code&gt;$model&lt;/code&gt; 과 같은 뷰에 다른 사전 정의 된 변수가있을 수 있습니다 . 이러한 변수는 &lt;a href=&quot;guide-structure-controllers&quot;&gt;컨트롤러&lt;/a&gt; 또는 &lt;a href=&quot;#rendering-views&quot;&gt;뷰 렌더링&lt;/a&gt; 을 트리거하는 다른 객체에 의해 뷰로 &lt;em&gt;푸시&lt;/em&gt; 되는 데이터를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d3001f4efa27f7015640f43a8485665f608e9cd6" translate="yes" xml:space="preserve">
          <source>Besides changing the database schema, you can also retrieve the definition information about a table through the &lt;a href=&quot;yii-db-connection#getTableSchema()-detail&quot;&gt;getTableSchema()&lt;/a&gt; method of a DB connection. For example,</source>
          <target state="translated">데이터베이스 스키마를 변경하는 것 외에도 DB 연결 의 &lt;a href=&quot;yii-db-connection#getTableSchema()-detail&quot;&gt;getTableSchema ()&lt;/a&gt; 메소드를 통해 테이블에 대한 정의 정보를 검색 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="f68e6dcaf1bb0ef1216ba02096ee58d634fb799a" translate="yes" xml:space="preserve">
          <source>Besides column names, you can also select DB expressions. You must use the array format when selecting a DB expression that contains commas to avoid incorrect automatic name quoting. For example,</source>
          <target state="translated">열 이름 외에도 DB 표현식을 선택할 수도 있습니다. 잘못된 자동 이름 인용을 피하려면 쉼표가 포함 된 DB 표현식을 선택할 때 배열 형식을 사용해야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="9673da95ff34534c0fe0419155745c72d7e876d9" translate="yes" xml:space="preserve">
          <source>Besides controllers, you can also declare filters in a &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt; or &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;. When you do so, the filters will be applied to &lt;em&gt;all&lt;/em&gt; controller actions belonging to that module or application, unless you configure the filters' &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;only&lt;/a&gt; and &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;except&lt;/a&gt; properties like described above.</source>
          <target state="translated">컨트롤러 외에도 &lt;a href=&quot;guide-structure-modules&quot;&gt;모듈&lt;/a&gt; 이나 &lt;a href=&quot;guide-structure-applications&quot;&gt;응용 프로그램&lt;/a&gt; 에서 필터를 선언 할 수도 있습니다 . 이렇게하면 필터가 적용됩니다 &lt;em&gt;모든&lt;/em&gt; 당신이 필터 '구성하지 않는 한, 해당 모듈 또는 응용 프로그램에 속하는 컨트롤러 액션 &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;에만&lt;/a&gt; 및 &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;제외&lt;/a&gt; 속성을 설명한 좋아합니다.</target>
        </trans-unit>
        <trans-unit id="a2c6c2cae842ed35356035e87cf8e4911e0bb451" translate="yes" xml:space="preserve">
          <source>Besides date/time and number formats, Yii also supports other commonly used formats, including</source>
          <target state="translated">날짜 / 시간 및 숫자 형식 외에도 Yii는 일반적으로 사용되는 다른 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ef7720106d812656221c4a8d9bfc472f18581d3c" translate="yes" xml:space="preserve">
          <source>Besides declaring URL rules as pattern-route pairs, you may also declare them as configuration arrays. Each configuration array is used to configure a single URL rule object. This is often needed when you want to configure other properties of a URL rule. For example,</source>
          <target state="translated">URL 규칙을 패턴 라우트 쌍으로 선언하는 것 외에도 구성 배열로 선언 할 수도 있습니다. 각 구성 배열은 단일 URL 규칙 객체를 구성하는 데 사용됩니다. URL 규칙의 다른 속성을 구성하려는 경우에 종종 필요합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="80825cc82bc1a5a8fa86636b94bb92e1649bdc21" translate="yes" xml:space="preserve">
          <source>Besides expiration setting, cached data item may also be invalidated by changes of the so-called &lt;em&gt;cache dependencies&lt;/em&gt;. For example, &lt;a href=&quot;yii-caching-filedependency&quot;&gt;yii\caching\FileDependency&lt;/a&gt; represents the dependency of a file's modification time. When this dependency changes, it means the corresponding file is modified. As a result, any outdated file content found in the cache should be invalidated and the &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt; call should return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">만료 설정 외에도 캐시 된 데이터 항목은 소위 &lt;em&gt;캐시 종속성의&lt;/em&gt; 변경으로 인해 무효화 될 수 있습니다 . 예를 들어, &lt;a href=&quot;yii-caching-filedependency&quot;&gt;yii \ caching \ FileDependency&lt;/a&gt; 는 파일 수정 시간의 종속성을 나타냅니다. 이 종속성이 변경되면 해당 파일이 수정되었음을 의미합니다. 결과적으로, 캐시에서 발견 된 오래된 파일 내용은 무효화되고 &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get ()&lt;/a&gt; 호출은 &lt;code&gt;false&lt;/code&gt; 를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e22874e07ded165a1bf20b12d3347b955478256c" translate="yes" xml:space="preserve">
          <source>Besides joining with tables, you can also join with sub-queries. To do so, specify the sub-queries to be joined as &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; objects. For example,</source>
          <target state="translated">테이블과의 조인 외에도 하위 쿼리와 조인 할 수도 있습니다. 이렇게하려면 &lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt; 객체 로 결합 할 하위 쿼리를 지정하십시오 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="5b7eb421d247812d92b1efc90ddff791ea5fab56" translate="yes" xml:space="preserve">
          <source>Besides message prefixes, log targets also append some context information to each batch of log messages. By default, the values of these global PHP variables are included: &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_FILES&lt;/code&gt;, &lt;code&gt;$_COOKIE&lt;/code&gt;, &lt;code&gt;$_SESSION&lt;/code&gt; and &lt;code&gt;$_SERVER&lt;/code&gt;. You may adjust this behavior by configuring the &lt;a href=&quot;yii-log-target#%24logVars-detail&quot;&gt;yii\log\Target::$logVars&lt;/a&gt; property with the names of the global variables that you want to include by the log target. For example, the following log target configuration specifies that only the value of the &lt;code&gt;$_SERVER&lt;/code&gt; variable will be appended to the log messages.</source>
          <target state="translated">메시지 접두사 외에도 로그 대상은 각 로그 메시지 배치에 일부 컨텍스트 정보를 추가합니다. 기본적으로 이러한 전역 PHP 변수의 값은 &lt;code&gt;$_GET&lt;/code&gt; , &lt;code&gt;$_POST&lt;/code&gt; , &lt;code&gt;$_FILES&lt;/code&gt; , &lt;code&gt;$_COOKIE&lt;/code&gt; , &lt;code&gt;$_SESSION&lt;/code&gt; 및 &lt;code&gt;$_SERVER&lt;/code&gt; 입니다. &lt;a href=&quot;yii-log-target#%24logVars-detail&quot;&gt;yii \ log \ Target :: $ logVars&lt;/a&gt; 특성을 로그 대상에 포함시키려는 글로벌 변수의 이름 으로 구성하여이 동작을 조정할 수 있습니다 . 예를 들어, 다음 로그 대상 구성은 &lt;code&gt;$_SERVER&lt;/code&gt; 변수 의 값만 로그 메시지에 추가되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cef05981ac7f7278b16c5175807922e2fa9ec0bf" translate="yes" xml:space="preserve">
          <source>Besides options, a command can also receive arguments. The arguments will be passed as the parameters to the action method corresponding to the requested sub-command. The first argument corresponds to the first parameter, the second corresponds to the second, and so on. If not enough arguments are provided when the command is called, the corresponding parameters will take the declared default values, if defined. If no default value is set, and no value is provided at runtime, the command will exit with an error.</source>
          <target state="translated">옵션 외에도 명령은 인수를받을 수도 있습니다. 인수는 요청 된 부속 명령에 해당하는 조치 메소드에 매개 변수로 전달됩니다. 첫 번째 인수는 첫 번째 매개 변수에 해당하고 두 번째 인수는 두 번째 매개 변수에 해당합니다. 명령이 호출 될 때 충분한 인수가 제공되지 않으면 해당 매개 변수는 정의 된 경우 선언 된 기본값을 사용합니다. 기본값이 설정되어 있지 않고 런타임시 값이 제공되지 않으면 명령이 오류와 함께 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="e48715009122104765e94011922dd6c9f98de78a" translate="yes" xml:space="preserve">
          <source>Besides server-side caching that we have described in the previous sections, Web applications may also exploit client-side caching to save the time for generating and transmitting the same page content.</source>
          <target state="translated">이전 섹션에서 설명한 서버 쪽 캐싱 외에도 웹 응용 프로그램은 클라이언트 쪽 캐싱을 활용하여 동일한 페이지 콘텐츠를 생성하고 전송하는 시간을 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0996ed1fa8a37125f1ea1463fb67951d26080c1b" translate="yes" xml:space="preserve">
          <source>Besides storing the messages in PHP files, you may also use the following message sources to store translated messages in different storage:</source>
          <target state="translated">PHP 파일에 메시지를 저장하는 것 외에도 다음 메시지 소스를 사용하여 번역 된 메시지를 다른 저장소에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="add0cbe70593e77ef45b75876364a6d72b0e5623" translate="yes" xml:space="preserve">
          <source>Besides table names, you can also select from sub-queries by specifying them in terms of &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; objects. For example,</source>
          <target state="translated">테이블 이름 외에도 &lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt; 객체로 하위 쿼리를 지정하여 하위 쿼리에서 선택할 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="d0f06072b572598dc8c2d80a85ce3994684d53b4" translate="yes" xml:space="preserve">
          <source>Besides the &lt;a href=&quot;yii-db-connection#%24dsn-detail&quot;&gt;dsn&lt;/a&gt; property, you often need to configure &lt;a href=&quot;yii-db-connection#%24username-detail&quot;&gt;username&lt;/a&gt; and &lt;a href=&quot;yii-db-connection#%24password-detail&quot;&gt;password&lt;/a&gt;. Please refer to &lt;a href=&quot;yii-db-connection&quot;&gt;yii\db\Connection&lt;/a&gt; for the full list of configurable properties.</source>
          <target state="translated">&lt;a href=&quot;yii-db-connection#%24dsn-detail&quot;&gt;dsn&lt;/a&gt; 속성 외에도 종종 &lt;a href=&quot;yii-db-connection#%24username-detail&quot;&gt;username&lt;/a&gt; 과 &lt;a href=&quot;yii-db-connection#%24password-detail&quot;&gt;password&lt;/a&gt; 를 구성해야 합니다 . 구성 가능한 전체 속성 목록은 &lt;a href=&quot;yii-db-connection&quot;&gt;yii \ db \ Connection&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f2ff4d476c52d37dbd5de4cfadf57e68306c310" translate="yes" xml:space="preserve">
          <source>Besides the &lt;a href=&quot;yii-web-cookie#%24name-detail&quot;&gt;name&lt;/a&gt;, &lt;a href=&quot;yii-web-cookie#%24value-detail&quot;&gt;value&lt;/a&gt; properties shown in the above examples, the &lt;a href=&quot;yii-web-cookie&quot;&gt;yii\web\Cookie&lt;/a&gt; class also defines other properties to fully represent all available cookie information, such as &lt;a href=&quot;yii-web-cookie#%24domain-detail&quot;&gt;domain&lt;/a&gt;, &lt;a href=&quot;yii-web-cookie#%24expire-detail&quot;&gt;expire&lt;/a&gt;. You may configure these properties as needed to prepare a cookie and then add it to the response's cookie collection.</source>
          <target state="translated">&lt;a href=&quot;yii-web-cookie&quot;&gt;yii \ web \ Cookie&lt;/a&gt; 클래스는 &lt;a href=&quot;yii-web-cookie#%24name-detail&quot;&gt;name&lt;/a&gt; , 위의 예제에 표시된 &lt;a href=&quot;yii-web-cookie#%24value-detail&quot;&gt;값&lt;/a&gt; 속성 외에도 &lt;a href=&quot;yii-web-cookie#%24domain-detail&quot;&gt;domain&lt;/a&gt; , &lt;a href=&quot;yii-web-cookie#%24expire-detail&quot;&gt;expire&lt;/a&gt; 와 같은 사용 가능한 모든 쿠키 정보를 완전히 나타내는 다른 속성도 정의합니다 . 쿠키를 준비하고 응답의 쿠키 모음에 추가하기 위해 필요에 따라 이러한 속성을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c95e1177d2766726daa95a48474cbcbff4058fe9" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;to()&lt;/code&gt; method, the &lt;a href=&quot;yii-helpers-url&quot;&gt;yii\helpers\Url&lt;/a&gt; helper class also provides several other convenient URL creation methods. For example,</source>
          <target state="translated">&lt;code&gt;to()&lt;/code&gt; 메소드 외에도 &lt;a href=&quot;yii-helpers-url&quot;&gt;yii \ helpers \ Url&lt;/a&gt; 헬퍼 클래스는 몇 가지 편리한 URL 작성 메소드를 제공합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="638587f75daf0b35d5c0b0cea1a6b0ea7d97929a" translate="yes" xml:space="preserve">
          <source>Besides the application object, each module object is also a service locator.</source>
          <target state="translated">응용 프로그램 객체 외에도 각 모듈 객체는 서비스 로케이터입니다.</target>
        </trans-unit>
        <trans-unit id="16e2a007ac0e9eaf2ccf637e1d4fa812e34aa6fb" translate="yes" xml:space="preserve">
          <source>Besides the property feature, Object also introduces an important object initialization life cycle. In particular, creating an new instance of Object or its derived class will involve the following life cycles sequentially:</source>
          <target state="translated">속성 기능 외에도 Object에는 중요한 개체 초기화 수명주기가 도입되었습니다. 특히 Object의 새 인스턴스 또는 파생 클래스를 만들려면 다음 수명주기가 순차적으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e80de66f8bba1d5dcd11381ade175b7a1e1aa221" translate="yes" xml:space="preserve">
          <source>Besides the rich features for building web applications, Yii also has full-featured support for console applications which are mainly used to create background and maintenance tasks that need to be performed for a website.</source>
          <target state="translated">웹 응용 프로그램 구축을위한 다양한 기능 외에도 Yii에는 웹 사이트에 대해 수행해야하는 백그라운드 및 유지 관리 작업을 생성하는 데 주로 사용되는 콘솔 응용 프로그램을 완벽하게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d68c59dccf52ad6ca1468a0c16e79bfc2fc42b3e" translate="yes" xml:space="preserve">
          <source>Besides using &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii\web\ErrorAction&lt;/a&gt;, you may also define the &lt;code&gt;error&lt;/code&gt; action using an action method like the following,</source>
          <target state="translated">&lt;a href=&quot;yii-web-erroraction&quot;&gt;yii \ web \ ErrorAction&lt;/a&gt; 외에도 다음과 같은 액션 메소드를 사용하여 &lt;code&gt;error&lt;/code&gt; 액션을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e86259cd224d74f14f5aef8f91bf0f4591161cef" translate="yes" xml:space="preserve">
          <source>Besides using query building methods, you can also write raw SQLs to query data and populate the results into Active Record objects. You can do so by calling the &lt;a href=&quot;yii-db-activerecord#findBySql()-detail&quot;&gt;yii\db\ActiveRecord::findBySql()&lt;/a&gt; method:</source>
          <target state="translated">쿼리 작성 방법을 사용하는 것 외에도 원시 SQL을 작성하여 데이터를 쿼리하고 결과를 Active Record 개체에 채울 수 있습니다. &lt;a href=&quot;yii-db-activerecord#findBySql()-detail&quot;&gt;yii \ db \ ActiveRecord :: findBySql ()&lt;/a&gt; 메소드 를 호출하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bb2a9f31c96072730cad5bb49422fb70b5016de" translate="yes" xml:space="preserve">
          <source>Besides using the &lt;a href=&quot;guide-tutorial-core-validators&quot;&gt;core validators&lt;/a&gt; included in the Yii releases, you may also create your own validators. You may create inline validators or standalone validators.</source>
          <target state="translated">Yii 릴리스에 포함 된 &lt;a href=&quot;guide-tutorial-core-validators&quot;&gt;핵심 유효성 검사기를&lt;/a&gt; 사용하는 것 외에도 자체 유효성 검사기를 만들 수도 있습니다. 인라인 유효성 검사기 또는 독립형 유효성 검사기를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e0e5642336aca269577103d6de3feb1c7bfede" translate="yes" xml:space="preserve">
          <source>Besides using the above constants to specify isolation levels, you may also use strings with a valid syntax supported by the DBMS that you are using. For example, in PostgreSQL, you may use &lt;code&gt;&quot;SERIALIZABLE READ ONLY DEFERRABLE&quot;&lt;/code&gt;.</source>
          <target state="translated">위의 상수를 사용하여 분리 레벨을 지정하는 것 외에도 사용중인 DBMS가 지원하는 유효한 구문으로 문자열을 사용할 수도 있습니다. 예를 들어 PostgreSQL에서 &lt;code&gt;&quot;SERIALIZABLE READ ONLY DEFERRABLE&quot;&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f237acf669ac104282f9b67338122056a7cf509" translate="yes" xml:space="preserve">
          <source>Besides whitelisting the categories by the &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; property, you may also blacklist certain categories by the &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;except&lt;/a&gt; property. If the category of a message is found or matches one of the patterns in this property, it will NOT be processed by the target.</source>
          <target state="translated">&lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; 속성으로 범주를 허용 목록에 추가하는 것 외에 &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;except&lt;/a&gt; 속성으로 특정 범주를 차단 목록에 추가 할 수도 있습니다 . 메시지의 카테고리를 찾거나이 특성의 패턴 중 하나와 일치하면 대상에서 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="422b09d13b8460fedd2eb9919ee9e1bb73f6279d" translate="yes" xml:space="preserve">
          <source>Besides working with individual database tables, Active Record is also capable of bringing together related data, making them readily accessible through the primary data. For example, the customer data is related with the order data because one customer may have placed one or multiple orders. With appropriate declaration of this relation, you'll be able to access a customer's order information using the expression &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; which gives back the customer's order information in terms of an array of &lt;code&gt;Order&lt;/code&gt; Active Record instances.</source>
          <target state="translated">Active Record는 개별 데이터베이스 테이블 작업 외에도 관련 데이터를 모아서 기본 데이터를 통해 쉽게 액세스 할 수 있습니다. 예를 들어 한 고객이 하나 또는 여러 개의 주문을했을 수 있으므로 고객 데이터는 주문 데이터와 관련이 있습니다. 이 관계를 적절하게 선언하면 &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; 표현식을 사용하여 고객의 주문 정보에 액세스 할 수 있으며, 이는 &lt;code&gt;Order&lt;/code&gt; 레코드 배열의 관점에서 고객의 주문 정보를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="62b9f8f158e44e783a66a8977e0530a1ba9aa62f" translate="yes" xml:space="preserve">
          <source>Besides, DbFixture also attempts to load an &lt;a href=&quot;yii-test-initdbfixture#%24initScript-detail&quot;&gt;initialization script&lt;/a&gt; if it exists.</source>
          <target state="translated">또한 DbFixture는 &lt;a href=&quot;yii-test-initdbfixture#%24initScript-detail&quot;&gt;초기화 스크립트가있는&lt;/a&gt; 경우이를 로드하려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="translated">모범 사례</target>
        </trans-unit>
        <trans-unit id="f544950bc48d68bba95102c6651d7c3517997b0e" translate="yes" xml:space="preserve">
          <source>Beware, by definition cache storage are volatile, which means the data stored on them may be swapped out and get lost. Therefore, you must make sure the cache used by this component is NOT volatile. If you want to use database as storage medium, &lt;a href=&quot;yii-web-dbsession&quot;&gt;yii\web\DbSession&lt;/a&gt; is a better choice.</source>
          <target state="translated">정의에 따라 캐시 스토리지는 휘발성이기 때문에 캐시 스토리지에 저장된 데이터가 스왑 아웃되고 손실 될 수 있습니다. 따라서이 구성 요소가 사용하는 캐시가 휘발성이 아닌지 확인해야합니다. 데이터베이스를 저장 매체로 사용하려면 &lt;a href=&quot;yii-web-dbsession&quot;&gt;yii \ web \ DbSession&lt;/a&gt; 이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a21d63f12ceba11e172dca53451f9c2b900fefb8" translate="yes" xml:space="preserve">
          <source>Binary and multibyte safe.</source>
          <target state="translated">이진 및 멀티 바이트 안전.</target>
        </trans-unit>
        <trans-unit id="ad850feacd36c5ed5be83930741c224540df1b64" translate="yes" xml:space="preserve">
          <source>Binary content.</source>
          <target state="translated">이진 컨텐츠.</target>
        </trans-unit>
        <trans-unit id="f1ed619833b5735f10850a0688d39c09d752fc1f" translate="yes" xml:space="preserve">
          <source>Bind parameters (optional);</source>
          <target state="translated">바인드 매개 변수 (선택 사항);</target>
        </trans-unit>
        <trans-unit id="7a27fbd94f7d4e90709e4c6b3d04114c2a4beaa7" translate="yes" xml:space="preserve">
          <source>Binding Parameters</source>
          <target state="translated">바인딩 매개 변수</target>
        </trans-unit>
        <trans-unit id="ac02601a98007cf5ea65eaf642e805836e90383b" translate="yes" xml:space="preserve">
          <source>Binds a column to a PHP variable.</source>
          <target state="translated">열을 PHP 변수에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="4865a93ce7f9da342ee5dcf97645ae145ebba00f" translate="yes" xml:space="preserve">
          <source>Binds a list of values to the corresponding parameters.</source>
          <target state="translated">값 목록을 해당 매개 변수에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="d4bf41b2d8dfb5e8238113577db7acbe1e567e4f" translate="yes" xml:space="preserve">
          <source>Binds a parameter to the SQL statement to be executed.</source>
          <target state="translated">실행할 SQL 문에 매개 변수를 바인드합니다.</target>
        </trans-unit>
        <trans-unit id="efb5ece9f44635f99d5ea8df5a426612011b8124" translate="yes" xml:space="preserve">
          <source>Binds a value to a parameter.</source>
          <target state="translated">값을 매개 변수에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="1fff03a3cb6cdbd50024cc9fbd1fcf34a1bb598f" translate="yes" xml:space="preserve">
          <source>Binds pending parameters that were registered via &lt;a href=&quot;yii-db-command#bindValue()-detail&quot;&gt;bindValue()&lt;/a&gt; and &lt;a href=&quot;yii-db-command#bindValues()-detail&quot;&gt;bindValues()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-db-command#bindValue()-detail&quot;&gt;bindValue ()&lt;/a&gt; 및 &lt;a href=&quot;yii-db-command#bindValues()-detail&quot;&gt;bindValues ​​()&lt;/a&gt; 를 통해 등록 된 보류중인 매개 변수를 바인드 합니다.</target>
        </trans-unit>
        <trans-unit id="41af47b4c6e747587083c3334ea860296d01dbd1" translate="yes" xml:space="preserve">
          <source>Binds the parameters to the action.</source>
          <target state="translated">매개 변수를 조치에 바인드합니다.</target>
        </trans-unit>
        <trans-unit id="91f335ab9f8e6de6bcafdb48e3cb87af640a8c7c" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags passed to &lt;a href=&quot;http://php.net/manual/en/function.stream-socket-client.php&quot;&gt;stream_socket_client()&lt;/a&gt;. Currently the select of connection flags is limited to &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; (default), &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; and &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.stream-socket-client.php&quot;&gt;stream_socket_client ()에&lt;/a&gt; 전달 된 연결 플래그의 조합으로 설정할 수있는 비트 마스크 필드입니다 . 현재 연결 플래그 선택은 &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; (기본값), &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; 및 &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt; 로 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a99f7e011983e6dea2add161b0c2065bd1f9fab" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags passed to &lt;a href=&quot;https://php.net/manual/en/function.stream-socket-client.php&quot;&gt;stream_socket_client()&lt;/a&gt;. Currently the select of connection flags is limited to &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; (default), &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; and &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b206fdfe175f6f5bfedcbd232154bd6b11cca11b" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags passed to [stream_socket_client()](&lt;a href=&quot;http://php&quot;&gt;http://php&lt;/a&gt;.</source>
          <target state="translated">비트 스트림 필드는 [stream_socket_client ()] ( &lt;a href=&quot;http://php&quot;&gt;http : // php로&lt;/a&gt; 전달 된 연결 플래그의 조합으로 설정 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dffa2d89b008dc670977bc233f7cd90e4a297ee9" translate="yes" xml:space="preserve">
          <source>BlameableBehavior automatically fills the specified attributes with the current user ID.</source>
          <target state="translated">BlameableBehavior는 지정된 속성을 현재 사용자 ID로 자동으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="f86677befc10d58edc52ad9312c5f16bc7bfa7f2" translate="yes" xml:space="preserve">
          <source>Block records all output between &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; calls and stores it in &lt;a href=&quot;yii-base-view#%24blocks-detail&quot;&gt;yii\base\View::$blocks&lt;/a&gt;.</source>
          <target state="translated">Block은 &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin ()&lt;/a&gt; 과 &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end ()&lt;/a&gt; 호출 사이의 모든 출력을 기록하고 &lt;a href=&quot;yii-base-view#%24blocks-detail&quot;&gt;yii \ base \ View :: $ blocks에 저장&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="694d5fca5c1d150e3a61f3c996383e2fdc739e2f" translate="yes" xml:space="preserve">
          <source>Blocks allow you to specify the view content in one place while displaying it in another. They are often used together with layouts. For example, you can define a block in a content view and display it in the layout.</source>
          <target state="translated">블록을 사용하면 뷰 컨텐츠를 한 곳에 표시하고 다른 컨텐츠를 표시 할 수 있습니다. 레이아웃과 함께 자주 사용됩니다. 예를 들어 컨텐츠 뷰에서 블록을 정의하고 레이아웃에 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b49cadfe4b17828aba3d0192787afc14b78a802b" translate="yes" xml:space="preserve">
          <source>Body attribute input search value</source>
          <target state="translated">신체 속성 입력 검색 값</target>
        </trans-unit>
        <trans-unit id="09e96683a15b32a505837bb917fc5e1f97d03ace" translate="yes" xml:space="preserve">
          <source>Body content type.</source>
          <target state="translated">본문 내용 유형</target>
        </trans-unit>
        <trans-unit id="03e977d8acabbdb06b18f4d1e95ed4ac31ca73a0" translate="yes" xml:space="preserve">
          <source>Body content.</source>
          <target state="translated">본문 내용.</target>
        </trans-unit>
        <trans-unit id="7f51aec98f73bc1ee74aeb24c131fc612486e33d" translate="yes" xml:space="preserve">
          <source>Body format name.</source>
          <target state="translated">본문 형식 이름</target>
        </trans-unit>
        <trans-unit id="de3f107867098bfda7451925f406bdd063821d52" translate="yes" xml:space="preserve">
          <source>BooleanValidator checks if the attribute value is a boolean value.</source>
          <target state="translated">BooleanValidator는 속성 값이 부울 값인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="90a4c7095f75a9c559ffb1a2a582e7049a30cf42" translate="yes" xml:space="preserve">
          <source>Bootstrap method to be called during application bootstrap stage.</source>
          <target state="translated">응용 프로그램 부트 스트랩 단계 중에 호출 될 부트 스트랩 메소드.</target>
        </trans-unit>
        <trans-unit id="ab8c46c26c3ae0d95e4ce77c4686b07aa64db3b8" translate="yes" xml:space="preserve">
          <source>BootstrapInterface is the interface that should be implemented by classes who want to participate in the application bootstrap process.</source>
          <target state="translated">BootstrapInterface는 응용 프로그램 부트 스트랩 프로세스에 참여하려는 클래스가 구현해야하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="09273e0b3502cd35874b01a3ba91c106f87a667f" translate="yes" xml:space="preserve">
          <source>Bootstrapping</source>
          <target state="translated">Bootstrapping</target>
        </trans-unit>
        <trans-unit id="5a9f35b91dcc847ee2b585d7bd69449fa65cb6ce" translate="yes" xml:space="preserve">
          <source>Bootstrapping Classes</source>
          <target state="translated">부트 스트랩 클래스</target>
        </trans-unit>
        <trans-unit id="d9a45d247f390215a2e6b0d6314cda4439b6a649" translate="yes" xml:space="preserve">
          <source>Bootstrapping Components</source>
          <target state="translated">부트 스트랩 구성 요소</target>
        </trans-unit>
        <trans-unit id="f4e5c9f09bf16e5de5c5471d7a9069129b04fbd4" translate="yes" xml:space="preserve">
          <source>Bootstrapping Modules</source>
          <target state="translated">부트 스트랩 모듈</target>
        </trans-unit>
        <trans-unit id="0e10c2fe4fc46c399bf564fd12e68335dd4b3b75" translate="yes" xml:space="preserve">
          <source>Bootstrapping classes can be registered in two approaches.</source>
          <target state="translated">부트 스트랩 클래스는 두 가지 접근 방식으로 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3942c2c35395f9511cda1806355f699f8ba0783" translate="yes" xml:space="preserve">
          <source>Bootstrapping refers to the process of preparing the environment before an application starts to resolve and process an incoming request. Bootstrapping is done in two places: the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; and the &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;.</source>
          <target state="translated">부트 스트랩은 애플리케이션이 들어오는 요청을 해결하고 처리하기 전에 환경을 준비하는 프로세스를 말합니다. 부트 스트랩은 &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;입력 스크립트&lt;/a&gt; 와 &lt;a href=&quot;guide-structure-applications&quot;&gt;응용 프로그램&lt;/a&gt; 의 두 위치에서 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ec40a0d10649cf4fb8c0b634569997112f07168" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; and &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; provide the following features, some of which will be described in detail in the next few sections:</source>
          <target state="translated">두 &lt;a href=&quot;yii-rest-controller&quot;&gt;YII \ 나머지 \ 컨트롤러&lt;/a&gt; 와 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;YII는 \ ActiveController 휴식 \&lt;/a&gt; 다음 몇 절에서 자세히 설명한다 일부는 다음과 같은 기능을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="27f8398d3c3cfc153e009c96a86a94e3e4f51e44" translate="yes" xml:space="preserve">
          <source>Both aliases and names are enclosed into {{ and }}.</source>
          <target state="translated">별명과 이름은 모두 {{및}}로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="b12aa67b8a1ab778d46c051b1a1a5d28c2b10a78" translate="yes" xml:space="preserve">
          <source>Both approaches execute the same set of SQL statements. The latter approach is much cleaner and drier, though.</source>
          <target state="translated">두 가지 방법 모두 동일한 SQL 문 집합을 실행합니다. 그러나 후자의 접근 방식은 훨씬 깨끗하고 건조합니다.</target>
        </trans-unit>
        <trans-unit id="90f3a85a35e690c63502d32f909eff810b610ddd" translate="yes" xml:space="preserve">
          <source>Both dependency injection and &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locator&lt;/a&gt; are popular design patterns that allow building software in a loosely-coupled and more testable fashion. We highly recommend you to read &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin's article&lt;/a&gt; to get a deeper understanding of dependency injection and service locator.</source>
          <target state="translated">의존성 주입과 &lt;a href=&quot;guide-concept-service-locator&quot;&gt;서비스 로케이터&lt;/a&gt; 는 널리 사용되는 디자인 패턴으로, 느슨하게 결합되고 테스트 가능한 방식으로 소프트웨어를 구축 할 수 있습니다. 의존성 주입과 서비스 로케이터에 대해 더 깊이 이해하려면 &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin의 기사&lt;/a&gt; 를 읽는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="3048d773204c3b34a4da00e504537c2c29f11499" translate="yes" xml:space="preserve">
          <source>Both methods can take one of the following parameter formats:</source>
          <target state="translated">두 방법 모두 다음 매개 변수 형식 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9929d9010d950ace3f3a944297d774d0de4d9b" translate="yes" xml:space="preserve">
          <source>Both project templates already have a console application with them. You can run it by calling the &lt;code&gt;yii&lt;/code&gt; script, which is located in the base directory of the repository. This will give you a list of available commands when you run it without any further parameters:</source>
          <target state="translated">두 프로젝트 템플릿에는 이미 콘솔 응용 프로그램이 있습니다. 저장소의 기본 디렉토리에있는 &lt;code&gt;yii&lt;/code&gt; 스크립트 를 호출하여 실행할 수 있습니다 . 추가 매개 변수없이 실행할 때 사용 가능한 명령 목록이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="86700be552f3a90418fea4fd7415a4a3fbe97437" translate="yes" xml:space="preserve">
          <source>Both roles and permissions can be organized in a hierarchy. In particular, a role may consist of other roles or permissions; and a permission may consist of other permissions. Yii implements a &lt;em&gt;partial order&lt;/em&gt; hierarchy which includes the more special &lt;em&gt;tree&lt;/em&gt; hierarchy. While a role can contain a permission, it is not &lt;code&gt;true&lt;/code&gt; vice versa.</source>
          <target state="translated">역할과 권한 모두 계층 구조로 구성 할 수 있습니다. 특히 역할은 다른 역할 또는 권한으로 구성 될 수 있습니다. 권한은 다른 권한으로 구성 될 수 있습니다. Yii 는보다 특별한 &lt;em&gt;트리&lt;/em&gt; 계층 을 포함 하는 &lt;em&gt;부분 순서&lt;/em&gt; 계층을 구현합니다 . 역할이 권한을 포함 할 수 있지만, 그것은 아닌 &lt;code&gt;true&lt;/code&gt; 그 반대.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8da4f01cbfd34accbf00fa7e38435ec9d0a6a6d1" translate="yes" xml:space="preserve">
          <source>Bower and NPM Assets installation</source>
          <target state="translated">Bower 및 NPM 자산 설치</target>
        </trans-unit>
        <trans-unit id="37cd85bf005f008efdb5c6bad31a0cc03e849d6c" translate="yes" xml:space="preserve">
          <source>Breadcrumbs displays a list of links indicating the position of the current page in the whole site hierarchy.</source>
          <target state="translated">이동 경로는 전체 사이트 계층 구조에서 현재 페이지의 위치를 ​​나타내는 링크 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a5a4d19656d1bb32202b7a98b16189bae8668e9d" translate="yes" xml:space="preserve">
          <source>Browser Redirection</source>
          <target state="translated">브라우저 리디렉션</target>
        </trans-unit>
        <trans-unit id="59344bb0462db11f0e01978e62ab8c3331584beb" translate="yes" xml:space="preserve">
          <source>Browser redirection relies on sending a &lt;code&gt;Location&lt;/code&gt; HTTP header. Because this feature is commonly used, Yii provides some special support for it.</source>
          <target state="translated">브라우저 리디렉션은 &lt;code&gt;Location&lt;/code&gt; HTTP 헤더 전송에 의존합니다 . 이 기능은 일반적으로 사용되므로 Yii는이 기능에 대한 특별한 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f85521f25424e505d7a5fcdb6828b829c7b19d00" translate="yes" xml:space="preserve">
          <source>Build a &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; object to represent different parts (e.g. &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;FROM&lt;/code&gt;) of a SELECT SQL statement.</source>
          <target state="translated">&lt;a href=&quot;yii-db-query&quot;&gt;yii \ db \ Query&lt;/a&gt; 객체를 빌드하여 SELECT SQL 문의 다른 부분 (예 : &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;FROM&lt;/code&gt; ) 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="004a51b7e43acf2aa902eeb5fd7555aaad94e99a" translate="yes" xml:space="preserve">
          <source>Build the query object by calling &lt;a href=&quot;guide-db-query-builder#building-queries&quot;&gt;query building methods&lt;/a&gt;;</source>
          <target state="translated">쿼리 작성 &lt;a href=&quot;guide-db-query-builder#building-queries&quot;&gt;메소드&lt;/a&gt; 를 호출하여 쿼리 오브젝트를 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="16d1dd5e9728b6ef7c08710218e812e5b5aff4a8" translate="yes" xml:space="preserve">
          <source>Building Authorization Data</source>
          <target state="translated">인증 데이터 구축</target>
        </trans-unit>
        <trans-unit id="0e3d562cd9aeec831a28dff385a033279a950263" translate="yes" xml:space="preserve">
          <source>Building Maps</source>
          <target state="translated">건물지도</target>
        </trans-unit>
        <trans-unit id="0f415e726d44d1d6437d8ac8ff480b5af0422bf8" translate="yes" xml:space="preserve">
          <source>Building Queries</source>
          <target state="translated">쿼리 작성</target>
        </trans-unit>
        <trans-unit id="5283dbc0044023b1331d2b84001beb6bcc44c443" translate="yes" xml:space="preserve">
          <source>Building authorization data is all about the following tasks:</source>
          <target state="translated">인증 데이터 작성은 다음 작업에 관한 것입니다.</target>
        </trans-unit>
        <trans-unit id="23842d3e121561940aa32c79b7110b2d3f90c8f9" translate="yes" xml:space="preserve">
          <source>Builds SHOW META query.</source>
          <target state="translated">SHOW META 쿼리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0b2f3ff1be068de7b2afc8a7a0bc50f0d4f59243" translate="yes" xml:space="preserve">
          <source>Builds SQL for IN condition</source>
          <target state="translated">IN 조건에 대한 SQL 작성</target>
        </trans-unit>
        <trans-unit id="c1784fd34bdaaad30dd264f7b6e88515d418ecd2" translate="yes" xml:space="preserve">
          <source>Builds URL rule objects from the given rule declarations.</source>
          <target state="translated">주어진 규칙 선언에서 URL 규칙 객체를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="444fad0ed27a19bc8ee4900af4ed0df75124b9ed" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding a column</source>
          <target state="translated">열을 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d5d1a7b8779b5d750e737df10868bf10036be19b" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding a list of records</source>
          <target state="translated">레코드 목록을 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7cffbe31e84684c6050cbbe4e139c32c15703ea1" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding one record</source>
          <target state="translated">하나의 레코드를 찾기위한 Lua 스크립트 작성</target>
        </trans-unit>
        <trans-unit id="6abf36c8f89234a7560db280dbdb27acbf6887df" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the average of a column</source>
          <target state="translated">열의 평균을 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d49fe8b95c944c0fbd44c906fa2b2a1a707e09e2" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the max value of a column</source>
          <target state="translated">열의 최대 값을 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0e4a50bc8a2d038305ecb96c1a1844300ee46f11" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the min value of a column</source>
          <target state="translated">열의 최소값을 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1bcf199ac75640c7e9df383b6e381084b42d542f" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for finding the sum of a column</source>
          <target state="translated">열의 합계를 찾기위한 Lua 스크립트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0ea23d631e6751aa4231479e024d18f0bb80ba1a" translate="yes" xml:space="preserve">
          <source>Builds a Lua script for getting count of records</source>
          <target state="translated">레코드 수를 얻기위한 Lua 스크립트 작성</target>
        </trans-unit>
        <trans-unit id="a30ab4620a88a506404ea0f018493e959f462569" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for adding comment to column</source>
          <target state="translated">열에 주석을 추가하기위한 SQL 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="528b18cc26b7c3ce50f87554242bcae52aefbb90" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for adding comment to table</source>
          <target state="translated">주석을 테이블에 추가하기위한 SQL 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="10ae19b012d51e3b462471856b4aa9a586994596" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for dropping comment from column</source>
          <target state="translated">열에서 주석을 삭제하기위한 SQL 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0650951a756e6a1af5a5d615ee911e68c02cf3ce" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for dropping comment from table</source>
          <target state="translated">테이블에서 주석을 삭제하기위한 SQL 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7131c4a0414bbcaf213b8fb87f1f27f183e494e1" translate="yes" xml:space="preserve">
          <source>Builds a SQL command for enabling or disabling integrity check.</source>
          <target state="translated">무결성 검사를 활성화 또는 비활성화하기위한 SQL 명령을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f03d2945a9902007d0e6fb641fa7944ccec95535" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a foreign key constraint to an existing table.</source>
          <target state="translated">기존 테이블에 외래 키 제약 조건을 추가하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b09769c1cbd360115cc0716bd5f3bf0f55848fa9" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a new DB column.</source>
          <target state="translated">새 DB 열을 추가하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="983ef924fb2f7fe92458ac07a97a23fa694e08b7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding a primary key constraint to an existing table.</source>
          <target state="translated">기존 테이블에 기본 키 제약 조건을 추가하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="17d6aefba004be06fb089045253fd2439d020e5c" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for adding comment to table</source>
          <target state="translated">주석을 테이블에 추가하기위한 SQL 문을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="39d82eec86bab888a7afb53f0f773249769a8ce1" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for call snippet from provided data and query, using specified index settings.</source>
          <target state="translated">지정된 인덱스 설정을 사용하여 제공된 데이터 및 쿼리에서 호출 스 니펫에 대한 SQL 문을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="d7443a9eceb4cfca2667bc6bfe17764751776ea2" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for changing the definition of a column.</source>
          <target state="translated">열의 정의를 변경하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="9b7ca0a0b1233a22fccaa8790282b20550a198f7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for creating a new DB table.</source>
          <target state="translated">새 DB 테이블을 만들기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d75f03ea15aea23ee93c80076ac32ac078ef3afc" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for creating a new index.</source>
          <target state="translated">새 색인을 작성하기위한 SQL 문을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="fb77c5e16ca4f3d6d7c666db5a653f3600fb1d89" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a DB column.</source>
          <target state="translated">DB 열을 삭제하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e0a085e2af51ab9fe48da07592433424496849a6" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a DB table.</source>
          <target state="translated">DB 테이블을 삭제하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="4488fc089af50d15ae4bcab919abc79f50e2dba7" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping a foreign key constraint.</source>
          <target state="translated">외래 키 제약 조건을 삭제하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="83be2d95d39a948a4c78928a9e69e56eaea90775" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping an index.</source>
          <target state="translated">인덱스를 삭제하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6340774246dd59de5a610396c14fa5aac225358a" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for dropping comment from table</source>
          <target state="translated">테이블에서 주석을 삭제하기위한 SQL 문을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="172aac25b89317fead4d45d73083a695bf6aec87" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for enabling or disabling integrity check.</source>
          <target state="translated">무결성 검사를 활성화하거나 비활성화하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="746629844867d7f3e37d2ee705be902e47fc05b2" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for removing a primary key constraint to an existing table.</source>
          <target state="translated">기존 테이블에 대한 기본 키 제한 조건을 제거하기위한 SQL 문을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="c9e0961f40da3fea181c6bfb9ea7da9a1477e0e6" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for renaming a DB table.</source>
          <target state="translated">DB 테이블 이름을 바꾸는 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="03bc61c6cdf194e7c0c52c579067ca07c46772b5" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for renaming a column.</source>
          <target state="translated">열 이름을 바꾸는 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0934cfb5bc3f2cf764b05c508fc392be6fab9483" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for returning tokenized and normalized forms of the keywords, and, optionally, keyword statistics.</source>
          <target state="translated">토큰 화 된 정규화 된 형식의 키워드와 선택적으로 키워드 통계를 반환하기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c4a52f422393d96e28a08d928c8bd9d096256870" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for truncating a DB table.</source>
          <target state="translated">DB 테이블을 잘라 내기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a457a680f41f1e4fa21bfc1f10194675a2199fd0" translate="yes" xml:space="preserve">
          <source>Builds a SQL statement for truncating an index.</source>
          <target state="translated">인덱스를 자르기위한 SQL 문을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="9dbbe457eed184243c6ba0c3b108165dd18498cb" translate="yes" xml:space="preserve">
          <source>Builds a map (key-value pairs) from a multidimensional array or an array of objects.</source>
          <target state="translated">다차원 배열 또는 객체 배열에서 맵 (키-값 쌍)을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4575dcac616ef36a5c01bcd519d7c89ae51bc5c7" translate="yes" xml:space="preserve">
          <source>Builds a normalized cache key from a given key.</source>
          <target state="translated">주어진 키에서 정규화 된 캐시 키를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="539f66c0a41b165db21dbed226aef0b3501d4ab6" translate="yes" xml:space="preserve">
          <source>Builds a normalized key from a given primary key value.</source>
          <target state="translated">주어진 기본 키 값에서 정규화 된 키를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6e0d4063d62548eb3c9b543bdec27989bd5dd384" translate="yes" xml:space="preserve">
          <source>Builds a snippet from provided data and query, using specified index settings.</source>
          <target state="translated">지정된 색인 설정을 사용하여 제공된 데이터 및 쿼리에서 스 니펫을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="d1ee763f07f7b0cebb1d3040d69205b9ac1e47b5" translate="yes" xml:space="preserve">
          <source>Builds a snippets from provided source data by the given index.</source>
          <target state="translated">제공된 인덱스로 제공된 소스 데이터에서 스 니펫을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="9b44e0ef1a65b7210ea93170af5c22be7c850180" translate="yes" xml:space="preserve">
          <source>Builds a snippets from provided source data.</source>
          <target state="translated">제공된 소스 데이터에서 스 니펫을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="3950eb505a3042a46470ac57b844a3c52de48e12" translate="yes" xml:space="preserve">
          <source>Builds and execute a SQL statement for adding comment to column</source>
          <target state="translated">열에 주석을 추가하기위한 SQL 문 빌드 및 실행</target>
        </trans-unit>
        <trans-unit id="ad78828b22a707db0ed642c52f7884c55e9f44e2" translate="yes" xml:space="preserve">
          <source>Builds and execute a SQL statement for dropping comment from column</source>
          <target state="translated">열에서 주석을 삭제하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4f7342ce4651047b147b13ea76ca2e3138218dd6" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for adding a new DB column.</source>
          <target state="translated">새 DB 열을 추가하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ab9046a9514df1872a9ce4c64182ce2f602d8131" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for changing the definition of a column.</source>
          <target state="translated">열 정의를 변경하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6e028ee77e2f7a07928e87cf78eb1500a09f3b4c" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a new DB table.</source>
          <target state="translated">새 DB 테이블을 만들기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="45f47b45d6d9946bcafac860819b20fe56368bbf" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a new index.</source>
          <target state="translated">새 인덱스를 작성하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="93d5afdae4dd5f39feba4018d378979d1752b71f" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for creating a primary key.</source>
          <target state="translated">기본 키를 작성하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="aea782e817ef4e78c68a535891a6131159a90dfc" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a DB column.</source>
          <target state="translated">DB 열을 삭제하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2037e34d86681197a72343168e0fb881a59f0231" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a DB table.</source>
          <target state="translated">DB 테이블을 삭제하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7a13e6e23ae4c03d83befa5a8c909d11d9291a76" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping a primary key.</source>
          <target state="translated">기본 키를 삭제하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f3aba308cea6bdbdecede3c5e5e4b45e35470d59" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for dropping an index.</source>
          <target state="translated">인덱스를 삭제하기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="0d34560bc26bd9d3a3563a2f92502b8a359d3f15" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for renaming a DB table.</source>
          <target state="translated">DB 테이블 이름 바꾸기를위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c53d8be8bf84fea1e788772a25f5b37197754eae" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for renaming a column.</source>
          <target state="translated">열 이름 바꾸기를위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="aefd8dd287dd068cd6be046c72319436ba4690b5" translate="yes" xml:space="preserve">
          <source>Builds and executes a SQL statement for truncating a DB table.</source>
          <target state="translated">DB 테이블을 자르기위한 SQL 문을 빌드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="947b05c0324c6d1b84e869955046b556e595506c" translate="yes" xml:space="preserve">
          <source>Builds array of parameters that will be passed to the view.</source>
          <target state="translated">뷰에 전달 될 매개 변수 배열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="828ca3d87a09a0077e236d0f9a8cc8b4b5ce2c4a" translate="yes" xml:space="preserve">
          <source>Builds authentication URL for the protocol version 1.</source>
          <target state="translated">프로토콜 버전 1의 인증 URL을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7e0755b94cedeedd78994e31046d5c6406eef20d" translate="yes" xml:space="preserve">
          <source>Builds authentication URL for the protocol version 2.</source>
          <target state="translated">프로토콜 버전 2의 인증 URL을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="4cdd5bdfab727f7476e71e97f869d77323fdf26e" translate="yes" xml:space="preserve">
          <source>Builds output asset bundle.</source>
          <target state="translated">출력 자산 번들을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="706eb5212f13d0de3ef9923eb4f5521bd73eff6f" translate="yes" xml:space="preserve">
          <source>Builds string that represents the exception.</source>
          <target state="translated">예외를 나타내는 문자열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="23fbd2db95f087ff5355d222ffb7ea722c5ea957" translate="yes" xml:space="preserve">
          <source>Builds the MongoDB cursor for this query.</source>
          <target state="translated">이 쿼리에 대한 MongoDB 커서를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="195731fde802a5f645a6b1ea97b9b7f316c244ad" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY and LIMIT/OFFSET clauses and appends them to the given SQL.</source>
          <target state="translated">ORDER BY 및 LIMIT / OFFSET 절을 빌드하고이를 주어진 SQL에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="79d870add997c6a60e8bb00d45cacd87b6e5b8cf" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY/LIMIT/OFFSET clauses for SQL SERVER 2005 to 2008.</source>
          <target state="translated">SQL SERVER 2005에서 2008까지의 ORDER BY / LIMIT / OFFSET 절을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="9ce437295ab1b62395cc5a467730b911efe10197" translate="yes" xml:space="preserve">
          <source>Builds the ORDER BY/LIMIT/OFFSET clauses for SQL SERVER 2012 or newer.</source>
          <target state="translated">SQL SERVER 2012 이상에 대한 ORDER BY / LIMIT / OFFSET 절을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a80f4d9e0cad52652b59388aa8f79a71e3c3716e" translate="yes" xml:space="preserve">
          <source>Builds the after constraint for the column. Defaults to unsupported.</source>
          <target state="translated">열에 대한 이후 제한 조건을 빌드합니다. 기본적으로 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="20db492e3b444aba62887f3713532d2b378ea308" translate="yes" xml:space="preserve">
          <source>Builds the check constraint for the column.</source>
          <target state="translated">열에 대한 점검 제한 조건을 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="3d50c8c7adcc11b70b79bab5b985fb0ecffa5902" translate="yes" xml:space="preserve">
          <source>Builds the comment specification for the column.</source>
          <target state="translated">열의 주석 사양을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5a498a3cedbc58b7d1c664a328908ea1cec34416" translate="yes" xml:space="preserve">
          <source>Builds the custom string that's appended to column definition.</source>
          <target state="translated">열 정의에 추가되는 사용자 지정 문자열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="80efa028e38adcc60c013d60e7d023f107e1b280" translate="yes" xml:space="preserve">
          <source>Builds the default value specification for the column.</source>
          <target state="translated">열의 기본값 사양을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5acb5a0e6c9cda98383fdccadd99f576dc433b6b" translate="yes" xml:space="preserve">
          <source>Builds the first constraint for the column. Defaults to unsupported.</source>
          <target state="translated">열에 대한 첫 번째 제약 조건을 작성합니다. 기본적으로 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d331ec694d40bf4ef31162a0570c3400174fc736" translate="yes" xml:space="preserve">
          <source>Builds the full string for the column's schema</source>
          <target state="translated">열 스키마의 전체 문자열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d8bf4834bd70226d295982ccaaf2d8fc9413df76" translate="yes" xml:space="preserve">
          <source>Builds the length/precision part of the column.</source>
          <target state="translated">열의 길이 / 정밀도 부분을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="29327ba3d2be3391f099af2804c678528a4c9e31" translate="yes" xml:space="preserve">
          <source>Builds the not null constraint for the column.</source>
          <target state="translated">열에 대한 null이 아닌 제약 조건을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="4ccb4164861ebace871a88ba90268dd5c4dd27e4" translate="yes" xml:space="preserve">
          <source>Builds the unique constraint for the column.</source>
          <target state="translated">열에 대한 고유 제한 조건을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6bbb0ef5e68734b1b85c49d7d084b49a6208e7d6" translate="yes" xml:space="preserve">
          <source>Builds the unsigned string for column. Defaults to unsupported.</source>
          <target state="translated">열의 부호없는 문자열을 작성합니다. 기본적으로 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="294524c4645f5ad6ce52a7e88e2b4bcd8afca0d4" translate="yes" xml:space="preserve">
          <source>Builds up the snippet value from the given query.</source>
          <target state="translated">주어진 쿼리에서 스 니펫 값을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="17bec552f0faaa44386940a5017bfc006782b311" translate="yes" xml:space="preserve">
          <source>Built on top of &lt;a href=&quot;guide-db-dao&quot;&gt;Database Access Objects&lt;/a&gt;, query builder allows you to construct a SQL query in a programmatic and DBMS-agnostic way. Compared to writing raw SQL statements, using query builder will help you write more readable SQL-related code and generate more secure SQL statements.</source>
          <target state="translated">&lt;a href=&quot;guide-db-dao&quot;&gt;데이터베이스 액세스 오브젝트&lt;/a&gt; 위에 빌드 된 쿼리 빌더를 사용하면 프로그래밍 방식 및 DBMS에 무관 한 방식으로 SQL 쿼리를 구성 할 수 있습니다. 원시 SQL 문을 작성하는 것과 비교하여 쿼리 빌더를 사용하면 더 읽기 쉬운 SQL 관련 코드를 작성하고보다 안전한 SQL 문을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47b875eb17e08c4cbca735b40165ee529cd2b4e9" translate="yes" xml:space="preserve">
          <source>Built on top of &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt;, Yii DAO (Database Access Objects) provides an object-oriented API for accessing relational databases. It is the foundation for other more advanced database access methods, including &lt;a href=&quot;guide-db-query-builder&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; 위에 구축 된 Yii DAO (Database Access Objects)는 관계형 데이터베이스에 액세스하기위한 객체 지향 API를 제공합니다. &lt;a href=&quot;guide-db-query-builder&quot;&gt;쿼리 작성기&lt;/a&gt; 및 &lt;a href=&quot;guide-db-active-record&quot;&gt;활성 레코드를&lt;/a&gt; 포함한 다른 고급 데이터베이스 액세스 방법의 기초입니다 .</target>
        </trans-unit>
        <trans-unit id="b1321e8d4207a8d9967ca4af0f5d5b9eb3391348" translate="yes" xml:space="preserve">
          <source>Built snippet in case &quot;source&quot; is a string, list of built snippets in case &quot;source&quot; is an array.</source>
          <target state="translated">&quot;source&quot;가 문자열 인 경우 빌드 된 스 니펫 &quot;source&quot;가 배열 인 경우 빌드 된 스 니펫 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4534530cc2bdc008b56d129010f12aec21f10aeb" translate="yes" xml:space="preserve">
          <source>Built-in support for the &lt;code&gt;OPTIONS&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; verbs;</source>
          <target state="translated">&lt;code&gt;OPTIONS&lt;/code&gt; 및 &lt;code&gt;HEAD&lt;/code&gt; 동사에 대한 기본 지원 ;</target>
        </trans-unit>
        <trans-unit id="59fab26b3574da0dbcd066770f91271dcf21fe60" translate="yes" xml:space="preserve">
          <source>Bundle instance</source>
          <target state="translated">번들 인스턴스</target>
        </trans-unit>
        <trans-unit id="018d02b404fa3a849e18eae3a6290a796afcd7e6" translate="yes" xml:space="preserve">
          <source>Bundle name</source>
          <target state="translated">번들 이름</target>
        </trans-unit>
        <trans-unit id="1bb61e57e67820563345b7f3acefd30aee828121" translate="yes" xml:space="preserve">
          <source>Bundle name.</source>
          <target state="translated">번들 이름.</target>
        </trans-unit>
        <trans-unit id="cc3779cd95fbbb36e00eb9136c9898236320427b" translate="yes" xml:space="preserve">
          <source>Bundle object configuration</source>
          <target state="translated">번들 오브젝트 구성</target>
        </trans-unit>
        <trans-unit id="33f1dc32991f7ab0b91616edf4055a34f977e9f1" translate="yes" xml:space="preserve">
          <source>But please notice, that you can not trigger all the classes, that implement the interface:</source>
          <target state="translated">그러나 인터페이스를 구현하는 모든 클래스를 트리거 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="dc4cbe2d34c43ea22df3018803782de2a2ad4ce1" translate="yes" xml:space="preserve">
          <source>But there are other installation options available:</source>
          <target state="translated">그러나 사용 가능한 다른 설치 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7c32df6e895470ea9ad150cbf3b195b6612a98e" translate="yes" xml:space="preserve">
          <source>Button HTML.</source>
          <target state="translated">버튼 HTML.</target>
        </trans-unit>
        <trans-unit id="87771f3b1a7d412908ffc0f2f99541aebe165f35" translate="yes" xml:space="preserve">
          <source>Button name as it's written in template</source>
          <target state="translated">템플릿으로 작성된 버튼 이름</target>
        </trans-unit>
        <trans-unit id="d88590b695198f1ff84c8e2a1248b86674161574" translate="yes" xml:space="preserve">
          <source>Button rendering callbacks.</source>
          <target state="translated">버튼 렌더링 콜백.</target>
        </trans-unit>
        <trans-unit id="71f8acf9e53669181380f40b154ec5df6b82920d" translate="yes" xml:space="preserve">
          <source>Button rendering callbacks. The array keys are the button names (without curly brackets), and the values are the corresponding button rendering callbacks. The callbacks should use the following signature:</source>
          <target state="translated">버튼 렌더링 콜백. 배열 키는 버튼 이름 (중괄호 제외)이며 값은 해당 버튼 렌더링 콜백입니다. 콜백은 다음 서명을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fbe4f814e39856e61522d1daeb6602dc2aa7396a" translate="yes" xml:space="preserve">
          <source>Button tag HTML options, which will be merged with the default ones.</source>
          <target state="translated">버튼 태그 HTML 옵션. 기본 옵션과 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="503d46db37b0db45db898aabed77244252918ca2" translate="yes" xml:space="preserve">
          <source>Buttons</source>
          <target state="translated">Buttons</target>
        </trans-unit>
        <trans-unit id="c507f69d041a8dceb01372756b5c3269c92e1ff7" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-caching-tagdependency#invalidate()-detail&quot;&gt;invalidate()&lt;/a&gt;, you can invalidate all cached data items that are associated with the specified tag name(s).</source>
          <target state="translated">&lt;a href=&quot;yii-caching-tagdependency#invalidate()-detail&quot;&gt;invalidate ()&lt;/a&gt; 를 호출 하면 지정된 태그 이름과 연관된 모든 캐시 된 데이터 항목을 무효화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd47cd654ab41d0bdcf9502dfd33f1021b3df0c0" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;yii\db\ActiveQuery::with()&lt;/a&gt;, you instruct Active Record to bring back the orders for the first 100 customers in one single SQL statement. As a result, you reduce the number of the executed SQL statements from 101 to 2!</source>
          <target state="translated">&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;yii \ db \ ActiveQuery :: with ()&lt;/a&gt; 를 호출 하면 하나의 단일 SQL 문에서 처음 100 명의 고객에 대한 주문을 다시 가져 오도록 Active Record에 지시합니다. 결과적으로 실행 된 SQL 문의 수를 101에서 2로 줄입니다!</target>
        </trans-unit>
        <trans-unit id="17fa895cc4169f421f2526ae0c0e66e94377ffbf" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-db-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-db-command&quot;&gt;yii\db\Command&lt;/a&gt; instance which can be further used to perform/execute the DB query against a database.</source>
          <target state="translated">&lt;a href=&quot;yii-db-query#createCommand()-detail&quot;&gt;createCommand ()&lt;/a&gt; 를 호출 하면 데이터베이스에 대해 DB 쿼리를 수행 / 실행하는 데 사용할 수있는 &lt;a href=&quot;yii-db-command&quot;&gt;yii \ db \ Command&lt;/a&gt; 인스턴스를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a962ab07cc57745a313734259d90bb2ac2558af1" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-elasticsearch-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-elasticsearch-command&quot;&gt;yii\elasticsearch\Command&lt;/a&gt; instance which can be further used to perform/execute the DB query against a database.</source>
          <target state="translated">&lt;a href=&quot;yii-elasticsearch-query#createCommand()-detail&quot;&gt;createCommand ()&lt;/a&gt; 를 호출 하면 데이터베이스에 대한 DB 쿼리를 수행 / 실행하는 데 사용할 수있는 &lt;a href=&quot;yii-elasticsearch-command&quot;&gt;yii \ elasticsearch \ Command&lt;/a&gt; 인스턴스를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74fe172df65ce970bc247d404f2cb087d1a86107" translate="yes" xml:space="preserve">
          <source>By calling &lt;a href=&quot;yii-sphinx-query#createCommand()-detail&quot;&gt;createCommand()&lt;/a&gt;, we can get a &lt;a href=&quot;yii-sphinx-command&quot;&gt;yii\sphinx\Command&lt;/a&gt; instance which can be further used to perform/execute the Sphinx query.</source>
          <target state="translated">&lt;a href=&quot;yii-sphinx-query#createCommand()-detail&quot;&gt;createCommand ()&lt;/a&gt; 를 호출 하면 &lt;a href=&quot;yii-sphinx-command&quot;&gt;yii \ sphinx \ Command&lt;/a&gt; 인스턴스를 얻을 수 있으며이 인스턴스는 추가로 Sphinx 쿼리를 수행 / 실행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b72038daba5dfd02363306458fb657c8a0b764e8" translate="yes" xml:space="preserve">
          <source>By calling the &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;beginTransaction()&lt;/a&gt; method, a new transaction is started. The transaction is represented as a &lt;a href=&quot;yii-db-transaction&quot;&gt;yii\db\Transaction&lt;/a&gt; object stored in the &lt;code&gt;$transaction&lt;/code&gt; variable. Then, the queries being executed are enclosed in a &lt;code&gt;try...catch...&lt;/code&gt; block. If all queries are executed successfully, the &lt;a href=&quot;yii-db-transaction#commit()-detail&quot;&gt;commit()&lt;/a&gt; method is called to commit the transaction. Otherwise, if an exception will be triggered and caught, the &lt;a href=&quot;yii-db-transaction#rollBack()-detail&quot;&gt;rollBack()&lt;/a&gt; method is called to roll back the changes made by the queries prior to that failed query in the transaction. &lt;code&gt;throw $e&lt;/code&gt; will then re-throw the exception as if we had not caught it, so the normal error handling process will take care of it.</source>
          <target state="translated">&lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;beginTransaction ()&lt;/a&gt; 메서드 를 호출하면 새 트랜잭션이 시작됩니다. 트랜잭션은 &lt;code&gt;$transaction&lt;/code&gt; 변수에 저장된 &lt;a href=&quot;yii-db-transaction&quot;&gt;yii \ db \ Transaction&lt;/a&gt; 오브젝트로 표시됩니다 . 그런 다음 실행중인 쿼리는 &lt;code&gt;try...catch...&lt;/code&gt; 블록으로 묶습니다 . 모든 쿼리가 성공적으로 실행되면 &lt;a href=&quot;yii-db-transaction#commit()-detail&quot;&gt;commit ()&lt;/a&gt; 메서드가 호출되어 트랜잭션을 커밋합니다. 그렇지 않으면 예외가 발생하여 잡히면 &lt;a href=&quot;yii-db-transaction#rollBack()-detail&quot;&gt;rollBack ()&lt;/a&gt; 메서드가 호출되어 트랜잭션에서 쿼리에 실패하기 전에 쿼리에서 변경 한 내용을 롤백합니다. &lt;code&gt;throw $e&lt;/code&gt; 는 예외가 발생하지 않은 것처럼 예외를 다시 발생 시키므로 일반적인 오류 처리 프로세스가이를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="40140e98ac0ee4e5a00b1389ba7295cb26c05abd" translate="yes" xml:space="preserve">
          <source>By configuring the &lt;code&gt;urlManager&lt;/code&gt; component in the application configuration, you can let your application recognize arbitrary URL formats without modifying your existing application code. For example, you can use the following code to create a URL for the &lt;code&gt;post/view&lt;/code&gt; action:</source>
          <target state="translated">응용 프로그램 구성에서 &lt;code&gt;urlManager&lt;/code&gt; 구성 요소 를 구성하면 기존 응용 프로그램 코드를 수정하지 않고도 응용 프로그램이 임의의 URL 형식을 인식 할 수 있습니다. 예를 들어 다음 코드를 사용하여 &lt;code&gt;post/view&lt;/code&gt; 작업에 대한 URL을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e23887665d7c5d0b838afbabd087aef1232df7e" translate="yes" xml:space="preserve">
          <source>By configuring the properties of CaptchaAction, you may customize the appearance of the generated CAPTCHA images, such as the font color, the background color, etc.</source>
          <target state="translated">CaptchaAction의 속성을 구성하여 글꼴 색상, 배경 색상 등 생성 된 보안 문자 이미지의 모양을 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4872c8c2eedcb13cd3dc912e998c1ddc6f746fa5" translate="yes" xml:space="preserve">
          <source>By default an attribute label is generated using &lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;generateAttributeLabel()&lt;/a&gt;. This method allows you to explicitly specify attribute labels.</source>
          <target state="translated">기본적으로 속성 레이블은 &lt;a href=&quot;yii-base-model#generateAttributeLabel()-detail&quot;&gt;generateAttributeLabel ()을&lt;/a&gt; 사용하여 생성됩니다 . 이 방법을 사용하면 속성 레이블을 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1cbaa9ce7829292d46b318c465a269c8d0a4b69" translate="yes" xml:space="preserve">
          <source>By default each Active Record class is associated with its database table. The &lt;a href=&quot;yii-db-activerecord#tableName()-detail&quot;&gt;tableName()&lt;/a&gt; method returns the table name by converting the class name via &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. You may override this method if the table is not named after this convention.</source>
          <target state="translated">기본적으로 각 Active Record 클래스는 해당 데이터베이스 테이블과 연관됩니다. &lt;a href=&quot;yii-db-activerecord#tableName()-detail&quot;&gt;TABLENAME ()&lt;/a&gt; 메서드를 통해 클래스 이름을 변환하여 테이블 이름을 반환 &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;YII \ 도우미 \ 인플 :: camel2id ()&lt;/a&gt; . 이 규칙에 따라 테이블 이름을 지정하지 않으면이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7e052089d2bdcbc2e2e75b086b284e796695129" translate="yes" xml:space="preserve">
          <source>By default if you do not specify the &lt;code&gt;class&lt;/code&gt; option for a rule configuration, it will take the default class &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;, which is the default value defined in &lt;a href=&quot;yii-web-urlmanager#%24ruleConfig-detail&quot;&gt;yii\web\UrlManager::$ruleConfig&lt;/a&gt;.</source>
          <target state="translated">기본적 으로 규칙 구성에 &lt;code&gt;class&lt;/code&gt; 옵션을 지정하지 않으면 &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-web-urlmanager#%24ruleConfig-detail&quot;&gt;\ web \ UrlManager :: $ ruleConfig에&lt;/a&gt; 정의 된 기본값 인 기본 클래스 yii \ web \ UrlRule이 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="44ffd12e5dafd71081bc2e0b7294d949c2a54e42" translate="yes" xml:space="preserve">
          <source>By default it assumes there is a redis server running on localhost at port 6379 and uses the database number 0.</source>
          <target state="translated">기본적으로 포트 6379의 localhost에서 redis 서버가 실행되고 데이터베이스 번호 0을 사용한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c4df5cd1c964aac35be3f4975648e24bcb0eedcf" translate="yes" xml:space="preserve">
          <source>By default server webroot is meant to be pointed to &lt;code&gt;web&lt;/code&gt; directory where &lt;code&gt;index.php&lt;/code&gt; is. In case of shared hosting environments it could be impossible to achieve so we'll end up with all the code, configs and logs in server webroot.</source>
          <target state="translated">기본적으로 서버 webroot는 &lt;code&gt;index.php&lt;/code&gt; 가 있는 &lt;code&gt;web&lt;/code&gt; 디렉토리를 가리 킵니다 . 공유 호스팅 환경의 경우 달성하기가 불가능하므로 서버 웹 루트의 모든 코드, 구성 및 로그로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="e9b18e37b487b15c66c128c43b1e6d44e83351af" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;op_type&lt;/code&gt; is set to &lt;code&gt;create&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;op_type&lt;/code&gt; 은 create 로 설정되어 &lt;code&gt;create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39fe7162b7cfdc0e7060bdd92c344f17476dbaff" translate="yes" xml:space="preserve">
          <source>By default the URL is determined based on the entry script URL. This setter is provided in case you want to change this behavior.</source>
          <target state="translated">기본적으로 URL은 입력 스크립트 URL을 기반으로 결정됩니다. 이 동작은이 동작을 변경하려는 경우에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="28f9061627f59e6dd0922692e196d89b0ac5a594" translate="yes" xml:space="preserve">
          <source>By default the number is spelled out as cardinal. It could be changed:</source>
          <target state="translated">기본적으로 숫자는 기본 기수로 표시됩니다. 변경 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="be65f5517a2cf39fa9f57b0255617301f8479338" translate="yes" xml:space="preserve">
          <source>By default this is the &lt;code&gt;authManager&lt;/code&gt; application component. You may override this method to return a different auth manager instance if needed.</source>
          <target state="translated">기본적으로 이것은 &lt;code&gt;authManager&lt;/code&gt; 응용 프로그램 구성 요소입니다. 필요한 경우이 방법을 재정 의하여 다른 인증 관리자 인스턴스를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40cbaced001ea1f5c2c6bc236d8ed5ad428a46cc" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the collection name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Customer' becomes 'customer', and 'OrderItem' becomes 'order_item'. You may override this method if the collection is not named after this convention.</source>
          <target state="translated">기본적으로이 메소드는 &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id ()&lt;/a&gt; 를 호출하여 클래스 이름을 콜렉션 이름으로 리턴합니다 . 예를 들어 '고객'은 '고객'이되고 '주문 항목'은 '주문 _ 항목'이됩니다. 이 규칙에 따라 컬렉션의 이름을 지정하지 않으면이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebae9f8b3f78b87c02ea8377464102eda61766eb" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the index name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Article' becomes 'article', and 'StockItem' becomes 'stock_item'. You may override this method if the index is not named after this convention.</source>
          <target state="translated">기본적으로이 메소드는 &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id ()&lt;/a&gt; 를 호출하여 클래스 이름을 색인 이름으로 리턴합니다 . 예를 들어 'Article'은 'article'이되고 'StockItem'은 'stock_item'이됩니다. 이 규칙에 따라 인덱스 이름이 지정되지 않은 경우이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcbefa0f980560aa9a468e9ab03947163a1423ae" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the table name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt; with prefix &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii\db\Connection::$tablePrefix&lt;/a&gt;. For example if &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii\db\Connection::$tablePrefix&lt;/a&gt; is &lt;code&gt;tbl_&lt;/code&gt;, &lt;code&gt;Customer&lt;/code&gt; becomes &lt;code&gt;tbl_customer&lt;/code&gt;, and &lt;code&gt;OrderItem&lt;/code&gt; becomes &lt;code&gt;tbl_order_item&lt;/code&gt;. You may override this method if the table is not named after this convention.</source>
          <target state="translated">기본적으로이 메소드는 접두어 &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;\ db \ Connection :: $ tablePrefix&lt;/a&gt; 와 함께 yii \ helpers \ Inflector :: camel2id () 를 호출하여 클래스 이름을 테이블 이름으로 리턴합니다 . 예를 들어 &lt;a href=&quot;yii-db-connection#%24tablePrefix-detail&quot;&gt;yii \ db \ Connection :: $ tablePrefix&lt;/a&gt; 가 &lt;code&gt;tbl_&lt;/code&gt; 이면 &lt;code&gt;Customer&lt;/code&gt; 가 &lt;code&gt;tbl_customer&lt;/code&gt; 이고 &lt;code&gt;OrderItem&lt;/code&gt; 이 &lt;code&gt;tbl_order_item&lt;/code&gt; 이 됩니다 . 이 규칙에 따라 테이블 이름을 지정하지 않으면이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f538d5a70fa5024694ac47c00484f9096cd4a67" translate="yes" xml:space="preserve">
          <source>By default this method returns the class name as the table name by calling &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii\helpers\Inflector::camel2id()&lt;/a&gt;. For example, 'Customer' becomes 'customer', and 'OrderItem' becomes 'order_item'. You may override this method if you want different key naming.</source>
          <target state="translated">기본적으로이 메소드는 &lt;a href=&quot;yii-helpers-baseinflector#camel2id()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2id ()&lt;/a&gt; 를 호출하여 클래스 이름을 테이블 이름으로 리턴합니다 . 예를 들어 '고객'은 '고객'이되고 '주문 항목'은 '주문 _ 항목'이됩니다. 다른 키 이름 지정을 원하면이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5b4d72ce131e6da4664762c994d7f0df987fad2" translate="yes" xml:space="preserve">
          <source>By default this method sends message to 'stdout'.</source>
          <target state="translated">기본적으로이 메소드는 'stdout'에 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b201878e6a6f51501d053b0c7cb3d3d3399b592c" translate="yes" xml:space="preserve">
          <source>By default this value is based on the user request information. This method will return the value of &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; if it is available or &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; if not. You may want to check out the &lt;a href=&quot;http://php.net/manual/en/reserved.variables.server.php&quot;&gt;PHP documentation&lt;/a&gt; for more information on these variables.</source>
          <target state="translated">기본적으로이 값은 사용자 요청 정보를 기반으로합니다. 이 메소드 는 사용 가능한 경우 &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; 값을 리턴하고 그렇지 않은 경우 &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; 값을 리턴합니다 . 이러한 변수에 대한 자세한 내용 은 &lt;a href=&quot;http://php.net/manual/en/reserved.variables.server.php&quot;&gt;PHP 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2742a0d9d3dccb0945ca413853ddb700531d3d15" translate="yes" xml:space="preserve">
          <source>By default this value is based on the user request information. This method will return the value of &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; if it is available or &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; if not. You may want to check out the &lt;a href=&quot;https://php.net/manual/en/reserved.variables.server.php&quot;&gt;PHP documentation&lt;/a&gt; for more information on these variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438c95517e0a4ba5c1225ce5d9c53be7712c3b3c" translate="yes" xml:space="preserve">
          <source>By default value will be HTML-encoded using &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt;, you may control this behavior via 'encode' option.</source>
          <target state="translated">기본값은 &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode ()를&lt;/a&gt; 사용하여 HTML로 인코딩되며 , 'encode'옵션을 통해이 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b13bcaad0ecda22ddd9ca3ec3f732ede808a763" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii\base\Model::extraFields()&lt;/a&gt; returns an empty array, while &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii\db\ActiveRecord::extraFields()&lt;/a&gt; returns the names of the relations that have been populated from DB.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;yii \ base \ Model :: extraFields ()&lt;/a&gt; 는 빈 배열을 반환하고 yii &lt;a href=&quot;yii-base-arrayabletrait#extraFields()-detail&quot;&gt;\ db \ ActiveRecord :: extraFields ()&lt;/a&gt; 는 DB에서 채워진 관계의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20ebe566233d452ab2b9ccc517e5cb4afd9565a5" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;yii\base\Model::fields()&lt;/a&gt; returns all model attributes as fields, while &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;yii\db\ActiveRecord::fields()&lt;/a&gt; only returns the attributes which have been populated from DB.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-base-model#fields()-detail&quot;&gt;yii \ base \ Model :: fields ()&lt;/a&gt; 는 모든 모델 속성을 필드로 반환하지만 &lt;a href=&quot;yii-base-arrayabletrait#fields()-detail&quot;&gt;yii \ db \ ActiveRecord :: fields ()&lt;/a&gt; 는 DB에서 채워진 속성 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1da773fad3f8effe2cf6c70db1a8f6bb725729b7" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt; refers to a Container instance which is used by &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt; to create new object instances. You may use this method to replace the &lt;code&gt;new&lt;/code&gt; operator when creating a new object, which gives you the benefit of automatic dependency resolution and default property configuration.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container&lt;/a&gt; 는 &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject ()&lt;/a&gt; 에서 새 객체 인스턴스를 만드는 데 사용되는 컨테이너 인스턴스를 나타냅니다 . 새 객체를 생성 할 때이 메소드를 사용하여 &lt;code&gt;new&lt;/code&gt; 연산자 를 바꿀 수 있습니다. 그러면 자동 종속성 해결 및 기본 속성 구성의 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="87410fcbdbe9fd1336a1b5d4694f332e37127985" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii\codeception\DbTestCase&lt;/a&gt; already declares &lt;code&gt;InitDbFixture&lt;/code&gt; in its &lt;code&gt;globalFixtures()&lt;/code&gt; method. This means you only need to work with &lt;code&gt;@app/tests/fixtures/initdb.php&lt;/code&gt; if you want to do some initialization work before each test. You may otherwise simply focus on developing each individual test case and the corresponding fixtures.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii \ codeception \ DbTestCase는&lt;/a&gt; 이미 &lt;code&gt;globalFixtures()&lt;/code&gt; 메소드 에서 &lt;code&gt;InitDbFixture&lt;/code&gt; 를 선언합니다 . 즉, 각 테스트 전에 초기화 작업을 수행하려는 경우 &lt;code&gt;@app/tests/fixtures/initdb.php&lt;/code&gt; 작업해야합니다. 그렇지 않으면 각 개별 테스트 케이스와 해당 픽스처를 개발하는 데 집중할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2ac11b3a07c31bc117e68d5f641434793fe8a5c" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii\data\ActiveDataProvider&lt;/a&gt; uses the &lt;code&gt;db&lt;/code&gt; application component as the database connection. You may use a different database connection by configuring the &lt;a href=&quot;yii-data-activedataprovider#%24db-detail&quot;&gt;yii\data\ActiveDataProvider::$db&lt;/a&gt; property.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii \ data \ ActiveDataProvider&lt;/a&gt; 는 &lt;code&gt;db&lt;/code&gt; 응용 프로그램 구성 요소를 데이터베이스 연결로 사용합니다. &lt;a href=&quot;yii-data-activedataprovider#%24db-detail&quot;&gt;yii \ data \ ActiveDataProvider :: $ db&lt;/a&gt; 속성 을 구성하여 다른 데이터베이스 연결을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab7c6787defba25f0210100ddceaae1ae6faf208" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith()&lt;/a&gt; will use &lt;code&gt;LEFT JOIN&lt;/code&gt; to join the primary table with the related table. You can specify a different join type (e.g. &lt;code&gt;RIGHT JOIN&lt;/code&gt;) via its third parameter &lt;code&gt;$joinType&lt;/code&gt;. If the join type you want is &lt;code&gt;INNER JOIN&lt;/code&gt;, you can simply call &lt;a href=&quot;yii-db-activequery#innerJoinWith()-detail&quot;&gt;innerJoinWith()&lt;/a&gt;, instead.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith ()&lt;/a&gt; 는 &lt;code&gt;LEFT JOIN&lt;/code&gt; 을 사용 하여 기본 테이블을 관련 테이블과 조인합니다. 세 번째 매개 변수 &lt;code&gt;$joinType&lt;/code&gt; 통해 다른 조인 유형 (예 : &lt;code&gt;RIGHT JOIN&lt;/code&gt; )을 지정할 수 있습니다 . 원하는 조인 유형이 &lt;code&gt;INNER JOIN&lt;/code&gt; 인 경우 대신 &lt;a href=&quot;yii-db-activequery#innerJoinWith()-detail&quot;&gt;innerJoinWith ()&lt;/a&gt; 를 호출 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="b12fab31b0f12f89093031d336c65d6e6b536328" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send()&lt;/a&gt; will use the &quot;mail&quot; application component to send the current message. The &quot;mail&quot; application component should be a mailer instance implementing &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii\mail\MailerInterface&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-mail-basemessage#send()-detail&quot;&gt;send ()&lt;/a&gt; 는 &quot;mail&quot;응용 프로그램 구성 요소를 사용하여 현재 메시지를 보냅니다. &quot;mail&quot;애플리케이션 컴포넌트는 &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;yii \ mail \ MailerInterface를&lt;/a&gt; 구현하는 메일러 인스턴스 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="a418100959dd8f13bd925ca42acb9a372842da22" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii\rbac\PhpManager&lt;/a&gt; stores RBAC data in files under &lt;code&gt;@app/rbac&lt;/code&gt; directory. Make sure the directory and all the files in it are writable by the Web server process if permissions hierarchy needs to be changed online.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-rbac-phpmanager&quot;&gt;yii \ rbac \ PhpManager&lt;/a&gt; 는 RBAC 데이터를 &lt;code&gt;@app/rbac&lt;/code&gt; 디렉토리의 파일에 저장 합니다. 권한 계층 구조를 온라인으로 변경해야하는 경우 웹 서버 프로세스에서 디렉토리와 디렉토리의 모든 파일을 쓸 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="667f3bdad89aada623cf12e2b998e7cddcf15188" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt; provides the following actions:</source>
          <target state="translated">기본적으로 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt; 는 다음 작업을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3b94b73866a0c86d9d1fb82b5a531a7e74ee3705" translate="yes" xml:space="preserve">
          <source>By default, Active Record uses the &lt;code&gt;db&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; as the &lt;a href=&quot;yii-db-connection&quot;&gt;DB connection&lt;/a&gt; to access and manipulate the database data. As explained in &lt;a href=&quot;guide-db-dao&quot;&gt;Database Access Objects&lt;/a&gt;, you can configure the &lt;code&gt;db&lt;/code&gt; component in the application configuration like shown below,</source>
          <target state="translated">기본적으로 Active Record는 &lt;code&gt;db&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;애플리케이션&lt;/a&gt; 에 액세스하고 조작하기 위해 db 애플리케이션 컴포넌트 를 &lt;a href=&quot;yii-db-connection&quot;&gt;DB 연결&lt;/a&gt; 로 사용합니다. &lt;a href=&quot;guide-db-dao&quot;&gt;Database Access Objects에&lt;/a&gt; 설명 된대로 아래와 같이 애플리케이션 구성에서 &lt;code&gt;db&lt;/code&gt; 구성 요소를 구성 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
