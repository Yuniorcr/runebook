<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="c89521b5d695f9f52fd517532436e9316382af31" translate="yes" xml:space="preserve">
          <source>Whether to return a master connection in case there is no slave connection available.</source>
          <target state="translated">사용 가능한 슬레이브 연결이없는 경우 마스터 연결을 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="2a7eb97f0329d902d7417bd5306fec49a9fbbe21" translate="yes" xml:space="preserve">
          <source>Whether to return a single row during each iteration.</source>
          <target state="translated">각 반복 중에 단일 행을 리턴할지 여부</target>
        </trans-unit>
        <trans-unit id="62351e2abda3d75c31b5dfee2083710c4d135d58" translate="yes" xml:space="preserve">
          <source>Whether to return a single row during each iteration. If false, a whole batch of rows will be returned in each iteration.</source>
          <target state="translated">각 반복 중에 단일 행을 리턴할지 여부 False이면 각 반복마다 전체 행 배치가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="74f2aa6a3c17315cfd8d5e0589773caa90fa969a" translate="yes" xml:space="preserve">
          <source>Whether to return component definitions instead of the loaded component instances.</source>
          <target state="translated">로드 된 구성 요소 인스턴스 대신 구성 요소 정의를 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="fdba2e470a3b9db62e69255157e02418835b5ee5" translate="yes" xml:space="preserve">
          <source>Whether to return document and hit occurrence statistics</source>
          <target state="translated">문서를 리턴하고 발생 통계를 히트할지 여부</target>
        </trans-unit>
        <trans-unit id="82cc5aabf1715d3d3bbb074a6fa1bef92e8ada41" translate="yes" xml:space="preserve">
          <source>Whether to return each record as an array.</source>
          <target state="translated">각 레코드를 배열로 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="e550e6b8bb9aa7f794bd8b1af474fae1a1dec08e" translate="yes" xml:space="preserve">
          <source>Whether to return each record as an array. If false (default), an object of &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; will be created to represent each record.</source>
          <target state="translated">각 레코드를 배열로 반환할지 여부 false (기본값) 인 경우 &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;$ modelClass&lt;/a&gt; 의 오브젝트 가 작성되어 각 레코드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73bdc0a9490ef2484169476293972d305bab063e" translate="yes" xml:space="preserve">
          <source>Whether to return objects in terms of associative arrays.</source>
          <target state="translated">연관 배열 측면에서 객체를 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="2ed0f9ad7d3f0c758037a1f14f26c842c9347c73" translate="yes" xml:space="preserve">
          <source>Whether to return the loaded sub-modules only. If this is set &lt;code&gt;false&lt;/code&gt;, then all sub-modules registered in this module will be returned, whether they are loaded or not. Loaded modules will be returned as objects, while unloaded modules as configuration arrays.</source>
          <target state="translated">로드 된 하위 모듈 만 반환할지 여부 이것이 &lt;code&gt;false&lt;/code&gt; 로 설정되면 ,로드 여부에 관계없이이 모듈에 등록 된 모든 서브 모듈이 반환됩니다. 로드 된 모듈은 객체로 반환되고 언로드 된 모듈은 구성 배열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="364af2b24ce741efaa7820801ec59f3f769b3a81" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If &lt;code&gt;true&lt;/code&gt;, the return value will be an array with column name as key and column value as value. If this is &lt;code&gt;false&lt;/code&gt; (default), a scalar value will be returned for non-composite primary key.</source>
          <target state="translated">기본 키 값을 배열로 반환할지 여부 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 값을 키 값과 열 값 컬럼 명을 배열 할 것이다. 이것이 &lt;code&gt;false&lt;/code&gt; (기본값)이면 비 복합 기본 키에 대해 스칼라 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6fc2cc12fed500eea6714dac4b6b61057fd38f87" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If &lt;code&gt;true&lt;/code&gt;, the return value will be an array with column names as keys and column values as values. Note that for composite primary keys, an array will always be returned regardless of this parameter value.</source>
          <target state="translated">기본 키 값을 배열로 반환할지 여부 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 값은 값으로 키 열 값으로서 열 이름으로 배열 될 것이다. 복합 기본 키의 경우이 매개 변수 값에 관계없이 항상 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4cb97791bf2484ff67da3e08305d2d5e668da42c" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If true, the return value will be an array with attribute names as keys and attribute values as values. Note that for composite primary keys, an array will always be returned regardless of this parameter value.</source>
          <target state="translated">기본 키 값을 배열로 반환할지 여부 true 인 경우 반환 값은 속성 이름을 키로, 속성 값을 값으로 갖는 배열입니다. 복합 기본 키의 경우이 매개 변수 값에 관계없이 항상 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d72bbedf6de674923881464b07be4a9a0ed4a341" translate="yes" xml:space="preserve">
          <source>Whether to return the primary key value as an array. If true, the return value will be an array with column name as key and column value as value. If this is &lt;code&gt;false&lt;/code&gt; (default), a scalar value will be returned for non-composite primary key.</source>
          <target state="translated">기본 키 값을 배열로 반환할지 여부 true 인 경우 반환 값은 열 이름이 키이고 열 값이 값인 배열입니다. 이것이 &lt;code&gt;false&lt;/code&gt; (기본값)이면 비 복합 기본 키에 대해 스칼라 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5910af6b3af4944d3db6684c51fe3b1fbca1c639" translate="yes" xml:space="preserve">
          <source>Whether to return the query results in terms of arrays instead of Active Records.</source>
          <target state="translated">쿼리 결과를 활성 레코드 대신 배열로 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8db7884fe4c9d825b3a7e948b3ca2dc146867b7c" translate="yes" xml:space="preserve">
          <source>Whether to return the string in lowercase or not. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">문자열을 소문자로 반환할지 여부입니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22718e932cefe463a907d7d0aaf7e91ec2307676" translate="yes" xml:space="preserve">
          <source>Whether to rotate log files by copy and truncate in contrast to rotation by renaming files.</source>
          <target state="translated">파일 이름을 바꾸어 회전과 달리 복사 및 자르기로 로그 파일을 회전할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="27aa621d6bf819544b37539354733f15f36b8538" translate="yes" xml:space="preserve">
          <source>Whether to rotate log files by copy and truncate in contrast to rotation by renaming files. Defaults to &lt;code&gt;true&lt;/code&gt; to be more compatible with log tailers and is windows systems which do not play well with rename on open files. Rotation by renaming however is a bit faster.</source>
          <target state="translated">파일 이름을 바꾸어 회전과 달리 복사 및 자르기로 로그 파일을 회전할지 여부입니다. 기본적으로 로그 테일러와 더 호환 되도록 &lt;code&gt;true&lt;/code&gt; 로 설정되며 열려있는 파일에서 이름을 바꾸면 제대로 재생되지 않는 Windows 시스템입니다. 그러나 이름을 바꾸면 회전이 조금 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="c75227338e9f969d04256597910235b779c40c08" translate="yes" xml:space="preserve">
          <source>Whether to run the action.</source>
          <target state="translated">조치를 실행할지 여부</target>
        </trans-unit>
        <trans-unit id="e1673c506bdc1b2b89211de5a9f027dcbba6d91a" translate="yes" xml:space="preserve">
          <source>Whether to run the command interactively.</source>
          <target state="translated">대화식으로 명령을 실행할지 여부</target>
        </trans-unit>
        <trans-unit id="2c2ae2a1bcbf89c1ed9d1230db1bc7c41ed2b62d" translate="yes" xml:space="preserve">
          <source>Whether to save email messages as files under &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$fileTransportPath&lt;/a&gt; instead of sending them to the actual recipients.</source>
          <target state="translated">이메일 메시지를 실제 수신자에게 보내는 대신 &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$ fileTransportPath&lt;/a&gt; 아래에 파일로 저장할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="09eead7059656edc179380f0764b8155a445c92f" translate="yes" xml:space="preserve">
          <source>Whether to save email messages as files under &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$fileTransportPath&lt;/a&gt; instead of sending them to the actual recipients. This is usually used during development for debugging purpose.</source>
          <target state="translated">이메일 메시지를 실제 수신자에게 보내는 대신 &lt;a href=&quot;yii-mail-basemailer#%24fileTransportPath-detail&quot;&gt;$ fileTransportPath&lt;/a&gt; 아래에 파일로 저장할지 여부 입니다. 일반적으로 개발 중에 디버깅 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="067b089d1c80aee40664fc598e8e79137ab8ad81" translate="yes" xml:space="preserve">
          <source>Whether to scroll to the first error after validation.</source>
          <target state="translated">유효성 검사 후 첫 번째 오류로 스크롤할지 여부</target>
        </trans-unit>
        <trans-unit id="06ae1722c9afb11c9c73844566053df7b26e5fdd" translate="yes" xml:space="preserve">
          <source>Whether to select distinct rows of data only.</source>
          <target state="translated">고유 한 데이터 행만 선택할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="164e34e74712380df15d0d80e3db1efdc2d3f5de" translate="yes" xml:space="preserve">
          <source>Whether to select distinct rows of data only. If this is set true, the SELECT clause would be changed to SELECT DISTINCT.</source>
          <target state="translated">고유 한 데이터 행만 선택할지 여부입니다. 이것이 true로 설정되면, SELECT 절이 SELECT DISTINCT로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="f205f51a20815970433cc309eeef5139d857d821" translate="yes" xml:space="preserve">
          <source>Whether to send response to the browser or render it as plain text</source>
          <target state="translated">브라우저에 응답을 보내거나 일반 텍스트로 렌더링할지 여부</target>
        </trans-unit>
        <trans-unit id="239f1ce3774b9f2cd10c60c82c0f14273f583672" translate="yes" xml:space="preserve">
          <source>Whether to set all words to uppercase</source>
          <target state="translated">모든 단어를 대문자로 설정할지 여부</target>
        </trans-unit>
        <trans-unit id="2c3bee558b5e8857415c0172332c41a9ade9ff4e" translate="yes" xml:space="preserve">
          <source>Whether to set all words to uppercase or not</source>
          <target state="translated">모든 단어를 대문자로 설정할지 여부</target>
        </trans-unit>
        <trans-unit id="ad6e1953a0404aa3a6bda021b7d7bfe9e78a416f" translate="yes" xml:space="preserve">
          <source>Whether to show an empty list view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider&lt;/a&gt; 가 데이터를 반환하지 않으면 빈 목록보기를 표시할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="9d9750de7275eee2d4e4e42521f0e174613bd482" translate="yes" xml:space="preserve">
          <source>Whether to show an empty list view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data. The default value is false which displays an element according to the &lt;a href=&quot;yii-widgets-baselistview#%24emptyText-detail&quot;&gt;$emptyText&lt;/a&gt; and &lt;a href=&quot;yii-widgets-baselistview#%24emptyTextOptions-detail&quot;&gt;$emptyTextOptions&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider&lt;/a&gt; 가 데이터를 반환하지 않으면 빈 목록보기를 표시할지 여부 입니다. &lt;a href=&quot;yii-widgets-baselistview#%24emptyText-detail&quot;&gt;$ emptyText&lt;/a&gt; 및 &lt;a href=&quot;yii-widgets-baselistview#%24emptyTextOptions-detail&quot;&gt;$ emptyTextOptions&lt;/a&gt; 속성 에 따라 요소를 표시하는 기본값은 false입니다 .</target>
        </trans-unit>
        <trans-unit id="cfae5d5c5c0118732e7baec09816caedb1bbdb24" translate="yes" xml:space="preserve">
          <source>Whether to show entry script name in the constructed URL.</source>
          <target state="translated">생성 된 URL에 입력 스크립트 이름을 표시할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="148465d06f639a66cc856e289c943fdbef6983c9" translate="yes" xml:space="preserve">
          <source>Whether to show entry script name in the constructed URL. Defaults to &lt;code&gt;true&lt;/code&gt;. This property is used only if &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">생성 된 URL에 입력 스크립트 이름을 표시할지 여부입니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 이 속성은 &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt; 이 &lt;code&gt;true&lt;/code&gt; 인 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="633498653ae10601822095ae62c2241860ba177d" translate="yes" xml:space="preserve">
          <source>Whether to show the footer section of the grid table.</source>
          <target state="translated">모눈 테이블의 바닥 글 섹션을 표시할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="cf0d29e473bbb14b2ab6493dea3754087804d6a5" translate="yes" xml:space="preserve">
          <source>Whether to show the grid view if &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; returns no data.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$ dataProvider&lt;/a&gt; 가 데이터를 반환하지 않으면 격자보기를 표시할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="ec3ffb5ac1e2b80cc09b52c476af16f0c5a07d4e" translate="yes" xml:space="preserve">
          <source>Whether to show the header section of the grid table.</source>
          <target state="translated">그리드 테이블의 헤더 섹션을 표시할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e946c0c6e6c53ddd6f9ab60960216539ad8e447a" translate="yes" xml:space="preserve">
          <source>Whether to shuffle &lt;a href=&quot;yii-db-connection#%24masters-detail&quot;&gt;$masters&lt;/a&gt; before getting one.</source>
          <target state="translated">&lt;a href=&quot;yii-db-connection#%24masters-detail&quot;&gt;$ master&lt;/a&gt; 를 받기 전에 섞을 지 여부 .</target>
        </trans-unit>
        <trans-unit id="67db1c4bd20986547b4dbd57553cf30a550f0986" translate="yes" xml:space="preserve">
          <source>Whether to skip empty strings between delimiters. Default is false.</source>
          <target state="translated">구분 기호 사이에 빈 문자열을 건너 뛸지 여부 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="3b1235404139b209ef83536cfb403b0648abc415" translate="yes" xml:space="preserve">
          <source>Whether to skip this behavior when the &lt;code&gt;$owner&lt;/code&gt; has not been modified</source>
          <target state="translated">&lt;code&gt;$owner&lt;/code&gt; 가 수정되지 않은 경우이 동작을 건너 뛸지 여부</target>
        </trans-unit>
        <trans-unit id="958c22ee229c73771d89d9c58ade5e8498c0ba38" translate="yes" xml:space="preserve">
          <source>Whether to skip this validator if the input is empty.</source>
          <target state="translated">입력이 비어있는 경우이 유효성 검사기를 건너 뛸지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="dce30379ca4c973fc4eab125aea2c1e773fae531" translate="yes" xml:space="preserve">
          <source>Whether to skip this validator if the value being validated is empty.</source>
          <target state="translated">유효성을 검사 할 값이 비어있는 경우이 유효성 검사기를 건너 뛸지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="d0ce33d02034039948137ca517d7e963ada69577" translate="yes" xml:space="preserve">
          <source>Whether to skip typecasting of &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 유형 변환을 건너 뛸지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="6373ee2fa66c6f2283c53d93f378eb0b478ee3d7" translate="yes" xml:space="preserve">
          <source>Whether to skip typecasting of &lt;code&gt;null&lt;/code&gt; values. If enabled attribute value which equals to &lt;code&gt;null&lt;/code&gt; will not be type-casted (e.g. &lt;code&gt;null&lt;/code&gt; remains &lt;code&gt;null&lt;/code&gt;), otherwise it will be converted according to the type configured at &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 유형 변환을 건너 뛸지 여부 입니다. &lt;code&gt;null&lt;/code&gt; 에 해당 하는 유효한 속성 값이 형태 캐스트되지 않는 경우 (예를 들어, &lt;code&gt;null&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 유지되는 경우), 그렇지 않은 경우는 &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$ attributeTypes에&lt;/a&gt; 설정된 형태에 따라 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f084ad2e83835cc52923217d64cd2d1396078ab" translate="yes" xml:space="preserve">
          <source>Whether to sort messages by keys when merging new messages with the existing ones.</source>
          <target state="translated">기존 메시지와 새 메시지를 병합 할 때 키별로 메시지를 정렬할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c8e382add76a6f4118a0130a3b956badbaf7d45b" translate="yes" xml:space="preserve">
          <source>Whether to sort messages by keys when merging new messages with the existing ones. Defaults to false, which means the new (untranslated) messages will be separated from the old (translated) ones.</source>
          <target state="translated">기존 메시지와 새 메시지를 병합 할 때 키별로 메시지를 정렬할지 여부입니다. 기본값은 false입니다. 즉, 새 (번역되지 않은) 메시지가 이전 (번역 된) 메시지와 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="d98b9de13badda63035db1bdd8f531fe20ae5050" translate="yes" xml:space="preserve">
          <source>Whether to specially handle AJAX (and PJAX) requests. Defaults to true, meaning if the current request is an AJAX or PJAX request, then calling this method will cause the browser to redirect to the given URL. If this is false, a &lt;code&gt;Location&lt;/code&gt; header will be sent, which when received as an AJAX/PJAX response, may NOT cause browser redirection. Takes effect only when request header &lt;code&gt;X-Ie-Redirect-Compatibility&lt;/code&gt; is absent.</source>
          <target state="translated">AJAX (및 PJAX) 요청을 특별히 처리할지 여부 현재 요청이 AJAX 또는 PJAX 요청 인 경우 기본값은 true이며,이 메소드를 호출하면 브라우저가 지정된 URL로 경로 재 지정됩니다. 이 값이 false 인 경우 AJAX / PJAX 응답으로 수신 될 때 브라우저 리디렉션이 발생하지 않는 &lt;code&gt;Location&lt;/code&gt; 헤더가 전송됩니다. 요청 헤더 &lt;code&gt;X-Ie-Redirect-Compatibility&lt;/code&gt; 가없는 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="79e0933ce304dc84f1a3675ad493ce41f38743fb" translate="yes" xml:space="preserve">
          <source>Whether to stop validation once first error among attribute value elements is detected.</source>
          <target state="translated">속성 값 요소 중 첫 번째 오류가 감지되면 유효성 검증을 중지할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="52d1b1d6dfce770400f2647fdf134b4d08b0b0b2" translate="yes" xml:space="preserve">
          <source>Whether to stop validation once first error among attribute value elements is detected. When enabled validation will produce single error message on attribute, when disabled - multiple error messages mya appear: one per each invalid value. Note that this option will affect only &lt;a href=&quot;yii-validators-eachvalidator#validateAttribute()-detail&quot;&gt;validateAttribute()&lt;/a&gt; value, while &lt;a href=&quot;yii-validators-eachvalidator#validateValue()-detail&quot;&gt;validateValue()&lt;/a&gt; will not be affected.</source>
          <target state="translated">속성 값 요소 중 첫 번째 오류가 감지되면 유효성 검증을 중지할지 여부입니다. 유효성 검사를 활성화하면 속성에 단일 오류 메시지가 생성되고, 비활성화되면 여러 오류 메시지가 나타납니다. 각 잘못된 값당 하나씩. 이 옵션은 &lt;a href=&quot;yii-validators-eachvalidator#validateAttribute()-detail&quot;&gt;validateAttribute ()&lt;/a&gt; 값 에만 영향을주는 반면 &lt;a href=&quot;yii-validators-eachvalidator#validateValue()-detail&quot;&gt;validateValue ()&lt;/a&gt; 는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3db42303325341569645c9077abbc84629652335" translate="yes" xml:space="preserve">
          <source>Whether to throw a &lt;a href=&quot;yii-web-badrequesthttpexception&quot;&gt;yii\web\BadRequestHttpException&lt;/a&gt; if the body is invalid json</source>
          <target state="translated">본문이 유효하지 않은 경우 &lt;a href=&quot;yii-web-badrequesthttpexception&quot;&gt;yii \ web \ BadRequestHttpException&lt;/a&gt; 을 던질 지 여부</target>
        </trans-unit>
        <trans-unit id="4169d6a2ca826605bd03f9a201fa011eca26b65b" translate="yes" xml:space="preserve">
          <source>Whether to throw an exception if &lt;code&gt;$id&lt;/code&gt; is not registered with the locator before.</source>
          <target state="translated">로케이터에 &lt;code&gt;$id&lt;/code&gt; 가 등록되지 않은 경우 예외를 throw할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="754054080fc885eb741bea3ac9e397bac34c26c2" translate="yes" xml:space="preserve">
          <source>Whether to throw an exception if the given alias is invalid. If this is false and an invalid alias is given, false will be returned by this method.</source>
          <target state="translated">지정된 별명이 유효하지 않은 경우 예외를 던질 지 여부. 이것이 거짓이고 유효하지 않은 별명이 주어지면,이 메소드에 의해 거짓이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50981e11399aafcf4dba934f17e83c59c5a5b018" translate="yes" xml:space="preserve">
          <source>Whether to throw exception if the relation does not exist.</source>
          <target state="translated">관계가 존재하지 않는 경우 예외를 던질 지 여부.</target>
        </trans-unit>
        <trans-unit id="135838a42a483bace72a7d98c8f84a2ba14e90ba" translate="yes" xml:space="preserve">
          <source>Whether to treat behaviors' methods as methods of this component</source>
          <target state="translated">행동 컴포넌트를이 컴포넌트의 메소드로 취급할지 여부</target>
        </trans-unit>
        <trans-unit id="59b0432117f400654d0eabe21dc19762cdc15b12" translate="yes" xml:space="preserve">
          <source>Whether to treat behaviors' properties as properties of this component</source>
          <target state="translated">비헤이비어의 속성을이 컴포넌트의 속성으로 취급할지 여부</target>
        </trans-unit>
        <trans-unit id="770da47c262802e72ba197d9e69c77aa1e0e9dfa" translate="yes" xml:space="preserve">
          <source>Whether to treat member variables as properties</source>
          <target state="translated">멤버 변수를 속성으로 취급할지 여부</target>
        </trans-unit>
        <trans-unit id="8f44f468c0f31f2eb18fceb8c59cc3a64b53d403" translate="yes" xml:space="preserve">
          <source>Whether to treat the string being truncated as HTML and preserve proper HTML tags. This parameter is available since version 2.0.1.</source>
          <target state="translated">잘리는 문자열을 HTML로 처리하고 적절한 HTML 태그를 유지할지 여부입니다. 이 매개 변수는 버전 2.0.1부터 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="a7a5d6299ba38efc8fe61880a4ae2db276f6487e" translate="yes" xml:space="preserve">
          <source>Whether to trim each element. Can be:</source>
          <target state="translated">각 요소를 다듬을 지 여부. 가능 :</target>
        </trans-unit>
        <trans-unit id="f1d10f0c6336e9623bd1efeb3116ca84458c963d" translate="yes" xml:space="preserve">
          <source>Whether to turn on or off the integrity check.</source>
          <target state="translated">무결성 검사를 켤지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="855e717797c84852a402a239d60851bf702cdbc4" translate="yes" xml:space="preserve">
          <source>Whether to turn on prepare emulation.</source>
          <target state="translated">에뮬레이션 준비를 켤지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="25fb32008aede1a7882d1d4abc0c190a8948648a" translate="yes" xml:space="preserve">
          <source>Whether to turn on prepare emulation. Defaults to false, meaning PDO will use the native prepare support if available. For some databases (such as MySQL), this may need to be set true so that PDO can emulate the prepare support to bypass the buggy native prepare support. The default value is null, which means the PDO ATTR_EMULATE_PREPARES value will not be changed.</source>
          <target state="translated">에뮬레이션 준비를 켤지 여부입니다. PDO는 기본 준비 지원을 사용할 수있는 경우 기본값을 false로 설정합니다. MySQL과 같은 일부 데이터베이스의 경우 PDO가 버그 지원 기본 준비 지원을 무시하도록 준비 지원을 에뮬레이트 할 수 있도록 true로 설정해야합니다. 기본값은 널입니다. 이는 PDO ATTR_EMULATE_PREPARES 값이 변경되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="761ad58cac36579cbf24429269f34ad707b5d8a7" translate="yes" xml:space="preserve">
          <source>Whether to use JSONP response format.</source>
          <target state="translated">JSONP 응답 형식 사용 여부</target>
        </trans-unit>
        <trans-unit id="32b6af86e3f1aa881da90edb2cf05576d1b7d59e" translate="yes" xml:space="preserve">
          <source>Whether to use JSONP response format. When this is true, the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;response data&lt;/a&gt; must be an array consisting of &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;callback&lt;/code&gt; members. The latter should be a JavaScript function name while the former will be passed to this function as a parameter.</source>
          <target state="translated">JSONP 응답 형식 사용 여부 이것이 사실이면 &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;응답 데이터&lt;/a&gt; 는 &lt;code&gt;data&lt;/code&gt; 와 &lt;code&gt;callback&lt;/code&gt; 멤버 로 구성된 배열이어야합니다 . 후자는 JavaScript 함수 이름이어야하고 전자는이 함수에 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="0b089b762ca6a840cf4b2e94b595d2906b35236c" translate="yes" xml:space="preserve">
          <source>Whether to use a persistent connection.</source>
          <target state="translated">지속적 연결 사용 여부</target>
        </trans-unit>
        <trans-unit id="9c6868e0c341858c826d00d4060c21c88ecfdf5a" translate="yes" xml:space="preserve">
          <source>Whether to use a persistent connection. This is used by memcache only.</source>
          <target state="translated">지속적 연결 사용 여부 이것은 memcache에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="36007c4df263a608242872fdf5caf41e5f5f9be3" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'nonce' parameter in authentication flow.</source>
          <target state="translated">인증 흐름에서 auth 'nonce'매개 변수를 사용하고 유효성을 검사할지 여부</target>
        </trans-unit>
        <trans-unit id="01abfceb99dbe9e5aba0b4b7e7b97a332354f0bb" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'state' parameter in authentication flow.</source>
          <target state="translated">인증 흐름에서 인증 '상태'매개 변수를 사용하고 유효성을 검사할지 여부</target>
        </trans-unit>
        <trans-unit id="fe942b8a0dbc4692f2511610283ec7538d35821c" translate="yes" xml:space="preserve">
          <source>Whether to use and validate auth 'state' parameter in authentication flow. If enabled - the opaque value will be generated and applied to auth URL to maintain state between the request and callback. The authorization server includes this value, when redirecting the user-agent back to the client. The option is used for preventing cross-site request forgery.</source>
          <target state="translated">인증 흐름에서 인증 '상태'매개 변수를 사용하고 유효성을 검사할지 여부 활성화하면 불투명 한 값이 생성되어 인증 URL에 적용되어 요청과 콜백 사이의 상태를 유지합니다. 사용자 에이전트를 다시 클라이언트로 경로 재 지정할 때 권한 부여 서버에이 값이 포함됩니다. 이 옵션은 사이트 간 요청 위조를 방지하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="49a36566fdc1c6a4d9a7719e54da93b7cd89d602" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension.</source>
          <target state="translated">기본 캐싱 확장으로 apcu 또는 apc를 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="adaf16d0cc9822c47465b0813bb6bf3050d160f7" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension. If true, &lt;a href=&quot;http://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt; will be used. If false, &lt;a href=&quot;http://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">기본 캐싱 확장으로 apcu 또는 apc를 사용할지 여부 true이면 &lt;a href=&quot;http://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt; 가 사용됩니다. False이면 &lt;a href=&quot;http://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt; 가 사용됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="33605220b3aa3a4dfd8873b05ddcbc51d0024884" translate="yes" xml:space="preserve">
          <source>Whether to use apcu or apc as the underlying caching extension. If true, &lt;a href=&quot;https://pecl.php.net/package/apcu&quot;&gt;apcu&lt;/a&gt; will be used. If false, &lt;a href=&quot;https://pecl.php.net/package/apc&quot;&gt;apc&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e47945ec41cb3685eff24f242403ee8c7c27e8e" translate="yes" xml:space="preserve">
          <source>Whether to use big-endian when reading and writing an integer.</source>
          <target state="translated">정수를 읽고 쓸 때 빅 엔디안을 사용할지 여부.</target>
        </trans-unit>
        <trans-unit id="3f197d4e12c2eea039ea5c2e94a5cd29bd1a710a" translate="yes" xml:space="preserve">
          <source>Whether to use cookie to persist CSRF token.</source>
          <target state="translated">쿠키를 사용하여 CSRF 토큰을 유지할지 여부</target>
        </trans-unit>
        <trans-unit id="2fcb8ba0a83d9c87d3c34412b80e9652b11e1dae" translate="yes" xml:space="preserve">
          <source>Whether to use cookie to persist CSRF token. If false, CSRF token will be stored in session under the name of &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt;. Note that while storing CSRF tokens in session increases security, it requires starting a session for every page, which will degrade your site performance.</source>
          <target state="translated">쿠키를 사용하여 CSRF 토큰을 유지할지 여부 false 인 경우 CSRF 토큰은 &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$ csrfParam&lt;/a&gt; 이름으로 세션에 저장됩니다 . CSRF 토큰을 세션에 저장하면 보안이 향상되지만 모든 페이지에 대해 세션을 시작해야하므로 사이트 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="f046a633e9c55374bc55efbf1953d401c729a76b" translate="yes" xml:space="preserve">
          <source>Whether to use custom storage.</source>
          <target state="translated">맞춤 스토리지 사용 여부</target>
        </trans-unit>
        <trans-unit id="396decd758ef6f5b8ef7702062b1c6a1439501f4" translate="yes" xml:space="preserve">
          <source>Whether to use error message composed by validator declared via &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$rule&lt;/a&gt; if its validation fails.</source>
          <target state="translated">유효성 검사에 실패한 경우 &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$ rule을&lt;/a&gt; 통해 선언 된 유효성 검사기로 구성된 오류 메시지를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="2b8239c010d660a9161dbed5f223f4abe875fb9c" translate="yes" xml:space="preserve">
          <source>Whether to use error message composed by validator declared via &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$rule&lt;/a&gt; if its validation fails. If enabled, error message specified for this validator itself will appear only if attribute value is not an array. If disabled, own error message value will be used always.</source>
          <target state="translated">유효성 검사에 실패한 경우 &lt;a href=&quot;yii-validators-eachvalidator#%24rule-detail&quot;&gt;$ rule을&lt;/a&gt; 통해 선언 된 유효성 검사기로 구성된 오류 메시지를 사용할지 여부 입니다. 활성화하면이 유효성 검사기 자체에 지정된 오류 메시지가 속성 값이 배열이 아닌 경우에만 나타납니다. 비활성화하면 자체 오류 메시지 값이 항상 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3aca42a0ed0ce34f81dd9be6a06060c72ecc075d" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension.</source>
          <target state="translated">memcached 또는 memcache를 기본 캐싱 확장으로 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="c13cc6cce2d6c6c2b9e5de2f8efe346d2bf46f2c" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension. If true, &lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt; will be used. If false, &lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="translated">memcached 또는 memcache를 기본 캐싱 확장으로 사용할지 여부 true 인 경우 &lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt; 가 사용됩니다. false 인 경우 &lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; 가 사용됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="5f041c5131fad584dcf1bf4c6c17894ba2bb302a" translate="yes" xml:space="preserve">
          <source>Whether to use memcached or memcache as the underlying caching extension. If true, &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt; will be used. If false, &lt;a href=&quot;https://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; will be used. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8949c1f608f6a96a0232a82f525a8e81996c81d2" translate="yes" xml:space="preserve">
          <source>Whether to use session to persist authentication status across multiple requests.</source>
          <target state="translated">세션을 사용하여 여러 요청에서 인증 상태를 유지할지 여부</target>
        </trans-unit>
        <trans-unit id="f6b63fc3d01df1cbbd3c830c4725180aaac5b75d" translate="yes" xml:space="preserve">
          <source>Whether to use session to persist authentication status across multiple requests. You set this property to be &lt;code&gt;false&lt;/code&gt; if your application is stateless, which is often the case for RESTful APIs.</source>
          <target state="translated">세션을 사용하여 여러 요청에서 인증 상태를 유지할지 여부 애플리케이션이 상태 비 저장 인 경우이 특성을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오. 이는 종종 RESTful API의 경우입니다.</target>
        </trans-unit>
        <trans-unit id="f96e79c2430684973ddc9dc17818212a496da2e7" translate="yes" xml:space="preserve">
          <source>Whether to use symbolic link to publish asset files.</source>
          <target state="translated">자산 링크를 게시하기 위해 기호 링크를 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="631ec552b4b274f41e757eafbc2a22773b7f478e" translate="yes" xml:space="preserve">
          <source>Whether to use symbolic link to publish asset files. Defaults to false, meaning asset files are copied to &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;. Using symbolic links has the benefit that the published assets will always be consistent with the source assets and there is no copy operation required. This is especially useful during development.</source>
          <target state="translated">자산 링크를 게시하기 위해 기호 링크를 사용할지 여부 자산 파일이 &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$ basePath에&lt;/a&gt; 복사됨을 의미하는 기본값은 false 입니다. 심볼릭 링크를 사용하면 게시 된 자산이 항상 소스 자산과 일치하며 복사 작업이 필요하지 않다는 이점이 있습니다. 이것은 개발 중에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c8a5407951a3dfa13fc1a9b4f80b8a27a32223ab" translate="yes" xml:space="preserve">
          <source>Whether to use the file extension to determine the MIME type in case &lt;code&gt;finfo_open()&lt;/code&gt; cannot determine it.</source>
          <target state="translated">&lt;code&gt;finfo_open()&lt;/code&gt; 이 파일 확장자를 판별 할 수없는 경우 파일 확장자를 사용하여 MIME 유형을 판별하는지 여부</target>
        </trans-unit>
        <trans-unit id="cd685bd5b00c46cead844b45bc6094c9cbb05efd" translate="yes" xml:space="preserve">
          <source>Whether to use transparent background.</source>
          <target state="translated">투명한 배경 사용 여부</target>
        </trans-unit>
        <trans-unit id="30a050bb48bb59a12a528505798a3c36d9be0718" translate="yes" xml:space="preserve">
          <source>Whether to use transparent background. Defaults to false.</source>
          <target state="translated">투명한 배경 사용 여부 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="74a8318ca45bcad61f3a9c43c52e2e8e4143bcec" translate="yes" xml:space="preserve">
          <source>Whether to validate given attribute orders against &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; and &lt;a href=&quot;yii-data-sort#%24enableMultiSort-detail&quot;&gt;$enableMultiSort&lt;/a&gt;. If validation is enabled incorrect entries will be removed.</source>
          <target state="translated">여부는 대한 지정된 속성 주문의 유효성을 검사 &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$ 속성&lt;/a&gt; 및 &lt;a href=&quot;yii-data-sort#%24enableMultiSort-detail&quot;&gt;$ enableMultiSort을&lt;/a&gt; . 유효성 검사가 활성화되면 잘못된 항목이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3ad1af387f32a35b68029f4917948792950f3143" translate="yes" xml:space="preserve">
          <source>Whether to validate page size.</source>
          <target state="translated">페이지 크기를 확인할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="14fe2a544d10eb815e04254e07013389bb053080" translate="yes" xml:space="preserve">
          <source>Whether to validate required attributes.</source>
          <target state="translated">필수 속성의 유효성을 검사할지 여부</target>
        </trans-unit>
        <trans-unit id="4166cf2e51a299f12b8a51dd016319b08e8ee288" translate="yes" xml:space="preserve">
          <source>Whether to validate the page number. Note that in order to validate the page number, both &lt;a href=&quot;yii-data-pagination#%24validatePage-detail&quot;&gt;$validatePage&lt;/a&gt; and this parameter must be true.</source>
          <target state="translated">페이지 번호의 유효성을 검사할지 여부 페이지 번호의 유효성을 검사하려면 &lt;a href=&quot;yii-data-pagination#%24validatePage-detail&quot;&gt;$ validatePage&lt;/a&gt; 와이 매개 변수가 모두 true 여야합니다.</target>
        </trans-unit>
        <trans-unit id="46e99aa8ebd011e204808fdf000d0c6bf000a0c3" translate="yes" xml:space="preserve">
          <source>Whether to validate/decrypt JWS received with Auth token.</source>
          <target state="translated">인증 토큰으로받은 JWS를 유효성 검증 / 복호화할지 여부</target>
        </trans-unit>
        <trans-unit id="1d388968862e1c842caac3abbf72575a1caa5d91" translate="yes" xml:space="preserve">
          <source>Whether to validate/decrypt JWS received with Auth token. Note: this functionality requires &lt;code&gt;spomky-labs/jose&lt;/code&gt; composer package to be installed. You can disable this option in case of usage of trusted OpenIDConnect provider, however this violates the protocol rules, so you are doing it on your own risk.</source>
          <target state="translated">인증 토큰으로받은 JWS를 유효성 검증 / 복호화할지 여부 참고 :이 기능을 사용하려면 &lt;code&gt;spomky-labs/jose&lt;/code&gt; composer 패키지를 설치해야합니다. 신뢰할 수있는 OpenIDConnect 공급자를 사용하는 경우이 옵션을 비활성화 할 수 있지만 프로토콜 규칙을 위반하므로 사용자가 위험을 감수해야합니다.</target>
        </trans-unit>
        <trans-unit id="9aa2caca5dce6b9bed5600c93c510952260e8506" translate="yes" xml:space="preserve">
          <source>Whether to verify the peer's certificate.</source>
          <target state="translated">피어의 인증서를 확인할지 여부</target>
        </trans-unit>
        <trans-unit id="7755beb2119acf6fab15c13ca412dd85ff7a62fe" translate="yes" xml:space="preserve">
          <source>Whether to wrap the &lt;code&gt;GridView&lt;/code&gt; or &lt;code&gt;ListView&lt;/code&gt; widget with the &lt;code&gt;yii\widgets\Pjax&lt;/code&gt; widget</source>
          <target state="translated">&lt;code&gt;yii\widgets\Pjax&lt;/code&gt; 위젯으로 &lt;code&gt;GridView&lt;/code&gt; 또는 &lt;code&gt;ListView&lt;/code&gt; 위젯 을 랩핑할지 여부</target>
        </trans-unit>
        <trans-unit id="46646287efa50376022d9fc2afb76a3353e20ffc" translate="yes" xml:space="preserve">
          <source>Whether trailing slash should be normalized according to the suffix settings of the rule</source>
          <target state="translated">규칙의 접미사 설정에 따라 후행 슬래시를 정규화해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="ed3b3af16468371a67e6db847d7323d8a5220c0f" translate="yes" xml:space="preserve">
          <source>Whether transparent sid support is enabled or not, defaults to false.</source>
          <target state="translated">투명한 sid 지원 사용 여부는 기본적으로 false입니다.</target>
        </trans-unit>
        <trans-unit id="a96d5cc841b2def86ad147ec95aaf6c76688f158" translate="yes" xml:space="preserve">
          <source>Whether transparent sid support is enabled or not.</source>
          <target state="translated">투명한 sid 지원 사용 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6fd0026b774d9fb60339336e4a0ed0a291f1098d" translate="yes" xml:space="preserve">
          <source>Whether user confirmed</source>
          <target state="translated">사용자 확인 여부</target>
        </trans-unit>
        <trans-unit id="cfed50da24c3e13583ba9f28d56d9dd087d7f9c1" translate="yes" xml:space="preserve">
          <source>Whether user confirmed. Will return true if &lt;a href=&quot;yii-console-controller#%24interactive-detail&quot;&gt;$interactive&lt;/a&gt; is false.</source>
          <target state="translated">사용자가 확인했는지 여부 &lt;a href=&quot;yii-console-controller#%24interactive-detail&quot;&gt;$ interactive&lt;/a&gt; 가 false 인 경우 true를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4fd56daef6ed7988873680b19b8b034fea879c7b" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names).</source>
          <target state="translated">유효성 검사 프로세스에서 IDN (다국어 도메인 이름)을 고려해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="c7e882f39f6d9049ee9aca59adacbda510a57ebb" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names). Defaults to false meaning that validation of URLs containing IDN will always fail. Note that in order to use IDN validation you have to install and enable &lt;code&gt;intl&lt;/code&gt; PHP extension, otherwise an exception would be thrown.</source>
          <target state="translated">유효성 검사 프로세스에서 IDN (다국어 도메인 이름)을 고려해야하는지 여부 IDN을 포함하는 URL의 유효성 검사는 항상 실패한다는 것을 의미하는 기본값은 false입니다. IDN 유효성 검사를 사용하려면 &lt;code&gt;intl&lt;/code&gt; PHP 확장 을 설치하고 활성화해야 합니다. 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9fc17b7d9d806882121478ace3b5fb0bb1d7760" translate="yes" xml:space="preserve">
          <source>Whether validation process should take into account IDN (internationalized domain names). Defaults to false meaning that validation of emails containing IDN will always fail. Note that in order to use IDN validation you have to install and enable &lt;code&gt;intl&lt;/code&gt; PHP extension, otherwise an exception would be thrown.</source>
          <target state="translated">유효성 검사 프로세스에서 IDN (다국어 도메인 이름)을 고려해야하는지 여부 IDN을 포함하는 이메일의 유효성 검사는 항상 실패한다는 것을 의미하는 기본값은 false입니다. IDN 유효성 검사를 사용하려면 &lt;code&gt;intl&lt;/code&gt; PHP 확장 을 설치하고 활성화해야 합니다. 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="459b22ca830c44a11fe710e1a01c240784329118" translate="yes" xml:space="preserve">
          <source>Whether value is checked or not.</source>
          <target state="translated">값 확인 여부</target>
        </trans-unit>
        <trans-unit id="d8ae1004a7366dbc01d002af06aff04fd4f0f75d" translate="yes" xml:space="preserve">
          <source>Whether you should generate the content for caching. False if the cached version is available.</source>
          <target state="translated">캐싱 할 컨텐츠를 생성해야하는지 여부 캐시 된 버전을 사용할 수 있으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="cab8ee5923b49a774a0c77258c1ba6fdfd572e04" translate="yes" xml:space="preserve">
          <source>Which generates a &lt;a href=&quot;yii-widgets-pjax&quot;&gt;Pjax&lt;/a&gt; widget wrapping the &lt;a href=&quot;yii-grid-gridview&quot;&gt;GridView&lt;/a&gt; or &lt;a href=&quot;yii-widgets-listview&quot;&gt;ListView&lt;/a&gt; widgets.</source>
          <target state="translated">&lt;a href=&quot;yii-grid-gridview&quot;&gt;GridView&lt;/a&gt; 또는 &lt;a href=&quot;yii-widgets-listview&quot;&gt;ListView&lt;/a&gt; 위젯을 랩핑 하는 &lt;a href=&quot;yii-widgets-pjax&quot;&gt;Pjax&lt;/a&gt; 위젯을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="2190e6427b4480e864be549307878e2677b05bbf" translate="yes" xml:space="preserve">
          <source>Which page of articles will be returned in the above example? It depends on whether a query parameter named &lt;code&gt;page&lt;/code&gt; is given. By default, the pagination will attempt to set the &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;current page&lt;/a&gt; to be the value of the &lt;code&gt;page&lt;/code&gt; parameter. If the parameter is not provided, then it will default to 0.</source>
          <target state="translated">위 예제에서 어떤 기사 페이지가 반환됩니까? &lt;code&gt;page&lt;/code&gt; 라는 조회 매개 변수 가 제공 되는지 여부에 따라 다릅니다 . 기본적으로 페이지 매김은 &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;현재 페이지&lt;/a&gt; 를 &lt;code&gt;page&lt;/code&gt; 매개 변수 의 값으로 설정하려고 시도합니다 . 매개 변수가 제공되지 않으면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="91cea9cc85fd609cfe474d77a1eb7d7c729ea206" translate="yes" xml:space="preserve">
          <source>While behaviors are similar to &lt;a href=&quot;http://www.php.net/traits&quot;&gt;traits&lt;/a&gt; in that they both &quot;inject&quot; their properties and methods to the primary class, they differ in many aspects. As explained below, they both have pros and cons. They are more like complements to each other rather than alternatives.</source>
          <target state="translated">행동은 특성과 방법을 기본 클래스에 &quot;주입&quot;한다는 점에서 &lt;a href=&quot;http://www.php.net/traits&quot;&gt;특성&lt;/a&gt; 과 유사하지만 여러 측면에서 다릅니다. 아래에서 설명 하듯이 장단점이 있습니다. 그것들은 대안이 아니라 서로 보완하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23aa393365637e1e864d9299df5f8568da7bdea6" translate="yes" xml:space="preserve">
          <source>While collections can be represented as arrays, it is usually more desirable to represent them as &lt;a href=&quot;guide-output-data-providers&quot;&gt;data providers&lt;/a&gt;. This is because data providers support sorting and pagination of resources, which is a commonly needed feature for RESTful APIs returning collections. For example, the following action returns a data provider about the post resources:</source>
          <target state="translated">컬렉션은 배열로 표현 될 수 있지만 일반적으로 &lt;a href=&quot;guide-output-data-providers&quot;&gt;데이터 공급자&lt;/a&gt; 로 표현하는 것이 더 바람직합니다 . 이는 데이터 제공자가 자원의 정렬 및 페이지 매김을 지원하기 때문입니다. 이는 콜렉션을 리턴하는 RESTful API에 일반적으로 필요한 기능입니다. 예를 들어 다음 작업은 게시 리소스에 대한 데이터 공급자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a9cbbda878853303089b0dc4451f82cfb3c8ba5f" translate="yes" xml:space="preserve">
          <source>While command line options allow us to configure the migration command on-the-fly, sometimes we may want to configure the command once for all. For example you can configure different migration path as follows:</source>
          <target state="translated">명령 줄 옵션을 사용하면 마이그레이션 명령을 즉시 구성 할 수 있지만 때로는 명령을 모두 한 번 구성해야 할 수도 있습니다. 예를 들어 다음과 같이 다른 마이그레이션 경로를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ac6648c51889e0d050ee982eb19b4dc3dfb31f1" translate="yes" xml:space="preserve">
          <source>While components are very powerful, they are a bit heavier than normal objects, due to the fact that it takes extra memory and CPU time to support &lt;a href=&quot;guide-concept-events&quot;&gt;event&lt;/a&gt; and &lt;a href=&quot;guide-concept-behaviors&quot;&gt;behavior&lt;/a&gt; functionality in particular. If your components do not need these two features, you may consider extending your component class from &lt;a href=&quot;yii-base-object&quot;&gt;yii\base\Object&lt;/a&gt; instead of &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt;. Doing so will make your components as efficient as normal PHP objects, but with added support for &lt;a href=&quot;guide-concept-properties&quot;&gt;properties&lt;/a&gt;.</source>
          <target state="translated">구성 요소는 매우 강력하지만 특히 &lt;a href=&quot;guide-concept-events&quot;&gt;이벤트&lt;/a&gt; 및 &lt;a href=&quot;guide-concept-behaviors&quot;&gt;동작&lt;/a&gt; 기능 을 지원하는 데 추가 메모리와 CPU 시간이 필요하기 때문에 일반 개체보다 약간 무겁습니다 . 구성 요소에이 두 기능이 필요하지 않은 경우 &lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt; 대신 &lt;a href=&quot;yii-base-object&quot;&gt;yii \ base \ Object&lt;/a&gt; 에서 구성 요소 클래스를 확장 할 수 있습니다 . 그렇게하면 컴포넌트를 일반 PHP 객체처럼 효율적으로 만들 수 있지만 &lt;a href=&quot;guide-concept-properties&quot;&gt;properties&lt;/a&gt; 지원이 추가 됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e72799df6252c18c250f6a52facefccd8b6f0c3" translate="yes" xml:space="preserve">
          <source>While declaring a relation, you should specify the following information:</source>
          <target state="translated">관계를 선언하는 동안 다음 정보를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="da7cbdd5bb8deaaa1e0fcf6e1d0bf6cd2260dc51" translate="yes" xml:space="preserve">
          <source>While extending this class you should use &lt;a href=&quot;yii-web-multifieldsession#composeFields()-detail&quot;&gt;composeFields()&lt;/a&gt; method - while writing the session data into the storage and &lt;a href=&quot;yii-web-multifieldsession#extractData()-detail&quot;&gt;extractData()&lt;/a&gt; - while reading session data from the storage.</source>
          <target state="translated">이 클래스를 확장하는 동안 당신은 사용해야 &lt;a href=&quot;yii-web-multifieldsession#composeFields()-detail&quot;&gt;composeFields ()&lt;/a&gt; 메소드를 - 저장 및에 세션 데이터를 쓰는 동안 &lt;a href=&quot;yii-web-multifieldsession#extractData()-detail&quot;&gt;extractData ()&lt;/a&gt; - 저장에서 세션 데이터를 읽는 동안.</target>
        </trans-unit>
        <trans-unit id="058845bb7318a903a1f78f0b79e4c038d7f53872" translate="yes" xml:space="preserve">
          <source>While not required, it is recommended that you develop your RESTful APIs as a separate application, different from your Web front end and back end for easier maintenance.</source>
          <target state="translated">필수는 아니지만 유지 관리를 쉽게하기 위해 RESTful API를 웹 프론트 엔드 및 백엔드와 다른 별도의 애플리케이션으로 개발하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="49a39f2723bd7a6ab7e1301fb22c82ae42728e57" translate="yes" xml:space="preserve">
          <source>While operating namespaced migrations: creating new, reverting and so on, you should specify full namespace before migration name. Note that backslash (&lt;code&gt;\&lt;/code&gt;) symbol is usually considered a special character in the shell, so you need to escape it properly to avoid shell errors or incorrect behavior. For example:</source>
          <target state="translated">네임 스페이스 마이그레이션을 운영하는 동안 : 새로 만들기, 되돌리기 등을 수행하는 경우 마이그레이션 이름 앞에 전체 네임 스페이스를 지정해야합니다. 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; ) 기호는 일반적으로 셸에서 특수 문자로 간주되므로 셸 오류나 잘못된 동작을 피하려면 올바르게 이스케이프해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="703eb2920b33fa5508876fd8c09ded149c181465" translate="yes" xml:space="preserve">
          <source>While performing complex DB migrations, it is important to ensure each migration to either succeed or fail as a whole so that the database can maintain integrity and consistency. To achieve this goal, it is recommended that you enclose the DB operations of each migration in a &lt;a href=&quot;guide-db-dao#performing-transactions&quot;&gt;transaction&lt;/a&gt;.</source>
          <target state="translated">복잡한 DB 마이그레이션을 수행하는 동안 데이터베이스가 무결성과 일관성을 유지할 수 있도록 각 마이그레이션이 전체적으로 성공 또는 실패하는지 확인하는 것이 중요합니다. 이 목표를 달성하려면 각 마이그레이션의 DB 작업을 &lt;a href=&quot;guide-db-dao#performing-transactions&quot;&gt;트랜잭션&lt;/a&gt; 에 포함하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="418659a3e370787740509218db4eddc996310b6a" translate="yes" xml:space="preserve">
          <source>While retrieving data in terms of Active Record objects is convenient and flexible, it is not always desirable when you have to bring back a large amount of data due to the big memory footprint. In this case, you can retrieve data using PHP arrays by calling &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray()&lt;/a&gt; before executing a query method:</source>
          <target state="translated">Active Record 개체 측면에서 데이터를 검색하는 것이 편리하고 유연하지만 메모리 공간이 커서 대량의 데이터를 가져와야하는 경우 항상 바람직하지는 않습니다. 이 경우 쿼리 메소드를 실행하기 전에 &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray ()&lt;/a&gt; 를 호출하여 PHP 배열을 사용하여 데이터를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53c56ad62ca4ffe6e8929cf91322f7dc6ac45c2d" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;basic&lt;/a&gt; and &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;advanced&lt;/a&gt; project templates are great for most of your needs, you may want to create your own project template with which to start your projects.</source>
          <target state="translated">그동안 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-basic&quot;&gt;기본&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced&quot;&gt;고급&lt;/a&gt; 프로젝트 템플릿은 사용자의 요구의 대부분을 위해 중대하다, 당신은 당신의 프로젝트를 시작하는 당신의 자신의 프로젝트 템플릿을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="488e5acceea0fd6213782c7e277a8f5034755a5d" translate="yes" xml:space="preserve">
          <source>While the response body can be set explicitly as shown above, in most cases you may set it implicitly by the return value of &lt;a href=&quot;guide-structure-controllers&quot;&gt;action&lt;/a&gt; methods. A common use case is like the following:</source>
          <target state="translated">응답 본문은 위에 표시된대로 명시 적으로 설정할 수 있지만 대부분의 경우 &lt;a href=&quot;guide-structure-controllers&quot;&gt;조치&lt;/a&gt; 메소드 의 리턴 값으로 내재적으로 설정할 수 있습니다 . 일반적인 사용 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="37f8ca2ac9741a7c099e9a2922e9db3041f1f003" translate="yes" xml:space="preserve">
          <source>While the test first approach described above makes sense for long term and relatively complex projects it could be overkill for simpler ones. There are some indicators of when it's appropriate:</source>
          <target state="translated">위에서 설명한 첫 번째 테스트 방법은 장기적이고 상대적으로 복잡한 프로젝트에 적합하지만 더 간단한 프로젝트에는 무리가있을 수 있습니다. 적절한시기에 대한 몇 가지 지표가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd0866e89adb5ec57adadb53a58de549f98050df" translate="yes" xml:space="preserve">
          <source>While there is no restriction in how to represent a resource, in Yii you usually would represent resources in terms of objects of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; or its child classes (e.g. &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;), for the following reasons:</source>
          <target state="translated">리소스를 표현하는 방법에는 제한이 없지만, Yii에서는 일반적으로 다음과 같은 이유로 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 또는 해당 자식 클래스 (예 : &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt; ) 의 객체로 리소스를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="25293b48cb0c3c9cf1b98bcac075f72d980bd732" translate="yes" xml:space="preserve">
          <source>While translating a message containing placeholders, you should leave the placeholders as is. This is because the placeholders will be replaced with the actual values when you call &lt;code&gt;Yii::t()&lt;/code&gt; to translate a message.</source>
          <target state="translated">자리 표시자가 포함 된 메시지를 번역하는 동안 자리 표시자는 그대로 둡니다. 메시지를 번역하기 위해 &lt;code&gt;Yii::t()&lt;/code&gt; 를 호출하면 자리 표시자가 실제 값으로 대체되기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="482591f248063210d75260903482293534b71cf0" translate="yes" xml:space="preserve">
          <source>Widget Configurations</source>
          <target state="translated">위젯 구성</target>
        </trans-unit>
        <trans-unit id="85aba13ed51d3d3056a7bd9fbc9c958408d0ff8a" translate="yes" xml:space="preserve">
          <source>Widget declarations</source>
          <target state="translated">위젯 선언</target>
        </trans-unit>
        <trans-unit id="312cebe45503d8085bd2d9f729d3c0fc71c14b63" translate="yes" xml:space="preserve">
          <source>Widget is the base class for widgets.</source>
          <target state="translated">위젯은 위젯의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5b78f8abff763821bb5d645ad47188f1387890ad" translate="yes" xml:space="preserve">
          <source>WidgetEvent represents the event parameter used for a widget event.</source>
          <target state="translated">WidgetEvent는 위젯 이벤트에 사용되는 이벤트 매개 변수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="cffd2384691af3d453dc3379c940f70f8670b254" translate="yes" xml:space="preserve">
          <source>Widgets are an object-oriented way of reusing view code.</source>
          <target state="translated">위젯은 뷰 코드를 재사용하는 객체 지향 방식입니다.</target>
        </trans-unit>
        <trans-unit id="ef94fdd03b167e0f663e177021f511f940f6e32b" translate="yes" xml:space="preserve">
          <source>Widgets are primarily used in &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt;. You can call the &lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii\base\Widget::widget()&lt;/a&gt; method to use a widget in a view. The method takes a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; array for initializing the widget and returns the rendering result of the widget. For example, the following code inserts a date picker widget which is configured to use the Russian language and keep the input in the &lt;code&gt;from_date&lt;/code&gt; attribute of &lt;code&gt;$model&lt;/code&gt;.</source>
          <target state="translated">위젯은 주로 &lt;a href=&quot;guide-structure-views&quot;&gt;뷰&lt;/a&gt; 에서 사용됩니다 . &lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii \ base \ Widget :: widget ()&lt;/a&gt; 메소드를 호출하여 보기에서 위젯을 사용할 수 있습니다. 이 메소드는 위젯을 초기화하기위한 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 배열을 사용하여 위젯의 렌더링 결과를 리턴합니다. 예를 들어, 다음 코드는 러시아어를 사용하고 &lt;code&gt;$model&lt;/code&gt; 의 &lt;code&gt;from_date&lt;/code&gt; 속성에 입력을 유지하도록 구성된 날짜 선택기 위젯을 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="4e498e47e752b7197d9cf3ccb8fc27f0555a8039" translate="yes" xml:space="preserve">
          <source>Widgets are reusable building blocks used in &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt; to create complex and configurable user interface elements in an object-oriented fashion. For example, a date picker widget may generate a fancy date picker that allows users to pick a date as their input. All you need to do is just to insert the code in a view like the following:</source>
          <target state="translated">위젯은 &lt;a href=&quot;guide-structure-views&quot;&gt;뷰&lt;/a&gt; 에서 사용되는 재사용 가능한 빌딩 블록 으로, 객체 지향 방식으로 복잡하고 구성 가능한 사용자 인터페이스 요소를 생성합니다. 예를 들어, 날짜 선택기 위젯은 사용자가 날짜를 입력으로 선택할 수있는 멋진 날짜 선택기를 생성 할 수 있습니다. 다음과 같은 뷰에 코드를 삽입하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9791f4d49784b8392afe2bd57d8eb6c2dced5633" translate="yes" xml:space="preserve">
          <source>Widgets should be designed to be self-contained. That is, when using a widget, you should be able to just drop it in a view without doing anything else. This could be tricky if a widget requires external resources, such as CSS, JavaScript, images, etc. Fortunately, Yii provides the support for &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt;, which can be utilized to solve the problem.</source>
          <target state="translated">위젯은 독립적으로 설계되어야합니다. 즉, 위젯을 사용할 때 다른 작업을 수행하지 않고보기에 위젯을 놓을 수 있어야합니다. 위젯에 CSS, JavaScript, 이미지 등과 같은 외부 리소스가 필요한 경우 까다로울 수 있습니다. 다행히 Yii는 &lt;a href=&quot;guide-structure-assets&quot;&gt;자산 번들에&lt;/a&gt; 대한 지원을 제공 하여 문제를 해결하는 데 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cff755ecf76ecdf453b2da07c06d82632557ebe" translate="yes" xml:space="preserve">
          <source>Wildcard for name of the indexes to be dropped.</source>
          <target state="translated">삭제 될 인덱스 이름의 와일드 카드.</target>
        </trans-unit>
        <trans-unit id="6cfab8bd9110fe306384006b86b7980ed701ffe6" translate="yes" xml:space="preserve">
          <source>Wildcard for name of the indexes to be dropped. You can use &lt;code&gt;*&lt;/code&gt; to drop all indexes.</source>
          <target state="translated">삭제 될 인덱스 이름의 와일드 카드. &lt;code&gt;*&lt;/code&gt; 를 사용 하여 모든 인덱스를 삭제할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47012c3373245303d8c36f7288bad5c7bad68c8a" translate="yes" xml:space="preserve">
          <source>Will be prefixed to the formatted duration, when it is negative. Defaults to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">음수 인 경우 서식이 지정된 지속 시간이 접두사로 사용됩니다. 기본값은 &lt;code&gt;-&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="228b47e253230a96ed54e8b98e7817a0f4b0509c" translate="yes" xml:space="preserve">
          <source>Will be used to concatenate duration parts. Defaults to &lt;code&gt;, &lt;/code&gt;.</source>
          <target state="translated">지속 시간 부분을 연결하는 데 사용됩니다. 기본값은 &lt;code&gt;, &lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee242b5c836fdaebe8bfca1d26b69f3c9e3b62d0" translate="yes" xml:space="preserve">
          <source>Will return a string formatted with the given ANSI style</source>
          <target state="translated">주어진 ANSI 스타일로 포맷 된 문자열을 반환합니다</target>
        </trans-unit>
        <trans-unit id="64a0eb6c9100d5ea682e9ffccdd013605c0682da" translate="yes" xml:space="preserve">
          <source>Will show a cursor again when it has been hidden by &lt;a href=&quot;yii-helpers-baseconsole#hideCursor()-detail&quot;&gt;hideCursor()&lt;/a&gt; by sending ANSI DECTCEM code ?25h to the terminal.</source>
          <target state="translated">ANSI DECTCEM 코드? 25h를 터미널에 보내서 &lt;a href=&quot;yii-helpers-baseconsole#hideCursor()-detail&quot;&gt;hideCursor ()에&lt;/a&gt; 의해 커서가 숨겨진 경우 다시 커서를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="4ccc342c8167185214b24a1f8f94151f16c75446" translate="yes" xml:space="preserve">
          <source>WinCache provides Windows Cache caching in terms of an application component.</source>
          <target state="translated">WinCache는 응용 프로그램 구성 요소 측면에서 Windows 캐시 캐싱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6c6346a9a8cdad51da6b1425d043e4364c0a2100" translate="yes" xml:space="preserve">
          <source>Wiring Up</source>
          <target state="translated">배선</target>
        </trans-unit>
        <trans-unit id="b0736768bcf581ba0e50c14871bca0312475c202" translate="yes" xml:space="preserve">
          <source>With Composer installed, you can install Yii application template by running the following command under a Web-accessible folder:</source>
          <target state="translated">Composer가 설치된 상태에서 웹 액세스 가능 폴더에서 다음 명령을 실행하여 Yii 애플리케이션 템플리트를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dc1c463f733d321131852c23eab1829438d6dab" translate="yes" xml:space="preserve">
          <source>With a fully specified &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object, you can retrieve and display data partially. For example, if you are fetching data from a database, you can specify the &lt;code&gt;OFFSET&lt;/code&gt; and &lt;code&gt;LIMIT&lt;/code&gt; clause of the DB query with the corresponding values provided by the pagination. Below is an example,</source>
          <target state="translated">완전히 지정된 &lt;a href=&quot;yii-data-pagination&quot;&gt;yii \ data \ Pagination&lt;/a&gt; 객체를 사용하면 데이터를 부분적으로 검색하고 표시 할 수 있습니다. 예를 들어 데이터베이스에서 데이터를 가져 오는 경우 페이지 매김에서 제공하는 해당 값으로 DB 쿼리 의 &lt;code&gt;OFFSET&lt;/code&gt; 및 &lt;code&gt;LIMIT&lt;/code&gt; 절을 지정할 수 있습니다 . 아래는 예입니다.</target>
        </trans-unit>
        <trans-unit id="4c0b1f9d3c4c32db8610bb589e3b76e5e7d80a0d" translate="yes" xml:space="preserve">
          <source>With index and column names</source>
          <target state="translated">색인 및 열 이름</target>
        </trans-unit>
        <trans-unit id="47f73f3e3d93c486e03272513bd9fbeb84805c48" translate="yes" xml:space="preserve">
          <source>With multi-field data storage, session data can be split between several fields in the storage record. Using such a storage allows saving particular session data into separated field, which then can be used to manipulate sessions in the way plain PHP does not allow.</source>
          <target state="translated">다중 필드 데이터 스토리지를 사용하면 세션 레코드를 스토리지 레코드의 여러 필드로 분할 할 수 있습니다. 이러한 스토리지를 사용하면 특정 세션 데이터를 별도의 필드에 저장하여 일반 PHP에서 허용하지 않는 방식으로 세션을 조작하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1f077a86de9c0dde876ddb8db00e3ff36bdeb00" translate="yes" xml:space="preserve">
          <source>With resource and controller classes ready, you can access the resources using the URL like &lt;code&gt;http://localhost/index.php?r=user/create&lt;/code&gt;, similar to what you can do with normal Web applications.</source>
          <target state="translated">리소스 및 컨트롤러 클래스가 준비되면 일반 웹 응용 프로그램에서 수행 할 수있는 것과 유사한 &lt;code&gt;http://localhost/index.php?r=user/create&lt;/code&gt; 와 같은 URL을 사용하여 리소스에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca6a4c45b4c63d7c517068947ee335d7451a8d3d" translate="yes" xml:space="preserve">
          <source>With that code in place, if you have a &lt;code&gt;User&lt;/code&gt; object and try to save it, you will find its &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; are automatically filled with the current UNIX timestamp:</source>
          <target state="translated">해당 코드를 사용하여 &lt;code&gt;User&lt;/code&gt; 객체가 있고 저장하려고하면 &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; 가 현재 UNIX 타임 스탬프로 자동으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="463104f4ad8315e9371caf925e8f206caaafdcab" translate="yes" xml:space="preserve">
          <source>With the above code you can use the &lt;a href=&quot;http://getbootstrap.com/components/#alerts&quot;&gt;bootstrap alert&lt;/a&gt; classes such as &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;danger&lt;/code&gt; as the flash message key to influence the color of the div.</source>
          <target state="translated">위의 코드를 사용 하면 div의 색상에 영향을주기 위해 플래시 메시지 키로 &lt;code&gt;success&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;danger&lt;/code&gt; 같은 &lt;a href=&quot;http://getbootstrap.com/components/#alerts&quot;&gt;부트 스트랩 경고&lt;/a&gt; 클래스를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc6328414ddb38769ea0f179fb43bcba6887c1cd" translate="yes" xml:space="preserve">
          <source>With the above code you can use the &lt;a href=&quot;https://getbootstrap.com/components/#alerts&quot;&gt;bootstrap alert&lt;/a&gt; classes such as &lt;code&gt;success&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;danger&lt;/code&gt; as the flash message key to influence the color of the div.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927db2964d2a977e88901a84adc25e2cc169ce06" translate="yes" xml:space="preserve">
          <source>With the above code, any calls to &lt;code&gt;bar()&lt;/code&gt; will trigger an event named &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">위 코드를 사용하면 &lt;code&gt;bar()&lt;/code&gt; 호출하면 &lt;code&gt;hello&lt;/code&gt; 라는 이벤트가 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="b24213199bc05ef499c173163ad16bc81ffa0722" translate="yes" xml:space="preserve">
          <source>With the above configuration, each time you run the migration command, the &lt;code&gt;backend_migration&lt;/code&gt; table will be used to record the migration history. You no longer need to specify it via the &lt;code&gt;migrationTable&lt;/code&gt; command-line option.</source>
          <target state="translated">위의 구성에서 마이그레이션 명령을 실행할 때마다 &lt;code&gt;backend_migration&lt;/code&gt; 테이블이 마이그레이션 기록을 기록하는 데 사용됩니다. 더 이상 &lt;code&gt;migrationTable&lt;/code&gt; 명령 줄 옵션을 통해 지정할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3dfc6373d949b173d344071de3bcc585e4edaaab" translate="yes" xml:space="preserve">
          <source>With the above configuration, the &lt;code&gt;site/offline&lt;/code&gt; action will be used to handle all incoming requests.</source>
          <target state="translated">위의 구성에서 &lt;code&gt;site/offline&lt;/code&gt; 작업은 모든 들어오는 요청을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bfc9144b9aabd0ca3d4df9e01662c27fb081d4ff" translate="yes" xml:space="preserve">
          <source>With the above configuration, the asset manager will create a symbolic link to the source path of an asset bundle when it is being published. This is faster than file copying and can also ensure that the published assets are always up-to-date.</source>
          <target state="translated">위 구성을 통해 자산 관리자는 자산 번들이 게시 될 때 자산 번들의 소스 경로에 대한 심볼릭 링크를 만듭니다. 이는 파일 복사보다 빠르며 게시 된 자산이 항상 최신 상태인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="313f5ff3c204461e99e6d9ff67d23266ed1888c1" translate="yes" xml:space="preserve">
          <source>With the above configuration, the number of source code lines to be displayed in exception pages will be up to 20.</source>
          <target state="translated">위의 구성에서 예외 페이지에 표시되는 소스 코드 행 수는 최대 20 개입니다.</target>
        </trans-unit>
        <trans-unit id="e4b220371cd89a7e68de2951420c4a8f0af25ce3" translate="yes" xml:space="preserve">
          <source>With the above configuration, you will be able to access GiiModule in your browser using the URL &lt;code&gt;http://localhost/path/to/index.php?r=gii&lt;/code&gt;</source>
          <target state="translated">위의 구성을 사용하면 URL &lt;code&gt;http://localhost/path/to/index.php?r=gii&lt;/code&gt; 사용하여 브라우저에서 GiiModule에 액세스 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="619eb939bee483228abab3e537fee7889c85b221" translate="yes" xml:space="preserve">
          <source>With the above minimal amount of effort, you have already finished your task of creating the RESTful APIs for accessing the user data. The APIs you have created include:</source>
          <target state="translated">위의 최소한의 노력으로 이미 사용자 데이터에 액세스하기위한 RESTful API 작성 태스크를 완료했습니다. 생성 한 API는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c84e03471ba45ace864b8c098f5cee74e3fe421" translate="yes" xml:space="preserve">
          <source>With the authorization data ready, access check is as simple as a call to the &lt;a href=&quot;yii-rbac-checkaccessinterface#checkAccess()-detail&quot;&gt;yii\rbac\ManagerInterface::checkAccess()&lt;/a&gt; method. Because most access check is about the current user, for convenience Yii provides a shortcut method &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;, which can be used like the following:</source>
          <target state="translated">인증 데이터가 준비되면 액세스 확인은 &lt;a href=&quot;yii-rbac-checkaccessinterface#checkAccess()-detail&quot;&gt;yii \ rbac \ ManagerInterface :: checkAccess ()&lt;/a&gt; 메서드를 호출하는 것만 큼 간단 합니다. 대부분의 액세스 확인은 현재 사용자에 대한 것이므로 편의상 Yii는 다음과 같이 사용할 수 있는 바로 가기 방법 &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can ()&lt;/a&gt; 을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e547100de549e9ae5b7c4d475195d7734d2d36e7" translate="yes" xml:space="preserve">
          <source>With the configuration file, you can run the &lt;code&gt;asset&lt;/code&gt; command to combine and compress the asset files and then generate a new asset bundle configuration file &lt;code&gt;assets-prod.php&lt;/code&gt;:</source>
          <target state="translated">구성 파일을 사용하여 &lt;code&gt;asset&lt;/code&gt; 명령을 실행하여 자산 파일 을 결합하고 압축 한 다음 새로운 자산 번들 구성 파일 &lt;code&gt;assets-prod.php&lt;/code&gt; 를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c560be9009c7cfb3d758310277addd1771a899a" translate="yes" xml:space="preserve">
          <source>With the template defined, create a Git repository from it, and push your files there. If you're going to open source your template, &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; is the best place to host it. If you intend to keep your template non-collaborative, any Git repository site will do.</source>
          <target state="translated">템플릿이 정의 된 상태에서 템플릿으로 Git 리포지토리를 생성하고 파일을 푸시하십시오. 템플릿을 오픈 소스로 사용하려는 경우 &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; 이 템플릿 을 호스팅하는 가장 좋은 장소입니다. 템플릿을 비 협업으로 유지하려는 경우 모든 Git 리포지토리 사이트가 수행합니다.</target>
        </trans-unit>
        <trans-unit id="05662ee2a08a65e711fa2c4286649aab8228e504" translate="yes" xml:space="preserve">
          <source>With the template defined, create a Git repository from it, and push your files there. If you're going to open source your template, &lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt; is the best place to host it. If you intend to keep your template non-collaborative, any Git repository site will do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b616ff17be43259a209f2b305793af183556ca45" translate="yes" xml:space="preserve">
          <source>With these environment constants, you may specify your configurations conditionally based on the current environment. For example, your application configuration may contain the following code to enable the &lt;a href=&quot;guide-tool-debugger&quot;&gt;debug toolbar and debugger&lt;/a&gt; in development environment.</source>
          <target state="translated">이러한 환경 상수를 사용하면 현재 환경에 따라 조건부로 구성을 지정할 수 있습니다. 예를 들어, 응용 프로그램 구성에는 개발 환경에서 &lt;a href=&quot;guide-tool-debugger&quot;&gt;디버그 도구 모음 및 디버거&lt;/a&gt; 를 활성화하기 위해 다음 코드가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69fa6efba05a8fbedd7e83e7a88e7472f353e325" translate="yes" xml:space="preserve">
          <source>With this code, in case 'ordersCount' is present in 'select' statement - &lt;code&gt;Customer::ordersCount&lt;/code&gt; will be populated by query results, otherwise it will be calculated on demand using &lt;code&gt;Customer::orders&lt;/code&gt; relation.</source>
          <target state="translated">이 코드를 사용하여 'select'문에 'ordersCount'가있는 경우-Customer &lt;code&gt;Customer::ordersCount&lt;/code&gt; 는 쿼리 결과로 채워지며, 그렇지 않으면 &lt;code&gt;Customer::orders&lt;/code&gt; 관계를 사용하여 요청시 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="08d21fbfe05f79e1ea627a63cdb37cc7274f1127" translate="yes" xml:space="preserve">
          <source>With this modified relation declaration, we will have:</source>
          <target state="translated">이 수정 된 관계 선언으로, 우리는 다음을 가질 것입니다 :</target>
        </trans-unit>
        <trans-unit id="4f810ed41e7c6236cd40c8262baf7260b21906b0" translate="yes" xml:space="preserve">
          <source>Within &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, you may call the following controller methods to render views:</source>
          <target state="translated">&lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt; 내 에서 다음 컨트롤러 메소드를 호출하여 뷰를 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69c3eab1e3d4f22c896d027b66fb19b0e184300f" translate="yes" xml:space="preserve">
          <source>Within &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, you may call the following widget methods to render views.</source>
          <target state="translated">&lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt; 내 에서 다음 widget 메소드를 호출하여 뷰를 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="033dfb5f0b3e5d54bacd5a110e1c15551ce6a82d" translate="yes" xml:space="preserve">
          <source>Within a layout, you have access to two predefined variables: &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;$content&lt;/code&gt;. The former refers to the &lt;a href=&quot;yii-base-view&quot;&gt;view&lt;/a&gt; component, like in normal views, while the latter contains the rendering result of a content view which is rendered by calling the &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; method in controllers.</source>
          <target state="translated">레이아웃 내에서 &lt;code&gt;$this&lt;/code&gt; 및 &lt;code&gt;$content&lt;/code&gt; 두 가지 사전 정의 된 변수에 액세스 할 수 있습니다 . 전자는 일반 뷰와 같이 &lt;a href=&quot;yii-base-view&quot;&gt;뷰&lt;/a&gt; 컴포넌트를 참조 하고 후자는 컨트롤러에서 &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render ()&lt;/a&gt; 메소드를 호출하여 렌더링 되는 컨텐츠 뷰의 렌더링 결과를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="22313fcc2f9793528d17842aa8c4d24402fd8de8" translate="yes" xml:space="preserve">
          <source>Within a module, you may often need to get the instance of the &lt;a href=&quot;#module-classes&quot;&gt;module class&lt;/a&gt; so that you can access the module ID, module parameters, module components, etc. You can do so by using the following statement:</source>
          <target state="translated">모듈 내 에서 모듈 ID, 모듈 매개 변수, 모듈 구성 요소 등에 액세스 할 수 있도록 &lt;a href=&quot;#module-classes&quot;&gt;모듈 클래스&lt;/a&gt; 의 인스턴스를 가져와야하는 경우가 종종 있습니다. 다음 명령문을 사용하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0340d410c81d3fad111a5d9c17e70e07b409c4f6" translate="yes" xml:space="preserve">
          <source>Within a view, you can access &lt;code&gt;$this&lt;/code&gt; which refers to the &lt;a href=&quot;yii-web-view&quot;&gt;view component&lt;/a&gt; managing and rendering this view template.</source>
          <target state="translated">뷰 내 에서이 뷰 템플릿을 관리하고 렌더링 하는 &lt;a href=&quot;yii-web-view&quot;&gt;뷰 구성 요소&lt;/a&gt; 를 나타내는 &lt;code&gt;$this&lt;/code&gt; 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4363354298da1a040c8c9e93866d5515f3aa4ac" translate="yes" xml:space="preserve">
          <source>Within each PHP script, the message translations are returned as an array like the following:</source>
          <target state="translated">각 PHP 스크립트 내에서 메시지 변환은 다음과 같은 배열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="424f529052842f464b851de04ac10804bc0ac1f2" translate="yes" xml:space="preserve">
          <source>Within each migration, the &lt;a href=&quot;yii-db-migration#up()-detail&quot;&gt;up()&lt;/a&gt; method should be overridden to contain the logic for &quot;upgrading&quot; the database; while the &lt;a href=&quot;yii-db-migration#down()-detail&quot;&gt;down()&lt;/a&gt; method for the &quot;downgrading&quot; logic. The &quot;yii migrate&quot; command manages all available migrations in an application.</source>
          <target state="translated">각 마이그레이션 내 에서 데이터베이스를 &quot;업그레이드&quot;하기위한 논리를 포함 하도록 &lt;a href=&quot;yii-db-migration#up()-detail&quot;&gt;up ()&lt;/a&gt; 메서드를 재정의해야합니다. &quot;다운 그레이드&quot;로직 의 &lt;a href=&quot;yii-db-migration#down()-detail&quot;&gt;down ()&lt;/a&gt; 메소드. &quot;yii migrate&quot;명령은 응용 프로그램에서 사용 가능한 모든 마이그레이션을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="602d5f8c65396eb88f2d49295d416e7669aac2a8" translate="yes" xml:space="preserve">
          <source>Within each migration, the &lt;a href=&quot;yii-db-migrationinterface#up()-detail&quot;&gt;up()&lt;/a&gt; method should be overridden to contain the logic for &quot;upgrading&quot; the database; while the &lt;a href=&quot;yii-db-migrationinterface#down()-detail&quot;&gt;down()&lt;/a&gt; method for the &quot;downgrading&quot; logic.</source>
          <target state="translated">각 마이그레이션 내 에서 데이터베이스를 &quot;업그레이드&quot;하기위한 논리를 포함 하도록 &lt;a href=&quot;yii-db-migrationinterface#up()-detail&quot;&gt;up ()&lt;/a&gt; 메서드를 재정의해야합니다. &quot;다운 그레이드&quot;로직 의 &lt;a href=&quot;yii-db-migrationinterface#down()-detail&quot;&gt;down ()&lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="3990eda509f604cc8237f6d8fa656794400cedf4" translate="yes" xml:space="preserve">
          <source>Without using default configurations, you would have to configure &lt;code&gt;maxButtonCount&lt;/code&gt; in every place where you use link pagers.</source>
          <target state="translated">기본 구성을 사용하지 않으면 링크 호출기를 사용하는 모든 위치에서 &lt;code&gt;maxButtonCount&lt;/code&gt; 를 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="21edbde7cc97c2cee6e2c05790bc787e0c7dfb9d" translate="yes" xml:space="preserve">
          <source>Without using optional parameters, you would have to create 4 rules to achieve the same result.</source>
          <target state="translated">선택적 매개 변수를 사용하지 않으면 동일한 결과를 얻기 위해 4 개의 규칙을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="42661197f53bca11db1805e51c2a882afa32c920" translate="yes" xml:space="preserve">
          <source>Word wrap text with indentation to fit the screen size</source>
          <target state="translated">화면 크기에 맞게 들여 쓰기로 텍스트 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="f8bf3bb5dddf67736d59fb91fbc37d03a76f0fa3" translate="yes" xml:space="preserve">
          <source>Words in the ID may be concatenated using the specified character (defaults to '-'). For example, 'PostTag' will be converted to 'post-tag'.</source>
          <target state="translated">ID의 단어는 지정된 문자를 사용하여 연결할 수 있습니다 (기본값은 '-'). 예를 들어 'PostTag'는 'post-tag'로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="849777795d70bc865ac9e99bd4846b56a40329d3" translate="yes" xml:space="preserve">
          <source>Words in the ID separated by &lt;code&gt;$separator&lt;/code&gt; (defaults to '-') will be concatenated into a CamelCase name. For example, 'post-tag' is converted to 'PostTag'.</source>
          <target state="translated">&lt;code&gt;$separator&lt;/code&gt; 구분 된 ID의 단어 (기본값은 '-')는 CamelCase 이름으로 연결됩니다. 예를 들어 'post-tag'는 'PostTag'로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="3bab60d4ed48a51dcd92f3b5336180a2b0568251" translate="yes" xml:space="preserve">
          <source>Working with Client Scripts</source>
          <target state="translated">클라이언트 스크립트 작업</target>
        </trans-unit>
        <trans-unit id="32fa96c34f69d098e3a5e51e7141385ea3afc95f" translate="yes" xml:space="preserve">
          <source>Working with Data Keys</source>
          <target state="translated">데이터 키 작업</target>
        </trans-unit>
        <trans-unit id="40856931ad4365155b94e252d58baa8f7753d55b" translate="yes" xml:space="preserve">
          <source>Working with Database Schema</source>
          <target state="translated">데이터베이스 스키마 작업</target>
        </trans-unit>
        <trans-unit id="75b5f72bfeb317217ee7d4824c8df2915e44b9a3" translate="yes" xml:space="preserve">
          <source>Working with Databases</source>
          <target state="translated">데이터베이스 작업</target>
        </trans-unit>
        <trans-unit id="5894f048934eae6a5c0380476d8796987b6f212d" translate="yes" xml:space="preserve">
          <source>Working with Passwords</source>
          <target state="translated">비밀번호 작업</target>
        </trans-unit>
        <trans-unit id="c2e13a5b4d10168c3ba99550396f54f298f970ea" translate="yes" xml:space="preserve">
          <source>Working with Pjax</source>
          <target state="translated">Pjax로 작업하기</target>
        </trans-unit>
        <trans-unit id="b47e12cf4554820d96c1738de48bfc8275d55408" translate="yes" xml:space="preserve">
          <source>Working with Relational Data</source>
          <target state="translated">관계형 데이터 작업</target>
        </trans-unit>
        <trans-unit id="6194fa3c8591d4473faac753afbced1a527919dc" translate="yes" xml:space="preserve">
          <source>Working with Transactions</source>
          <target state="translated">트랜잭션 작업</target>
        </trans-unit>
        <trans-unit id="afbb4af2bebbb0780938be0e03b7fbadd2fa038c" translate="yes" xml:space="preserve">
          <source>Working with model relations</source>
          <target state="translated">모델 관계 작업</target>
        </trans-unit>
        <trans-unit id="85de1a3572505da83317cb31d04001c94e59d586" translate="yes" xml:space="preserve">
          <source>Wrap every text message that needs to be translated in a call to the &lt;a href=&quot;yii-baseyii#t()-detail&quot;&gt;Yii::t()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;yii-baseyii#t()-detail&quot;&gt;Yii :: t ()&lt;/a&gt; 메소드를 호출하여 번역해야하는 모든 문자 메시지를 줄 바꿈하십시오 .</target>
        </trans-unit>
        <trans-unit id="08b42059f689ebbec8035338b083cabc2bcacc30" translate="yes" xml:space="preserve">
          <source>Wrapping with &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;begin()&lt;/code&gt; 과 &lt;code&gt;end()&lt;/code&gt; 감싸기</target>
        </trans-unit>
        <trans-unit id="1bb850ce921c35aacbdfb5baa787e3e23bf7e573" translate="yes" xml:space="preserve">
          <source>Write bytes.</source>
          <target state="translated">바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="6dd43c3706b58740503d2aeef37421e5da350576" translate="yes" xml:space="preserve">
          <source>Write concern to be used in this command.</source>
          <target state="translated">이 명령에 사용될 관심사를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="2f40a1983e85c56fa543e5fd59830fc70101a426" translate="yes" xml:space="preserve">
          <source>Write concern, it can be an instance of \MongoDB\Driver\WriteConcern or its scalar mode value, for example: &lt;code&gt;majority&lt;/code&gt;.</source>
          <target state="translated">쓰기 우려는 \ MongoDB \ Driver \ WriteConcern의 인스턴스이거나 스칼라 모드 값 (예 : &lt;code&gt;majority&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="acd7228c33f440031b184d50870d3f2e0e1dd4ac" translate="yes" xml:space="preserve">
          <source>Write example:</source>
          <target state="translated">예제 작성 :</target>
        </trans-unit>
        <trans-unit id="bd5d6e112130f4c8deb70a424432fc17d3a86863" translate="yes" xml:space="preserve">
          <source>Write result.</source>
          <target state="translated">결과를 씁니다.</target>
        </trans-unit>
        <trans-unit id="bb847cc42de076c44e94f172fca9a612dd6f0377" translate="yes" xml:space="preserve">
          <source>Write simple code to make the new test pass.</source>
          <target state="translated">새로운 테스트를 통과하기 위해 간단한 코드를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="154fdaa8328a28ebdc9b773ae51867b8c1b2af6f" translate="yes" xml:space="preserve">
          <source>Writes a 4-byte integer.</source>
          <target state="translated">4 바이트 정수를 씁니다.</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="9ba1f1d74f5c1ac121132cc2e6452100c4ad6198" translate="yes" xml:space="preserve">
          <source>Writes category messages into PHP file</source>
          <target state="translated">카테고리 메시지를 PHP 파일에 씁니다</target>
        </trans-unit>
        <trans-unit id="e54e60b8a60792fce7cc57883db7005dfaee3337" translate="yes" xml:space="preserve">
          <source>Writes log messages to a file.</source>
          <target state="translated">로그 메시지를 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="2d6ac2e64fadd65eb26f82d5fbd24389c4728752" translate="yes" xml:space="preserve">
          <source>Writes log messages to syslog</source>
          <target state="translated">syslog에 로그 메시지를 씁니다.</target>
        </trans-unit>
        <trans-unit id="660599bd3f2428633f3d514aac3945c1ccfe98f9" translate="yes" xml:space="preserve">
          <source>Writes messages into PHP files</source>
          <target state="translated">PHP 파일에 메시지를 씁니다</target>
        </trans-unit>
        <trans-unit id="93de633593d4203835e358fd842d1112a4cf4ff9" translate="yes" xml:space="preserve">
          <source>Writes messages into PO file</source>
          <target state="translated">PO 파일에 메시지를 씁니다</target>
        </trans-unit>
        <trans-unit id="b2eec8f272ce96571f29fb32650978cd7e0e843c" translate="yes" xml:space="preserve">
          <source>Writes messages into POT file</source>
          <target state="translated">POT 파일에 메시지를 씁니다</target>
        </trans-unit>
        <trans-unit id="156205b7b2e6155a5f457339633750b74553c74d" translate="yes" xml:space="preserve">
          <source>Writes the the internal file content into the given filename.</source>
          <target state="translated">내부 파일 내용을 지정된 파일 이름으로 씁니다.</target>
        </trans-unit>
        <trans-unit id="364f6a013fda0343cffefe2885a2cf0edab35aa9" translate="yes" xml:space="preserve">
          <source>Writes to stream.</source>
          <target state="translated">스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="166d73f27af9d00dc9e803f6da305e2a2f6f1bfa" translate="yes" xml:space="preserve">
          <source>X-Sendfile is a feature allowing a web application to redirect the request for a file to the webserver that in turn processes the request, this way eliminating the need to perform tasks like reading the file and sending it to the user. When dealing with a lot of files (or very big files) this can lead to a great increase in performance as the web application is allowed to terminate earlier while the webserver is handling the request.</source>
          <target state="translated">X-Sendfile은 웹 응용 프로그램이 파일 요청을 웹 서버로 리디렉션하여 요청을 처리하는 기능으로 파일을 읽고 사용자에게 보내는 등의 작업을 수행 할 필요가 없습니다. 많은 파일 (또는 매우 큰 파일)을 처리 할 때 웹 서버가 요청을 처리하는 동안 웹 응용 프로그램을 더 일찍 종료 할 수 있으므로 성능이 크게 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6070d8cc9e11ddb116e80447e89abde16eb0daf3" translate="yes" xml:space="preserve">
          <source>XCache provides XCache caching in terms of an application component.</source>
          <target state="translated">XCache는 응용 프로그램 구성 요소 측면에서 XCache 캐싱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="75820fa671bd61b82ff3bc48099ef1668f2bbd79" translate="yes" xml:space="preserve">
          <source>XML array representation.</source>
          <target state="translated">XML 배열 표현.</target>
        </trans-unit>
        <trans-unit id="59d6a2c74603c87cb341e8daef0fe3c7027c7a40" translate="yes" xml:space="preserve">
          <source>XML format</source>
          <target state="translated">XML 형식</target>
        </trans-unit>
        <trans-unit id="a1f447e8855e6147d18cd81c216857626deaf189" translate="yes" xml:space="preserve">
          <source>XSS or cross-site scripting happens when output isn't escaped properly when outputting HTML to the browser. For example, if user can enter his name and instead of &lt;code&gt;Alexander&lt;/code&gt; he enters &lt;code&gt;&amp;lt;script&amp;gt;alert('Hello!');&amp;lt;/script&amp;gt;&lt;/code&gt;, every page that outputs user name without escaping it will execute JavaScript &lt;code&gt;alert('Hello!');&lt;/code&gt; resulting in alert box popping up in a browser. Depending on website instead of innocent alert such script could send messages using your name or even perform bank transactions.</source>
          <target state="translated">HTML을 브라우저에 출력 할 때 출력이 제대로 이스케이프되지 않으면 XSS 또는 크로스 사이트 스크립팅이 발생합니다. 예를 들어, 사용자가 자신의 이름을 입력 할 수 있습니다 대신의 경우 &lt;code&gt;Alexander&lt;/code&gt; 그가 들어갑니다 &lt;code&gt;&amp;lt;script&amp;gt;alert('Hello!');&amp;lt;/script&amp;gt;&lt;/code&gt; , 모든 페이지가이 자바 스크립트 실행합니다 이스케이프없이 출력 사용자 이름 &lt;code&gt;alert('Hello!');&lt;/code&gt; 브라우저에 경고 상자가 나타납니다. 무고한 경고 대신 웹 사이트에 따라 이러한 스크립트는 이름을 사용하여 메시지를 보내거나 은행 거래를 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6008cc12286051c5280905725a57fdd493a308f7" translate="yes" xml:space="preserve">
          <source>Xml to process.</source>
          <target state="translated">처리 할 Xml</target>
        </trans-unit>
        <trans-unit id="d44711c321b4d22c83b40c25894526bc8cf6c6d0" translate="yes" xml:space="preserve">
          <source>XmlResponseFormatter formats the given data into an XML response content.</source>
          <target state="translated">XmlResponseFormatter는 지정된 데이터를 XML 응답 컨텐츠로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="1e7ca5865fcb6142a8a0e3e6caead22a2b77ab64" translate="yes" xml:space="preserve">
          <source>Xterm color code</source>
          <target state="translated">Xterm 컬러 코드</target>
        </trans-unit>
        <trans-unit id="81c393ae57d5693d0a977bc46365285e50d36b57" translate="yes" xml:space="preserve">
          <source>Yii</source>
          <target state="translated">Yii</target>
        </trans-unit>
        <trans-unit id="c9c3c4d31b3d2483dd199152c6feaa92bd6b269c" translate="yes" xml:space="preserve">
          <source>Yii DAO provides a whole set of methods to let you manipulate the database schema, such as creating new tables, dropping a column from a table, etc. These methods are listed as follows:</source>
          <target state="translated">Yii DAO는 새 테이블 작성, 테이블에서 열 삭제 등과 같은 데이터베이스 스키마를 조작 할 수있는 전체 메소드 세트를 제공합니다. 이러한 메소드는 다음과 같이 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="32202174582de194588967cc9e2b0950a5cf9451" translate="yes" xml:space="preserve">
          <source>Yii DAO supports the following databases out of box:</source>
          <target state="translated">Yii DAO는 다음 데이터베이스를 즉시 지원합니다.</target>
        </trans-unit>
        <trans-unit id="52c9eacec45e42e3bbe3b2e5241551ac1fa050d0" translate="yes" xml:space="preserve">
          <source>Yii DAO will automatically convert such constructs into the corresponding quoted column or table names using the DBMS specific syntax. For example,</source>
          <target state="translated">Yii DAO는 DBMS 특정 구문을 사용하여 이러한 구문을 해당 인용 열 또는 테이블 이름으로 자동 변환합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="d2f68000c3bee36fc8192c1c3aaad73e1c5e6ebe" translate="yes" xml:space="preserve">
          <source>Yii JavaScript Modules</source>
          <target state="translated">Yii 자바 스크립트 모듈</target>
        </trans-unit>
        <trans-unit id="ba0954d623cf1b1ea0c81211fd58fbf520c5feb1" translate="yes" xml:space="preserve">
          <source>Yii PHP Framework Version 2</source>
          <target state="translated">Yii PHP 프레임 워크 버전 2</target>
        </trans-unit>
        <trans-unit id="9681832bdc28ca16445fbca21ea349d417c5587f" translate="yes" xml:space="preserve">
          <source>Yii allows composition of the actual mail messages content via special view files. By default these files should be located at &lt;code&gt;@app/mail&lt;/code&gt; path.</source>
          <target state="translated">Yii는 특별한보기 파일을 통해 실제 메일 메시지 내용을 구성 할 수 있습니다. 기본적으로 이러한 파일은 &lt;code&gt;@app/mail&lt;/code&gt; 경로 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="59414b68d2468e5060c2f594b0de46e7695841df" translate="yes" xml:space="preserve">
          <source>Yii also can auto-generate fixtures for you based on some template. You can generate your fixtures with different data on different languages and formats. This feature is done by &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; library and &lt;code&gt;yii2-faker&lt;/code&gt; extension. See extension &lt;a href=&quot;https://github.com/yiisoft/yii2-faker&quot;&gt;guide&lt;/a&gt; for more docs.</source>
          <target state="translated">Yii는 또한 일부 템플릿을 기반으로 조명기를 자동 생성 할 수 있습니다. 다른 언어와 형식으로 다른 데이터로 조명기를 생성 할 수 있습니다. 이 기능은 &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; 라이브러리 및 &lt;code&gt;yii2-faker&lt;/code&gt; 확장 기능으로 수행됩니다 . 더 많은 문서는 확장 &lt;a href=&quot;https://github.com/yiisoft/yii2-faker&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5da5f233f6b31930bbcee7d3db7656606997d45f" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of &lt;a href=&quot;yii-validators-validator#%24builtInValidators-detail&quot;&gt;built-in validators&lt;/a&gt;. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 또한 &lt;a href=&quot;yii-validators-validator#%24builtInValidators-detail&quot;&gt;내장 된 유효성 검사기&lt;/a&gt; 세트를 제공합니다 . 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="85c6415c7ee3c832d3b71939cd1781969b15d17c" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="42a9a0e79b4f0a2aa3e2ba25f0d350314dee2f23" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ debug \ models \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2eeeb8b19d606d80b416e167c6c0599b4e627cd8" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\search\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ debug \ models \ search \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="533cc6bb5bfc6fb87758b4a9e6a14dcab7d415ba" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\debug\models\timeline\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ debug \ models \ timeline \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="811f361e14c9cb377c71a36381771d5b080bd249" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d638df492abec5c6b2bb3fb346539e196b1cc9a2" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\controller\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ controller \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="154c558ec4b1b08d47778c166fa19bb40c400ba3" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\crud\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ crud \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cf03e07fb8bdc07adea0a6eea1a532431964a12" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\extension\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ extension \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f601be4d90afb422164bedf3a3fd6b3b490af4" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\form\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ form \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="22ae03e15fa6b4ac08e991c8254997bc6b28950c" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ model \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3949d23cbecb6c3dc1af30a9b9efea5174dbc2a" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\gii\generators\module\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ gii \ generators \ module \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1004d0002a1124153326dc623fef50079f034176" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\mongodb\gii\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ mongodb \ gii \ model \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e95251dddfd16afddc8f63080c7d571d7273e9ae" translate="yes" xml:space="preserve">
          <source>Yii also provides a set of \yii\sphinx\gii\model\Validator::builtInValidators. Each one has an alias name which can be used when specifying a validation rule.</source>
          <target state="translated">Yii는 \ yii \ sphinx \ gii \ model \ Validator :: builtInValidators 세트도 제공합니다. 각각에는 유효성 검사 규칙을 지정할 때 사용할 수있는 별칭 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f3adb69f8f2401baa39fa119cc009e885ac59ae" translate="yes" xml:space="preserve">
          <source>Yii also supports setting &lt;a href=&quot;http://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;isolation levels&lt;/a&gt; for your transactions. By default, when starting a new transaction, it will use the default isolation level set by your database system. You can override the default isolation level as follows,</source>
          <target state="translated">Yii는 또한 트랜잭션의 &lt;a href=&quot;http://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;격리 수준&lt;/a&gt; 설정을 지원합니다 . 기본적으로 새 트랜잭션을 시작할 때는 데이터베이스 시스템에서 설정 한 기본 격리 수준을 사용합니다. 다음과 같이 기본 격리 수준을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f77750bf1d2549251a50f3ee2d6d4d82913aebb3" translate="yes" xml:space="preserve">
          <source>Yii also supports setting &lt;a href=&quot;https://en.wikipedia.org/wiki/Isolation_%28database_systems%29#Isolation_levels&quot;&gt;isolation levels&lt;/a&gt; for your transactions. By default, when starting a new transaction, it will use the default isolation level set by your database system. You can override the default isolation level as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288993aa5a37018865309cefa0789a9913aa166c" translate="yes" xml:space="preserve">
          <source>Yii comes with the default translation messages for validation errors and some other strings. These messages are all in the category &lt;code&gt;yii&lt;/code&gt;. Sometimes you want to correct the default framework message translation for your application. In order to do so, configure the &lt;code&gt;i18n&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; like the following:</source>
          <target state="translated">Yii에는 유효성 검사 오류 및 일부 다른 문자열에 대한 기본 번역 메시지가 제공됩니다. 이 메시지는 모두 &lt;code&gt;yii&lt;/code&gt; 카테고리에 있습니다. 때로는 응용 프로그램의 기본 프레임 워크 메시지 변환을 수정하려고합니다. 그렇게 하려면 다음과 같이 &lt;code&gt;i18n&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;애플리케이션 구성 요소를&lt;/a&gt; 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1934c8af030c19dfd1a4fe683052a967bc3d18e" translate="yes" xml:space="preserve">
          <source>Yii comes with the following built-in log targets. Please refer to the API documentation about these classes to learn how to configure and use them.</source>
          <target state="translated">Yii에는 다음과 같은 기본 제공 로그 대상이 제공됩니다. 구성 및 사용 방법을 배우려면 이러한 클래스에 대한 API 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="057263d248b9ac57be2da126abf4563e57032e4a" translate="yes" xml:space="preserve">
          <source>Yii console supports formatted output that is automatically degraded to non-formatted one if it's not supported by terminal running the command.</source>
          <target state="translated">Yii 콘솔은 명령을 실행하는 터미널에서 지원하지 않으면 형식화되지 않은 형식으로 자동 저하되는 형식화 된 출력을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a00f7628bcbd4ca59999ba52a2be77260992137b" translate="yes" xml:space="preserve">
          <source>Yii creates a DI container when you include the &lt;code&gt;Yii.php&lt;/code&gt; file in the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; of your application. The DI container is accessible via &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt;. When you call &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt;, the method will actually call the container's &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; method to create a new object. As aforementioned, the DI container will automatically resolve the dependencies (if any) and inject them into obtained object. Because Yii uses &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt; in most of its core code to create new objects, this means you can customize the objects globally by dealing with &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii::$container&lt;/a&gt;.</source>
          <target state="translated">Yii는 응용 프로그램 의 &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;입력 스크립트&lt;/a&gt; 에 &lt;code&gt;Yii.php&lt;/code&gt; 파일 을 포함 시키면 DI 컨테이너를 만듭니다 . DI 컨테이너는 &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container&lt;/a&gt; 를 통해 액세스 할 수 있습니다 . &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject ()&lt;/a&gt; 를 호출 하면 메소드는 실제로 컨테이너의 &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get ()&lt;/a&gt; 메소드를 호출하여 새 객체를 만듭니다. 앞서 언급했듯이 DI 컨테이너는 종속성 (있는 경우)을 자동으로 해결하여 획득 한 개체에 주입합니다. Yii는 대부분의 핵심 코드에서 &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii :: createObject ()&lt;/a&gt; 를 사용하여 새 객체를 생성하므로 &lt;a href=&quot;yii-baseyii#%24container-detail&quot;&gt;Yii :: $ container를&lt;/a&gt; 처리하여 객체를 전역 적으로 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="198a1a5349846c90250ad53a7a8ff284a6d78a8a" translate="yes" xml:space="preserve">
          <source>Yii defines a set of &lt;em&gt;core&lt;/em&gt; application components with fixed IDs and default configurations. For example, the &lt;a href=&quot;yii-web-application#%24request-detail&quot;&gt;request&lt;/a&gt; component is used to collect information about a user request and resolve it into a &lt;a href=&quot;guide-runtime-routing&quot;&gt;route&lt;/a&gt;; the &lt;a href=&quot;yii-base-application#%24db-detail&quot;&gt;db&lt;/a&gt; component represents a database connection through which you can perform database queries. It is with help of these core application components that Yii applications are able to handle user requests.</source>
          <target state="translated">Yii는 고정 ID 및 기본 구성 으로 &lt;em&gt;핵심&lt;/em&gt; 응용 프로그램 구성 요소 집합을 정의 합니다. 예를 들어, &lt;a href=&quot;yii-web-application#%24request-detail&quot;&gt;요청&lt;/a&gt; 컴포넌트는 사용자 요청에 대한 정보를 수집하고이를 &lt;a href=&quot;guide-runtime-routing&quot;&gt;라우트&lt;/a&gt; 로 해석하는 데 사용됩니다 . &lt;a href=&quot;yii-base-application#%24db-detail&quot;&gt;DB의&lt;/a&gt; 구성 요소를 사용하면 데이터베이스 쿼리를 수행 할 수있는 데이터베이스 연결을 나타냅니다. Yii 응용 프로그램이 사용자 요청을 처리 할 수있는 것은 이러한 핵심 응용 프로그램 구성 요소의 도움으로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="1805fe8e0b2ac5502bacbbc40c8c1b322990cd47" translate="yes" xml:space="preserve">
          <source>Yii has many pre-defined aliases already available. For example, the alias &lt;code&gt;@yii&lt;/code&gt; represents the installation path of the Yii framework; &lt;code&gt;@web&lt;/code&gt; represents the base URL for the currently running Web application.</source>
          <target state="translated">Yii에는 이미 사용 가능한 많은 사전 정의 된 별명이 있습니다. 예를 들어, &lt;code&gt;@yii&lt;/code&gt; 별명 은 Yii 프레임 워크의 설치 경로를 나타냅니다. &lt;code&gt;@web&lt;/code&gt; 은 현재 실행중인 웹 응용 프로그램의 기본 URL을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c026fafb820fea7d7ce2af2fa70c3574429e2f3c" translate="yes" xml:space="preserve">
          <source>Yii implements a General Hierarchical RBAC, following the &lt;a href=&quot;http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf&quot;&gt;NIST RBAC model&lt;/a&gt;. It provides the RBAC functionality through the &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;authManager&lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt;.</source>
          <target state="translated">Yii는 &lt;a href=&quot;http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf&quot;&gt;NIST RBAC 모델에&lt;/a&gt; 따라 General Hierarchical RBAC를 구현합니다 . &lt;a href=&quot;yii-rbac-managerinterface&quot;&gt;authManager &lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소를&lt;/a&gt; 통해 RBAC 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ccde08fbd49eb84f0f4c693058f0a74d48c52a6b" translate="yes" xml:space="preserve">
          <source>Yii implements its &lt;a href=&quot;guide-concept-service-locator&quot;&gt;service locator&lt;/a&gt; on top of the dependency injection (DI) container. When a service locator is trying to create a new object instance, it will forward the call to the DI container. The latter will resolve the dependencies automatically as described above.</source>
          <target state="translated">Yii는 DI (dependency injection) 컨테이너 위에 &lt;a href=&quot;guide-concept-service-locator&quot;&gt;서비스 로케이터&lt;/a&gt; 를 구현합니다 . 서비스 로케이터가 새 개체 인스턴스를 만들려고하면 호출을 DI 컨테이너로 전달합니다. 후자는 위에서 설명한대로 자동으로 종속성을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="efcf32dbb2dd50028562bd8948d206e7fe6ee0de" translate="yes" xml:space="preserve">
          <source>Yii includes a built-in &lt;a href=&quot;yii-web-errorhandler&quot;&gt;error handler&lt;/a&gt; which makes error handling a much more pleasant experience than before. In particular, the Yii error handler does the following to improve error handling:</source>
          <target state="translated">Yii에는 오류 처리 기능을 이전보다 훨씬 더 즐겁게 만드는 오류 &lt;a href=&quot;yii-web-errorhandler&quot;&gt;처리기&lt;/a&gt; 가 내장되어 있습니다 . 특히 Yii 오류 처리기는 오류 처리를 향상시키기 위해 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c67a073f5b99fa7a33ca56ed3821a60ca7be4b8d" translate="yes" xml:space="preserve">
          <source>Yii introduces a base class called &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt; to support events. If a class needs to trigger events, it should extend from &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt;, or from a child class.</source>
          <target state="translated">Yii는 이벤트를 지원하기 위해 &lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt; 라는 기본 클래스를 소개 합니다. 클래스가 이벤트를 트리거해야하는 경우 &lt;a href=&quot;yii-base-component&quot;&gt;yii \ base \ Component&lt;/a&gt; 또는 하위 클래스에서 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fb2faa00c8e09397e9b561c7f6e861fb9ba96627" translate="yes" xml:space="preserve">
          <source>Yii is a helper class serving common framework functionalities.</source>
          <target state="translated">Yii는 일반적인 프레임 워크 기능을 제공하는 도우미 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="df3f442828dd386122ded6a7239728818539c4c0" translate="yes" xml:space="preserve">
          <source>Yii manages asset bundles through an application component named &lt;code&gt;assetManager&lt;/code&gt; which is implemented by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt;. By configuring the &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; property, it is possible to customize the behavior of an asset bundle. For example, the default &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii\web\JqueryAsset&lt;/a&gt; asset bundle uses the &lt;code&gt;jquery.js&lt;/code&gt; file from the installed jquery Bower package. To improve the availability and performance, you may want to use a version hosted by Google. This can be achieved by configuring &lt;code&gt;assetManager&lt;/code&gt; in the application configuration like the following:</source>
          <target state="translated">Yii는 &lt;code&gt;assetManager&lt;/code&gt; &lt;a href=&quot;yii-web-assetmanager&quot;&gt;\ web \ AssetManager로&lt;/a&gt; 구현되는 assetManager 라는 애플리케이션 구성 요소를 통해 자산 번들을 관리합니다 . 구성하여 &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;AssetManager : $가 번들 YII \ 웹 \&lt;/a&gt; 속성을,이 자산 번들의 동작을 사용자 정의 할 수 있습니다. 예를 들어, 기본 &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii \ web \ JqueryAsset&lt;/a&gt; 자산 번들은 설치된 jquery Bower 패키지 의 &lt;code&gt;jquery.js&lt;/code&gt; 파일을 사용합니다 . 가용성과 성능을 향상시키기 위해 Google에서 호스팅하는 버전을 사용하려고 할 수 있습니다. 다음과 같이 애플리케이션 구성에서 &lt;code&gt;assetManager&lt;/code&gt; 를 구성 하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="8407f297475131d5de28e7c70f5cd17d2c31efe2" translate="yes" xml:space="preserve">
          <source>Yii manages assets in the unit of &lt;em&gt;asset bundle&lt;/em&gt;. An asset bundle is simply a collection of assets located in a directory. When you register an asset bundle in a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt;, it will include the CSS and JavaScript files in the bundle in the rendered Web page.</source>
          <target state="translated">Yii는 &lt;em&gt;자산 번들&lt;/em&gt; 단위로 &lt;em&gt;자산&lt;/em&gt; 을 &lt;em&gt;관리합니다&lt;/em&gt; . 자산 번들은 단순히 디렉토리에있는 자산의 모음입니다. &lt;a href=&quot;guide-structure-views&quot;&gt;뷰에&lt;/a&gt; 자산 번들을 등록 하면 렌더링 된 웹 페이지의 번들에 CSS 및 JavaScript 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e0c5deb585c90cc0677c2f015901b151cb69b05b" translate="yes" xml:space="preserve">
          <source>Yii predefines a set of aliases to easily reference commonly used file paths and URLs:</source>
          <target state="translated">Yii는 일반적으로 사용되는 파일 경로와 URL을 쉽게 참조 할 수 있도록 일련의 별칭을 미리 정의합니다.</target>
        </trans-unit>
        <trans-unit id="617bb40ab3072554c55127dcea7083e3c4c685fc" translate="yes" xml:space="preserve">
          <source>Yii provides a console command named &lt;code&gt;asset&lt;/code&gt; to automate the approach that we just described.</source>
          <target state="translated">Yii는 방금 설명한 접근 방식을 자동화하기 위해 &lt;code&gt;asset&lt;/code&gt; 이라는 콘솔 명령을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7981ff284aec1f39f5d5dc820fd95ff9c4763045" translate="yes" xml:space="preserve">
          <source>Yii provides a helper method &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt; to create various kinds of URLs from given routes and their associated query parameters. For example,</source>
          <target state="translated">Yii는 도우미 경로 &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii \ helpers \ Url :: to ()&lt;/a&gt; 를 제공하여 지정된 경로 및 관련 쿼리 매개 변수에서 다양한 종류의 URL을 만듭니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="dd4888de15d5056c6239ce579e5a3651edf55075" translate="yes" xml:space="preserve">
          <source>Yii provides a powerful logging framework that is highly customizable and extensible. Using this framework, you can easily log various types of messages, filter them, and gather them at different targets, such as files, databases, emails.</source>
          <target state="translated">Yii는 매우 사용자 정의 가능하고 확장 가능한 강력한 로깅 프레임 워크를 제공합니다. 이 프레임 워크를 사용하면 다양한 유형의 메시지를 쉽게 기록하고 필터링하며 파일, 데이터베이스, 이메일과 같은 다른 대상에 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="275b92cab25e8202e6c439dd149749079cf72f24" translate="yes" xml:space="preserve">
          <source>Yii provides a set of &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt; that can be used to display data. While the &lt;a href=&quot;#detail-view&quot;&gt;DetailView&lt;/a&gt; widget can be used to display data for a single record, &lt;a href=&quot;#list-view&quot;&gt;ListView&lt;/a&gt; and &lt;a href=&quot;#grid-view&quot;&gt;GridView&lt;/a&gt; can be used to display a list or table of data records providing features like pagination, sorting and filtering.</source>
          <target state="translated">Yii는 데이터를 표시하는 데 사용할 수 있는 일련의 &lt;a href=&quot;guide-structure-widgets&quot;&gt;위젯&lt;/a&gt; 을 제공합니다 . 그동안 &lt;a href=&quot;#detail-view&quot;&gt;DetailView는&lt;/a&gt; 단일 레코드를 표시 데이터에 사용할 수있는 위젯 &lt;a href=&quot;#list-view&quot;&gt;의 ListView&lt;/a&gt; 와 &lt;a href=&quot;#grid-view&quot;&gt;의 GridView는&lt;/a&gt; 데이터 레코드, 페이징 등의 기능을 제공하는 정렬 및 필터링의 목록 또는 테이블을 표시하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="3491b8ab8d9641f60b5e8af557b3ba1341b893eb" translate="yes" xml:space="preserve">
          <source>Yii provides a set of commonly used core validators, found primarily under the &lt;code&gt;yii\validators&lt;/code&gt; namespace. Instead of using lengthy validator class names, you may use &lt;em&gt;aliases&lt;/em&gt; to specify the use of these core validators. For example, you can use the alias &lt;code&gt;required&lt;/code&gt; to refer to the &lt;a href=&quot;yii-validators-requiredvalidator&quot;&gt;yii\validators\RequiredValidator&lt;/a&gt; class:</source>
          <target state="translated">Yii는 주로 &lt;code&gt;yii\validators&lt;/code&gt; 네임 스페이스 에있는 일반적으로 사용되는 핵심 유효성 검사기 세트를 제공합니다 . 긴 유효성 검사기 클래스 이름을 사용하는 대신 &lt;em&gt;별칭&lt;/em&gt; 을 사용하여 이러한 핵심 유효성 검사기의 사용을 지정할 수 있습니다 . 예를 들어, &lt;a href=&quot;yii-validators-requiredvalidator&quot;&gt;yii \ validators \ RequiredValidator&lt;/a&gt; 클래스 를 참조하는 &lt;code&gt;required&lt;/code&gt; 별명을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="648b3b7837161e4fe9898ad111ccc3c87f197b95" translate="yes" xml:space="preserve">
          <source>Yii provides a set of commonly used filters, found primarily under the &lt;code&gt;yii\filters&lt;/code&gt; namespace. In the following, we will briefly introduce these filters.</source>
          <target state="translated">Yii는 주로 &lt;code&gt;yii\filters&lt;/code&gt; 네임 스페이스 에서 주로 사용되는 일련의 필터를 제공 합니다. 다음에서는 이러한 필터에 대해 간략하게 소개합니다.</target>
        </trans-unit>
        <trans-unit id="12ca94073d273b51af9b3af7387cb4dea07a1251" translate="yes" xml:space="preserve">
          <source>Yii provides a set of migration command line tools that allow you to:</source>
          <target state="translated">Yii는 다음을 수행 할 수있는 일련의 마이그레이션 명령 줄 도구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="05ed21ccabad358ac5bef5e9f076a31e394f54eb" translate="yes" xml:space="preserve">
          <source>Yii provides a very convenient method to do it:</source>
          <target state="translated">Yii는 매우 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cd2e48f79309dbab9165c57df881e3ba52e1b42d" translate="yes" xml:space="preserve">
          <source>Yii provides a whole set of tools to simplify the task of implementing RESTful Web Service APIs. In particular, Yii supports the following features about RESTful APIs:</source>
          <target state="translated">Yii는 RESTful 웹 서비스 API 구현 작업을 단순화하기위한 전체 도구 세트를 제공합니다. 특히, Yii는 RESTful API에 대한 다음 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="45522c48db32ec7a362821e149ea74675ad7f6f8" translate="yes" xml:space="preserve">
          <source>Yii provides an authentication framework which wires up various components to support login. To use this framework, you mainly need to do the following work:</source>
          <target state="translated">Yii는 로그인을 지원하기 위해 다양한 구성 요소를 연결하는 인증 프레임 워크를 제공합니다. 이 프레임 워크를 사용하려면 주로 다음 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="da6bd01a738a7b5cdae7e44fb1a8a726f81a66a8" translate="yes" xml:space="preserve">
          <source>Yii provides convenient helper functions that allow you to encrypt/decrypt data using a secret key. The data is passed through the encryption function so that only the person which has the secret key will be able to decrypt it. For example, we need to store some information in our database but we need to make sure only the user who has the secret key can view it (even if the application database is compromised):</source>
          <target state="translated">Yii는 비밀 키를 사용하여 데이터를 암호화 / 복호화 할 수있는 편리한 도우미 기능을 제공합니다. 비밀 키를 가진 사람 만이 데이터를 해독 할 수 있도록 데이터는 암호화 기능을 통해 전달됩니다. 예를 들어, 데이터베이스에 일부 정보를 저장해야하지만 비밀 키를 가진 사용자 만 해당 정보를 볼 수 있어야합니다 (응용 프로그램 데이터베이스가 손상된 경우에도).</target>
        </trans-unit>
        <trans-unit id="ffffc4b57aeaa8f673f353f4b9fa8d5b201255bb" translate="yes" xml:space="preserve">
          <source>Yii provides features that rely on cookies and/or PHP sessions. These can be vulnerable in case your connection is compromised. The risk is reduced if the app uses secure connection via TLS (often referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;SSL&lt;/a&gt;).</source>
          <target state="translated">Yii는 쿠키 및 / 또는 PHP 세션에 의존하는 기능을 제공합니다. 연결이 손상된 경우 취약 할 수 있습니다. 앱이 TLS (종종 &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;SSL&lt;/a&gt; 이라고 함)를 통한 보안 연결을 사용하면 위험이 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="da71eebc25c9058c91747bf399cff30416065bdc" translate="yes" xml:space="preserve">
          <source>Yii provides four constants for the most common isolation levels:</source>
          <target state="translated">Yii는 가장 일반적인 분리 수준에 대해 4 가지 상수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="49d9bdaa68dfd3953a5c3c1b012f8fb94b8065db" translate="yes" xml:space="preserve">
          <source>Yii provides the Active Record support for the following relational databases:</source>
          <target state="translated">Yii는 다음 관계형 데이터베이스에 대한 Active Record 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="eac1bfca62def4d6ae6a209863e3c8fecf39bf1c" translate="yes" xml:space="preserve">
          <source>Yii provides the DI container feature through the class &lt;a href=&quot;yii-di-container&quot;&gt;yii\di\Container&lt;/a&gt;. It supports the following kinds of dependency injection:</source>
          <target state="translated">Yii는 &lt;a href=&quot;yii-di-container&quot;&gt;yii \ di \ Container&lt;/a&gt; 클래스를 통해 DI 컨테이너 기능을 제공합니다 . 다음과 같은 종류의 의존성 주입을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="29fdb88c6f8009862634d0d9a57d55b2930e4556" translate="yes" xml:space="preserve">
          <source>Yii provides the following core extensions that are developed and maintained by the Yii developer team. They are all registered on &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt; and can be easily installed as described in the &lt;a href=&quot;#using-extensions&quot;&gt;Using Extensions&lt;/a&gt; subsection.</source>
          <target state="translated">Yii는 Yii 개발자 팀이 개발하고 유지 관리하는 다음과 같은 핵심 확장 기능을 제공합니다. 이들은 모두 &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist에&lt;/a&gt; 등록 되어 있으며 &lt;a href=&quot;#using-extensions&quot;&gt;Using Extensions&lt;/a&gt; 하위 섹션에 설명 된대로 쉽게 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b735fed76635e2d25181e24ee5ff5ac85418c22" translate="yes" xml:space="preserve">
          <source>Yii provides two base controller classes to simplify your work of creating RESTful actions: &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; and &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;. The difference between these two controllers is that the latter provides a default set of actions that are specifically designed to deal with resources represented as &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt;. So if you are using &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; and are comfortable with the provided built-in actions, you may consider extending your controller classes from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, which will allow you to create powerful RESTful APIs with minimal code.</source>
          <target state="translated">Yii는 RESTful 조치 작성 작업을 단순화하기 위해 &lt;a href=&quot;yii-rest-controller&quot;&gt;yii \ rest \ Controller&lt;/a&gt; 및 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController의&lt;/a&gt; 두 가지 기본 제어기 클래스를 제공합니다 . 이 두 컨트롤러의 차이점은 후자가 &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; 로 표시되는 자원을 처리하도록 특별히 설계된 기본 조치 세트를 제공한다는 것 입니다. 따라서 &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record를&lt;/a&gt; 사용 하고 제공된 내장 조치에 익숙한 경우 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt; 에서 컨트롤러 클래스를 확장하여 최소한의 코드로 강력한 RESTful API를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e384f724156ac43fbf8586f9c6cde34be1ef76c" translate="yes" xml:space="preserve">
          <source>Yii relies on the &lt;a href=&quot;http://www.php.net/manual/en/language.oop5.autoload.php&quot;&gt;class autoloading mechanism&lt;/a&gt; to locate and include all required class files. It provides a high-performance class autoloader that is compliant with the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4 standard&lt;/a&gt;. The autoloader is installed when you include the &lt;code&gt;Yii.php&lt;/code&gt; file.</source>
          <target state="translated">Yii는 &lt;a href=&quot;http://www.php.net/manual/en/language.oop5.autoload.php&quot;&gt;클래스 자동 로딩 메커니즘&lt;/a&gt; 을 사용하여 필요한 모든 클래스 파일을 찾아 포함시킵니다. &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4 표준을&lt;/a&gt; 준수하는 고성능 클래스 오토로더를 제공합니다 . 오토로더는 &lt;code&gt;Yii.php&lt;/code&gt; 파일 을 포함 할 때 설치됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d1c79b34024ef1ffb94abd22b34954b425b4e4e" translate="yes" xml:space="preserve">
          <source>Yii relies on the installed pre-processor tools to convert assets. For example, to use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; you should install the &lt;code&gt;lessc&lt;/code&gt; pre-processor command.</source>
          <target state="translated">Yii는 설치된 프리 프로세서 도구를 사용하여 자산을 변환합니다. 예를 들어, &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; 를 사용 하려면 &lt;code&gt;lessc&lt;/code&gt; 사전 처리기 명령을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5c5aecb30ed2d9f367372c6157b1bf796bf92263" translate="yes" xml:space="preserve">
          <source>Yii represents each cookie as an object of &lt;a href=&quot;yii-web-cookie&quot;&gt;yii\web\Cookie&lt;/a&gt;. Both &lt;a href=&quot;yii-web-request&quot;&gt;yii\web\Request&lt;/a&gt; and &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; maintain a collection of cookies via the property named &lt;code&gt;cookies&lt;/code&gt;. The cookie collection in the former represents the cookies submitted in a request, while the cookie collection in the latter represents the cookies that are to be sent to the user.</source>
          <target state="translated">Yii는 각 쿠키를 &lt;a href=&quot;yii-web-cookie&quot;&gt;yii \ web \ Cookie&lt;/a&gt; 의 객체로 나타냅니다 . 두 &lt;a href=&quot;yii-web-request&quot;&gt;YII \ 웹 \ 요청&lt;/a&gt; 및 &lt;a href=&quot;yii-web-response&quot;&gt;YII \ 웹 \ 응답&lt;/a&gt; 특성 이름을 통해 쿠키의 컬렉션을 유지 &lt;code&gt;cookies&lt;/code&gt; . 전자의 쿠키 모음은 요청에 제출 된 쿠키를 나타내고 후자의 쿠키 모음은 사용자에게 보낼 쿠키를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bde9a7a13bc7f8716c6c6d4d250c84526c723f11" translate="yes" xml:space="preserve">
          <source>Yii security helper makes generating pseudorandom data simple:</source>
          <target state="translated">Yii 보안 도우미는 의사 난수 데이터 생성을 간단하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d6f66512d0e8d0ef316edce2cc3fbdbc0f5d585f" translate="yes" xml:space="preserve">
          <source>Yii supports a so-called &lt;em&gt;global event&lt;/em&gt;, which is actually a trick based on the event mechanism described above. The global event requires a globally accessible Singleton, such as the &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; instance itself.</source>
          <target state="translated">Yii는 소위 &lt;em&gt;글로벌 이벤트를&lt;/em&gt; 지원하는데 , 이는 실제로 위에서 설명한 이벤트 메커니즘을 기반으로하는 트릭입니다. 글로벌 이벤트에는 &lt;a href=&quot;guide-structure-applications&quot;&gt;애플리케이션&lt;/a&gt; 인스턴스 자체 와 같이 글로벌 액세스 가능한 싱글 톤이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="d3a1a7ebcdc952e2d8783c148bbd598626a0ade1" translate="yes" xml:space="preserve">
          <source>Yii supports a wide range of cache storage. The following is a summary:</source>
          <target state="translated">Yii는 광범위한 캐시 스토리지를 지원합니다. 다음은 요약입니다 :</target>
        </trans-unit>
        <trans-unit id="fcb24d902e1e35609509de2a48de29ca9c86d501" translate="yes" xml:space="preserve">
          <source>Yii supports all of the above authentication methods. You can also easily create new authentication methods.</source>
          <target state="translated">Yii는 위의 모든 인증 방법을 지원합니다. 새로운 인증 방법을 쉽게 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ab94ba1099d0e9be7146392a354c49a5cfc48c" translate="yes" xml:space="preserve">
          <source>Yii supports all these caching mechanisms:</source>
          <target state="translated">Yii는 이러한 모든 캐싱 메커니즘을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="bc497a78097f3fd3da0039c19000ec607fbda1b2" translate="yes" xml:space="preserve">
          <source>Yii supports composition and sending of the email messages. However, the framework core provides only the content composition functionality and basic interface. Actual mail sending mechanism should be provided by the extension, because different projects may require its different implementation and it usually depends on the external services and libraries.</source>
          <target state="translated">Yii는 이메일 메시지 작성 및 전송을 지원합니다. 그러나 프레임 워크 코어는 컨텐츠 구성 기능과 기본 인터페이스 만 제공합니다. 프로젝트마다 다른 구현이 필요할 수 있으며 일반적으로 외부 서비스 및 라이브러리에 의존하기 때문에 실제 메일 전송 메커니즘은 확장 프로그램에서 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="c90aa3fb11f0c23f94af18dbfc155e1c3ee82db7" translate="yes" xml:space="preserve">
          <source>Yii supports content negotiation via the &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii\filters\ContentNegotiator&lt;/a&gt; filter. The RESTful API base controller class &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; is equipped with this filter under the name of &lt;code&gt;contentNegotiator&lt;/code&gt;. The filter provides response format negotiation as well as language negotiation. For example, if a RESTful API request contains the following header,</source>
          <target state="translated">Yii는 &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;yii \ filters \ ContentNegotiator&lt;/a&gt; 필터 를 통한 컨텐츠 협상을 지원합니다 . RESTful API 기본 컨트롤러 클래스 &lt;a href=&quot;yii-rest-controller&quot;&gt;yii \ rest \ Controller&lt;/a&gt; 에는 &lt;code&gt;contentNegotiator&lt;/code&gt; 이름으로이 필터가 장착되어 있습니다 . 이 필터는 언어 협상뿐만 아니라 응답 형식 협상도 제공합니다. 예를 들어 RESTful API 요청에 다음 헤더가 포함 된 경우</target>
        </trans-unit>
        <trans-unit id="3a1593b575ba819babaa158f51e65790b4df6548" translate="yes" xml:space="preserve">
          <source>Yii supports fixtures via the &lt;code&gt;yii fixture&lt;/code&gt; command line tool. This tool supports:</source>
          <target state="translated">Yii는 &lt;code&gt;yii fixture&lt;/code&gt; 명령 행 도구 를 통해 조명기를 지원합니다 . 이 도구는 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d8595637ded337fed241668635b90c512b6a4725" translate="yes" xml:space="preserve">
          <source>Yii supports the following formats out of the box, each implemented by a &lt;a href=&quot;yii-web-responseformatterinterface&quot;&gt;formatter&lt;/a&gt; class. You can customize these formatters or add new ones by configuring the &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii\web\Response::$formatters&lt;/a&gt; property.</source>
          <target state="translated">Yii는 다음과 같은 형식을 지원하며 각각 &lt;a href=&quot;yii-web-responseformatterinterface&quot;&gt;형식 기&lt;/a&gt; 클래스로 구현됩니다 . &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii \ web \ Response :: $ formatters&lt;/a&gt; 특성 을 구성하여 이러한 포매터를 사용자 정의하거나 새 포매터를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d47376a3b3a2d723b42e1b96bfe3b31e273806c2" translate="yes" xml:space="preserve">
          <source>Yii uses a &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object to represent the information about a pagination scheme. In particular,</source>
          <target state="translated">Yii는 &lt;a href=&quot;yii-data-pagination&quot;&gt;yii \ data \ Pagination&lt;/a&gt; 객체를 사용하여 페이지 매김 구성표에 대한 정보를 나타냅니다. 특히,</target>
        </trans-unit>
        <trans-unit id="e3d708ce8225e8778a8071dda846b3156e655e4a" translate="yes" xml:space="preserve">
          <source>Yii uses the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; to provide most of its I18N features, such as the date and number formatting of the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; class and the message formatting using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt;. Both classes provide a fallback mechanism when the &lt;code&gt;intl&lt;/code&gt; extension is not installed. However, the fallback implementation only works well for English target language. So it is highly recommended that you install &lt;code&gt;intl&lt;/code&gt; when I18N is needed.</source>
          <target state="translated">Yii는 &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl 확장&lt;/a&gt; 을 사용하여 &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt; 클래스 의 날짜 및 숫자 형식 및 &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii \ i18n \ MessageFormatter를&lt;/a&gt; 사용한 메시지 형식과 같은 I18N 기능을 대부분 제공 합니다. 두 클래스 모두 &lt;code&gt;intl&lt;/code&gt; 확장이 설치되지 않은 경우 대체 메커니즘을 제공합니다 . 그러나 대체 구현은 영어 대상 언어에만 적합합니다. 따라서 I18N이 ​​필요할 때는 &lt;code&gt;intl&lt;/code&gt; 을 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8ebf52070f7861b0696af82a6a091e4c23a32c3a" translate="yes" xml:space="preserve">
          <source>Yii uses the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; to provide most of its I18N features, such as the date and number formatting of the &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; class and the message formatting using &lt;a href=&quot;yii-i18n-messageformatter&quot;&gt;yii\i18n\MessageFormatter&lt;/a&gt;. Both classes provide a fallback mechanism when the &lt;code&gt;intl&lt;/code&gt; extension is not installed. However, the fallback implementation only works well for English target language. So it is highly recommended that you install &lt;code&gt;intl&lt;/code&gt; when I18N is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ec6b19198f635405ec7f49ad8221d679f3994e" translate="yes" xml:space="preserve">
          <source>Yii uses the file name extensions to identify which extended syntax an asset is in. By default it recognizes the following syntax and file name extensions:</source>
          <target state="translated">Yii는 파일 ​​이름 확장자를 사용하여 자산이 포함 된 확장 구문을 식별합니다. 기본적으로 다음 구문 및 파일 이름 확장자를 인식합니다.</target>
        </trans-unit>
        <trans-unit id="622047a8a05cf3e5ff6ca47acdc74e84ee1b3809" translate="yes" xml:space="preserve">
          <source>Yii::beginProfile()</source>
          <target state="translated">Yii::beginProfile()</target>
        </trans-unit>
        <trans-unit id="6165791e41339bc4676e9ac090aa3fff2ee53436" translate="yes" xml:space="preserve">
          <source>Yii::endProfile()</source>
          <target state="translated">Yii::endProfile()</target>
        </trans-unit>
        <trans-unit id="2821e4069e58f4a988f91f69957f62b2eb0dd53e" translate="yes" xml:space="preserve">
          <source>Yii::error()</source>
          <target state="translated">Yii::error()</target>
        </trans-unit>
        <trans-unit id="b261955fe444fba86ee00f34d6e4eab1ca3857de" translate="yes" xml:space="preserve">
          <source>Yii::info()</source>
          <target state="translated">Yii::info()</target>
        </trans-unit>
        <trans-unit id="8faa5bd98de63fcd3a6cc12a688447367c199cd3" translate="yes" xml:space="preserve">
          <source>Yii::trace()</source>
          <target state="translated">Yii::trace()</target>
        </trans-unit>
        <trans-unit id="cd5a87a8433f9e7cbd6eeab7dd09a0def9d6c864" translate="yes" xml:space="preserve">
          <source>Yii::warning()</source>
          <target state="translated">Yii::warning()</target>
        </trans-unit>
        <trans-unit id="70487f1d0e08574b6629e7a383b3edcf3424d21b" translate="yes" xml:space="preserve">
          <source>YiiRequirementChecker</source>
          <target state="translated">YiiRequirementChecker</target>
        </trans-unit>
        <trans-unit id="eb36f894205b50eb05855994f30fe4233663b72a" translate="yes" xml:space="preserve">
          <source>YiiRequirementChecker allows checking, if current system meets the requirements for running the Yii application.</source>
          <target state="translated">현재 시스템이 Yii 응용 프로그램 실행 요구 사항을 충족시키는 경우 YiiRequirementChecker를 통해 점검 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dcea3771eeae8b57092080b353e1034d0d299a2" translate="yes" xml:space="preserve">
          <source>You also can create your own data providers for custom tables fields, see Faker library guide for more info (&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;https://github.com/fzaninotto/Faker&lt;/a&gt;); After you created custom provider, for example:</source>
          <target state="translated">사용자 정의 테이블 필드에 대해 고유 한 데이터 제공자를 작성할 수도 있습니다. 자세한 정보는 &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;https://github.com/fzaninotto/Faker를 참조하십시오&lt;/a&gt; . 사용자 지정 공급자를 만든 후 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="569dda332e65107f700a65ba66f11f354a3b38d8" translate="yes" xml:space="preserve">
          <source>You also can use shortcut for the above like the following:</source>
          <target state="translated">위와 같은 바로 가기를 다음과 같이 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="de3c7123eaac0da4d6fd40a0687f03782f4f539f" translate="yes" xml:space="preserve">
          <source>You also need to create the following database table to store session data:</source>
          <target state="translated">또한 세션 데이터를 저장하려면 다음 데이터베이스 테이블을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a16bab3d4c1d3d765e56a38725b5a4fdb9ff45f6" translate="yes" xml:space="preserve">
          <source>You also need to prepare the server so that it can handle the AJAX validation requests. This can be achieved by a code snippet like the following in the controller actions:</source>
          <target state="translated">또한 AJAX 유효성 검증 요청을 처리 할 수 ​​있도록 서버를 준비해야합니다. 이는 컨트롤러 작업에서 다음과 같은 코드 스 니펫으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eba7532686a01fbd611404f2abbf9d20119aca2" translate="yes" xml:space="preserve">
          <source>You are able to fetch additional columns or values from query and store it inside the Active Record. For example, assume we have a table named &lt;code&gt;room&lt;/code&gt;, which contains information about rooms available in the hotel. Each room stores information about its geometrical size using fields &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;. Imagine we need to retrieve list of all available rooms with their volume in descendant order. So you can not calculate volume using PHP, because we need to sort the records by its value, but you also want &lt;code&gt;volume&lt;/code&gt; to be displayed in the list. To achieve the goal, you need to declare an extra field in your &lt;code&gt;Room&lt;/code&gt; Active Record class, which will store &lt;code&gt;volume&lt;/code&gt; value:</source>
          <target state="translated">쿼리에서 추가 열 또는 값을 가져 와서 활성 레코드 내에 저장할 수 있습니다. 예를 들어, 호텔에서 사용 가능한 객실에 대한 정보가 포함 된 &lt;code&gt;room&lt;/code&gt; 이라는 테이블이 있다고 가정 하십시오. 각 방은 &lt;code&gt;length&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; 필드를 사용하여 기하학적 크기에 대한 정보를 저장합니다 . 사용 가능한 모든 룸 목록을 볼륨이 내림차순으로 검색해야한다고 상상해보십시오. 따라서 값을 기준으로 레코드를 정렬해야하지만 목록에 &lt;code&gt;volume&lt;/code&gt; 을 표시 하고자하므로 PHP를 사용하여 볼륨을 계산할 수 없습니다 . 목표를 달성하기 위해, 당신은 당신에 추가 필드를 선언 할 필요가 &lt;code&gt;Room&lt;/code&gt; 에 저장되는, 액티브 레코드 클래스 &lt;code&gt;volume&lt;/code&gt; 값:</target>
        </trans-unit>
        <trans-unit id="dfeb92ca4f5a667e6ca4adcf1a2bdfb9e7579ec6" translate="yes" xml:space="preserve">
          <source>You call &lt;a href=&quot;yii-base-view#beginBlock()-detail&quot;&gt;beginBlock()&lt;/a&gt; and &lt;a href=&quot;yii-base-view#endBlock()-detail&quot;&gt;endBlock()&lt;/a&gt; to define a block. The block can then be accessed via &lt;code&gt;$view-&amp;gt;blocks[$blockID]&lt;/code&gt;, where &lt;code&gt;$blockID&lt;/code&gt; stands for a unique ID that you assign to the block when defining it.</source>
          <target state="translated">&lt;a href=&quot;yii-base-view#beginBlock()-detail&quot;&gt;beginBlock ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-view#endBlock()-detail&quot;&gt;endBlock ()&lt;/a&gt; 을 호출 하여 블록을 정의합니다. 그런 다음 &lt;code&gt;$view-&amp;gt;blocks[$blockID]&lt;/code&gt; 를 통해 블록에 액세스 할 수 있습니다 . 여기서 &lt;code&gt;$blockID&lt;/code&gt; 는 블록을 정의 할 때 블록에 할당하는 고유 ID를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b8c48ff360bc0286cda15b5d65528097893d2d7d" translate="yes" xml:space="preserve">
          <source>You can access a &lt;em&gt;public&lt;/em&gt; member variable or a &lt;a href=&quot;guide-concept-properties&quot;&gt;property&lt;/a&gt; defined by a getter and/or a setter of the behavior through the component it is attached to:</source>
          <target state="translated">다음 과 같이 연결된 구성 요소를 통해 동작의 getter 및 / 또는 setter에 의해 정의 된 &lt;em&gt;공용&lt;/em&gt; 멤버 변수 또는 &lt;a href=&quot;guide-concept-properties&quot;&gt;특성에&lt;/a&gt; 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="157461627b0d21edc5ecf3b56a02c762bba1d75c" translate="yes" xml:space="preserve">
          <source>You can access an attribute like accessing a normal object property:</source>
          <target state="translated">일반 객체 속성에 액세스하는 것과 같은 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69a5593c56e51551acced1fa307e287136a97d85" translate="yes" xml:space="preserve">
          <source>You can access the &lt;a href=&quot;yii-base-theme&quot;&gt;yii\base\Theme&lt;/a&gt; object through the &lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;yii\base\View::$theme&lt;/a&gt; property. For example, in a view file, you can write the following code because &lt;code&gt;$this&lt;/code&gt; refers to the view object:</source>
          <target state="translated">&lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;yii \ base \ View :: $ theme&lt;/a&gt; 속성을 통해 &lt;a href=&quot;yii-base-theme&quot;&gt;yii \ base \ Theme&lt;/a&gt; 객체에 액세스 할 수 있습니다 . 예를 들어, &lt;code&gt;$this&lt;/code&gt; 는 뷰 객체를 참조하기 때문에 뷰 파일에서 다음 코드를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89affb68d5e842c47584499c03f89c6d2c79b2e8" translate="yes" xml:space="preserve">
          <source>You can add attachments to message using methods &lt;code&gt;attach()&lt;/code&gt; and &lt;code&gt;attachContent()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;attach()&lt;/code&gt; 및 &lt;code&gt;attachContent()&lt;/code&gt; 메소드를 사용하여 메시지에 첨부 파일을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26bc1cdbd072644ddb9b8594094e394e3d981a5f" translate="yes" xml:space="preserve">
          <source>You can add further conditions to the button, for example only display it, when the model is editable (here assuming you have a status field that indicates that):</source>
          <target state="translated">모델을 편집 할 수있을 때만 버튼에 조건을 추가하여 표시 할 수 있습니다 (여기서 상태 필드가 있다고 가정).</target>
        </trans-unit>
        <trans-unit id="7a5ce015e2dc45310833c92b13373dc4a3f89ea4" translate="yes" xml:space="preserve">
          <source>You can add parameters to a translation message that will be substituted with the corresponding value after translation. The format for this is to use curly brackets around the parameter name as you can see in the following example:</source>
          <target state="translated">번역 후 해당 값으로 대체 될 번역 메시지에 매개 변수를 추가 할 수 있습니다. 이를위한 형식은 다음 예제에서 볼 수 있듯이 매개 변수 이름 주위에 중괄호를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b3ac4813d93fe3dff39c2429520fb32a119a1a5e" translate="yes" xml:space="preserve">
          <source>You can also access attributes like accessing array elements, thanks to the support for &lt;a href=&quot;http://php.net/manual/en/class.arrayaccess.php&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; by &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;:</source>
          <target state="translated">또한 액세스에 대한 지원에 배열 요소, 감사 접근과 같은 속성 수 &lt;a href=&quot;http://php.net/manual/en/class.arrayaccess.php&quot;&gt;ArrayAccess&lt;/a&gt; 과 &lt;a href=&quot;http://php.net/manual/en/class.traversable.php&quot;&gt;에 이동&lt;/a&gt; 하여 &lt;a href=&quot;yii-base-model&quot;&gt;모델 YII \ 기지를 \&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4f0dd65d0819e4b7810e228cdcf18fb97d75ff16" translate="yes" xml:space="preserve">
          <source>You can also access attributes like accessing array elements, thanks to the support for &lt;a href=&quot;https://php.net/manual/en/class.arrayaccess.php&quot;&gt;ArrayAccess&lt;/a&gt; and &lt;a href=&quot;https://php.net/manual/en/class.traversable.php&quot;&gt;Traversable&lt;/a&gt; by &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1572b82019b125a1e9d0d42fdb507779ab46cf3" translate="yes" xml:space="preserve">
          <source>You can also attach a handler to an event when configuring a component with a configuration array. The syntax is like the following:</source>
          <target state="translated">구성 배열로 구성 요소를 구성 할 때 이벤트에 처리기를 연결할 수도 있습니다. 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7de18c911e1ef733e76b9430b0bd10a24d121fb5" translate="yes" xml:space="preserve">
          <source>You can also call a &lt;em&gt;public&lt;/em&gt; method of the behavior similarly:</source>
          <target state="translated">비슷한 방식으로 &lt;em&gt;공개&lt;/em&gt; 행동 방법을 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caf98e0e206f1755b05a2702c2c7d100ec294ad9" translate="yes" xml:space="preserve">
          <source>You can also configure multiple masters with multiple slaves. For example,</source>
          <target state="translated">여러 슬레이브가있는 여러 마스터를 구성 할 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="60736dec98c4b4b9749014e258618ee9eed4646d" translate="yes" xml:space="preserve">
          <source>You can also directly manipulate &lt;a href=&quot;yii-base-model#%24validators-detail&quot;&gt;$validators&lt;/a&gt; to add or remove validation rules. This method provides a shortcut.</source>
          <target state="translated">또한 직접 조작 할 수 &lt;a href=&quot;yii-base-model#%24validators-detail&quot;&gt;$ 검사기를&lt;/a&gt; 추가하거나 유효성 검사 규칙을 제거합니다. 이 방법은 바로 가기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4ee1dfc9b9d4aeeb82bbf9a0ada70d7e13afa148" translate="yes" xml:space="preserve">
          <source>You can also disable &lt;em&gt;all&lt;/em&gt; asset bundles by setting &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하여 &lt;em&gt;모든&lt;/em&gt; 자산 번들을 비활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c11f111d857dfbc7fc765cb818fb89da570ac0b0" translate="yes" xml:space="preserve">
          <source>You can also embed parameters in the server names to extract dynamic information from them. For example, the following rule will parse the URL &lt;code&gt;http://en.example.com/posts&lt;/code&gt; into the route &lt;code&gt;post/index&lt;/code&gt; and the parameter &lt;code&gt;language=en&lt;/code&gt;.</source>
          <target state="translated">서버 이름에 매개 변수를 포함시켜 동적 정보를 추출 할 수도 있습니다. 예를 들어 다음 규칙은 URL &lt;code&gt;http://en.example.com/posts&lt;/code&gt; 를 경로 &lt;code&gt;post/index&lt;/code&gt; 및 &lt;code&gt;language=en&lt;/code&gt; 매개 변수 로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="1bcc1e34c03b97afa45545805d17a3df8ecb0b1f" translate="yes" xml:space="preserve">
          <source>You can also explicitly create a Deferred object and call its &lt;code&gt;resolve()&lt;/code&gt; method when the asynchronous callback is hit. The following example shows how to validate the dimensions of an uploaded image file on the client-side.</source>
          <target state="translated">비동기 콜백이 발생하면 Deferred 객체를 명시 적으로 만들고 &lt;code&gt;resolve()&lt;/code&gt; 메서드를 호출 할 수도 있습니다 . 다음 예제는 클라이언트 측에서 업로드 된 이미지 파일의 크기를 확인하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6e60023513100e476077c343b132072d01f1a481" translate="yes" xml:space="preserve">
          <source>You can also explicitly specify a particular migration to which the database should be migrated by using the &lt;code&gt;migrate/to&lt;/code&gt; command in one of the following formats:</source>
          <target state="translated">다음 형식 중 하나로 &lt;code&gt;migrate/to&lt;/code&gt; 명령 을 사용하여 데이터베이스를 마이그레이션 할 특정 마이그레이션을 명시 적으로 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="79a89012d5a9d009688f41c23ea754d0b9bb50da" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the date value:</source>
          <target state="translated">날짜 값을 형식화하기 위해 사용자 정의 패턴을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="689fd8bacd2925bec04ef5aace8c1e1f79aa42db" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the number. For example,</source>
          <target state="translated">숫자를 형식화하기 위해 사용자 정의 패턴을 지정할 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="c6a4e452e1f645ef84a3a7d8bea943d43ed9e0a9" translate="yes" xml:space="preserve">
          <source>You can also specify a custom pattern to format the time value:</source>
          <target state="translated">시간 값을 형식화하기 위해 사용자 정의 패턴을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="48578b7694795f2795d657f14422fdb191570d8f" translate="yes" xml:space="preserve">
          <source>You can also specify file content via \yii\mongodb\file\newFileContent attribute:</source>
          <target state="translated">\ yii \ mongodb \ file \ newFileContent 속성을 통해 파일 내용을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a946a2d68e2ebd1277bf82520d898c3d97800ed9" translate="yes" xml:space="preserve">
          <source>You can also specify operator explicitly:</source>
          <target state="translated">연산자를 명시 적으로 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="42d1b7a1ae5cfd9a9417bbf70ed596831db2ccb1" translate="yes" xml:space="preserve">
          <source>You can also upload multiple files at once, with some adjustments to the code listed in the previous subsections.</source>
          <target state="translated">이전 하위 섹션에 나열된 코드를 약간 조정하여 한 번에 여러 파일을 업로드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="53e2ef0ace032178ca75f26efa7bbadd593def20" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;yii-db-command#noCache()-detail&quot;&gt;yii\db\Command::noCache()&lt;/a&gt; to disable query caching for a single command. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-command#noCache()-detail&quot;&gt;yii \ db \ Command :: noCache ()&lt;/a&gt; 를 사용하여 단일 명령에 대한 쿼리 캐싱을 비활성화 할 수도 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="81fa1c6bedee5f001616207fd46bc2c4db1c6308" translate="yes" xml:space="preserve">
          <source>You can also use sub-queries with hash format like the following:</source>
          <target state="translated">다음과 같은 해시 형식의 하위 쿼리를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a5f522ec648a6fe74868a87fcc4d0b8ec3c3958" translate="yes" xml:space="preserve">
          <source>You can also use the new query building methods when defining relations about &lt;code&gt;Comment&lt;/code&gt; or performing relational query:</source>
          <target state="translated">&lt;code&gt;Comment&lt;/code&gt; 에 대한 관계를 정의 하거나 관계형 쿼리를 수행 할 때 새로운 쿼리 작성 방법을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e1bf39b6a5e391cd1068412229c4070e48651bf" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget ()&lt;/a&gt; 메소드를 사용하여 &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; 에서이 위젯을 사용할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26595b510e16e3cc600755a6b6ca64e3778991e0" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; using the &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget()&lt;/a&gt; method, for example like this:</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;widget ()&lt;/a&gt; 메소드를 사용하여 &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm&lt;/a&gt; 에서이 위젯을 사용할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7025d97894e50fb9a8ce5cdd7224f18e6dc02263" translate="yes" xml:space="preserve">
          <source>You can also use this widget in an \yii\jui\yii\widgets\ActiveForm using the \yii\jui\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="translated">\ yii \ jui \ yii \ widgets \ ActiveField :: widget () 메소드를 사용하여 \ yii \ jui \ yii \ widgets \ ActiveForm에서이 위젯을 사용할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e83f59a8228d3efd18a3c317f72226f99b16111" translate="yes" xml:space="preserve">
          <source>You can append additional constraints when using abstract types. In the above example, &lt;code&gt; NOT NULL&lt;/code&gt; is appended to &lt;code&gt;Schema::TYPE_STRING&lt;/code&gt; to specify that the column cannot be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">추상 유형을 사용할 때 추가 제한 조건을 추가 할 수 있습니다. 위의 예에서 &lt;code&gt; NOT NULL&lt;/code&gt; 이 &lt;code&gt;Schema::TYPE_STRING&lt;/code&gt; 에 추가되어 열이 &lt;code&gt;null&lt;/code&gt; 될 수 없도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="ffa0a41fd18333d6136b1b9a14b0a07790a18e75" translate="yes" xml:space="preserve">
          <source>You can attach a behavior to a &lt;a href=&quot;yii-base-component&quot;&gt;component&lt;/a&gt; either statically or dynamically. The former is more common in practice.</source>
          <target state="translated">&lt;a href=&quot;yii-base-component&quot;&gt;구성 요소에&lt;/a&gt; 동작을 정적으로 또는 동적으로 첨부 할 수 있습니다 . 전자는 실제로 더 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="fc2e6d1aad0c2e7f0f97aceefbb3eaa2cecc0e9c" translate="yes" xml:space="preserve">
          <source>You can attach a handler to an event by calling the &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt; method. For example:</source>
          <target state="translated">&lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii \ base \ Component :: on ()&lt;/a&gt; 메소드 를 호출하여 핸들러를 이벤트에 첨부 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75bfce168ff025f63c5c6c8102d03bae91f9260b" translate="yes" xml:space="preserve">
          <source>You can calculate the aggregation fields as well using defined relations:</source>
          <target state="translated">정의 된 관계를 사용하여 집계 필드를 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8daa1945db57b6f2831fb8dc280cef8a185c0839" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; to resolve a root alias into the file path or URL it represents. The same method can also resolve a derived alias into the corresponding file path or URL:</source>
          <target state="translated">&lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii :: getAlias ​​()&lt;/a&gt; 를 호출 하여 루트 별칭을 나타내는 파일 경로 또는 URL로 루트 별칭을 확인할 수 있습니다 . 같은 방법으로 파생 된 별칭을 해당 파일 경로 또는 URL로 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a0e08406431f4c6acf511ac3d57a841deba4799" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-data-sort#link()-detail&quot;&gt;yii\data\Sort::link()&lt;/a&gt; to generate a hyperlink upon which end users can click to request sorting the data by the specified attribute. You may also call &lt;a href=&quot;yii-data-sort#createUrl()-detail&quot;&gt;yii\data\Sort::createUrl()&lt;/a&gt; to create a sortable URL. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-data-sort#link()-detail&quot;&gt;yii \ data \ Sort :: link ()&lt;/a&gt; 를 호출 하여 최종 사용자가 클릭하여 지정된 속성별로 데이터 정렬을 요청할 수있는 하이퍼 링크를 생성 할 수 있습니다. &lt;a href=&quot;yii-data-sort#createUrl()-detail&quot;&gt;yii \ data \ Sort :: createUrl ()&lt;/a&gt; 을 호출 하여 정렬 가능한 URL을 만들 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="79415c016cbacc594c12bf7d7594e8afdc01d641" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-activerecord#deleteAll()-detail&quot;&gt;yii\db\ActiveRecord::deleteAll()&lt;/a&gt; to delete multiple or all rows of data. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-activerecord#deleteAll()-detail&quot;&gt;yii \ db \ ActiveRecord :: deleteAll ()&lt;/a&gt; 을 호출 하여 여러 또는 모든 데이터 행을 삭제할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="128f17d03304aa3f27f9d5de64b2c0a982b6f587" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addGroupBy()-detail&quot;&gt;addGroupBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;GROUP BY&lt;/code&gt; fragment. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-query#addGroupBy()-detail&quot;&gt;addGroupBy ()&lt;/a&gt; 를 호출 하여 &lt;code&gt;GROUP BY&lt;/code&gt; 조각에 열을 추가 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="74f7a52ddd3543d83c0cee67008794f6809196bb" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#addSelect()-detail&quot;&gt;addSelect()&lt;/a&gt; to select additional columns. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-query#addSelect()-detail&quot;&gt;addSelect ()&lt;/a&gt; 를 호출 하여 추가 열을 선택할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="6b8c117bd9498aa128c75ee96a0f34cc701908a7" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#andHaving()-detail&quot;&gt;andHaving()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orHaving()-detail&quot;&gt;orHaving()&lt;/a&gt; to append additional conditions to the &lt;code&gt;HAVING&lt;/code&gt; fragment. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-query#andHaving()-detail&quot;&gt;andHaving ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-db-query#orHaving()-detail&quot;&gt;orHaving ()&lt;/a&gt; 을 호출 하여 &lt;code&gt;HAVING&lt;/code&gt; 프래그먼트에 추가 조건을 추가 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="b5215a1a408079b2fbe507a63659daca8f59f3ba" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-query#union()-detail&quot;&gt;union()&lt;/a&gt; multiple times to append more &lt;code&gt;UNION&lt;/code&gt; fragments.</source>
          <target state="translated">&lt;code&gt;UNION&lt;/code&gt; 조각을 더 추가하기 위해 &lt;a href=&quot;yii-db-query#union()-detail&quot;&gt;union ()을&lt;/a&gt; 여러 번 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2bd29c906dfe6a09453f31d34d2154a34c9033cc" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-db-querytrait#addOrderBy()-detail&quot;&gt;addOrderBy()&lt;/a&gt; to add additional columns to the &lt;code&gt;ORDER BY&lt;/code&gt; fragment. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-querytrait#addOrderBy()-detail&quot;&gt;addOrderBy ()&lt;/a&gt; 를 호출 하여 &lt;code&gt;ORDER BY&lt;/code&gt; 프래그먼트에 열을 추가 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="19bd3b2fcbf6cf9b7a9ca8ea472b86934af498db" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-session#open()-detail&quot;&gt;open()&lt;/a&gt; and &lt;a href=&quot;yii-web-session#close()-detail&quot;&gt;close()&lt;/a&gt; multiple times without causing errors; internally the methods will first check if the session is already open.</source>
          <target state="translated">오류없이 &lt;a href=&quot;yii-web-session#open()-detail&quot;&gt;open ()&lt;/a&gt; 및 &lt;a href=&quot;yii-web-session#close()-detail&quot;&gt;close ()를&lt;/a&gt; 여러 번 호출 할 수 있습니다 . 내부적으로 메소드는 먼저 세션이 이미 열려 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="21cb9c1ca2162dbe68887e3d210d3a55c525fb57" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;getInstance()&lt;/a&gt; to retrieve the instance of an uploaded file, and then use &lt;a href=&quot;yii-web-uploadedfile#saveAs()-detail&quot;&gt;saveAs()&lt;/a&gt; to save it on the server. You may also query other information about the file, including &lt;a href=&quot;yii-web-uploadedfile#%24name-detail&quot;&gt;$name&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24tempName-detail&quot;&gt;$tempName&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24type-detail&quot;&gt;$type&lt;/a&gt;, &lt;a href=&quot;yii-web-uploadedfile#%24size-detail&quot;&gt;$size&lt;/a&gt; and &lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$error&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;getInstance ()&lt;/a&gt; 를 호출 하여 업로드 된 파일의 인스턴스를 검색 한 다음 &lt;a href=&quot;yii-web-uploadedfile#saveAs()-detail&quot;&gt;saveAs ()&lt;/a&gt; 를 사용 하여 서버에 저장할 수 있습니다. &lt;a href=&quot;yii-web-uploadedfile#%24name-detail&quot;&gt;$ name&lt;/a&gt; , &lt;a href=&quot;yii-web-uploadedfile#%24tempName-detail&quot;&gt;$ tempName&lt;/a&gt; , &lt;a href=&quot;yii-web-uploadedfile#%24type-detail&quot;&gt;$ type&lt;/a&gt; , &lt;a href=&quot;yii-web-uploadedfile#%24size-detail&quot;&gt;$ size&lt;/a&gt; 및 &lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$ error&lt;/a&gt; 등 파일에 대한 다른 정보를 쿼리 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d396f2e1d93c94a35d240e2fe82a22dabfacd93d" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;with()&lt;/code&gt; multiple times. Each call will add relations to the existing ones. For example, the following two statements are equivalent:</source>
          <target state="translated">&lt;code&gt;with()&lt;/code&gt; 여러 번 호출 할 수 있습니다 . 각 통화는 기존 통화에 관계를 추가합니다. 예를 들어 다음 두 문장은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="6637b3bb6366762dae549304b3931dd3f0444c83" translate="yes" xml:space="preserve">
          <source>You can check the validation result by &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors()&lt;/a&gt;, like you do with a normal model. You may also access the dynamic attributes defined through the model instance, e.g., &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; and &lt;code&gt;$model-&amp;gt;email&lt;/code&gt;.</source>
          <target state="translated">일반 모델과 마찬가지로 &lt;a href=&quot;yii-base-model#hasErrors()-detail&quot;&gt;hasErrors ()로&lt;/a&gt; 유효성 검사 결과를 확인할 수 있습니다 . 모델 인스턴스를 통해 정의 된 동적 속성 (예 : &lt;code&gt;$model-&amp;gt;name&lt;/code&gt; 및 &lt;code&gt;$model-&amp;gt;email&lt;/code&gt; 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc715b3e12074944633b5b9c489a9a76260a346e" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii\web\UrlManager::$rules&lt;/a&gt; as an array with keys being the &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;patterns&lt;/a&gt; and values the corresponding &lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;routes&lt;/a&gt;. Each pattern-route pair constructs a URL rule. For example, the following &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;rules&lt;/a&gt; configuration declares two URL rules. The first rule matches a URL &lt;code&gt;posts&lt;/code&gt; and maps it into the route &lt;code&gt;post/index&lt;/code&gt;. The second rule matches a URL matching the regular expression &lt;code&gt;post/(\d+)&lt;/code&gt; and maps it into the route &lt;code&gt;post/view&lt;/code&gt; and defines a query parameter named &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;yii \ web \ UrlManager :: $ rules&lt;/a&gt; 를 키가 &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;패턴 인&lt;/a&gt; 배열로 구성 하고 해당 &lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;경로를&lt;/a&gt; 값으로 지정할 수 있습니다 . 각 패턴 경로 쌍은 URL 규칙을 구성합니다. 예를 들어 다음 &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;규칙&lt;/a&gt; 구성은 두 개의 URL 규칙을 선언합니다. 첫 번째 규칙은 URL &lt;code&gt;posts&lt;/code&gt; 과 일치 하고 경로 &lt;code&gt;post/index&lt;/code&gt; 매핑합니다 . 두 번째 규칙은 정규식 &lt;code&gt;post/(\d+)&lt;/code&gt; 와 일치하는 URL을 일치시키고 이를 루트 &lt;code&gt;post/view&lt;/code&gt; 에 매핑하고 &lt;code&gt;id&lt;/code&gt; 라는 쿼리 매개 변수를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8798757fe341123b629d74381c88fd3a8dc4b6" translate="yes" xml:space="preserve">
          <source>You can configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax. If not set, all forms with &lt;code&gt;data-pjax&lt;/code&gt; attribute within the enclosed content of Pjax will trigger pjax requests.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;pjax&lt;/a&gt; 를 트리거 할 양식 제출을 지정 하도록 $ formSelector 를 구성 할 수 있습니다 . 설정하지 않으면 &lt;code&gt;data-pjax&lt;/code&gt; 의 동봉 된 컨텐츠 내에 data-pjax 속성이있는 모든 양식이 pjax 요청을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="223f8994ac2c774bbd368d65995853e353e7dcc3" translate="yes" xml:space="preserve">
          <source>You can configure application languages in the &quot;application configuration&quot; like the following:</source>
          <target state="translated">다음과 같이 &quot;응용 프로그램 구성&quot;에서 응용 프로그램 언어를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4730f3df0111223e740948366c12d20360b8e5db" translate="yes" xml:space="preserve">
          <source>You can configure multiple asset bundles similarly through &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt;. The array keys should be the class names (without the leading backslash) of the asset bundles, and the array values should be the corresponding &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles를&lt;/a&gt; 통해 여러 자산 번들을 유사하게 구성 할 수 있습니다 . 배열 키는 자산 번들의 클래스 이름 (역 슬래시없이)이어야하며 배열 값은 해당 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성 배열&lt;/a&gt; 이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="44bd9421b6ea3945e9564161985f7350c1fbda28" translate="yes" xml:space="preserve">
          <source>You can configure multiple flavors using the &lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$flavors&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;yii-helpers-basemarkdown#%24flavors-detail&quot;&gt;$ flavors&lt;/a&gt; 속성을 사용하여 여러 가지 맛을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="935eb0e94f61a7614938e155e7775fe1ee8a0ed9" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; to overcome the constraints of the controller IDs and class names described above. This is mainly useful when you are using third-party controllers and you do not have control over their class names.</source>
          <target state="translated">위에서 설명한 컨트롤러 ID 및 클래스 이름의 제약 조건을 극복 하도록 &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;컨트롤러 맵&lt;/a&gt; 을 구성 할 수 있습니다 . 이것은 주로 타사 컨트롤러를 사용하고 클래스 이름을 제어 할 수없는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="43ea54d63a88e4cc902334a9e69530bb7d9dfc4d" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;a href=&quot;yii-web-errorhandler#%24errorView-detail&quot;&gt;errorView&lt;/a&gt; and &lt;a href=&quot;yii-web-errorhandler#%24exceptionView-detail&quot;&gt;exceptionView&lt;/a&gt; properties of the error handler to use your own views to customize the error display.</source>
          <target state="translated">&lt;a href=&quot;yii-web-errorhandler#%24errorView-detail&quot;&gt;고유 한보기를&lt;/a&gt; 사용하여 오류 표시를 사용자 정의하도록 오류 핸들러 의 errorView 및 &lt;a href=&quot;yii-web-errorhandler#%24exceptionView-detail&quot;&gt;exceptionView&lt;/a&gt; 특성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ddb7d132ff7d3d24f0c0484d3a911f72081d496" translate="yes" xml:space="preserve">
          <source>You can create actions in two ways: inline actions and standalone actions. An inline action is defined as a method in the controller class, while a standalone action is a class extending &lt;a href=&quot;yii-base-action&quot;&gt;yii\base\Action&lt;/a&gt; or its child classes. Inline actions take less effort to create and are often preferred if you have no intention to reuse these actions. Standalone actions, on the other hand, are mainly created to be used in different controllers or be redistributed as &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt;.</source>
          <target state="translated">인라인 작업과 독립 실행 형 작업의 두 가지 방법으로 작업을 만들 수 있습니다. 인라인 조치는 컨트롤러 클래스에서 메소드로 정의되는 반면 독립형 조치는 &lt;a href=&quot;yii-base-action&quot;&gt;yii \ base \ Action&lt;/a&gt; 또는 해당 하위 클래스를 확장하는 클래스입니다. 인라인 조치는 작성하는 데 적은 노력이 들며 이러한 조치를 재사용 할 의사가없는 경우 선호되는 경우가 많습니다. 반면에 독립형 조치는 주로 다른 컨트롤러에서 사용되거나 &lt;a href=&quot;guide-structure-extensions&quot;&gt;확장&lt;/a&gt; 으로 재배포되도록 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3749eebd410c75f5ee9936eefa2d3bfb1292b37" translate="yes" xml:space="preserve">
          <source>You can create model classes by extending &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; or its child classes. The base class &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; supports many useful features:</source>
          <target state="translated">&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 또는 해당 하위 클래스 를 확장하여 모델 클래스를 작성할 수 있습니다 . 기본 클래스 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 은 많은 유용한 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1856ab667a17768f37e4593a79849823eb3e6fd1" translate="yes" xml:space="preserve">
          <source>You can create the &lt;code&gt;site/error&lt;/code&gt; action as follows,</source>
          <target state="translated">다음과 같이 &lt;code&gt;site/error&lt;/code&gt; 조치를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b2ae815bce6fd26e0ce241da8bc8ea64e6048bd" translate="yes" xml:space="preserve">
          <source>You can customize the error message of a rule by specifying the &lt;code&gt;message&lt;/code&gt; property when declaring the rule, like the following,</source>
          <target state="translated">다음과 같이 규칙을 선언 할 때 &lt;code&gt;message&lt;/code&gt; 속성 을 지정하여 규칙의 오류 메시지를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71181a5c128a98188695a4880907d39182477435" translate="yes" xml:space="preserve">
          <source>You can customize the pre-processor commands and the supported extended syntax by configuring &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;yii\web\AssetManager::$converter&lt;/a&gt; like the following:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;yii \ web \ AssetManager :: $ converter&lt;/a&gt; 를 구성하여 프리 프로세서 명령 및 지원되는 확장 구문을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2afa663d338b56ea78528b19566306a1a9d8542" translate="yes" xml:space="preserve">
          <source>You can customize the widget appearance by using &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end()&lt;/a&gt; syntax along with using method &lt;a href=&quot;yii-authclient-widgets-authchoice#clientLink()-detail&quot;&gt;clientLink()&lt;/a&gt; or &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;yii-authclient-widgets-authchoice#clientLink()-detail&quot;&gt;clientLink ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl ()&lt;/a&gt; 메소드와 함께 &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;begin ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;end ()&lt;/a&gt; 구문을 사용하여 위젯 모양을 사용자 정의 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99f3df88feb4587383abc941ea119e285a94c400" translate="yes" xml:space="preserve">
          <source>You can define an alias for a file path or URL by calling &lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;Yii::setAlias()&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;Yii :: setAlias ​​()를&lt;/a&gt; 호출하여 파일 경로 또는 URL의 별명을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1162416a41713002cf2d15f67671c8e8ac01005c" translate="yes" xml:space="preserve">
          <source>You can define an alias using another alias (either root or derived):</source>
          <target state="translated">다른 별명 (루트 또는 파생)을 사용하여 별명을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7cd803556699b6df350a80c63dda1a95ed38c77" translate="yes" xml:space="preserve">
          <source>You can detect the identity of the current user using the expression &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;. It returns an instance of the &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; representing the currently logged-in user, or &lt;code&gt;null&lt;/code&gt; if the current user is not authenticated (meaning a guest). The following code shows how to retrieve other authentication-related information from &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt; 표현식을 사용하여 현재 사용자의 ID를 감지 할 수 있습니다 . 현재 로그인 한 사용자를 나타내는 &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;아이디 클래스&lt;/a&gt; 의 인스턴스를 반환 하거나 현재 사용자가 인증되지 않은 경우 (손님을 의미) &lt;code&gt;null&lt;/code&gt; 을 반환합니다. 다음 코드는 &lt;a href=&quot;yii-web-user&quot;&gt;yii \ web \ User&lt;/a&gt; 에서 다른 인증 관련 정보를 검색하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="daa755367836ad9735708c9a775bc6240b216490" translate="yes" xml:space="preserve">
          <source>You can differentiate the two states of an Active Record instance by checking its &lt;a href=&quot;yii-db-baseactiverecord#%24isNewRecord-detail&quot;&gt;isNewRecord&lt;/a&gt; property value. This property is also used by &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; internally as follows:</source>
          <target state="translated">&lt;a href=&quot;yii-db-baseactiverecord#%24isNewRecord-detail&quot;&gt;isNewRecord&lt;/a&gt; 속성 값 을 확인하여 Active Record 인스턴스의 두 가지 상태를 구별 할 수 있습니다 . 이 특성은 다음과 같이 내부적으로 &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save ()&lt;/a&gt; 에서도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="166dd3e176b7fc8d853d3022f55bc65930802728" translate="yes" xml:space="preserve">
          <source>You can disable one or multiple asset bundles by associating &lt;code&gt;false&lt;/code&gt; with the names of the asset bundles that you want to disable. When you register a disabled asset bundle with a view, none of its dependent bundles will be registered, and the view also will not include any of the assets in the bundle in the page it renders. For example, to disable &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii\web\JqueryAsset&lt;/a&gt;, you can use the following configuration:</source>
          <target state="translated">비활성화 하려는 자산 번들의 이름 과 &lt;code&gt;false&lt;/code&gt; 를 연관시켜 하나 이상의 자산 번들을 비활성화 할 수 있습니다 . 비활성화 된 자산 번들을 뷰에 등록하면 종속 번들이 등록되지 않으며 뷰는 렌더링하는 페이지의 번들에 자산도 포함되지 않습니다. 예를 들어 &lt;a href=&quot;yii-web-jqueryasset&quot;&gt;yii \ web \ JqueryAsset&lt;/a&gt; 을 비활성화 하려면 다음 구성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09483c4a2201c6538e9a5c4289caf7692399e721" translate="yes" xml:space="preserve">
          <source>You can eagerly load deeply nested relations, such as &lt;code&gt;a.b.c.d&lt;/code&gt;. All parent relations will be eagerly loaded. That is, when you call &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using &lt;code&gt;a.b.c.d&lt;/code&gt;, you will eagerly load &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;a.b&lt;/code&gt;, &lt;code&gt;a.b.c&lt;/code&gt; and &lt;code&gt;a.b.c.d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.b.c.d&lt;/code&gt; 와 같이 깊이 중첩 된 관계를 열심히로드 할 수 있습니다 . 모든 부모 관계가 열심히로드됩니다. 즉, &lt;code&gt;a.b.c.d&lt;/code&gt; 사용하여 &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with ()&lt;/a&gt; 를 호출 &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;a.b&lt;/code&gt; , &lt;code&gt;a.b.c&lt;/code&gt; 및 &lt;code&gt;a.b.c.d&lt;/code&gt; 열심히로드하게됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c4c2316e9d256b16dfa95cc443f856100262185" translate="yes" xml:space="preserve">
          <source>You can eagerly load one or multiple relations. You can even eagerly load &lt;em&gt;nested relations&lt;/em&gt;. A nested relation is a relation that is declared within a related Active Record class. For example, &lt;code&gt;Customer&lt;/code&gt; is related with &lt;code&gt;Order&lt;/code&gt; through the &lt;code&gt;orders&lt;/code&gt; relation, and &lt;code&gt;Order&lt;/code&gt; is related with &lt;code&gt;Item&lt;/code&gt; through the &lt;code&gt;items&lt;/code&gt; relation. When querying for &lt;code&gt;Customer&lt;/code&gt;, you can eagerly load &lt;code&gt;items&lt;/code&gt; using the nested relation notation &lt;code&gt;orders.items&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 관계를 열심히로드 할 수 있습니다. &lt;em&gt;중첩 된 관계를&lt;/em&gt; 열심히로드 할 수도 있습니다 . 중첩 관계는 관련 Active Record 클래스 내에 선언 된 관계입니다. 예를 들어, &lt;code&gt;Customer&lt;/code&gt; 관련되어 &lt;code&gt;Order&lt;/code&gt; 관통 &lt;code&gt;orders&lt;/code&gt; 관계, 그리고 &lt;code&gt;Order&lt;/code&gt; 관련되는 &lt;code&gt;Item&lt;/code&gt; 의 관통 &lt;code&gt;items&lt;/code&gt; 관계. &lt;code&gt;Customer&lt;/code&gt; 를 쿼리 할 때 중첩 된 관계 표기법 &lt;code&gt;orders.items&lt;/code&gt; 를 사용하여 &lt;code&gt;items&lt;/code&gt; 을 열심히로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="969edff440702198f6a774126ea676ffa551501e" translate="yes" xml:space="preserve">
          <source>You can embed images into the message content using &lt;code&gt;embed()&lt;/code&gt; method. This method returns the attachment id, which should be then used at &lt;code&gt;img&lt;/code&gt; tag. This method is easy to use when composing message content via view file:</source>
          <target state="translated">&lt;code&gt;embed()&lt;/code&gt; 메서드를 사용하여 이미지를 메시지 내용에 포함시킬 수 있습니다 . 이 메소드는 첨부 파일 ID를 반환 한 다음 &lt;code&gt;img&lt;/code&gt; 태그 에서 사용해야합니다 . 이 방법은보기 파일을 통해 메시지 내용을 작성할 때 사용하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="8c119654193a7a7160f6567e04f6057eb96b0ec5" translate="yes" xml:space="preserve">
          <source>You can embed parameter names in the route of a URL rule. This allows a URL rule to be used for matching multiple routes. For example, the following rules embed &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; parameters in the routes.</source>
          <target state="translated">URL 규칙의 경로에 매개 변수 이름을 포함 할 수 있습니다. 이를 통해 URL 규칙을 사용하여 여러 경로를 일치시킬 수 있습니다. 예를 들어 다음 규칙 은 경로에 &lt;code&gt;controller&lt;/code&gt; 및 &lt;code&gt;action&lt;/code&gt; 매개 변수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="8bc594d4aa264d879450c0921cc90f54c2f2ef02" translate="yes" xml:space="preserve">
          <source>You can enable or disable a log target by configuring its &lt;a href=&quot;yii-log-target#%24enabled-detail&quot;&gt;enabled&lt;/a&gt; property. You may do so via the log target configuration or by the following PHP statement in your code:</source>
          <target state="translated">&lt;a href=&quot;yii-log-target#%24enabled-detail&quot;&gt;enabled&lt;/a&gt; 속성 을 구성하여 로그 대상을 활성화하거나 비활성화 할 수 있습니다 . 로그 대상 구성 또는 코드의 다음 PHP 문을 통해 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48ac181ff1ef586a8f0408b783458d91262a86bf" translate="yes" xml:space="preserve">
          <source>You can flush the cache from the console by calling &lt;code&gt;yii cache/flush&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;yii cache/flush&lt;/code&gt; 를 호출하여 콘솔에서 캐시를 플러시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab9dca3aa8f6c73236465b3cfabad8f80c3c8cf9" translate="yes" xml:space="preserve">
          <source>You can get details about the syntax in &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;Quoting Table and Column Names&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;인용 테이블 및 열 이름&lt;/a&gt; 에서 구문에 대한 세부 사항을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="612c04288985a12bb124525c58bbdb546654082c" translate="yes" xml:space="preserve">
          <source>You can get the HTTP header information through the &lt;a href=&quot;yii-web-headercollection&quot;&gt;header collection&lt;/a&gt; returned by the &lt;a href=&quot;yii-web-request#%24headers-detail&quot;&gt;yii\web\Request::$headers&lt;/a&gt; property. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#%24headers-detail&quot;&gt;yii \ web \ Request :: $ headers&lt;/a&gt; 속성에서 반환 된 &lt;a href=&quot;yii-web-headercollection&quot;&gt;헤더 컬렉션을&lt;/a&gt; 통해 HTTP 헤더 정보를 얻을 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="705dfb64fd254ad5c2e9e133a865ae502dacd074" translate="yes" xml:space="preserve">
          <source>You can get the HTTP method used by the current request via the expression &lt;code&gt;Yii::$app-&amp;gt;request-&amp;gt;method&lt;/code&gt;. A whole set of boolean properties is also provided for you to check if the current method is of certain type. For example,</source>
          <target state="translated">&lt;code&gt;Yii::$app-&amp;gt;request-&amp;gt;method&lt;/code&gt; 표현식을 통해 현재 요청에서 사용하는 HTTP 메소드를 얻을 수 있습니다 . 현재 메소드가 특정 유형인지 확인하기 위해 전체 부울 특성 세트도 제공됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="5f0baba47332d24b7b32a58a8fa9006d1d06b25e" translate="yes" xml:space="preserve">
          <source>You can get the cookies in the current request using the following code:</source>
          <target state="translated">다음 코드를 사용하여 현재 요청에서 쿠키를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e084d2a7b3351971fce182e93edcfd3ec146a1be" translate="yes" xml:space="preserve">
          <source>You can get the host name and IP address of the client machine through &lt;a href=&quot;yii-web-request#%24userHost-detail&quot;&gt;userHost&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24userIP-detail&quot;&gt;userIP&lt;/a&gt;, respectively. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#%24userHost-detail&quot;&gt;userHost&lt;/a&gt; 및 &lt;a href=&quot;yii-web-request#%24userIP-detail&quot;&gt;userIP를&lt;/a&gt; 통해 클라이언트 시스템의 호스트 이름 및 IP 주소를 각각 얻을 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="de5fa5ef6704c8f1fa717825c2727185203a484f" translate="yes" xml:space="preserve">
          <source>You can get the label of an attribute by calling &lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii\base\Model::getAttributeLabel()&lt;/a&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#getAttributeLabel()-detail&quot;&gt;yii \ base \ Model :: getAttributeLabel ()&lt;/a&gt; 을 호출하여 속성의 레이블을 얻을 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="50f3e39cff11910c98c98ea5c6178db6cbec78dd" translate="yes" xml:space="preserve">
          <source>You can ignore &lt;code&gt;$attribute&lt;/code&gt; parameter because validation is not related to just one attribute.</source>
          <target state="translated">유효성 검사는 하나의 속성과 관련이 없으므로 &lt;code&gt;$attribute&lt;/code&gt; 매개 변수를 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bff127cbf6da7874f941f7c6e36b2ad79802a28" translate="yes" xml:space="preserve">
          <source>You can install Yii in two ways, using the &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; package manager or by downloading an archive file. The former is the preferred way, as it allows you to install new &lt;a href=&quot;guide-structure-extensions&quot;&gt;extensions&lt;/a&gt; or update Yii by simply running a single command.</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; 패키지 관리자를 사용하거나 아카이브 파일을 다운로드 하여 두 가지 방법으로 Yii를 설치할 수 있습니다 . 이전 명령은 단일 명령을 실행하여 새 &lt;a href=&quot;guide-structure-extensions&quot;&gt;확장&lt;/a&gt; 을 설치 하거나 Yii를 업데이트 할 수 있으므로 선호되는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="3b4fa10e9c3141b84f913ce29edb33bd3711be44" translate="yes" xml:space="preserve">
          <source>You can list the asset files in extended syntax in the &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt; properties of an asset bundle. For example,</source>
          <target state="translated">자산 번들 의 &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;css&lt;/a&gt; 및 &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;js&lt;/a&gt; 특성 에 확장 구문으로 자산 파일을 나열 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="5f9a92152e1718a168ac9a54ef32aa5a46b6f571" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as it is shown in the following example:</source>
          <target state="translated">다음 예제와 같이 &lt;code&gt;components&lt;/code&gt; 아래에서 응용 프로그램 구성에 배열을 추가하여 구성을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c451175a7f4fb755f3904b25a8fce5c6aafdf447" translate="yes" xml:space="preserve">
          <source>You can modify its configuration by adding an array to your application config under &lt;code&gt;components&lt;/code&gt; as shown in the following example:</source>
          <target state="translated">다음 예제와 같이 &lt;code&gt;components&lt;/code&gt; 아래에서 응용 프로그램 구성에 배열을 추가하여 구성을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b448792c4446f4ec3600b758c7e9a4a053e67611" translate="yes" xml:space="preserve">
          <source>You can output static pages by putting their code in the view, and then using the code like the following in a controller:</source>
          <target state="translated">정적 페이지를 코드에 넣고 컨트롤러에서 다음과 같은 코드를 사용하여 정적 페이지를 출력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfa181280949d0369ea69caf8bd4894c94a04428" translate="yes" xml:space="preserve">
          <source>You can override &lt;code&gt;fields()&lt;/code&gt; to add, remove, rename or redefine fields. The return value of &lt;code&gt;fields()&lt;/code&gt; should be an array. The array keys are the field names, and the array values are the corresponding field definitions which can be either property/attribute names or anonymous functions returning the corresponding field values. In the special case when a field name is the same as its defining attribute name, you can omit the array key. For example,</source>
          <target state="translated">&lt;code&gt;fields()&lt;/code&gt; 를 재정 의하여 필드 를 추가, 제거, 이름 바꾸기 또는 재정의 할 수 있습니다. &lt;code&gt;fields()&lt;/code&gt; 의 반환 값은 배열이어야합니다. 배열 키는 필드 이름이고 배열 값은 속성 / 속성 이름 또는 해당 필드 값을 반환하는 익명 함수일 수있는 해당 필드 정의입니다. 필드 이름이 정의 속성 이름과 동일한 특수한 경우 배열 키를 생략 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a29c90ae682b6df9619aeeae91c5ad13522bc97a" translate="yes" xml:space="preserve">
          <source>You can pass the return value of this to one of the formatting methods: &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#ansiFormatCode()-detail&quot;&gt;ansiFormatCode()&lt;/a&gt;, &lt;a href=&quot;yii-helpers-baseconsole#beginAnsiFormat()-detail&quot;&gt;beginAnsiFormat()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat ()&lt;/a&gt; , &lt;a href=&quot;yii-helpers-baseconsole#ansiFormatCode()-detail&quot;&gt;ansiFormatCode ()&lt;/a&gt; , &lt;a href=&quot;yii-helpers-baseconsole#beginAnsiFormat()-detail&quot;&gt;beginAnsiFormat ()&lt;/a&gt; 형식화 메소드 중 하나로 리턴 값을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="574564a9c8fc20fce6bc5014bd620496f50ef00d" translate="yes" xml:space="preserve">
          <source>You can redirect the user browser to a URL by calling the &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; method. The method sets the appropriate &lt;code&gt;Location&lt;/code&gt; header with the given URL and returns the response object itself. In an action method, you can call its shortcut version &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;yii\web\Controller::redirect()&lt;/a&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii \ web \ Response :: redirect ()&lt;/a&gt; 메서드 를 호출하여 사용자 브라우저를 URL로 리디렉션 할 수 있습니다 . 이 메소드는 주어진 URL로 적절한 &lt;code&gt;Location&lt;/code&gt; 헤더를 설정 하고 응답 객체 자체를 반환합니다. 액션 메서드에서 바로 가기 버전 &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;yii \ web \ Controller :: redirect ()를&lt;/a&gt; 호출 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="ade68b828302db37c0966e5f482674a73ebd73da" translate="yes" xml:space="preserve">
          <source>You can register any component with an application, and the component can later be accessed globally using the expression &lt;code&gt;\Yii::$app-&amp;gt;componentID&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램에 구성 요소를 등록 할 수 있으며 나중에 &lt;code&gt;\Yii::$app-&amp;gt;componentID&lt;/code&gt; 식을 사용하여 구성 요소에 전역 적으로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9bd0a0caf81523e2686af2caf844048740622799" translate="yes" xml:space="preserve">
          <source>You can register multiple log targets in an application by configuring them through the &lt;code&gt;log&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration, like the following:</source>
          <target state="translated">다음과 같이 응용 프로그램 구성 의 &lt;code&gt;log&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소&lt;/a&gt; 를 통해 구성하여 응용 프로그램에 여러 로그 대상을 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83103224419fe0e7532edf920f2e34da302fbfd9" translate="yes" xml:space="preserve">
          <source>You can render a view within another view by calling one of the following methods provided by the &lt;a href=&quot;yii-base-view&quot;&gt;view component&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;yii-base-view&quot;&gt;뷰 컴포넌트가&lt;/a&gt; 제공하는 다음 메소드 중 하나를 호출하여 다른 뷰 내에서 뷰를 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db88cc8fb3740a617a7d702a6ace70bf6fbf9f87" translate="yes" xml:space="preserve">
          <source>You can render views in &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, or any other places by calling view rendering methods. These methods share a similar signature shown as follows,</source>
          <target state="translated">뷰 렌더링 메소드를 호출 하여 &lt;a href=&quot;guide-structure-controllers&quot;&gt;컨트롤러&lt;/a&gt; , &lt;a href=&quot;guide-structure-widgets&quot;&gt;위젯&lt;/a&gt; 또는 다른 위치에서 뷰를 렌더링 할 수 있습니다. 이러한 방법은 다음과 같이 유사한 서명을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="53a70216f82eb14c7d15081479dbf4e3cc3a58d4" translate="yes" xml:space="preserve">
          <source>You can see all available templates by running command:</source>
          <target state="translated">다음 명령을 실행하여 사용 가능한 모든 템플릿을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42c46211060baa4c6795ea439a7e0d6385c8304d" translate="yes" xml:space="preserve">
          <source>You can send HTTP headers by manipulating the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;header collection&lt;/a&gt; in the &lt;code&gt;response&lt;/code&gt; component. For example,</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; 컴포넌트 에서 &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;헤더 콜렉션&lt;/a&gt; 을 조작하여 HTTP 헤더를 보낼 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="907be410ee5e5c3f501a2edfbbdc0ece7986aadc" translate="yes" xml:space="preserve">
          <source>You can send cookies to end users using the following code:</source>
          <target state="translated">다음 코드를 사용하여 최종 사용자에게 쿠키를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5613abe58044176423b69ddd25505b71d1bb084" translate="yes" xml:space="preserve">
          <source>You can set and access flash data through the &lt;code&gt;session&lt;/code&gt; application component. For example,</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 응용 프로그램 구성 요소를 통해 플래시 데이터를 설정하고 액세스 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="568000f70e8230e39031c2095395d586c438df39" translate="yes" xml:space="preserve">
          <source>You can specify additional formatting rules in the placeholders of a message so that the parameter values can be formatted properly before they replace the placeholders. In the following example, the price parameter value will be treated as a number and formatted as a currency value:</source>
          <target state="translated">메시지 자리 표시 자에 추가 형식 지정 규칙을 지정하여 자리 표시자를 대체하기 전에 매개 변수 값의 형식을 올바르게 지정할 수 있습니다. 다음 예에서 가격 매개 변수 값은 숫자로 취급되고 통화 값으로 형식화됩니다.</target>
        </trans-unit>
        <trans-unit id="40f49a773735223f2f5fd62f1b0acf8ded1ca033" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;currency&lt;/code&gt;, or &lt;code&gt;percent&lt;/code&gt;:</source>
          <target state="translated">선택적 매개 변수 스타일을 &lt;code&gt;integer&lt;/code&gt; , &lt;code&gt;currency&lt;/code&gt; 또는 &lt;code&gt;percent&lt;/code&gt; 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d459e45f9efd2c50ed8d2a85f0e4bd614ba3dab" translate="yes" xml:space="preserve">
          <source>You can specify an optional parameter style as &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, or &lt;code&gt;full&lt;/code&gt;:</source>
          <target state="translated">선택적 매개 변수 스타일을 &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 또는 &lt;code&gt;full&lt;/code&gt; 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09c238a0e767dd0f50881f9ac0dc834514728d99" translate="yes" xml:space="preserve">
          <source>You can specify date and time formats using the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU syntax&lt;/a&gt;. You can also use the &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;PHP date() syntax&lt;/a&gt; with a prefix &lt;code&gt;php:&lt;/code&gt; to differentiate it from ICU syntax. For example,</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU 구문을&lt;/a&gt; 사용하여 날짜 및 시간 형식을 지정할 수 있습니다 . 당신은 또한 사용할 수있는 &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;PHP 날짜를 () 구문&lt;/a&gt; 을 가진 접두사 &lt;code&gt;php:&lt;/code&gt; ICU 구문과 구별 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="e62a2d58d20273ec16c96fc9aab9b3639becbabf" translate="yes" xml:space="preserve">
          <source>You can specify date and time formats using the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime&quot;&gt;ICU syntax&lt;/a&gt;. You can also use the &lt;a href=&quot;https://php.net/manual/en/function.date.php&quot;&gt;PHP date() syntax&lt;/a&gt; with a prefix &lt;code&gt;php:&lt;/code&gt; to differentiate it from ICU syntax. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034fbdbfbf010be99c37159ac2fbf07fa373f8fe" translate="yes" xml:space="preserve">
          <source>You can specify default message source that will be used as a fallback for category that doesn't match any configured category. You can do that by configuring a wildcard category &lt;code&gt;*&lt;/code&gt;. In order to do that, add the following to the application config:</source>
          <target state="translated">구성된 카테고리와 일치하지 않는 카테고리의 대체로 사용될 기본 메시지 소스를 지정할 수 있습니다. 와일드 카드 범주 &lt;code&gt;*&lt;/code&gt; 를 구성하면 됩니다. 그렇게하려면 응용 프로그램 구성에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="56eedfddec216b087b4759f2ead366f526f1e9ed" translate="yes" xml:space="preserve">
          <source>You can specify different options of this command:</source>
          <target state="translated">이 명령의 다른 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe7d14b154b1ffa1efd87b2fd9bda0524eee9c69" translate="yes" xml:space="preserve">
          <source>You can specify different view files for HTML and plain text message contents:</source>
          <target state="translated">HTML 및 일반 텍스트 메시지 내용에 대해 다른보기 파일을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b3fb9033a61b88bbf47b0fb764b9699a692405e" translate="yes" xml:space="preserve">
          <source>You can specify how many fixtures per file you need by the second parameter. In the code below we generate all fixtures and in each file there will be 3 rows (fixtures).</source>
          <target state="translated">두 번째 매개 변수로 파일 당 필요한 조명기 수를 지정할 수 있습니다. 아래 코드에서 모든 조명기를 생성하고 각 파일에는 3 개의 행 (픽스쳐)이 있습니다.</target>
        </trans-unit>
        <trans-unit id="97644b9bee3bf5b95e963f10299f847a12468ed1" translate="yes" xml:space="preserve">
          <source>You can specify more field parameters.</source>
          <target state="translated">더 많은 필드 매개 변수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ab305fd50436081692652cd4c627e5e94e11863" translate="yes" xml:space="preserve">
          <source>You can specify multiple columns as follows:</source>
          <target state="translated">다음과 같이 여러 열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cfbde70adc4db07b292fa6a89e0c4f0bbbf34dc" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;a href=&quot;yii-web-assetbundle#%24cssOptions-detail&quot;&gt;cssOptions&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24jsOptions-detail&quot;&gt;jsOptions&lt;/a&gt; properties to customize the way that CSS and JavaScript files are included in a page. The values of these properties will be passed to the &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;yii\web\View::registerCssFile()&lt;/a&gt; and &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;yii\web\View::registerJsFile()&lt;/a&gt; methods, respectively, when they are called by the &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; to include CSS and JavaScript files.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetbundle#%24cssOptions-detail&quot;&gt;cssOptions&lt;/a&gt; 및 &lt;a href=&quot;yii-web-assetbundle#%24jsOptions-detail&quot;&gt;jsOptions&lt;/a&gt; 특성을 지정하여 CSS 및 JavaScript 파일이 페이지에 포함되는 방식을 사용자 정의 할 수 있습니다 . 이러한 특성의 값 은 CSS 및 JavaScript 파일을 포함하기 위해 &lt;a href=&quot;guide-structure-views&quot;&gt;보기&lt;/a&gt; 에서 호출 될 때 각각 &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;yii \ web \ View :: registerCssFile ()&lt;/a&gt; 및 &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;yii \ web \ View :: registerJsFile ()&lt;/a&gt; 메소드 로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eb99eb13f8c1d390931dce9e7d825051052f4c4c" translate="yes" xml:space="preserve">
          <source>You can specify the table(s) being selected from in either a string or an array. The table names may contain schema prefixes and/or table aliases, like you do when writing raw SQL statements. For example,</source>
          <target state="translated">문자열 또는 배열에서 선택중인 테이블을 지정할 수 있습니다. 원시 SQL 문을 작성할 때와 같이 테이블 이름에 스키마 접 두부 및 / 또는 테이블 별명이 포함될 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="af64abfbe84057f57c7d6e30e53adc04a4eb8d80" translate="yes" xml:space="preserve">
          <source>You can still override the value set via DI container, though:</source>
          <target state="translated">그래도 DI 컨테이너를 통해 설정된 값을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfbdac5b2ea7b4a3b1ae9a01d8a7584828abebd3" translate="yes" xml:space="preserve">
          <source>You can then access the DB connection via the expression &lt;code&gt;Yii::$app-&amp;gt;db&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;Yii::$app-&amp;gt;db&lt;/code&gt; 표현식을 통해 DB 연결에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a0b78888e8bb4b5991a22aeef06fb3a6f58831f" translate="yes" xml:space="preserve">
          <source>You can then access the above cache component using the expression &lt;code&gt;Yii::$app-&amp;gt;cache&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;Yii::$app-&amp;gt;cache&lt;/code&gt; 표현식을 사용하여 위의 캐시 구성 요소에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a1efa82519e8b37cf2d8604650edb5245ea1245" translate="yes" xml:space="preserve">
          <source>You can trigger the event of those classes:</source>
          <target state="translated">해당 클래스의 이벤트를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2a5659ca5cacfbf44da52abc323f711dc8b6b7c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-caching-fragment&quot;&gt;fragment caching&lt;/a&gt; as well as &lt;a href=&quot;guide-caching-fragment#dynamic-content&quot;&gt;dynamic content&lt;/a&gt; together with page caching.</source>
          <target state="translated">&lt;a href=&quot;guide-caching-fragment#dynamic-content&quot;&gt;동적 &lt;/a&gt;&lt;a href=&quot;guide-caching-fragment&quot;&gt;캐싱&lt;/a&gt; 은 물론 조각 캐싱 을 페이지 캐싱과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cdc9d9cb4f7653ef01e897f26bc11310e1544363" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;guide-db-migrations&quot;&gt;migrations&lt;/a&gt; to initialize and modify hierarchy via APIs offered by &lt;code&gt;authManager&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;guide-db-migrations&quot;&gt;마이그레이션&lt;/a&gt; 을 사용 하여 &lt;code&gt;authManager&lt;/code&gt; 에서 제공하는 API를 통해 계층을 초기화하고 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7cb643736d8634f20ebb2fdbe26f84e4f81b335f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;yii\db\Connection::cache()&lt;/a&gt; if you have multiple SQL queries that need to take advantage of query caching. The usage is as follows,</source>
          <target state="translated">쿼리 캐싱을 활용해야하는 여러 SQL 쿼리가있는 경우 &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;yii \ db \ Connection :: cache ()를&lt;/a&gt; 사용할 수 있습니다 . 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eee1f92a1abff2c101abd64c6e5c2df3d8d5429b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere()&lt;/a&gt; to append additional conditions to an existing one. You can call them multiple times to append multiple conditions separately. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere ()&lt;/a&gt; 를 사용하여 기존 조건에 추가 조건을 추가 할 수 있습니다 . 여러 조건을 개별적으로 추가하기 위해 여러 번 호출 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="23fc83e4faa0b3cf1fcc41838e38f35e38074bac" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;get()&lt;/a&gt; to either create or get object instance. The method takes a dependency name, which can be a class name, an interface name or an alias name. The dependency name may be registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt;. You may optionally provide a list of class constructor parameters and a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; to configure the newly created object.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;GET ()&lt;/a&gt; 을 만들거나 개체 인스턴스를 얻을 중 하나에 있습니다. 메소드는 클래스 이름, 인터페이스 이름 또는 별명 이름 일 수있는 종속성 이름을 사용합니다. 종속성 이름은 &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton ()을&lt;/a&gt; 통해 등록 할 수 있습니다 . 선택적으로 클래스 생성자 매개 변수 목록과 새로 작성된 오브젝트를 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 하기 위한 구성 을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eddc9fe5579bbbaf840d07acafefc52062943b61" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii\di\Container::set()&lt;/a&gt; to register dependencies. The registration requires a dependency name as well as a dependency definition. A dependency name can be a class name, an interface name, or an alias name; and a dependency definition can be a class name, a configuration array, or a PHP callable.</source>
          <target state="translated">&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;yii \ di \ Container :: set ()&lt;/a&gt; 을 사용하여 종속성을 등록 할 수 있습니다 . 등록에는 종속성 정의뿐만 아니라 종속성 이름이 필요합니다. 종속성 이름은 클래스 이름, 인터페이스 이름 또는 별명 이름 일 수 있습니다. 종속성 정의는 클래스 이름, 구성 배열 또는 PHP 호출 가능일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c335e922984928bb6317cb78d3e16ec378d9b3fe" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper::merge()&lt;/a&gt; to merge two or more arrays into one recursively. If each array has an element with the same string key value, the latter will overwrite the former (different from &lt;a href=&quot;http://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive()&lt;/a&gt;). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">&lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper :: merge ()&lt;/a&gt; 를 사용하여 둘 이상의 배열을 하나의 재귀 적으로 병합 할 수 있습니다 . 각 배열에 동일한 문자열 키 값을 가진 요소가 있으면 후자가 전자를 덮어 씁니다 ( &lt;a href=&quot;http://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive ()&lt;/a&gt; 와 다름 ). 두 배열 모두 배열 유형의 요소를 갖고 동일한 키를 갖는 경우 재귀 병합이 수행됩니다. 정수 키 요소의 경우 후자 배열의 요소가 이전 배열에 추가됩니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;YII \ 도우미 \ UnsetArrayValue&lt;/a&gt; 이전 배열 또는에서 해제 값으로 객체를 &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;YII \ 도우미 \ ReplaceArrayValue&lt;/a&gt; 대신 재귀 합병 전 값을 바꿀 힘.</target>
        </trans-unit>
        <trans-unit id="120e268febce873294b3dcdf58b3531de66404bc" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;ArrayHelper::merge()&lt;/a&gt; to merge two or more arrays into one recursively. If each array has an element with the same string key value, the latter will overwrite the former (different from &lt;a href=&quot;https://php.net/manual/en/function.array-merge-recursive.php&quot;&gt;array_merge_recursive()&lt;/a&gt;). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5040433ed42e6ff91e29b8e4a2c63c6b60ce3045" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;'*'&lt;/code&gt; to stand for all actions. When an action is explicitly specified, it takes precedence over the specification given by &lt;code&gt;'*'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'*'&lt;/code&gt; 를 사용 하여 모든 동작을 나타낼 수 있습니다 . 조치가 명시 적으로 지정되면 &lt;code&gt;'*'&lt;/code&gt; 로 지정된 스펙보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="232fddab8bf295ad14b387744faff3648c4194da" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Download::substr()&lt;/code&gt; to read a specific part of the file:</source>
          <target state="translated">&lt;code&gt;Download::substr()&lt;/code&gt; 을 사용 하여 파일의 특정 부분을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="337c676558c8efbc8d2db1df43f25958cb106ca9" translate="yes" xml:space="preserve">
          <source>You can use any of these attributes instead (or use what you think is the most relevant):</source>
          <target state="translated">대신 이러한 속성 중 하나를 사용하거나 가장 관련성이 있다고 생각하는 것을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6770228d3f2564f530d6c6a610d4431aad3bbf74" translate="yes" xml:space="preserve">
          <source>You can use either &lt;em&gt;named placeholders&lt;/em&gt; or &lt;em&gt;positional placeholders&lt;/em&gt;, but not both, in a single message.</source>
          <target state="translated">단일 메시지에서 &lt;em&gt;명명 된 플레이스 홀더&lt;/em&gt; 또는 &lt;em&gt;위치 플레이스 &lt;/em&gt;&lt;em&gt;홀더&lt;/em&gt; 중 하나만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1e45c905dc03e0fd0b6c2fa49de54f32a9ca090" translate="yes" xml:space="preserve">
          <source>You can use either a URL or an alias of the URL.</source>
          <target state="translated">URL 또는 URL 별명을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19137c51d7ea74c2bf3559951824316ac7ae99c0" translate="yes" xml:space="preserve">
          <source>You can use either a directory or an alias of the directory.</source>
          <target state="translated">디렉토리 또는 디렉토리의 별명을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cdcfc9b4d46da8d968f5a3759b81db140cbe839" translate="yes" xml:space="preserve">
          <source>You can use either the short form or the full form to specify a placeholder with formatting:</source>
          <target state="translated">짧은 양식 또는 전체 양식을 사용하여 형식이있는 자리 표시자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1e05716147c6b82340a30ff35f5ff8c63f9657e" translate="yes" xml:space="preserve">
          <source>You can use it in a child model:</source>
          <target state="translated">하위 모델에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="397ad4620359a3523cd1eee0636496228b053147" translate="yes" xml:space="preserve">
          <source>You can use it in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="translated">&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response를&lt;/a&gt; 직접 리턴하여 조치에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a14286a77f45556d0f29442115424cb392fd5846" translate="yes" xml:space="preserve">
          <source>You can use more than one GridView on a single page but some additional configuration is needed so that they do not interfere with each other. When using multiple instances of GridView you have to configure different parameter names for the generated sort and pagination links so that each GridView has its own individual sorting and pagination. You do so by setting the &lt;a href=&quot;yii-data-sort#%24sortParam-detail&quot;&gt;sortParam&lt;/a&gt; and &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt; of the dataProvider's &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; instances.</source>
          <target state="translated">단일 페이지에서 둘 이상의 GridView를 사용할 수 있지만 서로 간섭하지 않도록 추가 구성이 필요합니다. GridView의 여러 인스턴스를 사용하는 경우 생성 된 정렬 및 페이지 매김 링크에 대해 서로 다른 매개 변수 이름을 구성해야 각 GridView에 고유 한 정렬 및 페이지 매김이 있습니다. dataProvider의 &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;정렬&lt;/a&gt; 및 &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;페이지 매김&lt;/a&gt; 인스턴스 의 &lt;a href=&quot;yii-data-sort#%24sortParam-detail&quot;&gt;sortParam&lt;/a&gt; 및 &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt; 을 설정하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="70f105cacf05832701008e93edb4937dc295468f" translate="yes" xml:space="preserve">
          <source>You can use most of the relational query features that have been described in this section.</source>
          <target state="translated">이 섹션에서 설명한 대부분의 관계형 쿼리 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fdf62b64d822b1fe81bc6cf2a0e0501d8684964" translate="yes" xml:space="preserve">
          <source>You can use one of the following workarounds to solve this problem:</source>
          <target state="translated">다음 해결 방법 중 하나를 사용하여이 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1956a8441e380e05737bdee1eb22295e503752de" translate="yes" xml:space="preserve">
          <source>You can use query methods, such as &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; to customize the query options.</source>
          <target state="translated">&lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where ()&lt;/a&gt; , &lt;a href=&quot;yii-db-querytrait#limit()-detail&quot;&gt;limit ()&lt;/a&gt; 및 &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 와 같은 쿼리 메소드를 사용 하여 쿼리 옵션을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ccad1d25e86d7cb9f5795a28112b826e84b69d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;select&lt;/code&gt; parameter type to choose a phrase based on the parameter value. For example,</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 매개 변수 유형을 사용 하여 매개 변수 값을 기반으로 구를 선택할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="f2672726990a35ca839c3bcc4af91649a876d3b3" translate="yes" xml:space="preserve">
          <source>You can use the following shortcut methods to specify &lt;code&gt;INNER JOIN&lt;/code&gt;, &lt;code&gt;LEFT JOIN&lt;/code&gt; and &lt;code&gt;RIGHT JOIN&lt;/code&gt;, respectively.</source>
          <target state="translated">다음 바로 가기 방법을 사용하여 &lt;code&gt;INNER JOIN&lt;/code&gt; , &lt;code&gt;LEFT JOIN&lt;/code&gt; 및 &lt;code&gt;RIGHT JOIN&lt;/code&gt; 을 각각 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef2ce57ef897d3627e7e715d96a3982e8a369977" translate="yes" xml:space="preserve">
          <source>You can use this command to generate models, controllers, etc. For example, to generate an ActiveRecord model based on a DB table, you can run:</source>
          <target state="translated">이 명령을 사용하여 모델, 컨트롤러 등을 생성 할 수 있습니다. 예를 들어 DB 테이블을 기반으로 ActiveRecord 모델을 생성하려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5e666d1cb6797be150dc85c9b7e6812f3ae2f5" translate="yes" xml:space="preserve">
          <source>You can use this function in the controller to get the dataProvider for the GridView:</source>
          <target state="translated">컨트롤러에서이 함수를 사용하여 GridView의 dataProvider를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e4b42317cfc8594a32a564726111b1dd44b4dda" translate="yes" xml:space="preserve">
          <source>You can use this method in an action by returning the &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; directly:</source>
          <target state="translated">&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response를&lt;/a&gt; 직접 리턴하여 조치에서이 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab14b0773b565e5d1b9590638c4242163112cfba" translate="yes" xml:space="preserve">
          <source>You can use this validator to validate against a single column or multiple columns (i.e., the combination of multiple attribute values should exist).</source>
          <target state="translated">이 유효성 검사기를 사용하여 단일 열 또는 여러 열에 대해 유효성을 검사 할 수 있습니다 (즉, 여러 특성 값의 조합이 존재해야 함).</target>
        </trans-unit>
        <trans-unit id="fa6bc0a9c10cd414e914335ff9198b7ec5ebfbff" translate="yes" xml:space="preserve">
          <source>You can use this widget in an \yii\bootstrap\yii\bootstrap\ActiveForm using the \yii\bootstrap\yii\widgets\ActiveField::widget() method, for example like this:</source>
          <target state="translated">\ yii \ bootstrap \ yii \ widgets \ ActiveField :: widget () 메소드를 사용하여 \ yii \ bootstrap \ yii \ bootstrap \ ActiveForm에서이 위젯을 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0bd418d3da34d4f67e7389c5d19a9c8a70323e2e" translate="yes" xml:space="preserve">
          <source>You can use your browser to access the installed Yii application with the following URL:</source>
          <target state="translated">브라우저를 사용하여 다음 URL을 사용하여 설치된 Yii 애플리케이션에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecf17c27a315fc3190d39f0d620f0929300d26d4" translate="yes" xml:space="preserve">
          <source>You can work with several different databases at the same server using this class. However, while it is unlikely your application will actually need it, the Connection class provides ability to use &lt;a href=&quot;yii-mongodb-connection#%24defaultDatabaseName-detail&quot;&gt;$defaultDatabaseName&lt;/a&gt; as well as a shortcut method &lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;getCollection()&lt;/a&gt; to retrieve a particular collection instance:</source>
          <target state="translated">이 클래스를 사용하여 동일한 서버에서 여러 다른 데이터베이스로 작업 할 수 있습니다. 그러나 응용 프로그램에서 실제로 필요하지는 않지만 Connection 클래스는 &lt;a href=&quot;yii-mongodb-connection#%24defaultDatabaseName-detail&quot;&gt;$ defaultDatabaseName&lt;/a&gt; 과 바로 가기 메서드 &lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;getCollection ()&lt;/a&gt; 을 사용하여 특정 컬렉션 인스턴스를 검색하는 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="3c4438d2becc4b7dbaf360018f67e531dc7905b6" translate="yes" xml:space="preserve">
          <source>You do not always need to configure this property if none of your code is using it.</source>
          <target state="translated">이 속성을 사용하는 코드가 없으면 항상이 속성을 구성 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="57654e756cbfcf7bc9f7ef568aee3b8795492ee1" translate="yes" xml:space="preserve">
          <source>You execute a console controller action using the following syntax:</source>
          <target state="translated">다음 구문을 사용하여 콘솔 컨트롤러 작업을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ebefdfb4e46cab361490385a9de043d9f618e743" translate="yes" xml:space="preserve">
          <source>You have two ways to divide these asset bundles. One is to use a single group to include all asset bundles, the other is to put A in Group X, D in Group Y, and (B, C) in Group S. Which one is better? It depends. The first way has the advantage that both pages share the same combined CSS and JavaScript files, which makes HTTP caching more effective. On the other hand, because the single group contains all bundles, the size of the combined CSS and JavaScript files will be bigger and thus increase the initial file transmission time. For simplicity in this example, we will use the first way, i.e., use a single group to contain all bundles.</source>
          <target state="translated">이 자산 번들을 나누는 두 가지 방법이 있습니다. 하나는 단일 그룹을 사용하여 모든 자산 번들을 포함하고 다른 하나는 그룹 X에 A를, 그룹 Y에 D를, 그룹 B에 (B, C)를 넣는 것입니다. 어느 것이 더 낫습니까? 때에 따라 다르지. 첫 번째 방법은 두 페이지 모두 동일한 CSS 및 JavaScript 파일을 공유하므로 HTTP 캐싱이 더 효과적이라는 이점이 있습니다. 반면에 단일 그룹에 모든 번들이 포함되어 있으므로 결합 된 CSS 및 JavaScript 파일의 크기가 커져 초기 파일 전송 시간이 늘어납니다. 이 예제에서는 간단하게하기 위해 첫 번째 방법, 즉 단일 그룹을 사용하여 모든 번들을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="951b4ea0cde1e15fa22899208ecba6ee28a2cd42" translate="yes" xml:space="preserve">
          <source>You mainly use &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt; in terms of the &lt;code&gt;user&lt;/code&gt; application component.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; 응용 프로그램 구성 요소 측면에서 주로 &lt;a href=&quot;yii-web-user&quot;&gt;yii \ web \ User&lt;/a&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b55f71375967a787256a697c6146216da96decb1" translate="yes" xml:space="preserve">
          <source>You may access your APIs with the &lt;code&gt;curl&lt;/code&gt; command like the following,</source>
          <target state="translated">다음과 같은 &lt;code&gt;curl&lt;/code&gt; 명령으로 API에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c033157d67304f04a821cf667092aaed43e37e34" translate="yes" xml:space="preserve">
          <source>You may add a class to the class map, stored in &lt;code&gt;Yii::$classMap&lt;/code&gt;, using:</source>
          <target state="translated">다음을 사용하여 &lt;code&gt;Yii::$classMap&lt;/code&gt; 저장된 클래스 맵에 클래스를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e6f54ab417d156a29e9549046b5d673666cc211" translate="yes" xml:space="preserve">
          <source>You may also access the instance of a module using the following approaches:</source>
          <target state="translated">다음 접근법을 사용하여 모듈의 인스턴스에 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a836823955bf8ff0f255f46017b3de9c077a331" translate="yes" xml:space="preserve">
          <source>You may also assign an alias to a fixture. In the above example, the &lt;code&gt;UserProfileFixture&lt;/code&gt; is aliased as &lt;code&gt;profiles&lt;/code&gt;. In the test methods, you may then access a fixture object using its alias. For example, &lt;code&gt;$this-&amp;gt;profiles&lt;/code&gt; will return the &lt;code&gt;UserProfileFixture&lt;/code&gt; object.</source>
          <target state="translated">조명기에 별칭을 할당 할 수도 있습니다. 위의 예에서 &lt;code&gt;UserProfileFixture&lt;/code&gt; 는 &lt;code&gt;profiles&lt;/code&gt; 로 별명 지정됩니다 . 테스트 방법에서는 별명을 사용하여 조명기 객체에 액세스 할 수 있습니다. 예를 들어 &lt;code&gt;$this-&amp;gt;profiles&lt;/code&gt; 는 &lt;code&gt;UserProfileFixture&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a3b96e73b37e493c3def6a47c8a9157371df54cf" translate="yes" xml:space="preserve">
          <source>You may also attach behaviors through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt; like the following:</source>
          <target state="translated">다음과 같은 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성을&lt;/a&gt; 통해 동작을 첨부 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9243ad8149d0a3e517d8c7bd5555d2d9ab144e20" translate="yes" xml:space="preserve">
          <source>You may also attach event handlers through &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;. For more details, please refer to the &lt;a href=&quot;guide-concept-configurations#configuration-format&quot;&gt;Configurations&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;guide-concept-configurations&quot;&gt;구성을&lt;/a&gt; 통해 이벤트 핸들러를 연결할 수도 있습니다 . 자세한 내용은 &lt;a href=&quot;guide-concept-configurations#configuration-format&quot;&gt;구성&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa4b965a27e1942163a01c4686c098cc5e814794" translate="yes" xml:space="preserve">
          <source>You may also call &lt;a href=&quot;yii-db-command#batchInsert()-detail&quot;&gt;batchInsert()&lt;/a&gt; to insert multiple rows in one shot, which is much more efficient than inserting one row at a time:</source>
          <target state="translated">한 번에 여러 행을 삽입하기 위해 &lt;a href=&quot;yii-db-command#batchInsert()-detail&quot;&gt;batchInsert ()&lt;/a&gt; 를 호출 할 수도 있습니다. 한 번에 한 행을 삽입하는 것보다 훨씬 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="5b2c5ca170e3378f236b3881918eb76029e62a70" translate="yes" xml:space="preserve">
          <source>You may also configure &lt;code&gt;patterns&lt;/code&gt; or &lt;code&gt;extraPatterns&lt;/code&gt; to redefine existing patterns or add new patterns supported by this rule. For example, to support a new action &lt;code&gt;search&lt;/code&gt; by the endpoint &lt;code&gt;GET /users/search&lt;/code&gt;, configure the &lt;code&gt;extraPatterns&lt;/code&gt; option as follows,</source>
          <target state="translated">기존 패턴을 재정의 &lt;code&gt;extraPatterns&lt;/code&gt; 규칙에서 지원하는 새 패턴을 추가 하도록 &lt;code&gt;patterns&lt;/code&gt; 또는 extraPatterns 를 구성 할 수도 있습니다 . 예를 들어, 엔드 포인트 &lt;code&gt;GET /users/search&lt;/code&gt; 로 새 조치 &lt;code&gt;search&lt;/code&gt; 을 지원 하려면 &lt;code&gt;extraPatterns&lt;/code&gt; 옵션을 다음과 같이 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="b485762eab68baececfabe39304b54de2a62103d" translate="yes" xml:space="preserve">
          <source>You may also detach &lt;em&gt;all&lt;/em&gt; behaviors:</source>
          <target state="translated">&lt;em&gt;모든&lt;/em&gt; 동작을 분리 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1839c755c4cb177f1b7052533cd5eac9f9e2765" translate="yes" xml:space="preserve">
          <source>You may also directly set &lt;code&gt;Yii::$app-&amp;gt;db-&amp;gt;enableSlaves&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; to direct all queries to the master connection.</source>
          <target state="translated">모든 쿼리를 마스터 연결로 &lt;code&gt;Yii::$app-&amp;gt;db-&amp;gt;enableSlaves&lt;/code&gt; 려면 Yii :: $ app-&amp;gt; db-&amp;gt; enableSlaves 를 &lt;code&gt;false&lt;/code&gt; 로 직접 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccccb09cb8d7419f64cb332d1b1b5d255706c73c" translate="yes" xml:space="preserve">
          <source>You may also frequently use the following minor yet useful features when you are developing Web pages.</source>
          <target state="translated">웹 페이지를 개발할 때 다음과 같은 사소하지만 유용한 기능을 자주 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea0c725a34bffc57dee6cfeb88da7d2af58495a2" translate="yes" xml:space="preserve">
          <source>You may also get all behaviors attached to a component:</source>
          <target state="translated">구성 요소에 모든 동작을 연결할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a79375be66cb489c7e2067f48de3a1bb285d8b0" translate="yes" xml:space="preserve">
          <source>You may also pass multiple controller IDs as an array. If this is the case, this composite rule will generate applicable URL rules for EVERY specified controller. For example, &lt;code&gt;['user', 'post']&lt;/code&gt;.</source>
          <target state="translated">여러 컨트롤러 ID를 배열로 전달할 수도 있습니다. 이 경우이 복합 규칙은 지정된 모든 컨트롤러에 적용 가능한 URL 규칙을 생성합니다. 예를 들어 &lt;code&gt;['user', 'post']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eeaf206cd4b00350a1bcdb1634ed099882526766" translate="yes" xml:space="preserve">
          <source>You may also send several messages at once:</source>
          <target state="translated">한 번에 여러 메시지를 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b76c26a5e0674ebae8a7f810b91a5194db34f88" translate="yes" xml:space="preserve">
          <source>You may also set this property to a string representing the attribute name to be displayed in this column. This can be used when the attribute to be displayed is different from the &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; that is used for sorting and filtering.</source>
          <target state="translated">이 속성을이 열에 표시 할 속성 이름을 나타내는 문자열로 설정할 수도 있습니다. 표시 할 &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;속성&lt;/a&gt; 이 정렬 및 필터링에 사용되는 $ attribute 와 다른 경우에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ffe5aa9e139803630a655f97552821b2ed2b14f" translate="yes" xml:space="preserve">
          <source>You may also skip the configuration of the &lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$transport&lt;/a&gt; property. In that case, the default PHP &lt;code&gt;mail()&lt;/code&gt; function will be used to send emails.</source>
          <target state="translated">&lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$ transport&lt;/a&gt; 속성 의 구성을 건너 뛸 수도 있습니다 . 이 경우, 기본 PHP &lt;code&gt;mail()&lt;/code&gt; 함수는 이메일을 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="395a332f0c3f8bdef16dede19dbdb6695b97ce8c" translate="yes" xml:space="preserve">
          <source>You may also specify a closure that returns an array. This can be used to evaluate the array values only if they are needed, for example when a model needs to be loaded like in the following code:</source>
          <target state="translated">배열을 반환하는 클로저를 지정할 수도 있습니다. 예를 들어 다음 코드와 같이 모델을로드해야하는 경우에만 필요한 경우에만 배열 값을 평가하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3561057999968b219efb55c7edc25007885a83d2" translate="yes" xml:space="preserve">
          <source>You may also specify a sub-query that is used to get the values for the &lt;code&gt;IN&lt;/code&gt;-condition: &lt;code&gt;['in', 'user_id', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IN&lt;/code&gt; 조건에 대한 값을 얻는 데 사용되는 하위 쿼리를 지정할 수도 있습니다 . &lt;code&gt;['in', 'user_id', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abac669fd6d6a519082185c334a0462e51cd4c34" translate="yes" xml:space="preserve">
          <source>You may also use './yii message/config' command to dynamically generate configuration file with specified options via cli. For example, you can set &lt;code&gt;languages&lt;/code&gt; and &lt;code&gt;messagePath&lt;/code&gt; parameters like the following:</source>
          <target state="translated">'./yii message / config'명령을 사용하여 cli를 통해 지정된 옵션으로 구성 파일을 동적으로 생성 할 수도 있습니다. 예를 들어 다음과 같이 &lt;code&gt;languages&lt;/code&gt; 및 &lt;code&gt;messagePath&lt;/code&gt; 매개 변수를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1dcc8f7a8818ca60bf8c27a2eb9117fcdcfabe8" translate="yes" xml:space="preserve">
          <source>You may also use a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; to specify the location of the command:</source>
          <target state="translated">&lt;a href=&quot;guide-concept-aliases&quot;&gt;경로 별명&lt;/a&gt; 을 사용하여 명령의 위치를 ​​지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cad1adf34b61215004f12b795816456c7fc365d6" translate="yes" xml:space="preserve">
          <source>You may also use aliases while specifying map value, for example:</source>
          <target state="translated">다음과 같이 맵 값을 지정하는 동안 별명을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ad9d7a929efc7a88f4b27b5f09cf3ad264bfbdd" translate="yes" xml:space="preserve">
          <source>You may also use the array style when adding or removing classes:</source>
          <target state="translated">클래스를 추가하거나 제거 할 때 배열 스타일을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4159d627e124ff1678bf7c2f2c97b6c320710a9" translate="yes" xml:space="preserve">
          <source>You may also use the more general &lt;a href=&quot;guide-tutorial-core-validators#filter&quot;&gt;filter&lt;/a&gt; validator to perform more complex data filtering.</source>
          <target state="translated">보다 일반적인 &lt;a href=&quot;guide-tutorial-core-validators#filter&quot;&gt;필터&lt;/a&gt; 유효성 검사기를 사용하여보다 복잡한 데이터 필터링을 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fefcd16648bb1f71b04ac638547951446c2009b4" translate="yes" xml:space="preserve">
          <source>You may as well compose expressions with special operators like 'MAYBE', 'PROXIMITY' etc. For example:</source>
          <target state="translated">'MAYBE', 'PROXIMITY'등과 같은 특수 연산자를 사용하여 표현식을 작성할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a90ecdd682fa6a316fc5047f447789e0453a948" translate="yes" xml:space="preserve">
          <source>You may associate a name with a behavior by specifying the array key corresponding to the behavior configuration. In this case, the behavior is called a &lt;em&gt;named behavior&lt;/em&gt;. In the above example, there are two named behaviors: &lt;code&gt;myBehavior2&lt;/code&gt; and &lt;code&gt;myBehavior4&lt;/code&gt;. If a behavior is not associated with a name, it is called an &lt;em&gt;anonymous behavior&lt;/em&gt;.</source>
          <target state="translated">동작 구성에 해당하는 배열 키를 지정하여 이름을 동작과 연관시킬 수 있습니다. 이 경우 동작을 &lt;em&gt;명명 된 동작&lt;/em&gt; 이라고합니다 . 위의 예제에는 &lt;code&gt;myBehavior2&lt;/code&gt; 와 &lt;code&gt;myBehavior4&lt;/code&gt; 의 두 가지 명명 된 동작이 있습니다 . 비헤이비어가 이름과 연결되어 있지 않으면 &lt;em&gt;익명 비헤이비어&lt;/em&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="e1a2275b6fbfbeebb887a1e1a0fa6ce890760735" translate="yes" xml:space="preserve">
          <source>You may attach multiple behaviors at once using the &lt;a href=&quot;yii-base-component#attachBehaviors()-detail&quot;&gt;yii\base\Component::attachBehaviors()&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;yii-base-component#attachBehaviors()-detail&quot;&gt;yii \ base \ Component :: attachBehaviors ()&lt;/a&gt; 메서드를 사용하여 여러 동작을 한 번에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50a4cfce8775d89ac6f6e6d98381df04aabc3232" translate="yes" xml:space="preserve">
          <source>You may attach one or more handlers to a single event. When an event is triggered, the attached handlers will be called in the order that they were attached to the event. If a handler needs to stop the invocation of the handlers that follow it, it may set the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;yii\base\Event::$handled&lt;/a&gt; property of the &lt;code&gt;$event&lt;/code&gt; parameter to be &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">하나 이상의 핸들러를 단일 이벤트에 첨부 할 수 있습니다. 이벤트가 트리거되면 연결된 핸들러가 이벤트에 연결된 순서대로 호출됩니다. 핸들러가 그 뒤에 오는 핸들러의 호출을 중지해야하는 경우 &lt;code&gt;$event&lt;/code&gt; 매개 변수 의 &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;yii \ base \ Event :: $ handled&lt;/a&gt; 특성을 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="009a2116edaae70ab18b61cc0bc1eae87428677d" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii\base\Model::validate()&lt;/a&gt; to validate the received data. The method will use the validation rules declared in &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii\base\Model::rules()&lt;/a&gt; to validate every relevant attribute. If no error is found, it will return &lt;code&gt;true&lt;/code&gt;. Otherwise, it will keep the errors in the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;yii\base\Model::$errors&lt;/a&gt; property and return &lt;code&gt;false&lt;/code&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii \ base \ Model :: validate ()&lt;/a&gt; 를 호출 하여 수신 된 데이터의 유효성을 검사 할 수 있습니다. 이 메소드는 &lt;a href=&quot;yii-base-model#rules()-detail&quot;&gt;yii \ base \ Model :: rules ()&lt;/a&gt; 에 선언 된 유효성 검사 규칙을 사용하여 모든 관련 속성을 유효성 검사합니다. 오류가 없으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;yii \ base \ Model :: $ errors&lt;/a&gt; 속성에 오류가 유지되고 &lt;code&gt;false&lt;/code&gt; 가 반환 됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="ff1146c1a8570a4f2a1e978e49ae831e48606895" translate="yes" xml:space="preserve">
          <source>You may call &lt;a href=&quot;yii-base-view#renderDynamic()-detail&quot;&gt;yii\base\View::renderDynamic()&lt;/a&gt; within a cached fragment to insert dynamic content at the desired place, like the following,</source>
          <target state="translated">캐시 된 조각 내에서 &lt;a href=&quot;yii-base-view#renderDynamic()-detail&quot;&gt;yii \ base \ View :: renderDynamic ()을&lt;/a&gt; 호출 하여 다음과 같이 원하는 위치에 동적 내용을 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60a43cced48f677a05fba2623cf4cdef40f1b286" translate="yes" xml:space="preserve">
          <source>You may call that method either by passing an instance of &lt;code&gt;\my\heavy\Dependency&lt;/code&gt; yourself or using &lt;a href=&quot;yii-di-container#invoke()-detail&quot;&gt;yii\di\Container::invoke()&lt;/a&gt; like the following:</source>
          <target state="translated">&lt;code&gt;\my\heavy\Dependency&lt;/code&gt; 인스턴스를 직접 전달하거나 다음과 같이 &lt;a href=&quot;yii-di-container#invoke()-detail&quot;&gt;yii \ di \ Container :: invoke ()를&lt;/a&gt; 사용하여 해당 메소드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f89a021c21c8b68ebb6af968bcfdf7ecc403c22" translate="yes" xml:space="preserve">
          <source>You may call this method to load default values after creating a new instance:</source>
          <target state="translated">새 인스턴스를 만든 후이 메소드를 호출하여 기본값을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0390a2ab9d10058e393976acebb4c195ea9447a2" translate="yes" xml:space="preserve">
          <source>You may call various methods to change the user authentication status:</source>
          <target state="translated">사용자 인증 상태를 변경하기 위해 다양한 방법을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeb190b72329eb7df9658a69982207ed09bc3287" translate="yes" xml:space="preserve">
          <source>You may change the default controller with the following &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;:</source>
          <target state="translated">다음 &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;애플리케이션 구성&lt;/a&gt; 으로 기본 컨트롤러를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80b86a68c9fc45856eccceca97ef7720e60802c5" translate="yes" xml:space="preserve">
          <source>You may change the name of the table used to store the data by setting &lt;a href=&quot;yii-log-dbtarget#%24logTable-detail&quot;&gt;$logTable&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-log-dbtarget#%24logTable-detail&quot;&gt;$ logTable&lt;/a&gt; 을 설정하여 데이터를 저장하는 데 사용되는 테이블의 이름을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a50ca8eac8c39ce3aebeb6697ea7a7e3cdd9710" translate="yes" xml:space="preserve">
          <source>You may change the names of the tables used to store the authorization and rule data by setting &lt;a href=&quot;yii-rbac-dbmanager#%24itemTable-detail&quot;&gt;$itemTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24itemChildTable-detail&quot;&gt;$itemChildTable&lt;/a&gt;, &lt;a href=&quot;yii-rbac-dbmanager#%24assignmentTable-detail&quot;&gt;$assignmentTable&lt;/a&gt; and &lt;a href=&quot;yii-rbac-dbmanager#%24ruleTable-detail&quot;&gt;$ruleTable&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-rbac-dbmanager#%24itemTable-detail&quot;&gt;$ itemTable&lt;/a&gt; , &lt;a href=&quot;yii-rbac-dbmanager#%24itemChildTable-detail&quot;&gt;$ itemChildTable&lt;/a&gt; , &lt;a href=&quot;yii-rbac-dbmanager#%24assignmentTable-detail&quot;&gt;$ assignmentTable&lt;/a&gt; 및 &lt;a href=&quot;yii-rbac-dbmanager#%24ruleTable-detail&quot;&gt;$ ruleTable&lt;/a&gt; 을 설정하여 권한 부여 및 규칙 데이터를 저장하는 데 사용되는 테이블 이름을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="937b286b6cc89c7e8dd8b14fc13d591b0ffbeb2a" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;fileMap&lt;/a&gt; to map a category to a PHP file with a different naming approach.</source>
          <target state="translated">다른 이름 지정 방식으로 범주를 PHP 파일에 매핑 하도록 &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;fileMap&lt;/a&gt; 을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eefc200c88eb574324fa83dfa71b747eeeea7600" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-rest-urlrule#%24only-detail&quot;&gt;$only&lt;/a&gt; and/or &lt;a href=&quot;yii-rest-urlrule#%24except-detail&quot;&gt;$except&lt;/a&gt; to disable some of the above rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24patterns-detail&quot;&gt;$patterns&lt;/a&gt; to completely redefine your own list of rules. You may configure &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;$controller&lt;/a&gt; with multiple controller IDs to generate rules for all these controllers. For example, the following code will disable the &lt;code&gt;delete&lt;/code&gt; rule and generate rules for both &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; controllers:</source>
          <target state="translated">위의 규칙 중 일부를 비활성화하려면 &lt;a href=&quot;yii-rest-urlrule#%24only-detail&quot;&gt;$ only&lt;/a&gt; 및 / 또는 &lt;a href=&quot;yii-rest-urlrule#%24except-detail&quot;&gt;$ except&lt;/a&gt; 를 구성 할 수 있습니다 . 고유 한 규칙 목록을 완전히 재정의 하도록 &lt;a href=&quot;yii-rest-urlrule#%24patterns-detail&quot;&gt;$ patterns&lt;/a&gt; 를 구성 할 수 있습니다 . 여러 컨트롤러 ID로 &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;$ controller&lt;/a&gt; 를 구성 하여 이러한 모든 컨트롤러에 대한 규칙을 생성 할 수 있습니다 . 예를 들어 다음 코드는 &lt;code&gt;delete&lt;/code&gt; 규칙 을 비활성화하고 &lt;code&gt;user&lt;/code&gt; 및 &lt;code&gt;post&lt;/code&gt; 컨트롤러 모두에 대한 규칙을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="284ef6848425498bf9aa6aa0adb8db1e60870cf1" translate="yes" xml:space="preserve">
          <source>You may configure &lt;a href=&quot;yii-widgets-pjax#%24linkSelector-detail&quot;&gt;$linkSelector&lt;/a&gt; to specify which links should trigger pjax, and configure &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$formSelector&lt;/a&gt; to specify which form submission may trigger pjax.</source>
          <target state="translated">당신은 구성 할 수 있습니다 &lt;a href=&quot;yii-widgets-pjax#%24linkSelector-detail&quot;&gt;$ linkSelector를&lt;/a&gt; 링크 pjax를 트리거해야하는 지정 및 구성 &lt;a href=&quot;yii-widgets-pjax#%24formSelector-detail&quot;&gt;$ formSelector는&lt;/a&gt; pjax를 실행할 수있는 형태로 제출 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d212c0718ed147f2346bd144931ea2875a4fc528" translate="yes" xml:space="preserve">
          <source>You may configure &lt;code&gt;logVars&lt;/code&gt; to be an empty array to totally disable the inclusion of context information. Or if you want to implement your own way of providing context information, you may override the &lt;a href=&quot;yii-log-target#getContextMessage()-detail&quot;&gt;yii\log\Target::getContextMessage()&lt;/a&gt; method.</source>
          <target state="translated">컨텍스트 정보 포함을 완전히 비활성화하기 위해 &lt;code&gt;logVars&lt;/code&gt; 를 빈 배열로 구성 할 수 있습니다 . 또는 컨텍스트 정보를 제공하는 고유 한 방법을 구현하려는 경우 &lt;a href=&quot;yii-log-target#getContextMessage()-detail&quot;&gt;yii \ log \ Target :: getContextMessage ()&lt;/a&gt; 메소드를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb249f61f9206fc9272ff1589caa97aaf5527b10" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">디렉토리 또는 경로 &lt;a href=&quot;guide-concept-aliases&quot;&gt;별명&lt;/a&gt; 으로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c695d2d97c57d42b5d2f7638240f080160de440" translate="yes" xml:space="preserve">
          <source>You may configure it as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. Note that the runtime path must be writable by the process running the application. And the path should be protected from being accessed by end users, because the temporary files under it may contain sensitive information.</source>
          <target state="translated">디렉토리 또는 경로 &lt;a href=&quot;guide-concept-aliases&quot;&gt;별명&lt;/a&gt; 으로 구성 할 수 있습니다 . 런타임 경로는 응용 프로그램을 실행하는 프로세스에서 쓸 수 있어야합니다. 또한 경로 아래의 임시 파일에는 중요한 정보가 포함될 수 있으므로 최종 사용자가 경로에 액세스하지 못하도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="46e993fe4cba059f8ca99f2598dde5617a953014" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; property using a directory path or a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. In both forms, the corresponding directory must exist, or an exception will be thrown. The path will be normalized by calling the &lt;code&gt;realpath()&lt;/code&gt; function.</source>
          <target state="translated">디렉토리 경로 또는 &lt;a href=&quot;guide-concept-aliases&quot;&gt;경로 별명을&lt;/a&gt; 사용하여 &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; 특성을 구성 할 수 있습니다 . 두 형식 모두 해당 디렉토리가 존재해야합니다. 그렇지 않으면 예외가 발생합니다. &lt;code&gt;realpath()&lt;/code&gt; 함수를 호출하여 경로가 정규화됩니다 .</target>
        </trans-unit>
        <trans-unit id="fcf2165a2fc73556feb55ef039be53d5fb06f34a" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;controller map&lt;/a&gt; in the &lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;guide-structure-applications#application-configurations&quot;&gt;응용 프로그램 구성&lt;/a&gt; 에서 &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;컨트롤러 맵&lt;/a&gt; 을 구성 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26923611b538647aa01543a173ba5039a95252b4" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;yii\filters\HttpCache::$etagSeed&lt;/a&gt; property to enable sending the &lt;code&gt;ETag&lt;/code&gt; header. The property should be a PHP callable returning a seed for generating the ETag hash. The signature of the PHP callable should be as follows,</source>
          <target state="translated">&lt;code&gt;ETag&lt;/code&gt; 헤더를 보낼 수 있도록 &lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;yii \ filters \ HttpCache :: $ etagSeed&lt;/a&gt; 속성을 구성 할 수 있습니다 . 이 속성은 ETag 해시 생성을위한 시드를 반환하는 PHP 호출 가능이어야합니다. 호출 가능한 PHP의 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="a9dbaab49d4123eb4e9c72788605e55579d6019f" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;yii\filters\HttpCache::$lastModified&lt;/a&gt; property to enable sending the &lt;code&gt;Last-Modified&lt;/code&gt; header. The property should be a PHP callable returning a UNIX timestamp about the page modification time. The signature of the PHP callable should be as follows,</source>
          <target state="translated">&lt;code&gt;Last-Modified&lt;/code&gt; 헤더를 보낼 수 있도록 &lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;yii \ filters \ HttpCache :: $ lastModified&lt;/a&gt; 속성을 구성 할 수 있습니다 . 이 속성은 페이지 수정 시간에 대한 UNIX 타임 스탬프를 반환하는 PHP 호출 가능이어야합니다. 호출 가능한 PHP의 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="7ec8d153154a41cdcebeaa35fd5c6baf4c4b82ea" translate="yes" xml:space="preserve">
          <source>You may configure the &lt;code&gt;only&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; options to explicitly list which actions to support or which actions should be disabled, respectively. For example,</source>
          <target state="translated">지원할 작업 또는 비활성화해야 할 작업을 각각 명시 적으로 나열 하도록 &lt;code&gt;only&lt;/code&gt; 및 &lt;code&gt;except&lt;/code&gt; 옵션을 구성 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="37c7960e8108a9c0cab3f9957dec3234bd4d81c1" translate="yes" xml:space="preserve">
          <source>You may configure the email to be sent by setting the &lt;a href=&quot;yii-log-emailtarget#%24message-detail&quot;&gt;$message&lt;/a&gt; property, through which you can set the target email addresses, subject, etc.:</source>
          <target state="translated">대상 이메일 주소, 제목 등을 설정할 수 있는 &lt;a href=&quot;yii-log-emailtarget#%24message-detail&quot;&gt;$ message&lt;/a&gt; 속성 을 설정하여 이메일을 보내도록 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e83545638c0436eec8296f9841b04f5c260f6c7b" translate="yes" xml:space="preserve">
          <source>You may configure the rate limiter as follows in your REST controller classes:</source>
          <target state="translated">REST 컨트롤러 클래스에서 다음과 같이 속도 제한기를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d050d5574a365c7db05a4a7ea9d767a9705dcc50" translate="yes" xml:space="preserve">
          <source>You may configure the serializer by setting the &lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;yii\rest\Controller::$serializer&lt;/a&gt; property with a configuration array. For example, sometimes you may want to help simplify the client development work by including pagination information directly in the response body. To do so, configure the &lt;a href=&quot;yii-rest-serializer#%24collectionEnvelope-detail&quot;&gt;yii\rest\Serializer::$collectionEnvelope&lt;/a&gt; property as follows:</source>
          <target state="translated">&lt;a href=&quot;yii-rest-controller#%24serializer-detail&quot;&gt;yii \ rest \ Controller :: $ serializer&lt;/a&gt; 속성을 구성 배열 로 설정하여 직렬 변환기를 구성 할 수 있습니다 . 예를 들어 응답 본문에 페이지 매김 정보를 직접 포함시켜 클라이언트 개발 작업을 단순화하는 데 도움이되는 경우가 있습니다. 이렇게하려면 &lt;a href=&quot;yii-rest-serializer#%24collectionEnvelope-detail&quot;&gt;yii \ rest \ Serializer :: $ collectionEnvelope&lt;/a&gt; 속성을 다음과 같이 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="0d9d44aa3acfd0b103788521b3b5c0dc3dca5310" translate="yes" xml:space="preserve">
          <source>You may configure the targets in application configuration, like the following:</source>
          <target state="translated">다음과 같이 응용 프로그램 구성에서 대상을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3631a9b486cfc84e9bd0f3dc2f4d3f51448cd1fa" translate="yes" xml:space="preserve">
          <source>You may configure this property as a directory or a path &lt;a href=&quot;guide-concept-aliases&quot;&gt;alias&lt;/a&gt;. When you modify this property, make sure you also adjust the Composer configuration accordingly.</source>
          <target state="translated">이 속성을 디렉토리 또는 경로 &lt;a href=&quot;guide-concept-aliases&quot;&gt;별칭&lt;/a&gt; 으로 구성 할 수 있습니다 . 이 특성을 수정할 때 그에 따라 작성기 구성도 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="a8eb1ac3a114f4441c6c226ba95c90e6da12929c" translate="yes" xml:space="preserve">
          <source>You may configure this property to be &lt;code&gt;false&lt;/code&gt; if you want to disable layout by default, although this is very rare.</source>
          <target state="translated">기본적으로 레이아웃을 비활성화하려면 이 속성을 &lt;code&gt;false&lt;/code&gt; 로 구성 할 수 있습니다 ( 매우 드물지만).</target>
        </trans-unit>
        <trans-unit id="e0cb45b2ef2a88f18188a5a7ef7e49f27bbefbb7" translate="yes" xml:space="preserve">
          <source>You may consider creating an extension when you feel the need to share with other people your great code. An extension can contain any code you like, such as a helper class, a widget, a module, etc.</source>
          <target state="translated">다른 사람들과 훌륭한 코드를 공유해야 할 필요가 있다고 생각되면 확장 프로그램을 만드는 것이 좋습니다. 확장에는 도우미 클래스, 위젯, 모듈 등과 같이 원하는 코드가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d06154e3dcd0736828176a105faddd8d707848e" translate="yes" xml:space="preserve">
          <source>You may control automatic typecasting for particular case using fields &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterValidate-detail&quot;&gt;$typecastAfterValidate&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastBeforeSave-detail&quot;&gt;$typecastBeforeSave&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterFind-detail&quot;&gt;$typecastAfterFind&lt;/a&gt;. By default typecasting will be performed only after model validation.</source>
          <target state="translated">&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterValidate-detail&quot;&gt;$ typecastAfterValidate&lt;/a&gt; , &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastBeforeSave-detail&quot;&gt;$ typecastBeforeSave&lt;/a&gt; 및 &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24typecastAfterFind-detail&quot;&gt;$ typecastAfterFind&lt;/a&gt; 필드를 사용하여 특정 경우에 대한 자동 유형 변환을 제어 할 수 있습니다 . 기본적으로 형식 캐스팅은 모델 유효성 검사 후에 만 ​​수행됩니다.</target>
        </trans-unit>
        <trans-unit id="89d314eaa7477503dfdc899a6a9e4518bd38ffdb" translate="yes" xml:space="preserve">
          <source>You may customize the error response format by responding to the &lt;code&gt;beforeSend&lt;/code&gt; event of the &lt;code&gt;response&lt;/code&gt; component in the application configuration:</source>
          <target state="translated">애플리케이션 구성에서 &lt;code&gt;response&lt;/code&gt; 구성 요소 의 &lt;code&gt;beforeSend&lt;/code&gt; 이벤트 에 응답하여 오류 응답 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b301010542ffdabdb6c7c4a9398d8d4bfaeb65b8" translate="yes" xml:space="preserve">
          <source>You may customize the formatting process or support additional formats by configuring &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;$formatters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;$ formatters&lt;/a&gt; 를 구성하여 형식화 프로세스를 사용자 정의하거나 추가 형식을 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61d158f70e6e31f6085708dfd5eb806fce3de244" translate="yes" xml:space="preserve">
          <source>You may customize the formatting rules by configuring the &lt;code&gt;formatter&lt;/code&gt; component in the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;application configuration&lt;/a&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;응용 프로그램 구성&lt;/a&gt; 에서 &lt;code&gt;formatter&lt;/code&gt; 구성 요소를 구성하여 포맷 규칙을 사용자 정의 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="b024c1ceb6e4abf972599c49408810b8b83db6d5" translate="yes" xml:space="preserve">
          <source>You may customize the namespace of controller classes by configuring the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property. In case some of the controllers are outside of this namespace, you may make them accessible by configuring the &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;yii\base\Module::$controllerMap&lt;/a&gt; property, similar to &lt;a href=&quot;guide-structure-applications#controller-map&quot;&gt;what you do in an application&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii \ base \ Module :: $ controllerNamespace&lt;/a&gt; 속성 을 구성하여 컨트롤러 클래스의 네임 스페이스를 사용자 정의 할 수 있습니다 . 일부 컨트롤러가이 네임 스페이스 외부에 &lt;a href=&quot;guide-structure-applications#controller-map&quot;&gt;있는 경우 응용 프로그램에서 수행하는&lt;/a&gt; 것과 유사한 &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;yii \ base \ Module :: $ controllerMap&lt;/a&gt; 속성 을 구성하여 액세스 가능하게 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5832103e6af7bb70811b8f2771082bd4d28019d9" translate="yes" xml:space="preserve">
          <source>You may customize these default view directories by overriding the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;yii\base\ViewContextInterface::getViewPath()&lt;/a&gt; method of controllers or widgets.</source>
          <target state="translated">컨트롤러 또는 위젯 의 &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;yii \ base \ ViewContextInterface :: getViewPath ()&lt;/a&gt; 메소드를 재정 의하여 이러한 기본보기 디렉토리를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5febc33a98c6d253f7c625f0ffe0bf7cdbc5e0f3" translate="yes" xml:space="preserve">
          <source>You may customize this behavior by configuring the &lt;a href=&quot;yii-filters-accesscontrol#%24denyCallback-detail&quot;&gt;yii\filters\AccessControl::$denyCallback&lt;/a&gt; property like the following:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;yii-filters-accesscontrol#%24denyCallback-detail&quot;&gt;yii \ filters \ AccessControl :: $ denyCallback&lt;/a&gt; 특성 을 구성하여이 동작을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9e8355ca1724af8d0dda94eb0614eafbc0ce276" translate="yes" xml:space="preserve">
          <source>You may customize this format by configuring the &lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;yii\log\Target::$prefix&lt;/a&gt; property which takes a PHP callable returning a customized message prefix. For example, the following code configures a log target to prefix each log message with the current user ID (IP address and Session ID are removed for privacy reasons).</source>
          <target state="translated">&lt;a href=&quot;yii-log-target#%24prefix-detail&quot;&gt;yii \ log \ Target :: $ prefix&lt;/a&gt; 속성을 구성하여이 형식을 사용자 정의 할 수 있습니다.이 속성은 PHP 호출 가능을 사용하여 사용자 정의 된 메시지 접 두부를 리턴합니다. 예를 들어 다음 코드는 각 로그 메시지 앞에 현재 사용자 ID를 추가하도록 로그 대상을 구성합니다 (개인 정보 보호를 위해 IP 주소 및 세션 ID는 제거됨).</target>
        </trans-unit>
        <trans-unit id="bbbad2e0bc5440370fab949789ceea9de7b3379d" translate="yes" xml:space="preserve">
          <source>You may define &lt;code&gt;YII_ENV&lt;/code&gt; as one of the following values:</source>
          <target state="translated">&lt;code&gt;YII_ENV&lt;/code&gt; 를 다음 값 중 하나로 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17e1ded28ca02844f8eae73b130fa67c75cd02a3" translate="yes" xml:space="preserve">
          <source>You may directly use Model to store model data, or extend it with customization.</source>
          <target state="translated">모델을 직접 사용하여 모델 데이터를 저장하거나 사용자 정의하여 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c92fd6c77dc71eef7395c438b2e8f6a1734d8a6" translate="yes" xml:space="preserve">
          <source>You may disable pjax for a specific link inside the container by adding &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; attribute to this link.</source>
          <target state="translated">이 링크에 &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; 속성을 추가하여 컨테이너 내의 특정 링크에 대해 pjax를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="245d0233f8a8ec2c4b666b3d0647f596767a5729" translate="yes" xml:space="preserve">
          <source>You may disable some of these actions by overriding &lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions()&lt;/a&gt; and unsetting the corresponding actions.</source>
          <target state="translated">&lt;a href=&quot;yii-rest-activecontroller#actions()-detail&quot;&gt;actions ()&lt;/a&gt; 을 재정의 하고 해당 작업을 설정 해제하여 이러한 작업 중 일부를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9edb07bfb183943e091594b86245866acb55bd4e" translate="yes" xml:space="preserve">
          <source>You may disable these headers by configuring &lt;a href=&quot;yii-filters-ratelimiter#%24enableRateLimitHeaders-detail&quot;&gt;yii\filters\RateLimiter::$enableRateLimitHeaders&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;, as shown in the above code example.</source>
          <target state="translated">위 코드 예제와 같이 &lt;a href=&quot;yii-filters-ratelimiter#%24enableRateLimitHeaders-detail&quot;&gt;yii \ filters \ RateLimiter :: $ enableRateLimitHeaders&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 구성하여 이러한 헤더를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd3e6b28fea9f880b73876d9aa7c22a0a7856682" translate="yes" xml:space="preserve">
          <source>You may encounter a case where your JavaScript needs to print a message reacting to some event. In an application that works with multiple languages this string has to be translated to the current application language. One way to achieve this is to use the &lt;a href=&quot;guide-tutorial-i18n#message-translation&quot;&gt;message translation feature&lt;/a&gt; provided by Yii and passing the result to the JavaScript code.</source>
          <target state="translated">JavaScript가 일부 이벤트에 반응하는 메시지를 인쇄해야하는 경우가 발생할 수 있습니다. 여러 언어로 작동하는 응용 프로그램에서이 문자열은 현재 응용 프로그램 언어로 변환되어야합니다. 이를 달성하는 한 가지 방법은 Yii에서 제공 하는 &lt;a href=&quot;guide-tutorial-i18n#message-translation&quot;&gt;메시지 변환 기능&lt;/a&gt; 을 사용 하고 결과를 JavaScript 코드로 전달하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="79ce208d34bc2fabcdb1f97e235afa5dd1f7ca56" translate="yes" xml:space="preserve">
          <source>You may even conditionally define attribute labels. For example, based on the &lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt; the model is being used in, you may return different labels for the same attribute.</source>
          <target state="translated">속성 레이블을 조건부로 정의 할 수도 있습니다. 예를 들어, 모델이 사용되는 &lt;a href=&quot;#scenarios&quot;&gt;시나리오&lt;/a&gt; 에 따라 동일한 속성에 대해 다른 레이블을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ebb471ff2f44ef9183b03f3659f58fe6de1dce0" translate="yes" xml:space="preserve">
          <source>You may explicitly specify it by setting the &lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; 속성 을 설정하여 명시 적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cab756a33fe8464cebdcb5312cc4424cc09f1050" translate="yes" xml:space="preserve">
          <source>You may give an alias to a row so that later in your test, you may refer to the row via the alias. In the above example, the two rows are aliased as &lt;code&gt;user1&lt;/code&gt; and &lt;code&gt;user2&lt;/code&gt;, respectively.</source>
          <target state="translated">나중에 테스트에서 별칭을 통해 행을 참조 할 수 있도록 행에 별칭을 제공 할 수 있습니다. 위의 예에서 두 행은 각각 &lt;code&gt;user1&lt;/code&gt; 및 &lt;code&gt;user2&lt;/code&gt; 로 별명 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a84dcd610d410e2f88e80dcadb4c87d89c0c60c" translate="yes" xml:space="preserve">
          <source>You may have noticed that the controller ID &lt;code&gt;user&lt;/code&gt; appears in plural form as &lt;code&gt;users&lt;/code&gt; in the endpoint URLs. This is because &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; automatically pluralizes controller IDs when creating child URL rules. You may disable this behavior by setting &lt;a href=&quot;yii-rest-urlrule#%24pluralize-detail&quot;&gt;yii\rest\UrlRule::$pluralize&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">제어기 ID &lt;code&gt;user&lt;/code&gt; 는 엔드 포인트 URL의 &lt;code&gt;users&lt;/code&gt; 로 복수 형식으로 나타납니다 . 하위 URL 규칙을 만들 때 &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRule이&lt;/a&gt; 컨트롤러 ID를 자동으로 복수화 하기 때문 입니다. &lt;a href=&quot;yii-rest-urlrule#%24pluralize-detail&quot;&gt;yii \ rest \ UrlRule :: $ pluralize&lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하여이 동작을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fe12e04658544ac490699a0de9b026072b80011" translate="yes" xml:space="preserve">
          <source>You may just focus on the first step, because the second step can be achieved by generic data formatters, such as &lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii\web\JsonResponseFormatter&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-jsonresponseformatter&quot;&gt;yii \ web \ JsonResponseFormatter&lt;/a&gt; 와 같은 일반 데이터 포맷터로 두 번째 단계를 수행 할 수 있으므로 첫 번째 단계에만 집중할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c1022d50e5bb4a18b81e33e7c72f221538a244b" translate="yes" xml:space="preserve">
          <source>You may list one or multiple root namespaces and their corresponding file paths.</source>
          <target state="translated">하나 이상의 루트 네임 스페이스와 해당 파일 경로를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="018473a68e1001c0442e6244fb958d968739118d" translate="yes" xml:space="preserve">
          <source>You may modify or remove some of the GET parameters, or add additional query parameters through the &lt;code&gt;$params&lt;/code&gt; parameter. In particular, if you specify a parameter to be null, then this parameter will be removed from the existing GET parameters; all other parameters specified in &lt;code&gt;$params&lt;/code&gt; will be merged with the existing GET parameters. For example,</source>
          <target state="translated">GET 매개 변수 중 일부를 수정 또는 제거하거나 &lt;code&gt;$params&lt;/code&gt; 매개 변수를 통해 추가 조회 매개 변수를 추가 할 수 있습니다 . 특히, 매개 변수를 널로 지정하면이 매개 변수는 기존 GET 매개 변수에서 제거됩니다. &lt;code&gt;$params&lt;/code&gt; 지정된 다른 모든 매개 변수 는 기존 GET 매개 변수와 병합됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="cd1c6cba18b24dd9658f6188dee1d4083a5a6097" translate="yes" xml:space="preserve">
          <source>You may optionally format the string with ANSI codes by passing additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-helpers-console&quot;&gt;yii \ helpers \ Console에&lt;/a&gt; 정의 된 상수를 사용하여 추가 매개 변수를 전달하여 선택적으로 문자열을 ANSI 코드로 형식화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34d6c0706ce8cb5a69a6aa4257609a9bcf9f6b32" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii\base\Model::attributes()&lt;/a&gt; to define attributes in a different way. The method should return the names of the attributes in a model. For example, &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; does so by returning the column names of the associated database table as its attribute names. Note that you may also need to override the magic methods such as &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt; so that the attributes can be accessed like normal object properties.</source>
          <target state="translated">속성을 다른 방식으로 정의하기 위해 &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii \ base \ Model :: attributes ()&lt;/a&gt; 를 재정의 할 수 있습니다 . 이 메소드는 모델의 속성 이름을 리턴해야합니다. 예를 들어, &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt; 는 연관된 데이터베이스 테이블의 열 이름을 속성 이름으로 리턴하여이를 수행합니다. 일반 객체 속성처럼 속성에 액세스 할 수 있도록 &lt;code&gt;__get()&lt;/code&gt; , &lt;code&gt;__set()&lt;/code&gt; 과 같은 매직 메서드를 재정의해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b50f0b41641b8cac465898b5ef5b57aab19de91" translate="yes" xml:space="preserve">
          <source>You may override &lt;a href=&quot;yii-elasticsearch-activerecord#index()-detail&quot;&gt;index()&lt;/a&gt; and &lt;a href=&quot;yii-elasticsearch-activerecord#type()-detail&quot;&gt;type()&lt;/a&gt; to define the index and type this record represents.</source>
          <target state="translated">이 레코드가 나타내는 색인 및 유형을 정의하기 위해 &lt;a href=&quot;yii-elasticsearch-activerecord#index()-detail&quot;&gt;index ()&lt;/a&gt; 및 &lt;a href=&quot;yii-elasticsearch-activerecord#type()-detail&quot;&gt;type ()&lt;/a&gt; 을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5074a25af7796ec08fc0a2ee360262410131989" translate="yes" xml:space="preserve">
          <source>You may override it to customize checking.</source>
          <target state="translated">검사를 사용자 정의하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a07798a16e5c8d1cead8310de32b5e011af1bde" translate="yes" xml:space="preserve">
          <source>You may override it to customize slug generation. The default implementation calls &lt;a href=&quot;yii-helpers-baseinflector#slug()-detail&quot;&gt;yii\helpers\Inflector::slug()&lt;/a&gt; on the input strings concatenated by dashes (&lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">슬러그 생성을 사용자 정의하기 위해이를 무시할 수 있습니다. 기본 구현 은 입력 문자열에서 대시 ( &lt;code&gt;-&lt;/code&gt; )로 연결된 &lt;a href=&quot;yii-helpers-baseinflector#slug()-detail&quot;&gt;yii \ helpers \ Inflector :: slug ()&lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a2e55721fbaf639066ecb75def5f4663a495e02a" translate="yes" xml:space="preserve">
          <source>You may override the configuration of both categories.</source>
          <target state="translated">두 범주의 구성을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc1434d6af3846d2d29b3f19f249040a90a8e2d7" translate="yes" xml:space="preserve">
          <source>You may override this method if the instance being created depends on the row data to be populated into the record. For example, by creating a record based on the value of a column, you may implement the so-called single-table inheritance mapping.</source>
          <target state="translated">작성중인 인스턴스가 레코드에 채워질 행 데이터에 의존하는 경우이 메소드를 대체 할 수 있습니다. 예를 들어, 열 값을 기반으로 레코드를 작성하면 소위 단일 테이블 상속 맵핑을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf560aa7c3d93683d2d994664e3db561754fc44" translate="yes" xml:space="preserve">
          <source>You may override this method to cancel caching by returning &lt;code&gt;false&lt;/code&gt; or store an additional data in a cache entry by returning an array instead of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드를 재정 의하여 &lt;code&gt;false&lt;/code&gt; 를 반환하여 캐싱을 취소 하거나 &lt;code&gt;true&lt;/code&gt; 대신 배열을 반환하여 캐시 데이터에 추가 데이터를 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d10de7e931b28dd0b3a6cfe1a0f0bcc930e7c086" translate="yes" xml:space="preserve">
          <source>You may override this method to create a number formatter based on patterns.</source>
          <target state="translated">패턴을 기반으로 숫자 포맷터를 작성하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f88e58b6f4ddebaf09922b2e54701927b34d894" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the generation of page buttons.</source>
          <target state="translated">이 방법을 재정 의하여 페이지 단추 생성을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13ba27b05d3360f41e6461e74cda4236dfdd9091" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the MongoDB.</source>
          <target state="translated">MongoDB에서 메시지 스토리지를 사용자 정의하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="070249dd05b0204d5a9beaf9cbd6a5fbccc9f34f" translate="yes" xml:space="preserve">
          <source>You may override this method to customize the message storage in the database.</source>
          <target state="translated">데이터베이스에서 메시지 스토리지를 사용자 정의하기 위해이 방법을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="570f2d1d4aacf159e43d8eec86494a8cfd002969" translate="yes" xml:space="preserve">
          <source>You may override this method to define the primary key name when you have defined &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; and thus part of the &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;_id&lt;/code&gt; 필드에 대한 &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;경로 매핑&lt;/a&gt; 을 &lt;code&gt;_source&lt;/code&gt; 의 일부로 정의하여 &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;속성의&lt;/a&gt; 일부로 정의 할 때이 방법을 재정 의하여 기본 키 이름을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c602694906d9187494c06e476d9d69d3841428a" translate="yes" xml:space="preserve">
          <source>You may override this method to define the primary key name when you have defined &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html&quot;&gt;path mapping&lt;/a&gt; for the &lt;code&gt;_id&lt;/code&gt; field so that it is part of the &lt;code&gt;_source&lt;/code&gt; and thus part of the &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634b37f6bfbda1faaf1fbfe5c84cef5992fdbc2c" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation before the response is sent.</source>
          <target state="translated">응답을 보내기 전에 막판 준비를 수행하기 위해이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="270a842f8ab090ddc17ac8fc758d7c80944af6e4" translate="yes" xml:space="preserve">
          <source>You may override this method to do last-minute preparation for the message. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="translated">마지막 방법으로 메시지를 준비하기 위해이 방법을 재정의 할 수 있습니다. 이 메소드를 대체하는 경우 먼저 상위 구현을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="8f026db875734c4f989897be8c1c65d07f61829d" translate="yes" xml:space="preserve">
          <source>You may override this method to do post-processing work for the action run.</source>
          <target state="translated">조치 실행에 대한 사후 처리 작업을 수행하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bddd5c92bdfb1cda5a1e049b6e6363b1ced65e8e" translate="yes" xml:space="preserve">
          <source>You may override this method to do preparation work for the action run. If the method returns false, it will cancel the action.</source>
          <target state="translated">조치 실행을위한 준비 작업을 수행하기 위해이 메소드를 대체 할 수 있습니다. 메소드가 false를 리턴하면 조치가 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="c09b9bcec5b6900123dcd8de55553428caf40880" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing for the action.</source>
          <target state="translated">조치에 대한 일부 후 처리를 수행하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d2c24e77fc6453c9b112c3976e6974f936ca999" translate="yes" xml:space="preserve">
          <source>You may override this method to do some postprocessing or logging based on mail send status. If you override this method, please make sure you call the parent implementation first.</source>
          <target state="translated">메일 전송 상태에 따라 일부 사후 처리 또는 로깅을 수행하기 위해이 방법을 재정의 할 수 있습니다. 이 메소드를 대체하는 경우 먼저 상위 구현을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="c0b9cf0d6f7986ff4d2e313c04a1eaa3efe46398" translate="yes" xml:space="preserve">
          <source>You may override this method to return a customized query. For example,</source>
          <target state="translated">이 메서드를 재정 의하여 사용자 지정 쿼리를 반환 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="e29ea611831ce3d507881ef90dcb079ff2cc4a98" translate="yes" xml:space="preserve">
          <source>You may override this method to return a list of expandable fields based on some context information (e.g. the current application user).</source>
          <target state="translated">일부 컨텍스트 정보 (예 : 현재 애플리케이션 사용자)를 기반으로 확장 가능한 필드 목록을 리턴하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f83caac1e77797c93e1a78d2e520c65ee2e13498" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized help. The default implementation returns help information retrieved from the PHPDoc comment.</source>
          <target state="translated">사용자 정의 된 도움말을 리턴하기 위해이 메소드를 대체 할 수 있습니다. 기본 구현은 PHPDoc 주석에서 검색된 도움말 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f5f8206a7ec0e990ce449ecad50e3cd50688df80" translate="yes" xml:space="preserve">
          <source>You may override this method to return customized summary. The default implementation returns first line from the PHPDoc comment.</source>
          <target state="translated">이 방법을 재정 의하여 사용자 정의 된 요약을 반환 할 수 있습니다. 기본 구현은 PHPDoc 주석에서 첫 번째 줄을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b593e34d6e7c0628ff11e01d17a9b0b81a996c25" translate="yes" xml:space="preserve">
          <source>You may override this method to return the JavaScript validation code if the validator can support client-side validation.</source>
          <target state="translated">유효성 검사기가 클라이언트 쪽 유효성 검사를 지원할 수있는 경우이 메서드를 재정 의하여 JavaScript 유효성 검사 코드를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a184f534c9a0164974296f4e89d2c9192772b5a" translate="yes" xml:space="preserve">
          <source>You may pass additional parameters using the constants defined in &lt;a href=&quot;yii-helpers-console&quot;&gt;yii\helpers\Console&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-helpers-console&quot;&gt;yii \ helpers \ Console에&lt;/a&gt; 정의 된 상수를 사용하여 추가 매개 변수를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49588c006493b64f70a7d86bef66ca228d8f4ac7" translate="yes" xml:space="preserve">
          <source>You may pass additional view parameters to &lt;code&gt;compose()&lt;/code&gt; method, which will be available inside the view files:</source>
          <target state="translated">추가 뷰 매개 변수를 &lt;code&gt;compose()&lt;/code&gt; 메소드에 전달하면 뷰 파일 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1209efb57536f70ae3eb9edd80c275332d275de1" translate="yes" xml:space="preserve">
          <source>You may provide constructor parameters (&lt;code&gt;$params&lt;/code&gt;) and object configurations (&lt;code&gt;$config&lt;/code&gt;) that will be used during the creation of the instance.</source>
          <target state="translated">인스턴스 생성 중 사용될 생성자 매개 변수 ( &lt;code&gt;$params&lt;/code&gt; ) 및 객체 구성 ( &lt;code&gt;$config&lt;/code&gt; )을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f399703c1aefc792b59d2d8e23a96c804fcac557" translate="yes" xml:space="preserve">
          <source>You may respond to these events to implement features such as login audit, online user statistics. For example, in the handler for &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt;, you may record the login time and IP address in the &lt;code&gt;user&lt;/code&gt; table.</source>
          <target state="translated">이러한 이벤트에 응답하여 로그인 감사, 온라인 사용자 통계와 같은 기능을 구현할 수 있습니다. 예를 들어, &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;EVENT_AFTER_LOGIN&lt;/a&gt; 핸들러 에서 &lt;code&gt;user&lt;/code&gt; 테이블 에 로그인 시간과 IP 주소를 기록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32d6c08da371e6eb3a6500cc4ff84694ba601f0d" translate="yes" xml:space="preserve">
          <source>You may set options using keys, which are specific to particular transport, like &lt;code&gt;[CURLOPT_VERBOSE =&amp;gt; true]&lt;/code&gt; in case there is a necessity for it.</source>
          <target state="translated">필요한 경우 &lt;code&gt;[CURLOPT_VERBOSE =&amp;gt; true]&lt;/code&gt; 와 같이 특정 전송에 특정한 키를 사용하여 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49d8ddbdc82d84a1a96dabcbf690c803ecde1af4" translate="yes" xml:space="preserve">
          <source>You may specify additional options about fragment caching by passing the option array as the second parameter to the &lt;a href=&quot;yii-base-view#beginCache()-detail&quot;&gt;beginCache()&lt;/a&gt; method. Behind the scene, this option array will be used to configure a &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt; widget which implements the actual fragment caching functionality.</source>
          <target state="translated">옵션 배열을 &lt;a href=&quot;yii-base-view#beginCache()-detail&quot;&gt;beginCache ()&lt;/a&gt; 메서드에 두 번째 매개 변수로 전달하여 조각 캐싱에 대한 추가 옵션을 지정할 수 있습니다 . 씬 &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;뒤에서이&lt;/a&gt; 옵션 배열은 실제 조각 캐싱 기능을 구현 하는 yii \ widgets \ FragmentCache 위젯 을 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="eaaab053fa861172364943e338d24b8780718f1c" translate="yes" xml:space="preserve">
          <source>You may specify multiple CSS classes using the array style as well:</source>
          <target state="translated">배열 스타일을 사용하여 여러 CSS 클래스를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f325f940cbe268faddfb775f36c137fdac5901cf" translate="yes" xml:space="preserve">
          <source>You may specify several target bundles in order to compress different groups of assets. In this case you should use 'depends' key to specify, which bundles should be covered with particular target bundle. You may leave 'depends' to be empty for single bundle, which will compress all remaining bundles in this case. For example:</source>
          <target state="translated">서로 다른 자산 그룹을 압축하기 위해 여러 대상 번들을 지정할 수 있습니다. 이 경우 'depends'키를 사용하여 특정 대상 번들로 포함 할 번들을 지정해야합니다. 단일 번들의 경우 '종속'을 비워 둘 수 있습니다.이 경우 나머지 모든 번들이 압축됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4644ea99ae5a3cf2830561bf488a43c9da30e38" translate="yes" xml:space="preserve">
          <source>You may specify the attributes to be updated as name list or name-value pairs. If the latter, the corresponding attribute values will be modified accordingly. The method will then save the specified attributes into database.</source>
          <target state="translated">이름 목록 또는 이름-값 쌍으로 업데이트 할 속성을 지정할 수 있습니다. 후자의 경우 해당 속성 값이 그에 따라 수정됩니다. 그런 다음 지정된 속성을 데이터베이스에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9431d6a1f359943e7b69db4d68f2cf6620827055" translate="yes" xml:space="preserve">
          <source>You may specify the relation name as the array key and provide an anonymous functions that can be used to modify the relation queries on-the-fly as the array value.</source>
          <target state="translated">관계 이름을 배열 키로 지정하고 관계 쿼리를 배열 값으로 즉석에서 수정하는 데 사용할 수있는 익명 함수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b2cdb040a8d6d46bf7522e1f7b741f16a1f212e" translate="yes" xml:space="preserve">
          <source>You may specify the route as a string, e.g., &lt;code&gt;site/index&lt;/code&gt;. You may also use an array if you want to specify additional query parameters for the URL being created. The array format must be:</source>
          <target state="translated">경로를 문자열로 지정할 수 있습니다 (예 : &lt;code&gt;site/index&lt;/code&gt; ) . 작성중인 URL에 추가 조회 매개 변수를 지정하려는 경우 배열을 사용할 수도 있습니다. 배열 형식은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="29698c4ff5651a913299b85eaa6489f041110cd4" translate="yes" xml:space="preserve">
          <source>You may specify various container HTML options by passing arrays to:</source>
          <target state="translated">배열을 다음에 전달하여 다양한 컨테이너 HTML 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb72cbafd49b860c1288740ce2c51d6c943d0058" translate="yes" xml:space="preserve">
          <source>You may switch between the two URL formats by toggling the &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;enablePrettyUrl&lt;/a&gt; property of the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; without changing any other application code.</source>
          <target state="translated">다른 응용 프로그램 코드를 변경하지 않고 &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL 관리자&lt;/a&gt; 의 &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;enablePrettyUrl&lt;/a&gt; 속성을 전환하여 두 URL 형식간에 전환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60d3e8174ca0cec7334f320d9a546492fd7d8153" translate="yes" xml:space="preserve">
          <source>You may then get the following response for request &lt;code&gt;http://localhost/users&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;http://localhost/users&lt;/code&gt; 요청에 대해 다음 응답을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a9167c9a38f2bb34bfd6f2a32c4f4b8ea7daa15" translate="yes" xml:space="preserve">
          <source>You may trigger a &lt;em&gt;class-level&lt;/em&gt; event by calling the static method &lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;yii\base\Event::trigger()&lt;/a&gt;. A class-level event is not associated with a particular object. As a result, it will cause the invocation of class-level event handlers only. For example:</source>
          <target state="translated">정적 메소드 &lt;a href=&quot;yii-base-event#trigger()-detail&quot;&gt;yii \ base \ Event :: trigger ()&lt;/a&gt; 를 호출하여 &lt;em&gt;클래스 레벨&lt;/em&gt; 이벤트를 트리거 할 수 있습니다 . 클래스 수준 이벤트는 특정 개체와 관련이 없습니다. 결과적으로 클래스 레벨 이벤트 핸들러 만 호출하게됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="08c753a7b0281e6c44ebb0a9804c23e7d2e79e2f" translate="yes" xml:space="preserve">
          <source>You may tune the CORS headers by overriding default parameters on a per action basis. For example adding the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; for the &lt;code&gt;login&lt;/code&gt; action could be done like this :</source>
          <target state="translated">조치별로 기본 매개 변수를 대체하여 CORS 헤더를 조정할 수 있습니다. 예를 들어 &lt;code&gt;login&lt;/code&gt; 작업에 &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; 를 추가하면 다음 과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91d103b87fc8896d67c1c157b85a2f6b439e1d40" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-authclient-baseoauth#createApiRequest()-detail&quot;&gt;createApiRequest()&lt;/a&gt; method instead, gaining more control over request execution.</source>
          <target state="translated">대신 &lt;a href=&quot;yii-authclient-baseoauth#createApiRequest()-detail&quot;&gt;createApiRequest ()&lt;/a&gt; 메소드를 사용하여 요청 실행을 더 많이 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10eb6e1a35dc9b84ed21a2548b6d10529950947a" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-captcha-captchavalidator&quot;&gt;yii\captcha\CaptchaValidator&lt;/a&gt; to validate the user input matches the current CAPTCHA verification code.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;yii-captcha-captchavalidator&quot;&gt;YII \ 보안 문자 \ CaptchaValidator&lt;/a&gt; 에 대한 유효성 검사 사용자 입력이 현재 보안 문자 확인 코드를 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6f8b7c4613fd2cbe425941e8a7c4a14cc3e24919" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-instance#get()-detail&quot;&gt;get()&lt;/a&gt; to obtain the actual object referenced by &lt;a href=&quot;yii-di-instance#%24id-detail&quot;&gt;$id&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-di-instance#get()-detail&quot;&gt;get ()&lt;/a&gt; 을 사용하여 &lt;a href=&quot;yii-di-instance#%24id-detail&quot;&gt;$ id가&lt;/a&gt; 참조하는 실제 객체를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a81c7b3b06719fce40d869194c924e9acf0d7984" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-di-servicelocator#has()-detail&quot;&gt;yii\di\ServiceLocator::has()&lt;/a&gt; to check if a component ID has already been registered. If you call &lt;a href=&quot;yii-di-servicelocator#get()-detail&quot;&gt;yii\di\ServiceLocator::get()&lt;/a&gt; with an invalid ID, an exception will be thrown.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;yii-di-servicelocator#has()-detail&quot;&gt;YII \ 디 \ ServiceLocator ::가 ()&lt;/a&gt; 구성 요소 ID가 이미 등록되어 있는지 확인합니다. 잘못된 ID로 &lt;a href=&quot;yii-di-servicelocator#get()-detail&quot;&gt;yii \ di \ ServiceLocator :: get ()&lt;/a&gt; 을 호출 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cc59f533cdb398cf9626350e62bc8f8ebfac6b60" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;$fileMap&lt;/a&gt; to customize the association between category names and the file names.</source>
          <target state="translated">&lt;a href=&quot;yii-i18n-phpmessagesource#%24fileMap-detail&quot;&gt;$ fileMap&lt;/a&gt; 을 사용 하여 카테고리 이름과 파일 이름 간의 연관을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="387bc85ba5e82526186968fdcaf51d6d7f357083" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; to simplify the routing to your API endpoints.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;yii-rest-urlrule&quot;&gt;YII는 \ UrlRule 휴식 \&lt;/a&gt; 당신의 API 엔드 포인트에 라우팅을 간소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cafa7a3cf722fe4845365f3c1313a77c926e2d7" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;match()&lt;/a&gt;, &lt;a href=&quot;yii-sphinx-matchexpression#andMatch()-detail&quot;&gt;andMatch()&lt;/a&gt; and &lt;a href=&quot;yii-sphinx-matchexpression#orMatch()-detail&quot;&gt;orMatch()&lt;/a&gt; to combine several conditions. For example:</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;일치 ()&lt;/a&gt; , &lt;a href=&quot;yii-sphinx-matchexpression#andMatch()-detail&quot;&gt;andMatch ()&lt;/a&gt; 와 &lt;a href=&quot;yii-sphinx-matchexpression#orMatch()-detail&quot;&gt;orMatch ()를&lt;/a&gt; 몇 가지 조건을 결합 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f6a2d770a40d3ba779a1265fe007f61624fab27c" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;$isGuest&lt;/a&gt; to determine whether the current user is a guest or not. If the user is a guest, the &lt;a href=&quot;yii-web-user#%24identity-detail&quot;&gt;$identity&lt;/a&gt; property would return &lt;code&gt;null&lt;/code&gt;. Otherwise, it would be an instance of &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;$ isGuest&lt;/a&gt; 를 사용 하여 현재 사용자가 손님인지 여부를 확인할 수 있습니다 . 사용자가 손님 인 경우 &lt;a href=&quot;yii-web-user#%24identity-detail&quot;&gt;$ identity&lt;/a&gt; 속성은 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 그렇지 않으면 &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii \ web \ IdentityInterface&lt;/a&gt; 의 인스턴스가 됩니다.</target>
        </trans-unit>
        <trans-unit id="6c456bd3c6c9d2f0b95deb3028a93e3dd5591355" translate="yes" xml:space="preserve">
          <source>You may use CORS filter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="translated">CORS 필터를 다음과 같이 컨트롤러 나 모듈에 동작으로 연결하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="453ecf90c65c6d377c9e13fa408ad7f0868d0dec" translate="yes" xml:space="preserve">
          <source>You may use ContentNegotiator as a bootstrapping component as well as an action filter.</source>
          <target state="translated">ContentNegotiator를 부트 스트랩 구성 요소 및 조치 필터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="277efd291bd0e5995f2508a389a47968e560cb7c" translate="yes" xml:space="preserve">
          <source>You may use HttpBasicAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="translated">HttpBasicAuth를 다음과 같이 컨트롤러 나 모듈에 동작으로 연결하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ba80bf293355adc8aa50ee1dbd8cea08b9b805" translate="yes" xml:space="preserve">
          <source>You may use HttpBearerAuth by attaching it as a behavior to a controller or module, like the following:</source>
          <target state="translated">HttpBearerAuth를 다음과 같이 컨트롤러 나 모듈에 동작으로 연결하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="888df728afc94c5ca1871651105544a2c666abc3" translate="yes" xml:space="preserve">
          <source>You may use RateLimiter by attaching it as a behavior to a controller or module, like the following,</source>
          <target state="translated">RateLimiter를 다음과 같이 컨트롤러 나 모듈에 동작으로 연결하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7e0eb2a91ded0e97f0d1db132c6ce127b133082" translate="yes" xml:space="preserve">
          <source>You may use a different layout by configuring either &lt;a href=&quot;yii-base-application#%24layout-detail&quot;&gt;yii\base\Application::$layout&lt;/a&gt; or &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt;. The former governs the layout used by all controllers, while the latter overrides the former for individual controllers. For example, the following code makes the &lt;code&gt;post&lt;/code&gt; controller to use &lt;code&gt;@app/views/layouts/post.php&lt;/code&gt; as the layout when rendering its views. Other controllers, assuming their &lt;code&gt;layout&lt;/code&gt; property is untouched, will still use the default &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; as the layout.</source>
          <target state="translated">&lt;a href=&quot;yii-base-application#%24layout-detail&quot;&gt;yii \ base \ Application :: $ layout&lt;/a&gt; 또는 &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii \ base \ Controller :: $ layout&lt;/a&gt; 을 구성하여 다른 레이아웃을 사용할 수 있습니다 . 전자는 모든 컨트롤러가 사용하는 레이아웃을 제어하고 후자는 개별 컨트롤러를위한 전자를 대체합니다. 예를 들어, 다음 코드는 &lt;code&gt;post&lt;/code&gt; 컨트롤러가 &lt;code&gt;@app/views/layouts/post.php&lt;/code&gt; 를 렌더링 할 때 레이아웃으로 @ app / views / layouts / post.php 를 사용하도록합니다. &lt;code&gt;layout&lt;/code&gt; 속성이 변경되지 않은 다른 컨트롤러 는 여전히 기본 &lt;code&gt;@app/views/layouts/main.php&lt;/code&gt; 를 레이아웃으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fd40f79e1c1ff1359298066a33e303d658f57df0" translate="yes" xml:space="preserve">
          <source>You may use a string or an arbitrary value as a cache key. When a key is not a string, it will be automatically serialized into a string.</source>
          <target state="translated">캐시 키로 문자열 또는 임의의 값을 사용할 수 있습니다. 키가 문자열이 아닌 경우 자동으로 문자열로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="3d6787a5d1a7fab102ca6d334c44c5819d59e111" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;array&lt;/code&gt; type hint to indicate that an argument should be treated as an array. The array will be generated by splitting the input string on commas.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 유형 힌트를 사용하여 인수를 배열로 취급해야 함을 나타낼 수 있습니다. 입력 문자열을 쉼표로 분할하여 배열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="bbd4cd216cc58ec316d824211db2482c718f6a67" translate="yes" xml:space="preserve">
          <source>You may use the Composer autoloader alone without the Yii autoloader. However, by doing so, the performance of your class autoloading may be degraded, and you must follow the rules set by Composer in order for your classes to be autoloadable.</source>
          <target state="translated">Yii 오토로더없이 Composer 오토로더를 단독으로 사용할 수 있습니다. 그러나 이렇게하면 클래스 자동로드 성능이 저하 될 수 있으며 클래스를 자동로드하려면 Composer에서 설정 한 규칙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="2b12e801fa2620210df7c349c121dd600d64e60b" translate="yes" xml:space="preserve">
          <source>You may use the following placeholders in the message:</source>
          <target state="translated">메시지에 다음 자리 표시자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ac98a995c809d8198e583c09ea640c2d53aaaa" translate="yes" xml:space="preserve">
          <source>You may use this method to display all the flash messages in a view file:</source>
          <target state="translated">이 방법을 사용하여 모든 플래시 메시지를보기 파일에 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d86b217aaa0c045fa361ff534d654af343a7216" translate="yes" xml:space="preserve">
          <source>You may use this method to validate a value out of the context of a data model.</source>
          <target state="translated">이 방법을 사용하여 데이터 모델의 컨텍스트에서 값을 검증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="612f67a6c867726e3208be64859c9e9a52be67b3" translate="yes" xml:space="preserve">
          <source>You may usually consider the last recommendation above when you are developing large complex systems. In these systems, models could be very fat because they are used in many places and may thus contain many sets of rules and business logic. This often ends up in a nightmare in maintaining the model code because a single touch of the code could affect several different places. To make the model code more maintainable, you may take the following strategy:</source>
          <target state="translated">대규모의 복잡한 시스템을 개발할 때 위의 마지막 권장 사항을 고려할 수 있습니다. 이러한 시스템에서 모델은 여러 위치에서 사용되므로 많은 규칙과 비즈니스 로직을 포함 할 수 있으므로 매우 뚱뚱 할 수 있습니다. 코드를 한 번만 터치하면 여러 위치에 영향을 줄 수 있기 때문에 종종 모델 코드를 유지하는 데 악몽이됩니다. 모델 코드를 유지 관리하기 쉽도록 다음 전략을 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79ed884bde88f00c3bb27f17d23d57489d9e724b" translate="yes" xml:space="preserve">
          <source>You may view this method as an enhanced version of the &lt;code&gt;new&lt;/code&gt; operator. The method supports creating an object based on a class name, a configuration array or an anonymous function.</source>
          <target state="translated">이 방법을 &lt;code&gt;new&lt;/code&gt; 연산자 의 향상된 버전으로 볼 수 있습니다 . 이 메소드는 클래스 이름, 구성 배열 또는 익명 함수를 기반으로 오브젝트 작성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2ae0d67d0931a97047a1e1de68af6d81d8f28917" translate="yes" xml:space="preserve">
          <source>You may want to add suffixes to the URLs for various purposes. For example, you may add &lt;code&gt;.html&lt;/code&gt; to the URLs so that they look like URLs for static HTML pages; you may also add &lt;code&gt;.json&lt;/code&gt; to the URLs to indicate the expected content type of the response. You can achieve this goal by configuring the &lt;a href=&quot;yii-web-urlmanager#%24suffix-detail&quot;&gt;yii\web\UrlManager::$suffix&lt;/a&gt; property like the following in the application configuration:</source>
          <target state="translated">다양한 목적으로 URL에 접미사를 추가 할 수 있습니다. 예를 들어 정적 HTML 페이지의 URL처럼 보이도록 URL 에 &lt;code&gt;.html&lt;/code&gt; 을 추가 할 수 있습니다 . URL에 &lt;code&gt;.json&lt;/code&gt; 을 추가 하여 응답의 예상 컨텐츠 유형을 표시 할 수도 있습니다 . 응용 프로그램 구성에서 다음과 같이 &lt;a href=&quot;yii-web-urlmanager#%24suffix-detail&quot;&gt;yii \ web \ UrlManager :: $ suffix&lt;/a&gt; 속성 을 구성하여이 목표를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="950012003281cf7b507ed653ebb68b0cb02e2973" translate="yes" xml:space="preserve">
          <source>You may want to use two columns in the user table to record the allowance and timestamp information. With those defined, then &lt;code&gt;loadAllowance()&lt;/code&gt; and &lt;code&gt;saveAllowance()&lt;/code&gt; can be implemented to read and save the values of the two columns corresponding to the current authenticated user. To improve performance, you may also consider storing these pieces of information in a cache or NoSQL storage.</source>
          <target state="translated">사용자 테이블에서 두 개의 열을 사용하여 허용량 및 타임 스탬프 정보를 기록 할 수 있습니다. 정의 된 값으로 &lt;code&gt;loadAllowance()&lt;/code&gt; 및 &lt;code&gt;saveAllowance()&lt;/code&gt; 를 구현하여 현재 인증 된 사용자에 해당하는 두 열의 값을 읽고 저장할 수 있습니다. 성능을 향상시키기 위해 이러한 정보를 캐시 또는 NoSQL 스토리지에 저장하는 것도 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f67f6d32cd9a0fa8ddc2097d91419c4e4a2cd353" translate="yes" xml:space="preserve">
          <source>You might notice &lt;code&gt;Instance::of('tempFileStorage')&lt;/code&gt; notation. It means, that the &lt;a href=&quot;yii-di-container&quot;&gt;Container&lt;/a&gt; will implicitly provide a dependency registered with the name of &lt;code&gt;tempFileStorage&lt;/code&gt; and pass it as the first argument of &lt;code&gt;app\storage\DocumentsWriter&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Instance::of('tempFileStorage')&lt;/code&gt; 표기법이 표시 될 수 있습니다 . 이는 &lt;a href=&quot;yii-di-container&quot;&gt;컨테이너&lt;/a&gt; 가 &lt;code&gt;tempFileStorage&lt;/code&gt; 라는 이름으로 등록 된 종속성을 암시 적으로 제공하고 이를 &lt;code&gt;app\storage\DocumentsWriter&lt;/code&gt; 생성자 의 첫 번째 인수로 전달 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="bb4f45a144926f78932609e67066eaa8eb1b71ec" translate="yes" xml:space="preserve">
          <source>You must set this property if the directory containing the source asset files is not Web accessible. By setting this property, &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; will publish the source asset files to a Web-accessible directory automatically when the asset bundle is registered on a page.</source>
          <target state="translated">소스 자산 파일이 포함 된 디렉토리에 웹 액세스 가능하지 않은 경우이 특성을 설정해야합니다. 이 속성을 설정하면 &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii \ web \ AssetManager&lt;/a&gt; 가 자산 번들이 페이지에 등록 될 때 소스 자산 파일을 웹 액세스 가능 디렉토리에 자동으로 게시합니다.</target>
        </trans-unit>
        <trans-unit id="5d809cf52d2d850b60599645fdcf06fe2316dccb" translate="yes" xml:space="preserve">
          <source>You need to use &lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search()&lt;/a&gt; method in order to fetch facet results.</source>
          <target state="translated">패싯 결과를 가져 오려면 &lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search ()&lt;/a&gt; 메소드 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="60be138619e00f23fc3d5ad581f437bc0205ec04" translate="yes" xml:space="preserve">
          <source>You normally do not need to set this property as the default selectors should work well for most cases.</source>
          <target state="translated">대부분의 경우 기본 선택기가 제대로 작동하므로 일반적으로이 속성을 설정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e3ec279d371a78e621fc1bf393f720ffc6af9bd" translate="yes" xml:space="preserve">
          <source>You now have to define the &lt;code&gt;CommentQuery&lt;/code&gt; class, which can be customized in many creative ways to improve your query building experience. For example,</source>
          <target state="translated">이제 &lt;code&gt;CommentQuery&lt;/code&gt; 환경을 향상시키기 위해 다양한 창의적인 방법으로 사용자 지정할 수있는 CommentQuery 클래스 를 정의 해야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="9ecab457e3ec81ac428d52253c51adb97922150b" translate="yes" xml:space="preserve">
          <source>You often need to set the &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;target language&lt;/a&gt; dynamically based on different factors, such as the language preference of end users. Instead of configuring it in the application configuration, you can use the following statement to change the target language:</source>
          <target state="translated">최종 사용자의 언어 기본 설정과 같은 다양한 요인에 따라 &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;대상 언어를&lt;/a&gt; 동적으로 설정해야하는 경우가 종종 있습니다 . 애플리케이션 구성에서 구성하는 대신 다음 명령문을 사용하여 대상 언어를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7060f9a3765a6c98c9490a982496ed53e7cc155e" translate="yes" xml:space="preserve">
          <source>You should configure your PHP installation so that it meets the minimum requirements of Yii. Most importantly, you should have PHP 5.4 or above. Ideally latest PHP 7. You should also install the &lt;a href=&quot;http://www.php.net/manual/en/pdo.installation.php&quot;&gt;PDO PHP Extension&lt;/a&gt; and a corresponding database driver (such as &lt;code&gt;pdo_mysql&lt;/code&gt; for MySQL databases), if your application needs a database.</source>
          <target state="translated">Yii의 최소 요구 사항을 충족하도록 PHP 설치를 구성해야합니다. 가장 중요한 것은 PHP 5.4 이상이어야합니다. 응용 프로그램에 데이터베이스가 필요한 경우 &lt;a href=&quot;http://www.php.net/manual/en/pdo.installation.php&quot;&gt;PDO PHP Extension&lt;/a&gt; 과 해당 데이터베이스 드라이버 (예 : MySQL 데이터베이스의 경우 &lt;code&gt;pdo_mysql&lt;/code&gt; ) 도 설치 해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b261c1d50077bc0e60225597ed17d0f3d574199" translate="yes" xml:space="preserve">
          <source>You should configure your application as follows (you can use any alias, not only &quot;fixture&quot;):</source>
          <target state="translated">응용 프로그램을 다음과 같이 구성해야합니다 ( &quot;고정 장치&quot;뿐만 아니라 모든 별칭을 사용할 수 있음).</target>
        </trans-unit>
        <trans-unit id="882d3821fb6550df1d6c0744dd5e12f592333e93" translate="yes" xml:space="preserve">
          <source>You should give each release of your extension a version number (e.g. &lt;code&gt;1.0.1&lt;/code&gt;). We recommend you follow the &lt;a href=&quot;http://semver.org&quot;&gt;semantic versioning&lt;/a&gt; practice when determining what version numbers should be used.</source>
          <target state="translated">각 확장 버전에는 버전 번호 (예 : &lt;code&gt;1.0.1&lt;/code&gt; )를 부여해야합니다 . 사용해야하는 버전 번호를 결정할 때 &lt;a href=&quot;http://semver.org&quot;&gt;시맨틱 버전 관리&lt;/a&gt; 실습 을 따르는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8d6c41d0606fbb47c998a6155cae28fcec730aad" translate="yes" xml:space="preserve">
          <source>You should modify this file and specify which bundles you plan to combine in the &lt;code&gt;bundles&lt;/code&gt; option. In the &lt;code&gt;targets&lt;/code&gt; option you should specify how the bundles should be divided into groups. You can specify one or multiple groups, as aforementioned.</source>
          <target state="translated">이 파일을 수정하고 &lt;code&gt;bundles&lt;/code&gt; 옵션 에서 결합 할 번들을 지정해야합니다 . 에서 &lt;code&gt;targets&lt;/code&gt; 옵션을 사용하면 번들이 그룹으로 나눌 수 방법을 지정해야합니다. 위에서 설명한대로 하나 이상의 그룹을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8aa282c30d6166ba165fb654ab69bbcf6bd83c92" translate="yes" xml:space="preserve">
          <source>You should never enable Gii or the Debug toolbar in production. It could be used to get information about database structure, code and to simply rewrite code with what's generated by Gii.</source>
          <target state="translated">프로덕션 환경에서 Gii 또는 디버그 도구 모음을 활성화해서는 안됩니다. 데이터베이스 구조, 코드에 대한 정보를 얻고 Gii에서 생성 한 코드로 코드를 간단히 다시 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="201f94f904112e1b0db8a2eb52fe6a3a80c0c9aa" translate="yes" xml:space="preserve">
          <source>You should normally override &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; to specify how to set up a fixture; and override &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; for clearing up a fixture.</source>
          <target state="translated">조명기를 설정하는 방법을 지정하려면 일반적으로 &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load ()&lt;/a&gt; 를 재정의해야합니다 . 조명기를 지우 &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;려면 unload ()&lt;/a&gt; 를 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="9badfe9fecb9559c4639e94d04d75a1343610e20" translate="yes" xml:space="preserve">
          <source>You should normally use InitDbFixture to prepare a skeleton test database. Other DB fixtures will then add specific tables and data to this database.</source>
          <target state="translated">스켈레톤 테스트 데이터베이스를 준비하려면 일반적으로 InitDbFixture를 사용해야합니다. 그런 다음 다른 DB 픽스처는이 테이블에 특정 테이블과 데이터를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f29fd8cc9393f290b8e14bfa1c8dec6bbbe2e100" translate="yes" xml:space="preserve">
          <source>You should now create a view file located at &lt;code&gt;views/site/error.php&lt;/code&gt;. In this view file, you can access the following variables if the error action is defined as &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii\web\ErrorAction&lt;/a&gt;:</source>
          <target state="translated">이제 &lt;code&gt;views/site/error.php&lt;/code&gt; 에 뷰 파일을 만들어야합니다 . 이보기 파일에서 오류 조치가 &lt;a href=&quot;yii-web-erroraction&quot;&gt;yii \ web \ ErrorAction&lt;/a&gt; 으로 정의 된 경우 다음 변수에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2fb953d8d974975f8bdc8aed6e79e503dd28c87" translate="yes" xml:space="preserve">
          <source>You should see the above &quot;Congratulations!&quot; page in your browser. If not, please check if your PHP installation satisfies Yii's requirements. You can check if the minimum requirements are met using one of the following approaches:</source>
          <target state="translated">위의 &quot;축하합니다!&quot; 브라우저에서 페이지. 그렇지 않은 경우 PHP 설치가 Yii의 요구 사항을 충족하는지 확인하십시오. 다음 방법 중 하나를 사용하여 최소 요구 사항이 충족되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5b5112c41184f0c5160fb5f6bc6f46c942c9d61" translate="yes" xml:space="preserve">
          <source>You should specify exact attribute types via &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$ attributeTypes&lt;/a&gt; 를 통해 정확한 속성 유형을 지정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="a5d5763caddc2a1ee67afa397ff52f1e0f31fa38" translate="yes" xml:space="preserve">
          <source>You should usually override &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; to check whether the current user has the privilege to perform the specified action against the specified model.</source>
          <target state="translated">현재 사용자에게 지정된 모델에 대해 지정된 조치를 수행 할 권한이 있는지 확인하려면 &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess ()&lt;/a&gt; 를 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="96ee84d6d03a1c341246f395ee4bfabb45cc334f" translate="yes" xml:space="preserve">
          <source>You specify the pagination and sorting behaviors of a data provider by configuring its &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;sort&lt;/a&gt; properties which correspond to the configurations for &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; and &lt;a href=&quot;yii-data-sort&quot;&gt;yii\data\Sort&lt;/a&gt;, respectively. You may also configure them to be &lt;code&gt;false&lt;/code&gt; to disable pagination and/or sorting features.</source>
          <target state="translated">&lt;a href=&quot;yii-data-pagination&quot;&gt;yii \ data \ Pagination&lt;/a&gt; 및 &lt;a href=&quot;yii-data-sort&quot;&gt;yii \ data \ Sort&lt;/a&gt; 각각 의 구성에 해당하는 &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;페이지 매김&lt;/a&gt; 및 &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;정렬&lt;/a&gt; 특성을 구성하여 데이터 제공자의 페이지 매김 및 정렬 동작을 지정합니다 . 페이지 매김 및 / 또는 정렬 기능을 사용하지 않도록 &lt;code&gt;false&lt;/code&gt; 로 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="734ed8c8b5b84217e4d7ac48268c912824204cf1" translate="yes" xml:space="preserve">
          <source>You specify the transport constructor arguments using 'constructArgs' key in the config. You can also specify the list of plugins, which should be registered to the transport using 'plugins' key. For example:</source>
          <target state="translated">구성에서 'constructArgs'키를 사용하여 전송 생성자 인수를 지정하십시오. 'plugins'키를 사용하여 전송에 등록해야하는 플러그인 목록을 지정할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ceee26291f383ec8f1a67bfb37cc946f87f23044" translate="yes" xml:space="preserve">
          <source>You then list this class in the &lt;code&gt;composer.json&lt;/code&gt; file of your extension like follows,</source>
          <target state="translated">그런 다음이 클래스를 확장 의 &lt;code&gt;composer.json&lt;/code&gt; 파일에 다음과 같이 나열하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec2e3dd7ea9aaff592ed3d85eb403189a1ea8824" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-db-query#batch()-detail&quot;&gt;yii\db\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#each()-detail&quot;&gt;yii\db\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="translated">일반적으로 BatchQueryResult를 직접 인스턴스화하지 않습니다. 대신 &lt;a href=&quot;yii-db-query#batch()-detail&quot;&gt;yii \ db \ Query :: batch ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-db-query#each()-detail&quot;&gt;yii \ db \ Query :: each ()&lt;/a&gt; 를 호출하여 얻을 수 있습니다 . BatchQueryResult는 &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; 인터페이스를 구현하므로 반복 할 때마다 반복되는 데이터를 얻을 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a92ba8dda4b98b6d0754a08676f83f814dd518f9" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-elasticsearch-query#batch()-detail&quot;&gt;yii\elasticsearch\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-elasticsearch-query#each()-detail&quot;&gt;yii\elasticsearch\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface, you can iterate it to obtain a batch of data in each iteration.</source>
          <target state="translated">일반적으로 BatchQueryResult를 직접 인스턴스화하지 않습니다. 대신 &lt;a href=&quot;yii-elasticsearch-query#batch()-detail&quot;&gt;yii \ elasticsearch \ Query :: batch ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-elasticsearch-query#each()-detail&quot;&gt;yii \ elasticsearch \ Query :: each ()&lt;/a&gt; 를 호출하여 가져옵니다 . BatchQueryResult는 &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; 인터페이스를 구현하므로 반복 할 때마다 반복되는 데이터를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="482f8de8ed66d4f1095aa201b9e8a6f9b94255bd" translate="yes" xml:space="preserve">
          <source>You usually do not instantiate BatchQueryResult directly. Instead, you obtain it by calling &lt;a href=&quot;yii-mongodb-query#batch()-detail&quot;&gt;yii\mongodb\Query::batch()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-query#each()-detail&quot;&gt;yii\mongodb\Query::each()&lt;/a&gt;. Because BatchQueryResult implements the &lt;code&gt;Iterator&lt;/code&gt; interface, you can iterate it to obtain a batch of data in each iteration. For example,</source>
          <target state="translated">일반적으로 BatchQueryResult를 직접 인스턴스화하지 않습니다. 대신 &lt;a href=&quot;yii-mongodb-query#batch()-detail&quot;&gt;yii \ mongodb \ Query :: batch ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-mongodb-query#each()-detail&quot;&gt;yii \ mongodb \ Query :: each ()&lt;/a&gt; 를 호출하여 얻을 수 있습니다 . BatchQueryResult는 &lt;code&gt;Iterator&lt;/code&gt; 인터페이스를 구현하므로 반복 할 때마다 반복되는 데이터를 얻을 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="dcf29e35022fa9f6812ffe0c908262507818e0ff" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as HTML.</source>
          <target state="translated">데이터가 HTML로 출력되기를 원합니다.</target>
        </trans-unit>
        <trans-unit id="78dd0473aefa07bf9925835f9c8a31b2c0647ccc" translate="yes" xml:space="preserve">
          <source>You want data to be outputted as plain text.</source>
          <target state="translated">데이터를 일반 텍스트로 출력하려고합니다.</target>
        </trans-unit>
        <trans-unit id="4a386bfed8205ffa9efbba31acd608c8cef7989e" translate="yes" xml:space="preserve">
          <source>You want your extension to run flawlessly without bringing problems to other people. To reach this goal, you should test your extension before releasing it to public.</source>
          <target state="translated">다른 사람들에게 문제를 일으키지 않고 확장 기능이 완벽하게 실행되기를 원합니다. 이 목표에 도달하려면 확장을 공개하기 전에 확장을 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="b670969ada90014ed6700fedd368184d566ea083" translate="yes" xml:space="preserve">
          <source>You will see a data grid showing the countries from the database table. You may sort the grid, or filter it by entering filter conditions in the column headers.</source>
          <target state="translated">데이터베이스 테이블에서 국가를 보여주는 데이터 그리드가 표시됩니다. 열 머리글에 필터 조건을 입력하여 그리드를 정렬하거나 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdd1f2c519c5c0fd3008e3d2daaff67d226138ad" translate="yes" xml:space="preserve">
          <source>You will then find your files (if you've chosen file based translations) in your &lt;code&gt;messagePath&lt;/code&gt; directory.</source>
          <target state="translated">그런 다음 &lt;code&gt;messagePath&lt;/code&gt; 디렉토리 에서 파일 (파일 기반 변환을 선택한 경우)을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9cef9aa6654c76786b476d9fd08377bbd2b9dbc4" translate="yes" xml:space="preserve">
          <source>You would normally call &lt;code&gt;$query-&amp;gt;search()&lt;/code&gt; instead of creating a command as this method adds the &lt;code&gt;indexBy()&lt;/code&gt; feature and also removes some inconsistencies from the response.</source>
          <target state="translated">이 메소드는 &lt;code&gt;indexBy()&lt;/code&gt; 기능을 추가 하고 응답에서 일부 불일치를 제거 하므로 일반적으로 명령을 작성하는 대신 &lt;code&gt;$query-&amp;gt;search()&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="214f658eafcae47e47e1d69db61cded352ffad56" translate="yes" xml:space="preserve">
          <source>You've got a project to work on and it has no tests.</source>
          <target state="translated">작업 할 프로젝트가 있으며 테스트가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce405dec9725435a249741ae84755d1fa80b89f7" translate="yes" xml:space="preserve">
          <source>Your class namespaces should start with &lt;code&gt;vendorName\extensionName&lt;/code&gt;, where &lt;code&gt;extensionName&lt;/code&gt; is similar to the project name in the package name except that it should not contain the &lt;code&gt;yii2-&lt;/code&gt; prefix. For example, for the &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; extension, we use &lt;code&gt;yii\imagine&lt;/code&gt; as the namespace for its classes.</source>
          <target state="translated">클래스 네임 스페이스는 &lt;code&gt;vendorName\extensionName&lt;/code&gt; 시작해야 합니다 . 여기서 &lt;code&gt;extensionName&lt;/code&gt; 은 &lt;code&gt;yii2-&lt;/code&gt; 접두사를 포함하지 않아야한다는 점을 제외하고 패키지 이름의 프로젝트 이름과 유사 합니다. 예를 들어, &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; 확장 의 경우 클래스의 네임 스페이스로 yii &lt;code&gt;yii\imagine&lt;/code&gt; 을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b1d20048a4833e533c87e7b5ec88bffdd930dbb8" translate="yes" xml:space="preserve">
          <source>Your commands will then be available from the command line using the following route:</source>
          <target state="translated">그러면 다음 경로를 사용하여 명령 행에서 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c549ddf9c76d91a544d89560303aba1e880a364" translate="yes" xml:space="preserve">
          <source>Your extension depends on Yii (of course). So you should list it (&lt;code&gt;yiisoft/yii2&lt;/code&gt;) in the &lt;code&gt;require&lt;/code&gt; entry in &lt;code&gt;composer.json&lt;/code&gt;. If your extension also depends on other extensions or third-party libraries, you should list them as well. Make sure you also list appropriate version constraints (e.g. &lt;code&gt;1.*&lt;/code&gt;, &lt;code&gt;@stable&lt;/code&gt;) for each dependent package. Use stable dependencies when your extension is released in a stable version.</source>
          <target state="translated">확장은 Yii (물론)에 따라 다릅니다. 따라서 &lt;code&gt;composer.json&lt;/code&gt; 의 &lt;code&gt;require&lt;/code&gt; 항목에 이를 나열해야합니다 ( &lt;code&gt;yiisoft/yii2&lt;/code&gt; ) . 확장 프로그램이 다른 확장 프로그램 또는 타사 라이브러리에 의존하는 경우 해당 확장 프로그램도 함께 나열해야합니다. 각 종속 패키지에 대한 적절한 버전 제약 조건 (예 : &lt;code&gt;1.*&lt;/code&gt; , &lt;code&gt;@stable&lt;/code&gt; ) 도 나열해야합니다 . 확장 버전이 안정적인 버전으로 출시되면 안정적인 종속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="93e4e7c3847b6589a61eb21e4fe05008f4d3f99f" translate="yes" xml:space="preserve">
          <source>Your extension may be used by applications supporting different languages! Therefore, if your extension displays content to end users, you should try to &lt;a href=&quot;guide-tutorial-i18n&quot;&gt;internationalize and localize&lt;/a&gt; it. In particular,</source>
          <target state="translated">다른 언어를 지원하는 응용 프로그램에서 확장 프로그램을 사용할 수 있습니다! 따라서 확장 프로그램에서 최종 사용자에게 콘텐츠를 표시하는 경우 &lt;a href=&quot;guide-tutorial-i18n&quot;&gt;국제화 및 현지화를&lt;/a&gt; 시도해야 합니다. 특히,</target>
        </trans-unit>
        <trans-unit id="2abad81845b4c3b144643cd7faaf29ad4e589850" translate="yes" xml:space="preserve">
          <source>Your extension may need to access databases. Do not assume that the applications that use your extension will always use &lt;code&gt;Yii::$db&lt;/code&gt; as the DB connection. Instead, you should declare a &lt;code&gt;db&lt;/code&gt; property for the classes that require DB access. The property will allow users of your extension to customize which DB connection they would like your extension to use. As an example, you may refer to the &lt;a href=&quot;yii-caching-dbcache&quot;&gt;yii\caching\DbCache&lt;/a&gt; class and see how it declares and uses the &lt;code&gt;db&lt;/code&gt; property.</source>
          <target state="translated">확장 프로그램이 데이터베이스에 액세스해야 할 수도 있습니다. 확장을 사용하는 애플리케이션이 항상 &lt;code&gt;Yii::$db&lt;/code&gt; 를 DB 연결로 사용한다고 가정하지 마십시오 . 대신 DB 액세스가 필요한 클래스에 대해 &lt;code&gt;db&lt;/code&gt; 속성을 선언해야 합니다. 이 속성을 사용하면 확장 사용자가 확장에서 사용하려는 DB 연결을 사용자 지정할 수 있습니다. 예를 들어, &lt;a href=&quot;yii-caching-dbcache&quot;&gt;yii \ caching \ DbCache&lt;/a&gt; 클래스를 참조하여 &lt;code&gt;db&lt;/code&gt; 속성을 선언하고 사용하는 방법을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b90194819d87a8e4edd32f38a5a45b466a64501e" translate="yes" xml:space="preserve">
          <source>Your module may also declare commands, that will be available through the &lt;a href=&quot;guide-tutorial-console&quot;&gt;Console&lt;/a&gt; mode.</source>
          <target state="translated">모듈은 &lt;a href=&quot;guide-tutorial-console&quot;&gt;콘솔&lt;/a&gt; 모드를 통해 사용할 수있는 명령을 선언 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b7257e194a80cb2cd58ea8732179497eca569dd" translate="yes" xml:space="preserve">
          <source>Your resource classes may support HATEOAS by implementing the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface. The interface contains a single method &lt;a href=&quot;yii-web-linkable#getLinks()-detail&quot;&gt;getLinks()&lt;/a&gt; which should return a list of &lt;a href=&quot;yii-web-link&quot;&gt;links&lt;/a&gt;. Typically, you should return at least the &lt;code&gt;self&lt;/code&gt; link representing the URL to the resource object itself. For example,</source>
          <target state="translated">리소스 클래스는 yii &lt;a href=&quot;yii-web-linkable&quot;&gt;\ web \ Linkable&lt;/a&gt; 인터페이스 를 구현하여 HATEOAS를 지원할 수 있습니다. 인터페이스에는 &lt;a href=&quot;yii-web-link&quot;&gt;링크&lt;/a&gt; 목록을 리턴 &lt;a href=&quot;yii-web-linkable#getLinks()-detail&quot;&gt;해야하는&lt;/a&gt; 단일 메소드 getLinks () 가 포함되어 있습니다 . 일반적으로 최소한 URL을 나타내는 &lt;code&gt;self&lt;/code&gt; 링크를 자원 오브젝트 자체로 리턴해야 합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="9658c4e8cc329ead3d12bcf99fc150f01fe31dcb" translate="yes" xml:space="preserve">
          <source>ZSH completion</source>
          <target state="translated">ZSH 완료</target>
        </trans-unit>
        <trans-unit id="93c6c90643e3b1807979e6999edde193244028b2" translate="yes" xml:space="preserve">
          <source>ZendDataCache provides Zend data caching in terms of an application component.</source>
          <target state="translated">ZendDataCache는 응용 프로그램 구성 요소 측면에서 Zend 데이터 캐싱을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="95a03e66821ae9cbc62744cc4467eff2f8650297" translate="yes" xml:space="preserve">
          <source>Zero-based column index</source>
          <target state="translated">0부터 시작하는 열 인덱스</target>
        </trans-unit>
        <trans-unit id="0dd814e32fd56ebd047e4f8d972f25d9d1384154" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned.</source>
          <target state="translated">레코드가 리턴 될 위치 (0부터 시작)</target>
        </trans-unit>
        <trans-unit id="3ff85ff4b844384ebb17c3d3a1ee582a6e4d5e06" translate="yes" xml:space="preserve">
          <source>Zero-based offset from where the records are to be returned. May be an instance of &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;. If not set or less than 0, it means starting from the beginning.</source>
          <target state="translated">레코드가 리턴 될 위치 (0부터 시작) &lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt; 의 인스턴스 일 수 있습니다 . 설정하지 않거나 0보다 작 으면 처음부터 시작하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cfee675a504bb4d63e08844965191948a09ed016" translate="yes" xml:space="preserve">
          <source>[optional]</source>
          <target state="translated">[optional]</target>
        </trans-unit>
        <trans-unit id="f01c72c514fd7694294ef85d47819051c42b9da5" translate="yes" xml:space="preserve">
          <source>\AccessControl</source>
          <target state="translated">\AccessControl</target>
        </trans-unit>
        <trans-unit id="034a219f2fa8437720d100e78e5cc337e479baae" translate="yes" xml:space="preserve">
          <source>\AccessControl $denyCallback</source>
          <target state="translated">\ AccessControl $ denyCallback</target>
        </trans-unit>
        <trans-unit id="cd5b22309b1c0f8d1014372095db9462a04b3db2" translate="yes" xml:space="preserve">
          <source>\AccessControl $ruleConfig</source>
          <target state="translated">\ AccessControl $ ruleConfig</target>
        </trans-unit>
        <trans-unit id="256f0c7c4956279d0cbfbef825aa4d2c95eb308c" translate="yes" xml:space="preserve">
          <source>\AccessControl $rules</source>
          <target state="translated">\ AccessControl $ 규칙</target>
        </trans-unit>
        <trans-unit id="b8347bf2c86ad7b21221e854724ab636b0e0bfee" translate="yes" xml:space="preserve">
          <source>\AccessControl $user</source>
          <target state="translated">\ AccessControl $ user</target>
        </trans-unit>
        <trans-unit id="ac2e1ae4f231245b4e37b081f718b7306d0ad0cd" translate="yes" xml:space="preserve">
          <source>\AccessControl beforeAction()</source>
          <target state="translated">\ AccessControl beforeAction ()</target>
        </trans-unit>
        <trans-unit id="a9a8bea3617764be0141b6055a4f1a3054ffa02f" translate="yes" xml:space="preserve">
          <source>\AccessControl denyAccess()</source>
          <target state="translated">\ AccessControl denyAccess ()</target>
        </trans-unit>
        <trans-unit id="de9bc970cbeac7f2d32d85b4932ef1f5443f7375" translate="yes" xml:space="preserve">
          <source>\AccessControl init()</source>
          <target state="translated">\ AccessControl init ()</target>
        </trans-unit>
        <trans-unit id="32538ea214d27cfc3b69052deb1419ef9351b7aa" translate="yes" xml:space="preserve">
          <source>\AccessRule</source>
          <target state="translated">\AccessRule</target>
        </trans-unit>
        <trans-unit id="9dc7ba0a1757de520231577606a22029ecb8829b" translate="yes" xml:space="preserve">
          <source>\AccessRule $actions</source>
          <target state="translated">\ 액세스 규칙 $ actions</target>
        </trans-unit>
        <trans-unit id="ff4939c192b862a3d76420655f437f1fbf0e0b99" translate="yes" xml:space="preserve">
          <source>\AccessRule $allow</source>
          <target state="translated">\ AccessRule $ 허용</target>
        </trans-unit>
        <trans-unit id="1796f91577c1f057f7b46d872335115be13c2266" translate="yes" xml:space="preserve">
          <source>\AccessRule $controllers</source>
          <target state="translated">\ AccessRule $ 컨트롤러</target>
        </trans-unit>
        <trans-unit id="a52edc3fe891cf9e3b85d62822251fd5d8c0b680" translate="yes" xml:space="preserve">
          <source>\AccessRule $denyCallback</source>
          <target state="translated">\ AccessRule $ denyCallback</target>
        </trans-unit>
        <trans-unit id="5b3a66238b9cc7b7238f5d54f9265522c0a70ae1" translate="yes" xml:space="preserve">
          <source>\AccessRule $ips</source>
          <target state="translated">\ AccessRule $ ips</target>
        </trans-unit>
        <trans-unit id="df0c9c4ae255b0cb08a34aa41180a6802e006764" translate="yes" xml:space="preserve">
          <source>\AccessRule $matchCallback</source>
          <target state="translated">\ AccessRule $ matchCallback</target>
        </trans-unit>
        <trans-unit id="2b5577ef910d0cc782c6342e59ea08078c44845c" translate="yes" xml:space="preserve">
          <source>\AccessRule $roleParams</source>
          <target state="translated">\ AccessRule $ roleParams</target>
        </trans-unit>
        <trans-unit id="c9e645c48a13a70a5254c289bae6415bf4b7b725" translate="yes" xml:space="preserve">
          <source>\AccessRule $roles</source>
          <target state="translated">\ AccessRule $ 역할</target>
        </trans-unit>
        <trans-unit id="de69c8a26d25ba184f44d1e78209e370838433b0" translate="yes" xml:space="preserve">
          <source>\AccessRule $verbs</source>
          <target state="translated">\ AccessRule $ 동사</target>
        </trans-unit>
        <trans-unit id="36dc83f40f118197740a166e196e3561728268ab" translate="yes" xml:space="preserve">
          <source>\AccessRule allows()</source>
          <target state="translated">\ AccessRule allow ()</target>
        </trans-unit>
        <trans-unit id="56b635336f38f7553812df3570de908cc37b55ae" translate="yes" xml:space="preserve">
          <source>\AccessRule matchAction()</source>
          <target state="translated">\ AccessRule matchAction ()</target>
        </trans-unit>
        <trans-unit id="5cce58db18376c8695af68321760726ac4d66ff5" translate="yes" xml:space="preserve">
          <source>\AccessRule matchController()</source>
          <target state="translated">\ AccessRule matchController ()</target>
        </trans-unit>
        <trans-unit id="c82025ed0b424c830a14ec7f25bc2c23713f35ab" translate="yes" xml:space="preserve">
          <source>\AccessRule matchCustom()</source>
          <target state="translated">\ AccessRule matchCustom ()</target>
        </trans-unit>
        <trans-unit id="bd98c4d96fa3852106adec16a47da5cce0eb99af" translate="yes" xml:space="preserve">
          <source>\AccessRule matchIP()</source>
          <target state="translated">\ AccessRule matchIP ()</target>
        </trans-unit>
        <trans-unit id="418b039ee4657bd9d34f875df95ecde8d0e05a6b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchRole()</source>
          <target state="translated">\ AccessRule matchRole ()</target>
        </trans-unit>
        <trans-unit id="8ece4f3e78e3509001d02341feba5a6eff07af8b" translate="yes" xml:space="preserve">
          <source>\AccessRule matchVerb()</source>
          <target state="translated">\ AccessRule matchVerb ()</target>
        </trans-unit>
        <trans-unit id="dbd4e22a55295c8e6c46a9bc19e6a064b3264616" translate="yes" xml:space="preserve">
          <source>\Accordion</source>
          <target state="translated">\Accordion</target>
        </trans-unit>
        <trans-unit id="5682cbdd500914a3f4ac6f37270b5be6257115f4" translate="yes" xml:space="preserve">
          <source>\Accordion $headerOptions</source>
          <target state="translated">\ 아코디언 $ headerOptions</target>
        </trans-unit>
        <trans-unit id="6d3076a65990acda6dcddf9101ad7e48c2a31ca5" translate="yes" xml:space="preserve">
          <source>\Accordion $itemOptions</source>
          <target state="translated">\ 아코디언 $ itemOptions</target>
        </trans-unit>
        <trans-unit id="caf71755c16344384c6bd752d98615a086d52cdc" translate="yes" xml:space="preserve">
          <source>\Accordion $items</source>
          <target state="translated">\ 아코디언 $ 항목</target>
        </trans-unit>
        <trans-unit id="9ddb0200fef45315f3bd82d9c06140b735e3a938" translate="yes" xml:space="preserve">
          <source>\Accordion $options</source>
          <target state="translated">\ 아코디언 $ options</target>
        </trans-unit>
        <trans-unit id="afb6b35c4c9c1f7f73f97e0b30cd56d0f5d0ad97" translate="yes" xml:space="preserve">
          <source>\Accordion renderItems()</source>
          <target state="translated">\ Accordion renderItems ()</target>
        </trans-unit>
        <trans-unit id="01afcc1f5b16c08b0b717ab99514ba9d3a1ae66d" translate="yes" xml:space="preserve">
          <source>\Accordion run()</source>
          <target state="translated">\ 아코디언 실행 ()</target>
        </trans-unit>
        <trans-unit id="808516dcd15c68f964c8a874f90479db25f7aecf" translate="yes" xml:space="preserve">
          <source>\Action</source>
          <target state="translated">\Action</target>
        </trans-unit>
        <trans-unit id="5bec3707a61b0fd5e99f7fa7a3a94ea88545d58f" translate="yes" xml:space="preserve">
          <source>\Action $checkAccess</source>
          <target state="translated">\ 액션 $ checkAccess</target>
        </trans-unit>
        <trans-unit id="dc9b48cda4322e1a7cc2eb43a45d54bf3144985d" translate="yes" xml:space="preserve">
          <source>\Action $controller</source>
          <target state="translated">\ 액션 $ controller</target>
        </trans-unit>
        <trans-unit id="1dd1052b31d5489a3bb60960e8ae0b7aa231d52b" translate="yes" xml:space="preserve">
          <source>\Action $findModel</source>
          <target state="translated">\ 액션 $ findModel</target>
        </trans-unit>
        <trans-unit id="64a67e5154d2890dcc0bc97f7aeea0978d1dab39" translate="yes" xml:space="preserve">
          <source>\Action $id</source>
          <target state="translated">\ 액션 $ id</target>
        </trans-unit>
        <trans-unit id="f1399c9f4f1100bf67a0f591d9d61003b87e7d60" translate="yes" xml:space="preserve">
          <source>\Action $modelClass</source>
          <target state="translated">\ 액션 $ modelClass</target>
        </trans-unit>
        <trans-unit id="78085ec4e9850e376ac26e469b6a60372d1b24ec" translate="yes" xml:space="preserve">
          <source>\Action $uniqueId</source>
          <target state="translated">\ 액션 $ uniqueId</target>
        </trans-unit>
        <trans-unit id="6faea5a548f6b01b3e5da60bdb36b7cee8812dbe" translate="yes" xml:space="preserve">
          <source>\Action __construct()</source>
          <target state="translated">\ 액션 __construct ()</target>
        </trans-unit>
        <trans-unit id="18a33cee182bedcb001f6cd2e9c2efd181529ee0" translate="yes" xml:space="preserve">
          <source>\Action afterRun()</source>
          <target state="translated">\ 작업 afterRun ()</target>
        </trans-unit>
        <trans-unit id="2dd591aec3ac10bfe00c8f396d6bfdf64fd38958" translate="yes" xml:space="preserve">
          <source>\Action beforeRun()</source>
          <target state="translated">\ Action beforeRun ()</target>
        </trans-unit>
        <trans-unit id="8a332d060b2b7b9f82e52cefc3752bd5450e14c2" translate="yes" xml:space="preserve">
          <source>\Action findModel()</source>
          <target state="translated">\ 액션 findModel ()</target>
        </trans-unit>
        <trans-unit id="b49764229b7d648f2db840179693965c0924bebb" translate="yes" xml:space="preserve">
          <source>\Action getUniqueId()</source>
          <target state="translated">\ 액션 getUniqueId ()</target>
        </trans-unit>
        <trans-unit id="3091d55ba43a5a444c8c7b46aacc015fdfcc5bcd" translate="yes" xml:space="preserve">
          <source>\Action init()</source>
          <target state="translated">\ 작업 초기화 ()</target>
        </trans-unit>
        <trans-unit id="969c1b1d0ff9827bd84c26c9ed7a58722fb78d1e" translate="yes" xml:space="preserve">
          <source>\Action runWithParams()</source>
          <target state="translated">\ 액션 runWithParams ()</target>
        </trans-unit>
        <trans-unit id="fde50aff7a3ad3b68d19a34cee9b06efbacf5683" translate="yes" xml:space="preserve">
          <source>\ActionColumn</source>
          <target state="translated">\ActionColumn</target>
        </trans-unit>
        <trans-unit id="a590117ed8842b5d21ce73eaac23f2051f13b07b" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttonOptions</source>
          <target state="translated">\ ActionColumn $ button 옵션</target>
        </trans-unit>
        <trans-unit id="c3f0be0b13b67ccd5e2b6a3b6377b23596436747" translate="yes" xml:space="preserve">
          <source>\ActionColumn $buttons</source>
          <target state="translated">\ ActionColumn $ 버튼</target>
        </trans-unit>
        <trans-unit id="08fa9b6174f7147e8c27e4070e503c93b45d147f" translate="yes" xml:space="preserve">
          <source>\ActionColumn $controller</source>
          <target state="translated">\ ActionColumn $ controller</target>
        </trans-unit>
        <trans-unit id="ebfe5b74749fdc01b4b8a653a0795e96d62f0c9e" translate="yes" xml:space="preserve">
          <source>\ActionColumn $headerOptions</source>
          <target state="translated">\ ActionColumn $ headerOptions</target>
        </trans-unit>
        <trans-unit id="5c2b0a0166ae54253a20d2329fdecb4342261e12" translate="yes" xml:space="preserve">
          <source>\ActionColumn $template</source>
          <target state="translated">\ ActionColumn $ template</target>
        </trans-unit>
        <trans-unit id="c4b2a85d2d7d006c1dbbebec2fd7bce9ed4ab418" translate="yes" xml:space="preserve">
          <source>\ActionColumn $urlCreator</source>
          <target state="translated">\ ActionColumn $ urlCreator</target>
        </trans-unit>
        <trans-unit id="e836c32b8071f33f99216afbe2fafda2637c04fc" translate="yes" xml:space="preserve">
          <source>\ActionColumn $visibleButtons</source>
          <target state="translated">\ ActionColumn $ visibleButtons</target>
        </trans-unit>
        <trans-unit id="37b7b34b8d0d6617e1fb4c979060673c738c3522" translate="yes" xml:space="preserve">
          <source>\ActionColumn createUrl()</source>
          <target state="translated">\ ActionColumn createUrl ()</target>
        </trans-unit>
        <trans-unit id="87b8fa94af707ac616e15d8b9169a33410a6966f" translate="yes" xml:space="preserve">
          <source>\ActionColumn init()</source>
          <target state="translated">\ ActionColumn init ()</target>
        </trans-unit>
        <trans-unit id="7e02ca29e6bd749965e8001f948d3ae9343840cd" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButton()</source>
          <target state="translated">\ ActionColumn initDefaultButton ()</target>
        </trans-unit>
        <trans-unit id="86cbce1fe130bdf359091fc5a534196d0e759b5c" translate="yes" xml:space="preserve">
          <source>\ActionColumn initDefaultButtons()</source>
          <target state="translated">\ ActionColumn initDefaultButtons ()</target>
        </trans-unit>
        <trans-unit id="6e0d9811be157e4f828c46023a3d1d9a5777553e" translate="yes" xml:space="preserve">
          <source>\ActionColumn renderDataCellContent()</source>
          <target state="translated">\ ActionColumn renderDataCellContent ()</target>
        </trans-unit>
        <trans-unit id="eeab3b338e9fa0a0e35d01d075ee24a49d3bd97f" translate="yes" xml:space="preserve">
          <source>\ActionEvent</source>
          <target state="translated">\ActionEvent</target>
        </trans-unit>
        <trans-unit id="5180a9ad976398841ff725a17c06671d06b081de" translate="yes" xml:space="preserve">
          <source>\ActionEvent $action</source>
          <target state="translated">\ ActionEvent $ 액션</target>
        </trans-unit>
        <trans-unit id="fd340c5a1e658649b26373e650232e5e0fed2f42" translate="yes" xml:space="preserve">
          <source>\ActionEvent $isValid</source>
          <target state="translated">\ ActionEvent $ isValid</target>
        </trans-unit>
        <trans-unit id="43fee8c2b776d8dc6c9359ed5bc7d6ecf86db176" translate="yes" xml:space="preserve">
          <source>\ActionEvent $result</source>
          <target state="translated">\ ActionEvent $ 결과</target>
        </trans-unit>
        <trans-unit id="ef611a6f41f798759fa6f950fac6ecf38c5fbdc7" translate="yes" xml:space="preserve">
          <source>\ActionEvent __construct()</source>
          <target state="translated">\ ActionEvent __construct ()</target>
        </trans-unit>
        <trans-unit id="ea9d63ea7f8896638c9d067869f45ea8a7497d66" translate="yes" xml:space="preserve">
          <source>\ActionFilter</source>
          <target state="translated">\ActionFilter</target>
        </trans-unit>
        <trans-unit id="2978e01e3481b009447593aa04aa8e91377c8fad" translate="yes" xml:space="preserve">
          <source>\ActionFilter $except</source>
          <target state="translated">\ ActionFilter $ except</target>
        </trans-unit>
        <trans-unit id="e8629ad9d0ad7de16b4f5a60f92b2f32d8bbc179" translate="yes" xml:space="preserve">
          <source>\ActionFilter $only</source>
          <target state="translated">\ ActionFilter $ 만</target>
        </trans-unit>
        <trans-unit id="78678f8384feb832f58f552f899aa499ca9f1ba0" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterAction()</source>
          <target state="translated">\ ActionFilter afterAction ()</target>
        </trans-unit>
        <trans-unit id="38e7e91c47550b9c00442c105c239b223d46da71" translate="yes" xml:space="preserve">
          <source>\ActionFilter afterFilter()</source>
          <target state="translated">\ ActionFilter afterFilter ()</target>
        </trans-unit>
        <trans-unit id="a793d068172a44ff796fe41020499b834aa6ba00" translate="yes" xml:space="preserve">
          <source>\ActionFilter attach()</source>
          <target state="translated">\ ActionFilter 연결 ()</target>
        </trans-unit>
        <trans-unit id="9e28ad35439c878903848592638b9f499de9270d" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeAction()</source>
          <target state="translated">\ ActionFilter beforeAction ()</target>
        </trans-unit>
        <trans-unit id="85ba3de804997ade911bb03dd0d36c0a4cd68584" translate="yes" xml:space="preserve">
          <source>\ActionFilter beforeFilter()</source>
          <target state="translated">\ ActionFilter beforeFilter ()</target>
        </trans-unit>
        <trans-unit id="d38954875116fb8c5d2c3fc4016df6551c3a7384" translate="yes" xml:space="preserve">
          <source>\ActionFilter detach()</source>
          <target state="translated">\ ActionFilter detach ()</target>
        </trans-unit>
        <trans-unit id="78454eb9923da80ecce0848ab849b64d8476679a" translate="yes" xml:space="preserve">
          <source>\ActionFilter getActionId()</source>
          <target state="translated">\ ActionFilter getActionId ()</target>
        </trans-unit>
        <trans-unit id="dd466264ea070e1ee75e67e0448b18f19e824c94" translate="yes" xml:space="preserve">
          <source>\ActionFilter isActive()</source>
          <target state="translated">\ ActionFilter isActive ()</target>
        </trans-unit>
        <trans-unit id="a977e05099cfa5a32c1210383fa89247bea6b34c" translate="yes" xml:space="preserve">
          <source>\ActiveController</source>
          <target state="translated">\ActiveController</target>
        </trans-unit>
        <trans-unit id="3539f7d89126136bfd79409fa9d19b9ab9f838b2" translate="yes" xml:space="preserve">
          <source>\ActiveController $createScenario</source>
          <target state="translated">\ ActiveController $ createScenario</target>
        </trans-unit>
        <trans-unit id="4cf97305aa8b8b99437bb1694df0907be2184053" translate="yes" xml:space="preserve">
          <source>\ActiveController $modelClass</source>
          <target state="translated">\ ActiveController $ modelClass</target>
        </trans-unit>
        <trans-unit id="853a990e3e3dc01ca5136062af28a3646b164ee1" translate="yes" xml:space="preserve">
          <source>\ActiveController $updateScenario</source>
          <target state="translated">\ ActiveController $ updateScenario</target>
        </trans-unit>
        <trans-unit id="abdb627eb302f1f435439202a10b26df6b2ceb3b" translate="yes" xml:space="preserve">
          <source>\ActiveController actions()</source>
          <target state="translated">\ ActiveController 작업 ()</target>
        </trans-unit>
        <trans-unit id="f527b9ead0b9ba0b1ed39bc6b5a4fccf9778e64a" translate="yes" xml:space="preserve">
          <source>\ActiveController checkAccess()</source>
          <target state="translated">\ ActiveController checkAccess ()</target>
        </trans-unit>
        <trans-unit id="31dddc15f34e1c758a9434d2b2688c0d0767fe26" translate="yes" xml:space="preserve">
          <source>\ActiveController init()</source>
          <target state="translated">\ ActiveController init ()</target>
        </trans-unit>
        <trans-unit id="04b323de4c191f7391275a8fedf31f6132b6af5b" translate="yes" xml:space="preserve">
          <source>\ActiveController verbs()</source>
          <target state="translated">\ ActiveController 동사 ()</target>
        </trans-unit>
        <trans-unit id="c54afeb3eea34c3a06e6c54db3c7ef2e0d006e0d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider</source>
          <target state="translated">\ActiveDataProvider</target>
        </trans-unit>
        <trans-unit id="4c7624edc51458b3dd38ed51f816babf80caf65c" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $aggregations</source>
          <target state="translated">\ ActiveDataProvider $ 집계</target>
        </trans-unit>
        <trans-unit id="3e0207220028cc245ab8dc0a6bcc31fc5ca727c0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $db</source>
          <target state="translated">\ ActiveDataProvider $ db</target>
        </trans-unit>
        <trans-unit id="bbbeaa69b6c34ca80d0dedd792b14ca1404104cc" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $facets</source>
          <target state="translated">\ ActiveDataProvider $ facets</target>
        </trans-unit>
        <trans-unit id="2efb5b51c8ef1c746dfe09789515882c5bde8992" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $key</source>
          <target state="translated">\ ActiveDataProvider $ 키</target>
        </trans-unit>
        <trans-unit id="60ec0ea321516e096ae4b1569aca797165eafde4" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $meta</source>
          <target state="translated">\ ActiveDataProvider $ 메타</target>
        </trans-unit>
        <trans-unit id="873fe9b3084fecc7afc01d0b17e1640ed361a198" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $query</source>
          <target state="translated">\ ActiveDataProvider $ 쿼리</target>
        </trans-unit>
        <trans-unit id="3b8badb2c5555c1a6cc152c4c79fa94233e0df1b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider $queryResults</source>
          <target state="translated">\ ActiveDataProvider $ queryResults</target>
        </trans-unit>
        <trans-unit id="3fb79e8d6f201a3d888ec804e74deb88eabccef0" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregation()</source>
          <target state="translated">\ ActiveDataProvider getAggregation ()</target>
        </trans-unit>
        <trans-unit id="38d779979b94e3868d711dfd53cac361780af2d1" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getAggregations()</source>
          <target state="translated">\ ActiveDataProvider getAggregations ()</target>
        </trans-unit>
        <trans-unit id="4f307fb0850d48f770ce70962155d8a8d1aff5be" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacet()</source>
          <target state="translated">\ ActiveDataProvider getFacet ()</target>
        </trans-unit>
        <trans-unit id="9d421c26a6a60c4f14938ce03e5ae6e02d834e2d" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getFacets()</source>
          <target state="translated">\ ActiveDataProvider getFacets ()</target>
        </trans-unit>
        <trans-unit id="a531132f160c7c992bd3278518bb4867cae09849" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getMeta()</source>
          <target state="translated">\ ActiveDataProvider getMeta ()</target>
        </trans-unit>
        <trans-unit id="52527397241fd32d5407c9004861e88728c5d3cd" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider getQueryResults()</source>
          <target state="translated">\ ActiveDataProvider getQueryResults ()</target>
        </trans-unit>
        <trans-unit id="b50def96da41893ac32571e785d7bfcbc9596a88" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider init()</source>
          <target state="translated">\ ActiveDataProvider init ()</target>
        </trans-unit>
        <trans-unit id="e704544585172deb728d0309e8d473b639307012" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareKeys()</source>
          <target state="translated">\ ActiveDataProvider PreparingKeys ()</target>
        </trans-unit>
        <trans-unit id="66ff51bd71d16518b54a9c44d5c09541b5053600" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareModels()</source>
          <target state="translated">\ ActiveDataProvider PreparingModels ()</target>
        </trans-unit>
        <trans-unit id="dcd06f3e614ea650b035aac84e53983dc1564d11" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider prepareTotalCount()</source>
          <target state="translated">\ ActiveDataProvider PreparingTotalCount ()</target>
        </trans-unit>
        <trans-unit id="e9537041047eee9215979308e0171d61774d364b" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setFacets()</source>
          <target state="translated">\ ActiveDataProvider setFacets ()</target>
        </trans-unit>
        <trans-unit id="2b98e2a336beedc6fc1075de46865f8b914bceca" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setMeta()</source>
          <target state="translated">\ ActiveDataProvider setMeta ()</target>
        </trans-unit>
        <trans-unit id="ca1af5f4620676c8bd02a3cc9c6a24d577345d28" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setQueryResults()</source>
          <target state="translated">\ ActiveDataProvider setQueryResults ()</target>
        </trans-unit>
        <trans-unit id="3b99a76be60dd9df526c4fbf25c127e57e9e89a6" translate="yes" xml:space="preserve">
          <source>\ActiveDataProvider setSort()</source>
          <target state="translated">\ ActiveDataProvider setSort ()</target>
        </trans-unit>
        <trans-unit id="634d796de504dc00f5c1bb1a499b89967bd366d2" translate="yes" xml:space="preserve">
          <source>\ActiveField</source>
          <target state="translated">\ActiveField</target>
        </trans-unit>
        <trans-unit id="9f51e72ec89f015d36456a4e514173e2fbe455d1" translate="yes" xml:space="preserve">
          <source>\ActiveField $addAriaAttributes</source>
          <target state="translated">\ ActiveField $ addAriaAttributes</target>
        </trans-unit>
        <trans-unit id="8a58a522738346c17fc7587f6ad224f6d33832fb" translate="yes" xml:space="preserve">
          <source>\ActiveField $attribute</source>
          <target state="translated">\ ActiveField $ 속성</target>
        </trans-unit>
        <trans-unit id="1806b0584aae9b2fe75d17449e2c79bffe13c5f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $checkboxTemplate</source>
          <target state="translated">\ ActiveField $ checkboxTemplate</target>
        </trans-unit>
        <trans-unit id="d7b2d5b07e2fdfcf6984853d34667039f8f05aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableAjaxValidation</source>
          <target state="translated">\ ActiveField $ enableAjaxValidation</target>
        </trans-unit>
        <trans-unit id="9a89ed874a9c6fae6651183630a88b2ea9ae4b4a" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableClientValidation</source>
          <target state="translated">\ ActiveField $ enableClientValidation</target>
        </trans-unit>
        <trans-unit id="4e6deb3be78ccd7ff96332a052eb4841d634654b" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableError</source>
          <target state="translated">\ ActiveField $ enableError</target>
        </trans-unit>
        <trans-unit id="2e3b143321c21cd7b2d980c26fb1cb506a1d21f1" translate="yes" xml:space="preserve">
          <source>\ActiveField $enableLabel</source>
          <target state="translated">\ ActiveField $ enableLabel</target>
        </trans-unit>
        <trans-unit id="6d84290525a431e861cf7ec1ed7737dceb045aff" translate="yes" xml:space="preserve">
          <source>\ActiveField $errorOptions</source>
          <target state="translated">\ ActiveField $ error 옵션</target>
        </trans-unit>
        <trans-unit id="f1605204c9d7b6c433f2b26c081886773b60703a" translate="yes" xml:space="preserve">
          <source>\ActiveField $form</source>
          <target state="translated">\ ActiveField $ form</target>
        </trans-unit>
        <trans-unit id="92635672ed40b3badcd8f95f0c37e9093e09aff7" translate="yes" xml:space="preserve">
          <source>\ActiveField $hintOptions</source>
          <target state="translated">\ ActiveField $ hintOptions</target>
        </trans-unit>
        <trans-unit id="86ddd302e48ea1e6aac102b0e2c03b6032e2f49d" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCheckboxTemplate</source>
          <target state="translated">\ ActiveField $ horizontalCheckboxTemplate</target>
        </trans-unit>
        <trans-unit id="e9c8c7194b895e1c8e41d87f6aa8514726363478" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalCssClasses</source>
          <target state="translated">\ ActiveField $ horizontalCssClasses</target>
        </trans-unit>
        <trans-unit id="8ae864a00daf0f477319cd55305e7affef8cd010" translate="yes" xml:space="preserve">
          <source>\ActiveField $horizontalRadioTemplate</source>
          <target state="translated">\ ActiveField $ horizontalRadioTemplate</target>
        </trans-unit>
        <trans-unit id="3c9d0a8517d176931163451f200c35218fd7fa5c" translate="yes" xml:space="preserve">
          <source>\ActiveField $inline</source>
          <target state="translated">\ ActiveField $ 인라인</target>
        </trans-unit>
        <trans-unit id="f3ab8b4731d5e2731c10af59e73279d4090ae3a7" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineCheckboxListTemplate</source>
          <target state="translated">\ ActiveField $ inlineCheckboxListTemplate</target>
        </trans-unit>
        <trans-unit id="a32172a8310840ab477664d5e837046c523d1924" translate="yes" xml:space="preserve">
          <source>\ActiveField $inlineRadioListTemplate</source>
          <target state="translated">\ ActiveField $ inlineRadioListTemplate</target>
        </trans-unit>
        <trans-unit id="3c1bbc50ae357c142dbd9fe7dc9dc21adede7e66" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputOptions</source>
          <target state="translated">\ ActiveField $ inputOptions</target>
        </trans-unit>
        <trans-unit id="d5363c9b12ddc10d4477849509a6ff06facbd164" translate="yes" xml:space="preserve">
          <source>\ActiveField $inputTemplate</source>
          <target state="translated">\ ActiveField $ inputTemplate</target>
        </trans-unit>
        <trans-unit id="9d08e72af22486986523f14cee2d7cd8fd49de6f" translate="yes" xml:space="preserve">
          <source>\ActiveField $labelOptions</source>
          <target state="translated">\ ActiveField $ labelOptions</target>
        </trans-unit>
        <trans-unit id="59f95fec143e51f9c67093f06ff670d20b1fe510" translate="yes" xml:space="preserve">
          <source>\ActiveField $model</source>
          <target state="translated">\ ActiveField $ 모델</target>
        </trans-unit>
        <trans-unit id="4899e092a9c4cedec8ca867db219629bc4d3b380" translate="yes" xml:space="preserve">
          <source>\ActiveField $options</source>
          <target state="translated">\ ActiveField $ options</target>
        </trans-unit>
        <trans-unit id="750e3ef71a3cfa67963fcf435ce80ce6100e827d" translate="yes" xml:space="preserve">
          <source>\ActiveField $parts</source>
          <target state="translated">\ ActiveField $ parts</target>
        </trans-unit>
        <trans-unit id="d42b84e6f087d50e6d27ddba0ce2e7defb94f9d6" translate="yes" xml:space="preserve">
          <source>\ActiveField $radioTemplate</source>
          <target state="translated">\ ActiveField $ radioTemplate</target>
        </trans-unit>
        <trans-unit id="1dd1fec50b75b28a3ad984fccc98ef044629aac0" translate="yes" xml:space="preserve">
          <source>\ActiveField $selectors</source>
          <target state="translated">\ ActiveField $ selectors</target>
        </trans-unit>
        <trans-unit id="7256dde7a2a08eeef3c0dd896ee7eb5023d46002" translate="yes" xml:space="preserve">
          <source>\ActiveField $template</source>
          <target state="translated">\ ActiveField $ template</target>
        </trans-unit>
        <trans-unit id="affcaedb85194a498d6c4fbc743837ad111aafee" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnBlur</source>
          <target state="translated">\ ActiveField $ validateOnBlur</target>
        </trans-unit>
        <trans-unit id="30a596660232766fe9572d4bdbd0b76f851aca83" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnChange</source>
          <target state="translated">\ ActiveField $ validateOnChange</target>
        </trans-unit>
        <trans-unit id="7a602ea82f620d726ad1c0f71b3632dd217d0155" translate="yes" xml:space="preserve">
          <source>\ActiveField $validateOnType</source>
          <target state="translated">\ ActiveField $ validateOnType</target>
        </trans-unit>
        <trans-unit id="ce0a0fb08af4bf94ed7a75f2086d1efa0431c83f" translate="yes" xml:space="preserve">
          <source>\ActiveField $validationDelay</source>
          <target state="translated">\ ActiveField $ validationDelay</target>
        </trans-unit>
        <trans-unit id="e5f8d80bfb52744ee31e0da1acaff38a069ec085" translate="yes" xml:space="preserve">
          <source>\ActiveField $wrapperOptions</source>
          <target state="translated">\ ActiveField $ wrapperOptions</target>
        </trans-unit>
        <trans-unit id="84464c1647a559c4d8798a8578315d2052763ae1" translate="yes" xml:space="preserve">
          <source>\ActiveField __construct()</source>
          <target state="translated">\ ActiveField __construct ()</target>
        </trans-unit>
        <trans-unit id="3a078f9aafbbebb632ed8902b370e0ad79a34495" translate="yes" xml:space="preserve">
          <source>\ActiveField __toString()</source>
          <target state="translated">\ ActiveField __toString ()</target>
        </trans-unit>
        <trans-unit id="2fdd8fc59167225b6f84a5fdc07519a186fa9c8a" translate="yes" xml:space="preserve">
          <source>\ActiveField addAriaAttributes()</source>
          <target state="translated">\ ActiveField addAriaAttributes ()</target>
        </trans-unit>
        <trans-unit id="7ba4665b6d6782140d5a7ed3f133948b905e2216" translate="yes" xml:space="preserve">
          <source>\ActiveField adjustLabelFor()</source>
          <target state="translated">\ ActiveField adjustLabelFor ()</target>
        </trans-unit>
        <trans-unit id="fd5b3ad4ef57206b650e50016235cf429b54c2dc" translate="yes" xml:space="preserve">
          <source>\ActiveField begin()</source>
          <target state="translated">\ ActiveField begin ()</target>
        </trans-unit>
        <trans-unit id="db56721199e79ec883862cb375a0206b873386c8" translate="yes" xml:space="preserve">
          <source>\ActiveField checkbox()</source>
          <target state="translated">\ ActiveField 확인란 ()</target>
        </trans-unit>
        <trans-unit id="85bb7430c7d14dc98995d40d98b662b1c287e4f6" translate="yes" xml:space="preserve">
          <source>\ActiveField checkboxList()</source>
          <target state="translated">\ ActiveField checkboxList ()</target>
        </trans-unit>
        <trans-unit id="30abe349fd706efd5b629f4ac91a6daa170f0d29" translate="yes" xml:space="preserve">
          <source>\ActiveField createLayoutConfig()</source>
          <target state="translated">\ ActiveField createLayoutConfig ()</target>
        </trans-unit>
        <trans-unit id="f460a0c8f6a32bee4016c276140042eb10e9f90f" translate="yes" xml:space="preserve">
          <source>\ActiveField dropDownList()</source>
          <target state="translated">\ ActiveField dropDownList ()</target>
        </trans-unit>
        <trans-unit id="165ca151c908f4b0f5966fcc29e0690a38c58ce9" translate="yes" xml:space="preserve">
          <source>\ActiveField end()</source>
          <target state="translated">\ ActiveField end ()</target>
        </trans-unit>
        <trans-unit id="519e8ca13876699120a45f4abdeaf3b5020d026c" translate="yes" xml:space="preserve">
          <source>\ActiveField error()</source>
          <target state="translated">\ ActiveField 오류 ()</target>
        </trans-unit>
        <trans-unit id="b4a7166b42be1c2eca68c4aa87db0a5ace1cf9fc" translate="yes" xml:space="preserve">
          <source>\ActiveField fileInput()</source>
          <target state="translated">\ ActiveField fileInput ()</target>
        </trans-unit>
        <trans-unit id="a926121849f7b8c0e3f7d8c89fe8b06b6fa06617" translate="yes" xml:space="preserve">
          <source>\ActiveField getClientOptions()</source>
          <target state="translated">\ ActiveField getClientOptions ()</target>
        </trans-unit>
        <trans-unit id="860c62f7007d98b2cbddd40810cd8188712f6940" translate="yes" xml:space="preserve">
          <source>\ActiveField getInputId()</source>
          <target state="translated">\ ActiveField getInputId ()</target>
        </trans-unit>
        <trans-unit id="9bf2a644c1f01257ec9038040ec5047a2d286d90" translate="yes" xml:space="preserve">
          <source>\ActiveField hiddenInput()</source>
          <target state="translated">\ ActiveField hiddenInput ()</target>
        </trans-unit>
        <trans-unit id="319aa9b180717e59739caf834867bd82ad917ca0" translate="yes" xml:space="preserve">
          <source>\ActiveField hint()</source>
          <target state="translated">\ ActiveField 힌트 ()</target>
        </trans-unit>
        <trans-unit id="51b2635e2aef84de608329e5fa45f6818d940aea" translate="yes" xml:space="preserve">
          <source>\ActiveField inline()</source>
          <target state="translated">\ ActiveField 인라인 ()</target>
        </trans-unit>
        <trans-unit id="82e2ed27128e53a2741296e17f122410576aacab" translate="yes" xml:space="preserve">
          <source>\ActiveField input()</source>
          <target state="translated">\ ActiveField 입력 ()</target>
        </trans-unit>
        <trans-unit id="0a136e1e9d5cafad6c4bcd87eb709b4eebd35460" translate="yes" xml:space="preserve">
          <source>\ActiveField isAjaxValidationEnabled()</source>
          <target state="translated">\ ActiveField isAjaxValidationEnabled ()</target>
        </trans-unit>
        <trans-unit id="fe00217265bc51b8968e62a92724809f065b6792" translate="yes" xml:space="preserve">
          <source>\ActiveField isClientValidationEnabled()</source>
          <target state="translated">\ ActiveField isClientValidationEnabled ()</target>
        </trans-unit>
        <trans-unit id="f8b572f6bf8205503f67f1b213a03330a4fae422" translate="yes" xml:space="preserve">
          <source>\ActiveField label()</source>
          <target state="translated">\ ActiveField 레이블 ()</target>
        </trans-unit>
        <trans-unit id="3d5612e1a71fa46e2455d8e2ca8a487bed5fde05" translate="yes" xml:space="preserve">
          <source>\ActiveField listBox()</source>
          <target state="translated">\ ActiveField listBox ()</target>
        </trans-unit>
        <trans-unit id="7025da7ee260ab4cae37cbbaad7cec5d8ef69ecf" translate="yes" xml:space="preserve">
          <source>\ActiveField passwordInput()</source>
          <target state="translated">\ ActiveField passwordInput ()</target>
        </trans-unit>
        <trans-unit id="24ffca8b90d164fa5b4eeacc32c5e3538ea7936e" translate="yes" xml:space="preserve">
          <source>\ActiveField radio()</source>
          <target state="translated">\ ActiveField 라디오 ()</target>
        </trans-unit>
        <trans-unit id="dd980241976d009df044cf34a52e9a546412e647" translate="yes" xml:space="preserve">
          <source>\ActiveField radioList()</source>
          <target state="translated">\ ActiveField radioList ()</target>
        </trans-unit>
        <trans-unit id="d90a8681323e2f928da3e75dd19673318df03e7b" translate="yes" xml:space="preserve">
          <source>\ActiveField render()</source>
          <target state="translated">\ ActiveField render ()</target>
        </trans-unit>
        <trans-unit id="3d0d0ffff43939b268b08946f84e17eea2e3da04" translate="yes" xml:space="preserve">
          <source>\ActiveField renderLabelParts()</source>
          <target state="translated">\ ActiveField renderLabelParts ()</target>
        </trans-unit>
        <trans-unit id="0a81d208fbf1c92777af8369a21955058c6e42bc" translate="yes" xml:space="preserve">
          <source>\ActiveField staticControl()</source>
          <target state="translated">\ ActiveField staticControl ()</target>
        </trans-unit>
        <trans-unit id="077dc7ac806913d5671e5aa82c085a1787ffd434" translate="yes" xml:space="preserve">
          <source>\ActiveField textInput()</source>
          <target state="translated">\ ActiveField textInput ()</target>
        </trans-unit>
        <trans-unit id="939a3b8c720c5b6d083b3ca8dcd5ffedc533571e" translate="yes" xml:space="preserve">
          <source>\ActiveField textarea()</source>
          <target state="translated">\ ActiveField 텍스트 영역 ()</target>
        </trans-unit>
        <trans-unit id="b88e3a9a25db7bcb0a2249ef3c7e589353695ba5" translate="yes" xml:space="preserve">
          <source>\ActiveField widget()</source>
          <target state="translated">\ ActiveField 위젯 ()</target>
        </trans-unit>
        <trans-unit id="dd7d7ead486a9809d9adff65aada4fb78fb350e3" translate="yes" xml:space="preserve">
          <source>\ActiveFixture</source>
          <target state="translated">\ActiveFixture</target>
        </trans-unit>
        <trans-unit id="f5e6eb895bec35e1b30eb47b4740edbee5aa2a11" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $collectionName</source>
          <target state="translated">\ ActiveFixture $ collectionName</target>
        </trans-unit>
        <trans-unit id="e16982e063f83376e30f3f7b8b8aa2758a9c0c17" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $dataFile</source>
          <target state="translated">\ ActiveFixture $ dataFile</target>
        </trans-unit>
        <trans-unit id="05c80bd88c8798e344549577978c44227db4c5b5" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $db</source>
          <target state="translated">\ ActiveFixture $ db</target>
        </trans-unit>
        <trans-unit id="d667f77b151aa11dd2a88e1eebd083ee50968b77" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $index</source>
          <target state="translated">\ ActiveFixture $ 색인</target>
        </trans-unit>
        <trans-unit id="9992c58b76e9ddba24056238cdf7db4eb1dc5348" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexName</source>
          <target state="translated">\ ActiveFixture $ indexName</target>
        </trans-unit>
        <trans-unit id="1347876a2e64e4c31faf40ee03a2cb0d03438990" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $indexSchema</source>
          <target state="translated">\ ActiveFixture $ indexSchema</target>
        </trans-unit>
        <trans-unit id="3e022066752d513d8efe4d2ebdbecfa240fc3fa7" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableName</source>
          <target state="translated">\ ActiveFixture $ tableName</target>
        </trans-unit>
        <trans-unit id="719718396f5b73d19863ab469015c95d02c89eb0" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $tableSchema</source>
          <target state="translated">\ ActiveFixture $ table 스키마</target>
        </trans-unit>
        <trans-unit id="555adeabf1aae9f8405d6e50d5bee676affc332c" translate="yes" xml:space="preserve">
          <source>\ActiveFixture $type</source>
          <target state="translated">\ ActiveFixture $ 유형</target>
        </trans-unit>
        <trans-unit id="3f8ffb621bbf713ac02ef585f3ef9b459afa3d3b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollection()</source>
          <target state="translated">\ ActiveFixture getCollection ()</target>
        </trans-unit>
        <trans-unit id="65c2a1bcce6586a0c92c1a72af46b096d0ea6e72" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getCollectionName()</source>
          <target state="translated">\ ActiveFixture getCollectionName ()</target>
        </trans-unit>
        <trans-unit id="57cfac11f4f9d3bbf1513163779e2a91b62d9bdb" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getData()</source>
          <target state="translated">\ ActiveFixture getData ()</target>
        </trans-unit>
        <trans-unit id="834894822be43168840e5f1f9db5ec4dfa52b06b" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getIndexSchema()</source>
          <target state="translated">\ ActiveFixture getIndexSchema ()</target>
        </trans-unit>
        <trans-unit id="864e808f4b4b594479e88613cdb347e3a0f395a6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture getTableSchema()</source>
          <target state="translated">\ ActiveFixture getTableSchema ()</target>
        </trans-unit>
        <trans-unit id="f1202d5a9bb2aabf5fd21fc4853eff81e5ea8822" translate="yes" xml:space="preserve">
          <source>\ActiveFixture init()</source>
          <target state="translated">\ ActiveFixture init ()</target>
        </trans-unit>
        <trans-unit id="cf9d02277b26b7fc69df33998f3d02a650c1db2d" translate="yes" xml:space="preserve">
          <source>\ActiveFixture load()</source>
          <target state="translated">\ ActiveFixture로드 ()</target>
        </trans-unit>
        <trans-unit id="d64ba901f8f17c3531d1702c9a79e16265865006" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetCollection()</source>
          <target state="translated">\ ActiveFixture resetCollection ()</target>
        </trans-unit>
        <trans-unit id="11e47ba81221122fa774a78e464b9a7104b3321f" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetIndex()</source>
          <target state="translated">\ ActiveFixture resetIndex ()</target>
        </trans-unit>
        <trans-unit id="9841cecae14b3fb3799f7bc5b35ed901851ab0f6" translate="yes" xml:space="preserve">
          <source>\ActiveFixture resetTable()</source>
          <target state="translated">\ ActiveFixture resetTable ()</target>
        </trans-unit>
        <trans-unit id="c75ab608c91299e0e90f514e3c9a782620b556ac" translate="yes" xml:space="preserve">
          <source>\ActiveFixture unload()</source>
          <target state="translated">\ ActiveFixture 언로드 ()</target>
        </trans-unit>
        <trans-unit id="9a2d099a386a24935bfd240065f1e2c43e62c285" translate="yes" xml:space="preserve">
          <source>\ActiveForm</source>
          <target state="translated">\ActiveForm</target>
        </trans-unit>
        <trans-unit id="a535a890f0a33ef454d25981d5498693ef230ef4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $action</source>
          <target state="translated">\ ActiveForm $ 액션</target>
        </trans-unit>
        <trans-unit id="227880784b690bae996fdfb28d6200816e3198af" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxDataType</source>
          <target state="translated">\ ActiveForm $ ajaxDataType</target>
        </trans-unit>
        <trans-unit id="3c28703464bdd0f2a610bf0f260d59c74d2b08aa" translate="yes" xml:space="preserve">
          <source>\ActiveForm $ajaxParam</source>
          <target state="translated">\ ActiveForm $ ajaxParam</target>
        </trans-unit>
        <trans-unit id="03d0fdaaafbf0ae7e37eab8c251d859d97acf891" translate="yes" xml:space="preserve">
          <source>\ActiveForm $attributes</source>
          <target state="translated">\ ActiveForm $ 속성</target>
        </trans-unit>
        <trans-unit id="246ee251e6576db1e42f3617cc1a93ef558b621f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableAjaxValidation</source>
          <target state="translated">\ ActiveForm $ enableAjaxValidation</target>
        </trans-unit>
        <trans-unit id="fcc93277d0bffd35a494f78a3e3756a23f3c463a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientScript</source>
          <target state="translated">\ ActiveForm $ enableClientScript</target>
        </trans-unit>
        <trans-unit id="ea435678991a2ece47f4c6d8075b4533d1d7756f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $enableClientValidation</source>
          <target state="translated">\ ActiveForm $ enableClientValidation</target>
        </trans-unit>
        <trans-unit id="7932250e7a03cbcdd87a1db2a8fe507215acb728" translate="yes" xml:space="preserve">
          <source>\ActiveForm $encodeErrorSummary</source>
          <target state="translated">\ ActiveForm $ encodeErrorSummary</target>
        </trans-unit>
        <trans-unit id="03901d667aabd2d4c0c1d639f736e29bc0a79fa7" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorCssClass</source>
          <target state="translated">\ ActiveForm $ errorCssClass</target>
        </trans-unit>
        <trans-unit id="0ba11718df9b3f0ab034ef9f60d9f42f94c9bb08" translate="yes" xml:space="preserve">
          <source>\ActiveForm $errorSummaryCssClass</source>
          <target state="translated">\ ActiveForm $ errorSummaryCssClass</target>
        </trans-unit>
        <trans-unit id="70d84d3405b91d47860b354b6ad43d23680860a8" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldClass</source>
          <target state="translated">\ ActiveForm $ fieldClass</target>
        </trans-unit>
        <trans-unit id="ba1ecdcec73e845aacd42f39d1e3ac69c0f6118a" translate="yes" xml:space="preserve">
          <source>\ActiveForm $fieldConfig</source>
          <target state="translated">\ ActiveForm $ fieldConfig</target>
        </trans-unit>
        <trans-unit id="3cdfb985c18cbcf24a152428d13d9f9d053b3d1f" translate="yes" xml:space="preserve">
          <source>\ActiveForm $layout</source>
          <target state="translated">\ ActiveForm $ layout</target>
        </trans-unit>
        <trans-unit id="42bc6e2d0ddd5ace056d1da51a94cb052dd7d545" translate="yes" xml:space="preserve">
          <source>\ActiveForm $method</source>
          <target state="translated">\ ActiveForm $ 방법</target>
        </trans-unit>
        <trans-unit id="4439f8b8ca27042150c9e29ba5100f7f52fd4522" translate="yes" xml:space="preserve">
          <source>\ActiveForm $options</source>
          <target state="translated">\ ActiveForm $ 옵션</target>
        </trans-unit>
        <trans-unit id="c1c2e85e678f2db8e8b1d972dcb623d07f6e8856" translate="yes" xml:space="preserve">
          <source>\ActiveForm $requiredCssClass</source>
          <target state="translated">\ ActiveForm $ requiredCssClass</target>
        </trans-unit>
        <trans-unit id="ce65beeb12acd99a9982f895629b30aa8e2f2e9e" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToError</source>
          <target state="translated">\ ActiveForm $ scrollToError</target>
        </trans-unit>
        <trans-unit id="3c3b6adac1cdc13595916d6b7de3f64f2e61b2b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm $scrollToErrorOffset</source>
          <target state="translated">\ ActiveForm $ scrollToErrorOffset</target>
        </trans-unit>
        <trans-unit id="c8e0384db8a5c1356fbaef131480a3a8deb3ff75" translate="yes" xml:space="preserve">
          <source>\ActiveForm $successCssClass</source>
          <target state="translated">\ ActiveForm $ successCssClass</target>
        </trans-unit>
        <trans-unit id="9aeb2ff99ca64439f033cb45eaf126a003b3cdc4" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnBlur</source>
          <target state="translated">\ ActiveForm $ validateOnBlur</target>
        </trans-unit>
        <trans-unit id="d8b1883dbe3ee6c3663e068bc7e8a17624595fbf" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnChange</source>
          <target state="translated">\ ActiveForm $ validateOnChange</target>
        </trans-unit>
        <trans-unit id="6f5bd8235ca4638d308fc18789e64c52875458ee" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnSubmit</source>
          <target state="translated">\ ActiveForm $ validateOnSubmit</target>
        </trans-unit>
        <trans-unit id="36baa0afa475514ce78997bf474204257d614858" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validateOnType</source>
          <target state="translated">\ ActiveForm $ validateOnType</target>
        </trans-unit>
        <trans-unit id="aa52a7bb67391d3c8fd7c18a6db045e81cf151c6" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validatingCssClass</source>
          <target state="translated">\ ActiveForm $ validatingCssClass</target>
        </trans-unit>
        <trans-unit id="b7aab4a025afc829be4a6ce08556b6039cfb409b" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationDelay</source>
          <target state="translated">\ ActiveForm $ validationDelay</target>
        </trans-unit>
        <trans-unit id="07b13f3ae09a47eab557c8aaad0f408b6e799b90" translate="yes" xml:space="preserve">
          <source>\ActiveForm $validationUrl</source>
          <target state="translated">\ ActiveForm $ validationUrl</target>
        </trans-unit>
        <trans-unit id="5db220672b71349b1b050761ef7ae773dc742889" translate="yes" xml:space="preserve">
          <source>\ActiveForm beginField()</source>
          <target state="translated">\ ActiveForm beginField ()</target>
        </trans-unit>
        <trans-unit id="f14bb6b911e1ee05006a3de48343474b89b31d69" translate="yes" xml:space="preserve">
          <source>\ActiveForm endField()</source>
          <target state="translated">\ ActiveForm endField ()</target>
        </trans-unit>
        <trans-unit id="fc16619a839cfd04ea7602817fab4d4997d3b6b5" translate="yes" xml:space="preserve">
          <source>\ActiveForm errorSummary()</source>
          <target state="translated">\ ActiveForm errorSummary ()</target>
        </trans-unit>
        <trans-unit id="a50e263307a2e299474bcd27a7f149b5b8cac542" translate="yes" xml:space="preserve">
          <source>\ActiveForm field()</source>
          <target state="translated">\ ActiveForm 필드 ()</target>
        </trans-unit>
        <trans-unit id="ab4a03cc2f3a284b9e8a72324ba4be7bebc116e3" translate="yes" xml:space="preserve">
          <source>\ActiveForm getClientOptions()</source>
          <target state="translated">\ ActiveForm getClientOptions ()</target>
        </trans-unit>
        <trans-unit id="64c2d7bcc62a0a21c052c1bb997c08e33ce4930c" translate="yes" xml:space="preserve">
          <source>\ActiveForm init()</source>
          <target state="translated">\ ActiveForm init ()</target>
        </trans-unit>
        <trans-unit id="5fd9cbe251a11cfa169e5e0f9114c4bf5afc6f4b" translate="yes" xml:space="preserve">
          <source>\ActiveForm registerClientScript()</source>
          <target state="translated">\ ActiveForm registerClientScript ()</target>
        </trans-unit>
        <trans-unit id="d4040dff110fd372180bef9be93d001a1032d462" translate="yes" xml:space="preserve">
          <source>\ActiveForm run()</source>
          <target state="translated">\ ActiveForm run ()</target>
        </trans-unit>
        <trans-unit id="64dc7ef054343aad3f6ceb452182d4c5216b22a7" translate="yes" xml:space="preserve">
          <source>\ActiveForm validate()</source>
          <target state="translated">\ ActiveForm validate ()</target>
        </trans-unit>
        <trans-unit id="0668caabfdeb2523767baed905babbec9980b4a5" translate="yes" xml:space="preserve">
          <source>\ActiveForm validateMultiple()</source>
          <target state="translated">\ ActiveForm validateMultiple ()</target>
        </trans-unit>
        <trans-unit id="80aa1cf747eb2ee33d39162f9b6ceae49716436f" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset</source>
          <target state="translated">\ActiveFormAsset</target>
        </trans-unit>
        <trans-unit id="bf1e235d855c27a2041a2cad7bf6d3b3b46f99fe" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $depends</source>
          <target state="translated">\ ActiveFormAsset $에 따라 다름</target>
        </trans-unit>
        <trans-unit id="405688b03f7ce126fa14286ee191a7fda831659e" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $js</source>
          <target state="translated">\ ActiveFormAsset $ js</target>
        </trans-unit>
        <trans-unit id="eae1f680a173d1043f882e5a1630b411137bfb43" translate="yes" xml:space="preserve">
          <source>\ActiveFormAsset $sourcePath</source>
          <target state="translated">\ ActiveFormAsset $ sourcePath</target>
        </trans-unit>
        <trans-unit id="8edc721a0d9ab38a4b9e5b2fc9d4600c652d4f2f" translate="yes" xml:space="preserve">
          <source>\ActiveQuery</source>
          <target state="translated">\ActiveQuery</target>
        </trans-unit>
        <trans-unit id="3d7872fb7f760a7daddc661198a20c2174a7ae88" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $collection</source>
          <target state="translated">\ ActiveQuery $ 컬렉션</target>
        </trans-unit>
        <trans-unit id="f9875dfeb90b40f0177b887d5efae8ba8163b417" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $joinWith</source>
          <target state="translated">\ ActiveQuery $ joinWith</target>
        </trans-unit>
        <trans-unit id="e0a099767455bd7e795a919cdc8bc86fb07aa00b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $on</source>
          <target state="translated">\ ActiveQuery $ on</target>
        </trans-unit>
        <trans-unit id="2f30e61b2f76fbe53c2c2130a0dd59cb4a879d3b" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $sql</source>
          <target state="translated">\ ActiveQuery $ sql</target>
        </trans-unit>
        <trans-unit id="6e4281847c656ba21979df37a2075cefabe3ff38" translate="yes" xml:space="preserve">
          <source>\ActiveQuery $tablesUsedInFrom</source>
          <target state="translated">\ ActiveQuery $ tablesUsedInFrom</target>
        </trans-unit>
        <trans-unit id="2afde5b334c088b6effd287feaa49443b8cb58a9" translate="yes" xml:space="preserve">
          <source>\ActiveQuery EVENT_INIT</source>
          <target state="translated">\ ActiveQuery EVENT_INIT</target>
        </trans-unit>
        <trans-unit id="13d531b705ef2d323aa4f00a446a84d2d86eed27" translate="yes" xml:space="preserve">
          <source>\ActiveQuery __construct()</source>
          <target state="translated">\ ActiveQuery __construct ()</target>
        </trans-unit>
        <trans-unit id="4cb3c7e6f5de2e47b22bd6bf694cf445c1b64125" translate="yes" xml:space="preserve">
          <source>\ActiveQuery alias()</source>
          <target state="translated">\ ActiveQuery alias ()</target>
        </trans-unit>
        <trans-unit id="d46ae3063887d3429991d9138cde847e563fd6a1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery all()</source>
          <target state="translated">\ ActiveQuery all ()</target>
        </trans-unit>
        <trans-unit id="a2d9d87b3bf838b15459e4537395c12ebde9e8ef" translate="yes" xml:space="preserve">
          <source>\ActiveQuery andOnCondition()</source>
          <target state="translated">\ ActiveQuery andOnCondition ()</target>
        </trans-unit>
        <trans-unit id="c6ab281783fe56683553d6d26d3492eb479c1bc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery average()</source>
          <target state="translated">\ ActiveQuery average ()</target>
        </trans-unit>
        <trans-unit id="24f9af8f6054ff2a4c845c1fb6fa50f285df1b76" translate="yes" xml:space="preserve">
          <source>\ActiveQuery callSnippets()</source>
          <target state="translated">\ ActiveQuery callSnippets ()</target>
        </trans-unit>
        <trans-unit id="893138f42fac1ee895a7098cacea0389b65ecaee" translate="yes" xml:space="preserve">
          <source>\ActiveQuery column()</source>
          <target state="translated">\ ActiveQuery 열 ()</target>
        </trans-unit>
        <trans-unit id="7e8a366c5c92c892e2da424a4242ca9622ac8b63" translate="yes" xml:space="preserve">
          <source>\ActiveQuery count()</source>
          <target state="translated">\ ActiveQuery 수 ()</target>
        </trans-unit>
        <trans-unit id="b4fac57b6203842e835d6f871616fd62b1ecb423" translate="yes" xml:space="preserve">
          <source>\ActiveQuery createCommand()</source>
          <target state="translated">\ ActiveQuery createCommand ()</target>
        </trans-unit>
        <trans-unit id="98ed11985764f119bccad025d15d8e9369d1c1c5" translate="yes" xml:space="preserve">
          <source>\ActiveQuery defaultConnection()</source>
          <target state="translated">\ ActiveQuery defaultConnection ()</target>
        </trans-unit>
        <trans-unit id="78d4379a6724cc122c7951bd92aa04bf6171f418" translate="yes" xml:space="preserve">
          <source>\ActiveQuery executeScript()</source>
          <target state="translated">\ ActiveQuery executeScript ()</target>
        </trans-unit>
        <trans-unit id="e310f6fc0fbfd286d1f19a954584e25ef231940c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery exists()</source>
          <target state="translated">\ ActiveQuery가 존재합니다 ()</target>
        </trans-unit>
        <trans-unit id="b82983da03c444c733ffefc504449920a1bd7de2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery fetchSnippetSourceFromModels()</source>
          <target state="translated">\ ActiveQuery fetchSnippetSourceFromModels ()</target>
        </trans-unit>
        <trans-unit id="2c3d91f7e47344342962fcf564ecea88fcd42345" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getCollection()</source>
          <target state="translated">\ ActiveQuery getCollection ()</target>
        </trans-unit>
        <trans-unit id="8a289aaf78bf49d966566f9b4daec8dd4585ed6a" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getPrimaryTableName()</source>
          <target state="translated">\ ActiveQuery getPrimaryTableName ()</target>
        </trans-unit>
        <trans-unit id="0f941a35c476b55122358d582b8c4cc9e15294b2" translate="yes" xml:space="preserve">
          <source>\ActiveQuery getTablesUsedInFrom()</source>
          <target state="translated">\ ActiveQuery getTablesUsedInFrom ()</target>
        </trans-unit>
        <trans-unit id="4130b98f5515804ed8460d4effe3e4a4bbd420f8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery init()</source>
          <target state="translated">\ ActiveQuery init ()</target>
        </trans-unit>
        <trans-unit id="1ec30478ddeddafd52a9562ae2d0fa900a0d9b0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery innerJoinWith()</source>
          <target state="translated">\ ActiveQuery innerJoinWith ()</target>
        </trans-unit>
        <trans-unit id="b68707267635a36b22f4fb59f02fbed311f6c040" translate="yes" xml:space="preserve">
          <source>\ActiveQuery joinWith()</source>
          <target state="translated">\ ActiveQuery joinWith ()</target>
        </trans-unit>
        <trans-unit id="a722b29b51140d3300b11c52bc03ae212d998fc8" translate="yes" xml:space="preserve">
          <source>\ActiveQuery max()</source>
          <target state="translated">\ ActiveQuery max ()</target>
        </trans-unit>
        <trans-unit id="61e05f51a5f862567495d62f1a6cf706d2025780" translate="yes" xml:space="preserve">
          <source>\ActiveQuery min()</source>
          <target state="translated">\ ActiveQuery min ()</target>
        </trans-unit>
        <trans-unit id="17ef67fbd4919c84f6ad90390ebe7b4c38980f80" translate="yes" xml:space="preserve">
          <source>\ActiveQuery modify()</source>
          <target state="translated">\ ActiveQuery modify ()</target>
        </trans-unit>
        <trans-unit id="780ec1f1a40d9ad935640e1dfbc423088527b673" translate="yes" xml:space="preserve">
          <source>\ActiveQuery onCondition()</source>
          <target state="translated">\ ActiveQuery onCondition ()</target>
        </trans-unit>
        <trans-unit id="a66db28e8cc41f16c7ec8a6cb8cc0c2731517bd0" translate="yes" xml:space="preserve">
          <source>\ActiveQuery one()</source>
          <target state="translated">\ ActiveQuery one ()</target>
        </trans-unit>
        <trans-unit id="4ceeaeaa57478741bd2d78828f86102226ef9415" translate="yes" xml:space="preserve">
          <source>\ActiveQuery orOnCondition()</source>
          <target state="translated">\ ActiveQuery orOnCondition ()</target>
        </trans-unit>
        <trans-unit id="d30a4bde9be774422bd6b799b3a2dd1ce7573fc3" translate="yes" xml:space="preserve">
          <source>\ActiveQuery populate()</source>
          <target state="translated">\ ActiveQuery populate ()</target>
        </trans-unit>
        <trans-unit id="f8bd80cf641f12d1c97b5c7fd7410960a343a09e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery prepare()</source>
          <target state="translated">\ ActiveQuery 준비 ()</target>
        </trans-unit>
        <trans-unit id="a3c776eed2cb1a7ff47bd41b57affea713c166c1" translate="yes" xml:space="preserve">
          <source>\ActiveQuery queryScalar()</source>
          <target state="translated">\ ActiveQuery queryScalar ()</target>
        </trans-unit>
        <trans-unit id="7517d42eb7594cdf888195c9fad7004735098c6c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery scalar()</source>
          <target state="translated">\ ActiveQuery 스칼라 ()</target>
        </trans-unit>
        <trans-unit id="cb5298cc33207c5d7acadc7d8dc07fcfbcfa174c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery search()</source>
          <target state="translated">\ ActiveQuery 검색 ()</target>
        </trans-unit>
        <trans-unit id="d7cbb9d6c105386033b39044c3f830aa63bd4c0e" translate="yes" xml:space="preserve">
          <source>\ActiveQuery snippetByModel()</source>
          <target state="translated">\ ActiveQuery snippetByModel ()</target>
        </trans-unit>
        <trans-unit id="2bf17d003d0b4684e30fc1736ec3cc3acd94dc6d" translate="yes" xml:space="preserve">
          <source>\ActiveQuery sum()</source>
          <target state="translated">\ ActiveQuery sum ()</target>
        </trans-unit>
        <trans-unit id="840fb042ff76437b90c84ad03f6b614ac82ead8c" translate="yes" xml:space="preserve">
          <source>\ActiveQuery viaTable()</source>
          <target state="translated">\ ActiveQuery viaTable ()</target>
        </trans-unit>
        <trans-unit id="e1b6f2d5e5b4a5e6287956719919de477ab11920" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface</source>
          <target state="translated">\ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="2ca84ce630f6e06a9c54c38e48a205d45e1df957" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface asArray()</source>
          <target state="translated">\ ActiveQueryInterface asArray ()</target>
        </trans-unit>
        <trans-unit id="ba7e33162d769f484e1ded379d03c6591d6f504c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface findFor()</source>
          <target state="translated">\ ActiveQueryInterface findFor ()</target>
        </trans-unit>
        <trans-unit id="29eb2a551c034f479d82fc86dc46e0a426887cd0" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface indexBy()</source>
          <target state="translated">\ ActiveQueryInterface indexBy ()</target>
        </trans-unit>
        <trans-unit id="e9b2fa38bc1220d53bb735095e61d83efdda3e3c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface one()</source>
          <target state="translated">\ ActiveQueryInterface one ()</target>
        </trans-unit>
        <trans-unit id="303a2ce02ba893101410f8be475c212d0122cb52" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface via()</source>
          <target state="translated">\ ActiveQueryInterface via ()</target>
        </trans-unit>
        <trans-unit id="8dd333836328838758cf82dbfcfcf3d013501ee1" translate="yes" xml:space="preserve">
          <source>\ActiveQueryInterface with()</source>
          <target state="translated">\ ActiveQueryInterface with ()</target>
        </trans-unit>
        <trans-unit id="f43285759272501e87c729b2f3c623fdf837cde3" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait</source>
          <target state="translated">\ActiveQueryTrait</target>
        </trans-unit>
        <trans-unit id="7def933b25ffeef161a159285d736253cc04085c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $asArray</source>
          <target state="translated">\ ActiveQueryTrait $ asArray</target>
        </trans-unit>
        <trans-unit id="3ef39dd1e7d6f73aa8a4a1bb1933deb1e59900d5" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $modelClass</source>
          <target state="translated">\ ActiveQueryTrait $ modelClass</target>
        </trans-unit>
        <trans-unit id="7971f6eca2584fd7636a3a269908beafd2541f82" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait $with</source>
          <target state="translated">\ ActiveQueryTrait $ with</target>
        </trans-unit>
        <trans-unit id="551a232665eb7624999eefd6d644d5354080ed1c" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait asArray()</source>
          <target state="translated">\ ActiveQueryTrait asArray ()</target>
        </trans-unit>
        <trans-unit id="ee2e38e5dd042580fd0932c46fc714bd14d37993" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait createModels()</source>
          <target state="translated">\ ActiveQueryTrait createModels ()</target>
        </trans-unit>
        <trans-unit id="c5512cd88eb1b244c58eeca2810b87ed028e3dda" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait findWith()</source>
          <target state="translated">\ ActiveQueryTrait findWith ()</target>
        </trans-unit>
        <trans-unit id="b51f8f6f6ddf7f7a8105643bf12b2631e4cc1ec6" translate="yes" xml:space="preserve">
          <source>\ActiveQueryTrait with()</source>
          <target state="translated">\ ActiveQueryTrait with ()</target>
        </trans-unit>
        <trans-unit id="e709bee0215a9eef98c1d65622903136dadbed1c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord</source>
          <target state="translated">\ActiveRecord</target>
        </trans-unit>
        <trans-unit id="78543b48ca4c163f752f3638903958b3e0729a31" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $explanation</source>
          <target state="translated">\ ActiveRecord $ 설명</target>
        </trans-unit>
        <trans-unit id="1dfaf3691730ad1219e3a9386512817527ada815" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $highlight</source>
          <target state="translated">\ ActiveRecord $ highlight</target>
        </trans-unit>
        <trans-unit id="5490b1758d8823cd98b108a904c1ebdab0f8a6a4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $oldPrimaryKey</source>
          <target state="translated">\ ActiveRecord $ oldPrimaryKey</target>
        </trans-unit>
        <trans-unit id="32e2e2fe986e6de448bdaaad998e951e842820c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $primaryKey</source>
          <target state="translated">\ ActiveRecord $ primaryKey</target>
        </trans-unit>
        <trans-unit id="5032bdb9a7975bf1bdee19e3aa367c164635fbe0" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $score</source>
          <target state="translated">\ ActiveRecord $ 점수</target>
        </trans-unit>
        <trans-unit id="a7a13357ce0d681453a050ce15cb7876d19ff350" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippet</source>
          <target state="translated">\ ActiveRecord $ snippet</target>
        </trans-unit>
        <trans-unit id="fd987ebe4a3d6d1432382069ac69a4768f785497" translate="yes" xml:space="preserve">
          <source>\ActiveRecord $snippetSource</source>
          <target state="translated">\ ActiveRecord $ snippetSource</target>
        </trans-unit>
        <trans-unit id="da9941a28a9a1cc6f395def36e5baaedf7ada37d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord arrayAttributes()</source>
          <target state="translated">\ ActiveRecord arrayAttributes ()</target>
        </trans-unit>
        <trans-unit id="038b386f153c28bdbcaf249e5081852c0179d2bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord attributes()</source>
          <target state="translated">\ ActiveRecord 속성 ()</target>
        </trans-unit>
        <trans-unit id="bc5782b013b81e7e48902e817c65bb936e3c2473" translate="yes" xml:space="preserve">
          <source>\ActiveRecord buildKey()</source>
          <target state="translated">\ ActiveRecord buildKey ()</target>
        </trans-unit>
        <trans-unit id="88d158573b19b717c69d92bd2757c061627ff026" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callKeywords()</source>
          <target state="translated">\ ActiveRecord callKeywords ()</target>
        </trans-unit>
        <trans-unit id="8e202a3867b7a1815a57d6ddc5ab436e9e0d2a12" translate="yes" xml:space="preserve">
          <source>\ActiveRecord callSnippets()</source>
          <target state="translated">\ ActiveRecord callSnippets ()</target>
        </trans-unit>
        <trans-unit id="c59afd16fd17e9ff11e891f47b9d26f7c4558eed" translate="yes" xml:space="preserve">
          <source>\ActiveRecord collectionName()</source>
          <target state="translated">\ ActiveRecord collectionName ()</target>
        </trans-unit>
        <trans-unit id="252f56be99e6756b5ba27e36176ca7c3ca20254c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord delete()</source>
          <target state="translated">\ ActiveRecord delete ()</target>
        </trans-unit>
        <trans-unit id="c4c5bd851b6595a7a2972c2556a6f2fc0d7ee670" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteAll()</source>
          <target state="translated">\ ActiveRecord deleteAll ()</target>
        </trans-unit>
        <trans-unit id="6d6967a0c9660fbd33cf9f428f69f26cf943078b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord deleteInternal()</source>
          <target state="translated">\ ActiveRecord deleteInternal ()</target>
        </trans-unit>
        <trans-unit id="35de0f309a1ffe031296ff3fb119b1a0e8edcf61" translate="yes" xml:space="preserve">
          <source>\ActiveRecord equals()</source>
          <target state="translated">\ ActiveRecord equals ()</target>
        </trans-unit>
        <trans-unit id="3d91e2447b6ae242f97ffc4ff51a09cc6bf5dc88" translate="yes" xml:space="preserve">
          <source>\ActiveRecord fetchSnippet()</source>
          <target state="translated">\ ActiveRecord fetchSnippet ()</target>
        </trans-unit>
        <trans-unit id="fd62b6edcbbfa2e881b341082dbb1d52c85b4ed7" translate="yes" xml:space="preserve">
          <source>\ActiveRecord find()</source>
          <target state="translated">\ ActiveRecord find ()</target>
        </trans-unit>
        <trans-unit id="ebefc730e9aa4abfe371b7cea753de40607afa41" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findAll()</source>
          <target state="translated">\ ActiveRecord findAll ()</target>
        </trans-unit>
        <trans-unit id="72a496fb839b7b38e41323fa638b24b92dd30750" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findByCondition()</source>
          <target state="translated">\ ActiveRecord findByCondition ()</target>
        </trans-unit>
        <trans-unit id="ab71a0cf07a4af4104fdb7f6ea00fef6e6f1774f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findBySql()</source>
          <target state="translated">\ ActiveRecord findBySql ()</target>
        </trans-unit>
        <trans-unit id="c7d7fd5853767ca5a3c912b3f1c40371b09727aa" translate="yes" xml:space="preserve">
          <source>\ActiveRecord findOne()</source>
          <target state="translated">\ ActiveRecord findOne ()</target>
        </trans-unit>
        <trans-unit id="bebf15f0569b1ee8bd38cc310f4c84842c88521f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord get()</source>
          <target state="translated">\ ActiveRecord get ()</target>
        </trans-unit>
        <trans-unit id="e862dc8537887b4ea4ce1f16d7aa851a3331d7bd" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getCollection()</source>
          <target state="translated">\ ActiveRecord getCollection ()</target>
        </trans-unit>
        <trans-unit id="1efe5ac5c80248e844497612b315300a8931d74c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getDb()</source>
          <target state="translated">\ ActiveRecord getDb ()</target>
        </trans-unit>
        <trans-unit id="48519eb50c48f9365f88eab38165ce76f91727ef" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getExplanation()</source>
          <target state="translated">\ ActiveRecord getExplanation ()</target>
        </trans-unit>
        <trans-unit id="19b2169c004e871a48138ad8bbd7a5abfee73ae9" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getHighlight()</source>
          <target state="translated">\ ActiveRecord getHighlight ()</target>
        </trans-unit>
        <trans-unit id="e465834c5c26feb2d872cdbce01cc8105d306bf8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getIndexSchema()</source>
          <target state="translated">\ ActiveRecord getIndexSchema ()</target>
        </trans-unit>
        <trans-unit id="885432607f507d5dc3623c3c357166686aefcbec" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getOldPrimaryKey()</source>
          <target state="translated">\ ActiveRecord getOldPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="265287d218160f2fe8faf493bb3cb1615db58fb6" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getPrimaryKey()</source>
          <target state="translated">\ ActiveRecord getPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="08b033e5cf3fc35a02204d3a35168a14e7a5414c" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getScore()</source>
          <target state="translated">\ ActiveRecord getScore ()</target>
        </trans-unit>
        <trans-unit id="d3945670fa9961037a2c507a61295afeb8c075a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippet()</source>
          <target state="translated">\ ActiveRecord getSnippet ()</target>
        </trans-unit>
        <trans-unit id="3d7997f1b28863aff8e7062dec606b2fde24f889" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getSnippetSource()</source>
          <target state="translated">\ ActiveRecord getSnippetSource ()</target>
        </trans-unit>
        <trans-unit id="d0a22108dc8f2159d88a56aaee75295b15fe17a5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord getTableSchema()</source>
          <target state="translated">\ ActiveRecord getTableSchema ()</target>
        </trans-unit>
        <trans-unit id="0f781cc215052c0113e49c1c608f949123a16041" translate="yes" xml:space="preserve">
          <source>\ActiveRecord index()</source>
          <target state="translated">\ ActiveRecord 인덱스 ()</target>
        </trans-unit>
        <trans-unit id="3ce65d0fd997a1b13a31d0467f060182c56d72a8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord indexName()</source>
          <target state="translated">\ ActiveRecord indexName ()</target>
        </trans-unit>
        <trans-unit id="dd908a103e30b8c68e4096ce267b7b0ee298e1e4" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insert()</source>
          <target state="translated">\ ActiveRecord insert ()</target>
        </trans-unit>
        <trans-unit id="27bd1eb8728fd6cc9ac03467643f83ce45f06f55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord insertInternal()</source>
          <target state="translated">\ ActiveRecord insertInternal ()</target>
        </trans-unit>
        <trans-unit id="238d68b57498b5fb7812d61c69e2fb3c95350abe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord instantiate()</source>
          <target state="translated">\ ActiveRecord instantiate ()</target>
        </trans-unit>
        <trans-unit id="71a4d756840628b6013dc94a65fa90625f76e064" translate="yes" xml:space="preserve">
          <source>\ActiveRecord isTransactional()</source>
          <target state="translated">\ ActiveRecord isTransactional ()</target>
        </trans-unit>
        <trans-unit id="7b8ab42d36ca7d68659b08522006deb3599a8f5e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord keyPrefix()</source>
          <target state="translated">\ ActiveRecord keyPrefix ()</target>
        </trans-unit>
        <trans-unit id="a31448a6aa3c2b29c37d3c12983a236767a4ef28" translate="yes" xml:space="preserve">
          <source>\ActiveRecord loadDefaultValues()</source>
          <target state="translated">\ ActiveRecord loadDefaultValues ​​()</target>
        </trans-unit>
        <trans-unit id="08fbcdaa4a311630e55b3f2307a4d56de8b2a9f5" translate="yes" xml:space="preserve">
          <source>\ActiveRecord mget()</source>
          <target state="translated">\ ActiveRecord mget ()</target>
        </trans-unit>
        <trans-unit id="41437fc47d4e7e760da677c51ec82cc51ddf8c0d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord optimisticLock()</source>
          <target state="translated">\ ActiveRecord optimisticLock ()</target>
        </trans-unit>
        <trans-unit id="2d3db41849b69f4dd503b07f2e20db9375f52ca3" translate="yes" xml:space="preserve">
          <source>\ActiveRecord populateRecord()</source>
          <target state="translated">\ ActiveRecord populateRecord ()</target>
        </trans-unit>
        <trans-unit id="b1ab79fdaa6fa3ce5cb545059c38c61392216fd8" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKey()</source>
          <target state="translated">\ ActiveRecord primaryKey ()</target>
        </trans-unit>
        <trans-unit id="42ba5ceaae177a15c15940a7428e3ba5a0e7ab5f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord primaryKeysByCondition()</source>
          <target state="translated">\ ActiveRecord primaryKeysByCondition ()</target>
        </trans-unit>
        <trans-unit id="0c7170030fa3de7cdfceef3f5a7452410207c368" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setPrimaryKey()</source>
          <target state="translated">\ ActiveRecord setPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="fbff2898c943687cd09074ae95777a8afeb85970" translate="yes" xml:space="preserve">
          <source>\ActiveRecord setSnippet()</source>
          <target state="translated">\ ActiveRecord setSnippet ()</target>
        </trans-unit>
        <trans-unit id="a29ada4a39677cd5380f4a2ce5556edebae8b539" translate="yes" xml:space="preserve">
          <source>\ActiveRecord tableName()</source>
          <target state="translated">\ ActiveRecord tableName ()</target>
        </trans-unit>
        <trans-unit id="f79adc895520603efc96ad1a96af49ba1573c21b" translate="yes" xml:space="preserve">
          <source>\ActiveRecord toArray()</source>
          <target state="translated">\ ActiveRecord toArray ()</target>
        </trans-unit>
        <trans-unit id="b0baa51e984c8e0aeacfda1d3623430ab9050ffe" translate="yes" xml:space="preserve">
          <source>\ActiveRecord transactions()</source>
          <target state="translated">\ ActiveRecord 거래 ()</target>
        </trans-unit>
        <trans-unit id="614a9d1251d0db8d2d3abf7e80459b80ab32157d" translate="yes" xml:space="preserve">
          <source>\ActiveRecord type()</source>
          <target state="translated">\ Active 레코드 유형 ()</target>
        </trans-unit>
        <trans-unit id="d5cae26838ba94849e9f77b120f3b55521083e55" translate="yes" xml:space="preserve">
          <source>\ActiveRecord unlinkAll()</source>
          <target state="translated">\ ActiveRecord unlinkAll ()</target>
        </trans-unit>
        <trans-unit id="afc7a640ee57a7dca78b532036f1f6a0d942700e" translate="yes" xml:space="preserve">
          <source>\ActiveRecord update()</source>
          <target state="translated">\ ActiveRecord update ()</target>
        </trans-unit>
        <trans-unit id="c978be1b0b119e1c6e3bf2f5c83182dc9614eda2" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAll()</source>
          <target state="translated">\ ActiveRecord updateAll ()</target>
        </trans-unit>
        <trans-unit id="d3f1c020d37cde417592e3cd4f35a944c6df677f" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateAllCounters()</source>
          <target state="translated">\ ActiveRecord updateAllCounters ()</target>
        </trans-unit>
        <trans-unit id="69079575176621231312e60d5bbd7bada99f3e33" translate="yes" xml:space="preserve">
          <source>\ActiveRecord updateInternal()</source>
          <target state="translated">\ ActiveRecord updateInternal ()</target>
        </trans-unit>
        <trans-unit id="eca51b3097c11e2c62e9ee15fbd4d46c08b4bbcb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface</source>
          <target state="translated">\ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="ff352bd367202eabc65abf5620b076d09b255de7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface attributes()</source>
          <target state="translated">\ ActiveRecordInterface 특성 ()</target>
        </trans-unit>
        <trans-unit id="720df21a18e16e6c135e5e2f31ecf819195c8d35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface delete()</source>
          <target state="translated">\ ActiveRecordInterface delete ()</target>
        </trans-unit>
        <trans-unit id="7df605179ed323cfa9d3cc01b842d31aeb6f1969" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface deleteAll()</source>
          <target state="translated">\ ActiveRecordInterface deleteAll ()</target>
        </trans-unit>
        <trans-unit id="e13456027b814107ec320084700de03598d42abc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface equals()</source>
          <target state="translated">\ ActiveRecordInterface equals ()</target>
        </trans-unit>
        <trans-unit id="79916814fa47a72ec94926c8825d15cb69105431" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface find()</source>
          <target state="translated">\ ActiveRecordInterface find ()</target>
        </trans-unit>
        <trans-unit id="19e2990cf8d11958131629b3759dddbcf037d5c1" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findAll()</source>
          <target state="translated">\ ActiveRecordInterface findAll ()</target>
        </trans-unit>
        <trans-unit id="66478aedd442ffba0ae3ba320a265324f4355be2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface findOne()</source>
          <target state="translated">\ ActiveRecordInterface findOne ()</target>
        </trans-unit>
        <trans-unit id="0e4e981982998488362ca3a9fc756d33e790e662" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getAttribute()</source>
          <target state="translated">\ ActiveRecordInterface getAttribute ()</target>
        </trans-unit>
        <trans-unit id="2990d48d0b30ab75e3608dce5b7cefdc9007ec93" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getDb()</source>
          <target state="translated">\ ActiveRecordInterface getDb ()</target>
        </trans-unit>
        <trans-unit id="d8d972e68e87df05b64ecaf11e51035be16fd073" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getIsNewRecord()</source>
          <target state="translated">\ ActiveRecordInterface getIsNewRecord ()</target>
        </trans-unit>
        <trans-unit id="f90436a83ca11709cf0906b5b80d4624721333e7" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getOldPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface getOldPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="9827e98996fce645ffd273220a5092a9f5005e6b" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface getPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="4036739cdcc2c3891e6996dab20f8eed2d972f96" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface getRelation()</source>
          <target state="translated">\ ActiveRecordInterface getRelation ()</target>
        </trans-unit>
        <trans-unit id="d89042ac9e830a74013eb6f8ea0085486b79fb35" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface hasAttribute()</source>
          <target state="translated">\ ActiveRecordInterface hasAttribute ()</target>
        </trans-unit>
        <trans-unit id="fbd6fb33cc0e9cc44ff5b773335c047df3a4200e" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface insert()</source>
          <target state="translated">\ ActiveRecordInterface insert ()</target>
        </trans-unit>
        <trans-unit id="fb5148cc266970a4139bbd821065dc731d3b57f2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface isPrimaryKey()</source>
          <target state="translated">\ ActiveRecordInterface isPrimaryKey ()</target>
        </trans-unit>
        <trans-unit id="a781526cbad7ef6bc2543fb157dafe81c29f9ec2" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface link()</source>
          <target state="translated">\ ActiveRecordInterface 링크 ()</target>
        </trans-unit>
        <trans-unit id="768d5f148ec133222610a95a24d8f9e175f1e1cc" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface populateRelation()</source>
          <target state="translated">\ ActiveRecordInterface populateRelation ()</target>
        </trans-unit>
        <trans-unit id="dd26eac2fc67f9face90d7c38fdaee67ad322acb" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface primaryKey()</source>
          <target state="translated">\ ActiveRecordInterface primaryKey ()</target>
        </trans-unit>
        <trans-unit id="cdf4110be164abecce92ae0045686307190de145" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface save()</source>
          <target state="translated">\ ActiveRecordInterface save ()</target>
        </trans-unit>
        <trans-unit id="f2f8ab987c92f0d2b2c29b504e140ea73a61f6d8" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface setAttribute()</source>
          <target state="translated">\ ActiveRecordInterface setAttribute ()</target>
        </trans-unit>
        <trans-unit id="045665fa5d86c6cfee924321bf7f555fb981742d" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface unlink()</source>
          <target state="translated">\ ActiveRecordInterface unlink ()</target>
        </trans-unit>
        <trans-unit id="2beb3fd187a2328a99304bc1c9ac05e39669e6ca" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface update()</source>
          <target state="translated">\ ActiveRecordInterface update ()</target>
        </trans-unit>
        <trans-unit id="3dec7e60f266a2e62c5313ff8f3e92cf08deb010" translate="yes" xml:space="preserve">
          <source>\ActiveRecordInterface updateAll()</source>
          <target state="translated">\ ActiveRecordInterface updateAll ()</target>
        </trans-unit>
        <trans-unit id="6bfb127896a41a488d46d22d9193635cb4acb3bb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait</source>
          <target state="translated">\ActiveRelationTrait</target>
        </trans-unit>
        <trans-unit id="73a4fc3b602ddd52b549a2de5b348de48b4e50f7" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $inverseOf</source>
          <target state="translated">\ ActiveRelationTrait $ inverseOf</target>
        </trans-unit>
        <trans-unit id="feca4c9f24ae9f4f8ce0295692c591167c392985" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $link</source>
          <target state="translated">\ ActiveRelationTrait $ 링크</target>
        </trans-unit>
        <trans-unit id="83ee72f8e2d11df64aacd74a8e721a5409ab02e0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $multiple</source>
          <target state="translated">\ ActiveRelationTrait $ 여러</target>
        </trans-unit>
        <trans-unit id="f3862c79e0e7aed43d72972cc1f5ae657e41f5ae" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $primaryModel</source>
          <target state="translated">\ ActiveRelationTrait $ primaryModel</target>
        </trans-unit>
        <trans-unit id="cc846139b31d26804ad036514250df882dfbbfdb" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait $via</source>
          <target state="translated">\ ActiveRelationTrait $ via</target>
        </trans-unit>
        <trans-unit id="afb4c44009ae9e37a40eddc0346bf623988cc49b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait __clone()</source>
          <target state="translated">\ ActiveRelationTrait __clone ()</target>
        </trans-unit>
        <trans-unit id="72f71600a4b96342dce3fdcdcab9fab53cdcd0a0" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait findFor()</source>
          <target state="translated">\ ActiveRelationTrait findFor ()</target>
        </trans-unit>
        <trans-unit id="7d9a053f4a0beda19daaff9e97a843623538f131" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait inverseOf()</source>
          <target state="translated">\ ActiveRelationTrait inverseOf ()</target>
        </trans-unit>
        <trans-unit id="c68c7406c7bfd157770f24d7cdf6b512ef7f5b6c" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait populateRelation()</source>
          <target state="translated">\ ActiveRelationTrait populateRelation ()</target>
        </trans-unit>
        <trans-unit id="196e07a651b255f92981398697ecedddfd3e5b0b" translate="yes" xml:space="preserve">
          <source>\ActiveRelationTrait via()</source>
          <target state="translated">\ ActiveRelationTrait via ()</target>
        </trans-unit>
        <trans-unit id="d4257f8e52daf9f039382d7a727f2b6c7dde12ea" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent</source>
          <target state="translated">\AfterSaveEvent</target>
        </trans-unit>
        <trans-unit id="606223a16970d6b5d706a4eccc01c6fe1814bbb9" translate="yes" xml:space="preserve">
          <source>\AfterSaveEvent $changedAttributes</source>
          <target state="translated">\ AfterSaveEvent $ changedAttributes</target>
        </trans-unit>
        <trans-unit id="b8783f4623a6f06122d3f74d245bc1047608e74a" translate="yes" xml:space="preserve">
          <source>\Alert</source>
          <target state="translated">\Alert</target>
        </trans-unit>
        <trans-unit id="521230d1ac463b695161858c4581e94fabf27903" translate="yes" xml:space="preserve">
          <source>\Alert $body</source>
          <target state="translated">\ 경고 $ body</target>
        </trans-unit>
        <trans-unit id="c2a904c262289e38284fe37e50f847bfde6817b4" translate="yes" xml:space="preserve">
          <source>\Alert $closeButton</source>
          <target state="translated">\ 경고 $ closeButton</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
