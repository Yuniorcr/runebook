<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="0d53af26571cbbd62fcf3d09e417e17047863c14" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.6</source>
          <target state="translated">추가 : v0.5.6</target>
        </trans-unit>
        <trans-unit id="b0ee64cf54c3667bbe977b25b3e1e94adb9d7302" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.8</source>
          <target state="translated">추가 : v0.5.8</target>
        </trans-unit>
        <trans-unit id="05899ae053d4be3973e95c23d94118788f0b1bc3" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.9</source>
          <target state="translated">추가 : v0.5.9</target>
        </trans-unit>
        <trans-unit id="51078e7ad31f0ec03e302587bfa094ff45347296" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.0</source>
          <target state="translated">추가 : v0.6.0</target>
        </trans-unit>
        <trans-unit id="9d05b499c5edb2d84fb1ddcf6135318501815a03" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.0Deprecated since: v4.0.0</source>
          <target state="translated">v0.6.0에서 추가됨</target>
        </trans-unit>
        <trans-unit id="64779602c602b8b2716224ff234f7fa23eb7166d" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.1</source>
          <target state="translated">추가 : v0.6.1</target>
        </trans-unit>
        <trans-unit id="b31124a291f294d155b8dceff660847caaad8608" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.4</source>
          <target state="translated">추가 : v0.6.4</target>
        </trans-unit>
        <trans-unit id="f68eb6e7351ef7c1d51323db911182e298dbc5ba" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.7</source>
          <target state="translated">추가 : v0.6.7</target>
        </trans-unit>
        <trans-unit id="a9be54459dda9073626d61990bee890199c260fc" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.9</source>
          <target state="translated">추가 : v0.6.9</target>
        </trans-unit>
        <trans-unit id="61166c25fd07d67f54d6195f020d8f7be2351a72" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.0</source>
          <target state="translated">추가 : v0.7.0</target>
        </trans-unit>
        <trans-unit id="40013cde1f01f23a53e93e45415813326b18c6cc" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.1</source>
          <target state="translated">추가 : v0.7.1</target>
        </trans-unit>
        <trans-unit id="af6662bf38a771ca5ef57c21e1d8471225f80b05" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.10</source>
          <target state="translated">추가 : v0.7.10</target>
        </trans-unit>
        <trans-unit id="ac64a8fc3cfc9dd8d36f32468a7986325901da29" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.11</source>
          <target state="translated">추가 : v0.7.11</target>
        </trans-unit>
        <trans-unit id="9160f6c4f133897b87b9e08db5eb055b5ecdda8b" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.2</source>
          <target state="translated">추가 : v0.7.2</target>
        </trans-unit>
        <trans-unit id="27835813f9628da68cac6d88e3de484dfc54f8e0" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.3</source>
          <target state="translated">추가 : v0.7.3</target>
        </trans-unit>
        <trans-unit id="bec7bec30fab9598f28647cbbbdb4bfdf78a4770" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.5</source>
          <target state="translated">추가 : v0.7.5</target>
        </trans-unit>
        <trans-unit id="3a29349fc978f8913bf3035da7ae8a7386e39752" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.5Deprecated since: v6.0.0</source>
          <target state="translated">v0.7.5에서 추가됨</target>
        </trans-unit>
        <trans-unit id="f59026a0257858b3b75c361d94555a394cfee909" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.6</source>
          <target state="translated">추가 : v0.7.6</target>
        </trans-unit>
        <trans-unit id="e9f50f68a3eb9450bbe2c30079b917e70583fbac" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.7</source>
          <target state="translated">추가 : v0.7.7</target>
        </trans-unit>
        <trans-unit id="63c89f3d12fd26b96fde7f05e4a46f39a579daba" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.8</source>
          <target state="translated">추가 : v0.7.8</target>
        </trans-unit>
        <trans-unit id="3ea13918eacbaed2fb65aa02866a5cc4b1b4799f" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.9</source>
          <target state="translated">추가 : v0.7.9</target>
        </trans-unit>
        <trans-unit id="92bb4a4d2eed8f616f9191c6e654cfaa5876e6bc" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.0</source>
          <target state="translated">추가 : v0.8.0</target>
        </trans-unit>
        <trans-unit id="3fb5c2d724d584bc8a237f7c1975977109dacf1b" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.1</source>
          <target state="translated">추가 : v0.8.1</target>
        </trans-unit>
        <trans-unit id="442a920eee00297774b080c34e42d4dbe8ac0bf2" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.4</source>
          <target state="translated">추가 : v0.8.4</target>
        </trans-unit>
        <trans-unit id="18f64dc96b697b6918d1b37ff4c58fb7b93345aa" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.6</source>
          <target state="translated">추가 : v0.8.6</target>
        </trans-unit>
        <trans-unit id="7ea695f7aa209e7a39e55c5db6a88cbc19d68294" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.9Deprecated since: v9.0.0</source>
          <target state="translated">v0.8.9 추가 된 버전 : v9.0.0</target>
        </trans-unit>
        <trans-unit id="c92ab1da5161463e076ac593bbc2298e087afe02" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.1</source>
          <target state="translated">추가 : v0.9.1</target>
        </trans-unit>
        <trans-unit id="d2809db4aab0c462ba9a3530e7972d13fd7f9580" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.11</source>
          <target state="translated">추가 : v0.9.11</target>
        </trans-unit>
        <trans-unit id="555bae67206eb88cf4328dd3b283cfcee1dda518" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12</source>
          <target state="translated">추가 : v0.9.12</target>
        </trans-unit>
        <trans-unit id="af2fb0ac0ceac5263a93a4978f163582e12d66f3" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12Deprecated since: v3.2.0</source>
          <target state="translated">Added in: v0.9.12Deprecated since: v3.2.0</target>
        </trans-unit>
        <trans-unit id="6a10895b6e1170db3d2a6c9ac4cd5620b6292efe" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12Deprecated since: v4.0.0</source>
          <target state="translated">v0.9.12에서 추가됨</target>
        </trans-unit>
        <trans-unit id="8609ea91d373589d2c2745202c28cf10de2385d2" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.2</source>
          <target state="translated">추가 : v0.9.2</target>
        </trans-unit>
        <trans-unit id="bfa3a1ad733317642ad47d235d2242d8bb63e23b" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.3</source>
          <target state="translated">추가 : v0.9.3</target>
        </trans-unit>
        <trans-unit id="c6fc669c89ccf747134c941afaecc8cf1bdace25" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.3Deprecated since: v10.0.0</source>
          <target state="translated">v0.9.3에서 추가됨</target>
        </trans-unit>
        <trans-unit id="08b6d1fc88859f5f89f6cb46a4cd33bc9e1693b4" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.4</source>
          <target state="translated">추가 : v0.9.4</target>
        </trans-unit>
        <trans-unit id="e9207b4477f180b6f29d03937da22bfe25a64c1c" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.6</source>
          <target state="translated">추가 : v0.9.6</target>
        </trans-unit>
        <trans-unit id="9c3985ed2c3203a398cb1760b80f69dc4c471f09" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.7</source>
          <target state="translated">추가 : v0.9.7</target>
        </trans-unit>
        <trans-unit id="c4348c919e04b89dd61cee5de62e4d713c1b447d" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.9</source>
          <target state="translated">추가 : v0.9.9</target>
        </trans-unit>
        <trans-unit id="6f0a4e03ee695899cbcc95d7c625995f8b9dffdf" translate="yes" xml:space="preserve">
          <source>Added in: v1.0.0</source>
          <target state="translated">추가 : v1.0.0</target>
        </trans-unit>
        <trans-unit id="244e41c4d86880839fc3d719bf85b404bf774c85" translate="yes" xml:space="preserve">
          <source>Added in: v1.1.0</source>
          <target state="translated">추가 : v1.1.0</target>
        </trans-unit>
        <trans-unit id="0a328c5e0b5868eede531d11c5bc3f4424cb4e95" translate="yes" xml:space="preserve">
          <source>Added in: v1.2.0</source>
          <target state="translated">추가 : v1.2.0</target>
        </trans-unit>
        <trans-unit id="63e78cc3efc6e8bc65401c3200d38d1d6a39a660" translate="yes" xml:space="preserve">
          <source>Added in: v1.4.1</source>
          <target state="translated">추가 : v1.4.1</target>
        </trans-unit>
        <trans-unit id="7433fd19352b2049ef1333d8a2efb1023deac5b8" translate="yes" xml:space="preserve">
          <source>Added in: v1.5.0</source>
          <target state="translated">추가 : v1.5.0</target>
        </trans-unit>
        <trans-unit id="e75cd6dfd3f779a8d6477754349efd0b3ed362bf" translate="yes" xml:space="preserve">
          <source>Added in: v1.6.0</source>
          <target state="translated">추가 : v1.6.0</target>
        </trans-unit>
        <trans-unit id="aaa0f85e5408cae990da24d5879c5a02a0b4450b" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0</source>
          <target state="translated">추가 : v10.0.0</target>
        </trans-unit>
        <trans-unit id="1a8c51e54bec0fe5f74e9fc613c0e5826dd946e0" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0Deprecated since: v14.0.0</source>
          <target state="translated">Added in: v10.0.0Deprecated since: v14.0.0</target>
        </trans-unit>
        <trans-unit id="58eb513cd57f436f381b52e23ed098e7cb3f4e6e" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0Removed in: v11.0.0</source>
          <target state="translated">추가 : v10.0.0에서 제거 : v11.0.0</target>
        </trans-unit>
        <trans-unit id="3a5584c586d78efe609fa2a4997ab5ebc76a9acc" translate="yes" xml:space="preserve">
          <source>Added in: v10.1.0</source>
          <target state="translated">추가 : v10.1.0</target>
        </trans-unit>
        <trans-unit id="0dcef76a6c7954cc0bd3d20d7435af9a37713258" translate="yes" xml:space="preserve">
          <source>Added in: v10.10.0</source>
          <target state="translated">추가 : v10.10.0</target>
        </trans-unit>
        <trans-unit id="cb1027b1ed3f7294f2c3e252c4234f6ffccc6ff4" translate="yes" xml:space="preserve">
          <source>Added in: v10.11.0</source>
          <target state="translated">추가 : v10.11.0</target>
        </trans-unit>
        <trans-unit id="ff2e062e9df6155a3b3632a0e7ee12bf9d22cf00" translate="yes" xml:space="preserve">
          <source>Added in: v10.12.0</source>
          <target state="translated">추가 : v10.12.0</target>
        </trans-unit>
        <trans-unit id="7c78f3d30ba03951eb1f1460d2360da45b6701e4" translate="yes" xml:space="preserve">
          <source>Added in: v10.12.0Deprecated since: v12.2.0</source>
          <target state="translated">v10.12.0에서 추가됨</target>
        </trans-unit>
        <trans-unit id="df11c4c8aff0c009a29f6fbb6810300d44c4cf2d" translate="yes" xml:space="preserve">
          <source>Added in: v10.2.0</source>
          <target state="translated">추가 : v10.2.0</target>
        </trans-unit>
        <trans-unit id="675806db1106ad6240c6d7a37665e06e681b1369" translate="yes" xml:space="preserve">
          <source>Added in: v10.2.0N-API version: 3</source>
          <target state="translated">추가 : v10.2.0N-API 버전 : 3</target>
        </trans-unit>
        <trans-unit id="3a2974e3b17fc5954ff0bb6d4ba820c0ed87da2c" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0</source>
          <target state="translated">추가 : v10.5.0</target>
        </trans-unit>
        <trans-unit id="583c5539525b61795acde7de06cf08a6a7cd467f" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0Removed in: v11.12.0</source>
          <target state="translated">추가 : v10.5.0에서 제거 : v11.12.0</target>
        </trans-unit>
        <trans-unit id="277e333c92e094946e3c7dac856c7ce3556918da" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0Removed in: v14.0.0</source>
          <target state="translated">Added in: v10.5.0Removed in: v14.0.0</target>
        </trans-unit>
        <trans-unit id="fbe042e33641a2d941c2f1ff4fb52e8d54064b8a" translate="yes" xml:space="preserve">
          <source>Added in: v10.6.0</source>
          <target state="translated">추가 : v10.6.0</target>
        </trans-unit>
        <trans-unit id="04482cf2e56eb3184710b9ebee3ffed2abda3d00" translate="yes" xml:space="preserve">
          <source>Added in: v10.6.0N-API version: 4</source>
          <target state="translated">추가 : v10.6.0N-API 버전 : 4</target>
        </trans-unit>
        <trans-unit id="ffb5baef61236b9a24e1f20777089b7afa37935f" translate="yes" xml:space="preserve">
          <source>Added in: v10.7.0</source>
          <target state="translated">추가 : v10.7.0</target>
        </trans-unit>
        <trans-unit id="7c8bfa887dcb2ccedb1e471a58aa95cb4dbf0c1c" translate="yes" xml:space="preserve">
          <source>Added in: v10.7.0N-API version: 6</source>
          <target state="translated">Added in: v10.7.0N-API version: 6</target>
        </trans-unit>
        <trans-unit id="6e5d0d7f8fa6c08b4ab8b405be0456320f70f666" translate="yes" xml:space="preserve">
          <source>Added in: v11.0.0</source>
          <target state="translated">추가 : v11.0.0</target>
        </trans-unit>
        <trans-unit id="6591837e223ec9f3845a8956fa2809427566449f" translate="yes" xml:space="preserve">
          <source>Added in: v11.10.0</source>
          <target state="translated">추가 : v11.10.0</target>
        </trans-unit>
        <trans-unit id="a99ce8ce73d454321c6198e528cec63aa558ff2c" translate="yes" xml:space="preserve">
          <source>Added in: v11.11.0</source>
          <target state="translated">추가 : v11.11.0</target>
        </trans-unit>
        <trans-unit id="f9bff9568708d6b1010188be7406b599f1717bbe" translate="yes" xml:space="preserve">
          <source>Added in: v11.11.0, v10.17.0N-API version: 5</source>
          <target state="translated">Added in: v11.11.0, v10.17.0N-API version: 5</target>
        </trans-unit>
        <trans-unit id="7ebf55202956dbc9c9dd21380d3ed1c48be8cd0b" translate="yes" xml:space="preserve">
          <source>Added in: v11.12.0</source>
          <target state="translated">추가 : v11.12.0</target>
        </trans-unit>
        <trans-unit id="98d8bed740242080008c08502c3130aa5c808b98" translate="yes" xml:space="preserve">
          <source>Added in: v11.13.0</source>
          <target state="translated">추가 : v11.13.0</target>
        </trans-unit>
        <trans-unit id="23f4215c7f25a66298ea9b5e8e4fad447f1c3e38" translate="yes" xml:space="preserve">
          <source>Added in: v11.13.0, v10.16.0</source>
          <target state="translated">Added in: v11.13.0, v10.16.0</target>
        </trans-unit>
        <trans-unit id="7a43329d24847202acf8f2abb2d01460665288a2" translate="yes" xml:space="preserve">
          <source>Added in: v11.14.0</source>
          <target state="translated">추가 : v11.14.0</target>
        </trans-unit>
        <trans-unit id="55c6265a9d48a2fab186588c4b9e3f37c5127e67" translate="yes" xml:space="preserve">
          <source>Added in: v11.2.0</source>
          <target state="translated">추가 된 기능 : v11.2.0</target>
        </trans-unit>
        <trans-unit id="c45a41d9ab56aea6a59becd6bc941eca1714e6d7" translate="yes" xml:space="preserve">
          <source>Added in: v11.2.0, v10.16.0</source>
          <target state="translated">Added in: v11.2.0, v10.16.0</target>
        </trans-unit>
        <trans-unit id="cd57cf8264f208bf67f4be994daf33b96c1480e9" translate="yes" xml:space="preserve">
          <source>Added in: v11.3.0</source>
          <target state="translated">추가 : v11.3.0</target>
        </trans-unit>
        <trans-unit id="5a33f24a17d8cb6e70032541da5c35b394758a27" translate="yes" xml:space="preserve">
          <source>Added in: v11.3.0, v10.14.0</source>
          <target state="translated">Added in: v11.3.0, v10.14.0</target>
        </trans-unit>
        <trans-unit id="8d82876229b1ac880c9dba570584963ed57d5d75" translate="yes" xml:space="preserve">
          <source>Added in: v11.4.0</source>
          <target state="translated">추가 : v11.4.0</target>
        </trans-unit>
        <trans-unit id="bdb976bb6d9a957d938656937302ec2bfd63b478" translate="yes" xml:space="preserve">
          <source>Added in: v11.4.0, v10.16.0</source>
          <target state="translated">Added in: v11.4.0, v10.16.0</target>
        </trans-unit>
        <trans-unit id="c74d1c947c9af33f62bfcbcffda858c9fc89cf6e" translate="yes" xml:space="preserve">
          <source>Added in: v11.6.0</source>
          <target state="translated">추가 : v11.6.0</target>
        </trans-unit>
        <trans-unit id="862fa65414ab0673906bd405bf2d3fe714fd2d3f" translate="yes" xml:space="preserve">
          <source>Added in: v11.6.0, v10.15.0</source>
          <target state="translated">Added in: v11.6.0, v10.15.0</target>
        </trans-unit>
        <trans-unit id="6820e1bd707463ad6cd4051b5dbcd150942e59ec" translate="yes" xml:space="preserve">
          <source>Added in: v11.7.0</source>
          <target state="translated">추가 : v11.7.0</target>
        </trans-unit>
        <trans-unit id="02ab8d2bc2855fe65a4a884f0f74d4e834134b65" translate="yes" xml:space="preserve">
          <source>Added in: v11.7.0, v10.16.0</source>
          <target state="translated">Added in: v11.7.0, v10.16.0</target>
        </trans-unit>
        <trans-unit id="edcab9ffc04a69dc5671ba73eabb117cc27a1863" translate="yes" xml:space="preserve">
          <source>Added in: v11.8.0</source>
          <target state="translated">추가 된 기능 : v11.8.0</target>
        </trans-unit>
        <trans-unit id="e24655a5234800edea83158f38db7cfa50d5cbde" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0</source>
          <target state="translated">추가 : v12.0.0</target>
        </trans-unit>
        <trans-unit id="8cc4b4cb984ff4f191f310475e2228a21b65dae0" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0, v10.17.0</source>
          <target state="translated">Added in: v12.0.0, v10.17.0</target>
        </trans-unit>
        <trans-unit id="88909373746fb90530bdd89b43b5263f80a6f8e0" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0, v10.20.0</source>
          <target state="translated">Added in: v12.0.0, v10.20.0</target>
        </trans-unit>
        <trans-unit id="6b8c38ae2abc524da8879c711729bd10d961d3a4" translate="yes" xml:space="preserve">
          <source>Added in: v12.10.0</source>
          <target state="translated">Added in: v12.10.0</target>
        </trans-unit>
        <trans-unit id="8eee16ad1b7b7232640032fdb7e1691e41e3147d" translate="yes" xml:space="preserve">
          <source>Added in: v12.11.0</source>
          <target state="translated">Added in: v12.11.0</target>
        </trans-unit>
        <trans-unit id="6a151297f091de4cc8699871eef370660a320910" translate="yes" xml:space="preserve">
          <source>Added in: v12.12.0</source>
          <target state="translated">Added in: v12.12.0</target>
        </trans-unit>
        <trans-unit id="a019b37a4d1afefecfaf40974564fa1ff46542ca" translate="yes" xml:space="preserve">
          <source>Added in: v12.2.0</source>
          <target state="translated">추가 된 기능 : v12.2.0</target>
        </trans-unit>
        <trans-unit id="ddf5ee4754773a631f03158235e1cf12fcecbfde" translate="yes" xml:space="preserve">
          <source>Added in: v12.2.0, v10.20.0</source>
          <target state="translated">Added in: v12.2.0, v10.20.0</target>
        </trans-unit>
        <trans-unit id="1f5f0df1bdfe5dad5458494e4f7ba2f1d93d1787" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0</source>
          <target state="translated">추가 : v12.3.0</target>
        </trans-unit>
        <trans-unit id="2bb9d2b11fcd925d38a9fcbc0772b9ae03d86871" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0, v10.17.0</source>
          <target state="translated">Added in: v12.3.0, v10.17.0</target>
        </trans-unit>
        <trans-unit id="c74b497565955c560a80c352b889c43688b6bbfe" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0, v10.20.0</source>
          <target state="translated">Added in: v12.3.0, v10.20.0</target>
        </trans-unit>
        <trans-unit id="cc91b71c884332422f10c3465c07d27690c47c26" translate="yes" xml:space="preserve">
          <source>Added in: v12.4.0</source>
          <target state="translated">추가 : v12.4.0</target>
        </trans-unit>
        <trans-unit id="842168443d6165e38987048b754cc5faaa48c181" translate="yes" xml:space="preserve">
          <source>Added in: v12.6.0</source>
          <target state="translated">추가 : v12.6.0</target>
        </trans-unit>
        <trans-unit id="34a8b19cf1f032f496b8f29ec22288e13bebffe8" translate="yes" xml:space="preserve">
          <source>Added in: v12.7.0</source>
          <target state="translated">추가 : v12.7.0</target>
        </trans-unit>
        <trans-unit id="0a2caa6e96ee5a58daf3d4a441e6c86ef2e8412e" translate="yes" xml:space="preserve">
          <source>Added in: v12.8.0</source>
          <target state="translated">추가 된 기능 : v12.8.0</target>
        </trans-unit>
        <trans-unit id="fbf3d130c7a2e489c6395eaa9422fe1a6b1ac0d7" translate="yes" xml:space="preserve">
          <source>Added in: v12.8.0, v10.20.0N-API version: 6</source>
          <target state="translated">Added in: v12.8.0, v10.20.0N-API version: 6</target>
        </trans-unit>
        <trans-unit id="32693587adf05963df429990a1e9b74d7e6b8a41" translate="yes" xml:space="preserve">
          <source>Added in: v12.9.0</source>
          <target state="translated">추가 : v12.9.0</target>
        </trans-unit>
        <trans-unit id="c1084383e372c63baa021ef3efec0a8b3efedd76" translate="yes" xml:space="preserve">
          <source>Added in: v13.0.0, v12.16.0</source>
          <target state="translated">Added in: v13.0.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="0fae2f6210167376f04478c9f3c568e9e302a6f3" translate="yes" xml:space="preserve">
          <source>Added in: v13.0.0, v12.16.0, v10.22.0N-API version: 7</source>
          <target state="translated">추가 : v13.0.0, v12.16.0, v10.22.0N-API 버전 : 7</target>
        </trans-unit>
        <trans-unit id="fd7088aafd4c458f6a8642c7831de2792e1299ff" translate="yes" xml:space="preserve">
          <source>Added in: v13.1.0</source>
          <target state="translated">추가 : v13.1.0</target>
        </trans-unit>
        <trans-unit id="fc5d51d6c6331ebb7098ef396f95772578254d41" translate="yes" xml:space="preserve">
          <source>Added in: v13.1.0, v12.16.0</source>
          <target state="translated">추가 : v13.1.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="780a3e3929d2c00e0bcd21c12cd694d49d4b01d1" translate="yes" xml:space="preserve">
          <source>Added in: v13.10.0</source>
          <target state="translated">추가 : v13.10.0</target>
        </trans-unit>
        <trans-unit id="2afac72afa0f7284f93bcc79e934192342cc6cc1" translate="yes" xml:space="preserve">
          <source>Added in: v13.10.0, v12.17.0</source>
          <target state="translated">추가 : v13.10.0, v12.17.0</target>
        </trans-unit>
        <trans-unit id="cc8615ac72956c3094011134fcca264dea323232" translate="yes" xml:space="preserve">
          <source>Added in: v13.11.0</source>
          <target state="translated">추가 : v13.11.0</target>
        </trans-unit>
        <trans-unit id="16c9ac2acb5be89bf48fbc7486cadc2c5dd861e4" translate="yes" xml:space="preserve">
          <source>Added in: v13.11.0, v12.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d978e5db3af1a67df66bb4639c2e620eed828a3" translate="yes" xml:space="preserve">
          <source>Added in: v13.12.0</source>
          <target state="translated">추가 : v13.12.0</target>
        </trans-unit>
        <trans-unit id="a6888f84eb16352ee8ea1b0124f18c6728170370" translate="yes" xml:space="preserve">
          <source>Added in: v13.12.0, v12.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d8a5b9c489e17859f14b8918c75aa0ff52de8a" translate="yes" xml:space="preserve">
          <source>Added in: v13.13.0, v12.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1a3e57cebd0326f87bb5d452930ea11bdeeaf8" translate="yes" xml:space="preserve">
          <source>Added in: v13.2.0, v12.16.0</source>
          <target state="translated">추가 : v13.2.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="afa4bdf7a559ceac3930c6ce51d0d2804a6dfa2b" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0</source>
          <target state="translated">추가 : v13.3.0</target>
        </trans-unit>
        <trans-unit id="fdb6e10855aa0780e6a39d752f141c82fa9599eb" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0, v12.16.0</source>
          <target state="translated">추가 : v13.3.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="69ce6504b1feb2930397bc593e97202cf4afe235" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0, v12.16.0, v10.22.0N-API version: 7</source>
          <target state="translated">추가 : v13.3.0, v12.16.0, v10.22.0N-API 버전 : 7</target>
        </trans-unit>
        <trans-unit id="75718b5a5064a759c799f86d046d222d388baf38" translate="yes" xml:space="preserve">
          <source>Added in: v13.4.0, v12.15.0, v10.19.0</source>
          <target state="translated">추가 : v13.4.0, v12.15.0, v10.19.0</target>
        </trans-unit>
        <trans-unit id="a78bf51e6fc5e8f18438c0ec6b57697ec79139b1" translate="yes" xml:space="preserve">
          <source>Added in: v13.4.0, v12.16.0</source>
          <target state="translated">추가 : v13.4.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="26bbaaf5fbf271a0b4c16cdc0170e4c3af91be3a" translate="yes" xml:space="preserve">
          <source>Added in: v13.5.0, v12.16.0</source>
          <target state="translated">추가 : v13.5.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="32590f149afa63d593e30187290c776b0a90eda6" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0</source>
          <target state="translated">추가 : v13.6.0</target>
        </trans-unit>
        <trans-unit id="dc2154cf5f60b6b9616743f23beae8cde6271856" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0, v12.16.0</source>
          <target state="translated">추가 : v13.6.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="9eefbb7464a8cb0ef433fd70020ddcff09fbd612" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0, v12.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedcecd6e53ca0602e48757a850d0ab86e1ce216" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0</source>
          <target state="translated">추가 : v13.7.0</target>
        </trans-unit>
        <trans-unit id="89ef62cc66e6e2be6a8d1d58644b70f4716623c8" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v10.20.0N-API version: 6</source>
          <target state="translated">추가 : v13.7.0, v10.20.0N-API 버전 : 6</target>
        </trans-unit>
        <trans-unit id="4627400a8fd434d5dbbfa7b8c5d7f34325772a4a" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v12.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2299eebbf029099f316e65aa7b1bd1a04c42e0e" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v12.17.0, v10.20.0N-API version: 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f308aaa9e03256d547308d9c3c0a40cbfcfe222" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0</source>
          <target state="translated">추가 : v13.9.0</target>
        </trans-unit>
        <trans-unit id="7defddf70e3a2aa52074600450bf3b2b8ceaa800" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0, v12.16.2</source>
          <target state="translated">추가 : v13.9.0, v12.16.2</target>
        </trans-unit>
        <trans-unit id="bacd5d39b81175adc083649ff50b8b0e416d30c9" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0, v12.17.0</source>
          <target state="translated">추가 : v13.9.0, v12.17.0</target>
        </trans-unit>
        <trans-unit id="3dbbb9377b533cb8c2a965f5ddf6b498758fc623" translate="yes" xml:space="preserve">
          <source>Added in: v14.0.0</source>
          <target state="translated">추가 : v14.0.0</target>
        </trans-unit>
        <trans-unit id="9828e641df57b2139924989572124576e3c4174f" translate="yes" xml:space="preserve">
          <source>Added in: v14.1.0</source>
          <target state="translated">추가 : v14.1.0</target>
        </trans-unit>
        <trans-unit id="1c903689b23a1dae63d43a247f954c0c036b9ad2" translate="yes" xml:space="preserve">
          <source>Added in: v14.1.0, v13.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee674da014dfdc5ff9207b8c0209e4851aedd240" translate="yes" xml:space="preserve">
          <source>Added in: v14.10.0</source>
          <target state="translated">추가 : v14.10.0</target>
        </trans-unit>
        <trans-unit id="3fb53960c06cb90839bb4889e1757663107a175b" translate="yes" xml:space="preserve">
          <source>Added in: v14.10.0, v12.19.0</source>
          <target state="translated">추가 : v14.10.0, v12.19.0</target>
        </trans-unit>
        <trans-unit id="48d92ba800d1761f7fe2db2d246370e7d7238785" translate="yes" xml:space="preserve">
          <source>Added in: v14.11.0</source>
          <target state="translated">추가 : v14.11.0</target>
        </trans-unit>
        <trans-unit id="2da08c3f4ed1475c47f90e5c159f4caffb551cf5" translate="yes" xml:space="preserve">
          <source>Added in: v14.13.1</source>
          <target state="translated">추가 : v14.13.1</target>
        </trans-unit>
        <trans-unit id="f2b5eb654544f9c165784f4255570454f09108a4" translate="yes" xml:space="preserve">
          <source>Added in: v14.14.0</source>
          <target state="translated">추가 : v14.14.0</target>
        </trans-unit>
        <trans-unit id="2e022c85da1e1a71371b1e6d44e0ff84e3dcfef7" translate="yes" xml:space="preserve">
          <source>Added in: v14.2.0</source>
          <target state="translated">추가 : v14.2.0</target>
        </trans-unit>
        <trans-unit id="c1df909722051c6d3651b2622b1a2925e5bad808" translate="yes" xml:space="preserve">
          <source>Added in: v14.2.0, v12.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8942bb5699671b254af12cbef2d614818b8df415" translate="yes" xml:space="preserve">
          <source>Added in: v14.3.0</source>
          <target state="translated">추가 : v14.3.0</target>
        </trans-unit>
        <trans-unit id="3818686fd4d46bcde493399a88ae447f13918904" translate="yes" xml:space="preserve">
          <source>Added in: v14.5.0</source>
          <target state="translated">추가 : v14.5.0</target>
        </trans-unit>
        <trans-unit id="bb44517ca242a0024bcbfdf81b1c6e5208f1a19d" translate="yes" xml:space="preserve">
          <source>Added in: v14.5.0, v12.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c8f6d98d9eb2995b694e32e5647e076a10044f" translate="yes" xml:space="preserve">
          <source>Added in: v14.6.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7849731e29af97b8d0d45eadf8b40581dc3d563" translate="yes" xml:space="preserve">
          <source>Added in: v14.6.0, v12.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3575dfe455713ef3eabb8c8a91a511e59a6a31ef" translate="yes" xml:space="preserve">
          <source>Added in: v14.8.0</source>
          <target state="translated">추가 : v14.8.0</target>
        </trans-unit>
        <trans-unit id="a44f213fb1dca962f9eea13b38feab54a34b09ad" translate="yes" xml:space="preserve">
          <source>Added in: v14.8.0, v12.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb614edd70e2d7756358c232d5e752d8862a51d" translate="yes" xml:space="preserve">
          <source>Added in: v14.9.0</source>
          <target state="translated">추가 : v14.9.0</target>
        </trans-unit>
        <trans-unit id="31ad7e484522a07d5af1e6297552b42d98d36a62" translate="yes" xml:space="preserve">
          <source>Added in: v14.9.0, v12.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ed9d0710aa50835e3e3b1bc8ce16f2b0fe938f" translate="yes" xml:space="preserve">
          <source>Added in: v15.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987dfd10b06be474b1be4db372d368409086d852" translate="yes" xml:space="preserve">
          <source>Added in: v15.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b0237682396a7d345614d8b116dc5b157613c0" translate="yes" xml:space="preserve">
          <source>Added in: v15.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce2e38b120d4ee79ab4970441a0e5b0a1081f9f" translate="yes" xml:space="preserve">
          <source>Added in: v15.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4475dee5906be8d543efce7b36d00696cd6bf5db" translate="yes" xml:space="preserve">
          <source>Added in: v15.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c519cdd64bb50f56e88a60eb62495f1165de784" translate="yes" xml:space="preserve">
          <source>Added in: v2.0.0</source>
          <target state="translated">추가 : v2.0.0</target>
        </trans-unit>
        <trans-unit id="b70c902afe367c2adfd989906bf742ee91848eec" translate="yes" xml:space="preserve">
          <source>Added in: v2.1.0</source>
          <target state="translated">추가 : v2.1.0</target>
        </trans-unit>
        <trans-unit id="2624a00fa5ed15a9ee8f5977089ee75684e10fd7" translate="yes" xml:space="preserve">
          <source>Added in: v2.2.0</source>
          <target state="translated">추가 : v2.2.0</target>
        </trans-unit>
        <trans-unit id="3987356d28bf7a021917846106f7a90fc9ad4bd5" translate="yes" xml:space="preserve">
          <source>Added in: v2.3.0</source>
          <target state="translated">추가 : v2.3.0</target>
        </trans-unit>
        <trans-unit id="65b822de1ee0c33050d5f98219b77f23260603a7" translate="yes" xml:space="preserve">
          <source>Added in: v2.4.0</source>
          <target state="translated">추가 : v2.4.0</target>
        </trans-unit>
        <trans-unit id="7393500c39cb5a442deb107fc64eab96f13ca4ad" translate="yes" xml:space="preserve">
          <source>Added in: v2.5.0</source>
          <target state="translated">추가 : v2.5.0</target>
        </trans-unit>
        <trans-unit id="485553a0c277c7a424bfaf48a162380ea3072ebf" translate="yes" xml:space="preserve">
          <source>Added in: v3.0.0</source>
          <target state="translated">추가 : v3.0.0</target>
        </trans-unit>
        <trans-unit id="d19b66ee8a7418dfb3d9b8ae299829fe47ddde4c" translate="yes" xml:space="preserve">
          <source>Added in: v3.2.0</source>
          <target state="translated">추가 : v3.2.0</target>
        </trans-unit>
        <trans-unit id="b7e10c563d1a511857577ed3d50cdf0c891ff3fc" translate="yes" xml:space="preserve">
          <source>Added in: v4.0.0</source>
          <target state="translated">추가 : v4.0.0</target>
        </trans-unit>
        <trans-unit id="79fd69509e0c0582ee1869bf2c23e27cb95410f3" translate="yes" xml:space="preserve">
          <source>Added in: v5.0.0</source>
          <target state="translated">추가 : v5.0.0</target>
        </trans-unit>
        <trans-unit id="5e9da09bc8f48050c26f78cf41696aac6a511802" translate="yes" xml:space="preserve">
          <source>Added in: v5.0.0, v4.2.0</source>
          <target state="translated">추가 : v5.0.0, v4.2.0</target>
        </trans-unit>
        <trans-unit id="97619bdb93a504480a2292661f833a423d8842e8" translate="yes" xml:space="preserve">
          <source>Added in: v5.10.0</source>
          <target state="translated">추가 : v5.10.0</target>
        </trans-unit>
        <trans-unit id="990cfa1a62b665f91fb552ebf6a5346b419e11d7" translate="yes" xml:space="preserve">
          <source>Added in: v5.12.0</source>
          <target state="translated">추가 된 기능 : v5.12.0</target>
        </trans-unit>
        <trans-unit id="ee2a3a230e303431c27cacdc7c376a3299739df1" translate="yes" xml:space="preserve">
          <source>Added in: v5.2.0</source>
          <target state="translated">추가 : v5.2.0</target>
        </trans-unit>
        <trans-unit id="fbdd0eaf6115d8b0b83573aac2a2fbf687e84164" translate="yes" xml:space="preserve">
          <source>Added in: v5.3.0</source>
          <target state="translated">추가 : v5.3.0</target>
        </trans-unit>
        <trans-unit id="7498ae488a999b05305d157ce4b817a3b90c0095" translate="yes" xml:space="preserve">
          <source>Added in: v5.5.0</source>
          <target state="translated">추가 : v5.5.0</target>
        </trans-unit>
        <trans-unit id="970b4bca078bc5e0fa09e3180deb0e7eae852d8c" translate="yes" xml:space="preserve">
          <source>Added in: v5.7.0</source>
          <target state="translated">추가 : v5.7.0</target>
        </trans-unit>
        <trans-unit id="04166f39c09a93b8f5fe286db34fad81df2df317" translate="yes" xml:space="preserve">
          <source>Added in: v6.0.0</source>
          <target state="translated">추가 : v6.0.0</target>
        </trans-unit>
        <trans-unit id="8dcbe6382d21fbeab35327d091aa3018cfe996e6" translate="yes" xml:space="preserve">
          <source>Added in: v6.0.0Deprecated since: v10.0.0</source>
          <target state="translated">v6.0.0에서 추가됨</target>
        </trans-unit>
        <trans-unit id="df0903f1703328ecfd2111646fafada255d074c7" translate="yes" xml:space="preserve">
          <source>Added in: v6.1.0</source>
          <target state="translated">추가 : v6.1.0</target>
        </trans-unit>
        <trans-unit id="2402bb10ed0d5a8a12001e187dfe602d0b3e4584" translate="yes" xml:space="preserve">
          <source>Added in: v6.11.0</source>
          <target state="translated">추가 : v6.11.0</target>
        </trans-unit>
        <trans-unit id="d0315bf5f8b530681c3a9e8909ba3bf4c131c97a" translate="yes" xml:space="preserve">
          <source>Added in: v6.3.0</source>
          <target state="translated">추가 : v6.3.0</target>
        </trans-unit>
        <trans-unit id="137045d393113a0335f199e1d3b71f4ec2c20af1" translate="yes" xml:space="preserve">
          <source>Added in: v6.4.0</source>
          <target state="translated">추가 된 기능 : v6.4.0</target>
        </trans-unit>
        <trans-unit id="2f1d9ec371f92ffad423cfd57cfd0b407e752c57" translate="yes" xml:space="preserve">
          <source>Added in: v6.6.0</source>
          <target state="translated">추가 : v6.6.0</target>
        </trans-unit>
        <trans-unit id="2de8a3f6389215cb41df7f28e5d256c27f4d6abf" translate="yes" xml:space="preserve">
          <source>Added in: v6.9.0</source>
          <target state="translated">추가 : v6.9.0</target>
        </trans-unit>
        <trans-unit id="93d9c42e7c05512e3422b7b713ad1229f4378073" translate="yes" xml:space="preserve">
          <source>Added in: v7.0.0</source>
          <target state="translated">추가 : v7.0.0</target>
        </trans-unit>
        <trans-unit id="3056b1b9034cb765c1d2a41b4aa3aa35cd697505" translate="yes" xml:space="preserve">
          <source>Added in: v7.0.0, v6.13.0</source>
          <target state="translated">추가 : v7.0.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="0a09b5dc07182abd12041214beddf761879cafcc" translate="yes" xml:space="preserve">
          <source>Added in: v7.1.0</source>
          <target state="translated">추가 : v7.1.0</target>
        </trans-unit>
        <trans-unit id="287e670bac01f7bfec68211aa91b8f3961d4b652" translate="yes" xml:space="preserve">
          <source>Added in: v7.10.0</source>
          <target state="translated">추가 : v7.10.0</target>
        </trans-unit>
        <trans-unit id="0bfa8b96508f97c3fcac1aabe51ff2897e00f467" translate="yes" xml:space="preserve">
          <source>Added in: v7.10.0, v6.13.0</source>
          <target state="translated">추가 : v7.10.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="b76d0e857f5855da44343e4fa83dced4eb1c3f3a" translate="yes" xml:space="preserve">
          <source>Added in: v7.3.0</source>
          <target state="translated">추가 : v7.3.0</target>
        </trans-unit>
        <trans-unit id="982d4d8255712066c5041fa12e9d4b8904f2f1f7" translate="yes" xml:space="preserve">
          <source>Added in: v7.4.0, v6.13.0</source>
          <target state="translated">추가 : v7.4.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="f67c6708d4f3d56a64514b479fadcecde729f2ad" translate="yes" xml:space="preserve">
          <source>Added in: v7.5.0, v6.13.0</source>
          <target state="translated">추가 : v7.5.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="65bad01e763088156d6be43838ca8bea7f4f3dff" translate="yes" xml:space="preserve">
          <source>Added in: v7.6.0</source>
          <target state="translated">추가 : v7.6.0</target>
        </trans-unit>
        <trans-unit id="76243dc6c0b94ef01841a735d73129ee4bc979b1" translate="yes" xml:space="preserve">
          <source>Added in: v7.7.0</source>
          <target state="translated">추가 : v7.7.0</target>
        </trans-unit>
        <trans-unit id="1bef310e38f9ba1b44f2f581a943ffbc3d913919" translate="yes" xml:space="preserve">
          <source>Added in: v7.7.0, v6.13.0</source>
          <target state="translated">추가 : v7.7.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="bf685c2e297b25e09ab8a118ef10f63fdb787546" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0</source>
          <target state="translated">추가 : v8.0.0</target>
        </trans-unit>
        <trans-unit id="ae185f065c3b8df72a3adb031abb24963c080c44" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0N-API version: 1</source>
          <target state="translated">추가 : v8.0.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="242e370564d26adfa49d4db0e3097c4b1e60e3f1" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0N-API version: 5</source>
          <target state="translated">추가 : v8.0.0N-API 버전 : 5</target>
        </trans-unit>
        <trans-unit id="24a8baf881fbc2278266961a0a757268a166b659" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v11.7.0</source>
          <target state="translated">추가 : v8.0.0에서 제거 : v11.7.0</target>
        </trans-unit>
        <trans-unit id="8a62564288f801c9ad3de3ccd18a3d8f26e13db5" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v15.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3f4542deb7de2c485a0b0dd7d61ebe26430dda" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v9.0.0</source>
          <target state="translated">추가 : v8.0.0에서 제거 : v9.0.0</target>
        </trans-unit>
        <trans-unit id="8caf89cca82b14bcb149c46504766a1251513f2c" translate="yes" xml:space="preserve">
          <source>Added in: v8.1.0</source>
          <target state="translated">추가 : v8.1.0</target>
        </trans-unit>
        <trans-unit id="b8ef2d08a78e4d8cee1923c13e84c7fd60f79110" translate="yes" xml:space="preserve">
          <source>Added in: v8.1.0Deprecated since: v10.0.0</source>
          <target state="translated">v8.1.0에서 추가됨</target>
        </trans-unit>
        <trans-unit id="17889e4671835dffa79ec92ae820fd63cdb69e84" translate="yes" xml:space="preserve">
          <source>Added in: v8.10.0, v9.3.0N-API version: 2</source>
          <target state="translated">추가 : v8.10.0, v9.3.0N-API 버전 : 2</target>
        </trans-unit>
        <trans-unit id="795efa643aaaa79a0ec1df150c8b3775cda6efda" translate="yes" xml:space="preserve">
          <source>Added in: v8.2.0</source>
          <target state="translated">추가 : v8.2.0</target>
        </trans-unit>
        <trans-unit id="4e69d1046d81dbd1beccbe28e0a04eb9e6858a0f" translate="yes" xml:space="preserve">
          <source>Added in: v8.2.0N-API version: 1</source>
          <target state="translated">추가 : v8.2.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="6b70dd1818d50f9334daf2f2ae6931610b2e4d86" translate="yes" xml:space="preserve">
          <source>Added in: v8.3.0</source>
          <target state="translated">추가 : v8.3.0</target>
        </trans-unit>
        <trans-unit id="0eff029a67f7e0737e9d19aa1914decaed9a9a47" translate="yes" xml:space="preserve">
          <source>Added in: v8.3.0N-API version: 1</source>
          <target state="translated">추가 : v8.3.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="eba2af054946fb684e76b26f56e4c131942e6a37" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0</source>
          <target state="translated">추가 : v8.4.0</target>
        </trans-unit>
        <trans-unit id="1e5cc27fcd572b6248c1967bae8ade5b65048233" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0Deprecated since: v13.0.0</source>
          <target state="translated">추가 : v8.4.0Deprecated since : v13.0.0</target>
        </trans-unit>
        <trans-unit id="5b70470364339b4cd01cb9cb3587630710033232" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0Deprecated since: v13.4.0, v12.16.0</source>
          <target state="translated">추가 : v8.4.0 사용되지 않음 : v13.4.0, v12.16.0</target>
        </trans-unit>
        <trans-unit id="36895a84e60c1d5199443944594e076a4fe807ba" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0N-API version: 1</source>
          <target state="translated">추가 : v8.4.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="202368ca6563c89197fe6ac13e2ff8e40c99ffbc" translate="yes" xml:space="preserve">
          <source>Added in: v8.5.0</source>
          <target state="translated">추가 : v8.5.0</target>
        </trans-unit>
        <trans-unit id="4cdfeb4543934a6b47c8650423cf41b06c1dd836" translate="yes" xml:space="preserve">
          <source>Added in: v8.5.0N-API version: 1</source>
          <target state="translated">추가 : v8.5.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="75cdc316c0ceb2df81c226cc3b02f2862a1af309" translate="yes" xml:space="preserve">
          <source>Added in: v8.6.0</source>
          <target state="translated">추가 : v8.6.0</target>
        </trans-unit>
        <trans-unit id="4b5506f9347fe6a2336d62a422f971360e302414" translate="yes" xml:space="preserve">
          <source>Added in: v8.6.0N-API version: 1</source>
          <target state="translated">추가 : v8.6.0N-API 버전 : 1</target>
        </trans-unit>
        <trans-unit id="469dd4311c2a7ce44e4bf7d5bd9f972dec0a49ce" translate="yes" xml:space="preserve">
          <source>Added in: v8.7.0</source>
          <target state="translated">추가 : v8.7.0</target>
        </trans-unit>
        <trans-unit id="6e397dd03f0e347c9c9b90fb7cae5a05dbd8b347" translate="yes" xml:space="preserve">
          <source>Added in: v8.9.0</source>
          <target state="translated">추가 : v8.9.0</target>
        </trans-unit>
        <trans-unit id="34b92ebcd964b13c581d922574f522914aaf43b5" translate="yes" xml:space="preserve">
          <source>Added in: v8.9.3</source>
          <target state="translated">추가 : v8.9.3</target>
        </trans-unit>
        <trans-unit id="9a014c7ecc4b2e7d092004da3e49d8ec0bcf7d4d" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0</source>
          <target state="translated">추가 : v9.0.0</target>
        </trans-unit>
        <trans-unit id="db811d500d9136ba666f517f7f94465d7efcd21a" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v10.0.0</source>
          <target state="translated">추가 : v9.0.0에서 제거 : v10.0.0</target>
        </trans-unit>
        <trans-unit id="19b854acee217064ab10ffaddb24e94b982dc7ef" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v12.12.0</source>
          <target state="translated">추가 : v9.0.0에서 제거 : v12.12.0</target>
        </trans-unit>
        <trans-unit id="ef4215b1e792c091742570241ee218256003c949" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v14.0.0</source>
          <target state="translated">추가 : v9.0.0에서 제거 : v14.0.0</target>
        </trans-unit>
        <trans-unit id="076d48299e2f887253fdd912b40f58f3e51feeb2" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v15.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290f337c64b85a169d2dade9d5e74fb41ec0fbf4" translate="yes" xml:space="preserve">
          <source>Added in: v9.10.0N-API version: 3</source>
          <target state="translated">추가 : v9.10.0N-API 버전 : 3</target>
        </trans-unit>
        <trans-unit id="12fa91819fef107e5933bf50cbfa82c7d33b327d" translate="yes" xml:space="preserve">
          <source>Added in: v9.11.0</source>
          <target state="translated">추가 : v9.11.0</target>
        </trans-unit>
        <trans-unit id="d6f949394fbd6567d9c6a49042ab9acaa7df5573" translate="yes" xml:space="preserve">
          <source>Added in: v9.2.0</source>
          <target state="translated">추가 : v9.2.0</target>
        </trans-unit>
        <trans-unit id="fd783905b70767eca7aadb87409a01bcc12bf997" translate="yes" xml:space="preserve">
          <source>Added in: v9.2.0, v8.10.0, v6.13.0</source>
          <target state="translated">추가 : v9.2.0, v8.10.0, v6.13.0</target>
        </trans-unit>
        <trans-unit id="cb66a1b95c7c7901686eaecce198e7f2f24277c8" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0</source>
          <target state="translated">추가 : v9.3.0</target>
        </trans-unit>
        <trans-unit id="6875bb626ed83470871f14bc3eb904005bbe28e0" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0, v8.10.0, v6.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1a672eb38ca105cf441a031d2dbd97a8392e82" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0, v8.10.0N-API version: 2</source>
          <target state="translated">추가 : v9.3.0, v8.10.0N-API 버전 : 2</target>
        </trans-unit>
        <trans-unit id="b1c2aa1198a393ff8ace355038c433463c3bc619" translate="yes" xml:space="preserve">
          <source>Added in: v9.4.0</source>
          <target state="translated">추가 : v9.4.0</target>
        </trans-unit>
        <trans-unit id="701c1f712d965c00379fdb7c95b0b0fb6d8766a0" translate="yes" xml:space="preserve">
          <source>Added in: v9.5.0</source>
          <target state="translated">추가 : v9.5.0</target>
        </trans-unit>
        <trans-unit id="5eb0d3c62aa407943c9859cede09e2280e40b006" translate="yes" xml:space="preserve">
          <source>Added in: v9.6.0</source>
          <target state="translated">추가 : v9.6.0</target>
        </trans-unit>
        <trans-unit id="70f9c96be29c79fcdb6189293e63d56223c58600" translate="yes" xml:space="preserve">
          <source>Added in: v9.6.0N-API version: 3</source>
          <target state="translated">추가 : v9.6.0N-API 버전 : 3</target>
        </trans-unit>
        <trans-unit id="a6317270b523708d294e6fce535ad5c515ba8e2b" translate="yes" xml:space="preserve">
          <source>Added in: v9.7.0</source>
          <target state="translated">추가 : v9.7.0</target>
        </trans-unit>
        <trans-unit id="60c5ef77511e28f05eb81362856fdaf7c5d8c242" translate="yes" xml:space="preserve">
          <source>Added in: v9.8.0</source>
          <target state="translated">추가 : v9.8.0</target>
        </trans-unit>
        <trans-unit id="141dd55b71ab956ae39d6e2adfee7001d97e5e02" translate="yes" xml:space="preserve">
          <source>Added in: v9.9.0</source>
          <target state="translated">추가 : v9.9.0</target>
        </trans-unit>
        <trans-unit id="e5052f129c39177d96f7c45c8dd68968dcb5fe95" translate="yes" xml:space="preserve">
          <source>Added strict assertion mode to the assert module.</source>
          <target state="translated">assert 모듈에 엄격한 어설 션 모드를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="8c900dd3d60bb1fa476c7c7f6f98f7658fbaf69b" translate="yes" xml:space="preserve">
          <source>Added strict mode to the assert module.</source>
          <target state="translated">어설트 모듈에 엄격 모드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="28e4909e27133807fb76ed0b72c6a5454573316f" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The oaepLabel and passphrase can be ArrayBuffers. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14221284c811417fe35a59f4f263f7379745fa13" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The oaepLabel can be an ArrayBuffer. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b651919269db868e9d70586414e1f09eb346f15" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The passphrase can be an ArrayBuffer. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae005469b2f6a589461f6dc157c92efe5127a2b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'dh'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'dh'&lt;/code&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7c672e1c8d8262b87e75b332acd611d179588a65" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'ed25519'&lt;/code&gt; and &lt;code&gt;'ed448'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'ed25519'&lt;/code&gt; 및 &lt;code&gt;'ed448'&lt;/code&gt; 에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="809f5b66e2d4ea71f24b016df1b9057946b3f294" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'rsa-pss'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'rsa-pss'&lt;/code&gt; 에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="cc02ed1841b3523fb2f1e65995fd41a9f5567ece" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'rsa-pss'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'rsa-pss'&lt;/code&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9767cefcfc3363272a0015fb330097c8edac4f4b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'x25519'&lt;/code&gt; and &lt;code&gt;'x448'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'x25519'&lt;/code&gt; 및 &lt;code&gt;'x448'&lt;/code&gt; 에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="0cd7f4083897e5da2e3975f6d3fa682c53994f47" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'x25519'&lt;/code&gt; and &lt;code&gt;'x448'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'x25519'&lt;/code&gt; 및 &lt;code&gt;'x448'&lt;/code&gt; 에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="41a2862daf1f7cadeea075fde09824286c6da852" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;--pending-deprecation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--pending-deprecation&lt;/code&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4a386ce8cdcfb480bf14b090567e11b9d1ac2487" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;SIGINFO&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SIGINFO&lt;/code&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f9bdc0a4251662ae8ffc85a50b757cb620c3ea0c" translate="yes" xml:space="preserve">
          <source>Added support for sending data on connected sockets.</source>
          <target state="translated">연결된 소켓에서 데이터를 보내기위한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3a00a0d0e63bc9b6371309c4929badf3ce1c13eb" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;code&gt;dns.ALL&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;dns.ALL&lt;/code&gt; 플래그에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1332a0d5e146629c97b67a738af9f9dc1145c344" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;code&gt;flags&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 인수에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5e8bc7593d043217cd8357cebe4ee55b92c637bc" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;Http1IncomingMessage&lt;/code&gt; and &lt;code&gt;Http1ServerResponse&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;Http1IncomingMessage&lt;/code&gt; 및 &lt;code&gt;Http1ServerResponse&lt;/code&gt; 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1841316de56f42c834f345247ada7cbf7c7d1af3" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;maxHeaderListPairs&lt;/code&gt; option with a default limit of 128 header pairs.</source>
          <target state="translated">기본 헤더 수 128 개로 &lt;code&gt;maxHeaderListPairs&lt;/code&gt; 옵션을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="e450009b9640f17762462225aa222b6a00d02d1a" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;maxOutstandingPings&lt;/code&gt; option with a default limit of 10.</source>
          <target state="translated">&lt;code&gt;maxOutstandingPings&lt;/code&gt; 옵션을 기본 제한 인 10으로 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="118a63162b29dcac17c196fdf28f87f6ab01096b" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;origin&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;origin&lt;/code&gt; 인수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="9f4521380ea4a856dc002e4fff9c28a290f2e9f0" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;origins&lt;/code&gt; option to automatically send an &lt;code&gt;ORIGIN&lt;/code&gt; frame on &lt;code&gt;Http2Session&lt;/code&gt; startup.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 시작시 &lt;code&gt;ORIGIN&lt;/code&gt; 프레임 을 자동으로 전송하는 &lt;code&gt;origins&lt;/code&gt; 옵션을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="1840c4a73a3e0d101a2416d8dce5981454d46ca2" translate="yes" xml:space="preserve">
          <source>Added times as numbers.</source>
          <target state="translated">시간을 숫자로 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="b5617daae8450d9a57dc85d770f124c4301fe94d" translate="yes" xml:space="preserve">
          <source>Addenda: Package Manager Tips</source>
          <target state="translated">부록 : 패키지 관리자 팁</target>
        </trans-unit>
        <trans-unit id="51b26c28bf4281b9969db538aeaa727ca860791b" translate="yes" xml:space="preserve">
          <source>Addenda: Package manager tips</source>
          <target state="translated">부록 : 패키지 관리자 팁</target>
        </trans-unit>
        <trans-unit id="e2283d9614fbc149752a5c5a7700465bc045c627" translate="yes" xml:space="preserve">
          <source>Addenda: The .mjs extension</source>
          <target state="translated">부록 : .mjs 확장</target>
        </trans-unit>
        <trans-unit id="1eff70f0b9c15286502b8e0c0d82c89e3e7fcc4a" translate="yes" xml:space="preserve">
          <source>Addenda: The &lt;code&gt;.mjs&lt;/code&gt; extension</source>
          <target state="translated">부록 : &lt;code&gt;.mjs&lt;/code&gt; 확장자</target>
        </trans-unit>
        <trans-unit id="383cc7819d01fa0a6f3014416dc06f42f1060b9a" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러 추가</target>
        </trans-unit>
        <trans-unit id="c4c56059703d51ea1aefa61f2b3375fe3c8e3f98" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler automatically make the stream to stop flowing, and the data to be consumed via &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler is removed, then the stream will start flowing again if there is a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러를 추가 하면 스트림의 흐름이 자동으로 중지되고 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;readable.read()&lt;/code&gt; &lt;/a&gt; 를 통해 데이터가 소비됩니다 . 경우 &lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러가 제거 된 후 스트림은이 경우 다시 흐르는 시작됩니다 &lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러.</target>
        </trans-unit>
        <trans-unit id="f1a7192fc024b82ee40558aa619f4d600fc865c5" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler automatically makes the stream stop flowing, and the data has to be consumed via &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler is removed, then the stream will start flowing again if there is a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러를 추가하면 자동으로 스트림 흐름이 중지되고 데이터는 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;readable.read()&lt;/code&gt; &lt;/a&gt; 를 통해 소비되어야 합니다. 경우 &lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러가 제거 된 후 스트림은이 경우 다시 흐르는 시작됩니다 &lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러.</target>
        </trans-unit>
        <trans-unit id="8cc06069dca51db1f8e4c28eff62833b94ddcc6d" translate="yes" xml:space="preserve">
          <source>Adding or replacing entries is also possible. This cache is checked before native modules and if a name matching a native module is added to the cache, no require call is going to receive the native module anymore. Use with care!</source>
          <target state="translated">항목 추가 또는 교체도 가능합니다. 이 캐시는 기본 모듈보다 먼저 확인되며 기본 모듈과 일치하는 이름이 캐시에 추가되면 더 이상 호출이 기본 모듈을 수신하지 않아도됩니다. 조심해서 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="caf6c48a80b5b82f939d073428fcf7b0b37620f9" translate="yes" xml:space="preserve">
          <source>Additional arguments after &lt;code&gt;callback&lt;/code&gt; are now supported.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 후 추가 인수 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="88c76aeba84e18fbbb121c6ed63f0f41601bec87" translate="yes" xml:space="preserve">
          <source>Additional documentation is available in the &lt;a href=&quot;report&quot;&gt;report documentation&lt;/a&gt;.</source>
          <target state="translated">추가 설명서는 &lt;a href=&quot;report&quot;&gt;보고서 설명서에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="622ff40d2ecbc23712841f63438f225899a57b03" translate="yes" xml:space="preserve">
          <source>Additional experimental flags are available for importing &lt;a href=&quot;#esm_experimental_wasm_modules&quot;&gt;Wasm modules&lt;/a&gt; or &lt;a href=&quot;#esm_experimental_json_modules&quot;&gt;JSON modules&lt;/a&gt;. For importing native modules or JSON modules unflagged, see &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#esm_experimental_wasm_modules&quot;&gt;Wasm 모듈&lt;/a&gt; 또는 &lt;a href=&quot;#esm_experimental_json_modules&quot;&gt;JSON 모듈&lt;/a&gt; 을 가져 오는 데 추가 실험 플래그를 사용할 수 있습니다 . 플래그가 지정되지 않은 네이티브 모듈 또는 JSON 모듈을 가져 오려면 &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="801b4827f1ba8763ddae40d6da7065e3f1a93919" translate="yes" xml:space="preserve">
          <source>Additional options:</source>
          <target state="translated">추가 옵션:</target>
        </trans-unit>
        <trans-unit id="652832107119893b4f924f8fd8b7bca0bcfb73ea" translate="yes" xml:space="preserve">
          <source>Additional parameters for specifying offsets are supported now.</source>
          <target state="translated">오프셋을 지정하기위한 추가 매개 변수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="05fbbefcaed494800c7b76dfd39b0dee73c53016" translate="yes" xml:space="preserve">
          <source>Additional runtime configuration of report generation is available via the following properties of &lt;code&gt;process.report&lt;/code&gt;:</source>
          <target state="translated">보고서 생성의 추가 런타임 구성은 다음 &lt;code&gt;process.report&lt;/code&gt; 속성을 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9007aef8bc8c9cced94e11ca6d2b69893c1ded68" translate="yes" xml:space="preserve">
          <source>Additionally, N-API provides a set of functions which allow calling JavaScript functions from native code. One can either call a function like a regular JavaScript function call, or as a constructor function.</source>
          <target state="translated">또한 N-API는 기본 코드에서 JavaScript 함수를 호출 할 수있는 함수 세트를 제공합니다. 일반 JavaScript 함수 호출과 같은 함수를 생성하거나 생성자 함수로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf14c19063ede85f1d83adb11622411071449131" translate="yes" xml:space="preserve">
          <source>Additionally, Node.js will search in the following list of GLOBAL_FOLDERS:</source>
          <target state="translated">또한 Node.js는 다음 GLOBAL_FOLDERS 목록에서 검색합니다.</target>
        </trans-unit>
        <trans-unit id="9f73c9a0f643b726f96be397ef7f41691ae43bdb" translate="yes" xml:space="preserve">
          <source>Additionally, callbacks passed to lowlevel event loop requests (such as to &lt;code&gt;fs.open()&lt;/code&gt;, or other callback-taking methods) will automatically be bound to the active domain. If they throw, then the domain will catch the error.</source>
          <target state="translated">또한 &lt;code&gt;fs.open()&lt;/code&gt; 이벤트 루프 요청 (예 : fs.open () 또는 기타 콜백 작성 메소드)으로 전달 된 콜백은 자동으로 활성 도메인에 바인딩됩니다. 그들이 던지면 도메인은 오류를 잡을 것입니다.</target>
        </trans-unit>
        <trans-unit id="b64c762e2fcf51f21d72afec7f18e458d75485e4" translate="yes" xml:space="preserve">
          <source>Additionally, each &lt;code&gt;v8::Isolate&lt;/code&gt; that is used for a Node.js instance needs to be registered and unregistered with the &lt;code&gt;MultiIsolatePlatform&lt;/code&gt; instance, if one is being used, in order for the platform to know which event loop to use for tasks scheduled by the &lt;code&gt;v8::Isolate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c447df8af9ccb1fcb0d8884a9870d35e5bcf7a5" translate="yes" xml:space="preserve">
          <source>Additionally, on case-insensitive file systems or operating systems, different resolved filenames can point to the same file, but the cache will still treat them as different modules and will reload the file multiple times. For example, &lt;code&gt;require('./foo')&lt;/code&gt; and &lt;code&gt;require('./FOO')&lt;/code&gt; return two different objects, irrespective of whether or not &lt;code&gt;./foo&lt;/code&gt; and &lt;code&gt;./FOO&lt;/code&gt; are the same file.</source>
          <target state="translated">또한 대소 문자를 구분하지 않는 파일 시스템 또는 운영 체제에서 확인 된 다른 파일 이름은 동일한 파일을 가리킬 수 있지만 캐시는 여전히 파일을 다른 모듈로 취급하고 파일을 여러 번 다시로드합니다. 예를 들어 &lt;code&gt;require('./foo')&lt;/code&gt; 와 &lt;code&gt;require('./FOO')&lt;/code&gt; 는 &lt;code&gt;./foo&lt;/code&gt; 와 &lt;code&gt;./FOO&lt;/code&gt; 가 같은 파일 인지 여부에 관계없이 두 개의 다른 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="302acc826973080488585161a04c0fdb9dc8bbef" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;a href=&quot;#buffer_buf_values&quot;&gt;&lt;code&gt;buf.values()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#buffer_buf_keys&quot;&gt;&lt;code&gt;buf.keys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_buf_entries&quot;&gt;&lt;code&gt;buf.entries()&lt;/code&gt;&lt;/a&gt; methods can be used to create iterators.</source>
          <target state="translated">또한 &lt;a href=&quot;#buffer_buf_values&quot;&gt; &lt;code&gt;buf.values()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#buffer_buf_keys&quot;&gt; &lt;code&gt;buf.keys()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#buffer_buf_entries&quot;&gt; &lt;code&gt;buf.entries()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 반복자를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8db67b601cecd28d56ad67c9d8b61daa0c829b41" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한이 모듈에는 &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt; &lt;code&gt;stream.pipeline()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt; &lt;code&gt;stream.finished()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt; &lt;code&gt;stream.Readable.from()&lt;/code&gt; &lt;/a&gt; 유틸리티 함수가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="46c38d1e8d68ee89ab8a1e20ec0309219050d208" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_addabortsignal_signal_stream&quot;&gt;&lt;code&gt;stream.addAbortSignal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65277a26051ab98805f7639ea7874be82f50d4cc" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_streams_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한이 모듈에는 유틸리티 함수 &lt;a href=&quot;#stream_stream_pipeline_streams_callback&quot;&gt; &lt;code&gt;stream.pipeline()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt; &lt;code&gt;stream.finished()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt; &lt;code&gt;stream.Readable.from()&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d0aa3a4412ea9cf844c62cf42112836a46d8822b" translate="yes" xml:space="preserve">
          <source>Additionally, when &lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt;&lt;code&gt;fs.readdir()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt;&lt;code&gt;fs.readdirSync()&lt;/code&gt;&lt;/a&gt; is called with the &lt;code&gt;withFileTypes&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;, the resulting array is filled with &lt;code&gt;fs.Dirent&lt;/code&gt; objects, rather than strings or &lt;code&gt;Buffers&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;code&gt;withFileTypes&lt;/code&gt; 옵션이 &lt;code&gt;true&lt;/code&gt; 로 설정된 상태에서 &lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt; &lt;code&gt;fs.readdir()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt; &lt;code&gt;fs.readdirSync()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 결과 배열이 문자열 또는 &lt;code&gt;Buffers&lt;/code&gt; 대신 &lt;code&gt;fs.Dirent&lt;/code&gt; 객체 로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="81f850708af50476fe300f00503c69687f08e144" translate="yes" xml:space="preserve">
          <source>Additions to &lt;code&gt;Error&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 객체에 대한 추가 사항</target>
        </trans-unit>
        <trans-unit id="526ea70fc9ebd70d1a8505ad054e058b3cc5184b" translate="yes" xml:space="preserve">
          <source>Additions to Error objects</source>
          <target state="translated">Error 객체에 추가</target>
        </trans-unit>
        <trans-unit id="864f1b2586f1327b54d78167a25b00a41af8ab27" translate="yes" xml:space="preserve">
          <source>Addon examples</source>
          <target state="translated">애드온 예제</target>
        </trans-unit>
        <trans-unit id="c3a764f367f72e2c54f18840b49601737d8a4792" translate="yes" xml:space="preserve">
          <source>Addon modules often need to leverage async helpers from libuv as part of their implementation. This allows them to schedule work to be executed asynchronously so that their methods can return in advance of the work being completed. This allows them to avoid blocking overall execution of the Node.js application.</source>
          <target state="translated">애드온 모듈은 종종 구현의 일부로 libuv의 비동기 도우미를 활용해야합니다. 이를 통해 작업이 완료되기 전에 메서드가 반환 될 수 있도록 작업이 비동기 적으로 실행되도록 예약 할 수 있습니다. 이를 통해 Node.js 애플리케이션의 전체 실행을 차단하는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b04fb689cdfb89783ccbca8285e215a680807e6" translate="yes" xml:space="preserve">
          <source>Addon modules often need to leverage async helpers from libuv as part of their implementation. This allows them to schedule work to be executed asynchronously so that their methods can return in advance of the work being completed. This is important in order to allow them to avoid blocking overall execution of the Node.js application.</source>
          <target state="translated">애드온 모듈은 종종 구현의 일부로 libuv의 비동기 헬퍼를 활용해야합니다. 이를 통해 작업이 비동기 적으로 실행되도록 예약하여 작업이 완료되기 전에 메소드가 리턴 될 수 있습니다. Node.js 애플리케이션의 전체 실행을 차단하지 않도록하기 위해 중요합니다.</target>
        </trans-unit>
        <trans-unit id="76f174c9bfb27186048b36320182c45364326e8e" translate="yes" xml:space="preserve">
          <source>Addons are built/packaged with the same approach/tools outlined in the section titled &lt;a href=&quot;addons&quot;&gt;C++ Addons&lt;/a&gt;. The only difference is the set of APIs that are used by the native code. Instead of using the V8 or &lt;a href=&quot;https://github.com/nodejs/nan&quot;&gt;Native Abstractions for Node.js&lt;/a&gt; APIs, the functions available in the N-API are used.</source>
          <target state="translated">애드온은 &lt;a href=&quot;addons&quot;&gt;C ++ 애드온&lt;/a&gt; 섹션에 설명 된 것과 동일한 접근법 / 도구로 빌드 / 패키징됩니다 . 유일한 차이점은 기본 코드에서 사용되는 API 세트입니다. &lt;a href=&quot;https://github.com/nodejs/nan&quot;&gt;Node.js&lt;/a&gt; API에 V8 또는 Native Abstractions를 사용하는 대신 N-API에서 사용 가능한 기능이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="121ff1e38dee4a1b4d853617c298faf35fa49ca8" translate="yes" xml:space="preserve">
          <source>Addons can create and return new objects from within a C++ function as illustrated in the following example. An object is created and returned with a property &lt;code&gt;msg&lt;/code&gt; that echoes the string passed to &lt;code&gt;createObject()&lt;/code&gt;:</source>
          <target state="translated">애드온은 다음 예제와 같이 C ++ 함수 내에서 새 개체를 만들고 반환 할 수 있습니다. &lt;code&gt;createObject()&lt;/code&gt; 전달 된 문자열을 에코하는 &lt;code&gt;msg&lt;/code&gt; 특성으로 오브젝트가 작성되어 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="330eba30d9d92929919fb960016f7ec3b2dc6c0e" translate="yes" xml:space="preserve">
          <source>Addons will typically expose objects and functions that can be accessed from JavaScript running within Node.js. When functions are invoked from JavaScript, the input arguments and return value must be mapped to and from the C/C++ code.</source>
          <target state="translated">애드온은 일반적으로 Node.js 내에서 실행되는 JavaScript에서 액세스 할 수있는 객체와 함수를 노출합니다. JavaScript에서 함수를 호출 할 때 입력 인수 및 리턴 값을 C / C ++ 코드와 맵핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="f3f109625ebff902120689d52a367b977074440e" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;napi_finalize&lt;/code&gt; callback which will be called when the JavaScript object in &lt;code&gt;js_object&lt;/code&gt; is ready for garbage collection. This API is similar to &lt;code&gt;napi_wrap()&lt;/code&gt; except that</source>
          <target state="translated">추가 &lt;code&gt;napi_finalize&lt;/code&gt; 의 에서 자바 스크립트 객체 때 호출 될 콜백 &lt;code&gt;js_object&lt;/code&gt; 는 가비지 컬렉션에 대한 준비가되어 있습니다. 이 API는 비슷합니다 &lt;code&gt;napi_wrap()&lt;/code&gt; 것을 제외</target>
        </trans-unit>
        <trans-unit id="9e1f3e28c01688b9f8472466b288b080eda9569b" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;napi_finalize&lt;/code&gt; callback which will be called when the JavaScript object in &lt;code&gt;js_object&lt;/code&gt; is ready for garbage collection. This API is similar to &lt;code&gt;napi_wrap()&lt;/code&gt; except that:</source>
          <target state="translated">추가 &lt;code&gt;napi_finalize&lt;/code&gt; 의 에서 자바 스크립트 객체 때 호출 될 콜백 &lt;code&gt;js_object&lt;/code&gt; 는 가비지 컬렉션에 대한 준비가되어 있습니다. 이 API는 다음을 제외하고 &lt;code&gt;napi_wrap()&lt;/code&gt; 과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="62e5116b36f62d788818322b298a2c18f88d27ec" translate="yes" xml:space="preserve">
          <source>Adds a &lt;strong&gt;one-time&lt;/strong&gt;&lt;code&gt;listener&lt;/code&gt; function for the event named &lt;code&gt;eventName&lt;/code&gt; to the &lt;em&gt;beginning&lt;/em&gt; of the listeners array. The next time &lt;code&gt;eventName&lt;/code&gt; is triggered, this listener is removed, and then invoked.</source>
          <target state="translated">추가 &lt;strong&gt;일회성 &lt;/strong&gt; &lt;code&gt;listener&lt;/code&gt; 라는 이벤트 기능 &lt;code&gt;eventName&lt;/code&gt; 받는 &lt;em&gt;시작&lt;/em&gt; 청취자 어레이. 다음에 &lt;code&gt;eventName&lt;/code&gt; 이 트리거 될 때이 리스너가 제거 된 다음 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="664bc5ea3c2816f823444dd5461643a6c63f924e" translate="yes" xml:space="preserve">
          <source>Adds a &lt;strong&gt;one-time&lt;/strong&gt;&lt;code&gt;listener&lt;/code&gt; function for the event named &lt;code&gt;eventName&lt;/code&gt;. The next time &lt;code&gt;eventName&lt;/code&gt; is triggered, this listener is removed and then invoked.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 &lt;strong&gt;일회성 &lt;/strong&gt; &lt;code&gt;listener&lt;/code&gt; 함수를 추가합니다 . 다음에 &lt;code&gt;eventName&lt;/code&gt; 이 트리거 될 때이 리스너가 제거 된 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2c65c0f4e8991e7468d0a1632e3b6c70e90b18d8" translate="yes" xml:space="preserve">
          <source>Adds a new handler for the &lt;code&gt;type&lt;/code&gt; event. Any given &lt;code&gt;listener&lt;/code&gt; is added only once per &lt;code&gt;type&lt;/code&gt; and per &lt;code&gt;capture&lt;/code&gt; option value.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 이벤트에 대한 새 처리기를 추가합니다 . 지정된 &lt;code&gt;listener&lt;/code&gt; 는 &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;capture&lt;/code&gt; 옵션 값당 한 번만 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="69b2a5a8e1ed96eb9c5ccb418d3ab79799a03979" translate="yes" xml:space="preserve">
          <source>Adds a rule to block a range of IP addresses from &lt;code&gt;start&lt;/code&gt; (inclusive) to &lt;code&gt;end&lt;/code&gt; (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7356cb791234bfc2a5c4a3942ad303e7437a0f4" translate="yes" xml:space="preserve">
          <source>Adds a rule to block a range of IP addresses specified as a subnet mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ffc3b208a1a0b0a47f5c82d1c4d0f4ba8dd435" translate="yes" xml:space="preserve">
          <source>Adds a rule to block the given IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e6ad53b549d5df1c2237588e810854dc2d33cd" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;listener&lt;/code&gt; function to the &lt;em&gt;beginning&lt;/em&gt; of the listeners array for the event named &lt;code&gt;eventName&lt;/code&gt;. No checks are made to see if the &lt;code&gt;listener&lt;/code&gt; has already been added. Multiple calls passing the same combination of &lt;code&gt;eventName&lt;/code&gt; and &lt;code&gt;listener&lt;/code&gt; will result in the &lt;code&gt;listener&lt;/code&gt; being added, and called, multiple times.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 리스너 배열 의 &lt;em&gt;시작 부분&lt;/em&gt; 에 &lt;code&gt;listener&lt;/code&gt; 함수를 추가합니다 . &lt;code&gt;listener&lt;/code&gt; 가 이미 추가되었는지 확인하지 않습니다 . &lt;code&gt;eventName&lt;/code&gt; 과 &lt;code&gt;listener&lt;/code&gt; 의 동일한 조합을 전달하는 여러 호출 로 인해 &lt;code&gt;listener&lt;/code&gt; 가 여러 번 추가 및 호출됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c049a36c5434522f002408a958088c52a48c3ca" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;listener&lt;/code&gt; function to the end of the listeners array for the event named &lt;code&gt;eventName&lt;/code&gt;. No checks are made to see if the &lt;code&gt;listener&lt;/code&gt; has already been added. Multiple calls passing the same combination of &lt;code&gt;eventName&lt;/code&gt; and &lt;code&gt;listener&lt;/code&gt; will result in the &lt;code&gt;listener&lt;/code&gt; being added, and called, multiple times.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 리스너 배열 끝에 &lt;code&gt;listener&lt;/code&gt; 함수를 추가합니다 . &lt;code&gt;listener&lt;/code&gt; 가 이미 추가되었는지 확인하지 않습니다 . &lt;code&gt;eventName&lt;/code&gt; 과 &lt;code&gt;listener&lt;/code&gt; 의 동일한 조합을 전달하는 여러 호출 로 인해 &lt;code&gt;listener&lt;/code&gt; 가 여러 번 추가 및 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="translated">고급 사용법</target>
        </trans-unit>
        <trans-unit id="3704e06c0197378e4279649d498cea8cb66e0ac3" translate="yes" xml:space="preserve">
          <source>Advanced serialization</source>
          <target state="translated">고급 직렬화</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">고급 사용법</target>
        </trans-unit>
        <trans-unit id="fe7756e92fe98e7589a497c1c9d9e43dd9cd8bca" translate="yes" xml:space="preserve">
          <source>Affects the default output directory of:</source>
          <target state="translated">다음의 기본 출력 디렉토리에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="51ee636021359c235dc38570aaf55e97bfc3ac9c" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;'error'&lt;/code&gt;, no further events other than &lt;code&gt;'close'&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; be emitted (including &lt;code&gt;'error'&lt;/code&gt; events).</source>
          <target state="translated">&lt;code&gt;'error'&lt;/code&gt; 뒤에는 ' &lt;code&gt;'close'&lt;/code&gt; 이외 의 다른 이벤트가 생성되지 &lt;em&gt;않아야&lt;/em&gt; 합니다 ( &lt;code&gt;'error'&lt;/code&gt; 이벤트 포함).</target>
        </trans-unit>
        <trans-unit id="eb8c7c9198e42f64e0b6e51c8d3960d00f926992" translate="yes" xml:space="preserve">
          <source>After a server is closed, it will no longer accept new connections, but connections may be accepted by any other listening worker. Existing connections will be allowed to close as usual. When no more connections exist, see &lt;a href=&quot;net#net_event_close&quot;&gt;&lt;code&gt;server.close()&lt;/code&gt;&lt;/a&gt;, the IPC channel to the worker will close allowing it to die gracefully.</source>
          <target state="translated">서버가 닫힌 후에는 더 이상 새 연결을 수락하지 않지만 다른 수신 대기자가 연결을 수락 할 수 있습니다. 기존 연결은 평소처럼 닫을 수 있습니다. 더 이상 연결이 없으면 &lt;a href=&quot;net#net_event_close&quot;&gt; &lt;code&gt;server.close()&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 워커에 대한 IPC 채널이 닫히면 정상적으로 죽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be9e5afd68bdb3326c2ab142d94d6fcbdda4ff0c" translate="yes" xml:space="preserve">
          <source>After calling &lt;a href=&quot;#cluster_cluster_setupmaster_settings&quot;&gt;&lt;code&gt;.setupMaster()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt;) this settings object will contain the settings, including the default values.</source>
          <target state="translated">&lt;a href=&quot;#cluster_cluster_setupmaster_settings&quot;&gt; &lt;code&gt;.setupMaster()&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt; &lt;code&gt;.fork()&lt;/code&gt; &lt;/a&gt; )를 호출 한 후이 설정 객체는 기본값을 포함한 설정을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="5b0748a4881b7e8f0bcf2b015348c9fe89277e5a" translate="yes" xml:space="preserve">
          <source>After calling &lt;a href=&quot;#n_api_napi_cancel_async_work&quot;&gt;&lt;code&gt;napi_cancel_async_work&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;complete&lt;/code&gt; callback will be invoked with a status value of &lt;code&gt;napi_cancelled&lt;/code&gt;. The work should not be deleted before the &lt;code&gt;complete&lt;/code&gt; callback invocation, even when it was cancelled.</source>
          <target state="translated">호출 한 후 &lt;a href=&quot;#n_api_napi_cancel_async_work&quot;&gt; &lt;code&gt;napi_cancel_async_work&lt;/code&gt; 을&lt;/a&gt; 의 &lt;code&gt;complete&lt;/code&gt; 콜백의 상태 값으로 호출됩니다 &lt;code&gt;napi_cancelled&lt;/code&gt; . 콜백을 &lt;code&gt;complete&lt;/code&gt; 호출 하기 전에 취소 된 경우에도 작업을 삭제해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="95f74b0743d9882d9cdf92970cee93d7c1caa8aa" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;.setupMaster()&lt;/code&gt; (or &lt;code&gt;.fork()&lt;/code&gt;) this settings object will contain the settings, including the default values.</source>
          <target state="translated">&lt;code&gt;.setupMaster()&lt;/code&gt; (또는 &lt;code&gt;.fork()&lt;/code&gt; )를 호출 하면 이 설정 객체에 기본값을 포함한 설정이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2918fa410a60a101fcb651cd652b36df27d89387" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;listen()&lt;/code&gt; from a worker, when the &lt;code&gt;'listening'&lt;/code&gt; event is emitted on the server a &lt;code&gt;'listening'&lt;/code&gt; event will also be emitted on &lt;code&gt;cluster&lt;/code&gt; in the master.</source>
          <target state="translated">호출 한 후 &lt;code&gt;listen()&lt;/code&gt; 때, 작업자에서 &lt;code&gt;'listening'&lt;/code&gt; 이벤트가 서버 A에서 방출되는 &lt;code&gt;'listening'&lt;/code&gt; 이벤트도에 방출됩니다 &lt;code&gt;cluster&lt;/code&gt; 마스터한다.</target>
        </trans-unit>
        <trans-unit id="3770d616d5f1ae7558d451d77c21097865eab7fc" translate="yes" xml:space="preserve">
          <source>After forking a new worker, the worker should respond with an online message. When the master receives an online message it will emit this event. The difference between &lt;code&gt;'fork'&lt;/code&gt; and &lt;code&gt;'online'&lt;/code&gt; is that fork is emitted when the master forks a worker, and &lt;code&gt;'online'&lt;/code&gt; is emitted when the worker is running.</source>
          <target state="translated">새 작업자를 포크 한 후 작업자는 온라인 메시지로 응답해야합니다. 마스터가 온라인 메시지를 받으면이 이벤트가 발생합니다. &lt;code&gt;'fork'&lt;/code&gt; 와 &lt;code&gt;'online'&lt;/code&gt; 의 차이점 은 마스터가 작업자를 포크하면 포크 가 방출되고 작업자가 실행 중이면 &lt;code&gt;'online'&lt;/code&gt; 이 방출 된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="ef408daad54679598b29f24be051786aaaf09b9a" translate="yes" xml:space="preserve">
          <source>After response header was sent to the client, this property indicates the status code which was sent out.</source>
          <target state="translated">응답 헤더가 클라이언트에 전송 된 후이 특성은 전송 된 상태 코드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="58e1d87f2ad14ae4ea7e41a90f49767b8428ae43" translate="yes" xml:space="preserve">
          <source>After response header was sent to the client, this property indicates the status message which was sent out.</source>
          <target state="translated">응답 헤더가 클라이언트로 전송 된 후이 특성은 전송 된 상태 메시지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fcaa5ce2149f49c30cd6ddfc0350bab1fae84624" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;Http2Stream&lt;/code&gt; has been destroyed, the &lt;code&gt;http2stream.destroyed&lt;/code&gt; property will be &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;http2stream.rstCode&lt;/code&gt; property will specify the &lt;code&gt;RST_STREAM&lt;/code&gt; error code. The &lt;code&gt;Http2Stream&lt;/code&gt; instance is no longer usable once destroyed.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; 이 삭제 된 후 &lt;code&gt;http2stream.destroyed&lt;/code&gt; 속성은 &lt;code&gt;true&lt;/code&gt; 가 되고 &lt;code&gt;http2stream.rstCode&lt;/code&gt; 속성은 &lt;code&gt;RST_STREAM&lt;/code&gt; 오류 코드를 지정합니다 . &lt;code&gt;Http2Stream&lt;/code&gt; 의 파괴하면 인스턴스는 더 이상 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="960fb72d5ab59ef368b5716c88e0d11aa5c73cb2" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;http2session.setTimeout()&lt;/code&gt; method is used to set the timeout period for this &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;'timeout'&lt;/code&gt; event is emitted if there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after the configured number of milliseconds.</source>
          <target state="translated">애프터 &lt;code&gt;http2session.setTimeout()&lt;/code&gt; 메소드는 이에 대한 제한 시간 설정하기 위해 사용된다 &lt;code&gt;Http2Session&lt;/code&gt; 을 상기 &lt;code&gt;'timeout'&lt;/code&gt; 상의 활동이 존재하지 않는 경우 이벤트 출사 &lt;code&gt;Http2Session&lt;/code&gt; 밀리 초 후에는 구성된 개수.</target>
        </trans-unit>
        <trans-unit id="475c73adf88ed20d2a14059c634f5c507ae14859" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;http2session.setTimeout()&lt;/code&gt; method is used to set the timeout period for this &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;'timeout'&lt;/code&gt; event is emitted if there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after the configured number of milliseconds. Its listener does not expect any arguments.</source>
          <target state="translated">애프터 &lt;code&gt;http2session.setTimeout()&lt;/code&gt; 메소드는 이에 대한 제한 시간 설정하기 위해 사용된다 &lt;code&gt;Http2Session&lt;/code&gt; 을 상기 &lt;code&gt;'timeout'&lt;/code&gt; 상의 활동이 존재하지 않는 경우 이벤트 출사 &lt;code&gt;Http2Session&lt;/code&gt; 밀리 초 후에는 구성된 개수. 리스너는 인수를 기대하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ec28359dd7d0872dac92b5b10a7e32274793864" translate="yes" xml:space="preserve">
          <source>After the read is completed, a &lt;code&gt;Promise&lt;/code&gt; is returned that will be resolved with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</source>
          <target state="translated">읽기가 완료된 후 &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt; 로 해결 될 &lt;code&gt;Promise&lt;/code&gt; 가 반환 되거나 읽을 디렉터리 항목이 더 이상 없으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="d26f5ffbe495b93bc528a256b7481555faf857d7" translate="yes" xml:space="preserve">
          <source>After the read is completed, the &lt;code&gt;callback&lt;/code&gt; will be called with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</source>
          <target state="translated">읽기가 완료된 후 &lt;code&gt;callback&lt;/code&gt; 은 &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; 를&lt;/a&gt; 사용하여 호출 되거나 읽을 디렉토리 항목이 더 이상 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="51723ebe5876f92a46acd469d0930fc4da0dcf4a" translate="yes" xml:space="preserve">
          <source>After this event is emitted, the request's socket will not have a &lt;code&gt;'data'&lt;/code&gt; event listener, meaning it will need to be bound in order to handle data sent to the server on that socket.</source>
          <target state="translated">이 이벤트가 발생한 후에는 요청 소켓에 &lt;code&gt;'data'&lt;/code&gt; 이벤트 리스너가 없으므로 해당 소켓의 서버로 전송 된 데이터를 처리하려면 바인딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4719d0a9c982b1bab0641b4429267369e1b22b2" translate="yes" xml:space="preserve">
          <source>After this event, no more events will be emitted on the response object.</source>
          <target state="translated">이 이벤트 후에는 더 이상 이벤트가 응답 오브젝트에서 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="02f02485ab679a9031f461bdbd3edab48ea42a79" translate="yes" xml:space="preserve">
          <source>Algorithm</source>
          <target state="translated">Algorithm</target>
        </trans-unit>
        <trans-unit id="6601b8227ffeb2f0a2569fb17bd0a067497dcbc1" translate="yes" xml:space="preserve">
          <source>Algorithm Matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be98b337ad7b5e088f4f751bb8bc72610d4f9f" translate="yes" xml:space="preserve">
          <source>Algorithm Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd818129ec62966d58d30db4a5d37978498b619" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#events_emitter_removelistener_eventname_listener&quot;&gt;&lt;code&gt;emitter.removeListener()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#events_emitter_removelistener_eventname_listener&quot;&gt; &lt;code&gt;emitter.removeListener()&lt;/code&gt; &lt;/a&gt; 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="169c2fa99a03c294b9daeeb089cc52b52876b30f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#url_urlsearchparams_entries&quot;&gt;&lt;code&gt;urlSearchParams.entries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#url_urlsearchparams_entries&quot;&gt; &lt;code&gt;urlSearchParams.entries()&lt;/code&gt; &lt;/a&gt; 별명 .</target>
        </trans-unit>
        <trans-unit id="0e3aef1fcf79eeb74b60559d6bc67222a9c6f3ea" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#url_urlsearchparams_symbol_iterator&quot;&gt;&lt;code&gt;urlSearchParams[@@iterator]()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#url_urlsearchparams_symbol_iterator&quot;&gt; &lt;code&gt;urlSearchParams[@@iterator]()&lt;/code&gt; &lt;/a&gt; 별칭 .</target>
        </trans-unit>
        <trans-unit id="23cbbf6dc88ce45a1d726ac480c6fa761c16b938" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;&lt;code&gt;Array.isArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한 별칭 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt; &lt;code&gt;Array.isArray()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cd1cc201b3e9ac68581d90aa8d91454f0758695" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;emitter.on(eventName, listener)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;emitter.on(eventName, listener)&lt;/code&gt; 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="f244a5054dd8c33b11d17a5b96a805db73007a72" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;event.stopPropagation()&lt;/code&gt;. This is not used in Node.js and is provided purely for completeness.</source>
          <target state="translated">&lt;code&gt;event.stopPropagation()&lt;/code&gt; 대한 별칭 . 이것은 Node.js에서 사용되지 않으며 순전히 완전성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="55e133869d5d8f2352494b62797b175af7e0361e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;event.target&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event.target&lt;/code&gt; 의 별칭 .</target>
        </trans-unit>
        <trans-unit id="75b03d6ff22a6654e108aa828d1cf26a2c84c5e7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;util.debuglog&lt;/code&gt;. Usage allows for readability of that doesn't imply logging when only using &lt;code&gt;util.debuglog().enabled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;util.debuglog&lt;/code&gt; 의 별칭 . 사용법은 &lt;code&gt;util.debuglog().enabled&lt;/code&gt; 만 사용할 때 로깅을 의미하지 않는 가독성을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="bce066f62d155c5925e8e964d3414e7f54c62396" translate="yes" xml:space="preserve">
          <source>Alias for stdin, analogous to the use of - in other command line utilities, meaning that the script will be read from stdin, and the rest of the options are passed to that script.</source>
          <target state="translated">stdin에 대한 별명으로, 다른 명령 줄 유틸리티에서-를 사용하는 것과 유사합니다. 즉, 스크립트를 stdin에서 읽고 나머지 옵션은 해당 스크립트로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="8cb313e8bce424190215692501df8bdf3291293c" translate="yes" xml:space="preserve">
          <source>Alias for stdin. Analogous to the use of &lt;code&gt;-&lt;/code&gt; in other command-line utilities, meaning that the script is read from stdin, and the rest of the options are passed to that script.</source>
          <target state="translated">stdin의 별칭. 다른 명령 줄 유틸리티에서 &lt;code&gt;-&lt;/code&gt; 를 사용하는 것과 유사합니다. 즉, stdin에서 스크립트를 읽고 나머지 옵션이 해당 스크립트로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d0227517fd7611296a3f7ec6dfb82fd6f8fa05f5" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#fs_filehandle_writefile_data_options&quot;&gt;&lt;code&gt;filehandle.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#fs_filehandle_writefile_data_options&quot;&gt; &lt;code&gt;filehandle.writeFile()&lt;/code&gt; &lt;/a&gt; 별칭 .</target>
        </trans-unit>
        <trans-unit id="3227f820d8d77e5174a47fb86db1e57a5359a418" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_options_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(options[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection_options_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(options[, connectListener])&lt;/code&gt; &lt;/a&gt; 별명 .</target>
        </trans-unit>
        <trans-unit id="617912888cea7b948d30800436807bdd9c566837" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_path_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(path[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection_path_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(path[, connectListener])&lt;/code&gt; &lt;/a&gt; 별명 .</target>
        </trans-unit>
        <trans-unit id="c69271fd856f2d1e634b8bff555dad9997ea7f31" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_port_host_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(port[, host][, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">별칭으로 &lt;a href=&quot;#net_net_createconnection_port_host_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(port[, host][, connectListener])&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bccb1caddb7330127407ff7ae79a4c9ae827270" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; called with &lt;code&gt;{ path: path }&lt;/code&gt; as &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">로 별칭 &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt; 로 불리는 &lt;code&gt;{ path: path }&lt;/code&gt; 로서 &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0dd98512ff6ad20db51ef98420b9f1032f7423c" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; called with &lt;code&gt;{port: port, host: host}&lt;/code&gt; as &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">로 별칭 &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt; 로 불리는 &lt;code&gt;{port: port, host: host}&lt;/code&gt; 과 같은 &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="aca21d58e50520a7161bd214dcaca05482a48c05" translate="yes" xml:space="preserve">
          <source>Aliases to &lt;a href=&quot;#net_net_createconnection&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; &lt;/a&gt; 별칭 입니다.</target>
        </trans-unit>
        <trans-unit id="7fe4b43eb4fc860129cdb1932cc23be518b5f4c0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; instances are destroyed either when:</source>
          <target state="translated">다음과 같은 경우 모든 &lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt; 인스턴스가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="71bbd7c540deb3753a2bd126795462f3928f4bf0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;SO_REUSEADDR&lt;/code&gt; (see &lt;a href=&quot;http://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt;&lt;code&gt;socket(7)&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">모든 &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 로 설정됩니다 (자세한 내용은 &lt;a href=&quot;http://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt; &lt;code&gt;socket(7)&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="f638c23ee9d1a370b5b63b2c9afab80ed4e347c1" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;SO_REUSEADDR&lt;/code&gt; (see &lt;a href=&quot;https://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt;&lt;code&gt;socket(7)&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">모든 &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 로 설정됩니다 (자세한 내용은 &lt;a href=&quot;https://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt; &lt;code&gt;socket(7)&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="c44c860647717abef8f86837de68e8e143f07a81" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams begin in paused mode but can be switched to flowing mode in one of the following ways:</source>
          <target state="translated">모든 &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 스트림은 일시 중지 모드에서 시작되지만 다음 방법 중 하나로 흐름 모드로 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f6b1d95077f443d47586c80ca10ec525b570db7" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams implement the interface defined by the &lt;code&gt;stream.Readable&lt;/code&gt; class.</source>
          <target state="translated">모든 &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 스트림은 &lt;code&gt;stream.Readable&lt;/code&gt; 클래스에 의해 정의 된 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="a74e4ee46f2e8749e0804b6d058c3fb0f18a91d3" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; streams implement the interface defined by the &lt;code&gt;stream.Writable&lt;/code&gt; class.</source>
          <target state="translated">모든 &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; 스트림은 &lt;code&gt;stream.Writable&lt;/code&gt; 클래스에 의해 정의 된 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="a44a9bf9bf4fcd5fd95a92175b2678db9f6b4f15" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;EventEmitter&lt;/code&gt;s emit the event &lt;code&gt;'newListener'&lt;/code&gt; when new listeners are added and &lt;code&gt;'removeListener'&lt;/code&gt; when existing listeners are removed.</source>
          <target state="translated">모든 &lt;code&gt;EventEmitter&lt;/code&gt; 의 발광 사건 &lt;code&gt;'newListener'&lt;/code&gt; 새로운 청취자가 추가되고 &lt;code&gt;'removeListener'&lt;/code&gt; 기존의 수신기가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="935ffa1746388a3a6ffbe4f868f5bfac4e1672da" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Http2Stream&lt;/code&gt; instances are &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams. The &lt;code&gt;Writable&lt;/code&gt; side of the &lt;code&gt;Duplex&lt;/code&gt; is used to send data to the connected peer, while the &lt;code&gt;Readable&lt;/code&gt; side is used to receive data sent by the connected peer.</source>
          <target state="translated">모든 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스는 &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; 스트림입니다. &lt;code&gt;Duplex&lt;/code&gt; 의 &lt;code&gt;Writable&lt;/code&gt; 쪽은 연결된 피어로 데이터를 보내는 데 사용되고 &lt;code&gt;Readable&lt;/code&gt; 쪽은 연결된 피어가 보낸 데이터를받는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1eaff6abb3391cb33815b91d82ba4fd11988e668" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Readable&lt;/code&gt; stream implementations must provide an implementation of the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method to fetch data from the underlying resource.</source>
          <target state="translated">모든 &lt;code&gt;Readable&lt;/code&gt; 스트림 구현은 기본 리소스에서 데이터를 가져 오기 위해 Readable._read &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 메서드 의 구현을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="896a5dff9ee9a8501d933445f4887eae930c0dd5" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Readable&lt;/code&gt; stream implementations must provide an implementation of the &lt;code&gt;readable._read()&lt;/code&gt; method to fetch data from the underlying resource.</source>
          <target state="translated">모든 &lt;code&gt;Readable&lt;/code&gt; 스트림 구현은 기본 자원에서 데이터를 페치하기 위해 &lt;code&gt;readable._read()&lt;/code&gt; 메소드 의 구현을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="25965a84f1f0744ad2379eeaa63d722e2da48797" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Transform&lt;/code&gt; stream implementations must provide a &lt;code&gt;_transform()&lt;/code&gt; method to accept input and produce output. The &lt;code&gt;transform._transform()&lt;/code&gt; implementation handles the bytes being written, computes an output, then passes that output off to the readable portion using the &lt;code&gt;readable.push()&lt;/code&gt; method.</source>
          <target state="translated">모든 &lt;code&gt;Transform&lt;/code&gt; 스트림 구현은 입력을 허용하고 출력을 생성 하기 위해 &lt;code&gt;_transform()&lt;/code&gt; 메소드를 제공해야합니다 . &lt;code&gt;transform._transform()&lt;/code&gt; 바이트가 기록되는 구현 핸들 후 사용 판독 부에 떨어져 그 출력을 전달하는 출력을 계산 &lt;code&gt;readable.push()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="ed7429a089b008886db918411f22464481d5a71c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Transform&lt;/code&gt; stream implementations must provide a &lt;code&gt;_transform()&lt;/code&gt; method to accept input and produce output. The &lt;code&gt;transform._transform()&lt;/code&gt; implementation handles the bytes being written, computes an output, then passes that output off to the readable portion using the &lt;code&gt;transform.push()&lt;/code&gt; method.</source>
          <target state="translated">모든 &lt;code&gt;Transform&lt;/code&gt; 스트림 구현은 입력을 받아들이고 출력을 생성 하기 위해 &lt;code&gt;_transform()&lt;/code&gt; 메서드를 제공해야합니다 . &lt;code&gt;transform._transform()&lt;/code&gt; 바이트가 기록되는 구현 핸들 후 사용 판독 부에 떨어져 그 출력을 전달하는 출력을 계산 &lt;code&gt;transform.push()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="ee5972f7beb7b0f33c7a905ddd82752b5535e22d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances are views over an underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;. That is, it is the &lt;code&gt;ArrayBuffer&lt;/code&gt; that actually stores the raw data while the &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; objects provide a way of viewing and manipulating the data. It is possible and common for multiple views to be created over the same &lt;code&gt;ArrayBuffer&lt;/code&gt; instance. Great care must be taken when using a transfer list to transfer an &lt;code&gt;ArrayBuffer&lt;/code&gt; as doing so causes all &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances that share that same &lt;code&gt;ArrayBuffer&lt;/code&gt; to become unusable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabf78e0f89c515548a408b371c029a260b97c3e" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances are views over an underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;. That is, it is the &lt;code&gt;ArrayBuffer&lt;/code&gt; that actually stores the raw data while the &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; objects provide a way of viewing and manipulating the data. It is possible and common for multiple views to be created over the same &lt;code&gt;ArrayBuffer&lt;/code&gt; instance. Great care must be taken when using a transfer list to transfer an &lt;code&gt;ArrayBuffer&lt;/code&gt; as doing so will cause all &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances that share that same &lt;code&gt;ArrayBuffer&lt;/code&gt; to become unusable.</source>
          <target state="translated">모든 &lt;code&gt;TypedArray&lt;/code&gt; 및 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스는 기본 &lt;code&gt;ArrayBuffer&lt;/code&gt; 에 대한 뷰 입니다. 즉, 실제로 원시 데이터를 저장하는 것은 &lt;code&gt;ArrayBuffer&lt;/code&gt; 이며 &lt;code&gt;TypedArray&lt;/code&gt; 및 &lt;code&gt;Buffer&lt;/code&gt; 객체는 데이터를보고 조작하는 방법을 제공합니다. 동일한 &lt;code&gt;ArrayBuffer&lt;/code&gt; 인스턴스 에서 여러 뷰를 만드는 것이 가능하고 일반적입니다 . 전송 목록을 사용하여 &lt;code&gt;ArrayBuffer&lt;/code&gt; 를 전송할 때 매우주의해야합니다. 그렇게하면 동일한 &lt;code&gt;ArrayBuffer&lt;/code&gt; 를 공유하는 모든 &lt;code&gt;TypedArray&lt;/code&gt; 및 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="9f7879641ea3f0e1cea7f0b0996200c2392ed563" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Writable&lt;/code&gt; stream implementations must provide a &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt;&lt;code&gt;writable._write()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#stream_writable_writev_chunks_callback&quot;&gt;&lt;code&gt;writable._writev()&lt;/code&gt;&lt;/a&gt; method to send data to the underlying resource.</source>
          <target state="translated">모든 &lt;code&gt;Writable&lt;/code&gt; 스트림 구현은 데이터를 기본 리소스로 보내기 위해 &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt; &lt;code&gt;writable._write()&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#stream_writable_writev_chunks_callback&quot;&gt; &lt;code&gt;writable._writev()&lt;/code&gt; &lt;/a&gt; 메서드를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="88861c6bdf69df8a65d7c445934562e2ebccfc7f" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Writable&lt;/code&gt; stream implementations must provide a &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt;&lt;code&gt;writable._write()&lt;/code&gt;&lt;/a&gt; method to send data to the underlying resource.</source>
          <target state="translated">모든 &lt;code&gt;Writable&lt;/code&gt; 스트림 구현은 기본 리소스로 데이터를 전송 하기 위해 &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt; &lt;code&gt;writable._write()&lt;/code&gt; &lt;/a&gt; 메소드를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3443a41a48d02b84720bfc848af82205a36d4561" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.FSWatcher&lt;/code&gt; objects are &lt;a href=&quot;events&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;'s that will emit a &lt;code&gt;'change'&lt;/code&gt; event whenever a specific watched file is modified.</source>
          <target state="translated">모든 &lt;code&gt;fs.FSWatcher&lt;/code&gt; 객체는 특정 감시 대상 파일이 수정 될 때마다 &lt;code&gt;'change'&lt;/code&gt; 이벤트를 발생 시키는 &lt;a href=&quot;events&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b372a4a5c65b8cd2e8d09b97ddaa4e44af4867ae" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.FSWatcher&lt;/code&gt; objects emit a &lt;code&gt;'change'&lt;/code&gt; event whenever a specific watched file is modified.</source>
          <target state="translated">모든 &lt;code&gt;fs.FSWatcher&lt;/code&gt; 객체 는 특정 감시 파일이 수정 될 때마다 &lt;code&gt;'change'&lt;/code&gt; 이벤트를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="8c1d1ad3ac6899e806ce2231d419854cdd7c3865" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.ReadStream&lt;/code&gt; objects are &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Streams&lt;/a&gt;.</source>
          <target state="translated">모든 &lt;code&gt;fs.ReadStream&lt;/code&gt; 객체는 &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;읽기 가능한 스트림&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b6af1186262caa67759a8bc5c7b0f6d30d9340ce" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;listen()&lt;/code&gt; methods can take a &lt;code&gt;backlog&lt;/code&gt; parameter to specify the maximum length of the queue of pending connections. The actual length will be determined by the OS through sysctl settings such as &lt;code&gt;tcp_max_syn_backlog&lt;/code&gt; and &lt;code&gt;somaxconn&lt;/code&gt; on Linux. The default value of this parameter is 511 (not 512).</source>
          <target state="translated">모든 &lt;code&gt;listen()&lt;/code&gt; 메소드는 &lt;code&gt;backlog&lt;/code&gt; 매개 변수를 사용하여 보류중인 연결 큐의 최대 길이를 지정할 수 있습니다 . 실제 길이는 Linux에서 &lt;code&gt;tcp_max_syn_backlog&lt;/code&gt; 및 &lt;code&gt;somaxconn&lt;/code&gt; 과 같은 sysctl 설정을 통해 OS에 의해 결정됩니다 . 이 매개 변수의 기본값은 512가 아닌 511입니다.</target>
        </trans-unit>
        <trans-unit id="2833f0ffdbc8052bef39fdc07cf85169e502cf5c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;zlib&lt;/code&gt; APIs, except those that are explicitly synchronous, use the Node.js internal threadpool. This can lead to surprising effects and performance limitations in some applications.</source>
          <target state="translated">명시 적으로 동기화 된 API를 제외한 모든 &lt;code&gt;zlib&lt;/code&gt; API는 Node.js 내부 스레드 풀을 사용합니다. 이로 인해 일부 응용 프로그램에서 놀라운 효과와 성능 제한이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36442760c73cb61a13fd9eaff03bf94062a35c9d" translate="yes" xml:space="preserve">
          <source>All JavaScript and System errors raised by Node.js inherit from, or are instances of, the standard JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; class and are guaranteed to provide &lt;em&gt;at least&lt;/em&gt; the properties available on that class.</source>
          <target state="translated">Node.js에 의해 발생 된 모든 JavaScript 및 시스템 오류는 표준 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; 클래스 에서 상속되거나 그 인스턴스이며 &lt;em&gt;최소한&lt;/em&gt; 해당 클래스에서 사용 가능한 특성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="de49cf32c0365c1eb8509b935135349013decac3" translate="yes" xml:space="preserve">
          <source>All JavaScript and system errors raised by Node.js inherit from, or are instances of, the standard JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; class and are guaranteed to provide &lt;em&gt;at least&lt;/em&gt; the properties available on that class.</source>
          <target state="translated">Node.js에서 발생하는 모든 JavaScript 및 시스템 오류는 표준 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; 클래스 에서 상속되거나 그 인스턴스이며 해당 클래스에서 사용 가능한 속성 &lt;em&gt;을 최소한&lt;/em&gt; 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="16560cff3d80d11e9b5e7f492a9692a6ce36a477" translate="yes" xml:space="preserve">
          <source>All JavaScript errors are handled as exceptions that &lt;em&gt;immediately&lt;/em&gt; generate and throw an error using the standard JavaScript &lt;code&gt;throw&lt;/code&gt; mechanism. These are handled using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt;&lt;code&gt;try&amp;hellip;catch&lt;/code&gt; construct&lt;/a&gt; provided by the JavaScript language.</source>
          <target state="translated">모든 JavaScript 오류는 표준 JavaScript &lt;code&gt;throw&lt;/code&gt; 메커니즘을 사용하여 오류를 &lt;em&gt;즉시&lt;/em&gt; 생성하고 발생시키는 예외로 처리됩니다 . 이것들은 JavaScript 언어가 제공 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt; &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; &lt;/a&gt; 구문을 사용하여 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="bb4132449bbcf2ed8ba71bc73ff2c0038d63b185" translate="yes" xml:space="preserve">
          <source>All JavaScript executed within Node.js runs within the scope of a &quot;context&quot;. According to the &lt;a href=&quot;https://v8.dev/docs/embed#contexts&quot;&gt;V8 Embedder's Guide&lt;/a&gt;:</source>
          <target state="translated">Node.js 내에서 실행되는 모든 JavaScript는 &quot;컨텍스트&quot;범위 내에서 실행됩니다. &lt;a href=&quot;https://v8.dev/docs/embed#contexts&quot;&gt;V8 Embedder 's Guide&lt;/a&gt; 에 따르면 :</target>
        </trans-unit>
        <trans-unit id="1884843c5505a9a286120a5c84c1e1f9c5db98da" translate="yes" xml:space="preserve">
          <source>All JavaScript values are abstracted behind an opaque type named &lt;code&gt;napi_value&lt;/code&gt;.</source>
          <target state="translated">모든 JavaScript 값은 &lt;code&gt;napi_value&lt;/code&gt; 라는 불투명 한 유형 뒤에 추상화 됩니다.</target>
        </trans-unit>
        <trans-unit id="8b4fca30c7bef2be5e2035a2489193144182b18b" translate="yes" xml:space="preserve">
          <source>All N-API calls return a status code of type &lt;code&gt;napi_status&lt;/code&gt;. This status indicates whether the API call succeeded or failed.</source>
          <target state="translated">모든 N-API 호출은 &lt;code&gt;napi_status&lt;/code&gt; 유형의 상태 코드를 반환합니다 . 이 상태는 API 호출의 성공 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="75acf0f2a180507110d4d6a665a7fd82e6569c9c" translate="yes" xml:space="preserve">
          <source>All Node.js Addons must export an initialization function following the pattern:</source>
          <target state="translated">모든 Node.js 애드온은 패턴에 따라 초기화 함수를 내 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="30f7f47c398b5b6b2bbcfff7884f315439b25de5" translate="yes" xml:space="preserve">
          <source>All Node.js addons must export an initialization function following the pattern:</source>
          <target state="translated">모든 Node.js 애드온은 패턴에 따라 초기화 함수를 내 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="2fef8393cd57860083288f2a59f29dc02cbf5778" translate="yes" xml:space="preserve">
          <source>All Together...</source>
          <target state="translated">모두 함께...</target>
        </trans-unit>
        <trans-unit id="a45f00525f348addf5245a617a6395d00bad1d81" translate="yes" xml:space="preserve">
          <source>All additional properties on the settings object are ignored.</source>
          <target state="translated">설정 개체의 모든 추가 속성은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="167f5781e42a170b5eee01c7c7fa885b364272e6" translate="yes" xml:space="preserve">
          <source>All attempts at serializing an uncaught exception from a worker thread failed.</source>
          <target state="translated">작업자 스레드에서 포착되지 않은 예외를 직렬화하려는 모든 시도가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="a07c79d3815678342c9ab6b3437e2eb6ca8945e6" translate="yes" xml:space="preserve">
          <source>All callbacks are optional. For example, if only resource cleanup needs to be tracked, then only the &lt;code&gt;destroy&lt;/code&gt; callback needs to be passed. The specifics of all functions that can be passed to &lt;code&gt;callbacks&lt;/code&gt; is in the &lt;a href=&quot;#async_hooks_hook_callbacks&quot;&gt;Hook Callbacks&lt;/a&gt; section.</source>
          <target state="translated">모든 콜백은 선택 사항입니다. 예를 들어 리소스 정리 만 추적 해야하는 경우 &lt;code&gt;destroy&lt;/code&gt; 콜백 만 전달하면됩니다. 에 전달 될 수있는 모든 기능의 구체적인 &lt;code&gt;callbacks&lt;/code&gt; 에 &lt;a href=&quot;#async_hooks_hook_callbacks&quot;&gt;후크 콜백의&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7846d9f48605d02cd4db6f0929d9f3957a319c86" translate="yes" xml:space="preserve">
          <source>All calls to &lt;code&gt;writable.write()&lt;/code&gt; that occur between the time &lt;code&gt;writable._write()&lt;/code&gt; is called and the &lt;code&gt;callback&lt;/code&gt; is called will cause the written data to be buffered. When the &lt;code&gt;callback&lt;/code&gt; is invoked, the stream might emit a &lt;a href=&quot;#stream_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; event. If a stream implementation is capable of processing multiple chunks of data at once, the &lt;code&gt;writable._writev()&lt;/code&gt; method should be implemented.</source>
          <target state="translated">&lt;code&gt;writable._write()&lt;/code&gt; 가 호출되고 &lt;code&gt;callback&lt;/code&gt; 이 호출 되는 시간 사이에 발생 하는 &lt;code&gt;writable.write()&lt;/code&gt; 모든 호출 은 기록 된 데이터를 버퍼링합니다. 때 &lt;code&gt;callback&lt;/code&gt; 호출, 스트림은 방출 할 수있는 &lt;a href=&quot;#stream_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt; 이벤트를. 스트림 구현이 한 번에 여러 데이터 청크를 처리 할 수 ​​있으면 &lt;code&gt;writable._writev()&lt;/code&gt; 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="cd9543be6390d96b2ef513aab1565edc8245a14a" translate="yes" xml:space="preserve">
          <source>All errors generated by Node.js, including all System and JavaScript errors, will either be instances of, or inherit from, the &lt;code&gt;Error&lt;/code&gt; class.</source>
          <target state="translated">모든 시스템 및 JavaScript 오류를 포함하여 Node.js에 의해 생성 된 모든 오류는 &lt;code&gt;Error&lt;/code&gt; 클래스의 인스턴스이거나 그로부터 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="5164692f9a9527b3909c9c977f4ca559b67bdf34" translate="yes" xml:space="preserve">
          <source>All errors generated by Node.js, including all system and JavaScript errors, will either be instances of, or inherit from, the &lt;code&gt;Error&lt;/code&gt; class.</source>
          <target state="translated">모든 시스템 및 JavaScript 오류를 포함하여 Node.js에서 생성 된 모든 오류는 &lt;code&gt;Error&lt;/code&gt; 클래스의 인스턴스이거나 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="26c3a80c4cdb64541ce283b3a6c6072bce184cf7" translate="yes" xml:space="preserve">
          <source>All file system APIs except &lt;code&gt;fs.FSWatcher()&lt;/code&gt; and those that are explicitly synchronous use libuv's threadpool, which can have surprising and negative performance implications for some applications. See the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;&lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">&lt;code&gt;fs.FSWatcher()&lt;/code&gt; 제외한 모든 파일 시스템 API 와 명시 적으로 동기화 된 파일 시스템 은 libuv의 스레드 풀을 사용하므로 일부 응용 프로그램에는 놀라운 성능 저하가 발생할 수 있습니다. 자세한 내용은 &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; &lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0633b0855ed71d3ce1a3ac8d613cd5791b00424f" translate="yes" xml:space="preserve">
          <source>All file system operations have synchronous and asynchronous forms.</source>
          <target state="translated">모든 파일 시스템 작업에는 동기식 및 비동기식 양식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a40fc8ef243bc8dbc49c2e5720b47f3d4f797d73" translate="yes" xml:space="preserve">
          <source>All file system operations have synchronous, callback, and promise-based forms.</source>
          <target state="translated">모든 파일 시스템 작업에는 동기, 콜백 및 약속 기반 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fced75be647220018f131102098da3592071106c" translate="yes" xml:space="preserve">
          <source>All functionality described in the &lt;a href=&quot;https://tc39.github.io/ecma402/&quot;&gt;ECMAScript Internationalization API Specification&lt;/a&gt; (aka ECMA-402):</source>
          <target state="translated">&lt;a href=&quot;https://tc39.github.io/ecma402/&quot;&gt;ECMAScript 국제화 API 사양&lt;/a&gt; (일명 ECMA-402)에 설명 된 모든 기능 :</target>
        </trans-unit>
        <trans-unit id="5d389e07d3c8e8cd83972dc85784ff82c1eadff9" translate="yes" xml:space="preserve">
          <source>All instances contain the built-in &lt;code&gt;Error&lt;/code&gt; properties (&lt;code&gt;message&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;) and:</source>
          <target state="translated">모든 인스턴스에는 기본 제공 &lt;code&gt;Error&lt;/code&gt; 속성 ( &lt;code&gt;message&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; )이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="088f94721b3a2254d0eb027e4ad370ea58b88cdd" translate="yes" xml:space="preserve">
          <source>All messages sent from the worker thread are emitted before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted on the &lt;code&gt;Worker&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7acf4d2973be335e18b8185508a93552cd2d24" translate="yes" xml:space="preserve">
          <source>All messages sent from the worker thread will be emitted before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted on the &lt;code&gt;Worker&lt;/code&gt; object.</source>
          <target state="translated">작업자 스레드에서 보낸 모든 메시지 는 &lt;code&gt;Worker&lt;/code&gt; 개체 에서 &lt;a href=&quot;#worker_threads_event_exit&quot;&gt; &lt;code&gt;'exit'&lt;/code&gt; 이벤트&lt;/a&gt; 가 발생 하기 전에 배출됩니다 .</target>
        </trans-unit>
        <trans-unit id="7aa444f47c270644fb7625f868fac675c2d3ac02" translate="yes" xml:space="preserve">
          <source>All objects that emit events are instances of the &lt;code&gt;EventEmitter&lt;/code&gt; class. These objects expose an &lt;code&gt;eventEmitter.on()&lt;/code&gt; function that allows one or more functions to be attached to named events emitted by the object. Typically, event names are camel-cased strings but any valid JavaScript property key can be used.</source>
          <target state="translated">이벤트를 발생시키는 모든 객체는 &lt;code&gt;EventEmitter&lt;/code&gt; 클래스의 인스턴스입니다 . 이러한 객체 는 하나 이상의 함수를 객체가 생성 한 명명 된 이벤트에 첨부 할 수 있는 &lt;code&gt;eventEmitter.on()&lt;/code&gt; 함수를 노출 합니다. 일반적으로 이벤트 이름은 낙타 문자 문자열이지만 유효한 JavaScript 속성 키를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8e71b13cd7cab02ba4a9267eb78069628cda343" translate="yes" xml:space="preserve">
          <source>All of the N-API functions share the same error handling pattern. The return type of all API functions is &lt;code&gt;napi_status&lt;/code&gt;.</source>
          <target state="translated">모든 N-API 기능은 동일한 오류 처리 패턴을 공유합니다. 모든 API 함수의 리턴 유형은 &lt;code&gt;napi_status&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8b5c39f053b735c96bb27ce0f613978a828c317b" translate="yes" xml:space="preserve">
          <source>All of the constants defined in &lt;code&gt;zlib.h&lt;/code&gt; are also defined on &lt;code&gt;require('zlib').constants&lt;/code&gt;. In the normal course of operations, it will not be necessary to use these constants. They are documented so that their presence is not surprising. This section is taken almost directly from the &lt;a href=&quot;https://zlib.net/manual.html#Constants&quot;&gt;zlib documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;zlib.h&lt;/code&gt; 에 정의 된 모든 상수 는 &lt;code&gt;require('zlib').constants&lt;/code&gt; 에 정의되어 있습니다. 정상적인 작업 과정에서는 이러한 상수를 사용할 필요가 없습니다. 그들의 존재가 놀라지 않도록 문서화됩니다. 이 섹션은 &lt;a href=&quot;https://zlib.net/manual.html#Constants&quot;&gt;zlib 문서&lt;/a&gt; 에서 거의 직접 가져온 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4b60d35af055ed8a5627513816817f3b4c2a3b80" translate="yes" xml:space="preserve">
          <source>All of the following examples are available for &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;download&lt;/a&gt; and may be used as the starting-point for an Addon.</source>
          <target state="translated">다음 예제는 모두 &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;다운로드&lt;/a&gt; 할 수 있으며 Addon의 시작점으로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c44953ea6295e98b8983681700e7a7855b0536b3" translate="yes" xml:space="preserve">
          <source>All of the following examples are available for &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;download&lt;/a&gt; and may be used as the starting-point for an addon.</source>
          <target state="translated">다음 예제는 모두 &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;다운로드&lt;/a&gt; 할 수 있으며 애드온의 시작점으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48cdde557fd23eb051989a209de3e33f737814bb" translate="yes" xml:space="preserve">
          <source>All of these take a &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or string as the first argument, an optional second argument to supply options to the &lt;code&gt;zlib&lt;/code&gt; classes and will call the supplied callback with &lt;code&gt;callback(error, result)&lt;/code&gt;.</source>
          <target state="translated">이들 모두는 &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 string을 첫 번째 인수로 사용하고 &lt;code&gt;zlib&lt;/code&gt; 클래스에 옵션을 제공하는 선택적 두 번째 인수로 &lt;code&gt;callback(error, result)&lt;/code&gt; 제공된 콜백을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="006dbd5a02937a18d7fffb922305010c1b4d56c3" translate="yes" xml:space="preserve">
          <source>All offsets are now coerced to integers before doing any calculations with them.</source>
          <target state="translated">모든 오프셋은 이제 계산을하기 전에 정수로 강제 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a91c8e7948e63f046e7b16032a0ecd2a5276708e" translate="yes" xml:space="preserve">
          <source>All options, including V8 options, allow words to be separated by both dashes (&lt;code&gt;-&lt;/code&gt;) or underscores (&lt;code&gt;_&lt;/code&gt;).</source>
          <target state="translated">V8 옵션을 포함한 모든 옵션을 사용하면 단어를 대시 ( &lt;code&gt;-&lt;/code&gt; ) 또는 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) 로 구분할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e3d6833d92eea0a622545ca43da8d58f4430f44" translate="yes" xml:space="preserve">
          <source>All options, including V8 options, allow words to be separated by both dashes (&lt;code&gt;-&lt;/code&gt;) or underscores (&lt;code&gt;_&lt;/code&gt;). For example, &lt;code&gt;--pending-deprecation&lt;/code&gt; is equivalent to &lt;code&gt;--pending_deprecation&lt;/code&gt;.</source>
          <target state="translated">V8 옵션을 포함한 모든 옵션에서는 대시 ( &lt;code&gt;-&lt;/code&gt; ) 또는 밑줄 ( &lt;code&gt;_&lt;/code&gt; )로 단어를 구분할 수 있습니다 . 예를 들어 &lt;code&gt;--pending-deprecation&lt;/code&gt; 은 &lt;code&gt;--pending_deprecation&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0e095f1dac7b03c4bb045596dfa47b1250120312" translate="yes" xml:space="preserve">
          <source>All other functions in the &lt;code&gt;dns&lt;/code&gt; module connect to an actual DNS server to perform name resolution. They will always use the network to perform DNS queries. These functions do not use the same set of configuration files used by &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;/etc/hosts&lt;/code&gt;). Use these functions to always perform DNS queries, bypassing other name-resolution facilities.</source>
          <target state="translated">&lt;code&gt;dns&lt;/code&gt; 모듈의 다른 모든 기능 은 실제 DNS 서버에 연결하여 이름 확인을 수행합니다. 그들은 항상 네트워크를 사용하여 DNS 쿼리를 수행합니다. 이러한 함수는 &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 사용하는 것과 동일한 구성 파일 세트를 사용하지 않습니다 (예 : &lt;code&gt;/etc/hosts&lt;/code&gt; ). 이 함수를 사용하여 항상 다른 이름 확인 기능을 우회하여 DNS 쿼리를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1353130fac461803375040f470cf617554fda8b0" translate="yes" xml:space="preserve">
          <source>All other interactions will be routed directly to the socket.</source>
          <target state="translated">다른 모든 상호 작용은 소켓으로 직접 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="6bc71f8e2ce93a81a780d0ec39b10e45042442c8" translate="yes" xml:space="preserve">
          <source>All other interactions will be routed directly to the socket. With TLS support, use &lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt;&lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt;&lt;/a&gt; to obtain the client's authentication details.</source>
          <target state="translated">다른 모든 상호 작용은 소켓으로 직접 라우팅됩니다. TLS 지원과 함께 &lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt; &lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt; &lt;/a&gt; 를 사용하여 클라이언트의 인증 세부 사항을 확보하십시오.</target>
        </trans-unit>
        <trans-unit id="3b8b16d57418e19db895957a2cd599fe2e533613" translate="yes" xml:space="preserve">
          <source>All paths defined in the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; must be relative file URLs starting with &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b4adf969225f5dea18ce365eb8c20d9152b994" translate="yes" xml:space="preserve">
          <source>All references to scope in this section are referring to IPv6 Zone Indices, which are defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4007&quot;&gt;RFC 4007&lt;/a&gt;. In string form, an IP with a scope index is written as &lt;code&gt;'IP%scope'&lt;/code&gt; where scope is an interface name or interface number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d373e9c7fee9a308b409114b19bba5863688c00" translate="yes" xml:space="preserve">
          <source>All streams created by Node.js APIs operate exclusively on strings and &lt;code&gt;Buffer&lt;/code&gt; (or &lt;code&gt;Uint8Array&lt;/code&gt;) objects. It is possible, however, for stream implementations to work with other types of JavaScript values (with the exception of &lt;code&gt;null&lt;/code&gt;, which serves a special purpose within streams). Such streams are considered to operate in &quot;object mode&quot;.</source>
          <target state="translated">Node.js API로 작성된 모든 스트림은 문자열 및 &lt;code&gt;Buffer&lt;/code&gt; (또는 &lt;code&gt;Uint8Array&lt;/code&gt; ) 오브젝트 에서만 독점적으로 작동 합니다. 그러나 스트림 구현이 다른 유형의 JavaScript 값과 함께 작동 할 수 있습니다 ( &lt;code&gt;null&lt;/code&gt; 제외 , 스트림 내에서 특수 목적을 수행함). 이러한 스트림은 &quot;개체 모드&quot;에서 작동하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="c2330ed3cb4343470a9656ea264686e940a6d30d" translate="yes" xml:space="preserve">
          <source>All systems use an IP of the host on the desired physical interface:</source>
          <target state="translated">모든 시스템은 원하는 물리적 인터페이스에서 호스트의 IP를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e29e96c110bff02d5952607fd244cbb792258ce3" translate="yes" xml:space="preserve">
          <source>All together...</source>
          <target state="translated">모두 함께...</target>
        </trans-unit>
        <trans-unit id="97a23133a76864dafb4de834709dbf8b24d28541" translate="yes" xml:space="preserve">
          <source>All workers are created using &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;, the returned object from this function is stored as &lt;code&gt;.process&lt;/code&gt;. In a worker, the global &lt;code&gt;process&lt;/code&gt; is stored.</source>
          <target state="translated">모든 워커는 &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; &lt;/a&gt; 사용하여 생성 되며이 함수에서 반환 된 객체는 &lt;code&gt;.process&lt;/code&gt; 로 저장됩니다. . 작업자에게는 전역 &lt;code&gt;process&lt;/code&gt; 가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="6e9d6e8b57486f83cc80588427554041a2873237" translate="yes" xml:space="preserve">
          <source>All zlib APIs, except those that are explicitly synchronous, use libuv's threadpool. This can lead to surprising effects in some applications, such as subpar performance (which can be mitigated by adjusting the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;pool size&lt;/a&gt;) and/or unrecoverable and catastrophic memory fragmentation.</source>
          <target state="translated">명시 적으로 동기화 된 API를 제외한 모든 zlib API는 libuv의 스레드 풀을 사용합니다. 이로 인해 일부 응용 프로그램에서 하위 성능과 같은 놀라운 효과가 발생할 수 있습니다.&lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; 풀 크기&lt;/a&gt; ) 및 / 또는 복구 불가능하고 치명적인 메모리 조각화와 .</target>
        </trans-unit>
        <trans-unit id="84a0c34cbc67fc12fbdeb4f95c2d0527efcb9c2f" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;fill&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;Buffer&lt;/code&gt; will be &lt;em&gt;zero-filled&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 바이트 의 새로운 &lt;code&gt;Buffer&lt;/code&gt; 를 할당 합니다. 경우 &lt;code&gt;fill&lt;/code&gt; 되어 &lt;code&gt;undefined&lt;/code&gt; 는 &lt;code&gt;Buffer&lt;/code&gt; 될 것입니다&lt;em&gt; 제로를 작성을&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f02075833efede72278358dccc2bf4752b07141d" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;fill&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;Buffer&lt;/code&gt; will be zero-filled.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 바이트 의 새 &lt;code&gt;Buffer&lt;/code&gt; 를 할당 합니다. 경우 &lt;code&gt;fill&lt;/code&gt; 되어 &lt;code&gt;undefined&lt;/code&gt; 는 &lt;code&gt;Buffer&lt;/code&gt; 제로를 작성 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="59a28dc923e998544d059f38fd72af91d80e51d9" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2cba9c0a244ef016bf2844375b1df16b58c483" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce462294b5ef5ae040caa30fe55f12ad117477e" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 바이트 의 새 &lt;code&gt;Buffer&lt;/code&gt; 를 할당 합니다. 경우 &lt;code&gt;size&lt;/code&gt; 보다 큰 &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt; 0보다 작은, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; 가&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eef231d49036e53aecd6e881705e3f9c90037c66" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 바이트 의 새로운 &lt;code&gt;Buffer&lt;/code&gt; 를 할당 합니다. 경우 &lt;code&gt;size&lt;/code&gt; 보다 큰 &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt; 0보다 작은, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; 가&lt;/a&gt; 발생합니다. 제로 길이 &lt;code&gt;Buffer&lt;/code&gt; 가 작성되고 &lt;code&gt;size&lt;/code&gt; 0이다.</target>
        </trans-unit>
        <trans-unit id="a59e375f63b200db935e9506cdbc116408bd810c" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; using an &lt;code&gt;array&lt;/code&gt; of bytes in the range &lt;code&gt;0&lt;/code&gt; &amp;ndash; &lt;code&gt;255&lt;/code&gt;. Array entries outside that range will be truncated to fit into it.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &amp;ndash; &lt;code&gt;255&lt;/code&gt; 범위의 바이트 &lt;code&gt;array&lt;/code&gt; 을 사용하여 새 &lt;code&gt;Buffer&lt;/code&gt; 를 할당합니다 . 해당 범위를 벗어난 배열 항목은 이에 맞게 잘립니다.</target>
        </trans-unit>
        <trans-unit id="73735d1d02add01f7fa5d7413dc99be8a48104cc" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; using an &lt;code&gt;array&lt;/code&gt; of octets.</source>
          <target state="translated">옥텟 &lt;code&gt;array&lt;/code&gt; 을 사용하여 새 &lt;code&gt;Buffer&lt;/code&gt; 를 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="183b2af6db1854a9e765cc8bd0448f0caa18b7c0" translate="yes" xml:space="preserve">
          <source>Allow explicity setting date headers.</source>
          <target state="translated">명시적인 설정 날짜 헤더를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7dfdd74de9aa27ce193f639364b63fb3d68e34de" translate="yes" xml:space="preserve">
          <source>Allow passing headers as an array.</source>
          <target state="translated">헤더를 배열로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4bd93fc1f785babd9680ace0e28fac4e5e950f" translate="yes" xml:space="preserve">
          <source>Allowed flush values.</source>
          <target state="translated">허용 된 플러시 값.</target>
        </trans-unit>
        <trans-unit id="6e5b9413bd78182a240abf413e97ea168a6f9304" translate="yes" xml:space="preserve">
          <source>Allowing a &lt;a href=&quot;fs#fs_class_filehandle&quot;&gt;&lt;code&gt;fs.FileHandle&lt;/code&gt;&lt;/a&gt; object to be closed on garbage collection is deprecated. In the future, doing so might result in a thrown error that will terminate the process.</source>
          <target state="translated">&lt;a href=&quot;fs#fs_class_filehandle&quot;&gt; &lt;code&gt;fs.FileHandle&lt;/code&gt; &lt;/a&gt; 오브젝트가 가비지 콜렉션에서 닫히 도록 허용하는 것은 더 이상 사용되지 않습니다. 앞으로 그렇게하면 프로세스를 종료하는 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0e21915bff6927f331c97bb7305dba47ad7188b" translate="yes" xml:space="preserve">
          <source>Allows configuration of &lt;code&gt;tty.ReadStream&lt;/code&gt; so that it operates as a raw device.</source>
          <target state="translated">원시 장치로 작동 하도록 &lt;code&gt;tty.ReadStream&lt;/code&gt; 을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="435f646a3cd692fa3365380855be95deae790721" translate="yes" xml:space="preserve">
          <source>Allows initial connection to servers that do not support RI.</source>
          <target state="translated">RI를 지원하지 않는 서버에 초기 연결을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3b9a72f2c793317ff7880f2959ec5b1dc527b037" translate="yes" xml:space="preserve">
          <source>Allows legacy insecure renegotiation between OpenSSL and unpatched clients or servers. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;.</source>
          <target state="translated">OpenSSL과 패치되지 않은 클라이언트 또는 서버 간의 레거시 안전하지 않은 재협상을 허용합니다. &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="28c58d6e50ff3a360712c4575afc68dbbeceff9f" translate="yes" xml:space="preserve">
          <source>Almost all Node.js applications, no matter how simple, use streams in some manner. The following is an example of using streams in a Node.js application that implements an HTTP server:</source>
          <target state="translated">아무리 단순하더라도 거의 모든 Node.js 애플리케이션은 어떤 방식으로 스트림을 사용합니다. 다음은 HTTP 서버를 구현하는 Node.js 애플리케이션에서 스트림을 사용하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="739b5c636c4691fdf4e04622069584c9a6e966b2" translate="yes" xml:space="preserve">
          <source>Also &lt;code&gt;message.httpVersionMajor&lt;/code&gt; is the first integer and &lt;code&gt;message.httpVersionMinor&lt;/code&gt; is the second.</source>
          <target state="translated">또한 &lt;code&gt;message.httpVersionMajor&lt;/code&gt; 는 첫 번째 정수이고 &lt;code&gt;message.httpVersionMinor&lt;/code&gt; 는 두 번째 정수 입니다.</target>
        </trans-unit>
        <trans-unit id="8becf9cd71e00f55f284e54344bafc5f370242f7" translate="yes" xml:space="preserve">
          <source>Alterantively &lt;code&gt;module.createRequire()&lt;/code&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ae49202240800f5e47ea3f570eec7283cce37f" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;code&gt;module.createRequire()&lt;/code&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5823dd38a667d4b894dde67dc91f3384df22f74e" translate="yes" xml:space="preserve">
          <source>Alternatively a project could choose to export entire folders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032b92d931c8c59d0a4e86f8763941d2aa9ef0aa" translate="yes" xml:space="preserve">
          <source>Alternatively one can redirect the child process' output into files:</source>
          <target state="translated">또는 자식 프로세스의 출력을 파일로 리디렉션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e1ff33de702f9eac1d44c0bd87693b9d2f3ea50" translate="yes" xml:space="preserve">
          <source>Alternatively the readable stream could be wrapped with &lt;code&gt;Readable.from()&lt;/code&gt; and then piped via &lt;code&gt;.pipe()&lt;/code&gt;:</source>
          <target state="translated">또는 읽을 수있는 스트림을 &lt;code&gt;Readable.from()&lt;/code&gt; 으로 래핑 한 다음 &lt;code&gt;.pipe()&lt;/code&gt; 를 통해 파이프 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4203d9f48584244e7c38cfdc377eefdd3ba973a" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;callback(null, null)&lt;/code&gt; may be called, indicating that there was no OCSP response.</source>
          <target state="translated">또는 OCSP 응답이 없음을 나타내는 &lt;code&gt;callback(null, null)&lt;/code&gt; 이 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fa10054792dc365fab77ce090f9b82515f6ccc7" translate="yes" xml:space="preserve">
          <source>Alternatively, checking for &lt;code&gt;process.versions.icu&lt;/code&gt;, a property defined only when ICU is enabled, works too:</source>
          <target state="translated">또는 ICU가 활성화 된 경우에만 정의 된 속성 인 &lt;code&gt;process.versions.icu&lt;/code&gt; 검사 도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a93fbc306e60412b7ea41abf7cf96385b48ba6db" translate="yes" xml:space="preserve">
          <source>Alternatively, it is possible to use a factory pattern to avoid explicitly creating object instances using the JavaScript &lt;code&gt;new&lt;/code&gt; operator:</source>
          <target state="translated">또는 JavaScript &lt;code&gt;new&lt;/code&gt; 연산자를 사용하여 객체 인스턴스를 명시 적으로 생성하지 않도록 팩토리 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06e40dc12ad67b480652ebfd643fbcfded5abbb5" translate="yes" xml:space="preserve">
          <source>Alternatively, one could use the &lt;a href=&quot;#readline_event_line&quot;&gt;&lt;code&gt;'line'&lt;/code&gt;&lt;/a&gt; event:</source>
          <target state="translated">또는 &lt;a href=&quot;#readline_event_line&quot;&gt; &lt;code&gt;'line'&lt;/code&gt; &lt;/a&gt; 이벤트를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e906838be3b576dd98753001f0e9b6098f591f8" translate="yes" xml:space="preserve">
          <source>Alternatively, opt out of connection pooling by not using an &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt; 사용하지 않고 연결 풀링을 선택 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="73a95863bc299028eaf513a42832e7d7996f008c" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;origins&lt;/code&gt; option may be used when creating a new HTTP/2 server using the &lt;code&gt;http2.createSecureServer()&lt;/code&gt; method:</source>
          <target state="translated">또는 &lt;code&gt;http2.createSecureServer()&lt;/code&gt; 메소드를 사용하여 새 HTTP / 2 서버를 작성할 때 &lt;code&gt;origins&lt;/code&gt; 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90b233afb21134e4da42a5e3dd935f4f47a3b9ac" translate="yes" xml:space="preserve">
          <source>Alternatively, trace events may be enabled using the &lt;code&gt;trace_events&lt;/code&gt; module:</source>
          <target state="translated">또는 &lt;code&gt;trace_events&lt;/code&gt; 모듈을 사용하여 추적 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a468eaad8362cc2e9613ecee31f5ff1d42feed0d" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; and the various &lt;code&gt;dns.resolve*()/dns.reverse()&lt;/code&gt; functions have the same goal of associating a network name with a network address (or vice versa), their behavior is quite different. These differences can have subtle but significant consequences on the behavior of Node.js programs.</source>
          <target state="translated">비록 &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 및 다양한 &lt;code&gt;dns.resolve*()/dns.reverse()&lt;/code&gt; 함수는 네트워크 주소 (또는 그 반대)와 네트워크 이름을 연결하는 동일한 목표를 가지고, 그들의 행동은 매우 다르다. 이러한 차이는 Node.js 프로그램의 동작에 미묘하지만 중요한 결과를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9cabfb08331c0f2305f55aeaeedd3be4ade3c49" translate="yes" xml:space="preserve">
          <source>Although Microsoft specifies &lt;code&gt;%COMSPEC%&lt;/code&gt; must contain the path to &lt;code&gt;'cmd.exe'&lt;/code&gt; in the root environment, child processes are not always subject to the same requirement. Thus, in &lt;code&gt;child_process&lt;/code&gt; functions where a shell can be spawned, &lt;code&gt;'cmd.exe'&lt;/code&gt; is used as a fallback if &lt;code&gt;process.env.ComSpec&lt;/code&gt; is unavailable.</source>
          <target state="translated">Microsoft 는 루트 환경에서 &lt;code&gt;%COMSPEC%&lt;/code&gt; 에 &lt;code&gt;'cmd.exe'&lt;/code&gt; 에 대한 경로를 포함해야한다고 지정하지만 자식 프로세스에는 항상 동일한 요구 사항이 적용되는 것은 아닙니다. 따라서 쉘을 생성 할 수있는 &lt;code&gt;child_process&lt;/code&gt; 함수에서 &lt;code&gt;process.env.ComSpec&lt;/code&gt; 을 사용할 수없는 경우 &lt;code&gt;'cmd.exe'&lt;/code&gt; 가 폴백으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a00da5ee41b3bd5587ac378140f8f94af678351a" translate="yes" xml:space="preserve">
          <source>Although N-API provides an ABI stability guarantee, other parts of Node.js do not, and any external libraries used from the addon may not. In particular, none of the following APIs provide an ABI stability guarantee across major versions:</source>
          <target state="translated">N-API는 ABI 안정성을 보장하지만 Node.js의 다른 부분은 그렇지 않으며 애드온에서 사용 된 외부 라이브러리는 그렇지 않을 수 있습니다. 특히 다음 API는 주요 버전에서 ABI 안정성을 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fcb51dd37e81c50f58ebda6e14d07781aa1330a" translate="yes" xml:space="preserve">
          <source>Although Windows usually treats file names, including file extensions, in a case-insensitive manner, this function does not. For example, &lt;code&gt;C:\\foo.html&lt;/code&gt; and &lt;code&gt;C:\\foo.HTML&lt;/code&gt; refer to the same file, but &lt;code&gt;basename&lt;/code&gt; treats the extension as a case-sensitive string:</source>
          <target state="translated">Windows는 일반적으로 파일 확장자를 포함한 파일 이름을 대소 문자를 구분하지 않는 방식으로 처리하지만이 기능은 그렇지 않습니다. 예를 들어 &lt;code&gt;C:\\foo.html&lt;/code&gt; 및 &lt;code&gt;C:\\foo.HTML&lt;/code&gt; 은 동일한 파일을 참조하지만 &lt;code&gt;basename&lt;/code&gt; 은 확장자를 대소 문자를 구분하는 문자열로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="15033714dec354224dc58c2cf540bbe10aa90c4e" translate="yes" xml:space="preserve">
          <source>Although a primary use case for the &lt;code&gt;cluster&lt;/code&gt; module is networking, it can also be used for other use cases requiring worker processes.</source>
          <target state="translated">&lt;code&gt;cluster&lt;/code&gt; 모듈 의 기본 사용 사례 는 네트워킹이지만 작업자 프로세스가 필요한 다른 사용 사례에도 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f8e800ce5b5804c0d1566ef518647c001f6ad3" translate="yes" xml:space="preserve">
          <source>Although named for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domain Name System (DNS)&lt;/a&gt;, it does not always use the DNS protocol for lookups. &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; uses the operating system facilities to perform name resolution. It may not need to perform any network communication. To perform name resolution the way other applications on the same system do, use &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;DNS (Domain Name System) 이름이&lt;/a&gt; 지정되었지만 조회에 항상 DNS 프로토콜을 사용하는 것은 아닙니다. &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 은 운영 체제 기능을 사용하여 이름 확인을 수행합니다. 네트워크 통신을 수행 할 필요가 없습니다. 동일한 시스템의 다른 애플리케이션이 수행하는 방식으로 이름 확인을 수행하려면 &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb55732ecccfda1ff3e5a5fc5b6b0e650b3730ed" translate="yes" xml:space="preserve">
          <source>Although the CPU is mostly idle while running this script, the value of &lt;code&gt;utilization&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;. This is because the call to &lt;a href=&quot;child_process#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt; blocks the event loop from proceeding.</source>
          <target state="translated">이 스크립트를 실행하는 동안 CPU는 대부분 유휴 상태이지만 &lt;code&gt;utilization&lt;/code&gt; 값 은 &lt;code&gt;1&lt;/code&gt; 입니다. 이는 &lt;a href=&quot;child_process#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt; 호출 이 이벤트 루프 진행을 차단 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="6a11f3e40788bf82c134759724ffb4f5ae0c739a" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;. This may be used to distinguish TLS sockets from regular &lt;code&gt;net.Socket&lt;/code&gt; instances.</source>
          <target state="translated">항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . TLS 소켓을 일반 &lt;code&gt;net.Socket&lt;/code&gt; 인스턴스 와 구별하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="104e75a0d5d697bf7eb3d11a0fb5fd3bf5a15d0a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt; object for HTTPS similar to &lt;a href=&quot;http#http_class_http_agent&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#https_https_request_options_callback&quot;&gt;&lt;code&gt;https.request()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt; 와 유사한 HTTPS에 대한 객체 &lt;a href=&quot;http#http_class_http_agent&quot;&gt; &lt;code&gt;http.Agent&lt;/code&gt; &lt;/a&gt; . 자세한 내용은 &lt;a href=&quot;#https_https_request_options_callback&quot;&gt; &lt;code&gt;https.request()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e7c3af6fb5115715fcab1cbf65535eacee60287" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt; could not be resolved.</source>
          <target state="translated">&lt;a href=&quot;esm&quot;&gt;ES 모듈을&lt;/a&gt; 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f205ad66c27031860238c4bc7f6a50be9bc9054e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt; loader hook specified &lt;code&gt;format: 'dynamic'&lt;/code&gt; but did not provide a &lt;code&gt;dynamicInstantiate&lt;/code&gt; hook.</source>
          <target state="translated">&lt;a href=&quot;esm&quot;&gt;ES 모듈&lt;/a&gt; 로더 후크 지정된 &lt;code&gt;format: 'dynamic'&lt;/code&gt; 만 제공하지 않았다 &lt;code&gt;dynamicInstantiate&lt;/code&gt; 을 후크를.</target>
        </trans-unit>
        <trans-unit id="468588a4c1c59198c5c97e4243175b70298b1739" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt; can be used to cancel waiting for the event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2545d0b6c1ae27955f5cab415ba6846acecfa8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt; can be used to cancel waiting on events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2161e99b82c7b4ab3b44790cd0b80a1b953cf5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Agent&lt;/code&gt; is responsible for managing connection persistence and reuse for HTTP clients. It maintains a queue of pending requests for a given host and port, reusing a single socket connection for each until the queue is empty, at which time the socket is either destroyed or put into a pool where it is kept to be used again for requests to the same host and port. Whether it is destroyed or pooled depends on the &lt;code&gt;keepAlive&lt;/code&gt;&lt;a href=&quot;#http_new_agent_options&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Agent&lt;/code&gt; HTTP 클라이언트 연결의 지속성과 재사용을 관리합니다. 지정된 호스트 및 포트에 대해 보류중인 요청의 큐를 유지하면서 큐가 비워 질 때까지 각각에 대해 단일 소켓 연결을 재사용합니다. 이때 소켓이 파괴되거나 요청에 다시 사용될 수 있도록 풀에 배치됩니다. 동일한 호스트 및 포트에 연결합니다. 삭제 또는 풀링 여부는 &lt;code&gt;keepAlive&lt;/code&gt; &lt;a href=&quot;#http_new_agent_options&quot;&gt;옵션&lt;/a&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="a39573610d6774edd65e8dbf855de129a38c1d09" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Array&lt;/code&gt; with matching entries for the completion.</source>
          <target state="translated">완료를 위해 일치하는 항목이 있는 &lt;code&gt;Array&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="24675aed139e5323c21b355ae511fdc56213c811" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayBuffer&lt;/code&gt; can be marked with &lt;a href=&quot;#worker_threads_worker_markasuntransferable_object&quot;&gt;&lt;code&gt;markAsUntransferable()&lt;/code&gt;&lt;/a&gt; to indicate that it should always be cloned and never transferred.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 가 표시 될 수 &lt;a href=&quot;#worker_threads_worker_markasuntransferable_object&quot;&gt; &lt;code&gt;markAsUntransferable()&lt;/code&gt; &lt;/a&gt; 항상 복제 및 전송 적이되어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dd6316e5d6fd64ab732d9f5e6c9a65674dadc6ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AtExit&lt;/code&gt; hook is a function that is invoked after the Node.js event loop has ended but before the JavaScript VM is terminated and Node.js shuts down. &lt;code&gt;AtExit&lt;/code&gt; hooks are registered using the &lt;code&gt;node::AtExit&lt;/code&gt; API.</source>
          <target state="translated">&lt;code&gt;AtExit&lt;/code&gt; 후크는 자바 스크립트 VM을 종료하고 Node.js를 닫힌다 다운되기 전에 Node.js를 이벤트 루프가 종료 된 후 호출되지만 기능입니다. &lt;code&gt;AtExit&lt;/code&gt; 후크는 &lt;code&gt;node::AtExit&lt;/code&gt; 사용하여 등록됩니다. API를 됩니다.</target>
        </trans-unit>
        <trans-unit id="d1baed9e2495ab7225c62204070c6656b5185f0d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Http2Stream&lt;/code&gt; was destroyed before any data was transmitted to the connected peer.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; 는 어떤 데이터가 연결된 피어에 전송되기 전에 파괴되었다.</target>
        </trans-unit>
        <trans-unit id="37107a3217b41d849cf17b622b19ff57a2ce5a4d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IncomingMessage&lt;/code&gt; object is created by &lt;a href=&quot;#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http_class_http_clientrequest&quot;&gt;&lt;code&gt;http.ClientRequest&lt;/code&gt;&lt;/a&gt; and passed as the first argument to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event respectively. It may be used to access response status, headers and data.</source>
          <target state="translated">&lt;code&gt;IncomingMessage&lt;/code&gt; 의 객체에 의해 생성되어 &lt;a href=&quot;#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#http_class_http_clientrequest&quot;&gt; &lt;code&gt;http.ClientRequest&lt;/code&gt; &lt;/a&gt; 받는 첫 번째 인수로서 전달 &lt;a href=&quot;#http_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt; 을 각각 이벤트. 응답 상태, 헤더 및 데이터에 액세스하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6470d3f775a0fe606e54e2ea2ddd01285a40da6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RST_STREAM&lt;/code&gt; frame for the stream is received by the connected peer, and (for client streams only) pending data has been read.</source>
          <target state="translated">연결된 피어가 스트림에 대한 &lt;code&gt;RST_STREAM&lt;/code&gt; 프레임을 수신하고 (클라이언트 스트림 전용) 보류중인 데이터를 읽었습니다.</target>
        </trans-unit>
        <trans-unit id="68ab3254f62b898f69829acb33905692f91383c1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RST_STREAM&lt;/code&gt; frame for the stream is received by the connected peer, and pending data has been read.</source>
          <target state="translated">&lt;code&gt;RST_STREAM&lt;/code&gt; 연결된 피어가 스트림 프레임을 수신하고 보류중인 데이터를 읽었습니다.</target>
        </trans-unit>
        <trans-unit id="77c771287c3e2b79411cf39a4b709d76efae38e4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;idle&lt;/code&gt; time that does not increase does not indicate that the worker is stuck in bootstrap. The following examples shows how the worker's entire lifetime never accumulates any &lt;code&gt;idle&lt;/code&gt; time, but is still be able to process messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dbddb959fc3437e6d8424381669c6ef1542ec2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module or a CommonJS module. &lt;code&gt;import&lt;/code&gt; statements are permitted only in ES modules, but dynamic &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt; expressions are supported in CommonJS for loading ES modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628c734beb1966bc4d0f71800dae45ca6fa617bc" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module or a CommonJS module. &lt;code&gt;import&lt;/code&gt; statements are permitted only in ES modules. For similar functionality in CommonJS, see &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 문은 ES 모듈 또는 CommonJS 모듈을 참조 할 수 있습니다. &lt;code&gt;import&lt;/code&gt; 문은 ES 모듈에서만 허용됩니다. CommonJS의 유사한 기능에 대해서는 &lt;a href=&quot;#esm_import_expressions&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f47dc3925e3563de57c9b5a61a99a9319536419a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module, a CommonJS module, or JSON. Other file types such as Native modules are not supported. For those, use &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 문은 ES 모듈, CommonJS 모듈 또는 JSON을 참조 할 수 있습니다. 기본 모듈과 같은 다른 파일 형식은 지원되지 않습니다. 이를 위해서는 &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d437576040f0ce5a31b14adf804f9f837050ca4" translate="yes" xml:space="preserve">
          <source>An API function expecting a port &amp;gt;= 0 and &amp;lt; 65536 received an invalid value.</source>
          <target state="translated">포트&amp;gt; = 0 및 &amp;lt;65536을 예상하는 API 함수가 유효하지 않은 값을 수신했습니다.</target>
        </trans-unit>
        <trans-unit id="9b6e5bed9a0b047dc420e33fa96e7cbe5ccbee5e" translate="yes" xml:space="preserve">
          <source>An API function expecting a socket type (&lt;code&gt;udp4&lt;/code&gt; or &lt;code&gt;udp6&lt;/code&gt;) received an invalid value.</source>
          <target state="translated">소켓 유형 ( &lt;code&gt;udp4&lt;/code&gt; 또는 &lt;code&gt;udp6&lt;/code&gt; )을 예상하는 API 함수 가 유효하지 않은 값을 수신했습니다.</target>
        </trans-unit>
        <trans-unit id="00c0a1251c74aa9d282847335e1deaba96a1512a" translate="yes" xml:space="preserve">
          <source>An API was called on the main thread that can only be used from the worker thread.</source>
          <target state="translated">작업자 스레드에서만 사용할 수있는 기본 스레드에서 API가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="427e58a1730eb1e46e8dde4771ebe75ad5ea519f" translate="yes" xml:space="preserve">
          <source>An End-of-Life deprecation is used when functionality is or will soon be removed from Node.js.</source>
          <target state="translated">기능 종료가 Node.js에서 제거되거나 곧 제거 될 때 수명 종료 지원 중단이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="725528d8eb773ac2fe91f649463f35470635fa40" translate="yes" xml:space="preserve">
          <source>An Example Counting Stream</source>
          <target state="translated">카운트 스트림 예</target>
        </trans-unit>
        <trans-unit id="641ff4c42013bc3ddfef4bfad7532a3a41e4a54c" translate="yes" xml:space="preserve">
          <source>An Example Duplex Stream</source>
          <target state="translated">이중 스트림 예</target>
        </trans-unit>
        <trans-unit id="3efcf8baf7bf5cef2a0d5ea03df68d07d9211cdd" translate="yes" xml:space="preserve">
          <source>An Example Writable Stream</source>
          <target state="translated">쓰기 가능한 스트림 예</target>
        </trans-unit>
        <trans-unit id="e89383f974a4239bed31fc968b739d94be92f795" translate="yes" xml:space="preserve">
          <source>An HTTP/2 CONNECT client:</source>
          <target state="translated">HTTP / 2 CONNECT 클라이언트 :</target>
        </trans-unit>
        <trans-unit id="addea5a5fea8836922044c04ff09e0563846d686" translate="yes" xml:space="preserve">
          <source>An HTTP/2 CONNECT proxy:</source>
          <target state="translated">HTTP / 2 CONNECT 프록시 :</target>
        </trans-unit>
        <trans-unit id="284523a3fd50dd375169def192742cf413be99a1" translate="yes" xml:space="preserve">
          <source>An HTTP/2 ping was canceled.</source>
          <target state="translated">HTTP / 2 핑이 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d53b1efe17979ff0b8b40f08c56b1070a61f2e8" translate="yes" xml:space="preserve">
          <source>An HTTP/2 pseudo-header has been used inappropriately. Pseudo-headers are header key names that begin with the &lt;code&gt;:&lt;/code&gt; prefix.</source>
          <target state="translated">HTTP / 2 의사 헤더가 부적절하게 사용되었습니다. 의사 헤더는 다음으로 시작하는 헤더 키 이름입니다 &lt;code&gt;:&lt;/code&gt; 접두어로 .</target>
        </trans-unit>
        <trans-unit id="00f320791d792e321d7d32dbe3648f6e09e49522" translate="yes" xml:space="preserve">
          <source>An IP address is not valid.</source>
          <target state="translated">IP 주소가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b5bea90b7c185cade802f1fb791db55af93ec8fa" translate="yes" xml:space="preserve">
          <source>An action was performed on an &lt;code&gt;Http2Session&lt;/code&gt; object that had already been destroyed.</source>
          <target state="translated">이미 삭제 된 &lt;code&gt;Http2Session&lt;/code&gt; 객체 에서 작업이 수행 되었습니다.</target>
        </trans-unit>
        <trans-unit id="1ad2fdf10bcf31dafa16fd8ffc70fb3e10162715" translate="yes" xml:space="preserve">
          <source>An additional collection of bytes that will not be encrypted, but will be bound to the generated ciphertext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8afebe17eaf4a51956848feec9d004a74ea8c3" translate="yes" xml:space="preserve">
          <source>An additional headers was specified after an HTTP/2 response was initiated.</source>
          <target state="translated">HTTP / 2 응답이 시작된 후 추가 헤더가 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="d02aed728d3919c21723edde3a5a1acf32a09d9e" translate="yes" xml:space="preserve">
          <source>An agent may also be used for an individual request. By providing &lt;code&gt;{agent: false}&lt;/code&gt; as an option to the &lt;code&gt;http.get()&lt;/code&gt; or &lt;code&gt;http.request()&lt;/code&gt; functions, a one-time use &lt;code&gt;Agent&lt;/code&gt; with default options will be used for the client connection.</source>
          <target state="translated">에이전트는 개별 요청에 사용될 수도 있습니다. &lt;code&gt;http.get()&lt;/code&gt; 또는 &lt;code&gt;http.request()&lt;/code&gt; 함수에 대한 옵션으로 &lt;code&gt;{agent: false}&lt;/code&gt; 를 제공 하면 클라이언트 연결에 기본 옵션이있는 일회용 &lt;code&gt;Agent&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d2520fb84e175b757f5ddfcec6d02b53730959db" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="eafb46ad82099be5e997db94598d6a1d9f8b3881" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#console_console_group_label&quot;&gt;&lt;code&gt;console.group()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#console_console_group_label&quot;&gt; &lt;code&gt;console.group()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="c4d9e33deafd6527623cca6c051a8e209a4d0b50" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#crypto_crypto_getdiffiehellman_groupname&quot;&gt;&lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#crypto_crypto_getdiffiehellman_groupname&quot;&gt; &lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt; &lt;/a&gt; 의 별명</target>
        </trans-unit>
        <trans-unit id="efb65bc8e0c882e7d399d1a82a084be0a597df36" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepStrictEqual()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="ca6a6a20f550988eda03158c8ae37a53d24c3686" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_notdeepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.notDeepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_notdeepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.notDeepStrictEqual()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="07a6baf0f1044963d325036db542fdc23b2d7f90" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_notstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.notStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_notstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.notStrictEqual()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="bf5090ac8cfc101253613454a1e9394f591e59b4" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_ok_value_message&quot;&gt;&lt;code&gt;assert.ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_ok_value_message&quot;&gt; &lt;code&gt;assert.ok()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="71eb4acfb9794a2c4bc5cbfa2f1ff7d27bd0f6c1" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_strictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.strictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_strictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.strictEqual()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="d72cff970f6c5966eee44fa3246c5acefe640f5f" translate="yes" xml:space="preserve">
          <source>An application may need to ship patched versions of modules or to prevent modules from allowing all modules access to all other modules. Redirection can be used by intercepting attempts to load the modules wishing to be replaced.</source>
          <target state="translated">응용 프로그램은 패치 된 버전의 모듈을 제공하거나 모듈이 모든 모듈이 다른 모든 모듈에 액세스하지 못하도록해야합니다. 교체 할 모듈을로드하려는 시도를 가로 채서 리디렉션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="368816f55363a5412010acd0391b640c0a3db56e" translate="yes" xml:space="preserve">
          <source>An arbitrary JavaScript value that contains a clone of the data passed to this thread&amp;rsquo;s &lt;code&gt;Worker&lt;/code&gt; constructor.</source>
          <target state="translated">이 스레드의 &lt;code&gt;Worker&lt;/code&gt; 생성자에 전달 된 데이터 복제본이 포함 된 임의의 JavaScript 값입니다 .</target>
        </trans-unit>
        <trans-unit id="18cf0c00987c2ce7317636687b5e64a5a8b9c9d6" translate="yes" xml:space="preserve">
          <source>An argument of the wrong type was passed to a Node.js API.</source>
          <target state="translated">잘못된 유형의 인수가 Node.js API에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="2221973144b43073378c8b5918deba562313d187" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;QuicEndpoint&lt;/code&gt; instances associated with the &lt;code&gt;QuicSocket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdf536ad738868b1da4db7e35e8d3396103a63f" translate="yes" xml:space="preserve">
          <source>An array of errors that can give context to where in the OpenSSL library an error originates from.</source>
          <target state="translated">OpenSSL 라이브러리에서 오류가 발생한 위치에 컨텍스트를 제공 할 수있는 오류 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2072ac5355bcbdc231998b0f349a0f953b09cd49" translate="yes" xml:space="preserve">
          <source>An array of objects containing the outbound informational (additional) headers sent for this &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Http2Stream&lt;/code&gt; 에 대해 송신 된 아웃 바운드 정보 (추가) 헤더를 포함하는 객체의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="e03a40dd936e5e477beb4c508e62cf3bafcc4d4d" translate="yes" xml:space="preserve">
          <source>An array of strings identifying the operations for which the key may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689b35b5f80d9e064ad369511e844b99a199bf2b" translate="yes" xml:space="preserve">
          <source>An array of supported digest functions can be retrieved using &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지원되는 다이제스트 함수의 배열은 &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffca46a0600162ece58ba4ef572e18888ef79322" translate="yes" xml:space="preserve">
          <source>An array of timers and event emitters that have been explicitly added to the domain.</source>
          <target state="translated">도메인에 명시 적으로 추가 된 타이머 및 이벤트 이미 터 배열입니다.</target>
        </trans-unit>
        <trans-unit id="58fa9af2502ac6e0005e1c2a9ed3b2f7e25beeb6" translate="yes" xml:space="preserve">
          <source>An artificial error object used to capture the call stack for diagnostic reports.</source>
          <target state="translated">진단 보고서의 호출 스택을 캡처하는 데 사용되는 인공 오류 개체입니다.</target>
        </trans-unit>
        <trans-unit id="138dc70f72f5e4b19ddc75d15e3dec70649846d0" translate="yes" xml:space="preserve">
          <source>An asynchronous resource represents an object with an associated callback. This callback may be called multiple times, for example, the &lt;code&gt;'connection'&lt;/code&gt; event in &lt;code&gt;net.createServer()&lt;/code&gt;, or just a single time like in &lt;code&gt;fs.open()&lt;/code&gt;. A resource can also be closed before the callback is called. &lt;code&gt;AsyncHook&lt;/code&gt; does not explicitly distinguish between these different cases but will represent them as the abstract concept that is a resource.</source>
          <target state="translated">비동기 리소스는 관련 콜백이있는 객체를 나타냅니다. 이 콜백은 여러 번 호출 될 수 있습니다 (예 : &lt;code&gt;net.createServer()&lt;/code&gt; 의 &lt;code&gt;'connection'&lt;/code&gt; 이벤트 또는 &lt;code&gt;fs.open()&lt;/code&gt; 과 같은 단일 시간 ) . 콜백을 호출하기 전에 리소스를 닫을 수도 있습니다. &lt;code&gt;AsyncHook&lt;/code&gt; 은 이러한 서로 다른 경우를 명시 적으로 구분하지는 않지만이를 리소스 인 추상 개념으로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2833db285e3e97eb4c46f2e3d597af5f8bb630f2" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a &lt;code&gt;Buffer&lt;/code&gt; larger than the maximum allowed size.</source>
          <target state="translated">허용 된 최대 크기보다 큰 &lt;code&gt;Buffer&lt;/code&gt; 를 작성하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="11314e0af83acb0bcf63df2f686ab81b96699948" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a string larger than the maximum allowed size.</source>
          <target state="translated">허용되는 최대 크기보다 큰 문자열을 만들려고했습니다.</target>
        </trans-unit>
        <trans-unit id="a09596a28649318f99b7fa45d0e3fcdc869800b5" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a string longer than the maximum allowed length.</source>
          <target state="translated">허용되는 최대 길이보다 긴 문자열을 만들려고했습니다.</target>
        </trans-unit>
        <trans-unit id="090c39fe6b04b6dbd027aa5225fcf81dcc22e8a9" translate="yes" xml:space="preserve">
          <source>An attempt has been made to read a file whose size is larger than the maximum allowed size for a &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">크기가 &lt;code&gt;Buffer&lt;/code&gt; 에 허용되는 최대 크기보다 큰 파일을 읽으려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="96d57780bbeaf6852590f342d825a6d717c48cb4" translate="yes" xml:space="preserve">
          <source>An attempt resume a &lt;code&gt;QuicClientSession&lt;/code&gt; using a remembered TLS session ticket failed because the session ticket was invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1cb1dc49072f3c056ade6f192ff72db43c4484" translate="yes" xml:space="preserve">
          <source>An attempt to &lt;code&gt;require&lt;/code&gt; the above &lt;code&gt;es-module-package&lt;/code&gt; would attempt to load &lt;code&gt;./node_modules/es-module-package/src/index.js&lt;/code&gt; as CommonJS, which would throw an error as Node.js would not be able to parse the &lt;code&gt;export&lt;/code&gt; statement in CommonJS.</source>
          <target state="translated">위의 &lt;code&gt;es-module-package&lt;/code&gt; 를 &lt;code&gt;require&lt;/code&gt; 하면 &lt;code&gt;./node_modules/es-module-package/src/index.js&lt;/code&gt; 를 CommonJS 로로드하려고 시도합니다. Node.js가 &lt;code&gt;export&lt;/code&gt; 를 구문 분석 할 수 없으므로 오류가 발생합니다. CommonJS의 진술.</target>
        </trans-unit>
        <trans-unit id="630256617dea3802a1898c35fdcf8ddc9922bac7" translate="yes" xml:space="preserve">
          <source>An attempt to invoke an unsupported crypto operation was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e91400629c51f8857a5c6440951c1e3902880b4" translate="yes" xml:space="preserve">
          <source>An attempt to resume a &lt;code&gt;QuicClientSession&lt;/code&gt; using remembered remote transport parameters failed because the transport parameters were invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d953ae8ee93e2f472c76588eeff270ff1f85ed" translate="yes" xml:space="preserve">
          <source>An attempt was made to &lt;code&gt;require()&lt;/code&gt; an &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt;.</source>
          <target state="translated">시도가하려고했습니다 &lt;code&gt;require()&lt;/code&gt; &lt;a href=&quot;esm&quot;&gt;ES 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d72184530a656fdccd1381c470bfe7b9a60855" translate="yes" xml:space="preserve">
          <source>An attempt was made to add more headers after the headers had already been sent.</source>
          <target state="translated">헤더가 이미 전송 된 후 더 많은 헤더를 추가하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="0aef3ca6688fdcd5a6abf0034aded36436d1594a" translate="yes" xml:space="preserve">
          <source>An attempt was made to allocate memory (usually in the C++ layer) but it failed.</source>
          <target state="translated">메모리 (일반적으로 C ++ 레이어)를 할당하려고했지만 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="94b8a515e6d0a8e5d1fd5611d9398b4c7daee2fd" translate="yes" xml:space="preserve">
          <source>An attempt was made to bind a socket that has already been bound.</source>
          <target state="translated">이미 바인드 된 소켓을 바인드하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="7a3d8cbf689a1ea17719779588db7ec5823968cc" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_pipe_destination_options&quot;&gt;&lt;code&gt;stream.pipe()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; 스트림 에서 &lt;a href=&quot;stream#stream_readable_pipe_destination_options&quot;&gt; &lt;code&gt;stream.pipe()&lt;/code&gt; &lt;/a&gt; 를 호출하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="ae7bcf236212820634cc8aa2e0590dc65a75b1ec" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push()&lt;/code&gt;&lt;/a&gt; after a &lt;code&gt;null&lt;/code&gt;(EOF) had been pushed to the stream.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; (EOF)이 스트림으로 푸시 된 후 &lt;a href=&quot;stream#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push()&lt;/code&gt; &lt;/a&gt; 를 호출하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="f64bf355b077035b7adccd78c55caaea62cff40a" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_unshift_chunk_encoding&quot;&gt;&lt;code&gt;stream.unshift()&lt;/code&gt;&lt;/a&gt; after the &lt;code&gt;'end'&lt;/code&gt; event was emitted.</source>
          <target state="translated">&lt;code&gt;'end'&lt;/code&gt; 이벤트가 생성 된 후 &lt;a href=&quot;stream#stream_readable_unshift_chunk_encoding&quot;&gt; &lt;code&gt;stream.unshift()&lt;/code&gt; &lt;/a&gt; 를 호출하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="3717b7ba58eb9fe0851743f1720f213f5417fd82" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;stream.end()&lt;/code&gt; has been called.</source>
          <target state="translated">시도가 전화로되었다 &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt; 후 &lt;code&gt;stream.end()&lt;/code&gt; 라고하고있다.</target>
        </trans-unit>
        <trans-unit id="d6bd8744ec6a998f776bbb0497bb8464cf1914a0" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt; chunk.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 청크 와 함께 &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt; 를 호출하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="5eae4e8a0fc9875cafae6760b9106a1f9cbcdda2" translate="yes" xml:space="preserve">
          <source>An attempt was made to close the &lt;code&gt;process.stderr&lt;/code&gt; stream. By design, Node.js does not allow &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; streams to be closed by user code.</source>
          <target state="translated">&lt;code&gt;process.stderr&lt;/code&gt; 스트림 을 닫으려고했습니다 . 설계 상 Node.js는 &lt;code&gt;stdout&lt;/code&gt; 또는 &lt;code&gt;stderr&lt;/code&gt; 스트림을 사용자 코드로 닫을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c073e49efda7449e4a8d4cac06da260fb76c650d" translate="yes" xml:space="preserve">
          <source>An attempt was made to close the &lt;code&gt;process.stdout&lt;/code&gt; stream. By design, Node.js does not allow &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; streams to be closed by user code.</source>
          <target state="translated">&lt;code&gt;process.stdout&lt;/code&gt; 스트림 을 닫으려고했습니다 . 설계 상 Node.js는 &lt;code&gt;stdout&lt;/code&gt; 또는 &lt;code&gt;stderr&lt;/code&gt; 스트림을 사용자 코드로 닫을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd5edaf940158b00303e893908f89f4a65645052" translate="yes" xml:space="preserve">
          <source>An attempt was made to connect a &lt;code&gt;Http2Session&lt;/code&gt; object to a &lt;code&gt;net.Socket&lt;/code&gt; or &lt;code&gt;tls.TLSSocket&lt;/code&gt; that had already been bound to another &lt;code&gt;Http2Session&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 오브젝트를 이미 다른 &lt;code&gt;Http2Session&lt;/code&gt; 오브젝트에 바인드 된 &lt;code&gt;net.Socket&lt;/code&gt; 또는 &lt;code&gt;tls.TLSSocket&lt;/code&gt; 에 연결하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="f2b9d36028970855e4c9b80a62fa248b85acb752" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a Node.js &lt;code&gt;Buffer&lt;/code&gt; instance from addon or embedder code, while in a JS engine Context that is not associated with a Node.js instance. The data passed to the &lt;code&gt;Buffer&lt;/code&gt; method will have been released by the time the method returns.</source>
          <target state="translated">Node.js 인스턴스와 연관되지 않은 JS 엔진 컨텍스트에있는 동안 애드온 또는 임 베더 코드에서 Node.js &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 를 작성하려고했습니다 . &lt;code&gt;Buffer&lt;/code&gt; 메서드에 전달 된 데이터 는 메서드가 반환 될 때 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="221a7bc963c1d88ce0f240d01d98bd33d7b90a4c" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a child Node.js process using more than one IPC communication channel. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">둘 이상의 IPC 통신 채널을 사용하여 하위 Node.js 프로세스를 작성하려고했습니다. 자세한 내용은 &lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7061bac40769f9cf27c501e961b72b96f4e5cc1" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a push stream, which had been disabled by the client.</source>
          <target state="translated">클라이언트가 비활성화 한 푸시 스트림을 만들려고했습니다.</target>
        </trans-unit>
        <trans-unit id="0fb687fe2aab131f5ab02b2d239f2121ac82904c" translate="yes" xml:space="preserve">
          <source>An attempt was made to directly manipulate (read, write, pause, resume, etc.) a socket attached to an &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 에 연결된 소켓을 직접 조작 (읽기, 쓰기, 일시 정지, 재개 등) 하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="a5d115806eb6f1d8b11759e547f04248d97a42db" translate="yes" xml:space="preserve">
          <source>An attempt was made to disconnect an IPC communication channel that was already disconnected. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">이미 연결이 끊어진 IPC 통신 채널의 연결을 끊으려고했습니다. 자세한 내용은 &lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa5aa3219563ef3bf4f7158882c643f10825232c" translate="yes" xml:space="preserve">
          <source>An attempt was made to enable or disable FIPS mode, but FIPS mode was not available.</source>
          <target state="translated">FIPS 모드를 활성화 또는 비활성화하려고했으나 FIPS 모드를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d37181181b8e8fec72f2fde4222a810822974798" translate="yes" xml:space="preserve">
          <source>An attempt was made to initiate a new push stream from within a push stream. Nested push streams are not permitted.</source>
          <target state="translated">푸시 스트림 내에서 새로운 푸시 스트림을 시작하려고했습니다. 중첩 된 푸시 스트림은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a70c3d061ab6a283d45fac39f6fd2f75b36a2761" translate="yes" xml:space="preserve">
          <source>An attempt was made to initiate operations on a watcher returned by &lt;code&gt;fs.watch()&lt;/code&gt; that has not yet been started.</source>
          <target state="translated">아직 시작되지 않은 &lt;code&gt;fs.watch()&lt;/code&gt; 의해 리턴 된 감시자에서 조작을 시작하려고 했습니다.</target>
        </trans-unit>
        <trans-unit id="e3e1be8f1dcc3264a9ffaf35261f1b6c16243b7e" translate="yes" xml:space="preserve">
          <source>An attempt was made to issue Server Name Indication from a TLS server-side socket, which is only valid from a client.</source>
          <target state="translated">클라이언트에서만 유효한 TLS 서버 측 소켓에서 서버 이름 표시를 발행하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="c74c198d1e7a19ccc916f60f97790a27f99f2fcc" translate="yes" xml:space="preserve">
          <source>An attempt was made to launch a Node.js process with an unknown &lt;code&gt;stdin&lt;/code&gt; file type. This error is usually an indication of a bug within Node.js itself, although it is possible for user code to trigger it.</source>
          <target state="translated">알 수없는 &lt;code&gt;stdin&lt;/code&gt; 파일 형식 으로 Node.js 프로세스를 시작하려고했습니다 . 이 오류는 일반적으로 Node.js 자체의 버그를 나타내지 만 사용자 코드가이를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="647f33438d70586fc223c060ab0724c64eae8be4" translate="yes" xml:space="preserve">
          <source>An attempt was made to launch a Node.js process with an unknown &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; file type. This error is usually an indication of a bug within Node.js itself, although it is possible for user code to trigger it.</source>
          <target state="translated">알 수없는 &lt;code&gt;stdout&lt;/code&gt; 또는 &lt;code&gt;stderr&lt;/code&gt; 파일 형식 으로 Node.js 프로세스를 시작하려고했습니다 . 이 오류는 일반적으로 Node.js 자체의 버그를 나타내지 만 사용자 코드가이를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36631651f8656f58f1ad80989998be2bb516fca5" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module that does not exist or was otherwise not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585af3617fecdf1f98b24d17cfb041c2c1480b9c" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module with an unknown or unsupported file extension.</source>
          <target state="translated">알 수 없거나 지원되지 않는 파일 확장자를 가진 모듈을로드하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="33cb71670cdc6252b60c2fd86c653487c833e2f0" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module with an unknown or unsupported format.</source>
          <target state="translated">알 수 없거나 지원되지 않는 형식으로 모듈을로드하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="36dbd7a7266484831c62bc15994e72619be965b5" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a policy manifest, but the manifest had multiple entries for a resource which did not match each other. Update the manifest entries to match in order to resolve this error. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">정책 매니페스트를로드하려고했지만 매니페스트에 서로 일치하지 않는 리소스에 대한 여러 항목이 있습니다. 이 오류를 해결하려면 일치하는 매니페스트 항목을 업데이트하십시오. 자세한 내용은 &lt;a href=&quot;policy&quot;&gt;정책&lt;/a&gt; 목록에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffa70d1244ab6a62821622db6810ea06700d6cc8" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a policy manifest, but the manifest was unable to be parsed. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">정책 매니페스트를로드하려고했지만 매니페스트를 파싱 할 수 없습니다. 자세한 내용은 &lt;a href=&quot;policy&quot;&gt;정책&lt;/a&gt; 목록에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf3ceabeeb7f60b9e659a72e695a654bb5df2db6" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a resource, but the resource did not match the integrity defined by the policy manifest. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">리소스를로드하려고했지만 리소스가 정책 매니페스트에 의해 정의 된 무결성과 일치하지 않았습니다. 자세한 내용은 &lt;a href=&quot;policy&quot;&gt;정책&lt;/a&gt; 목록에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7334a0764b055151ea1b0bc7b2e64740fda86d64" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a resource, but the resource was not listed as a dependency from the location that attempted to load it. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">리소스를로드하려고했지만 리소스를로드하려는 위치의 종속성으로 리소스가 나열되지 않았습니다. 자세한 내용은 &lt;a href=&quot;policy&quot;&gt;정책&lt;/a&gt; 목록에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb6a0b3865a27b364260a9ebd4a30cab5d1a287b" translate="yes" xml:space="preserve">
          <source>An attempt was made to open an IPC communication channel with a synchronously forked Node.js process. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">동 기적으로 분기 된 Node.js 프로세스로 IPC 통신 채널을 열려고했습니다. 자세한 내용은 &lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6a3ad4b416ff38b3f08a1c9dfb33b85b8d0ad9b" translate="yes" xml:space="preserve">
          <source>An attempt was made to operate on an already closed socket.</source>
          <target state="translated">이미 닫힌 소켓에서 작동하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="8ab3615b6d03c6635591fa1326e12eac6794c407" translate="yes" xml:space="preserve">
          <source>An attempt was made to read an encrypted key without specifying a passphrase.</source>
          <target state="translated">암호를 지정하지 않고 암호화 된 키를 읽으려고했습니다.</target>
        </trans-unit>
        <trans-unit id="ae9a452dac6b52e478056f107acb1635e59f820c" translate="yes" xml:space="preserve">
          <source>An attempt was made to read from a policy manifest, but the manifest initialization has not yet taken place. This is likely a bug in Node.js.</source>
          <target state="translated">정책 매니페스트에서 읽으려고했지만 매니페스트 초기화가 아직 수행되지 않았습니다. Node.js의 버그 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cda91245cc03c8715350454edfde8d7a069c964" translate="yes" xml:space="preserve">
          <source>An attempt was made to register something that is not a function as an &lt;code&gt;AsyncHooks&lt;/code&gt; callback.</source>
          <target state="translated">함수가 아닌 것을 &lt;code&gt;AsyncHooks&lt;/code&gt; 콜백 으로 등록하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="6facf4ea803873e43d0e21d44ae5050ed4942e5f" translate="yes" xml:space="preserve">
          <source>An attempt was made to renegotiate TLS on a socket instance with TLS disabled.</source>
          <target state="translated">TLS가 사용 불가능한 소켓 인스턴스에서 TLS를 재협상하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="48efea40af6c91f463bde8a678a9e0858c01c7f4" translate="yes" xml:space="preserve">
          <source>An attempt was made to send an unsupported &quot;handle&quot; over an IPC communication channel to a child process. See &lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;subprocess.send()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;process.send()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">IPC 통신 채널을 통해 지원되지 않는 &quot;핸들&quot;을 하위 프로세스로 보내려고했습니다. 자세한 내용은 &lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;subprocess.send()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;process.send()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70211bbbf23cffa831a7eea10d2797dcf5bc4ca4" translate="yes" xml:space="preserve">
          <source>An attempt was made to send multiple response headers.</source>
          <target state="translated">여러 응답 헤더를 보내려고했습니다.</target>
        </trans-unit>
        <trans-unit id="c89c48a0e6ac156a6ab469b87a8aca246f2ea15e" translate="yes" xml:space="preserve">
          <source>An attempt was made to start a watcher returned by &lt;code&gt;fs.watch()&lt;/code&gt; that has already been started.</source>
          <target state="translated">이미 시작된 &lt;code&gt;fs.watch()&lt;/code&gt; 의해 리턴 된 감시자를 시작하려고 했습니다.</target>
        </trans-unit>
        <trans-unit id="7bfb99f351199b0f29e8c1812878ad8d06a0b8b3" translate="yes" xml:space="preserve">
          <source>An attempt was made to use a URL of an incompatible scheme (protocol) for a specific purpose. It is only used in the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt; support in the &lt;a href=&quot;fs&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt; module (which only accepts URLs with &lt;code&gt;'file'&lt;/code&gt; scheme), but may be used in other Node.js APIs as well in the future.</source>
          <target state="translated">특정 목적을 위해 호환되지 않는 체계 (프로토콜)의 URL을 사용하려고했습니다. &lt;a href=&quot;fs&quot;&gt; &lt;code&gt;fs&lt;/code&gt; &lt;/a&gt; 모듈 의 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt; 지원 ( &lt;code&gt;'file'&lt;/code&gt; 체계의 URL 만 허용)에서만 사용되지만 향후 다른 Node.js API에서도 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d5f594ff3b1b28f71108f82d6def6c9de2d4184" translate="yes" xml:space="preserve">
          <source>An attempt was made to use an IPC communication channel that was already closed.</source>
          <target state="translated">이미 닫힌 IPC 통신 채널을 사용하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="e2f366ef1b99c43d5aed653a929cf6ee883705fd" translate="yes" xml:space="preserve">
          <source>An attempt was made to use crypto features while Node.js was not compiled with OpenSSL crypto support.</source>
          <target state="translated">Node.js가 OpenSSL 암호화 지원으로 컴파일되지 않은 상태에서 암호화 기능을 사용하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="9a512584707fdbf50d4db8b542f934eba5f5bf67" translate="yes" xml:space="preserve">
          <source>An attempt was made to use features that require &lt;a href=&quot;intl#intl_internationalization_support&quot;&gt;ICU&lt;/a&gt;, but Node.js was not compiled with ICU support.</source>
          <target state="translated">&lt;a href=&quot;intl#intl_internationalization_support&quot;&gt;ICU&lt;/a&gt; 가 필요한 기능을 사용하려고 했지만 Node.js가 ICU 지원으로 컴파일되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="5b1ec20dd75d25d7bfbdcb2df49e2704cd6e66d8" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; API to send a directory.</source>
          <target state="translated">시도는 사용하려고했습니다 &lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; 디렉토리를 보내 API를.</target>
        </trans-unit>
        <trans-unit id="ce4546dfa07ff88232d6b712aac6b5a0ba01ab6e" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; API to send something other than a regular file, but &lt;code&gt;offset&lt;/code&gt; or &lt;code&gt;length&lt;/code&gt; options were provided.</source>
          <target state="translated">&lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; API 를 사용하여 일반 파일 이외의 것을 보내 려고 시도 했지만 &lt;code&gt;offset&lt;/code&gt; 또는 &lt;code&gt;length&lt;/code&gt; 옵션이 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="6841145dd82a74fda1d0ba32e0520caac47c3f81" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;socket&lt;/code&gt; property of an &lt;code&gt;Http2Session&lt;/code&gt; that has already been closed.</source>
          <target state="translated">이미 닫힌 &lt;code&gt;Http2Session&lt;/code&gt; 의 &lt;code&gt;socket&lt;/code&gt; 속성 을 사용하려고했습니다 .</target>
        </trans-unit>
        <trans-unit id="41ded658c0189aef4c62e5802352500a3719e73c" translate="yes" xml:space="preserve">
          <source>An easier method of constructing the &lt;code&gt;mode&lt;/code&gt; is to use a sequence of three octal digits (e.g. &lt;code&gt;765&lt;/code&gt;). The left-most digit (&lt;code&gt;7&lt;/code&gt; in the example), specifies the permissions for the file owner. The middle digit (&lt;code&gt;6&lt;/code&gt; in the example), specifies permissions for the group. The right-most digit (&lt;code&gt;5&lt;/code&gt; in the example), specifies the permissions for others.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 를 구성하는 더 쉬운 방법은 3 개의 8 진수 (예 : &lt;code&gt;765&lt;/code&gt; ) 의 시퀀스를 사용하는 것 입니다. 가장 왼쪽 자리 ( 예에서 &lt;code&gt;7&lt;/code&gt; )는 파일 소유자에 대한 권한을 지정합니다. 가운데 숫자 ( 예에서 &lt;code&gt;6&lt;/code&gt; )는 그룹에 대한 권한을 지정합니다. 가장 오른쪽 숫자 ( 예에서 &lt;code&gt;5&lt;/code&gt; )는 다른 사람의 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2829be5c371485a4ee50f7de235df7c2f3c0de45" translate="yes" xml:space="preserve">
          <source>An element in the &lt;code&gt;iterable&lt;/code&gt; provided to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_urlsearchparams_iterable&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; constructor&lt;/a&gt; did not represent a &lt;code&gt;[name, value]&lt;/code&gt; tuple &amp;ndash; that is, if an element is not iterable, or does not consist of exactly two elements.</source>
          <target state="translated">&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_urlsearchparams_iterable&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt; 생성자에 제공된 &lt;code&gt;iterable&lt;/code&gt; 의 요소 는 &lt;code&gt;[name, value]&lt;/code&gt; 튜플을 나타내지 않습니다. 즉, 요소가 iterable이 아니거나 정확히 두 개의 요소로 구성되지 않은 경우입니다.</target>
        </trans-unit>
        <trans-unit id="eda14cddfd42f1020109dd851a65519cd5240821" translate="yes" xml:space="preserve">
          <source>An element in the &lt;code&gt;iterable&lt;/code&gt; provided to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_urlsearchparams_iterable&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; constructor&lt;/a&gt; did not represent a &lt;code&gt;[name, value]&lt;/code&gt; tuple &amp;ndash; that is, if an element is not iterable, or does not consist of exactly two elements.</source>
          <target state="translated">의 소자 &lt;code&gt;iterable&lt;/code&gt; 받는 제공 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_new_urlsearchparams_iterable&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; 의 생성자&lt;/a&gt; 나타내지 않았다 &lt;code&gt;[name, value]&lt;/code&gt; 요소는 반복 가능하지 않거나 정확히 두 개의 요소로 구성되지 않는 경우, 인 - 튜플.</target>
        </trans-unit>
        <trans-unit id="08e39b9623271d94e3d05aec99b57567b582d517" translate="yes" xml:space="preserve">
          <source>An error is thrown when an attempt is made to copy the &lt;code&gt;Hash&lt;/code&gt; object after its &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest()&lt;/code&gt;&lt;/a&gt; method has been called.</source>
          <target state="translated">&lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest()&lt;/code&gt; &lt;/a&gt; 메서드가 호출 된 후 &lt;code&gt;Hash&lt;/code&gt; 객체 를 복사하려고하면 오류가 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="bbf47fd2a9974fbb7ae5670d62629dd7cac3a535" translate="yes" xml:space="preserve">
          <source>An error occurred while attempting to retrieve the JavaScript &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">JavaScript &lt;code&gt;undefined&lt;/code&gt; 값 을 검색하는 중 오류가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="c8c9c484df91866961d4f9b4dde2b66a719cccfd" translate="yes" xml:space="preserve">
          <source>An error occurred while invoking the JavaScript portion of the thread-safe function.</source>
          <target state="translated">스레드 안전 함수의 JavaScript 부분을 호출하는 중에 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="ec428230d44ff8e4f65fe85a02547d51e535b8a0" translate="yes" xml:space="preserve">
          <source>An error occurred while issuing a command via the &lt;code&gt;inspector&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;inspector&lt;/code&gt; 모듈을 통해 명령을 발행하는 중에 오류가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="aceeb92c7e672dbe96b5bc629cd8fe021f134903" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;code&gt;stream.finished()&lt;/code&gt; and &lt;code&gt;stream.pipeline()&lt;/code&gt;, when a stream or a pipeline ends non gracefully with no explicit error.</source>
          <target state="translated">스트림 또는 파이프 라인이 명시적인 오류없이 정상적으로 종료되지 않은 경우 &lt;code&gt;stream.finished()&lt;/code&gt; 및 &lt;code&gt;stream.pipeline()&lt;/code&gt; 에서 반환 된 오류입니다.</target>
        </trans-unit>
        <trans-unit id="a7603eb8a6c142fc63d3b6d503902e291165f5bd" translate="yes" xml:space="preserve">
          <source>An error thrown by one handler function does not prevent the other handlers from being invoked.</source>
          <target state="translated">하나의 핸들러 함수에서 발생한 오류는 다른 핸들러가 호출되는 것을 방해하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dacde5f35318339673bdd3e80f2305d6416c3174" translate="yes" xml:space="preserve">
          <source>An error will be thrown if an invalid address is provided.</source>
          <target state="translated">유효하지 않은 주소가 제공되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d8547ae4fe6269ee85992151336455ce2d5f48f1" translate="yes" xml:space="preserve">
          <source>An error will be thrown if any of the input aguments specify invalid values or types, or if the derived key cannot be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff40b8fcf513326b42a4c38bf81ea9c760111993" translate="yes" xml:space="preserve">
          <source>An error will be thrown if called before &lt;code&gt;quicsession.handshakeConfirmed&lt;/code&gt; is equal to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e49018e8a609fae0cae3bd372183cebb1f5bb16" translate="yes" xml:space="preserve">
          <source>An error will be thrown if the given &lt;code&gt;typedArray&lt;/code&gt; is larger than 65,536 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a493de9241c82f031763f7575bf52af90e724d" translate="yes" xml:space="preserve">
          <source>An example counting stream</source>
          <target state="translated">계수 스트림의 예</target>
        </trans-unit>
        <trans-unit id="08acb151a713982f42c88e2ce1ebc13e3816477f" translate="yes" xml:space="preserve">
          <source>An example duplex stream</source>
          <target state="translated">An example duplex stream</target>
        </trans-unit>
        <trans-unit id="d17b8d98a540bae9dcb283f60ef724034d72f057" translate="yes" xml:space="preserve">
          <source>An example of the possible output looks like:</source>
          <target state="translated">가능한 출력의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef4051855537ff25bfcec1b43d6c23a547d8eeea" translate="yes" xml:space="preserve">
          <source>An example of this object looks like:</source>
          <target state="translated">이 객체의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd7b93e397ecc47eaefd5ddf11e2dd3a5ecf52fc" translate="yes" xml:space="preserve">
          <source>An example policy file that would allow loading a file &lt;code&gt;checked.js&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;checked.js&lt;/code&gt; 파일을로드 할 수있는 예제 정책 파일 :</target>
        </trans-unit>
        <trans-unit id="2dba28fa39644fb344561450fbc7221ec876ad05" translate="yes" xml:space="preserve">
          <source>An example socket listening on an exclusive port is shown below.</source>
          <target state="translated">전용 포트에서 수신 대기하는 소켓의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0bfe7463612d597b46ebcb572f5c9578c2184e10" translate="yes" xml:space="preserve">
          <source>An example to read the last 10 bytes of a file which is 100 bytes long:</source>
          <target state="translated">100 바이트 길이의 파일의 마지막 10 바이트를 읽는 예 :</target>
        </trans-unit>
        <trans-unit id="c8dbc9ff2161b0d335ddbb301e8328c46943af97" translate="yes" xml:space="preserve">
          <source>An example writable stream</source>
          <target state="translated">An example writable stream</target>
        </trans-unit>
        <trans-unit id="c8d30ee4a50e6e4b86d9d75d96b03bc39c11b3fe" translate="yes" xml:space="preserve">
          <source>An exception is thrown when any of the input arguments specify invalid values or types.</source>
          <target state="translated">입력 인수가 유효하지 않은 값 또는 유형을 지정하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3bde95521f017404d4980ffe8a6e1bec685970ed" translate="yes" xml:space="preserve">
          <source>An exception is thrown when key derivation fails, otherwise the derived key is returned as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 파생이 실패하면 예외가 발생하고, 그렇지 않으면 파생 키가 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 로 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="fea6f070cd0b84891be844a8303fa5b64d18cd5e" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if there is no active inspector.</source>
          <target state="translated">활성 검사기가 없으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e07a43c5ecaa51806da3107ae1ddcb6b26acfe0e" translate="yes" xml:space="preserve">
          <source>An excessive amount of TLS renegotiations is detected, which is a potential vector for denial-of-service attacks.</source>
          <target state="translated">서비스 거부 공격에 대한 잠재적 인 벡터 인 과도한 양의 TLS 재협상이 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="621fc2854b0439015e157bdf7bb5600e1e14c87c" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) from the bundled Mozilla CA store as supplied by current Node.js version.</source>
          <target state="translated">An immutable array of strings representing the root certificates (in PEM format) from the bundled Mozilla CA store as supplied by current Node.js version.</target>
        </trans-unit>
        <trans-unit id="82d19b06a61b76fe42960a67fd72ca25306e372e" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) used for verifying peer certificates. This is the default value of the &lt;code&gt;ca&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">피어 인증서를 확인하는 데 사용되는 루트 인증서 (PEM 형식)를 나타내는 변경 불가능한 문자열 배열입니다. 이것이 &lt;code&gt;ca&lt;/code&gt; 옵션 의 기본값 인 &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f64687b379f25cbf7341d6c2db0587a3a214b1a6" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextDecoder&lt;/code&gt; API.</source>
          <target state="translated">&lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG 인코딩 표준 &lt;/a&gt; &lt;code&gt;TextDecoder&lt;/code&gt; API 의 구현 .</target>
        </trans-unit>
        <trans-unit id="465486ad112893f6cf37e501cabba08f692f0c30" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextEncoder&lt;/code&gt; API. All instances of &lt;code&gt;TextEncoder&lt;/code&gt; only support UTF-8 encoding.</source>
          <target state="translated">&lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG 인코딩 표준 &lt;/a&gt; &lt;code&gt;TextEncoder&lt;/code&gt; API 의 구현 . &lt;code&gt;TextEncoder&lt;/code&gt; 의 모든 인스턴스는 UTF-8 인코딩 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="772f242da466fc2876537ecd2e8ecd5fbfa3671c" translate="yes" xml:space="preserve">
          <source>An important drawback when calling &lt;code&gt;process.dlopen()&lt;/code&gt; is that the &lt;code&gt;module&lt;/code&gt; instance must be passed. Functions exported by the C++ Addon will be accessible via &lt;code&gt;module.exports&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;process.dlopen()&lt;/code&gt; 호출 할 때 중요한 단점 은 &lt;code&gt;module&lt;/code&gt; 인스턴스를 전달해야한다는 것입니다. C ++ Addon에서 내 보낸 함수는 &lt;code&gt;module.exports&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa732671ec6f2408bb16a997bed395ab13f480b2" translate="yes" xml:space="preserve">
          <source>An important requirement when calling &lt;code&gt;process.dlopen()&lt;/code&gt; is that the &lt;code&gt;module&lt;/code&gt; instance must be passed. Functions exported by the C++ Addon are then accessible via &lt;code&gt;module.exports&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebe1511f4205a6788c71fe6bfbaa3175a76fbf3" translate="yes" xml:space="preserve">
          <source>An improved alternative API is available.</source>
          <target state="translated">개선 된 대체 API를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75991723a893d8562531695bc09a4b9d4688d3a7" translate="yes" xml:space="preserve">
          <source>An independent resolver for DNS requests.</source>
          <target state="translated">DNS 요청에 대한 독립적 인 해결 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="cf8bc634a78c05d439a35bcfcabef1d71264eeba" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; class that provides performance metrics for specific Node.js operational milestones.</source>
          <target state="translated">특정 Node.js 운영 이정표에 대한 성능 메트릭을 제공 하는 &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; 클래스 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="073f106d3f9e3d5509f6a7b0b26f848582951349" translate="yes" xml:space="preserve">
          <source>An integer identifier for the current thread. On the corresponding worker object (if there is any), it is available as &lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt;&lt;code&gt;worker.threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; instance inside a single process.</source>
          <target state="translated">현재 스레드의 정수 식별자입니다. 해당 작업자 객체 (있는 경우)에서 &lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt; &lt;code&gt;worker.threadId&lt;/code&gt; &lt;/a&gt; 로 사용할 수 있습니다 . 이 값은 단일 프로세스 내의 각 &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 인스턴스 마다 고유 합니다.</target>
        </trans-unit>
        <trans-unit id="2f5ec5e060c74b93d50346bf8f6f2198cd3ecdb3" translate="yes" xml:space="preserve">
          <source>An integer identifier for the referenced thread. Inside the worker thread, it is available as &lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt;&lt;code&gt;require('worker_threads').threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;code&gt;Worker&lt;/code&gt; instance inside a single process.</source>
          <target state="translated">참조 된 스레드의 정수 식별자입니다. 작업자 스레드 내에서 &lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt; &lt;code&gt;require('worker_threads').threadId&lt;/code&gt; &lt;/a&gt; 로 사용할 수 있습니다 . 이 값은 단일 프로세스 내의 각 &lt;code&gt;Worker&lt;/code&gt; 인스턴스 마다 고유 합니다.</target>
        </trans-unit>
        <trans-unit id="62c6f6c1e4eb21e635a4551d4f5637d6dfc06901" translate="yes" xml:space="preserve">
          <source>An internal method used to parse and execute &lt;code&gt;REPLServer&lt;/code&gt; keywords. Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;keyword&lt;/code&gt; is a valid keyword, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REPLServer&lt;/code&gt; 키워드 를 구문 분석하고 실행하는 데 사용되는 내부 메소드 입니다. 반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;keyword&lt;/code&gt; 그렇지 않으면, 유효한 키워드입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d397be77840ab5f827913c084b4c79b7fe2a871" translate="yes" xml:space="preserve">
          <source>An invalid (negative) size was passed for either the &lt;code&gt;recvBufferSize&lt;/code&gt; or &lt;code&gt;sendBufferSize&lt;/code&gt; options in &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt; &lt;code&gt;dgram.createSocket()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;recvBufferSize&lt;/code&gt; 또는 &lt;code&gt;sendBufferSize&lt;/code&gt; 옵션에 대해 유효하지 않은 (음수) 크기가 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7811c770cd0545873f140d055f4619346dfbfaff" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;crypto digest algorithm&lt;/a&gt; was specified.</source>
          <target state="translated">유효하지 않은 &lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;암호화 요약 알고리즘&lt;/a&gt; 이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="f7ef3c1db04c524b24f3e36a5536e0dfd3183fd1" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file failed parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6dce681dc9a6b84eac0557bbb9b1f6e6b2db2b" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file was found which failed parsing.</source>
          <target state="translated">An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt; file was found which failed parsing.</target>
        </trans-unit>
        <trans-unit id="b3c155df62e478d3b9758238feb53f02d10d5052" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;asyncId&lt;/code&gt; or &lt;code&gt;triggerAsyncId&lt;/code&gt; was passed using &lt;code&gt;AsyncHooks&lt;/code&gt;. An id less than -1 should never happen.</source>
          <target state="translated">&lt;code&gt;asyncId&lt;/code&gt; 사용하여 유효하지 않은 asyncId 또는 &lt;code&gt;triggerAsyncId&lt;/code&gt; 를 전달 &lt;code&gt;AsyncHooks&lt;/code&gt; . -1보다 작은 ID는 절대 발생하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="53097ec4ce908207bdaf04b568c122a0bf8fb6ed" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;options.protocol&lt;/code&gt; was passed to &lt;code&gt;http.request()&lt;/code&gt;.</source>
          <target state="translated">잘못된 &lt;code&gt;options.protocol&lt;/code&gt; 이 &lt;code&gt;http.request()&lt;/code&gt; 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="42218c520bddcf03f853c29f8c39cb72deb7af44" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;package.json&lt;/code&gt; file was found which failed parsing.</source>
          <target state="translated">구문 분석에 실패한 잘못된 &lt;code&gt;package.json&lt;/code&gt; 파일이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="9137a3f9b39eceb7fdf8223922ed3ee4bc96892f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP header value was specified.</source>
          <target state="translated">유효하지 않은 HTTP 헤더 값이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="4d9592829c9771da1ed36ca7f3ae4ac3e02fb945" translate="yes" xml:space="preserve">
          <source>An invalid HTTP informational status code has been specified. Informational status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;199&lt;/code&gt; (inclusive).</source>
          <target state="translated">유효하지 않은 HTTP 정보 상태 코드가 지정되었습니다. 정보 상태 코드는 &lt;code&gt;100&lt;/code&gt; 과 &lt;code&gt;199&lt;/code&gt; 사이의 정수 여야합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="83799af7f1d4bcb81b1ba9abe624aceb9dd1dd5f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP status code has been specified. Status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;599&lt;/code&gt; (inclusive).</source>
          <target state="translated">유효하지 않은 HTTP 상태 코드가 지정되었습니다. 상태 코드는 &lt;code&gt;100&lt;/code&gt; 에서 &lt;code&gt;599&lt;/code&gt; 사이의 정수 여야합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="a2b589c62d968af0c7d9fadb38e1a1697e4c0a9c" translate="yes" xml:space="preserve">
          <source>An invalid HTTP token was supplied.</source>
          <target state="translated">유효하지 않은 HTTP 토큰이 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b05ff2c6deb148ba62b8fd02c85c5fe55314f80" translate="yes" xml:space="preserve">
          <source>An invalid HTTP/2 header value was specified.</source>
          <target state="translated">유효하지 않은 HTTP / 2 헤더 값이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2dca78219826127dd2e7cedfa98772c855f5600d" translate="yes" xml:space="preserve">
          <source>An invalid JSON Web Key was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c275cebc9b7406d1b49bb487d1475c5739fe123b" translate="yes" xml:space="preserve">
          <source>An invalid URI was passed.</source>
          <target state="translated">유효하지 않은 URI가 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="ee3a107d8f7d196eb5efd8908e428b326baa42e0" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="translated">구문 분석 할 유효하지 않은 URL이 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt; &lt;code&gt;URL&lt;/code&gt; 생성자&lt;/a&gt; 로 전달되었습니다 . 발생 된 오류 개체에는 일반적으로 구문 분석에 실패한 URL이 포함 된 추가 속성 &lt;code&gt;'input'&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ddca0b75f36007e1835b117f0a56f78c281b32f" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="translated">An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_url_input_base&quot;&gt; &lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</target>
        </trans-unit>
        <trans-unit id="c8d1e7d5d4328e91731f965d22049d9d1eb68d2e" translate="yes" xml:space="preserve">
          <source>An invalid authentication tag length was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c27d0d5f4f19d9e5c753dd10d1d92dd9e8b67ec" translate="yes" xml:space="preserve">
          <source>An invalid authentication tag was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9bf610f45a423c02b752e29758e923eed312c6" translate="yes" xml:space="preserve">
          <source>An invalid counter was provided for a counter-mode cipher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad4b296955522d81c3e29330609d148ae654284" translate="yes" xml:space="preserve">
          <source>An invalid crypto engine identifier was passed to &lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt;&lt;code&gt;require('crypto').setEngine()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">잘못된 암호화 엔진 식별자가 &lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt; &lt;code&gt;require('crypto').setEngine()&lt;/code&gt; &lt;/a&gt; 에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c49bcce99f965d1f25f0f38054e99507e7fb20bf" translate="yes" xml:space="preserve">
          <source>An invalid elliptic-curve was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8f773ced18d9551992b0b5b3f8bed127013c2a" translate="yes" xml:space="preserve">
          <source>An invalid initialization vector was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4278dbf19378a6e3c0661dcc971a307a965c04" translate="yes" xml:space="preserve">
          <source>An invalid key length was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9476474da648b10891ba9d1f7d23e2fd982b0b7f" translate="yes" xml:space="preserve">
          <source>An invalid key pair was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a21980a89558404b747bc24b3ece6bbb98650ec" translate="yes" xml:space="preserve">
          <source>An invalid key type was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3780f4d07d3d8c29b415be1611ae560b1703ec" translate="yes" xml:space="preserve">
          <source>An invalid message length was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c87de6f3d6bde59b26313418fd494f0540a908b" translate="yes" xml:space="preserve">
          <source>An invalid or unexpected value was passed in an options object.</source>
          <target state="translated">옵션 오브젝트에 유효하지 않거나 예상치 못한 값이 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="de46bdff8a429a43fe6d0229ba2dab03fb547365" translate="yes" xml:space="preserve">
          <source>An invalid or unknown encoding option was passed to an API.</source>
          <target state="translated">유효하지 않거나 알 수없는 인코딩 옵션이 API에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="24caaedef2e4a699105e8a8fc8217ae223022cf7" translate="yes" xml:space="preserve">
          <source>An invalid or unknown file encoding was passed.</source>
          <target state="translated">유효하지 않거나 알 수없는 파일 인코딩이 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="a007b066557bd652706f1a74c116ab07f669750a" translate="yes" xml:space="preserve">
          <source>An invalid or unknown process signal was passed to an API expecting a valid signal (such as &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt;&lt;code&gt;subprocess.kill()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">유효하지 않은 신호 또는 알 수없는 프로세스 신호가 유효한 신호 (예 : &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt; &lt;code&gt;subprocess.kill()&lt;/code&gt; &lt;/a&gt; )를 예상하는 API로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a2cc1bcceb942d934ea0b3721ed55b0e52bb22c4" translate="yes" xml:space="preserve">
          <source>An invalid or unsupported value was passed for a given argument.</source>
          <target state="translated">주어진 인수에 대해 유효하지 않거나 지원되지 않는 값이 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="7467250ab9219c384d82de1c709db4f285ccad29" translate="yes" xml:space="preserve">
          <source>An invalid parameter key was passed during construction of a Brotli stream.</source>
          <target state="translated">Brotli 스트림을 구성하는 동안 유효하지 않은 매개 변수 키가 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="81a0ff15c7024ddfbc1bf026e9ad2665191b4014" translate="yes" xml:space="preserve">
          <source>An invalid symlink type was passed to the &lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt;&lt;code&gt;fs.symlink()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt;&lt;code&gt;fs.symlinkSync()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">잘못된 symlink 유형이 &lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt; &lt;code&gt;fs.symlink()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt; &lt;code&gt;fs.symlinkSync()&lt;/code&gt; &lt;/a&gt; 메소드 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="00a8ea030cf6ba0724a3964f36a2d15725147280" translate="yes" xml:space="preserve">
          <source>An invalid transfer object was passed to &lt;code&gt;postMessage()&lt;/code&gt;.</source>
          <target state="translated">잘못된 전송 객체가 &lt;code&gt;postMessage()&lt;/code&gt; 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a2b09312d9dbda06905e152f8c7977c5e852e71e" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;format&lt;/code&gt; argument was passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;getPublicKey()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 인수에 유효하지 않은 값 이 &lt;code&gt;crypto.ECDH()&lt;/code&gt; 클래스 &lt;code&gt;getPublicKey()&lt;/code&gt; 메소드 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="bc084bd4b5ed2a8658576de1650e9b190ed4b7c4" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;key&lt;/code&gt; argument has been passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;computeSecret()&lt;/code&gt; method. It means that the public key lies outside of the elliptic curve.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 인수에 유효하지 않은 값 이 &lt;code&gt;crypto.ECDH()&lt;/code&gt; 클래스 &lt;code&gt;computeSecret()&lt;/code&gt; 메소드 로 전달되었습니다 . 이것은 공개 키가 타원 곡선의 바깥에 있다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3009fac2b6e73c17013ea91a7f4eaedc24157a05" translate="yes" xml:space="preserve">
          <source>An invalid value has been specified for an HTTP/2 setting.</source>
          <target state="translated">HTTP / 2 설정에 유효하지 않은 값이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="32ab517d4da5af678eb83c61361b8c36f8e2b5d5" translate="yes" xml:space="preserve">
          <source>An iterable argument (i.e. a value that works with &lt;code&gt;for...of&lt;/code&gt; loops) was required, but not provided to a Node.js API.</source>
          <target state="translated">반복 가능한 인수 (예 : &lt;code&gt;for...of&lt;/code&gt; 루프 와 작동하는 값 )가 필요했지만 Node.js API에는 제공되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4610068747893484ab3879a4c639d496953ba03a" translate="yes" xml:space="preserve">
          <source>An npm module like &lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js&lt;/a&gt; may be used to parse the certificates.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js&lt;/a&gt; 와 같은 npm 모듈을 사용하여 인증서를 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f77687911aba2d6bab8886c18c7e311e5c3af610" translate="yes" xml:space="preserve">
          <source>An object containing the address information for a bound &lt;code&gt;QuicEndpoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356572f75a57977f5c153f3df8b90940432f9cdd" translate="yes" xml:space="preserve">
          <source>An object containing the local address information for the &lt;code&gt;QuicSocket&lt;/code&gt; to which the &lt;code&gt;QuicSession&lt;/code&gt; is currently associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95da227cd31de28e86d36a76b4b278ad4698ef51" translate="yes" xml:space="preserve">
          <source>An object containing the outbound headers sent for this &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Http2Stream&lt;/code&gt; 에 송신 된 아웃 바운드 헤더를 포함한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="183b51e83da82dce17c49c6f273d37539988cb1c" translate="yes" xml:space="preserve">
          <source>An object containing the outbound trailers sent for this &lt;code&gt;HttpStream&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;HttpStream&lt;/code&gt; 에 송신 된 아웃 바운드 트레일러를 포함한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="b7bf9d298c0d79cd9a4519ce1b32f0550835768d" translate="yes" xml:space="preserve">
          <source>An object containing the remote address information for the connected peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f487c2ed91ee4a19f8894795e55dc5b677aaaf" translate="yes" xml:space="preserve">
          <source>An object describing the current status of this &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Http2Session&lt;/code&gt; 의 현재 상태를 설명하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="45c9a0a91a94899c44364d496709b44bd7e1cda4" translate="yes" xml:space="preserve">
          <source>An object detailing the algorithm for which the key can be used along with additional algorithm-specific parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0cbd5294dd14d7eee763decb982c8c903d92ca" translate="yes" xml:space="preserve">
          <source>An object representing the type, name, and size of parameter of an ephemeral key exchange in Perfect Forward Secrecy on a client connection. It is an empty object when the key exchange is not ephemeral. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbe3117ca08d126e354464168b8f810e16ed66e" translate="yes" xml:space="preserve">
          <source>An object that can be used to collect performance metrics from the current Node.js instance. It is similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;&lt;code&gt;window.performance&lt;/code&gt;&lt;/a&gt; in browsers.</source>
          <target state="translated">An object that can be used to collect performance metrics from the current Node.js instance. It is similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt; &lt;code&gt;window.performance&lt;/code&gt; &lt;/a&gt; in browsers.</target>
        </trans-unit>
        <trans-unit id="7f1a334815104f3002d6709bd8a581e59911e9e4" translate="yes" xml:space="preserve">
          <source>An object that can be used to query performance information from a worker instance. Similar to &lt;a href=&quot;perf_hooks#perf_hooks_perf_hooks_performance&quot;&gt;&lt;code&gt;perf_hooks.performance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdb186cb1bb465a94fd44fa3d98f2ec31eaf6bc" translate="yes" xml:space="preserve">
          <source>An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;a href=&quot;worker_threads#worker_threads_port_postmessage_value_transferlist&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d012b4cbac012416e5a8413aafa99ab4508b3d1b" translate="yes" xml:space="preserve">
          <source>An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;code&gt;postMessage()&lt;/code&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="translated">An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;code&gt;postMessage()&lt;/code&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b7871e6761c9fb25bf5b796b0baadaa89a7ed5" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently awaiting use by the agent when &lt;code&gt;keepAlive&lt;/code&gt; is enabled. Do not modify.</source>
          <target state="translated">&lt;code&gt;keepAlive&lt;/code&gt; 가 사용 가능한 경우 에이전트가 현재 사용중인 소켓 배열을 포함하는 오브젝트입니다 . 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="0bec9feba2dd520f9e0bbc76822cbb0e52455087" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently in use by the agent. Do not modify.</source>
          <target state="translated">에이전트가 현재 사용중인 소켓 배열을 포함하는 객체입니다. 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="574531c54ab478f216006078f3cf769b59551436" translate="yes" xml:space="preserve">
          <source>An object which contains queues of requests that have not yet been assigned to sockets. Do not modify.</source>
          <target state="translated">아직 소켓에 할당되지 않은 요청 큐를 포함하는 객체입니다. 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c8c2ef690c15e955957189dc54681023c2809f41" translate="yes" xml:space="preserve">
          <source>An opaque value returned by &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;. It must be passed to &lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt;&lt;/a&gt; when the chain of asynchronous cleanup events completes.</source>
          <target state="translated">An opaque value returned by &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt; &lt;/a&gt;. It must be passed to &lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt; &lt;/a&gt; when the chain of asynchronous cleanup events completes.</target>
        </trans-unit>
        <trans-unit id="50691234f37a43a5cbb36f3b7d8d1a8227e344dc" translate="yes" xml:space="preserve">
          <source>An operation failed because the &lt;code&gt;Worker&lt;/code&gt; instance is not currently running.</source>
          <target state="translated">An operation failed because the &lt;code&gt;Worker&lt;/code&gt; instance is not currently running.</target>
        </trans-unit>
        <trans-unit id="a26c6567721e9d761372da31a3ed2ed92b6322a3" translate="yes" xml:space="preserve">
          <source>An operation failed. This is typically used to signal the general failure of an asynchronous operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b65eb047b7d478fbb60f8f45b17eea8fff6a0c1" translate="yes" xml:space="preserve">
          <source>An operation outside the bounds of a &lt;code&gt;Buffer&lt;/code&gt; was attempted.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; 범위를 벗어난 작업 을 시도했습니다.</target>
        </trans-unit>
        <trans-unit id="af34a6f3533f1490f6c0ad6743f050beea1de990" translate="yes" xml:space="preserve">
          <source>An operation was performed on a stream that had already been destroyed.</source>
          <target state="translated">이미 파괴 된 스트림에서 작업이 수행되었습니다.</target>
        </trans-unit>
        <trans-unit id="932cb566059b93f41fa9ea4f4b56532c06b7c507" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and can not be used at the same time.</source>
          <target state="translated">옵션 쌍은 서로 호환되지 않으며 동시에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c8ec70c5288ddd82e641736f55d4054d4105002d" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and cannot be used at the same time.</source>
          <target state="translated">An option pair is incompatible with each other and cannot be used at the same time.</target>
        </trans-unit>
        <trans-unit id="95444c63949101ef084927c9ccadb4abbaaedae0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;callback&lt;/code&gt; function may be specified to as a way of reporting DNS errors or for determining when it is safe to reuse the &lt;code&gt;buf&lt;/code&gt; object. DNS lookups delay the time to send for at least one tick of the Node.js event loop.</source>
          <target state="translated">선택적 &lt;code&gt;callback&lt;/code&gt; 함수는 DNS 오류를보고하거나 &lt;code&gt;buf&lt;/code&gt; 객체 를 재사용하는 것이 안전한시기를 결정하는 방법으로 지정할 수 있습니다 . DNS 조회는 Node.js 이벤트 루프의 적어도 하나의 틱에 대한 전송 시간을 지연시킵니다.</target>
        </trans-unit>
        <trans-unit id="58ec83a787fabdb5feab00dfa026d9c031a4aea1" translate="yes" xml:space="preserve">
          <source>An optional callback function that may be set by user code to be notified when the &lt;code&gt;abortController.abort()&lt;/code&gt; function has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20732420864901a779e958ee3751618b59c91e1" translate="yes" xml:space="preserve">
          <source>An overview of available Node.js and JavaScript features for each &lt;code&gt;configure&lt;/code&gt; option:</source>
          <target state="translated">각 &lt;code&gt;configure&lt;/code&gt; 옵션 에 사용 가능한 Node.js 및 JavaScript 기능에 대한 개요 :</target>
        </trans-unit>
        <trans-unit id="517634b9ccd1b10a5177eb481209c6e3ea5f0285" translate="yes" xml:space="preserve">
          <source>An unhandled error occurred (for instance, when an &lt;code&gt;'error'&lt;/code&gt; event is emitted by an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; but an &lt;code&gt;'error'&lt;/code&gt; handler is not registered).</source>
          <target state="translated">처리되지 않은 오류가 발생했습니다 (예 : &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;'error'&lt;/code&gt; 이벤트가 생성 되었지만 &lt;code&gt;'error'&lt;/code&gt; 핸들러가 등록되지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="d8bcdfb4911d0ae108bd19887ba6f3216c231e3f" translate="yes" xml:space="preserve">
          <source>An unknown Diffie-Hellman group name was given. See &lt;a href=&quot;crypto#crypto_crypto_getdiffiehellman_groupname&quot;&gt;&lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt;&lt;/a&gt; for a list of valid group names.</source>
          <target state="translated">An unknown Diffie-Hellman group name was given. See &lt;a href=&quot;crypto#crypto_crypto_getdiffiehellman_groupname&quot;&gt; &lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt; &lt;/a&gt; for a list of valid group names.</target>
        </trans-unit>
        <trans-unit id="a5e4b5da4f03ef3c7b6ac903cf3593f74c7a8b8d" translate="yes" xml:space="preserve">
          <source>An unknown cipher was specified.</source>
          <target state="translated">An unknown cipher was specified.</target>
        </trans-unit>
        <trans-unit id="9330a387134204a50163ab3813de85814b9fdcae" translate="yes" xml:space="preserve">
          <source>An unspecified failure occured trying to initialize a new &lt;code&gt;QuicClientSession&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03eb20f5f7c3d76127e4c989549f01734b6a592" translate="yes" xml:space="preserve">
          <source>An unspecified or non-specific system error has occurred within the Node.js process. The error object will have an &lt;code&gt;err.info&lt;/code&gt; object property with additional details.</source>
          <target state="translated">Node.js 프로세스에서 지정되지 않거나 특정하지 않은 시스템 오류가 발생했습니다. 오류 개체 에는 추가 세부 정보 가 포함 된 &lt;code&gt;err.info&lt;/code&gt; 개체 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="67258f57db5b4a3cc9c6a65e3e3c6dfb93bb7131" translate="yes" xml:space="preserve">
          <source>An upgrade of zlib from 1.2.8 to 1.2.11 changed behavior when &lt;code&gt;windowBits&lt;/code&gt; is set to 8 for raw deflate streams. zlib would automatically set &lt;code&gt;windowBits&lt;/code&gt; to 9 if was initially set to 8. Newer versions of zlib will throw an exception, so Node.js restored the original behavior of upgrading a value of 8 to 9, since passing &lt;code&gt;windowBits = 9&lt;/code&gt; to zlib actually results in a compressed stream that effectively uses an 8-bit window only.</source>
          <target state="translated">원시 deflate 스트림에 대해 &lt;code&gt;windowBits&lt;/code&gt; 가 8로 설정된 경우 zlib를 1.2.8에서 1.2.11로 업그레이드하면 동작이 변경되었습니다 . zlib 는 처음에 8로 설정된 경우 자동으로 &lt;code&gt;windowBits&lt;/code&gt; 를 9로 설정합니다. zlib의 최신 버전에서는 예외가 발생하므로 &lt;code&gt;windowBits = 9&lt;/code&gt; 를 zlib에 전달 하면 실제로 는 8에서 9로 값을 업그레이드하는 원래 동작을 복원 했습니다. 8 비트 윈도우 만 효과적으로 사용하는 압축 스트림</target>
        </trans-unit>
        <trans-unit id="00e6d062dac71b7d742d5963e696914e6babed7f" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;process.argv&lt;/code&gt;:</source>
          <target state="translated">그리고 &lt;code&gt;process.argv&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="97fa00e54b04b304f7deb69f8dcf363d2c860ae0" translate="yes" xml:space="preserve">
          <source>And a &lt;code&gt;b.mjs&lt;/code&gt; with</source>
          <target state="translated">And a &lt;code&gt;b.mjs&lt;/code&gt; with</target>
        </trans-unit>
        <trans-unit id="1682ca355307660a3f96e00d5d42a46511a1296d" translate="yes" xml:space="preserve">
          <source>And then the child script, &lt;code&gt;'sub.js'&lt;/code&gt; might look like this:</source>
          <target state="translated">그런 다음 하위 스크립트 &lt;code&gt;'sub.js'&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b3c11e24252f2dad6195fd778356100cba5fea75" translate="yes" xml:space="preserve">
          <source>Another common scenario is creating JavaScript functions that wrap C++ functions and returning those back to JavaScript:</source>
          <target state="translated">또 다른 일반적인 시나리오는 C ++ 함수를 랩핑하여 JavaScript로 다시 리턴하는 JavaScript 함수를 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2063cb7c40b85070ef82e59ab101799c2f0c63ba" translate="yes" xml:space="preserve">
          <source>Another option is to use the macro &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt;, which will also construct a context-aware addon. Unlike &lt;code&gt;NODE_MODULE()&lt;/code&gt;, which is used to construct an addon around a given addon initializer function, &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; serves as the declaration of such an initializer to be followed by a function body.</source>
          <target state="translated">또 다른 옵션은 &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; 매크로를 사용하여 컨텍스트 인식 애드온을 구성하는 것입니다. 주어진 애드온 이니셜 라이저 함수 주위에 애드온을 구성하는 데 사용되는 &lt;code&gt;NODE_MODULE()&lt;/code&gt; 과 달리 , &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; 는 이러한 이니셜 라이저를 선언하여 함수 본문을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="64bee649fb004765d623fe6d5f4bbb2d5c4fca3f" translate="yes" xml:space="preserve">
          <source>Another subtlety with promises is that &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks are run only on chained promises. That means promises not created by &lt;code&gt;then()&lt;/code&gt;/&lt;code&gt;catch()&lt;/code&gt; will not have the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks fired on them. For more details see the details of the V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; API.</source>
          <target state="translated">약속의 또 다른 미묘한이다 &lt;code&gt;before&lt;/code&gt; 과 &lt;code&gt;after&lt;/code&gt; 콜백은 연쇄 약속에서 실행됩니다. 즉, &lt;code&gt;then()&lt;/code&gt; / &lt;code&gt;catch()&lt;/code&gt; 의해 생성되지 않은 약속 에는 &lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 콜백이 발생 하지 않습니다 . 자세한 내용은 V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; API 의 세부 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="452132444b9c17b1f4a3b5f53e637fb09b4050d7" translate="yes" xml:space="preserve">
          <source>Another way of stating this is that, unlike in synchronous code where there is an ever-growing list of unhandled exceptions, with Promises there can be a growing-and-shrinking list of unhandled rejections.</source>
          <target state="translated">이를 나타내는 또 다른 방법은 처리되지 않은 예외 목록이 계속 증가하는 동기식 코드와 달리 약속과 함께 처리되지 않은 거부 목록이 늘어나고 줄어들 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b5458511eeafd97391af848cefb0b1fefa7408ad" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;'message'&lt;/code&gt; handlers in the subprocess should verify that &lt;code&gt;socket&lt;/code&gt; exists, as the connection may have been closed during the time it takes to send the connection to the child.</source>
          <target state="translated">Any &lt;code&gt;'message'&lt;/code&gt; handlers in the subprocess should verify that &lt;code&gt;socket&lt;/code&gt; exists, as the connection may have been closed during the time it takes to send the connection to the child.</target>
        </trans-unit>
        <trans-unit id="647c0f9db6cf1b8dfc296c68d57a3741452eb59a" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;ArrayBuffer&lt;/code&gt;, &lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd74ca0dca928aa5f447ed46cb469845febf96f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37742033adba3790a77e5a50e4d67d2fc75cc7f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Promise&lt;/code&gt;s created in VM contexts no longer have a &lt;code&gt;.domain&lt;/code&gt; property. Their handlers are still executed in the proper domain, however, and &lt;code&gt;Promise&lt;/code&gt;s created in the main context still possess a &lt;code&gt;.domain&lt;/code&gt; property.</source>
          <target state="translated">VM 컨텍스트에서 생성 된 모든 &lt;code&gt;Promise&lt;/code&gt; 에는 더 이상 &lt;code&gt;.domain&lt;/code&gt; 속성 이 없습니다 . 처리기는 여전히 적절한 도메인에서 실행되지만 기본 컨텍스트에서 생성 된 &lt;code&gt;Promise&lt;/code&gt; 는 여전히 &lt;code&gt;.domain&lt;/code&gt; 속성을 보유 합니다.</target>
        </trans-unit>
        <trans-unit id="db7f540d80b2762b34586bf802b3e1aef4c2238e" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;QuicStream&lt;/code&gt; instances that are still opened will be abruptly closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ee797e574b6c944fe2a4ff3ef79ed761ea396d" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;code&gt;TypedArray&lt;/code&gt; 또는 &lt;code&gt;DataView&lt;/code&gt; 인스턴스는 &lt;code&gt;buffer&lt;/code&gt; 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="987efb4c260bd2f0023d795f7d3bff1fe65839a0" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;process.nextTick&lt;/code&gt;s or Promises scheduled on the microtask queue by JavaScript during the callback are ran before returning back to C/C++.</source>
          <target state="translated">Any &lt;code&gt;process.nextTick&lt;/code&gt; s or Promises scheduled on the microtask queue by JavaScript during the callback are ran before returning back to C/C++.</target>
        </trans-unit>
        <trans-unit id="53139ef94d4a1932a95d3ff3710e504d2f270c2b" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is obviously the case for any function that may cause the execution of JavaScript, but N-API specifies that an exception may be pending on return from any of the API functions.</source>
          <target state="translated">N-API 함수를 호출하면 보류중인 JavaScript 예외가 발생할 수 있습니다. 이것은 분명히 JavaScript 실행을 유발할 수있는 함수의 경우이지만, N-API는 API 함수에서 리턴 할 때 예외가 보류 될 수 있다고 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b79798cf5d9819d0e83cf9a7afc5a59744b1afa9" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is the case for any of the API functions, even those that may not cause the execution of JavaScript.</source>
          <target state="translated">Any N-API function call may result in a pending JavaScript exception. This is the case for any of the API functions, even those that may not cause the execution of JavaScript.</target>
        </trans-unit>
        <trans-unit id="f85017420a48e8df1372d29bc406784baba94cd7" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;search&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; 속성에 할당 된 값에 잘못된 URL 문자가 표시 되면 &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;퍼센트 인코딩&lt;/a&gt; 됩니다. 퍼센트 인코딩 할 문자 선택은 &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt; 메소드가 생성 하는 문자와 약간 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c0b537637fbe5a97a8ea510f2cc54388523c455" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;username&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">&lt;code&gt;username&lt;/code&gt; 속성에 할당 된 값에 잘못된 URL 문자가 표시 되면 &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;퍼센트 인코딩&lt;/a&gt; 됩니다. 퍼센트 인코딩 할 문자 선택은 &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt; 메소드가 생성 하는 문자와 약간 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33cefc2f0c821e251811ee0c15f7e371f67bef7f" translate="yes" xml:space="preserve">
          <source>Any invalid exports entries will be ignored. This includes exports not starting with &lt;code&gt;&quot;./&quot;&lt;/code&gt; or a missing trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; for directory exports.</source>
          <target state="translated">유효하지 않은 내보내기 항목은 무시됩니다. 여기에는 &lt;code&gt;&quot;./&quot;&lt;/code&gt; 로 시작하지 않는 내보내기 또는 디렉토리 내보내기에 대한 후행 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f5bcc1ea4bc6c1ed082dc9c60625ca47a450accf" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; items can be associated with &lt;code&gt;object&lt;/code&gt; and freed whenever &lt;code&gt;object&lt;/code&gt; is garbage-collected by passing both &lt;code&gt;object&lt;/code&gt; and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 상관 &lt;code&gt;NULL&lt;/code&gt; 의 비아이 API에 전달 된 데이터 &lt;code&gt;data&lt;/code&gt; 의 필드 &lt;code&gt;napi_property_descriptor&lt;/code&gt; 의 아이템과 관련 될 수있는 &lt;code&gt;object&lt;/code&gt; 언제 해제 &lt;code&gt;object&lt;/code&gt; 가비지 수집을 모두 통과하는 것이다 &lt;code&gt;object&lt;/code&gt; 및 상기 데이터 &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b71b60681d96bc59be31fce9833b0e59c9bccd7a" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter can be associated with the resulting JavaScript function (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the function is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 매개 변수 를 통해이 API로 전달되는 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 데이터 는 결과 JavaScript 함수 ( &lt;code&gt;result&lt;/code&gt; 매개 변수 에서 리턴 됨 )와 연관 될 수 있으며 JavaScript 함수와 데이터를 모두 전달하여 함수가 가비지 수집 될 때마다 해제됩니다. 에 &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e4341c0c549edc565f407301b6c4985e11671d8" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter or via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; array items can be associated with the resulting JavaScript constructor (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the class is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 매개 변수 또는 &lt;code&gt;napi_property_descriptor&lt;/code&gt; 배열 항목 의 &lt;code&gt;data&lt;/code&gt; 필드 를 통해이 API로 전달되는 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 데이터 는 결과 JavaScript 생성자 ( &lt;code&gt;result&lt;/code&gt; 매개 변수에 리턴 됨 )와 연관 될 수 있으며 클래스가 가비지가 될 때마다 해제됩니다. JavaScript 함수와 데이터를 모두 &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt; 에 전달하여 수집합니다 .</target>
        </trans-unit>
        <trans-unit id="84a940bb688d5ab6ef1950733c5070c50c4bf187" translate="yes" xml:space="preserve">
          <source>Any number of custom conditions can be set with repeat flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf59bed5f574b76e20145839cbd960bf2bbaa2c0" translate="yes" xml:space="preserve">
          <source>Any number of custom string condition names are permitted.</source>
          <target state="translated">Any number of custom string condition names are permitted.</target>
        </trans-unit>
        <trans-unit id="ef288d26c0e39beb1db936df3b2f32b4020aa747" translate="yes" xml:space="preserve">
          <source>Any plugins that attach to the package&amp;rsquo;s singleton would need to separately attach to both the CommonJS and ES module singletons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a727689faff81bf2a17c199450888eb6c590f0" translate="yes" xml:space="preserve">
          <source>Any readable file descriptor, not necessarily for a regular file, is supported now.</source>
          <target state="translated">일반 파일 일 필요는 없지만 읽을 수있는 파일 디스크립터가 이제 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b22e6a46bdfd55ba2aa0919e34f00684aa3e276f" translate="yes" xml:space="preserve">
          <source>Any readable file, not necessarily a regular file, is supported now.</source>
          <target state="translated">일반 파일 일 필요는 없지만 읽을 수있는 파일이 이제 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="29ad5c9f4eb31a79a37b04a2ad79efddaa6cfb3e" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt; and have no effect on workers that are already running.</source>
          <target state="translated">Any settings changes only affect future calls to &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt; &lt;code&gt;.fork()&lt;/code&gt; &lt;/a&gt; and have no effect on workers that are already running.</target>
        </trans-unit>
        <trans-unit id="818029576311bb510aea405d8af84fb06b2a3ef6" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;code&gt;.fork()&lt;/code&gt; and have no effect on workers that are already running.</source>
          <target state="translated">모든 설정 변경은 향후 &lt;code&gt;.fork()&lt;/code&gt; 호출에만 영향을 미치며 이미 실행중인 작업자에게는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="086f6b403d4a50e709d7333c42d7e59d2ae3e96e" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support reading.</source>
          <target state="translated">지정된 &lt;code&gt;FileHandle&lt;/code&gt; 은 읽기를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="f583facec8aebea8206ac5d519e4fe6a6f4a03d3" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support writing.</source>
          <target state="translated">지정된 &lt;code&gt;FileHandle&lt;/code&gt; 은 쓰기를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8a24fd396ece2a0faf7e58fc0b99ffc56f0fe3f" translate="yes" xml:space="preserve">
          <source>Any specified file descriptor has to support reading.</source>
          <target state="translated">지정된 파일 디스크립터는 읽기를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="972271aba1c4e163bf42812ad1009f80f68d559f" translate="yes" xml:space="preserve">
          <source>Any specifier string for which resolution is attempted and that is not listed in the dependencies results in an error according to the policy.</source>
          <target state="translated">Any specifier string for which resolution is attempted and that is not listed in the dependencies results in an error according to the policy.</target>
        </trans-unit>
        <trans-unit id="9087fb8a7f21f4d737d5e8de7a92e255f7cce8b3" translate="yes" xml:space="preserve">
          <source>Any specifier string that is &lt;code&gt;require()&lt;/code&gt;ed and not listed in the dependencies will result in an error according to the policy.</source>
          <target state="translated">&lt;code&gt;require()&lt;/code&gt; 이고 종속성에 나열되지 않은 지정자 문자열 은 정책에 따라 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3e45c7483390d6f6e779f68ded599f2da9295662" translate="yes" xml:space="preserve">
          <source>Any time an &lt;code&gt;Error&lt;/code&gt; object is routed through a domain, a few extra fields are added to it.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 개체가 도메인을 통해 라우팅 될 때마다 몇 개의 추가 필드가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2d6c4b0264c6ae8f3ac16fb7f4789ba95a8d8a9e" translate="yes" xml:space="preserve">
          <source>Any use of the JavaScript &lt;code&gt;throw&lt;/code&gt; mechanism will raise an exception that &lt;em&gt;must&lt;/em&gt; be handled using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; or the Node.js process will exit immediately.</source>
          <target state="translated">JavaScript &lt;code&gt;throw&lt;/code&gt; 메커니즘을 사용하면 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; 사용하여 처리 &lt;em&gt;해야하는&lt;/em&gt; 예외가 발생 하거나 Node.js 프로세스가 즉시 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="9792aabb6a042539f039ce61b4052386400e3e32" translate="yes" xml:space="preserve">
          <source>Apart from the debugger, various V8 Profilers are available through the DevTools protocol.</source>
          <target state="translated">디버거 외에도 DevTools 프로토콜을 통해 다양한 V8 프로파일 러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9101900f5bcd15c384db52a54e7b3cb3dd6a21a4" translate="yes" xml:space="preserve">
          <source>Append a new name-value pair to the query string.</source>
          <target state="translated">쿼리 문자열에 새 이름-값 쌍을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7f80fbc082b95cbd92edc2ffd0f1f111c7c6d25f" translate="yes" xml:space="preserve">
          <source>Applications running in Node.js will generally experience four categories of errors:</source>
          <target state="translated">Node.js에서 실행되는 애플리케이션은 일반적으로 네 가지 범주의 오류를 경험합니다.</target>
        </trans-unit>
        <trans-unit id="ecfcbffbbe3ee7ba37594d932db7c2aa3c1f766c" translate="yes" xml:space="preserve">
          <source>Applications that are either writing data to or consuming data from a stream are not required to implement the stream interfaces directly and will generally have no reason to call &lt;code&gt;require('stream')&lt;/code&gt;.</source>
          <target state="translated">스트림에 데이터를 쓰거나 스트림에서 데이터를 소비하는 응용 프로그램은 스트림 인터페이스를 직접 구현할 필요가 없으며 일반적으로 &lt;code&gt;require('stream')&lt;/code&gt; 을 호출 할 이유가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d70e34d28832a1567a71e9e777653995535deb8c" translate="yes" xml:space="preserve">
          <source>Applies multiple bug workarounds within OpenSSL. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; for detail.</source>
          <target state="translated">OpenSSL 내에서 여러 버그 해결 방법을 적용합니다. 자세한 내용은 &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4826fb7f9ba94b55bdf513f44bf1928a495a61be" translate="yes" xml:space="preserve">
          <source>Approach #1: Use an ES module wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ec3427f062706009dcac36a47e866c3a5f7248" translate="yes" xml:space="preserve">
          <source>Approach #2: Isolate state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c2ecceedbb3676ba22feda48fe044f7ad13da2" translate="yes" xml:space="preserve">
          <source>Arguments parsing for Node.js &lt;a href=&quot;cli&quot;&gt;CLI options&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbc578afdf322ff682f84b74e88081b7c51adb5" translate="yes" xml:space="preserve">
          <source>Array fallback support is provided for exports, similarly to import maps in order to be forward-compatible with fallback workflows in future:</source>
          <target state="translated">향후 폴백 워크 플로와 호환되도록 맵 가져 오기와 비슷하게 내보내기에 대해 배열 폴백 지원이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="05fd7fe7245edc46acd4190581f9b48212b293f9" translate="yes" xml:space="preserve">
          <source>ArrayBuffers now also show their binary contents.</source>
          <target state="translated">ArrayBuffers는 이제 바이너리 내용도 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9e67ec885b4b216999aa38417b40b9b22ba7be16" translate="yes" xml:space="preserve">
          <source>As CCM processes the whole message at once, &lt;code&gt;update()&lt;/code&gt; can only be called once.</source>
          <target state="translated">CCM이 전체 메시지를 한 번에 처리하므로 &lt;code&gt;update()&lt;/code&gt; 는 한 번만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4c3e05dd1e4e6e4215b9b7958808323444b6a0" translate="yes" xml:space="preserve">
          <source>As N-API calls are made, handles to objects in the heap for the underlying VM may be returned as &lt;code&gt;napi_values&lt;/code&gt;. These handles must hold the objects 'live' until they are no longer required by the native code, otherwise the objects could be collected before the native code was finished using them.</source>
          <target state="translated">N-API 호출이 수행되면 기본 VM의 힙에있는 객체에 대한 핸들이 &lt;code&gt;napi_values&lt;/code&gt; 로 반환 될 수 있습니다 . 이러한 핸들은 기본 코드에 더 이상 필요하지 않을 때까지 개체를 '실시간'으로 유지해야합니다. 그렇지 않으면 기본 코드를 사용하기 전에 개체를 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db28e83227a15b74952266fb23d62f73dacbe341" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed HMAC digest on the readable side, or</source>
          <target state="translated">읽을 수 있고 쓸 수 있는 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 으로서 , 읽을 수있는 쪽에서 계산 된 HMAC 다이제스트를 생성하기 위해 데이터가 작성되는 경우</target>
        </trans-unit>
        <trans-unit id="403e4e4b5bba26b7f611afd2c7e889715289f136" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed hash digest on the readable side, or</source>
          <target state="translated">읽을 수 있고 쓸 수 있는 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 으로서 , 읽을 수있는 쪽에서 계산 된 해시 다이제스트를 생성하기 위해 데이터가 작성되는 경우</target>
        </trans-unit>
        <trans-unit id="015221db5afe28932e1236c8b140c5f28f25468b" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain encrypted data is written to produce unencrypted data on the readable side, or</source>
          <target state="translated">읽을 수 있고 쓸 수 있는 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 으로서 읽기 쉬운면에 암호화되지 않은 데이터를 생성하기 위해 일반 암호화 된 데이터가 작성되거나</target>
        </trans-unit>
        <trans-unit id="c5b8647298ff710d8d93d34f4c639461d091a5f9" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain unencrypted data is written to produce encrypted data on the readable side, or</source>
          <target state="translated">읽을 수 있고 쓸 수 있는 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 으로서 , 읽을 수없는 쪽에서 암호화 된 데이터를 생성하기 위해 일반 암호화되지 않은 데이터가 기록되는 경우</target>
        </trans-unit>
        <trans-unit id="6b5fed1d45eebfac25d71dd1fe587cdd9807849f" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;Duplex&lt;/a&gt; stream, &lt;code&gt;process.stdin&lt;/code&gt; can also be used in &quot;old&quot; mode that is compatible with scripts written for Node.js prior to v0.10. For more information see &lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;Stream compatibility&lt;/a&gt;.</source>
          <target state="translated">A와 &lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;이중&lt;/a&gt; 스트림, &lt;code&gt;process.stdin&lt;/code&gt; 는 또한 v0.10 이전에 Node.js를 위해 작성된 스크립트와 호환됩니다 &quot;오래된&quot;모드에서 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;스트림 호환성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="410e9b2d10ecce76dabfb86570274d72595219f8" translate="yes" xml:space="preserve">
          <source>As a best practice, listeners should always be added for the &lt;code&gt;'error'&lt;/code&gt; events.</source>
          <target state="translated">모범 사례로서 리스너는 항상 &lt;code&gt;'error'&lt;/code&gt; 이벤트에 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3ee474e3e0f75aba8a0736f69b8fe3ae0054fcc7" translate="yes" xml:space="preserve">
          <source>As a best practice, warnings should be emitted only once per process. To do so, it is recommended to place the &lt;code&gt;emitWarning()&lt;/code&gt; behind a simple boolean flag as illustrated in the example below:</source>
          <target state="translated">모범 사례로 경고는 프로세스 당 한 번만 발생해야합니다. 이렇게하려면 아래 예제와 같이 &lt;code&gt;emitWarning()&lt;/code&gt; 간단한 부울 플래그 뒤에 배치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="b8c701dbcff9bac3483fdd11577374289be7a0fa" translate="yes" xml:space="preserve">
          <source>As a last resort, package encapsulation can be disabled entirely by creating an export for the root of the package &lt;code&gt;&quot;./*&quot;: &quot;./*&quot;&lt;/code&gt;. This exposes every file in the package at the cost of disabling the encapsulation and potential tooling benefits this provides. As the ES Module loader in Node.js enforces the use of &lt;a href=&quot;esm#esm_mandatory_file_extensions&quot;&gt;the full specifier path&lt;/a&gt;, exporting the root rather than being explicit about entry is less expressive than either of the prior examples. Not only is encapsulation lost but module consumers are unable to &lt;code&gt;import feature from 'my-mod/feature'&lt;/code&gt; as they need to provide the full path &lt;code&gt;import feature from 'my-mod/feature/index.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed469b0934ed8a0d4b6a9b659491d654e201e02" translate="yes" xml:space="preserve">
          <source>As a legacy interface, it is possible to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="translated">As a legacy interface, it is possible to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</target>
        </trans-unit>
        <trans-unit id="893a0e7985d40d06428253f41d17249252e5e982" translate="yes" xml:space="preserve">
          <source>As a result, these functions cannot have the same negative impact on other processing that happens on libuv's threadpool that &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; can have.</source>
          <target state="translated">결과적으로 이러한 함수는 &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 이 가질 수있는 libuv의 스레드 풀에서 발생하는 다른 처리에 동일한 부정적인 영향을 줄 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="96a263bf9c3a3e1471b7d6a5199c7e547aff51ba" translate="yes" xml:space="preserve">
          <source>As a still supported legacy interface, it is possible (but not recommended) to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="translated">여전히 지원되는 레거시 인터페이스이므로 아래 예제에 표시된대로 &lt;code&gt;crypto.Certificate&lt;/code&gt; 클래스 의 새 인스턴스를 만들 수는 있지만 권장되지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0f7e9db2a0d557344c2fb31e8cce5892ec260a7d" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing &lt;strong&gt;Enter&lt;/strong&gt; will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="translated">As a user is typing input into the REPL prompt, pressing &lt;strong&gt;Enter&lt;/strong&gt; will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</target>
        </trans-unit>
        <trans-unit id="e23817098cad54d24748fb2d93a355688874a756" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing the &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; key will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="translated">사용자가 REPL 프롬프트에 입력을 입력 할 때 &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; 키를 누르면 현재 입력 행이 &lt;code&gt;eval&lt;/code&gt; 기능으로 전송됩니다. 다중 라인 입력을 지원하기 위해 eval 함수는 &lt;code&gt;repl.Recoverable&lt;/code&gt; 인스턴스를 제공된 콜백 함수에 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6fccee8b9bf59fc86ce6a5d4bb65cd0cfc15faa" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; where written data is used to validate against the supplied signature, or</source>
          <target state="translated">제공된 서명에 대해 유효성을 검증하기 위해 기록 된 데이터를 사용 하는 쓰기 가능한 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 또는</target>
        </trans-unit>
        <trans-unit id="7cde42be763a9088ab70ccb8053a1f89a2cbb50d" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt;, where data to be signed is written and the &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt;&lt;code&gt;sign.sign()&lt;/code&gt;&lt;/a&gt; method is used to generate and return the signature, or</source>
          <target state="translated">쓰기 가능한 &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 으로서 서명 될 데이터가 작성되고 &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt; &lt;code&gt;sign.sign()&lt;/code&gt; &lt;/a&gt; 메소드가 서명을 생성하고 리턴하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e8cba4404bac289608092f10fc7651b5ba03b91" translate="yes" xml:space="preserve">
          <source>As an alternative, use one of the following methods of constructing &lt;code&gt;Buffer&lt;/code&gt; objects:</source>
          <target state="translated">대안으로 &lt;code&gt;Buffer&lt;/code&gt; 객체 를 구성하는 다음 방법 중 하나를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3789d6bcfed429e3819b4fe01b38622b383fbf67" translate="yes" xml:space="preserve">
          <source>As can be seen from the last example of the Module Namespace Exotic Object being logged, the &lt;code&gt;name&lt;/code&gt; export is copied off of the &lt;code&gt;module.exports&lt;/code&gt; object and set directly on the ES module namespace when the module is imported.</source>
          <target state="translated">As can be seen from the last example of the Module Namespace Exotic Object being logged, the &lt;code&gt;name&lt;/code&gt; export is copied off of the &lt;code&gt;module.exports&lt;/code&gt; object and set directly on the ES module namespace when the module is imported.</target>
        </trans-unit>
        <trans-unit id="64039998e2554e82f38720b063b23f0119dbc6a6" translate="yes" xml:space="preserve">
          <source>As illustrated in the example, &lt;code&gt;executionAsyncId()&lt;/code&gt; and &lt;code&gt;execution&lt;/code&gt; each specify the value of the current execution context; which is delineated by calls to &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;.</source>
          <target state="translated">예제에 설명 된 것처럼 &lt;code&gt;executionAsyncId()&lt;/code&gt; 및 &lt;code&gt;execution&lt;/code&gt; 각각은 현재 실행 컨텍스트의 값을 지정합니다. &lt;code&gt;before&lt;/code&gt; 과 &lt;code&gt;after&lt;/code&gt; 에 대한 호출로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3918c9c0d50d8a4f8d9aaf017bcc2ec5ad9770f5" translate="yes" xml:space="preserve">
          <source>As object handles are returned they are associated with a 'scope'. The lifespan for the default scope is tied to the lifespan of the native method call. The result is that, by default, handles remain valid and the objects associated with these handles will be held live for the lifespan of the native method call.</source>
          <target state="translated">객체 핸들이 반환되면 'scope'와 연결됩니다. 기본 범위의 수명은 기본 메서드 호출의 수명과 연결되어 있습니다. 결과적으로 기본적으로 핸들은 유효하게 유지되며 이러한 핸들과 연관된 객체는 기본 메소드 호출의 수명 동안 라이브 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9834fff63d7588efa59326159f69c956659559ab" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of Promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="translated">Node.js 8.0.0부터 Promises의 핸들러는 &lt;code&gt;.then()&lt;/code&gt; 또는 &lt;code&gt;.catch()&lt;/code&gt; 자체가 호출 된 도메인 내에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="a38a8f139e9ec9cfb2265d445f1c3261cad7bf9b" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="translated">As of Node.js 8.0.0, the handlers of promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</target>
        </trans-unit>
        <trans-unit id="0189f8b9225df62e106eca8c4f6f6f1b44cad42e" translate="yes" xml:space="preserve">
          <source>As of Node.js v0.10, &lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt;&lt;code&gt;dgram.Socket#bind()&lt;/code&gt;&lt;/a&gt; changed to an asynchronous execution model. Legacy code would use synchronous behavior:</source>
          <target state="translated">Node.js v0.10부터 &lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt; &lt;code&gt;dgram.Socket#bind()&lt;/code&gt; &lt;/a&gt; 는 비동기 실행 모델로 변경되었습니다. 레거시 코드는 동기 동작을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3ac9c4c0bb4477aaaa1e3745bbccb9965faf1342" translate="yes" xml:space="preserve">
          <source>As of v10.0.0, a deprecation warning is printed at runtime when &lt;code&gt;--pending-deprecation&lt;/code&gt; is used or when the calling code is outside &lt;code&gt;node_modules&lt;/code&gt; in order to better target developers, rather than users.</source>
          <target state="translated">v10.0.0부터는 --pend &lt;code&gt;--pending-deprecation&lt;/code&gt; 을 사용하거나 호출 코드가 &lt;code&gt;node_modules&lt;/code&gt; 외부에있을 때 사용자가 아닌 개발자를 더 잘 타겟팅하기 위해 런타임에 사용 중단 경고가 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b9d71e38a7bbeb1c1a1f21d7988c27dc80d3758" translate="yes" xml:space="preserve">
          <source>As soon as the &lt;code&gt;QuicClientSession&lt;/code&gt; is created, the &lt;code&gt;address&lt;/code&gt; provided in the connect options will be resolved to an IP address (if necessary), and the TLS 1.3 handshake will begin. The &lt;code&gt;QuicClientSession&lt;/code&gt; cannot be used to exchange application data until after the &lt;code&gt;'secure'&lt;/code&gt; event has been emitted by the &lt;code&gt;QuicClientSession&lt;/code&gt; object, signaling the completion of the TLS 1.3 handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962c0a4bd1f3b3a805e3165b8c265f126b2e5613" translate="yes" xml:space="preserve">
          <source>As standalone program:</source>
          <target state="translated">독립형 프로그램으로 :</target>
        </trans-unit>
        <trans-unit id="b393c24299a99bbfd8f45a67305f938ccbd322d9" translate="yes" xml:space="preserve">
          <source>As suggested by the names, a bidirectional stream allows data to be sent on a stream in both directions, by both client and server, regardless of which peer opened the stream. A unidirectional stream can be written to only by the QuicSession that opened it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fc8eed674c2cbb60f3a625bde43e1979c80ee0" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Finished&lt;/code&gt; messages are message digests of the complete handshake (with a total of 192 bits for TLS 1.0 and more for SSL 3.0), they can be used for external authentication procedures when the authentication provided by SSL/TLS is not desired or is not enough.</source>
          <target state="translated">애즈 &lt;code&gt;Finished&lt;/code&gt; 메시지 (TLS 1.0보다 SSL 3.0 192 총 비트)와 완전한 핸드 셰이크 메시지 다이제스트는 SSL / TLS가 제공하는 인증 요구하지 않거나없는 경우, 이들은 외부 인증 절차를 위해 사용될 수있다 충분히.</target>
        </trans-unit>
        <trans-unit id="88bf2c870d425e8691eb66779c8b4b9673081e4d" translate="yes" xml:space="preserve">
          <source>As the original API was undocumented and not generally useful for non-internal code, no replacement API is provided.</source>
          <target state="translated">원래 API는 문서화되지 않았으며 일반적으로 비 내부 코드에는 유용하지 않으므로 대체 API는 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ce5ed7b5a829f51c0fead622120a3acc5c7dea0" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt;&lt;code&gt;require.main&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;process.mainModule&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; if there is no entry script.</source>
          <target state="translated">와 마찬가지로 &lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt; &lt;code&gt;require.main&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;process.mainModule&lt;/code&gt; 이 될 것입니다 &lt;code&gt;undefined&lt;/code&gt; 엔트리 스크립트가없는 경우.</target>
        </trans-unit>
        <trans-unit id="3e93aac3acee4e879ccffb8b3d225e86c77d9862" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;import&lt;/code&gt; statements, for ES module usage the value of &lt;code&gt;&quot;main&quot;&lt;/code&gt; must be a full path including extension: &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt;, not &lt;code&gt;&quot;./index&quot;&lt;/code&gt;.</source>
          <target state="translated">와 마찬가지로 &lt;code&gt;import&lt;/code&gt; ES 모듈 사용에 대한 문의 값 &lt;code&gt;&quot;main&quot;&lt;/code&gt; : 전체 경로를 포함하여 확장해야한다 &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt; 가 아닌 &lt;code&gt;&quot;./index&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f13dc0c86f08a261569b0c58c81b9883fa1e85d" translate="yes" xml:space="preserve">
          <source>As with checking for the server &lt;a href=&quot;#tls_event_secureconnection&quot;&gt;&lt;code&gt;'secureConnection'&lt;/code&gt;&lt;/a&gt; event, &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; should be inspected to confirm whether the certificate used is properly authorized.</source>
          <target state="translated">서버 &lt;a href=&quot;#tls_event_secureconnection&quot;&gt; &lt;code&gt;'secureConnection'&lt;/code&gt; &lt;/a&gt; 이벤트 확인과 마찬가지로 &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; 를 검사하여 사용 된 인증서가 제대로 인증되었는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="17e9a2d1a700b22e6cff9301b1fda4cb8d56eb90" translate="yes" xml:space="preserve">
          <source>As with client &lt;code&gt;QuicSession&lt;/code&gt; instances, the &lt;code&gt;QuicServerSession&lt;/code&gt; cannot be used to exchange application data until the &lt;code&gt;'secure'&lt;/code&gt; event has been emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27e22e1bfa7c26e458e7a06c470e2e3ee565556" translate="yes" xml:space="preserve">
          <source>As with the previous approach, a variant of this approach not requiring conditional exports for consumers could be to add an export, e.g. &lt;code&gt;&quot;./module&quot;&lt;/code&gt;, to point to an all-ES module-syntax version of the package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844c47fceee9b1ccf42676bdd38c9689f6ce6c37" translate="yes" xml:space="preserve">
          <source>Aside from writing a stateless package (if JavaScript&amp;rsquo;s &lt;code&gt;Math&lt;/code&gt; were a package, for example, it would be stateless as all of its methods are static), there are some ways to isolate state so that it&amp;rsquo;s shared between the potentially loaded CommonJS and ES module instances of the package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="37ea4209ca4e870468d734a52d1e7e3c8af0584a" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolved&lt;/em&gt; is a String.</source>
          <target state="translated">Assert : &lt;em&gt;resolved&lt;/em&gt; 는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="73315c4aa74966395a159de06898a7604cca5821" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolvedTarget&lt;/em&gt; is contained in &lt;em&gt;packageURL&lt;/em&gt;.</source>
          <target state="translated">Assert: &lt;em&gt;resolvedTarget&lt;/em&gt; is contained in &lt;em&gt;packageURL&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="0b27249c08b015c5065fe1cbda4e800600527de9" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;specifier&lt;/em&gt; begins with &lt;em&gt;&quot;#&quot;&lt;/em&gt;.</source>
          <target state="translated">Assert: &lt;em&gt;specifier&lt;/em&gt; begins with &lt;em&gt;&quot;#&quot;&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="882349c7f5112244b43b6c72ec0991bbb983fb67" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;url&lt;/em&gt; corresponds to an existing file.</source>
          <target state="translated">Assert : &lt;em&gt;url&lt;/em&gt; 은 기존 파일에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ee8316c0bc9494b895cb21ebd8868a9b57e28863" translate="yes" xml:space="preserve">
          <source>Assertion Testing</source>
          <target state="translated">어설 션 테스트</target>
        </trans-unit>
        <trans-unit id="053801980a55516453a16e9fc7c927980eae77e7" translate="yes" xml:space="preserve">
          <source>Assertion testing</source>
          <target state="translated">Assertion testing</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="d49cc2d0a2b818e7ed5faf9ef6b509305fbc9efa" translate="yes" xml:space="preserve">
          <source>Asserts that the function &lt;code&gt;fn&lt;/code&gt; does not throw an error.</source>
          <target state="translated">함수 &lt;code&gt;fn&lt;/code&gt; 이 오류를 발생시키지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e3957fccdb81b71e89905ba8f09f2b54b8f61f26" translate="yes" xml:space="preserve">
          <source>Assigning a property on &lt;code&gt;process.env&lt;/code&gt; will implicitly convert the value to a string. &lt;strong&gt;This behavior is deprecated.&lt;/strong&gt; Future versions of Node.js may throw an error when the value is not a string, number, or boolean.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; 에 속성을 할당 하면 값이 문자열로 암시 적으로 변환됩니다. &lt;strong&gt;이 동작은 더 이상 사용되지 않습니다. &lt;/strong&gt;값이 문자열, 숫자 또는 부울이 아닌 경우 이후 버전의 Node.js에서 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ca62f7fe96600e58c09163bd1df22f790a65906" translate="yes" xml:space="preserve">
          <source>Assigning a value to &lt;code&gt;process.title&lt;/code&gt; might not result in an accurate label within process manager applications such as macOS Activity Monitor or Windows Services Manager.</source>
          <target state="translated">Assigning a value to &lt;code&gt;process.title&lt;/code&gt; might not result in an accurate label within process manager applications such as macOS Activity Monitor or Windows Services Manager.</target>
        </trans-unit>
        <trans-unit id="8bd1090099518731cb82358f7150ea7e8e18982b" translate="yes" xml:space="preserve">
          <source>Assigning properties to the top-level &lt;code&gt;this&lt;/code&gt; as an alternative to &lt;code&gt;module.exports&lt;/code&gt; is deprecated. Developers should use &lt;code&gt;exports&lt;/code&gt; or &lt;code&gt;module.exports&lt;/code&gt; instead.</source>
          <target state="translated">최상위에 속성을 할당 &lt;code&gt;this&lt;/code&gt; 대안으로 &lt;code&gt;module.exports&lt;/code&gt; 하는 것은 지원되지 않습니다. 개발자는 대신 &lt;code&gt;exports&lt;/code&gt; 또는 &lt;code&gt;module.exports&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="06d00ede6deb155e49dc8cf86da916484c857d23" translate="yes" xml:space="preserve">
          <source>Assignment of the &lt;code&gt;_&lt;/code&gt; (underscore) variable</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; (밑줄) 변수 할당</target>
        </trans-unit>
        <trans-unit id="d665fccb55c06268901cada38d0f82a9235c5575" translate="yes" xml:space="preserve">
          <source>Assignment to &lt;code&gt;module.exports&lt;/code&gt; must be done immediately. It cannot be done in any callbacks. This does not work:</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; 에 할당은 즉시 수행해야합니다. 콜백에서는 수행 할 수 없습니다. 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="619b9ed00714b4d15db0a5b484877fe8405aa504" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;dgram.Socket&lt;/code&gt; to a remote address and port. Every message sent by this handle is automatically sent to that destination. Also, the socket will only receive messages from that remote peer. Trying to call &lt;code&gt;connect()&lt;/code&gt; on an already connected socket will result in an &lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt;&lt;/a&gt; exception. If &lt;code&gt;address&lt;/code&gt; is not provided, &lt;code&gt;'127.0.0.1'&lt;/code&gt; (for &lt;code&gt;udp4&lt;/code&gt; sockets) or &lt;code&gt;'::1'&lt;/code&gt; (for &lt;code&gt;udp6&lt;/code&gt; sockets) will be used by default. Once the connection is complete, a &lt;code&gt;'connect'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called. In case of failure, the &lt;code&gt;callback&lt;/code&gt; is called or, failing this, an &lt;code&gt;'error'&lt;/code&gt; event is emitted.</source>
          <target state="translated">관계 기업 &lt;code&gt;dgram.Socket&lt;/code&gt; 을 원격 주소와 포트에 연결합니다. 이 핸들이 보낸 모든 메시지는 자동으로 해당 목적지로 전송됩니다. 또한 소켓은 해당 원격 피어로부터 만 메시지를 수신합니다. 이미 연결된 소켓에서 &lt;code&gt;connect()&lt;/code&gt; 를 호출하려고 하면 &lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 경우에 &lt;code&gt;address&lt;/code&gt; 제공되지 않은, &lt;code&gt;'127.0.0.1'&lt;/code&gt; (대한 &lt;code&gt;udp4&lt;/code&gt; 소켓) 또는 &lt;code&gt;'::1'&lt;/code&gt; (대한 &lt;code&gt;udp6&lt;/code&gt; 소켓은) 기본적으로 사용됩니다. 연결이 완료되면 &lt;code&gt;'connect'&lt;/code&gt; 이벤트가 발생하고 선택적 &lt;code&gt;callback&lt;/code&gt; 함수가 호출됩니다. 실패시 &lt;code&gt;callback&lt;/code&gt; 이 &lt;code&gt;'error'&lt;/code&gt; 하면 '오류' 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="656d7cd44a1a91a56bfda8de731d5bafeb0237f1" translate="yes" xml:space="preserve">
          <source>Associates the value of the &lt;code&gt;type_tag&lt;/code&gt; pointer with the JavaScript object. &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; can then be used to compare the tag that was attached to the object with one owned by the addon to ensure that the object has the right type.</source>
          <target state="translated">Associates the value of the &lt;code&gt;type_tag&lt;/code&gt; pointer with the JavaScript object. &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; can then be used to compare the tag that was attached to the object with one owned by the addon to ensure that the object has the right type.</target>
        </trans-unit>
        <trans-unit id="557e5ee8e017ecf16dc3152984786becaec6c1b9" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;a.mjs&lt;/code&gt; with</source>
          <target state="translated">Assuming an &lt;code&gt;a.mjs&lt;/code&gt; with</target>
        </trans-unit>
        <trans-unit id="d25c13e3a0fb1554e04e5083d12ad3e76e2f517a" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;index.mjs&lt;/code&gt; with</source>
          <target state="translated">&lt;code&gt;index.mjs&lt;/code&gt; 로 가정</target>
        </trans-unit>
        <trans-unit id="49e794543de79d6c18544f3b4ca125a146181194" translate="yes" xml:space="preserve">
          <source>Assuming that the task is adding two numbers, using a file named &lt;code&gt;task_processor.js&lt;/code&gt; with the following content:</source>
          <target state="translated">Assuming that the task is adding two numbers, using a file named &lt;code&gt;task_processor.js&lt;/code&gt; with the following content:</target>
        </trans-unit>
        <trans-unit id="3751c055775a3fd5e46bc50c33f4f8776b5e7427" translate="yes" xml:space="preserve">
          <source>Async Hooks</source>
          <target state="translated">비동기 후크</target>
        </trans-unit>
        <trans-unit id="84a29bec6f7a755d3607f0d91741e2b169bcefe1" translate="yes" xml:space="preserve">
          <source>Async functions may be used as event listeners. If an async handler function rejects, the rejection is captured and handled as described in &lt;a href=&quot;#events_eventtarget_error_handling&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt; error handling&lt;/a&gt;.</source>
          <target state="translated">Async functions may be used as event listeners. If an async handler function rejects, the rejection is captured and handled as described in &lt;a href=&quot;#events_eventtarget_error_handling&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; error handling&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0cbd038e382b67c6a00e5cdb344803c88d5aafb1" translate="yes" xml:space="preserve">
          <source>Async hooks</source>
          <target state="translated">비동기 후크</target>
        </trans-unit>
        <trans-unit id="fbc139f7b1d50b9a66c62a8fe1c5279a87451a00" translate="yes" xml:space="preserve">
          <source>Async iterators register a permanent error handler on the stream to prevent any unhandled post-destroy errors.</source>
          <target state="translated">비동기 반복기는 처리되지 않은 사후 파괴 오류를 방지하기 위해 스트림에 영구적 인 오류 처리기를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="df5103c1d76d680bba6764bfa32d48a6b5502e54" translate="yes" xml:space="preserve">
          <source>AsyncResource</source>
          <target state="translated">AsyncResource</target>
        </trans-unit>
        <trans-unit id="207846314a3990e8fdd3da08a9a913a385115f88" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt;&lt;code&gt;close(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기식 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt; &lt;code&gt;close(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81c6358263c307be9ef8a686829bbed957e65382" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt;&lt;code&gt;fchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt; &lt;code&gt;fchmod(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bddd536b720e4429ebd9c889527ed28b6809dfa4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt;&lt;code&gt;fchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt; &lt;code&gt;fchown(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bb4350c9f114fb8c3901ce0679f5b22f08672228" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad34fcb6ace8aca75784902aada9d9e60f1b585a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="6ee0688b451469c96f066d51ebaee75bb1f3da28" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt;&lt;code&gt;fstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;fstat()&lt;/code&gt; is identical to &lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, except that the file to be stat-ed is specified by the file descriptor &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt; &lt;code&gt;fstat(2)&lt;/code&gt; &lt;/a&gt; . 콜백은 두 개의 인수를 얻는다 &lt;code&gt;(err, stats)&lt;/code&gt; 어디 &lt;code&gt;stats&lt;/code&gt; 입니다 &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; 의&lt;/a&gt; 객체입니다. &lt;code&gt;fstat()&lt;/code&gt; 는 &lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt; 와 동일하지만 통계 파일은 파일 디스크립터 &lt;code&gt;fd&lt;/code&gt; 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="24e6bc0bc1531b9eeca11deee09b0488be7a6867" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c8ac0192924aff15e0c7c0acd33305cc5aa9309e" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="4b0c2bb494df453aecfc68a06ab9c256c05509c0" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt;&lt;code&gt;ftruncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt; &lt;code&gt;ftruncate(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06dc3705c43322a051005430ab1d26a877c762fe" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt;&lt;code&gt;lchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기식 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt; &lt;code&gt;lchown(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cfa6408a63fd1c60aef183cde8c36d760fa12120" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9dc810a7f0da4267a165ebaa07ff3b7ea8bcb3af" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="48142cc3d8a92cae4496ba279455589953a6b3a9" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object for the given symbolic link &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 으로 해결 &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; 주어진 심볼 링크에 대한 객체 &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="875263631be328f78228047f131d9988dea3d292" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is a &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;lstat()&lt;/code&gt; is identical to &lt;code&gt;stat()&lt;/code&gt;, except that if &lt;code&gt;path&lt;/code&gt; is a symbolic link, then the link itself is stat-ed, not the file that it refers to.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt; . 콜백은 두 개의 인수를 얻는다 &lt;code&gt;(err, stats)&lt;/code&gt; &lt;code&gt;stats&lt;/code&gt; A는 &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; 의&lt;/a&gt; 개체를. &lt;code&gt;lstat()&lt;/code&gt; 는 &lt;code&gt;path&lt;/code&gt; 가 심볼릭 링크 인 경우 링크 자체가 참조하는 파일이 아니라 링크되어 있다는 점을 제외하면 &lt;code&gt;stat()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f764dc94aab80d6bfa0fd0bec45fd64486a8310f" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;code&gt;linkString&lt;/code&gt; upon success.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 으로 해결 &lt;code&gt;linkString&lt;/code&gt; 성공시.</target>
        </trans-unit>
        <trans-unit id="046dd32472c9747bf8fae24c7e00dfc7dd0e552d" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, linkString)&lt;/code&gt;.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt; . 콜백은 두 개의 인수 &lt;code&gt;(err, linkString)&lt;/code&gt; 받습니다.</target>
        </trans-unit>
        <trans-unit id="cd168382f6368986c9aa40e2ab34d1be126cbe49" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt;&lt;code&gt;rmdir(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt; &lt;code&gt;rmdir(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8f047acee63c91786a3a386a177a4ee8d8d42ff" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt;&lt;code&gt;stat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt; &lt;code&gt;stat(2)&lt;/code&gt; &lt;/a&gt; . 콜백은 두 개의 인수를 얻는다 &lt;code&gt;(err, stats)&lt;/code&gt; 어디 &lt;code&gt;stats&lt;/code&gt; 입니다 &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="47ae8dec819f652076ace32b100856d5cd524f7b" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt; which creates the link called &lt;code&gt;path&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt; &lt;code&gt;symlink(2)&lt;/code&gt; &lt;/a&gt; which creates the link called &lt;code&gt;path&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt; . No arguments other than a possible exception are given to the completion callback.</target>
        </trans-unit>
        <trans-unit id="3d3193c4695bbec930962bab113df5c656f11410" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. The &lt;code&gt;type&lt;/code&gt; argument is only available on Windows and ignored on other platforms. It can be set to &lt;code&gt;'dir'&lt;/code&gt;, &lt;code&gt;'file'&lt;/code&gt;, or &lt;code&gt;'junction'&lt;/code&gt;. If the &lt;code&gt;type&lt;/code&gt; argument is not set, Node will autodetect &lt;code&gt;target&lt;/code&gt; type and use &lt;code&gt;'file'&lt;/code&gt; or &lt;code&gt;'dir'&lt;/code&gt;. If the &lt;code&gt;target&lt;/code&gt; does not exist, &lt;code&gt;'file'&lt;/code&gt; will be used. Windows junction points require the destination path to be absolute. When using &lt;code&gt;'junction'&lt;/code&gt;, the &lt;code&gt;target&lt;/code&gt; argument will automatically be normalized to absolute path.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt; &lt;code&gt;symlink(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다. &lt;code&gt;type&lt;/code&gt; 인수는 Windows에서만 사용할 수 있고 다른 플랫폼에서 무시됩니다. &lt;code&gt;'dir'&lt;/code&gt; , &lt;code&gt;'file'&lt;/code&gt; 또는 &lt;code&gt;'junction'&lt;/code&gt; 으로 설정할 수 있습니다 . 는 IF &lt;code&gt;type&lt;/code&gt; 인수가 설정되어 있지 않은, 노드는 자동으로 감지합니다 &lt;code&gt;target&lt;/code&gt; 유형과 사용 &lt;code&gt;'file'&lt;/code&gt; 또는 &lt;code&gt;'dir'&lt;/code&gt; . 경우 &lt;code&gt;target&lt;/code&gt; 존재하지 않는, &lt;code&gt;'file'&lt;/code&gt; 사용됩니다. Windows 접점에는 대상 경로가 절대 경로 여야합니다. 사용 &lt;code&gt;'junction'&lt;/code&gt; 은 &lt;code&gt;target&lt;/code&gt; 인수는 자동으로 절대 경로로 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="5becefe8f043e2409d28bd6644782d0e8c9ed483" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt;&lt;code&gt;truncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. A file descriptor can also be passed as the first argument. In this case, &lt;code&gt;fs.ftruncate()&lt;/code&gt; is called.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt; &lt;code&gt;truncate(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다. 파일 설명자는 첫 번째 인수로 전달 될 수도 있습니다. 이 경우 &lt;code&gt;fs.ftruncate()&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="086e500b32994a55adb4a9bb6803347f1f01c959" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt;&lt;code&gt;unlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt; &lt;code&gt;unlink(2)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="30eda89daf29dd37b5c33ea6af171a0cbda2f48a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt;. Reads the contents of a directory. The callback gets two arguments &lt;code&gt;(err, files)&lt;/code&gt; where &lt;code&gt;files&lt;/code&gt; is an array of the names of the files in the directory excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt; . 디렉토리의 내용을 읽습니다. 콜백은 두 개의 인수 &lt;code&gt;(err, files)&lt;/code&gt; 얻습니다. 여기서 &lt;code&gt;files&lt;/code&gt; 는 &lt;code&gt;'.'&lt;/code&gt; 을 제외한 디렉토리에있는 파일 이름의 배열입니다 . 및 &lt;code&gt;'..'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbb0824a63d5adeba58c7e2befadf249fff6a34a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt;&lt;code&gt;realpath(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비동기 &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt; &lt;code&gt;realpath(3)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b83a298e5187f5282e1f6ffbb164af6c666961b4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt;&lt;code&gt;lchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt; &lt;code&gt;lchmod(2)&lt;/code&gt; &lt;/a&gt; . 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c386e768f620d9421694511c41f1869a7099c6b" translate="yes" xml:space="preserve">
          <source>Asynchronous Process Creation</source>
          <target state="translated">비동기식 프로세스 생성</target>
        </trans-unit>
        <trans-unit id="870352c416c2838c61264150314eaa4a679049d3" translate="yes" xml:space="preserve">
          <source>Asynchronous Thread-safe Function Calls</source>
          <target state="translated">비동기 스레드 안전 함수 호출</target>
        </trans-unit>
        <trans-unit id="a03fedb2a557050dce7a75bc3afc2350375e0e56" translate="yes" xml:space="preserve">
          <source>Asynchronous context example</source>
          <target state="translated">비동기 컨텍스트 예제</target>
        </trans-unit>
        <trans-unit id="932d1107f2520700d1c17c3a107f791d9049a851" translate="yes" xml:space="preserve">
          <source>Asynchronous file open that returns a &lt;code&gt;Promise&lt;/code&gt; that, when resolved, yields a &lt;code&gt;FileHandle&lt;/code&gt; object. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">해결 될 때 &lt;code&gt;FileHandle&lt;/code&gt; 객체를 생성하는 &lt;code&gt;Promise&lt;/code&gt; 을 반환하는 비동기 파일 열기 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e7ff50f9f2650749375c6de24e52e7612612d38" translate="yes" xml:space="preserve">
          <source>Asynchronous file open. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비동기 파일이 열립니다. &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4011de6f6effa5362a35d4ec51b2e02903974ff" translate="yes" xml:space="preserve">
          <source>Asynchronous process creation</source>
          <target state="translated">Asynchronous process creation</target>
        </trans-unit>
        <trans-unit id="51ae8164adb84cce822fb1485a5cdaf4e6f315d5" translate="yes" xml:space="preserve">
          <source>Asynchronous system APIs are used by Node.js whenever possible, but where they do not exist, libuv's threadpool is used to create asynchronous node APIs based on synchronous system APIs. Node.js APIs that use the threadpool are:</source>
          <target state="translated">비동기 시스템 API는 가능할 때마다 Node.js에서 사용되지만 존재하지 않는 경우 libuv의 스레드 풀은 동기 시스템 API를 기반으로 비동기 노드 API를 작성하는 데 사용됩니다. 스레드 풀을 사용하는 Node.js API는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2116a1ac7f9f0d1351792d43781b39c54b1ff200" translate="yes" xml:space="preserve">
          <source>Asynchronous thread-safe function calls</source>
          <target state="translated">Asynchronous thread-safe function calls</target>
        </trans-unit>
        <trans-unit id="c3df2a3d6f21d146c21574f761ef4944133d9a7e" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. Synchronous</source>
          <target state="translated">비동기 대 동기</target>
        </trans-unit>
        <trans-unit id="b711aa13f0c6c18c2c4dcd68214019a1a4d2c2c2" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. synchronous</source>
          <target state="translated">Asynchronous vs. synchronous</target>
        </trans-unit>
        <trans-unit id="41ff317f81343d387b04d108c5d6283c4dcb0935" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일에 데이터를 비동기 적으로 추가하여 파일이없는 경우 파일을 만듭니다. &lt;code&gt;data&lt;/code&gt; 는 string 또는 &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; 일&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98a5c4afe98dc5cc8dcf18f90e97c71e236ec74c" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">파일에 데이터를 비동기 적으로 추가하여 파일이없는 경우 파일을 만듭니다. &lt;code&gt;data&lt;/code&gt; 는 string 또는 &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; 일&lt;/a&gt; 수 있습니다 . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="976cd5376ce8651fee81ccbed770f762bd05a695" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to this file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">이 파일에 데이터를 비동기 적으로 추가하여 파일이없는 경우 파일을 만듭니다. &lt;code&gt;data&lt;/code&gt; 는 string 또는 &lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; 일&lt;/a&gt; 수 있습니다 . &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="1892b7d4690e77e49d808bad31fc4422c9b65b09" translate="yes" xml:space="preserve">
          <source>Asynchronously changes owner and group of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">파일 소유자와 그룹을 비동기 적으로 변경합니다. 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2dfd976004fd3b58537d85e14c807b6633f9f8bd" translate="yes" xml:space="preserve">
          <source>Asynchronously changes the permissions of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">파일의 권한을 비동기 적으로 변경합니다. 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a40de80258a05223e74cdb1294b7987da7adad17" translate="yes" xml:space="preserve">
          <source>Asynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.</source>
          <target state="translated">Asynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.</target>
        </trans-unit>
        <trans-unit id="7fc5972b2e83a394368241b636afbbaac521139f" translate="yes" xml:space="preserve">
          <source>Asynchronously computes the canonical pathname by resolving &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt; and symbolic links.</source>
          <target state="translated">를 해결하여 정식 경로 이름을 비동기 적으로 계산합니다 &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;..&lt;/code&gt; 및 기호 링크.</target>
        </trans-unit>
        <trans-unit id="61e758277c877bffb922ed73601c1ec773283bec" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. No arguments other than a possible exception are given to the callback function. Node.js makes no guarantees about the atomicity of the copy operation. If an error occurs after the destination file has been opened for writing, Node.js will attempt to remove the destination.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 를 &lt;code&gt;dest&lt;/code&gt; 에 비동기 적으로 복사 합니다. 기본적으로 &lt;code&gt;dest&lt;/code&gt; 는 이미 존재하는 경우 덮어 씁니다. 콜백 함수에는 가능한 예외 이외의 인수가 제공되지 않습니다. Node.js는 복사 작업의 원 자성을 보증하지 않습니다. 대상 파일을 쓰기 위해 연 후 오류가 발생하면 Node.js가 대상 제거를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="0574311e1ef2b3da4f080981eca1cd288383a2b2" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 를 &lt;code&gt;dest&lt;/code&gt; 에 비동기 적으로 복사 합니다. 기본적으로 &lt;code&gt;dest&lt;/code&gt; 는 이미 존재하는 경우 덮어 씁니다. &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="b7c9346b0de6bb56fc8db44a7ecea4bb12c73076" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with either no arguments, or the first directory path created if &lt;code&gt;recursive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with either no arguments, or the first directory path created if &lt;code&gt;recursive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d96ee6aa922ef2ca4b26e5513d0f8a3a0c0fff67" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">비동기 적으로 디렉토리를 만든 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="fcb16e88dba803e857715fb54e9664c6c91965ad" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory.</source>
          <target state="translated">Asynchronously creates a directory.</target>
        </trans-unit>
        <trans-unit id="ec0c8dd0fcddb9b0398d333f8377db08d57ba88c" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">비동기 적으로 디렉토리를 만듭니다. 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e7214401a7cbf347d03bb5817696077588e2606" translate="yes" xml:space="preserve">
          <source>Asynchronously generates a new random secret key of the given &lt;code&gt;length&lt;/code&gt;. The &lt;code&gt;type&lt;/code&gt; will determine which validations will be performed on the &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939198d49e024c21a1e1e8e46a1c0cdcd9fe7a68" translate="yes" xml:space="preserve">
          <source>Asynchronously get the number of concurrent connections on the server. Works when sockets were sent to forks.</source>
          <target state="translated">서버에서 동시 연결 수를 비동기 적으로 가져옵니다. 소켓을 포크로 보낼 때 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c79f9ea168e2ce45b50d6380e32a4d09ef56cde7" translate="yes" xml:space="preserve">
          <source>Asynchronously iterates over the directory via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; until all entries have been read.</source>
          <target state="translated">Asynchronously iterates over the directory via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt; until all entries have been read.</target>
        </trans-unit>
        <trans-unit id="d03edc635ff855c15d168e66fcad36748b96f3a5" translate="yes" xml:space="preserve">
          <source>Asynchronously open a directory. See &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt;&lt;code&gt;opendir(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asynchronously open a directory. See &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt; &lt;code&gt;opendir(3)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a3d5f7ee95471270836f8f618f696033b04bd6d7" translate="yes" xml:space="preserve">
          <source>Asynchronously read the next directory entry via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asynchronously read the next directory entry via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt; as an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="14b60a1ac407f4352799156d07820adf71cf5f4b" translate="yes" xml:space="preserve">
          <source>Asynchronously reads the entire contents of a file.</source>
          <target state="translated">파일의 전체 내용을 비동기 적으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="766290f37aa426d8129aecd96082d0a6226bde50" translate="yes" xml:space="preserve">
          <source>Asynchronously removes a file or symbolic link. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">파일 또는 심볼릭 링크를 비동기 적으로 제거합니다. 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f9db1ff0bc43c00c923d9581df460a90e202840" translate="yes" xml:space="preserve">
          <source>Asynchronously removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">Asynchronously removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). No arguments other than a possible exception are given to the completion callback.</target>
        </trans-unit>
        <trans-unit id="d8843625268d4b77ea1512d3934aa5ff87185eb5" translate="yes" xml:space="preserve">
          <source>Asynchronously rename file at &lt;code&gt;oldPath&lt;/code&gt; to the pathname provided as &lt;code&gt;newPath&lt;/code&gt;. In the case that &lt;code&gt;newPath&lt;/code&gt; already exists, it will be overwritten. If there is a directory at &lt;code&gt;newPath&lt;/code&gt;, an error will be raised instead. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">&lt;code&gt;oldPath&lt;/code&gt; 의 파일 이름을 &lt;code&gt;newPath&lt;/code&gt; 로 제공된 경로 이름으로 비동기 적으로 바꿉니다 . &lt;code&gt;newPath&lt;/code&gt; 가 이미 존재 하는 경우 덮어 씁니다. &lt;code&gt;newPath&lt;/code&gt; 에 디렉토리가 있으면 대신 오류가 발생합니다. 완료 콜백에는 가능한 예외 이외의 인수가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58ece64d813f422b3fc9b6ecb0f0ff6b40f7434c" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string or a buffer. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">파일이 이미있는 경우 파일을 대체하여 파일에 데이터를 비동기 적으로 씁니다. &lt;code&gt;data&lt;/code&gt; 는 문자열 또는 버퍼 일 수 있습니다. &lt;code&gt;Promise&lt;/code&gt; 성공에 따라 인수없이 해결 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="df09d1bd914fced304f3666b66420161e4fb8bf5" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string, a buffer, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string, a buffer, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</target>
        </trans-unit>
        <trans-unit id="0f24a79987b52d029db55124099624d418a91102" translate="yes" xml:space="preserve">
          <source>At any given time, a &lt;code&gt;QuicSession&lt;/code&gt; exists is one of four possible states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361feb526f96be8e9bb9aacef28f568d61f8731" translate="yes" xml:space="preserve">
          <source>At the REPL prompt, pressing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afcfc38b7a5f2938ce36281f7fe9f5e8725769" translate="yes" xml:space="preserve">
          <source>At this time coverage is only collected in the main thread and will not be output for code executed by worker threads.</source>
          <target state="translated">현재 적용 범위는 기본 스레드에서만 수집되며 작업자 스레드가 실행 한 코드에 대해서는 출력되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b19f4cf9dafd0485024999c5ac53d9a2b7fe4ae4" translate="yes" xml:space="preserve">
          <source>AtExit hooks</source>
          <target state="translated">AtExit 훅</target>
        </trans-unit>
        <trans-unit id="d17ff2196b50a184e9990e8ddba398b71e1dd254" translate="yes" xml:space="preserve">
          <source>Attaches an AbortSignal to a readable or writeable stream. This lets code control stream destruction using an &lt;code&gt;AbortController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea32cf122572dc5951380b0e98cbcb8bd4712d4" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;code&gt;'data'&lt;/code&gt; event listener to a stream that has not been explicitly paused will switch the stream into flowing mode. Data will then be passed as soon as it is available.</source>
          <target state="translated">명시 적으로 일시 중지되지 않은 스트림에 &lt;code&gt;'data'&lt;/code&gt; 이벤트 리스너를 연결 하면 스트림이 흐름 모드로 전환됩니다. 그런 다음 데이터는 사용 가능한 즉시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a743b60d1a87bd386f303865664fc597fdb64124" translate="yes" xml:space="preserve">
          <source>Attempt to begin execution of &lt;code&gt;instance&lt;/code&gt; as a WASI command by invoking its &lt;code&gt;_start()&lt;/code&gt; export. If &lt;code&gt;instance&lt;/code&gt; does not contain a &lt;code&gt;_start()&lt;/code&gt; export, or if &lt;code&gt;instance&lt;/code&gt; contains an &lt;code&gt;_initialize()&lt;/code&gt; export, then an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed7c628f478f30ab5bc85d5cb8783d36c994d3a" translate="yes" xml:space="preserve">
          <source>Attempt to initialize &lt;code&gt;instance&lt;/code&gt; as a WASI reactor by invoking its &lt;code&gt;_initialize()&lt;/code&gt; export, if it is present. If &lt;code&gt;instance&lt;/code&gt; contains a &lt;code&gt;_start()&lt;/code&gt; export, then an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd087322b0e9680ce97117b3037d67b230d66cc7" translate="yes" xml:space="preserve">
          <source>Attempting to fill a non-zero length buffer with a zero length buffer triggers a thrown exception.</source>
          <target state="translated">길이가 0 인 버퍼로 길이가 0이 아닌 버퍼를 채우려 고하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2e0426506e4725ac2d5585b495d07354c95a392" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out of the power cord when upgrading a computer &amp;mdash; nine out of ten times nothing happens - but the 10th time, the system becomes corrupted.</source>
          <target state="translated">포착되지 않은 예외 후에 정상적으로 재개를 시도하는 것은 컴퓨터를 업그레이드 할 때 전원 코드를 뽑는 것과 유사 할 수 있습니다. 10 회 중 9 회는 아무 일도 일어나지 않습니다. 그러나 10 회째이면 시스템이 손상됩니다.</target>
        </trans-unit>
        <trans-unit id="081d720ee9440d5b17f5b1ea8f5e2ee8d0f998b1" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out the power cord when upgrading a computer. Nine out of ten times, nothing happens. But the tenth time, the system becomes corrupted.</source>
          <target state="translated">Attempting to resume normally after an uncaught exception can be similar to pulling out the power cord when upgrading a computer. Nine out of ten times, nothing happens. But the tenth time, the system becomes corrupted.</target>
        </trans-unit>
        <trans-unit id="11d283b1b61a25bccb1159e09a9877652fcdcde4" translate="yes" xml:space="preserve">
          <source>Attempting to set a TLS protocol &lt;code&gt;minVersion&lt;/code&gt; or &lt;code&gt;maxVersion&lt;/code&gt; conflicts with an attempt to set the &lt;code&gt;secureProtocol&lt;/code&gt; explicitly. Use one mechanism or the other.</source>
          <target state="translated">TLS 프로토콜 &lt;code&gt;minVersion&lt;/code&gt; 또는 &lt;code&gt;maxVersion&lt;/code&gt; 을 설정하려고하면 &lt;code&gt;secureProtocol&lt;/code&gt; 을 명시 적으로 설정하려는 시도와 충돌 합니다. 하나의 메커니즘을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e7450aeaf10a1d9835fb22749c80944a631c9bd8" translate="yes" xml:space="preserve">
          <source>Attempting to set a header field name or value that contains invalid characters will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">유효하지 않은 문자가 포함 된 헤더 필드 이름 또는 값을 설정하려고하면 &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2888617845c16f508396fa9e8b37fa087e6b8e74" translate="yes" xml:space="preserve">
          <source>Attempts to set the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt;. If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt;, the process ID of the current process is used.</source>
          <target state="translated">Attempts to set the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt; . If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt; , the process ID of the current process is used.</target>
        </trans-unit>
        <trans-unit id="0562a89091aa1d9d44d65d1f29272422e1ef026f" translate="yes" xml:space="preserve">
          <source>Attempts to use the server's preferences instead of the client's when selecting a cipher. Behavior depends on protocol version. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;.</source>
          <target state="translated">암호를 선택할 때 클라이언트 대신 서버의 환경 설정을 사용하려고합니다. 동작은 프로토콜 버전에 따라 다릅니다. &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c1bb6246c4b5eba2405c8d2e267c8ad678a420d" translate="yes" xml:space="preserve">
          <source>Automatically zero-fills all newly allocated &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt;&lt;code&gt;SlowBuffer&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">새로 할당 된 모든 &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt; &lt;code&gt;SlowBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스를 자동으로 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="738a063d097a7709bdd510db350f157649f27d7e" translate="yes" xml:space="preserve">
          <source>Avoid overriding public methods such as &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cork()&lt;/code&gt;, &lt;code&gt;uncork()&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;destroy()&lt;/code&gt;, or emitting internal events such as &lt;code&gt;'error'&lt;/code&gt;, &lt;code&gt;'data'&lt;/code&gt;, &lt;code&gt;'end'&lt;/code&gt;, &lt;code&gt;'finish'&lt;/code&gt; and &lt;code&gt;'close'&lt;/code&gt; through &lt;code&gt;.emit()&lt;/code&gt;. Doing so can break current and future stream invariants leading to behavior and/or compatibility issues with other streams, stream utilities, and user expectations.</source>
          <target state="translated">Avoid overriding public methods such as &lt;code&gt;write()&lt;/code&gt; , &lt;code&gt;end()&lt;/code&gt; , &lt;code&gt;cork()&lt;/code&gt; , &lt;code&gt;uncork()&lt;/code&gt; , &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;destroy()&lt;/code&gt; , or emitting internal events such as &lt;code&gt;'error'&lt;/code&gt; , &lt;code&gt;'data'&lt;/code&gt; , &lt;code&gt;'end'&lt;/code&gt; , &lt;code&gt;'finish'&lt;/code&gt; and &lt;code&gt;'close'&lt;/code&gt; through &lt;code&gt;.emit()&lt;/code&gt; . Doing so can break current and future stream invariants leading to behavior and/or compatibility issues with other streams, stream utilities, and user expectations.</target>
        </trans-unit>
        <trans-unit id="71ea6ab27794b1b786ec6f49c43b3be10f62e11b" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;code&gt;require.extensions&lt;/code&gt;. Use could cause subtle bugs and resolving the extensions gets slower with each registered extension.</source>
          <target state="translated">&lt;code&gt;require.extensions&lt;/code&gt; 사용을 피하십시오 . 사용하면 미묘한 버그가 발생할 수 있으며 등록 된 확장 프로그램마다 확장 프로그램의 해상도가 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c375b39ededa122db6c5e755a1b2e705c13957d" translate="yes" xml:space="preserve">
          <source>Avoiding duplicate warnings</source>
          <target state="translated">중복 경고 피하기</target>
        </trans-unit>
        <trans-unit id="d9f92545139fd65e2e2d3013e9f18410df9c8570" translate="yes" xml:space="preserve">
          <source>Awaiting multiple events emitted on &lt;code&gt;process.nextTick()&lt;/code&gt;</source>
          <target state="translated">Awaiting multiple events emitted on &lt;code&gt;process.nextTick()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fb72a563299c6d5a3e07e89e022add61bdd6549" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is not rejected.</source>
          <target state="translated">기다리고 &lt;code&gt;asyncFn&lt;/code&gt; 의 약속이나, 경우 &lt;code&gt;asyncFn&lt;/code&gt; 이 함수는 즉시 함수를 호출하고 완전한에 반환 약속을 기다리고 있습니다. 그런 다음 약속이 거부되지 않았는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d138ce5c31c73160ab7311fdf77259757306f4a" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is rejected.</source>
          <target state="translated">기다리고 &lt;code&gt;asyncFn&lt;/code&gt; 의 약속이나, 경우 &lt;code&gt;asyncFn&lt;/code&gt; 이 함수는 즉시 함수를 호출하고 완전한에 반환 약속을 기다리고 있습니다. 그런 다음 약속이 거부되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="3f0851e07ee191f6c8c4aa05fb44f44b1c69f6c3" translate="yes" xml:space="preserve">
          <source>Back one character</source>
          <target state="translated">Back one character</target>
        </trans-unit>
        <trans-unit id="cc5d5adc34f5db46d8710f2cc01e8099b5d73ab0" translate="yes" xml:space="preserve">
          <source>Background colors</source>
          <target state="translated">Background colors</target>
        </trans-unit>
        <trans-unit id="88d130a66de8e5db01660642d9f23e1f0eef97dd" translate="yes" xml:space="preserve">
          <source>Backspace</source>
          <target state="translated">Backspace</target>
        </trans-unit>
        <trans-unit id="a4707f4e95ebcde082b4994eb1217fdc6dea792d" translate="yes" xml:space="preserve">
          <source>Bare specifier package resolution lookup through node_modules</source>
          <target state="translated">node_modules를 통한 베어 지정자 패키지 분석 조회</target>
        </trans-unit>
        <trans-unit id="e8598f5fd480081cb8142acf88d32f4177780530" translate="yes" xml:space="preserve">
          <source>Bare specifier resolutions are handled by the &lt;a href=&quot;#esm_resolver_algorithm_specification&quot;&gt;Node.js module resolution algorithm&lt;/a&gt;. All other specifier resolutions are always only resolved with the standard relative &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;URL&lt;/a&gt; resolution semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b433ea5c3c6467576319c5fbc52ef203bda84f" translate="yes" xml:space="preserve">
          <source>Bare specifiers, and the bare specifier portion of deep import specifiers, are strings; but everything else in a specifier is a URL.</source>
          <target state="translated">베어 지정자 및 깊은 가져 오기 지정자의 베어 지정자 부분은 문자열입니다. 그러나 지정자의 다른 모든 것은 URL입니다.</target>
        </trans-unit>
        <trans-unit id="23565a0ceba01f9ffe5b0dc7106e82f8b29f21cf" translate="yes" xml:space="preserve">
          <source>Based on the recommendations of &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131A&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131A&lt;/a&gt; 의 권장 사항을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="13280a7df8d3cffc696b26b23c5b717ddabf4d54" translate="yes" xml:space="preserve">
          <source>Basic N-API Data Types</source>
          <target state="translated">기본 N-API 데이터 유형</target>
        </trans-unit>
        <trans-unit id="79da5918337d66f317a8e0dced5fb16120e39c8c" translate="yes" xml:space="preserve">
          <source>Basic N-API data types</source>
          <target state="translated">Basic N-API data types</target>
        </trans-unit>
        <trans-unit id="0531950c357a602b86bea24e2ae4c86d1cdf0398" translate="yes" xml:space="preserve">
          <source>Be an N-API addon, or</source>
          <target state="translated">N-API 애드온이거나</target>
        </trans-unit>
        <trans-unit id="210405f699c0ae9511b9065687cdcbd88db13e20" translate="yes" xml:space="preserve">
          <source>Be aware that in the &lt;code&gt;repl&lt;/code&gt; the error message will be different to the one thrown in a file! See below for further details.</source>
          <target state="translated">에주의하십시오 &lt;code&gt;repl&lt;/code&gt; 오류 메시지가 파일에 던진 것과 다른 것입니다! 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86ef6349970d3f2c873fdffa2b201ee77e13d593" translate="yes" xml:space="preserve">
          <source>Be aware that modifying the value during the instance runtime may have unintended consequences if &lt;code&gt;rl.cursor&lt;/code&gt; is not also controlled.</source>
          <target state="translated">Be aware that modifying the value during the instance runtime may have unintended consequences if &lt;code&gt;rl.cursor&lt;/code&gt; is not also controlled.</target>
        </trans-unit>
        <trans-unit id="a0176b12890631168006259f0fec8076d0bcb6f7" translate="yes" xml:space="preserve">
          <source>Be aware that unless the child environment is explicitly set, this environment variable will be inherited by any child processes, and if they use OpenSSL, it may cause them to trust the same CAs as node.</source>
          <target state="translated">자식 환경이 명시 적으로 설정되어 있지 않으면이 환경 변수는 자식 프로세스에 의해 상속되며 OpenSSL을 사용하는 경우 노드와 동일한 CA를 신뢰할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6afc55c88fc97ff27bc08b6c490a5d05c14cd25" translate="yes" xml:space="preserve">
          <source>Be declared as context-aware using &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; as described above</source>
          <target state="translated">위에서 설명한 &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; 를 사용하여 컨텍스트 인식으로 선언</target>
        </trans-unit>
        <trans-unit id="f55a4443bed99d0be307da03b44f021cd62c58cd" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, each side should operate (and buffer) independently of the other.</source>
          <target state="translated">Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt; , each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, each side should operate (and buffer) independently of the other.</target>
        </trans-unit>
        <trans-unit id="8a4b3d89eb904333fb7d3756c67f2538d7f90ca9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, it is important for each side to operate (and buffer) independently of the other.</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 스트림은 &lt;code&gt;Readable&lt;/code&gt; 및 &lt;code&gt;Writable&lt;/code&gt; 스트림 이기 때문에 각각 읽기 및 쓰기 에 사용되는 &lt;em&gt;두 개의&lt;/em&gt; 개별 내부 버퍼를 유지 하므로 각 측이 서로 독립적으로 작동하면서 적절하고 효율적인 데이터 흐름을 유지할 수 있습니다. 예를 들어, &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 인스턴스는 &lt;code&gt;Readable&lt;/code&gt; &lt;code&gt;Writable&lt;/code&gt; 쪽 이 소켓 &lt;em&gt;에서&lt;/em&gt; 수신 &lt;em&gt;한&lt;/em&gt; 데이터 &lt;em&gt;를&lt;/em&gt; 사용할 수 있고 쓰기 가능한 쪽이 데이터 &lt;em&gt;를&lt;/em&gt; 쓸 수 있는 &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; 스트림입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;소켓. 데이터가 수신되는 것보다 더 빠르거나 느린 속도로 데이터가 소켓에 기록 될 수 있기 때문에, 양쪽이 서로 독립적으로 작동 (및 버퍼)하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="e43c36cf51a09fe109b357563f98d416ccca8572" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PerformanceObserver&lt;/code&gt; instances introduce their own additional performance overhead, instances should not be left subscribed to notifications indefinitely. Users should disconnect observers as soon as they are no longer needed.</source>
          <target state="translated">때문에 &lt;code&gt;PerformanceObserver&lt;/code&gt; 의 인스턴스가 자신의 추가 성능 오버 헤드를 도입, 인스턴스가 무기한 통지에 가입 왼쪽되어서는 안된다. 사용자는 더 이상 필요하지 않은 즉시 관찰자를 연결 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="ee71d7f7ec47191268617382ca43907ab99fd18f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;kill()&lt;/code&gt; attempts to gracefully disconnect the worker process, it is susceptible to waiting indefinitely for the disconnect to complete. For example, if the worker enters an infinite loop, a graceful disconnect will never occur. If the graceful disconnect behavior is not needed, use &lt;code&gt;worker.process.kill()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill()&lt;/code&gt; 은 작업자 프로세스를 정상적으로 연결 해제하려고 시도하기 때문에 연결 해제가 완료 될 때까지 무기한 대기 할 수 있습니다. 예를 들어 작업자가 무한 루프에 들어가면 정상적인 연결 해제가 발생하지 않습니다. 정상적인 연결 해제 동작이 필요하지 않으면 &lt;code&gt;worker.process.kill()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef790698716c7ee0f926d652933fd27ca728b2e9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;module&lt;/code&gt; provides a &lt;code&gt;filename&lt;/code&gt; property (normally equivalent to &lt;code&gt;__filename&lt;/code&gt;), the entry point of the current application can be obtained by checking &lt;code&gt;require.main.filename&lt;/code&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;module&lt;/code&gt; 제공 &lt;code&gt;filename&lt;/code&gt; 속성 (정상적으로 등가 &lt;code&gt;__filename&lt;/code&gt; 을 ), 현재 어플리케이션의 엔트리 포인트를 체크함으로써 획득 될 수 &lt;code&gt;require.main.filename&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="5b50eed8d664c34b92740bfba845ba13677a5bfc" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;nice&lt;/code&gt; values are Unix-specific, on Windows the &lt;code&gt;nice&lt;/code&gt; values of all processors are always 0.</source>
          <target state="translated">때문에 &lt;code&gt;nice&lt;/code&gt; 값은 유닉스 특정 윈도우에 &lt;code&gt;nice&lt;/code&gt; 모든 프로세서의 값은 0이 항상 있습니다.</target>
        </trans-unit>
        <trans-unit id="3936d9e027d4f7d849f82ddac675cb6b070b6236" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;server.listen()&lt;/code&gt; hands off most of the work to the master process, there are three cases where the behavior between a normal Node.js process and a cluster worker differs:</source>
          <target state="translated">때문에 &lt;code&gt;server.listen()&lt;/code&gt; 손 마스터 프로세스에 대한 대부분의 작업 오프 세 가지 경우가 어디 정상적인 Node.js를 공정하고 클러스터 작업자 다릅니다 사이의 행동 :</target>
        </trans-unit>
        <trans-unit id="cc143ffcb4d59a69f5c64c321bc5d4cc6f4da8fe" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;vm.runInThisContext()&lt;/code&gt; does not have access to the local scope, &lt;code&gt;localVar&lt;/code&gt; is unchanged. In contrast, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;does&lt;/em&gt; have access to the local scope, so the value &lt;code&gt;localVar&lt;/code&gt; is changed. In this way &lt;code&gt;vm.runInThisContext()&lt;/code&gt; is much like an &lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;indirect &lt;code&gt;eval()&lt;/code&gt; call&lt;/a&gt;, e.g. &lt;code&gt;(0,eval)('code')&lt;/code&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;vm.runInThisContext()&lt;/code&gt; 로컬 영역에 액세스 할 수없는, &lt;code&gt;localVar&lt;/code&gt; 변하지 않는다. 반대로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 은&lt;/em&gt; 로컬 범위에 액세스 할 수 있으므로 &lt;code&gt;localVar&lt;/code&gt; 값 이 변경됩니다. 이런 식으로 &lt;code&gt;vm.runInThisContext()&lt;/code&gt; 는 &lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;간접 &lt;code&gt;eval()&lt;/code&gt; 호출&lt;/a&gt; 과 매우 유사합니다 ( 예 : &lt;code&gt;(0,eval)('code')&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="a298b78360dc43f65882b92f932e420a9328bc04" translate="yes" xml:space="preserve">
          <source>Because JavaScript does not have support for multiple inheritance, the &lt;code&gt;stream.Duplex&lt;/code&gt; class is extended to implement a &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; stream (as opposed to extending the &lt;code&gt;stream.Readable&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;stream.Writable&lt;/code&gt; classes).</source>
          <target state="translated">자바 스크립트는 다중 상속을 지원하지 않기 때문에 &lt;code&gt;stream.Duplex&lt;/code&gt; 의 클래스는 구현하기 위해 확장 &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; (연장에 반대 스트림을 &lt;code&gt;stream.Readable&lt;/code&gt; &lt;em&gt;및 &lt;/em&gt; &lt;code&gt;stream.Writable&lt;/code&gt; 클래스).</target>
        </trans-unit>
        <trans-unit id="546b904dea8d2798ff45c5b75fddfad99233aef5" translate="yes" xml:space="preserve">
          <source>Because Node.js looks up the &lt;code&gt;realpath&lt;/code&gt; of any modules it loads (that is, it resolves symlinks) and then &lt;a href=&quot;#modules_loading_from_node_modules_folders&quot;&gt;looks for their dependencies in &lt;code&gt;node_modules&lt;/code&gt; folders&lt;/a&gt;, this situation can be resolved with the following architecture:</source>
          <target state="translated">Because Node.js looks up the &lt;code&gt;realpath&lt;/code&gt; of any modules it loads (that is, it resolves symlinks) and then &lt;a href=&quot;#modules_loading_from_node_modules_folders&quot;&gt;looks for their dependencies in &lt;code&gt;node_modules&lt;/code&gt; folders&lt;/a&gt;, this situation can be resolved with the following architecture:</target>
        </trans-unit>
        <trans-unit id="81b13c52658ca440c352bc51da120443fe5a4fc8" translate="yes" xml:space="preserve">
          <source>Because RSA public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">RSA 공개 키는 개인 키에서 파생 될 수 있으므로 공개 키 대신 개인 키가 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ac5a6d6dda6d588b0c5c357a8ed768499a1bccf" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="translated">libuv의 스레드 풀은 크기가 고정되어 있기 때문에 어떤 이유로 든 이러한 API가 오랜 시간이 걸리는 경우 libuv의 스레드 풀에서 실행되는 다른 (외관 적으로 관련되지 않은) API는 성능이 저하됩니다. 이 문제를 완화하기위한 한 가지 가능한 해결책은 &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; 환경 변수를 &lt;code&gt;4&lt;/code&gt; 보다 큰 값 (현재 기본값) 으로 설정하여 libuv의 스레드 풀 크기를 늘리는 것 입니다. 자세한 정보는 &lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv 스레드 풀 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4635926cf8d3813810bdf88fa8b84fa493e089d4" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;https://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="translated">Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;https://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f37f5b4a775883f5f6850c3e2e1562e198f6ea2" translate="yes" xml:space="preserve">
          <source>Because listeners are managed using an internal array, calling this will change the position indices of any listener registered &lt;em&gt;after&lt;/em&gt; the listener being removed. This will not impact the order in which listeners are called, but it means that any copies of the listener array as returned by the &lt;code&gt;emitter.listeners()&lt;/code&gt; method will need to be recreated.</source>
          <target state="translated">리스너는 내부 배열을 사용하여 관리되므로이를 호출 하면 리스너를 제거한 &lt;em&gt;후&lt;/em&gt; 등록 &lt;em&gt;된&lt;/em&gt; 리스너의 위치 인덱스가 변경 됩니다. 이것은 리스너가 호출되는 순서에 영향을 미치지 않지만 &lt;code&gt;emitter.listeners()&lt;/code&gt; 메소드가 리턴 한 리스너 배열의 사본을 다시 작성해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="849a766d1b140b80f9c44a7ca0d9d61ba5900944" translate="yes" xml:space="preserve">
          <source>Because long living server connections may block workers from disconnecting, it may be useful to send a message, so application specific actions may be taken to close them. It also may be useful to implement a timeout, killing a worker if the &lt;code&gt;'disconnect'&lt;/code&gt; event has not been emitted after some time.</source>
          <target state="translated">오래 지속되는 서버 연결로 인해 작업자의 연결이 끊어 질 수 있으므로 메시지를 보내는 것이 유용 할 수 있으므로 응용 프로그램 별 작업을 수행하여 닫을 수 있습니다. 일정 시간이 지난 후 &lt;code&gt;'disconnect'&lt;/code&gt; 이벤트가 생성되지 않으면 시간 초과를 구현하여 작업자를 종료시키는 것도 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7456de8b5ba506390ade664594484a04a7cc299" translate="yes" xml:space="preserve">
          <source>Because of the internal mechanics of how the &lt;code&gt;process.nextTick()&lt;/code&gt; queue and the microtask queue that underlies Promises are implemented within V8 and Node.js, it is possible for code running within a context to &quot;escape&quot; the &lt;code&gt;timeout&lt;/code&gt; set using &lt;code&gt;vm.runInContext()&lt;/code&gt;, &lt;code&gt;vm.runInNewContext()&lt;/code&gt;, and &lt;code&gt;vm.runInThisContext()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;process.nextTick()&lt;/code&gt; 큐와 약속의 기반이되는 마이크로 태스크 큐가 V8 및 Node.js 내에서 구현되는 방식의 내부 메커니즘으로 인해 컨텍스트 내에서 실행되는 코드가 &lt;code&gt;vm.runInContext()&lt;/code&gt; 사용하여 설정된 &lt;code&gt;timeout&lt;/code&gt; 를 &quot;탈출&quot;할 수 있습니다. () , &lt;code&gt;vm.runInNewContext()&lt;/code&gt; 및 &lt;code&gt;vm.runInThisContext()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4366452e42133138d37a810cef33032932211dc3" translate="yes" xml:space="preserve">
          <source>Because of the need for standard compliance, this method does not allow users to customize the serialization process of the URL. For more flexibility, &lt;a href=&quot;#url_url_format_url_options&quot;&gt;&lt;code&gt;require('url').format()&lt;/code&gt;&lt;/a&gt; method might be of interest.</source>
          <target state="translated">표준 준수가 필요하기 때문에이 방법을 사용하면 사용자가 URL의 직렬화 프로세스를 사용자 정의 할 수 없습니다. 유연성을 높이 &lt;a href=&quot;#url_url_format_url_options&quot;&gt; &lt;code&gt;require('url').format()&lt;/code&gt; &lt;/a&gt; 메소드가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60997f539863f89d6061a5995c36fb4628070f39" translate="yes" xml:space="preserve">
          <source>Because of the specific serialization and processing requirements imposed by the HTTP/2 protocol, it is not recommended for user code to read data from or write data to a &lt;code&gt;Socket&lt;/code&gt; instance bound to a &lt;code&gt;Http2Session&lt;/code&gt;. Doing so can put the HTTP/2 session into an indeterminate state causing the session and the socket to become unusable.</source>
          <target state="translated">HTTP / 2 프로토콜에 의해 부과 된 특정 직렬화 및 처리 요구 사항으로 인해 사용자 코드가 &lt;code&gt;Http2Session&lt;/code&gt; 에 바인드 된 &lt;code&gt;Socket&lt;/code&gt; 인스턴스 에서 데이터를 읽거나 쓰는 것은 권장되지 않습니다 . 그렇게하면 HTTP / 2 세션이 불확실한 상태가되어 세션과 소켓을 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="691e395104f8dc313bf0ef893e4c24f4eaba778d" translate="yes" xml:space="preserve">
          <source>Because printing to the console is an asynchronous operation, &lt;code&gt;console.log()&lt;/code&gt; will cause the AsyncHooks callbacks to be called. Using &lt;code&gt;console.log()&lt;/code&gt; or similar asynchronous operations inside an AsyncHooks callback function will thus cause an infinite recursion. An easy solution to this when debugging is to use a synchronous logging operation such as &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt;. This will print to the file and will not invoke AsyncHooks recursively because it is synchronous.</source>
          <target state="translated">콘솔로의 인쇄는 비동기 작업이므로 &lt;code&gt;console.log()&lt;/code&gt; 는 AsyncHooks 콜백을 호출하게합니다. 사용 &lt;code&gt;console.log()&lt;/code&gt; AsyncHooks 콜백 함수 내부 또는 유사한 비동기 동작은 따라서 무한 순환을 야기한다. 디버깅 할 때이를위한 쉬운 해결책은 &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt; 와 같은 동기 로깅 작업을 사용하는 것 입니다. 그러면 파일로 인쇄되고 동기식이므로 AsyncHooks를 재귀 적으로 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86bb2b19e31fabe9224782de43b7a53fdd55cf16" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">공개 키는 개인 키에서 파생 될 수 있으므로 공개 키 대신 개인 키가 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="302ca8c64322bc742ed684aba5f1bdb2293fb035" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key. In that case, this function behaves as if &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt; had been called, except that the type of the returned &lt;code&gt;KeyObject&lt;/code&gt; will be &lt;code&gt;'public'&lt;/code&gt; and that the private key cannot be extracted from the returned &lt;code&gt;KeyObject&lt;/code&gt;. Similarly, if a &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'private'&lt;/code&gt; is given, a new &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'public'&lt;/code&gt; will be returned and it will be impossible to extract the private key from the returned object.</source>
          <target state="translated">공개 키는 개인 키에서 파생 될 수 있으므로 공개 키 대신 개인 키가 전달 될 수 있습니다. 이 경우,이 함수의 동작합니다는 것처럼 &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; 반환의 유형 것을 제외하고, 부름받은 &lt;code&gt;KeyObject&lt;/code&gt; 이 될 것 &lt;code&gt;'public'&lt;/code&gt; 와 개인 키를 반환에서 추출 할 수 없음을 &lt;code&gt;KeyObject&lt;/code&gt; . 마찬가지로 &lt;code&gt;'private'&lt;/code&gt; 유형 의 &lt;code&gt;KeyObject&lt;/code&gt; 가 제공되면 &lt;code&gt;'public'&lt;/code&gt; 유형 의 새 &lt;code&gt;KeyObject&lt;/code&gt; 가 리턴되며 리턴 된 오브젝트에서 개인 키를 추출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="05ecf9b2eaee27ff7c7a9da7750dcabd7d10fe69" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key or a public key may be passed for &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">공개 키는 개인 키에서 파생 될 수 있으므로 개인 키 또는 공개 키가 &lt;code&gt;key&lt;/code&gt; 에 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="751d641184d0abb77bddb3c071ae868de829e68a" translate="yes" xml:space="preserve">
          <source>Because the Euro (&lt;code&gt;&amp;euro;&lt;/code&gt;) sign is not representable in US-ASCII, it is replaced with &lt;code&gt;?&lt;/code&gt; in the transcoded &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">US-ASCII에서는 유로 ( &lt;code&gt;&amp;euro;&lt;/code&gt; ) 부호를 표시 할 수 없으므로 &lt;code&gt;?&lt;/code&gt; 로 대체됩니다 . 트랜스 코딩 된 &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc43de7f332dadbf8e964b31bf82337c42ae6a98" translate="yes" xml:space="preserve">
          <source>Because the behavior of &lt;code&gt;new Buffer()&lt;/code&gt; is different depending on the type of the first argument, security and reliability issues can be inadvertently introduced into applications when argument validation or &lt;code&gt;Buffer&lt;/code&gt; initialization is not performed.</source>
          <target state="translated">&lt;code&gt;new Buffer()&lt;/code&gt; 의 동작은 첫 번째 인수의 유형에 따라 다르므로 인수 유효성 검사 또는 &lt;code&gt;Buffer&lt;/code&gt; 초기화를 수행하지 않으면 응용 프로그램에 보안 및 안정성 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b80ae2aab5463a2451e9e29994ea910f7cbfd3b" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled Addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), Addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="translated">컴파일 된 애드온 바이너리의 정확한 경로는 컴파일 된 방법에 따라 다를 수 있으므로 (예 : &lt;code&gt;./build/Debug/&lt;/code&gt; 에 있을 수 있음 ) 애드온은 &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;바인딩&lt;/a&gt; 패키지를 사용하여 컴파일 된 모듈을로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="759e7b279652e8b338737a67f94ca404ef31de24" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="translated">Because the exact path to the compiled addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt; ), addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</target>
        </trans-unit>
        <trans-unit id="77cc991b23ecd38f07e239dd8449b89a8d820bd3" translate="yes" xml:space="preserve">
          <source>Because the object cloning uses the structured clone algorithm, non-enumerable properties, property accessors, and object prototypes are not preserved. In particular, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; objects are read as plain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;s on the receiving side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960d327e7a558fd7889ffc561ca8765449c5ca4e" translate="yes" xml:space="preserve">
          <source>Because the object cloning uses the structured clone algorithm, non-enumerable properties, property accessors, and object prototypes are not preserved. In particular, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; objects will be read as plain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;s on the receiving side.</source>
          <target state="translated">개체 복제는 구조화 된 복제 알고리즘을 사용하므로 열거 할 수없는 속성, 속성 접근 자 및 개체 프로토 타입이 유지되지 않습니다. 특히, &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 객체는 수신 측에서 일반 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt; 로 읽 힙니다 .</target>
        </trans-unit>
        <trans-unit id="c809abbc25168196481673be96fe4617efa899b1" translate="yes" xml:space="preserve">
          <source>Because using Node.js as an embedded library is different from writing code that is executed by Node.js, breaking changes do not follow typical Node.js &lt;a href=&quot;deprecations&quot;&gt;deprecation policy&lt;/a&gt; and may occur on each semver-major release without prior warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a2ae3e203e98e6708ca3bfd5ea9f78d0b7445b" translate="yes" xml:space="preserve">
          <source>Because workers are all separate processes, they can be killed or re-spawned depending on a program's needs, without affecting other workers. As long as there are some workers still alive, the server will continue to accept connections. If no workers are alive, existing connections will be dropped and new connections will be refused. Node.js does not automatically manage the number of workers, however. It is the application's responsibility to manage the worker pool based on its own needs.</source>
          <target state="translated">작업자는 모두 별도의 프로세스이므로 프로그램의 필요에 따라 다른 작업자에게 영향을 미치지 않으면 서 죽이거나 다시 생성 될 수 있습니다. 일부 작업자가 여전히 존재하는 한 서버는 계속 연결을 수락합니다. 작업자가 살아 있지 않으면 기존 연결이 끊어지고 새 연결이 거부됩니다. 그러나 Node.js는 자동으로 작업자 수를 관리하지 않습니다. 자체 요구에 따라 작업자 풀을 관리하는 것은 응용 프로그램의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="9d8251ebd1fcaa7d77c2d759766cc9c3e0380b63" translate="yes" xml:space="preserve">
          <source>Becomes &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event is emitted.</source>
          <target state="translated">이되다 &lt;code&gt;true&lt;/code&gt; 때 &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; 이벤트가 방출된다.</target>
        </trans-unit>
        <trans-unit id="aa8f810adb45fb720b0fea2ba6a9771faf5aa1f3" translate="yes" xml:space="preserve">
          <source>Before Node.js v6.0, this event emitted only the message and the handle, but not the worker object, contrary to what the documentation stated.</source>
          <target state="translated">Node.js v6.0 이전에는이 ​​이벤트가 문서에서 언급 한 내용과 반대로 메시지와 핸들 만 생성했지만 작업자 객체는 생성하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="1862072372d6d10bc19cd20b5f8c5559cb8e3e70" translate="yes" xml:space="preserve">
          <source>Before a module's code is executed, Node.js will wrap it with a function wrapper that looks like the following:</source>
          <target state="translated">모듈의 코드가 실행되기 전에 Node.js는 다음과 같은 함수 래퍼로 모듈을 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="41bb78145d0565f365c7b6b9c35f60d0fb4fa10a" translate="yes" xml:space="preserve">
          <source>Before subpath patterns were supported, a trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; suffix was used to support folder mappings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f998e665a4896197d04f48db4a8da278e7a7df50" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; will print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Node.js v11.0.0부터 &lt;code&gt;digest&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 설정된 상태에서 이러한 함수를 호출 하면 &lt;code&gt;digest&lt;/code&gt; 가 &lt;code&gt;undefined&lt;/code&gt; 경우 동작에 맞게 사용 중단 경고가 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d1aeaaf9c43a9bd8c9a9ab58576019610bafd74" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; would print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; would print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fec9c063123448f52f9f22268436ea2142f1907a" translate="yes" xml:space="preserve">
          <source>Begins a graceful close of the &lt;code&gt;QuicSession&lt;/code&gt;. Existing &lt;code&gt;QuicStream&lt;/code&gt; instances will be permitted to close naturally. New &lt;code&gt;QuicStream&lt;/code&gt; instances will not be permitted. Once all &lt;code&gt;QuicStream&lt;/code&gt; instances have closed, the &lt;code&gt;QuicSession&lt;/code&gt; instance will be destroyed. Returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved once the &lt;code&gt;QuicSession&lt;/code&gt; instance is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0d66b8d04e6d1cb2aa6cafcc5829a375657d21" translate="yes" xml:space="preserve">
          <source>Below is an example that resolves &lt;code&gt;'archive.org'&lt;/code&gt; then reverse resolves the IP addresses that are returned.</source>
          <target state="translated">아래는 &lt;code&gt;'archive.org'&lt;/code&gt; 를 확인한 다음 반환 된 IP 주소를 역 으로 확인하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="72e3c3bc48b16a53304db10d8a9c608f131d7315" translate="yes" xml:space="preserve">
          <source>Below we give a suggested directory structure that could work:</source>
          <target state="translated">다음은 작동 할 수있는 제안 된 디렉토리 구조입니다.</target>
        </trans-unit>
        <trans-unit id="11b7e6e8c6eb35d20df4fedefc372c1c039a0fe1" translate="yes" xml:space="preserve">
          <source>Below, &lt;code&gt;bar.js&lt;/code&gt; makes use of the &lt;code&gt;square&lt;/code&gt; module, which exports a Square class:</source>
          <target state="translated">아래 &lt;code&gt;bar.js&lt;/code&gt; 는 &lt;code&gt;square&lt;/code&gt; 클래스를 내보내는 square 모듈을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="17a245da23b3bed21115eda617d0db2f2984f389" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt;&lt;code&gt;assert.doesNotThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">완료를 기다리는 비동기 특성 외에도 &lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt; &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; &lt;/a&gt; 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a45abf14381a4bb6f946b2d0bd65a076aa40ecf7" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt;&lt;code&gt;assert.throws()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">완료를 기다리는 비동기 특성 외에도 &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt; &lt;code&gt;assert.throws()&lt;/code&gt; &lt;/a&gt; 동일하게 작동합니다. .</target>
        </trans-unit>
        <trans-unit id="104fb1cb9588bb03abf68534a3546fd1945904e8" translate="yes" xml:space="preserve">
          <source>Binding the inspector to a public IP (including &lt;code&gt;0.0.0.0&lt;/code&gt;) with an open port is insecure, as it allows external hosts to connect to the inspector and perform a &lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;remote code execution&lt;/a&gt; attack.</source>
          <target state="translated">개방형 포트 를 사용하여 검사기를 공개 IP ( &lt;code&gt;0.0.0.0&lt;/code&gt; 포함 )에 바인딩 하면 외부 호스트가 검사기에 연결하고 &lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;원격 코드 실행을&lt;/a&gt; 수행 할 수 있으므로 안전하지 않습니다. 공격을 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d04651c15619bd502ea565ddb6f909183a8a8eb" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;QuicEndpoint&lt;/code&gt; if it has not already been bound. User code will not typically be responsible for binding a &lt;code&gt;QuicEndpoint&lt;/code&gt; as the owning &lt;code&gt;QuicSocket&lt;/code&gt; will do that automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81151afeaca845d1c118c9e281d98d7d9aa8cc" translate="yes" xml:space="preserve">
          <source>Binds the given function to execute to this &lt;code&gt;AsyncResource&lt;/code&gt;'s scope.</source>
          <target state="translated">Binds the given function to execute to this &lt;code&gt;AsyncResource&lt;/code&gt; 's scope.</target>
        </trans-unit>
        <trans-unit id="5fd1d1ed2272fbc2405065c2720c1f4ba4bcd1e3" translate="yes" xml:space="preserve">
          <source>Binds the given function to the current execution context.</source>
          <target state="translated">Binds the given function to the current execution context.</target>
        </trans-unit>
        <trans-unit id="f8c050254283d9f51e63070acdc4fe2abff851c1" translate="yes" xml:space="preserve">
          <source>Bit mask used to extract the file type code.</source>
          <target state="translated">파일 유형 코드를 추출하는 데 사용되는 비트 마스크.</target>
        </trans-unit>
        <trans-unit id="38ca86f6b20a1c3f7445af772467122bf0798bbd" translate="yes" xml:space="preserve">
          <source>Blocking calls like these are mostly useful for simplifying general-purpose scripting tasks and for simplifying the loading/processing of application configuration at startup.</source>
          <target state="translated">이와 같은 호출 차단은 주로 범용 스크립팅 작업을 단순화하고 시작시 응용 프로그램 구성의로드 / 처리를 단순화하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e49e46f83817ae076662a9e1ac7de55763706d82" translate="yes" xml:space="preserve">
          <source>Blocks until a client (existing or connected later) has sent &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; command.</source>
          <target state="translated">클라이언트가 존재하거나 나중에 연결될 때까지 &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; 명령 을 보낼 때까지 차단 합니다.</target>
        </trans-unit>
        <trans-unit id="d1dce5d4ec8a3cc9860ad75df035f434cb66662f" translate="yes" xml:space="preserve">
          <source>Boolean (read-only). True if headers were sent, false otherwise.</source>
          <target state="translated">부울 (읽기 전용). 헤더가 전송되면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="76723148e1cbee2a4ed22f5975c62c431496c11c" translate="yes" xml:space="preserve">
          <source>Boolean flag enabling &amp;ldquo;Large Window Brotli&amp;rdquo; mode (not compatible with the Brotli format as standardized in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932&lt;/a&gt;).</source>
          <target state="translated">&quot;대형 창 Brotli&quot;모드를 활성화하는 부울 플래그 ( &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932&lt;/a&gt; 에서 표준화 된 Brotli 형식과 호환되지 않음) ).</target>
        </trans-unit>
        <trans-unit id="f451a245fcf06000ff5387581d65d298c952f303" translate="yes" xml:space="preserve">
          <source>Boolean flag that affects internal memory allocation patterns.</source>
          <target state="translated">내부 메모리 할당 패턴에 영향을주는 부울 플래그.</target>
        </trans-unit>
        <trans-unit id="3a42a4932b1e3f92c12fd5ce48d4cc1f4d19e1b3" translate="yes" xml:space="preserve">
          <source>Boolean flag that decreases compression ratio in favour of decompression speed.</source>
          <target state="translated">압축 해제 속도를 위해 압축 비율을 낮추는 부울 플래그.</target>
        </trans-unit>
        <trans-unit id="92d4f753ad73b5c861d36157e9f3f2578a9cdcf2" translate="yes" xml:space="preserve">
          <source>Boolean value that indicates whether the response has completed. Starts as &lt;code&gt;false&lt;/code&gt;. After &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; executes, the value will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">응답이 완료되었는지 여부를 나타내는 부울 값입니다. &lt;code&gt;false&lt;/code&gt; 로 시작합니다 . &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; 실행 된 후 값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cf2822adc71f67075195db6338c46e0cce22a6a1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams use the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; API in various ways to communicate the current state of the stream.</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 및 읽기 가능 스트림은 모두 다양한 방식으로 &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; API를 사용하여 스트림 의 현재 상태를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="92e8067b8a9edf1e60f4288801983d6541113def" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams will store data in an internal buffer that can be retrieved using &lt;code&gt;writable.writableBuffer&lt;/code&gt; or &lt;code&gt;readable.readableBuffer&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 및 읽기 가능 스트림은 모두 &lt;code&gt;writable.writableBuffer&lt;/code&gt; 또는 &lt;code&gt;readable.readableBuffer&lt;/code&gt; 를 사용하여 검색 할 수있는 내부 버퍼에 데이터를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="bbec51338c60c845af43267d174e455dc0392770" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;breakEvalOnSigint&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; options were set in the &lt;a href=&quot;repl&quot;&gt;&lt;code&gt;REPL&lt;/code&gt;&lt;/a&gt; config, which is not supported.</source>
          <target state="translated">&lt;code&gt;breakEvalOnSigint&lt;/code&gt; 및 &lt;code&gt;eval&lt;/code&gt; 옵션은 모두 &lt;a href=&quot;repl&quot;&gt; &lt;code&gt;REPL&lt;/code&gt; &lt;/a&gt; 구성 에서 설정되었으며 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="467b46157dc7c87e9e6bbd48b726836714d3c38a" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;utilization1&lt;/code&gt; and &lt;code&gt;utilization2&lt;/code&gt; are optional parameters.</source>
          <target state="translated">Both &lt;code&gt;utilization1&lt;/code&gt; and &lt;code&gt;utilization2&lt;/code&gt; are optional parameters.</target>
        </trans-unit>
        <trans-unit id="a948f8e347862760ffc1a502a3aebe8d17c52726" translate="yes" xml:space="preserve">
          <source>Both session identifiers and session tickets timeout, causing the server to create new sessions. The timeout can be configured with the &lt;code&gt;sessionTimeout&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt;&lt;code&gt;tls.createServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세션 식별자와 세션 티켓이 시간 초과되어 서버가 새 세션을 만듭니다. 제한 시간 은 &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt; &lt;code&gt;tls.createServer()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;sessionTimeout&lt;/code&gt; 옵션 으로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a10e9245332d2b98b4eb83e0a5e55107c7a90735" translate="yes" xml:space="preserve">
          <source>Both the tools listed here require that &lt;em&gt;users&lt;/em&gt; of the native addon have a C/C++ toolchain installed in order to successfully install the native addon.</source>
          <target state="translated">Both the tools listed here require that &lt;em&gt;users&lt;/em&gt; of the native addon have a C/C++ toolchain installed in order to successfully install the native addon.</target>
        </trans-unit>
        <trans-unit id="7c9d6bf311ebf7df595c65a8f4924a3b8d06c104" translate="yes" xml:space="preserve">
          <source>Break</source>
          <target state="translated">Break</target>
        </trans-unit>
        <trans-unit id="b99eb128fc73ee445a8e902924f23b26a340df57" translate="yes" xml:space="preserve">
          <source>Breaking changes to the API are expected in a future major release.</source>
          <target state="translated">향후 주요 릴리스에서는 API의 주요 변경 사항이 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="0770db595a77f58797f867ec2524689f875b8bc6" translate="yes" xml:space="preserve">
          <source>Broadcasts a datagram on the socket. For connectionless sockets, the destination &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; must be specified. Connected sockets, on the other hand, will use their associated remote endpoint, so the &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; arguments must not be set.</source>
          <target state="translated">소켓에서 데이터 그램을 브로드 캐스트합니다. 비 연결 소켓의 경우 대상 &lt;code&gt;port&lt;/code&gt; 및 &lt;code&gt;address&lt;/code&gt; 를 지정해야합니다. 반면에 연결된 소켓은 연결된 원격 엔드 포인트를 사용하므로 &lt;code&gt;port&lt;/code&gt; 및 &lt;code&gt;address&lt;/code&gt; 인수를 설정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="4e011f868d39eb819acc8009c284479fbc5351d2" translate="yes" xml:space="preserve">
          <source>Brotli constants</source>
          <target state="translated">Brotli 상수</target>
        </trans-unit>
        <trans-unit id="e35a1d0137590ab6558bd54fa26cadd2e3428d43" translate="yes" xml:space="preserve">
          <source>BrotliOptions</source>
          <target state="translated">BrotliOptions</target>
        </trans-unit>
        <trans-unit id="0e4985a83b4840ac6d361b21c082a700081c8d07" translate="yes" xml:space="preserve">
          <source>Browser-compatible &lt;code&gt;URL&lt;/code&gt; class, implemented by following the WHATWG URL Standard. &lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;Examples of parsed URLs&lt;/a&gt; may be found in the Standard itself. The &lt;code&gt;URL&lt;/code&gt; class is also available on the global object.</source>
          <target state="translated">WHATWG URL 표준에 따라 구현 된 브라우저 호환 &lt;code&gt;URL&lt;/code&gt; 클래스 &lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;구문 분석 된 URL의 예는&lt;/a&gt; 표준 자체에서 찾을 수 있습니다. &lt;code&gt;URL&lt;/code&gt; 의 클래스는 전역 객체로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="12e4f799634fb783b669c5f1d00234c89318acee" translate="yes" xml:space="preserve">
          <source>Buffer Constants</source>
          <target state="translated">버퍼 상수</target>
        </trans-unit>
        <trans-unit id="82e181c0c578cd6d80093a33c015125682729194" translate="yes" xml:space="preserve">
          <source>Buffer constants</source>
          <target state="translated">Buffer constants</target>
        </trans-unit>
        <trans-unit id="23dd82d623fb976c8b655f70d02fd824c2106844" translate="yes" xml:space="preserve">
          <source>Buffering</source>
          <target state="translated">Buffering</target>
        </trans-unit>
        <trans-unit id="80ec43af70811a5e711008f27e40e58380191823" translate="yes" xml:space="preserve">
          <source>Buffers and Character Encodings</source>
          <target state="translated">버퍼 및 문자 인코딩</target>
        </trans-unit>
        <trans-unit id="8d8051eed2cbf5d235babea08ddbf266827a3a5d" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArray</source>
          <target state="translated">버퍼와 타입 배열</target>
        </trans-unit>
        <trans-unit id="5af599f7836089ac79e0a63070c6a49a67056538" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArrays</source>
          <target state="translated">Buffers and TypedArrays</target>
        </trans-unit>
        <trans-unit id="b2fad64d18909a0efd248e0d86afff8fd51a2cce" translate="yes" xml:space="preserve">
          <source>Buffers and character encodings</source>
          <target state="translated">Buffers and character encodings</target>
        </trans-unit>
        <trans-unit id="e5720d067f317b23fcf4f1282e5377ded87d7b40" translate="yes" xml:space="preserve">
          <source>Buffers and iteration</source>
          <target state="translated">버퍼와 반복</target>
        </trans-unit>
        <trans-unit id="2764e7dc64a6afa8f6572a70be9cc2ef88d207b2" translate="yes" xml:space="preserve">
          <source>Build tools</source>
          <target state="translated">빌드 도구</target>
        </trans-unit>
        <trans-unit id="6c3e65ffe7f20f69532c70292e8fe02a0ac31970" translate="yes" xml:space="preserve">
          <source>Build with a pre-installed ICU (&lt;code&gt;system-icu&lt;/code&gt;)</source>
          <target state="translated">사전 설치된 ICU ( &lt;code&gt;system-icu&lt;/code&gt; )로 빌드</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="9bcc2b6605f2f44e32f3bbfe699d332c866107ee" translate="yes" xml:space="preserve">
          <source>Built-in libraries are now available as predefined variables.</source>
          <target state="translated">내장 라이브러리는 이제 사전 정의 된 변수로 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="50db02894a4e9938cec795aa1e98dc847d42a037" translate="yes" xml:space="preserve">
          <source>Builtin modules</source>
          <target state="translated">내장 모듈</target>
        </trans-unit>
        <trans-unit id="fb4ef6d1d8f93b1f5e0dce50d53bb7dc4546a3d7" translate="yes" xml:space="preserve">
          <source>Builtin modules will provide named exports of their public API, as well as a default export which can be used for, among other things, modifying the named exports. Named exports of builtin modules are updated when the corresponding exports property is accessed, redefined, or deleted.</source>
          <target state="translated">내장 모듈은 공개 API의 명명 된 내보내기뿐만 아니라 명명 된 내보내기를 수정하는 데 사용할 수있는 기본 내보내기를 제공합니다. 내장 모듈의 명명 된 내보내기는 해당 내보내기 속성에 액세스, 재정의 또는 삭제할 때 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="6cc4d8aacb34c43335f1e66ea99bef9e07fbcadb" translate="yes" xml:space="preserve">
          <source>By default (&lt;code&gt;allowHalfOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;) the socket will send a FIN packet back and destroy its file descriptor once it has written out its pending write queue. However, if &lt;code&gt;allowHalfOpen&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the socket will not automatically &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; its writable side, allowing the user to write arbitrary amounts of data. The user must call &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; explicitly to close the connection (i.e. sending a FIN packet back).</source>
          <target state="translated">기본적으로 ( &lt;code&gt;allowHalfOpen&lt;/code&gt; 은 &lt;code&gt;false&lt;/code&gt; ) 소켓은 FIN 패킷을 다시 보내고 보류중인 쓰기 큐를 작성한 후 파일 디스크립터를 파기합니다. 그러나 &lt;code&gt;allowHalfOpen&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 소켓은 쓰기 가능한면을 자동으로 &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 하지 않으므로 사용자가 임의의 양의 데이터를 쓸 수 있습니다. 사용자는 전화해야합니다&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt;연결을 닫으려면 end ()를 명시 적으로(예 : FIN 패킷을 다시 전송).</target>
        </trans-unit>
        <trans-unit id="11ee0c95f68c87a49aaea054c734f0756de04a7a" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. Obviously, not all events should be limited to just 10 listeners. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="translated">기본적으로 &lt;code&gt;EventEmitter&lt;/code&gt; 는 특정 이벤트에 대해 리스너가 &lt;code&gt;10&lt;/code&gt; 개 이상 추가 되면 경고를 인쇄합니다 . 이것은 메모리 누수를 찾는 데 도움이되는 유용한 기본값입니다. 분명히, 모든 이벤트가 10 명의 청취자로 제한되는 것은 아닙니다. &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; 방법은 제한이 허용 된 특정 위해 수정 될 &lt;code&gt;EventEmitter&lt;/code&gt; 의 인스턴스. 리스너를 무제한으로 표시 하기 위해 값을 &lt;code&gt;Infinity&lt;/code&gt; (또는 &lt;code&gt;0&lt;/code&gt; )로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b34a6ead15624e8cbe54d0ff3b87b9f3f9e521d4" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="translated">By default &lt;code&gt;EventEmitter&lt;/code&gt; s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt; ) to indicate an unlimited number of listeners.</target>
        </trans-unit>
        <trans-unit id="202557f7f915841f681d6b58d74b773f875d4053" translate="yes" xml:space="preserve">
          <source>By default all unhandled rejections trigger a warning plus a deprecation warning for the very first unhandled rejection in case no &lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt;&lt;code&gt;unhandledRejection&lt;/code&gt;&lt;/a&gt; hook is used.</source>
          <target state="translated">기본적으로 모든 처리되지 않은 거부는 처리되지 않은 거부 후크가 사용 &lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt; &lt;code&gt;unhandledRejection&lt;/code&gt; &lt;/a&gt; 경우 첫 번째 처리되지 않은 거부에 대해 경고와 사용 중단 경고를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="2ca914c407c4d158688627fe49d3c90e1428e782" translate="yes" xml:space="preserve">
          <source>By default inspector websocket url is available in stderr and under &lt;code&gt;/json/list&lt;/code&gt; endpoint on &lt;code&gt;http://host:port/json/list&lt;/code&gt;.</source>
          <target state="translated">기본적으로 관리자 웹 소켓 URL은 stderr 및 &lt;code&gt;/json/list&lt;/code&gt; endpoint의 &lt;code&gt;http://host:port/json/list&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="5f91080334739e3155e81d4196ebb3f760a35023" translate="yes" xml:space="preserve">
          <source>By default set to 256. For agents with &lt;code&gt;keepAlive&lt;/code&gt; enabled, this sets the maximum number of sockets that will be left open in the free state.</source>
          <target state="translated">기본적으로 256으로 설정됩니다. &lt;code&gt;keepAlive&lt;/code&gt; 가있는 에이전트의 경우 활성화 된 , 사용 가능 상태에서 열린 채로있을 최대 소켓 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b65d1a50bed16c68390d90247b5f954900e6c6a4" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open per origin. Origin is the returned value of &lt;a href=&quot;#http_agent_getname_options&quot;&gt;&lt;code&gt;agent.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;Infinity&lt;/code&gt; 로 설정됩니다 . 에이전트가 원 점당 열 수있는 동시 소켓 수를 결정합니다. origin은 &lt;a href=&quot;#http_agent_getname_options&quot;&gt; &lt;code&gt;agent.getName()&lt;/code&gt; &lt;/a&gt; 의 리턴 값입니다 .</target>
        </trans-unit>
        <trans-unit id="90f3e115759bbe74d2057679e11974ae269546a8" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open. Unlike &lt;code&gt;maxSockets&lt;/code&gt;, this parameter applies across all origins.</source>
          <target state="translated">By default set to &lt;code&gt;Infinity&lt;/code&gt; . Determines how many concurrent sockets the agent can have open. Unlike &lt;code&gt;maxSockets&lt;/code&gt; , this parameter applies across all origins.</target>
        </trans-unit>
        <trans-unit id="28813e2e7dfe7803dcf71ad39048b5aacd0e60af" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;node.async_hooks&lt;/code&gt;, and &lt;code&gt;v8&lt;/code&gt; categories are enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;node.async_hooks&lt;/code&gt; 및 &lt;code&gt;v8&lt;/code&gt; 카테고리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d63f54a664f33273ebb1fe71197458ae8fa1d6cb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instances format output using the &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; method before writing the output to the provided &lt;code&gt;Writable&lt;/code&gt; stream (&lt;code&gt;process.stdout&lt;/code&gt; by default). The &lt;code&gt;showProxy&lt;/code&gt; inspection option is set to true by default and the &lt;code&gt;colors&lt;/code&gt; option is set to true depending on the REPL's &lt;code&gt;useColors&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; 인스턴스 는 출력을 제공된 &lt;code&gt;Writable&lt;/code&gt; 스트림 ( 기본적으로 &lt;code&gt;process.stdout&lt;/code&gt; ) 에 쓰기 전에 &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 출력을 형식화합니다 . &lt;code&gt;showProxy&lt;/code&gt; 의 검사 옵션은 기본적으로 true로 설정하고 &lt;code&gt;colors&lt;/code&gt; REPL 년대에 따라 옵션이 true로 설정되어 &lt;code&gt;useColors&lt;/code&gt; 의 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="8bf222e54eb55d9b78ad98ea0087d0727c9eb2bb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.end()&lt;/code&gt;&lt;/a&gt; is called on the destination &lt;code&gt;Writable&lt;/code&gt; stream when the source &lt;code&gt;Readable&lt;/code&gt; stream emits &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt;, so that the destination is no longer writable. To disable this default behavior, the &lt;code&gt;end&lt;/code&gt; option can be passed as &lt;code&gt;false&lt;/code&gt;, causing the destination stream to remain open:</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.end()&lt;/code&gt; &lt;/a&gt; 는 소스 &lt;code&gt;Readable&lt;/code&gt; 스트림이 &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; 를&lt;/a&gt; 방출 할 때 대상 &lt;code&gt;Writable&lt;/code&gt; 스트림 에서 호출 되므로 대상이 더 이상 쓰기 가능하지 않습니다. 이 기본 동작을 비활성화하려면 &lt;code&gt;end&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 전달 하면 대상 스트림이 열린 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0cfb62c9e90d2b1c492b84ce0e3e9f6be5a1b1f1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;child_process.fork()&lt;/code&gt; will spawn new Node.js instances using the &lt;a href=&quot;process#process_process_execpath&quot;&gt;&lt;code&gt;process.execPath&lt;/code&gt;&lt;/a&gt; of the parent process. The &lt;code&gt;execPath&lt;/code&gt; property in the &lt;code&gt;options&lt;/code&gt; object allows for an alternative execution path to be used.</source>
          <target state="translated">기본적으로 &lt;code&gt;child_process.fork()&lt;/code&gt; 는 상위 프로세스 의 &lt;a href=&quot;process#process_process_execpath&quot;&gt; &lt;code&gt;process.execPath&lt;/code&gt; &lt;/a&gt; 를 사용하여 새 Node.js 인스턴스를 생성 합니다. &lt;code&gt;options&lt;/code&gt; 객체 의 &lt;code&gt;execPath&lt;/code&gt; 속성을 사용하면 대체 실행 경로를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b37951cc194679e9b33730db8a32abc81d440f81" translate="yes" xml:space="preserve">
          <source>By default, Node.js will print process warnings to &lt;code&gt;stderr&lt;/code&gt;. The &lt;code&gt;--no-warnings&lt;/code&gt; command-line option can be used to suppress the default console output but the &lt;code&gt;'warning'&lt;/code&gt; event will still be emitted by the &lt;code&gt;process&lt;/code&gt; object.</source>
          <target state="translated">기본적으로 Node.js는 프로세스 경고를 &lt;code&gt;stderr&lt;/code&gt; 에 인쇄합니다 . &lt;code&gt;--no-warnings&lt;/code&gt; 명령 줄 옵션은 기본 콘솔 출력 만 표시하지 않을 수 있습니다 &lt;code&gt;'warning'&lt;/code&gt; 이벤트가 여전히 방출됩니다 &lt;code&gt;process&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="cfc34d8672001a73cdbee6fb87f91815a02a0574" translate="yes" xml:space="preserve">
          <source>By default, a listening &lt;code&gt;QuicSocket&lt;/code&gt; will generate stateless reset tokens when appropriate. The &lt;code&gt;disableStatelessReset&lt;/code&gt; option may be set when the &lt;code&gt;QuicSocket&lt;/code&gt; is created to disable generation of stateless resets. The &lt;code&gt;quicsocket.statelessReset&lt;/code&gt; property allows stateless reset to be turned on and off dynamically through the lifetime of the &lt;code&gt;QuicSocket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d7b2c5a51e3e9d87ab179d3e63be3365baf30e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="translated">By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="7d8427586d102b75ae9ef1d8e24762397831f29e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">기본적으로 단일 이벤트에 최대 &lt;code&gt;10&lt;/code&gt; 개의 리스너를 등록 할 수 있습니다. &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 개별 &lt;code&gt;EventEmitter&lt;/code&gt; 인스턴스에 대해이 한계를 변경할 수 있습니다 . &lt;em&gt;모든 &lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; 인스턴스 의 기본값을 변경하려면 &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; 특성을 사용할 수 있습니다. 이 값이 양수가 아닌 경우 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cdf7ae05e4b6ac71a79e223e72697e520c7f8d9" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;events.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe72ff29c196538639169d072a2c000f836560d" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;FSWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">By default, all &lt;code&gt;FSWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</target>
        </trans-unit>
        <trans-unit id="27f87a2e565b134494421fe1803569e3bfac561b" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Immediate&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;immediate.ref()&lt;/code&gt; unless &lt;code&gt;immediate.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">기본적으로 모든 &lt;code&gt;Immediate&lt;/code&gt; 개체를 만들고, &quot;ref'ed&quot;하는 것이 일반적으로 불필요한 호출하는 &lt;code&gt;immediate.ref()&lt;/code&gt; 하지 않는 한 &lt;code&gt;immediate.unref()&lt;/code&gt; 를 이전에 호출 .</target>
        </trans-unit>
        <trans-unit id="57926dcf274bb35a5839fbac277de9df81a17bff" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;StatWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">By default, all &lt;code&gt;StatWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</target>
        </trans-unit>
        <trans-unit id="3a5d92384948c12af2e5fca7d9dad8301e55f2c2" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Timeout&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;timeout.ref()&lt;/code&gt; unless &lt;code&gt;timeout.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">기본적으로 모든 &lt;code&gt;Timeout&lt;/code&gt; 개체를 만들고, &quot;ref'ed&quot;하는 것이 일반적으로 불필요한 호출하는 &lt;code&gt;timeout.ref()&lt;/code&gt; 하지 않는 한 &lt;code&gt;timeout.unref()&lt;/code&gt; 가 이전에 호출 .</target>
        </trans-unit>
        <trans-unit id="c36ec7767812bd7d3ccfe70d5c9b2f50bd4cfeb2" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="translated">By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt; instance is created.</target>
        </trans-unit>
        <trans-unit id="f8d76964354342530522f73f2faa55b344082b7c" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js' built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; 의&lt;/a&gt; 모든 인스턴스는 JavaScript 표현식을 평가하고 Node.js의 내장 모듈에 대한 액세스를 제공하는 평가 기능을 사용합니다. 이 기본 동작은 &lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; 일&lt;/a&gt; 때 대체 평가 기능을 전달하여 무시할 수 있습니다 인스턴스가 작성 .</target>
        </trans-unit>
        <trans-unit id="aae30d5c73d9d79e8a2188bc5f4b152b12c62f43" translate="yes" xml:space="preserve">
          <source>By default, all subpaths from a package can be imported (&lt;code&gt;import 'pkg/x.js'&lt;/code&gt;). Custom subpath aliasing and encapsulation can be provided through the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; field.</source>
          <target state="translated">기본적으로 패키지의 모든 &lt;code&gt;import 'pkg/x.js'&lt;/code&gt; 수 있습니다 ( import 'pkg / x.js' ). &lt;code&gt;&quot;exports&quot;&lt;/code&gt; 통해 사용자 정의 서브 패스 앨리어싱 및 캡슐화를 제공 할 수 있습니다. 필드를 .</target>
        </trans-unit>
        <trans-unit id="04197712c1c9818e08ac42b34fb5a047bccfe77f" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active, allowing the process to exit even if the socket is still listening.</source>
          <target state="translated">기본적으로 소켓을 바인딩하면 소켓이 열려있는 동안 Node.js 프로세스가 종료되는 것을 차단합니다. &lt;code&gt;socket.unref()&lt;/code&gt; 메소드는 프로세스가 소켓이 여전히 수신하는 경우에도 종료 할 수는 Node.js를 활성화 처리를 계속 참조 카운트에서 소켓을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efcba8983b787530ecb21473310e7ebe0a8f27e7" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active. The &lt;code&gt;socket.ref()&lt;/code&gt; method adds the socket back to the reference counting and restores the default behavior.</source>
          <target state="translated">기본적으로 소켓을 바인딩하면 소켓이 열려있는 동안 Node.js 프로세스가 종료되는 것을 차단합니다. &lt;code&gt;socket.unref()&lt;/code&gt; 메소드는 Node.js를 활성화 처리 계속 참조 카운팅에서 소켓을 배제 할 수있다. &lt;code&gt;socket.ref()&lt;/code&gt; 메소드는 참조 횟수에 소켓 등을 추가하고 기본 동작을 복원합니다.</target>
        </trans-unit>
        <trans-unit id="c5ce7b938deba67e4d499ae5b1d2870e58e4d6c1" translate="yes" xml:space="preserve">
          <source>By default, characters requiring percent-encoding within the query string will be encoded as UTF-8. If an alternative encoding is required, then an alternative &lt;code&gt;encodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">기본적으로 쿼리 문자열 내에서 퍼센트 인코딩이 필요한 문자는 UTF-8로 인코딩됩니다. 대체 인코딩이 필요한 경우 대체 &lt;code&gt;encodeURIComponent&lt;/code&gt; 옵션을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="586223b1036b0561eb25201451bf0ae34312f587" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">기본적으로 이벤트 리스너는 추가 된 순서대로 호출됩니다. &lt;code&gt;emitter.prependListener()&lt;/code&gt; 메소드는 수신기 어레이의 시작 이벤트 리스너를 추가의 대안으로 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="c1e38041b50c72489bd19f967717d2410cc8d13c" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">기본적으로 이벤트 리스너는 추가 된 순서대로 호출됩니다. &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; 메소드는 수신기 어레이의 시작 이벤트 리스너를 추가의 대안으로 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="56b6961294edb6e4c7b9e26709dab66bab2bf262" translate="yes" xml:space="preserve">
          <source>By default, no encoding is assigned and stream data will be returned as &lt;code&gt;Buffer&lt;/code&gt; objects. Setting an encoding causes the stream data to be returned as strings of the specified encoding rather than as &lt;code&gt;Buffer&lt;/code&gt; objects. For instance, calling &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; will cause the output data to be interpreted as UTF-8 data, and passed as strings. Calling &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; will cause the data to be encoded in hexadecimal string format.</source>
          <target state="translated">기본적으로 인코딩이 지정되지 않고 스트림 데이터가 &lt;code&gt;Buffer&lt;/code&gt; 오브젝트 로 리턴됩니다 . 인코딩을 설정하면 스트림 데이터가 &lt;code&gt;Buffer&lt;/code&gt; 객체가 아닌 지정된 인코딩의 문자열로 반환됩니다 . 예를 들어, &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; 을 호출 하면 출력 데이터가 UTF-8 데이터로 해석되어 문자열로 전달됩니다. &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; 을 호출 하면 데이터가 16 진 문자열 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="ff40ed54cc4f4ccd28ee10c0119b4a839b9b0115" translate="yes" xml:space="preserve">
          <source>By default, percent-encoded characters within the query string will be assumed to use UTF-8 encoding. If an alternative character encoding is used, then an alternative &lt;code&gt;decodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">기본적으로 쿼리 문자열 내에서 퍼센트 인코딩 된 문자는 UTF-8 인코딩을 사용하는 것으로 간주됩니다. 대체 문자 인코딩을 사용하는 경우 대체 &lt;code&gt;decodeURIComponent&lt;/code&gt; 옵션을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="60948785cd003c40a0a9c199059ae2a5361c36dc" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned child. These pipes have limited (and platform-specific) capacity. If the child process writes to stdout in excess of that limit without the output being captured, the child process will block waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="translated">기본적으로 &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; 및 &lt;code&gt;stderr&lt;/code&gt; 용 파이프 는 상위 Node.js 프로세스와 생성 된 하위간에 설정됩니다. 이 파이프는 용량이 제한적입니다 (플랫폼 별). 하위 프로세스가 출력을 캡처하지 않고 해당 한계를 초과하여 stdout에 쓰면 하위 프로세스는 파이프 버퍼가 더 많은 데이터를 수신하기를 기다리는 것을 차단합니다. 이것은 쉘에서 파이프의 동작과 동일합니다. 사용 &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; 출력이 소비하지 않을 경우 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="31a9e1cb7eb320cc9a8451870dd64aea183c6d34" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned subprocess. These pipes have limited (and platform-specific) capacity. If the subprocess writes to stdout in excess of that limit without the output being captured, the subprocess blocks waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="translated">By default, pipes for &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; , and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned subprocess. These pipes have limited (and platform-specific) capacity. If the subprocess writes to stdout in excess of that limit without the output being captured, the subprocess blocks waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</target>
        </trans-unit>
        <trans-unit id="400d0ff5bd73c75192c512fbb90cd09f96e28a06" translate="yes" xml:space="preserve">
          <source>By default, promise executions are not assigned &lt;code&gt;asyncId&lt;/code&gt;s due to the relatively expensive nature of the &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;promise introspection API&lt;/a&gt; provided by V8. This means that programs using promises or &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; will not get correct execution and trigger ids for promise callback contexts by default.</source>
          <target state="translated">기본적 으로 V8에서 제공 하는 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;약속 내부 검사 API&lt;/a&gt; 의 비교적 비싼 특성으로 인해 약속 실행에 &lt;code&gt;asyncId&lt;/code&gt; 가 할당되지 않습니다 . 이것은 promise 또는 &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; 를 사용하는 프로그램 은 기본적으로 promise 콜백 컨텍스트에 대한 올바른 실행 및 트리거 ID를 얻지 못함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="181c6af1d7f4577c1f0e360a950d5338345d6d32" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;querystring.unescape()&lt;/code&gt; method will attempt to use the JavaScript built-in &lt;code&gt;decodeURIComponent()&lt;/code&gt; method to decode. If that fails, a safer equivalent that does not throw on malformed URLs will be used.</source>
          <target state="translated">기본적으로 &lt;code&gt;querystring.unescape()&lt;/code&gt; 메소드는 JavaScript 내장 디코드 &lt;code&gt;decodeURIComponent()&lt;/code&gt; 메소드를 사용하여 디코드합니다. 실패하면 잘못된 형식의 URL을 던지지 않는보다 안전한 방법이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1666cd8e190f6bfded703574656e38b236afc740" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;zlib&lt;/code&gt; methods will throw an error when decompressing truncated data. However, if it is known that the data is incomplete, or the desire is to inspect only the beginning of a compressed file, it is possible to suppress the default error handling by changing the flushing method that is used to decompress the last chunk of input data:</source>
          <target state="translated">기본적으로 &lt;code&gt;zlib&lt;/code&gt; 메소드는 잘린 데이터를 압축 해제 할 때 오류를 발생시킵니다. 그러나 데이터가 불완전하거나 압축 파일의 시작 부분 만 검사하려는 경우 마지막 입력 청크를 압축 해제하는 데 사용되는 플러시 방법을 변경하여 기본 오류 처리를 억제 할 수 있습니다. 데이터:</target>
        </trans-unit>
        <trans-unit id="da9bb8d34bf7939f5a332d099389ca45ca0d4075" translate="yes" xml:space="preserve">
          <source>By default, the Node.js REPL will persist history between &lt;code&gt;node&lt;/code&gt; REPL sessions by saving inputs to a &lt;code&gt;.node_repl_history&lt;/code&gt; file located in the user's home directory. This can be disabled by setting the environment variable &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt;.</source>
          <target state="translated">기본적으로 Node.js REPL은 입력을 사용자의 홈 디렉토리에 있는 &lt;code&gt;.node_repl_history&lt;/code&gt; 파일에 저장하여 &lt;code&gt;node&lt;/code&gt; REPL 세션 간에 히스토리를 유지 합니다. 환경 변수 &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt; 를 설정하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9ccbfebc5791369d1015d24aa2d3ee0aa24e7b2" translate="yes" xml:space="preserve">
          <source>By default, the QUIC implementation uses the &lt;code&gt;dns&lt;/code&gt; module's &lt;a href=&quot;dns#dns_dnspromises_lookup_hostname_options&quot;&gt;promisified version of &lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; to resolve domains names into IP addresses. For most typical use cases, this will be sufficient. However, it is possible to pass a custom &lt;code&gt;lookup&lt;/code&gt; function as an option in several places throughout the QUIC API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e280f46107c6e1ae204fca9444f19eaac17e579" translate="yes" xml:space="preserve">
          <source>By default, the Server does not timeout sockets. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="translated">By default, the Server does not timeout sockets. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</target>
        </trans-unit>
        <trans-unit id="44601c24d6f4b82c2931ad704e76a372c8d477a1" translate="yes" xml:space="preserve">
          <source>By default, the Server's timeout value is 2 minutes, and sockets are destroyed automatically if they time out. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="translated">기본적으로 서버의 시간 초과 값은 2 분이며, 시간이 초과되면 소켓이 자동으로 삭제됩니다. 그러나 콜백이 서버의 &lt;code&gt;'timeout'&lt;/code&gt; 이벤트에 할당 되면 시간 초과가 명시 적으로 처리되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e32233c5b26929d2746af8624aac399f7bc395a" translate="yes" xml:space="preserve">
          <source>By default, the parent will wait for the detached child to exit. To prevent the parent from waiting for a given &lt;code&gt;subprocess&lt;/code&gt; to exit, use the &lt;code&gt;subprocess.unref()&lt;/code&gt; method. Doing so will cause the parent's event loop to not include the child in its reference count, allowing the parent to exit independently of the child, unless there is an established IPC channel between the child and the parent.</source>
          <target state="translated">기본적으로 부모는 분리 된 자식이 종료 될 때까지 기다립니다. 부모가 주어진 &lt;code&gt;subprocess&lt;/code&gt; 가 종료 되기를 기다리지 않도록하려면 &lt;code&gt;subprocess.unref()&lt;/code&gt; 메서드를 사용하십시오 . 그렇게하면 부모의 이벤트 루프에 자식이 참조 횟수에 포함되지 않으므로 자식과 부모 사이에 IPC 채널이 설정되어 있지 않으면 부모가 자식과 독립적으로 종료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50e392a14118831caba4a7dec19f691bf0b23454" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Readable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="translated">By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Readable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</target>
        </trans-unit>
        <trans-unit id="ae6f914836e899ec8e8fb2763f9587b4cce3f668" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Writable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="translated">By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Writable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</target>
        </trans-unit>
        <trans-unit id="86a29b8b2ca676c37fefa70d058c06106a270d08" translate="yes" xml:space="preserve">
          <source>By default, this function is the same as &lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;. However, custom agents may override this method in case greater flexibility is desired.</source>
          <target state="translated">기본적으로이 함수는 &lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; &lt;/a&gt; 과 동일 합니다. 그러나 더 큰 유연성이 필요한 경우 사용자 정의 에이전트가이 방법을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f8fd8723941036d695781128838085d766645f8" translate="yes" xml:space="preserve">
          <source>By default, when Node.js loads a module from a path that is symbolically linked to a different on-disk location, Node.js will dereference the link and use the actual on-disk &quot;real path&quot; of the module as both an identifier and as a root path to locate other dependency modules. In most cases, this default behavior is acceptable. However, when using symbolically linked peer dependencies, as illustrated in the example below, the default behavior causes an exception to be thrown if &lt;code&gt;moduleA&lt;/code&gt; attempts to require &lt;code&gt;moduleB&lt;/code&gt; as a peer dependency:</source>
          <target state="translated">기본적으로 Node.js가 다른 온 디스크 위치에 심볼릭으로 연결된 경로에서 모듈을로드하면 Node.js는 링크를 역 참조하고 모듈의 실제 온 디스크 &quot;실제 경로&quot;를 식별자로 사용합니다. 다른 의존성 모듈을 찾기위한 루트 경로. 대부분의 경우이 기본 동작이 허용됩니다. 상징적으로 연결 피어 종속성을 사용하는 경우에는, 아래의 예와 같이, 기본 동작은 경우 예외가 슬로우됩니다 &lt;code&gt;moduleA&lt;/code&gt; 의 시도가 요구하는 &lt;code&gt;moduleB&lt;/code&gt; 을 피어 종속성으로 :</target>
        </trans-unit>
        <trans-unit id="7fe520cb3ead24e33697421d46ca31e0abf7c414" translate="yes" xml:space="preserve">
          <source>By default, when a timer is scheduled using either &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;, the Node.js event loop will continue running as long as the timer is active. Each of the &lt;code&gt;Timeout&lt;/code&gt; objects returned by these functions export both &lt;code&gt;timeout.ref()&lt;/code&gt; and &lt;code&gt;timeout.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; 사용하여 타이머를 예약 하면 타이머가 활성화되어있는 동안 Node.js 이벤트 루프가 계속 실행됩니다. 이러한 함수에 의해 반환 된 각 &lt;code&gt;Timeout&lt;/code&gt; 객체는 이 기본 동작을 제어하는 ​​데 사용할 수있는 &lt;code&gt;timeout.ref()&lt;/code&gt; 및 &lt;code&gt;timeout.unref()&lt;/code&gt; 함수를 모두 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3065fbd5646405d3e034627f36e052d9f472adf5" translate="yes" xml:space="preserve">
          <source>By default, when an immediate is scheduled, the Node.js event loop will continue running as long as the immediate is active. The &lt;code&gt;Immediate&lt;/code&gt; object returned by &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt; exports both &lt;code&gt;immediate.ref()&lt;/code&gt; and &lt;code&gt;immediate.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">기본적으로 즉시가 예약되면 즉시가 활성화되어있는 동안 Node.js 이벤트 루프가 계속 실행됩니다. &lt;code&gt;Immediate&lt;/code&gt; 의해 반환 된 객체 &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt; 모두 수출 &lt;code&gt;immediate.ref()&lt;/code&gt; 및 &lt;code&gt;immediate.unref()&lt;/code&gt; 이 기본 동작을 제어하는 데 사용할 수있는 기능.</target>
        </trans-unit>
        <trans-unit id="df525b9b496d3a9417e6e2e2031510338cec6c44" translate="yes" xml:space="preserve">
          <source>By doing this, Node.js achieves a few things:</source>
          <target state="translated">이를 통해 Node.js는 몇 가지 사항을 달성합니다.</target>
        </trans-unit>
        <trans-unit id="6418ac2d8f06cd7d11f8f5419d7220d30b24e605" translate="yes" xml:space="preserve">
          <source>By marking a request whether it reused socket or not, we can do automatic error retry base on it.</source>
          <target state="translated">By marking a request whether it reused socket or not, we can do automatic error retry base on it.</target>
        </trans-unit>
        <trans-unit id="dd0194902340c272bcb653453069bd90ea1b7290" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writev&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;. Overriding &lt;code&gt;write()&lt;/code&gt; without &lt;code&gt;writev()&lt;/code&gt; can reduce performance as some optimizations (&lt;code&gt;_writev()&lt;/code&gt;) will be disabled. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, and at least one of &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; are required.</source>
          <target state="translated">By providing the &lt;code&gt;fs&lt;/code&gt; option it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;writev&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; . Overriding &lt;code&gt;write()&lt;/code&gt; without &lt;code&gt;writev()&lt;/code&gt; can reduce performance as some optimizations ( &lt;code&gt;_writev()&lt;/code&gt; ) will be disabled. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;close&lt;/code&gt; , and at least one of &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; are required.</target>
        </trans-unit>
        <trans-unit id="2f5158d499749c6872e4f43077f1bd6b1b066826" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option, it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt;. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt; are required.</source>
          <target state="translated">By providing the &lt;code&gt;fs&lt;/code&gt; option, it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , and &lt;code&gt;close&lt;/code&gt; . When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , and &lt;code&gt;close&lt;/code&gt; are required.</target>
        </trans-unit>
        <trans-unit id="1d98a58837334c775ed31c6b9b2008e929d36ff9" translate="yes" xml:space="preserve">
          <source>By starting a REPL from a Unix socket-based server instead of stdin, it is possible to connect to a long-running Node.js process without restarting it.</source>
          <target state="translated">stdin 대신 Unix 소켓 기반 서버에서 REPL을 시작하면 재시작하지 않고도 오래 실행되는 Node.js 프로세스에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a35d14f9d97613dca3959200e44548caf1a0658" translate="yes" xml:space="preserve">
          <source>By the time &lt;code&gt;main.js&lt;/code&gt; has loaded both modules, they're both finished. The output of this program would thus be:</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; 가 두 모듈을 모두로드 할 때까지 모두 완료되었습니다. 따라서이 프로그램의 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5eb9b00d1377cab123223f4390f9cd60acd57dc7" translate="yes" xml:space="preserve">
          <source>By the very nature of how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; works in JavaScript, there is almost never any way to safely &quot;pick up where it left off&quot;, without leaking references, or creating some other sort of undefined brittle state.</source>
          <target state="translated">JavaScript에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt; &lt;code&gt;throw&lt;/code&gt; 가&lt;/a&gt; 작동 하는 방식의 본질 상 , 참조를 유출하거나 정의되지 않은 다른 취성 상태를 만들지 않고 안전하게 &quot;중지 된 위치&quot;를 안전하게 찾을 수있는 방법은 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="5525b6de8ddff52f4df5811bac7fe5456dec1113" translate="yes" xml:space="preserve">
          <source>By using the context of a domain, and the resilience of separating our program into multiple worker processes, we can react more appropriately, and handle errors with much greater safety.</source>
          <target state="translated">도메인 컨텍스트와 프로그램을 여러 작업자 프로세스로 분리하는 복원력을 사용하면보다 적절하게 대응하고 훨씬 더 안전하게 오류를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="5519037c56c2d8df2d0e0bdc1591904d18fac337" translate="yes" xml:space="preserve">
          <source>C++ Addons</source>
          <target state="translated">C ++ 애드온</target>
        </trans-unit>
        <trans-unit id="8cbb6f65624193a286bcf163d47cd79ced6b7efd" translate="yes" xml:space="preserve">
          <source>C++ addons</source>
          <target state="translated">C++ addons</target>
        </trans-unit>
        <trans-unit id="1e5cbfdf509963f6db39f558bd1e8f80eee01336" translate="yes" xml:space="preserve">
          <source>C++ embedder API</source>
          <target state="translated">C++ embedder API</target>
        </trans-unit>
        <trans-unit id="9e192c5e28df91fd85df36b2994082e21e363a26" translate="yes" xml:space="preserve">
          <source>C/C++ Addons</source>
          <target state="translated">C / C ++ 애드온</target>
        </trans-unit>
        <trans-unit id="d78bb26a6e6f8ac8e8e6f66793335ae354220795" translate="yes" xml:space="preserve">
          <source>C/C++ Addons - N-API</source>
          <target state="translated">C / C ++ 애드온-N-API</target>
        </trans-unit>
        <trans-unit id="5c185f3323b394a89ed5853791cd7152808ad05d" translate="yes" xml:space="preserve">
          <source>C/C++ addons with N-API</source>
          <target state="translated">C/C++ addons with N-API</target>
        </trans-unit>
        <trans-unit id="875ca472ddb5edf892fbe65357cfb5ca99ee69a4" translate="yes" xml:space="preserve">
          <source>CA authorization records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67e8a053fa3580820f1db7af794d2048bdd882" translate="yes" xml:space="preserve">
          <source>CCM is one of the supported &lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;AEAD algorithms&lt;/a&gt;. Applications which use this mode must adhere to certain restrictions when using the cipher API:</source>
          <target state="translated">CCM은 지원되는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;AEAD 알고리즘&lt;/a&gt; 중 하나입니다 . 이 모드를 사용하는 응용 프로그램은 암호 API를 사용할 때 특정 제한 사항을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f16dd9b7ab2f0aa0df63aa37c3d38f01cb28a48" translate="yes" xml:space="preserve">
          <source>CCM mode</source>
          <target state="translated">CCM 모드</target>
        </trans-unit>
        <trans-unit id="106a6ab814890693f968e34eca850c9ae55e9458" translate="yes" xml:space="preserve">
          <source>CMake.js</source>
          <target state="translated">CMake.js</target>
        </trans-unit>
        <trans-unit id="b96cf960a75d300ca5ec1dd380d22cb8aa64f0ad" translate="yes" xml:space="preserve">
          <source>CMake.js is a good choice for projects that already use CMake or for developers affected by limitations in node-gyp.</source>
          <target state="translated">CMake.js is a good choice for projects that already use CMake or for developers affected by limitations in node-gyp.</target>
        </trans-unit>
        <trans-unit id="91d0e532c4be585300e6d6a20ca189552961b8ba" translate="yes" xml:space="preserve">
          <source>CPU Profiler</source>
          <target state="translated">CPU 프로파일 러</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
