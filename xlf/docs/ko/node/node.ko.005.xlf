<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="8a26935f967b0ada0537e98b8de93da7a54ae1ee" translate="yes" xml:space="preserve">
          <source>ERR_CONSTRUCT_CALL_INVALID</source>
          <target state="translated">ERR_CONSTRUCT_CALL_INVALID</target>
        </trans-unit>
        <trans-unit id="0747708a040e5b197973babeda0835ba0e71e9ec" translate="yes" xml:space="preserve">
          <source>ERR_CONSTRUCT_CALL_REQUIRED</source>
          <target state="translated">ERR_CONSTRUCT_CALL_REQUIRED</target>
        </trans-unit>
        <trans-unit id="70b2806c0af95329f28f83ff1cd8e0c6fedf7d14" translate="yes" xml:space="preserve">
          <source>ERR_CPU_USAGE</source>
          <target state="translated">ERR_CPU_USAGE</target>
        </trans-unit>
        <trans-unit id="66e90c64b0aa50fe57fdf684e33f0fbb689a379a" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED</source>
          <target state="translated">ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED</target>
        </trans-unit>
        <trans-unit id="1c1b60ced68c0e283cc57c565efb8eef2035e453" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_ECDH_INVALID_FORMAT</source>
          <target state="translated">ERR_CRYPTO_ECDH_INVALID_FORMAT</target>
        </trans-unit>
        <trans-unit id="7148c86e11df9bb1e03adbed4f17adaffa9587aa" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY</source>
          <target state="translated">ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY</target>
        </trans-unit>
        <trans-unit id="bb8e00b8a35d406c7ae03b15f1036ed8ac72a399" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_ENGINE_UNKNOWN</source>
          <target state="translated">ERR_CRYPTO_ENGINE_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="bea328d6e098324e76c1f82a7fae4fff957f8a42" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_FIPS_FORCED</source>
          <target state="translated">ERR_CRYPTO_FIPS_FORCED</target>
        </trans-unit>
        <trans-unit id="9c7dff69f26b922e1fc3bad58c07b8f796a07a37" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_FIPS_UNAVAILABLE</source>
          <target state="translated">ERR_CRYPTO_FIPS_UNAVAILABLE</target>
        </trans-unit>
        <trans-unit id="a63873ddba79a7410e5144bb224b560e44571c6c" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_HASH_DIGEST_NO_UTF16</source>
          <target state="translated">ERR_CRYPTO_HASH_DIGEST_NO_UTF16</target>
        </trans-unit>
        <trans-unit id="0b8512ad06f532e6c5de6a4b5f2dc24ab19173c1" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_HASH_FINALIZED</source>
          <target state="translated">ERR_CRYPTO_HASH_FINALIZED</target>
        </trans-unit>
        <trans-unit id="8bd3bf516d8075407d0435ffe47bc7eaf9888a57" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_HASH_UPDATE_FAILED</source>
          <target state="translated">ERR_CRYPTO_HASH_UPDATE_FAILED</target>
        </trans-unit>
        <trans-unit id="950f5b19ba7ba1970bfa95ce62e6d5c9a8e2f997" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS</source>
          <target state="translated">ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS</target>
        </trans-unit>
        <trans-unit id="41892fe6771817368b1d76c5f2bff2d5ab905fc3" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_INVALID_DIGEST</source>
          <target state="translated">ERR_CRYPTO_INVALID_DIGEST</target>
        </trans-unit>
        <trans-unit id="ae69c4bdfa4a28f040ccec601838c31cf72856a1" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE</source>
          <target state="translated">ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE</target>
        </trans-unit>
        <trans-unit id="edcbaaa8a3bf31174abffc2c41440d0c0f0bc511" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_INVALID_STATE</source>
          <target state="translated">ERR_CRYPTO_INVALID_STATE</target>
        </trans-unit>
        <trans-unit id="752b266ffd3e7b1f171d06dde7641d0a097a3937" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_PBKDF2_ERROR</source>
          <target state="translated">ERR_CRYPTO_PBKDF2_ERROR</target>
        </trans-unit>
        <trans-unit id="df4a51b11adf1fa9e0e24d54f7925af82adb7eb2" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_SCRYPT_INVALID_PARAMETER</source>
          <target state="translated">ERR_CRYPTO_SCRYPT_INVALID_PARAMETER</target>
        </trans-unit>
        <trans-unit id="539444acde5e93192b76dcfb569517f6508abe36" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_SCRYPT_NOT_SUPPORTED</source>
          <target state="translated">ERR_CRYPTO_SCRYPT_NOT_SUPPORTED</target>
        </trans-unit>
        <trans-unit id="61b319458d751cd87c7113ed03006cfdc2c81ff1" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_SIGN_KEY_REQUIRED</source>
          <target state="translated">ERR_CRYPTO_SIGN_KEY_REQUIRED</target>
        </trans-unit>
        <trans-unit id="63d475cc297bbdf58c3aaea078f26f13b34431c1" translate="yes" xml:space="preserve">
          <source>ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH</source>
          <target state="translated">ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH</target>
        </trans-unit>
        <trans-unit id="4a10e4533f846f33f5124bc4d25573b690c9f4cb" translate="yes" xml:space="preserve">
          <source>ERR_DNS_SET_SERVERS_FAILED</source>
          <target state="translated">ERR_DNS_SET_SERVERS_FAILED</target>
        </trans-unit>
        <trans-unit id="7daa0b0d88145256a83977c5f336bd838e1c6938" translate="yes" xml:space="preserve">
          <source>ERR_DOMAIN_CALLBACK_NOT_AVAILABLE</source>
          <target state="translated">ERR_DOMAIN_CALLBACK_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="b0e8e45f300c5e251e3b02092bca64411251b088" translate="yes" xml:space="preserve">
          <source>ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE</source>
          <target state="translated">ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE</target>
        </trans-unit>
        <trans-unit id="eb7592d58c3cba0193ce8ced918b8da113289209" translate="yes" xml:space="preserve">
          <source>ERR_ENCODING_INVALID_ENCODED_DATA</source>
          <target state="translated">ERR_ENCODING_INVALID_ENCODED_DATA</target>
        </trans-unit>
        <trans-unit id="9122c0d238581673023e9329f8b2a7e01d4ba5b6" translate="yes" xml:space="preserve">
          <source>ERR_ENCODING_NOT_SUPPORTED</source>
          <target state="translated">ERR_ENCODING_NOT_SUPPORTED</target>
        </trans-unit>
        <trans-unit id="0ef46f4908211cc520c9a92c5edad4aa6897a710" translate="yes" xml:space="preserve">
          <source>ERR_ENTRY_TYPE_MISMATCH</source>
          <target state="translated">ERR_ENTRY_TYPE_MISMATCH</target>
        </trans-unit>
        <trans-unit id="63df89491e2be30d24775079581ce1321c1f7bdb" translate="yes" xml:space="preserve">
          <source>ERR_FALSY_VALUE_REJECTION</source>
          <target state="translated">ERR_FALSY_VALUE_REJECTION</target>
        </trans-unit>
        <trans-unit id="e13fa2e570ed58acbd9cdcb3a373ca93343aa0f7" translate="yes" xml:space="preserve">
          <source>ERR_FS_FILE_TOO_LARGE</source>
          <target state="translated">ERR_FS_FILE_TOO_LARGE</target>
        </trans-unit>
        <trans-unit id="fa728896370d0d0e3fa1fd02ad28a62a080b407e" translate="yes" xml:space="preserve">
          <source>ERR_FS_INVALID_SYMLINK_TYPE</source>
          <target state="translated">ERR_FS_INVALID_SYMLINK_TYPE</target>
        </trans-unit>
        <trans-unit id="781bd026761e3541f5009e1367d9c31fd323b4f1" translate="yes" xml:space="preserve">
          <source>ERR_FS_WATCHER_ALREADY_STARTED</source>
          <target state="translated">ERR_FS_WATCHER_ALREADY_STARTED</target>
        </trans-unit>
        <trans-unit id="a8134f29834a364041f0dedfdd10544158dd1e96" translate="yes" xml:space="preserve">
          <source>ERR_FS_WATCHER_NOT_STARTED</source>
          <target state="translated">ERR_FS_WATCHER_NOT_STARTED</target>
        </trans-unit>
        <trans-unit id="5a7c49fa850e675671d47fd3a5233b610578b3cb" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_ALREADY_SHUTDOWN</source>
          <target state="translated">ERR_HTTP2_ALREADY_SHUTDOWN</target>
        </trans-unit>
        <trans-unit id="f960ad88ab4c10b754237155d2565f483beb48a8" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_ALTSVC_INVALID_ORIGIN</source>
          <target state="translated">ERR_HTTP2_ALTSVC_INVALID_ORIGIN</target>
        </trans-unit>
        <trans-unit id="98dfd232f71080ea99b159d235c502374cc4522a" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_ALTSVC_LENGTH</source>
          <target state="translated">ERR_HTTP2_ALTSVC_LENGTH</target>
        </trans-unit>
        <trans-unit id="b3716b15f9f02d182fa69373f80cdcd86314d696" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_CONNECT_AUTHORITY</source>
          <target state="translated">ERR_HTTP2_CONNECT_AUTHORITY</target>
        </trans-unit>
        <trans-unit id="2908859c3f17d37b9b1e5f8f614d4af6a8183581" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_CONNECT_PATH</source>
          <target state="translated">ERR_HTTP2_CONNECT_PATH</target>
        </trans-unit>
        <trans-unit id="ae4d88754d39c04cbfae045a406437ea07d5b431" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_CONNECT_SCHEME</source>
          <target state="translated">ERR_HTTP2_CONNECT_SCHEME</target>
        </trans-unit>
        <trans-unit id="fd8e8bc9fbb6599e504e06aa4a0cde8e07dfda1b" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_ERROR</source>
          <target state="translated">ERR_HTTP2_ERROR</target>
        </trans-unit>
        <trans-unit id="fd2e0e4816189bf41b8a3307e971e92f17264fd1" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_FRAME_ERROR</source>
          <target state="translated">ERR_HTTP2_FRAME_ERROR</target>
        </trans-unit>
        <trans-unit id="2c112a73eeb4522c935c813be5d456c3a75c13ee" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_GOAWAY_SESSION</source>
          <target state="translated">ERR_HTTP2_GOAWAY_SESSION</target>
        </trans-unit>
        <trans-unit id="6234d46ad49c9fb1b33ddeae3e4f329fbb706fbf" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_HEADERS_AFTER_RESPOND</source>
          <target state="translated">ERR_HTTP2_HEADERS_AFTER_RESPOND</target>
        </trans-unit>
        <trans-unit id="2c91b5d09792f5c3ec23babeb540141ac2ea8b05" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_HEADERS_OBJECT</source>
          <target state="translated">ERR_HTTP2_HEADERS_OBJECT</target>
        </trans-unit>
        <trans-unit id="e54fe16c023ca60177f1f06182a5e19c4260a5b6" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_HEADERS_SENT</source>
          <target state="translated">ERR_HTTP2_HEADERS_SENT</target>
        </trans-unit>
        <trans-unit id="7fd0f58e8b22e4fea950362bdc9ecd33a4f02bf4" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_HEADER_REQUIRED</source>
          <target state="translated">ERR_HTTP2_HEADER_REQUIRED</target>
        </trans-unit>
        <trans-unit id="0b4f86b2ae05b6825e5e9d908553a3cca14fe912" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_HEADER_SINGLE_VALUE</source>
          <target state="translated">ERR_HTTP2_HEADER_SINGLE_VALUE</target>
        </trans-unit>
        <trans-unit id="9a34e31e0eefeef9c2fc27e520eabab73c0931f4" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INFO_HEADERS_AFTER_RESPOND</source>
          <target state="translated">ERR_HTTP2_INFO_HEADERS_AFTER_RESPOND</target>
        </trans-unit>
        <trans-unit id="904bd6afe8af7626254e39a8f67b42321380f01a" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INFO_STATUS_NOT_ALLOWED</source>
          <target state="translated">ERR_HTTP2_INFO_STATUS_NOT_ALLOWED</target>
        </trans-unit>
        <trans-unit id="a78f7753ebef8a70ae60adfb6b2015398ffdb259" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_CONNECTION_HEADERS</source>
          <target state="translated">ERR_HTTP2_INVALID_CONNECTION_HEADERS</target>
        </trans-unit>
        <trans-unit id="52351b89f8603bddf8b8605f7dde8c83015b8a6b" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_HEADER_VALUE</source>
          <target state="translated">ERR_HTTP2_INVALID_HEADER_VALUE</target>
        </trans-unit>
        <trans-unit id="775422b18406c51c8d9b27c7af148aba70fc30b8" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_INFO_STATUS</source>
          <target state="translated">ERR_HTTP2_INVALID_INFO_STATUS</target>
        </trans-unit>
        <trans-unit id="88068f95150e6d317e428ed9115bad5d892ed05f" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_ORIGIN</source>
          <target state="translated">ERR_HTTP2_INVALID_ORIGIN</target>
        </trans-unit>
        <trans-unit id="4840258cd0dd531fff06b2ae0531c01885c8abfb" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH</source>
          <target state="translated">ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH</target>
        </trans-unit>
        <trans-unit id="40c00b3cef2250de1009ddef5ca96c601d322a53" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_PSEUDOHEADER</source>
          <target state="translated">ERR_HTTP2_INVALID_PSEUDOHEADER</target>
        </trans-unit>
        <trans-unit id="64687df15b218f2e013e2d8056abef3ce7b792c9" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_SESSION</source>
          <target state="translated">ERR_HTTP2_INVALID_SESSION</target>
        </trans-unit>
        <trans-unit id="771120dd3209bac2cc077d382eb888696b5178d7" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_SETTING_VALUE</source>
          <target state="translated">ERR_HTTP2_INVALID_SETTING_VALUE</target>
        </trans-unit>
        <trans-unit id="91259a01fbd3dea926a94a8e6baea004e846a40d" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_INVALID_STREAM</source>
          <target state="translated">ERR_HTTP2_INVALID_STREAM</target>
        </trans-unit>
        <trans-unit id="0364acee755c4eefc0f7aa8fca9b926fa6afd14b" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_MAX_PENDING_SETTINGS_ACK</source>
          <target state="translated">ERR_HTTP2_MAX_PENDING_SETTINGS_ACK</target>
        </trans-unit>
        <trans-unit id="4c87431a3cd8519a3df2c9d54cc1448e9699e3ef" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_NESTED_PUSH</source>
          <target state="translated">ERR_HTTP2_NESTED_PUSH</target>
        </trans-unit>
        <trans-unit id="a640ff926f08f0ede7bdaae4ca53f2ddc74ed969" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_NO_SOCKET_MANIPULATION</source>
          <target state="translated">ERR_HTTP2_NO_SOCKET_MANIPULATION</target>
        </trans-unit>
        <trans-unit id="47234bf53f711aef29b8158a7391781cb116cb79" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_ORIGIN_LENGTH</source>
          <target state="translated">ERR_HTTP2_ORIGIN_LENGTH</target>
        </trans-unit>
        <trans-unit id="38635e0e79b69694e43c3ba5fecff85d4f2fb3ab" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_OUT_OF_STREAMS</source>
          <target state="translated">ERR_HTTP2_OUT_OF_STREAMS</target>
        </trans-unit>
        <trans-unit id="af12336e40e2ce9f4e493eccbf093acabb190ad7" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_PAYLOAD_FORBIDDEN</source>
          <target state="translated">ERR_HTTP2_PAYLOAD_FORBIDDEN</target>
        </trans-unit>
        <trans-unit id="bde4b156e124dfe5b43b7973e6375c697b5dcb0d" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_PING_CANCEL</source>
          <target state="translated">ERR_HTTP2_PING_CANCEL</target>
        </trans-unit>
        <trans-unit id="1e83480d729ce3a115f909eb315bbae1d3866750" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_PING_LENGTH</source>
          <target state="translated">ERR_HTTP2_PING_LENGTH</target>
        </trans-unit>
        <trans-unit id="3b4fd8382998911ed5d4d28d00dadb460598548e" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED</source>
          <target state="translated">ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED</target>
        </trans-unit>
        <trans-unit id="1ea6621cd4e90f1b224b2834d8c96686b6f2cfad" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_PUSH_DISABLED</source>
          <target state="translated">ERR_HTTP2_PUSH_DISABLED</target>
        </trans-unit>
        <trans-unit id="a9f97cfcb7c7a1f20bce5514f9f17e25a19545b3" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SEND_FILE</source>
          <target state="translated">ERR_HTTP2_SEND_FILE</target>
        </trans-unit>
        <trans-unit id="831b126720f829b479792b823fc9a18249a50ff9" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SEND_FILE_NOSEEK</source>
          <target state="translated">ERR_HTTP2_SEND_FILE_NOSEEK</target>
        </trans-unit>
        <trans-unit id="1ec33ab2015a17e7481c0cdb798a4ab416e94bcd" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SESSION_ERROR</source>
          <target state="translated">ERR_HTTP2_SESSION_ERROR</target>
        </trans-unit>
        <trans-unit id="909111acdb119b6b0edbba3c37a2b50322970cbd" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SETTINGS_CANCEL</source>
          <target state="translated">ERR_HTTP2_SETTINGS_CANCEL</target>
        </trans-unit>
        <trans-unit id="b78c8db8c4696a0c5ee16210f5975242e21c0f1c" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SOCKET_BOUND</source>
          <target state="translated">ERR_HTTP2_SOCKET_BOUND</target>
        </trans-unit>
        <trans-unit id="746545a000e61ca066017967f354b9fb89b96cb8" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_SOCKET_UNBOUND</source>
          <target state="translated">ERR_HTTP2_SOCKET_UNBOUND</target>
        </trans-unit>
        <trans-unit id="3e38e85fd64dc47cdde04098439f70849f76e8e5" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STATUS_101</source>
          <target state="translated">ERR_HTTP2_STATUS_101</target>
        </trans-unit>
        <trans-unit id="5a91c5448dae898e9d5ca25f1bef8cc17d9929d7" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STATUS_INVALID</source>
          <target state="translated">ERR_HTTP2_STATUS_INVALID</target>
        </trans-unit>
        <trans-unit id="bed7ada160a29ea250aa07199e564658a477837f" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STREAM_CANCEL</source>
          <target state="translated">ERR_HTTP2_STREAM_CANCEL</target>
        </trans-unit>
        <trans-unit id="caeba3baf224119028fcc3dc539399bb9de0497f" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STREAM_CLOSED</source>
          <target state="translated">ERR_HTTP2_STREAM_CLOSED</target>
        </trans-unit>
        <trans-unit id="c8b9c3438b06be6a0e212470bc518127bd31b783" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STREAM_ERROR</source>
          <target state="translated">ERR_HTTP2_STREAM_ERROR</target>
        </trans-unit>
        <trans-unit id="099e03976fe3748a3075c3faef6204f2c3f9c4e7" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_STREAM_SELF_DEPENDENCY</source>
          <target state="translated">ERR_HTTP2_STREAM_SELF_DEPENDENCY</target>
        </trans-unit>
        <trans-unit id="11a603550b53c50d1c1e4cd568dedd5ede858221" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_TRAILERS_ALREADY_SENT</source>
          <target state="translated">ERR_HTTP2_TRAILERS_ALREADY_SENT</target>
        </trans-unit>
        <trans-unit id="521cc63778be5df880785bcc78348d1e844adf21" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_TRAILERS_NOT_READY</source>
          <target state="translated">ERR_HTTP2_TRAILERS_NOT_READY</target>
        </trans-unit>
        <trans-unit id="c59d6497fac2dbada1119232453b01d2f19b385c" translate="yes" xml:space="preserve">
          <source>ERR_HTTP2_UNSUPPORTED_PROTOCOL</source>
          <target state="translated">ERR_HTTP2_UNSUPPORTED_PROTOCOL</target>
        </trans-unit>
        <trans-unit id="ea72755f3edafa4afb3eee160bd044bf0f7d5085" translate="yes" xml:space="preserve">
          <source>ERR_HTTP_HEADERS_SENT</source>
          <target state="translated">ERR_HTTP_HEADERS_SENT</target>
        </trans-unit>
        <trans-unit id="65d89a7dc0973081f45e190cfcc7df439dc86d0f" translate="yes" xml:space="preserve">
          <source>ERR_HTTP_INVALID_CHAR</source>
          <target state="translated">ERR_HTTP_INVALID_CHAR</target>
        </trans-unit>
        <trans-unit id="654ba0b1fb4f06b59a96ab96bf7fed134f34e329" translate="yes" xml:space="preserve">
          <source>ERR_HTTP_INVALID_HEADER_VALUE</source>
          <target state="translated">ERR_HTTP_INVALID_HEADER_VALUE</target>
        </trans-unit>
        <trans-unit id="71768118c30bfb2406b95b0e4d0becc8d20a48af" translate="yes" xml:space="preserve">
          <source>ERR_HTTP_INVALID_STATUS_CODE</source>
          <target state="translated">ERR_HTTP_INVALID_STATUS_CODE</target>
        </trans-unit>
        <trans-unit id="7a8071ee639b0c25530d19e15fe47c7ebfab8b0e" translate="yes" xml:space="preserve">
          <source>ERR_HTTP_TRAILER_INVALID</source>
          <target state="translated">ERR_HTTP_TRAILER_INVALID</target>
        </trans-unit>
        <trans-unit id="d1da0b0cf61578c26ad33251c4828fbc292b9989" translate="yes" xml:space="preserve">
          <source>ERR_INCOMPATIBLE_OPTION_PAIR</source>
          <target state="translated">ERR_INCOMPATIBLE_OPTION_PAIR</target>
        </trans-unit>
        <trans-unit id="82fe73375fdeee0dae6adf2b7cb0f592d2735ce6" translate="yes" xml:space="preserve">
          <source>ERR_INDEX_OUT_OF_RANGE</source>
          <target state="translated">ERR_INDEX_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="bad6cdec4e719ce3803b056c863fb2f1a9d14cb2" translate="yes" xml:space="preserve">
          <source>ERR_INPUT_TYPE_NOT_ALLOWED</source>
          <target state="translated">ERR_INPUT_TYPE_NOT_ALLOWED</target>
        </trans-unit>
        <trans-unit id="7b53413b33fed9b4cd2c9ac42ae55fa06c3b7b0f" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_ALREADY_CONNECTED</source>
          <target state="translated">ERR_INSPECTOR_ALREADY_CONNECTED</target>
        </trans-unit>
        <trans-unit id="25a47ecde78929fe7880ec3a90d96a17e2ddbf45" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_CLOSED</source>
          <target state="translated">ERR_INSPECTOR_CLOSED</target>
        </trans-unit>
        <trans-unit id="0f523e08b386e65a8343cad8145aa39f0e599cbe" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_COMMAND</source>
          <target state="translated">ERR_INSPECTOR_COMMAND</target>
        </trans-unit>
        <trans-unit id="7da1106b4a411a5f9c76919e7c340bf97879884d" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_NOT_ACTIVE</source>
          <target state="translated">ERR_INSPECTOR_NOT_ACTIVE</target>
        </trans-unit>
        <trans-unit id="6e1e0fe855fe2eb563e051ec1fd9f5e5e7d86b3b" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_NOT_AVAILABLE</source>
          <target state="translated">ERR_INSPECTOR_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="2af55e03c834254118ff47f8001bc6ab3851804c" translate="yes" xml:space="preserve">
          <source>ERR_INSPECTOR_NOT_CONNECTED</source>
          <target state="translated">ERR_INSPECTOR_NOT_CONNECTED</target>
        </trans-unit>
        <trans-unit id="0713d014aa221e15e976cc92f05c8e3af2d07be7" translate="yes" xml:space="preserve">
          <source>ERR_INTERNAL_ASSERTION</source>
          <target state="translated">ERR_INTERNAL_ASSERTION</target>
        </trans-unit>
        <trans-unit id="9670ef83bb5df82103efa5827c5ba43e33e3deda" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_ADDRESS_FAMILY</source>
          <target state="translated">ERR_INVALID_ADDRESS_FAMILY</target>
        </trans-unit>
        <trans-unit id="321d9dabfa6118de5b166fefaf0dab5366ef29ab" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_ARG_TYPE</source>
          <target state="translated">ERR_INVALID_ARG_TYPE</target>
        </trans-unit>
        <trans-unit id="b6b695579fcb3dfb6173ab44dab1d06c2341acd6" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_ARG_VALUE</source>
          <target state="translated">ERR_INVALID_ARG_VALUE</target>
        </trans-unit>
        <trans-unit id="73daf66be4ff758bd58cc4d311be21656aef2679" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_ASYNC_ID</source>
          <target state="translated">ERR_INVALID_ASYNC_ID</target>
        </trans-unit>
        <trans-unit id="10b0bbe7d6a3d3bc4068ed8ac457c8ebc420ae61" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_BUFFER_SIZE</source>
          <target state="translated">ERR_INVALID_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="b7f474021503493ac471d38b67cbe75fbdfab3a7" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_CALLBACK</source>
          <target state="translated">ERR_INVALID_CALLBACK</target>
        </trans-unit>
        <trans-unit id="fad6409175afb37c63f65d75151c3908412ffafd" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_CHAR</source>
          <target state="translated">ERR_INVALID_CHAR</target>
        </trans-unit>
        <trans-unit id="3e9c021b63750d6f6bb0d34cf7a931da1ff7508a" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_CURSOR_POS</source>
          <target state="translated">ERR_INVALID_CURSOR_POS</target>
        </trans-unit>
        <trans-unit id="41dfc18b394fb87ab5c94b740c0247019b3410db" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_FD</source>
          <target state="translated">ERR_INVALID_FD</target>
        </trans-unit>
        <trans-unit id="e9f4d9d160ebcfbae0142b0f12a7a9b65fb1e868" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_FD_TYPE</source>
          <target state="translated">ERR_INVALID_FD_TYPE</target>
        </trans-unit>
        <trans-unit id="8252b1ae576197e7e04cb4251d9df065ebef70d2" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_FILE_URL_HOST</source>
          <target state="translated">ERR_INVALID_FILE_URL_HOST</target>
        </trans-unit>
        <trans-unit id="9b05bdbf70702b1084bcca0090c8b2222c243e7b" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_FILE_URL_PATH</source>
          <target state="translated">ERR_INVALID_FILE_URL_PATH</target>
        </trans-unit>
        <trans-unit id="0d58290cd93c9e5471239227aa290369c9ed8ecd" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_HANDLE_TYPE</source>
          <target state="translated">ERR_INVALID_HANDLE_TYPE</target>
        </trans-unit>
        <trans-unit id="7ab38738500afabc4d070d49005784214a26e0c6" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_HTTP_TOKEN</source>
          <target state="translated">ERR_INVALID_HTTP_TOKEN</target>
        </trans-unit>
        <trans-unit id="b513d8e796894405083258396d0b8e6123f76ddb" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_IP_ADDRESS</source>
          <target state="translated">ERR_INVALID_IP_ADDRESS</target>
        </trans-unit>
        <trans-unit id="d395e5e1038eb9a803ef00d839e08a40899ea23c" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_OPT_VALUE</source>
          <target state="translated">ERR_INVALID_OPT_VALUE</target>
        </trans-unit>
        <trans-unit id="45a292b0e8a69ccc827127fe3c7d353293d34716" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_OPT_VALUE_ENCODING</source>
          <target state="translated">ERR_INVALID_OPT_VALUE_ENCODING</target>
        </trans-unit>
        <trans-unit id="744958317525006c4590e70479533d4ab913b47f" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_PACKAGE_CONFIG</source>
          <target state="translated">ERR_INVALID_PACKAGE_CONFIG</target>
        </trans-unit>
        <trans-unit id="54a5092a219c883741a0587b742b19f13560e276" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_PERFORMANCE_MARK</source>
          <target state="translated">ERR_INVALID_PERFORMANCE_MARK</target>
        </trans-unit>
        <trans-unit id="e8a1f7655a9ab31e23c638fe1f498ac68fbf367a" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_PROTOCOL</source>
          <target state="translated">ERR_INVALID_PROTOCOL</target>
        </trans-unit>
        <trans-unit id="90ae37180e8529973606b6f181cbf02f274bd65e" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_REPL_EVAL_CONFIG</source>
          <target state="translated">ERR_INVALID_REPL_EVAL_CONFIG</target>
        </trans-unit>
        <trans-unit id="01f44b859cb0479f98496a7caa806a162e03cc69" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_REPL_HISTORY</source>
          <target state="translated">ERR_INVALID_REPL_HISTORY</target>
        </trans-unit>
        <trans-unit id="adcafc60a37efba8b770dd3b033e104f189e6330" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_REPL_INPUT</source>
          <target state="translated">ERR_INVALID_REPL_INPUT</target>
        </trans-unit>
        <trans-unit id="7a2a762d4b705d6c7417927db0fcb35f566a94e9" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_REPL_TYPE</source>
          <target state="translated">ERR_INVALID_REPL_TYPE</target>
        </trans-unit>
        <trans-unit id="bb5e06f426ba9ad40e90735df17af9f4802283b4" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_RETURN_PROPERTY</source>
          <target state="translated">ERR_INVALID_RETURN_PROPERTY</target>
        </trans-unit>
        <trans-unit id="06c60e55338ea53b5b928fe40d0567a8f2dbe317" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_RETURN_PROPERTY_VALUE</source>
          <target state="translated">ERR_INVALID_RETURN_PROPERTY_VALUE</target>
        </trans-unit>
        <trans-unit id="67f4cb49f73ee99168dde41008aa3e72a969fb8b" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_RETURN_VALUE</source>
          <target state="translated">ERR_INVALID_RETURN_VALUE</target>
        </trans-unit>
        <trans-unit id="651860ee91840b9dacf3614367c31a55c7490324" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_SYNC_FORK_INPUT</source>
          <target state="translated">ERR_INVALID_SYNC_FORK_INPUT</target>
        </trans-unit>
        <trans-unit id="1308c30eadc08699025b251a22ad248131ead4a3" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_THIS</source>
          <target state="translated">ERR_INVALID_THIS</target>
        </trans-unit>
        <trans-unit id="f76231e1df70f7148fbbe558b80bbf12cb96f4a2" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_TRANSFER_OBJECT</source>
          <target state="translated">ERR_INVALID_TRANSFER_OBJECT</target>
        </trans-unit>
        <trans-unit id="459021a97de541eda7ce0147886b15d66f526d73" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_TUPLE</source>
          <target state="translated">ERR_INVALID_TUPLE</target>
        </trans-unit>
        <trans-unit id="9a404621774c667cc53bd5901f29ea5333fb8929" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_URI</source>
          <target state="translated">ERR_INVALID_URI</target>
        </trans-unit>
        <trans-unit id="6904f7edef74143ade7ab9ed430786a6bf34da30" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_URL</source>
          <target state="translated">ERR_INVALID_URL</target>
        </trans-unit>
        <trans-unit id="a0fbf71fc69497d8e52002c8eb73bd44581a3c4a" translate="yes" xml:space="preserve">
          <source>ERR_INVALID_URL_SCHEME</source>
          <target state="translated">ERR_INVALID_URL_SCHEME</target>
        </trans-unit>
        <trans-unit id="f01ad371de0cb4f9ae958435bce386178a436488" translate="yes" xml:space="preserve">
          <source>ERR_IPC_CHANNEL_CLOSED</source>
          <target state="translated">ERR_IPC_CHANNEL_CLOSED</target>
        </trans-unit>
        <trans-unit id="5a7eefb5c8ce3c129544d017de50e119adf41fac" translate="yes" xml:space="preserve">
          <source>ERR_IPC_DISCONNECTED</source>
          <target state="translated">ERR_IPC_DISCONNECTED</target>
        </trans-unit>
        <trans-unit id="f2ab849c563a7e5e1d10c30fcf3bbbeb5faaf58a" translate="yes" xml:space="preserve">
          <source>ERR_IPC_ONE_PIPE</source>
          <target state="translated">ERR_IPC_ONE_PIPE</target>
        </trans-unit>
        <trans-unit id="22d168923c33fb6904c89825768e8d3b7faf73a8" translate="yes" xml:space="preserve">
          <source>ERR_IPC_SYNC_FORK</source>
          <target state="translated">ERR_IPC_SYNC_FORK</target>
        </trans-unit>
        <trans-unit id="9e0a8e878e9709fde3e4898d7996ac8819664a48" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_ASSERT_INTEGRITY</source>
          <target state="translated">ERR_MANIFEST_ASSERT_INTEGRITY</target>
        </trans-unit>
        <trans-unit id="d4c3b4e59ecaaa9ff4cfdff68c7697ddcf4fdfb9" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_DEPENDENCY_MISSING</source>
          <target state="translated">ERR_MANIFEST_DEPENDENCY_MISSING</target>
        </trans-unit>
        <trans-unit id="6a9f77e220771d9f56410909c54c90070d209071" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_INTEGRITY_MISMATCH</source>
          <target state="translated">ERR_MANIFEST_INTEGRITY_MISMATCH</target>
        </trans-unit>
        <trans-unit id="751017af75c225bb8ea86a9a6adad985bb5bbfcb" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_INVALID_RESOURCE_FIELD</source>
          <target state="translated">ERR_MANIFEST_INVALID_RESOURCE_FIELD</target>
        </trans-unit>
        <trans-unit id="68907b3571fc8bfe5fd4ac726bc5b2c4c0e7e884" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_PARSE_POLICY</source>
          <target state="translated">ERR_MANIFEST_PARSE_POLICY</target>
        </trans-unit>
        <trans-unit id="fd7fcc94cabc1a87f16b3f9bb8a1118396444c25" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_TDZ</source>
          <target state="translated">ERR_MANIFEST_TDZ</target>
        </trans-unit>
        <trans-unit id="60dcab87cb98e3639365cce6d93b7dde2b516182" translate="yes" xml:space="preserve">
          <source>ERR_MANIFEST_UNKNOWN_ONERROR</source>
          <target state="translated">ERR_MANIFEST_UNKNOWN_ONERROR</target>
        </trans-unit>
        <trans-unit id="2777f08457b6cec56b6b8e247297240d5abea40e" translate="yes" xml:space="preserve">
          <source>ERR_MEMORY_ALLOCATION_FAILED</source>
          <target state="translated">ERR_MEMORY_ALLOCATION_FAILED</target>
        </trans-unit>
        <trans-unit id="b0786739ceda75f1d1b51fe8a81c06652d4cabca" translate="yes" xml:space="preserve">
          <source>ERR_METHOD_NOT_IMPLEMENTED</source>
          <target state="translated">ERR_METHOD_NOT_IMPLEMENTED</target>
        </trans-unit>
        <trans-unit id="fd51d0d180aeb5dc23a0fbec9ae973006e0ece88" translate="yes" xml:space="preserve">
          <source>ERR_MISSING_ARGS</source>
          <target state="translated">ERR_MISSING_ARGS</target>
        </trans-unit>
        <trans-unit id="829d3371a83f3e3cb1edc277c455bedc30e3db2a" translate="yes" xml:space="preserve">
          <source>ERR_MISSING_DYNAMIC_INSTANTIATE_HOOK</source>
          <target state="translated">ERR_MISSING_DYNAMIC_INSTANTIATE_HOOK</target>
        </trans-unit>
        <trans-unit id="7451b2a3f855709e9a70c5e12bbc1c94d252f6cc" translate="yes" xml:space="preserve">
          <source>ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST</source>
          <target state="translated">ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST</target>
        </trans-unit>
        <trans-unit id="704367a65b0e8de38dcb7d6aa78519c16f2051be" translate="yes" xml:space="preserve">
          <source>ERR_MISSING_PASSPHRASE</source>
          <target state="translated">ERR_MISSING_PASSPHRASE</target>
        </trans-unit>
        <trans-unit id="e7c507f0fcaae98711ba5795278830f8a6cfb9a0" translate="yes" xml:space="preserve">
          <source>ERR_MISSING_PLATFORM_FOR_WORKER</source>
          <target state="translated">ERR_MISSING_PLATFORM_FOR_WORKER</target>
        </trans-unit>
        <trans-unit id="8d8d9b50482831ad3ef9fc99e2408470afc1efac" translate="yes" xml:space="preserve">
          <source>ERR_MODULE_NOT_FOUND</source>
          <target state="translated">ERR_MODULE_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="000ff7ce503bf66e12601d28bca62301738a5fa0" translate="yes" xml:space="preserve">
          <source>ERR_MULTIPLE_CALLBACK</source>
          <target state="translated">ERR_MULTIPLE_CALLBACK</target>
        </trans-unit>
        <trans-unit id="29d53b9bdeb1e91a24a85ec4318e3e0f76553455" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_CONS_FUNCTION</source>
          <target state="translated">ERR_NAPI_CONS_FUNCTION</target>
        </trans-unit>
        <trans-unit id="fa4a8b81e14757b8e60cd1ba923cb01970de5d1a" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_CONS_PROTOTYPE_OBJECT</source>
          <target state="translated">ERR_NAPI_CONS_PROTOTYPE_OBJECT</target>
        </trans-unit>
        <trans-unit id="60db2e811ab56b1a0b9fb629edb9c6204ccc37c3" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_INVALID_DATAVIEW_ARGS</source>
          <target state="translated">ERR_NAPI_INVALID_DATAVIEW_ARGS</target>
        </trans-unit>
        <trans-unit id="cc7346d05a6c525e526948da9902a7609c35900d" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT</source>
          <target state="translated">ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT</target>
        </trans-unit>
        <trans-unit id="092fc511ae342bbd208da4fd4cecd6667b3ddcc9" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_INVALID_TYPEDARRAY_LENGTH</source>
          <target state="translated">ERR_NAPI_INVALID_TYPEDARRAY_LENGTH</target>
        </trans-unit>
        <trans-unit id="5fe76e3cefc5740631571e3482a6ed1966df5b59" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_TSFN_CALL_JS</source>
          <target state="translated">ERR_NAPI_TSFN_CALL_JS</target>
        </trans-unit>
        <trans-unit id="bbd9366ef33ae56fa36068d11a1ffd4ce144678c" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_TSFN_GET_UNDEFINED</source>
          <target state="translated">ERR_NAPI_TSFN_GET_UNDEFINED</target>
        </trans-unit>
        <trans-unit id="78d1a4c17393c8d05bb41479fbc5d52dadd1d8a4" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_TSFN_START_IDLE_LOOP</source>
          <target state="translated">ERR_NAPI_TSFN_START_IDLE_LOOP</target>
        </trans-unit>
        <trans-unit id="65f9536867537d402df99dca61cd8b5f38b12892" translate="yes" xml:space="preserve">
          <source>ERR_NAPI_TSFN_STOP_IDLE_LOOP</source>
          <target state="translated">ERR_NAPI_TSFN_STOP_IDLE_LOOP</target>
        </trans-unit>
        <trans-unit id="f09b5ec4484665cdd46918972dc9600e78f8a99a" translate="yes" xml:space="preserve">
          <source>ERR_NO_CRYPTO</source>
          <target state="translated">ERR_NO_CRYPTO</target>
        </trans-unit>
        <trans-unit id="94df159ef28f34f0013f9d08867a4eaf8dccd0f2" translate="yes" xml:space="preserve">
          <source>ERR_NO_ICU</source>
          <target state="translated">ERR_NO_ICU</target>
        </trans-unit>
        <trans-unit id="0d478b264f9f526f7ea9c217607d363df587446e" translate="yes" xml:space="preserve">
          <source>ERR_NO_LONGER_SUPPORTED</source>
          <target state="translated">ERR_NO_LONGER_SUPPORTED</target>
        </trans-unit>
        <trans-unit id="4fd1c5a82f0fbeff2a0f9e510983f47380710a4d" translate="yes" xml:space="preserve">
          <source>ERR_OUTOFMEMORY</source>
          <target state="translated">ERR_OUTOFMEMORY</target>
        </trans-unit>
        <trans-unit id="ba2276e6dc44390f273be39d777922d5d02747df" translate="yes" xml:space="preserve">
          <source>ERR_OUT_OF_RANGE</source>
          <target state="translated">ERR_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="854ec34d83adf1deaeb5a9a72b1f2eeb86576464" translate="yes" xml:space="preserve">
          <source>ERR_PARSE_HISTORY_DATA</source>
          <target state="translated">ERR_PARSE_HISTORY_DATA</target>
        </trans-unit>
        <trans-unit id="c911687070b5a091ae5e3ff03367999510a539d7" translate="yes" xml:space="preserve">
          <source>ERR_REQUIRE_ESM</source>
          <target state="translated">ERR_REQUIRE_ESM</target>
        </trans-unit>
        <trans-unit id="007bb21f263f42d884c6b9733a41fe0750b60035" translate="yes" xml:space="preserve">
          <source>ERR_SCRIPT_EXECUTION_INTERRUPTED</source>
          <target state="translated">ERR_SCRIPT_EXECUTION_INTERRUPTED</target>
        </trans-unit>
        <trans-unit id="4e960b57324853e50e828b23dbafd237419a07b9" translate="yes" xml:space="preserve">
          <source>ERR_SCRIPT_EXECUTION_TIMEOUT</source>
          <target state="translated">ERR_SCRIPT_EXECUTION_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="aa86f1f6cca80b57176a704f9d2a688657440e3f" translate="yes" xml:space="preserve">
          <source>ERR_SERVER_ALREADY_LISTEN</source>
          <target state="translated">ERR_SERVER_ALREADY_LISTEN</target>
        </trans-unit>
        <trans-unit id="c8f8104da59654f25ee3e442484df959251c44ce" translate="yes" xml:space="preserve">
          <source>ERR_SERVER_NOT_RUNNING</source>
          <target state="translated">ERR_SERVER_NOT_RUNNING</target>
        </trans-unit>
        <trans-unit id="6526a885ed98d18799d71f0de0b1c3d272a2457b" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_ALREADY_BOUND</source>
          <target state="translated">ERR_SOCKET_ALREADY_BOUND</target>
        </trans-unit>
        <trans-unit id="c4c70cfc3a374a0edab403b9e281433a230caa3e" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_BAD_BUFFER_SIZE</source>
          <target state="translated">ERR_SOCKET_BAD_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="c1605884949bcb0873332deccc98fbc215d0f708" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_BAD_PORT</source>
          <target state="translated">ERR_SOCKET_BAD_PORT</target>
        </trans-unit>
        <trans-unit id="b6164206af784e911413de6da539d41790dd9b0a" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_BAD_TYPE</source>
          <target state="translated">ERR_SOCKET_BAD_TYPE</target>
        </trans-unit>
        <trans-unit id="e7360654fec6bedaeb7830fcb9f08783fea3d3b2" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_BUFFER_SIZE</source>
          <target state="translated">ERR_SOCKET_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="b2864b2ee3b55801ff89c1886d38fc1a176bdf55" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_CANNOT_SEND</source>
          <target state="translated">ERR_SOCKET_CANNOT_SEND</target>
        </trans-unit>
        <trans-unit id="1f166f441fdecf89d9aa9396ba25401c1e872243" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_CLOSED</source>
          <target state="translated">ERR_SOCKET_CLOSED</target>
        </trans-unit>
        <trans-unit id="af656ccdb115a96adf3b0f815e526b60e3ba433c" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_DGRAM_IS_CONNECTED</source>
          <target state="translated">ERR_SOCKET_DGRAM_IS_CONNECTED</target>
        </trans-unit>
        <trans-unit id="c73553b76237a4b522eff74b1a74cd53b10c5984" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_DGRAM_NOT_CONNECTED</source>
          <target state="translated">ERR_SOCKET_DGRAM_NOT_CONNECTED</target>
        </trans-unit>
        <trans-unit id="0667e50d2aeffea4e4771b381af9d7f860bf36b8" translate="yes" xml:space="preserve">
          <source>ERR_SOCKET_DGRAM_NOT_RUNNING</source>
          <target state="translated">ERR_SOCKET_DGRAM_NOT_RUNNING</target>
        </trans-unit>
        <trans-unit id="0b47462666e5ae47b57d0a0142d3ccf1d845a894" translate="yes" xml:space="preserve">
          <source>ERR_SRI_PARSE</source>
          <target state="translated">ERR_SRI_PARSE</target>
        </trans-unit>
        <trans-unit id="e0ef89ab36fa44048a495117af4b1e82a1ef209b" translate="yes" xml:space="preserve">
          <source>ERR_STDERR_CLOSE</source>
          <target state="translated">ERR_STDERR_CLOSE</target>
        </trans-unit>
        <trans-unit id="5bb0e823fc81811440f91bb55df4673807b6b187" translate="yes" xml:space="preserve">
          <source>ERR_STDOUT_CLOSE</source>
          <target state="translated">ERR_STDOUT_CLOSE</target>
        </trans-unit>
        <trans-unit id="a2b63b174dfc1f588268bc4a981cb66c18520b56" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_CANNOT_PIPE</source>
          <target state="translated">ERR_STREAM_CANNOT_PIPE</target>
        </trans-unit>
        <trans-unit id="320e0e11f4672ce92ae86f3be015652262a00507" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_DESTROYED</source>
          <target state="translated">ERR_STREAM_DESTROYED</target>
        </trans-unit>
        <trans-unit id="adadd0bdc6a0df853c241b26a7a338d0af5a1399" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_HAS_STRINGDECODER</source>
          <target state="translated">ERR_STREAM_HAS_STRINGDECODER</target>
        </trans-unit>
        <trans-unit id="d5aeb683f47cc3ac1637835a71d5b8a024f54878" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_NULL_VALUES</source>
          <target state="translated">ERR_STREAM_NULL_VALUES</target>
        </trans-unit>
        <trans-unit id="74c2d3df84ebe17c9fa15c2f1b98ff08a949c9d6" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_PREMATURE_CLOSE</source>
          <target state="translated">ERR_STREAM_PREMATURE_CLOSE</target>
        </trans-unit>
        <trans-unit id="450788df14031d803e289a98b2495bce5260b1fd" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_PUSH_AFTER_EOF</source>
          <target state="translated">ERR_STREAM_PUSH_AFTER_EOF</target>
        </trans-unit>
        <trans-unit id="9f7910e6b150ae5ca0e9364def9cf6be7b2f4165" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_READ_NOT_IMPLEMENTED</source>
          <target state="translated">ERR_STREAM_READ_NOT_IMPLEMENTED</target>
        </trans-unit>
        <trans-unit id="ff0408882e690907a0ab96d32708e9879f20b657" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_UNSHIFT_AFTER_END_EVENT</source>
          <target state="translated">ERR_STREAM_UNSHIFT_AFTER_END_EVENT</target>
        </trans-unit>
        <trans-unit id="bbba0b5ca8cd7ecc094a8b53a3db6569f7742c32" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_WRAP</source>
          <target state="translated">ERR_STREAM_WRAP</target>
        </trans-unit>
        <trans-unit id="2e4a98ef3308050f78fe5a3b9190afb6dc4eeafd" translate="yes" xml:space="preserve">
          <source>ERR_STREAM_WRITE_AFTER_END</source>
          <target state="translated">ERR_STREAM_WRITE_AFTER_END</target>
        </trans-unit>
        <trans-unit id="a1984da3482e3337182840c345604f0c70c1c490" translate="yes" xml:space="preserve">
          <source>ERR_STRING_TOO_LARGE</source>
          <target state="translated">ERR_STRING_TOO_LARGE</target>
        </trans-unit>
        <trans-unit id="6726aff681cfee0b86f87f68dfe3524d8ff383e4" translate="yes" xml:space="preserve">
          <source>ERR_STRING_TOO_LONG</source>
          <target state="translated">ERR_STRING_TOO_LONG</target>
        </trans-unit>
        <trans-unit id="39a07a307c1c943ab3d64c7e831466f72f2718ac" translate="yes" xml:space="preserve">
          <source>ERR_SYNTHETIC</source>
          <target state="translated">ERR_SYNTHETIC</target>
        </trans-unit>
        <trans-unit id="8c5c1a1164debe4767f78cb89a76bfbdd7187ae2" translate="yes" xml:space="preserve">
          <source>ERR_SYSTEM_ERROR</source>
          <target state="translated">ERR_SYSTEM_ERROR</target>
        </trans-unit>
        <trans-unit id="aaf14eefe1da5220bfb938b85f6c5b9516cd1035" translate="yes" xml:space="preserve">
          <source>ERR_TLS_CERT_ALTNAME_INVALID</source>
          <target state="translated">ERR_TLS_CERT_ALTNAME_INVALID</target>
        </trans-unit>
        <trans-unit id="1b4af03092814a20f2fce133910653c37e7e50d3" translate="yes" xml:space="preserve">
          <source>ERR_TLS_DH_PARAM_SIZE</source>
          <target state="translated">ERR_TLS_DH_PARAM_SIZE</target>
        </trans-unit>
        <trans-unit id="7f3da8ccb99e8295763f89274d197041f65ae091" translate="yes" xml:space="preserve">
          <source>ERR_TLS_HANDSHAKE_TIMEOUT</source>
          <target state="translated">ERR_TLS_HANDSHAKE_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="ec8060b58148dd350ef010d6cb780be3d64dc809" translate="yes" xml:space="preserve">
          <source>ERR_TLS_INVALID_PROTOCOL_METHOD</source>
          <target state="translated">ERR_TLS_INVALID_PROTOCOL_METHOD</target>
        </trans-unit>
        <trans-unit id="bdcccef5607f6d00208ebfb74dc75d07a8c2f756" translate="yes" xml:space="preserve">
          <source>ERR_TLS_INVALID_PROTOCOL_VERSION</source>
          <target state="translated">ERR_TLS_INVALID_PROTOCOL_VERSION</target>
        </trans-unit>
        <trans-unit id="ef8b90c0ee05c3d0d359bf934bdf360dd17278a9" translate="yes" xml:space="preserve">
          <source>ERR_TLS_PROTOCOL_VERSION_CONFLICT</source>
          <target state="translated">ERR_TLS_PROTOCOL_VERSION_CONFLICT</target>
        </trans-unit>
        <trans-unit id="b194c3c088ad786f18e04d25e0e01700aa3ccc41" translate="yes" xml:space="preserve">
          <source>ERR_TLS_RENEGOTIATION_DISABLED</source>
          <target state="translated">ERR_TLS_RENEGOTIATION_DISABLED</target>
        </trans-unit>
        <trans-unit id="304692542a2a1a491b4f19d638f0c5cd2abaac56" translate="yes" xml:space="preserve">
          <source>ERR_TLS_RENEGOTIATION_FAILED</source>
          <target state="translated">ERR_TLS_RENEGOTIATION_FAILED</target>
        </trans-unit>
        <trans-unit id="770a9ca71049fab9b4fbad1c2575f51de572dc1b" translate="yes" xml:space="preserve">
          <source>ERR_TLS_REQUIRED_SERVER_NAME</source>
          <target state="translated">ERR_TLS_REQUIRED_SERVER_NAME</target>
        </trans-unit>
        <trans-unit id="8aefd29e21e0b5396b76e476bc761265915a8c25" translate="yes" xml:space="preserve">
          <source>ERR_TLS_SESSION_ATTACK</source>
          <target state="translated">ERR_TLS_SESSION_ATTACK</target>
        </trans-unit>
        <trans-unit id="39aa2661ac7af531684fa28691d1a8c657f623db" translate="yes" xml:space="preserve">
          <source>ERR_TLS_SNI_FROM_SERVER</source>
          <target state="translated">ERR_TLS_SNI_FROM_SERVER</target>
        </trans-unit>
        <trans-unit id="5a430d911b02e45d219d3a81fdf6cd7d36eea35d" translate="yes" xml:space="preserve">
          <source>ERR_TRACE_EVENTS_CATEGORY_REQUIRED</source>
          <target state="translated">ERR_TRACE_EVENTS_CATEGORY_REQUIRED</target>
        </trans-unit>
        <trans-unit id="bd3868d6f5fa9a1f62ecb6ad715b00809cfdcdc0" translate="yes" xml:space="preserve">
          <source>ERR_TRACE_EVENTS_UNAVAILABLE</source>
          <target state="translated">ERR_TRACE_EVENTS_UNAVAILABLE</target>
        </trans-unit>
        <trans-unit id="35675dd0ba380b663ef383e2d8e76d9fdeac7aeb" translate="yes" xml:space="preserve">
          <source>ERR_TRANSFERRING_EXTERNALIZED_SHAREDARRAYBUFFER</source>
          <target state="translated">ERR_TRANSFERRING_EXTERNALIZED_SHAREDARRAYBUFFER</target>
        </trans-unit>
        <trans-unit id="5ce9c9930b4fde2ad46783b6b96243f738073f87" translate="yes" xml:space="preserve">
          <source>ERR_TRANSFORM_ALREADY_TRANSFORMING</source>
          <target state="translated">ERR_TRANSFORM_ALREADY_TRANSFORMING</target>
        </trans-unit>
        <trans-unit id="0c3b9366f301c844a65c5d564ad360009eb8eb8d" translate="yes" xml:space="preserve">
          <source>ERR_TRANSFORM_WITH_LENGTH_0</source>
          <target state="translated">ERR_TRANSFORM_WITH_LENGTH_0</target>
        </trans-unit>
        <trans-unit id="575175cb196641cc60df3b5367e7f3f8bb17bd75" translate="yes" xml:space="preserve">
          <source>ERR_TTY_INIT_FAILED</source>
          <target state="translated">ERR_TTY_INIT_FAILED</target>
        </trans-unit>
        <trans-unit id="2b895fa5493042504802a3553fb6b1e3d5b5d795" translate="yes" xml:space="preserve">
          <source>ERR_TTY_WRITABLE_NOT_READABLE</source>
          <target state="translated">ERR_TTY_WRITABLE_NOT_READABLE</target>
        </trans-unit>
        <trans-unit id="d3ba2224bf81564c3042f50a647df55e32e6293c" translate="yes" xml:space="preserve">
          <source>ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET</source>
          <target state="translated">ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET</target>
        </trans-unit>
        <trans-unit id="18e0d7aeaa30f4c9b2402ffc2915eecd0bc7ad19" translate="yes" xml:space="preserve">
          <source>ERR_UNESCAPED_CHARACTERS</source>
          <target state="translated">ERR_UNESCAPED_CHARACTERS</target>
        </trans-unit>
        <trans-unit id="35d8b3230774b935d5652cf79b308baa286773a5" translate="yes" xml:space="preserve">
          <source>ERR_UNHANDLED_ERROR</source>
          <target state="translated">ERR_UNHANDLED_ERROR</target>
        </trans-unit>
        <trans-unit id="9ec443e5941d9c05f2335387e19e9c4455487e49" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_BUILTIN_MODULE</source>
          <target state="translated">ERR_UNKNOWN_BUILTIN_MODULE</target>
        </trans-unit>
        <trans-unit id="43309bb827b7f413aeed6bda6764cc49c149f4b0" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_CREDENTIAL</source>
          <target state="translated">ERR_UNKNOWN_CREDENTIAL</target>
        </trans-unit>
        <trans-unit id="e958f0d58a72e0f214fbd206ff5cee9c7dd424d3" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_ENCODING</source>
          <target state="translated">ERR_UNKNOWN_ENCODING</target>
        </trans-unit>
        <trans-unit id="25c2032c56138b588e82c7d2b44e1a230b186e7c" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_FILE_EXTENSION</source>
          <target state="translated">ERR_UNKNOWN_FILE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="4d1128480e06470ba6cc48503f4923121b4ffd83" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_MODULE_FORMAT</source>
          <target state="translated">ERR_UNKNOWN_MODULE_FORMAT</target>
        </trans-unit>
        <trans-unit id="ddfe7e890f28b25ce4b574b63dbe8f1024026350" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_SIGNAL</source>
          <target state="translated">ERR_UNKNOWN_SIGNAL</target>
        </trans-unit>
        <trans-unit id="370b3483a1893846bb8f4e9e661992d083857fbb" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_STDIN_TYPE</source>
          <target state="translated">ERR_UNKNOWN_STDIN_TYPE</target>
        </trans-unit>
        <trans-unit id="8467e9778340521db89775c8840bfbcae1c7aa19" translate="yes" xml:space="preserve">
          <source>ERR_UNKNOWN_STREAM_TYPE</source>
          <target state="translated">ERR_UNKNOWN_STREAM_TYPE</target>
        </trans-unit>
        <trans-unit id="3960d6b18b68687c1437872d0ec6a2e0bebf4bae" translate="yes" xml:space="preserve">
          <source>ERR_V8BREAKITERATOR</source>
          <target state="translated">ERR_V8BREAKITERATOR</target>
        </trans-unit>
        <trans-unit id="d60090c3847b07a108b9e18e011b8fc174390e5c" translate="yes" xml:space="preserve">
          <source>ERR_VALID_PERFORMANCE_ENTRY_TYPE</source>
          <target state="translated">ERR_VALID_PERFORMANCE_ENTRY_TYPE</target>
        </trans-unit>
        <trans-unit id="a5a8f667aac0739b638d96638ba263594e25e9b8" translate="yes" xml:space="preserve">
          <source>ERR_VALUE_OUT_OF_RANGE</source>
          <target state="translated">ERR_VALUE_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="275ff00436e2a813b898f97deaecc19bc5da3e8b" translate="yes" xml:space="preserve">
          <source>ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING</source>
          <target state="translated">ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING</target>
        </trans-unit>
        <trans-unit id="373f6e043e9224c3c8af6051c270121aa34f6cc1" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_ALREADY_LINKED</source>
          <target state="translated">ERR_VM_MODULE_ALREADY_LINKED</target>
        </trans-unit>
        <trans-unit id="7b15e50067c53b126f3d6a1c5cd703f2eaf9658b" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_DIFFERENT_CONTEXT</source>
          <target state="translated">ERR_VM_MODULE_DIFFERENT_CONTEXT</target>
        </trans-unit>
        <trans-unit id="405334bdd68ded7665771933ffeb721af555b730" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_LINKING_ERRORED</source>
          <target state="translated">ERR_VM_MODULE_LINKING_ERRORED</target>
        </trans-unit>
        <trans-unit id="e768ca7f06ee9c1d12f16342d38470487fe0a9d2" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_NOT_LINKED</source>
          <target state="translated">ERR_VM_MODULE_NOT_LINKED</target>
        </trans-unit>
        <trans-unit id="44b9fbdf7133b7dfa340ba19513923eb7018cd64" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_NOT_MODULE</source>
          <target state="translated">ERR_VM_MODULE_NOT_MODULE</target>
        </trans-unit>
        <trans-unit id="ac0813d577a022014426cc62f140ba285364a564" translate="yes" xml:space="preserve">
          <source>ERR_VM_MODULE_STATUS</source>
          <target state="translated">ERR_VM_MODULE_STATUS</target>
        </trans-unit>
        <trans-unit id="6882e343a3a29fb854882d2a6f1022b7b74e0a7b" translate="yes" xml:space="preserve">
          <source>ERR_WORKER_INVALID_EXEC_ARGV</source>
          <target state="translated">ERR_WORKER_INVALID_EXEC_ARGV</target>
        </trans-unit>
        <trans-unit id="160f3287a95665b7c55a6065833c07b16ac28f3c" translate="yes" xml:space="preserve">
          <source>ERR_WORKER_PATH</source>
          <target state="translated">ERR_WORKER_PATH</target>
        </trans-unit>
        <trans-unit id="75ba500471a36972df41b89d296a0c398689cd15" translate="yes" xml:space="preserve">
          <source>ERR_WORKER_UNSERIALIZABLE_ERROR</source>
          <target state="translated">ERR_WORKER_UNSERIALIZABLE_ERROR</target>
        </trans-unit>
        <trans-unit id="df6ef6404f89bdda823dc7e5eb85c90825fe9f23" translate="yes" xml:space="preserve">
          <source>ERR_WORKER_UNSUPPORTED_EXTENSION</source>
          <target state="translated">ERR_WORKER_UNSUPPORTED_EXTENSION</target>
        </trans-unit>
        <trans-unit id="dd9f6da9741421600ac9676f88e3aa39efd4ebe2" translate="yes" xml:space="preserve">
          <source>ERR_WORKER_UNSUPPORTED_OPERATION</source>
          <target state="translated">ERR_WORKER_UNSUPPORTED_OPERATION</target>
        </trans-unit>
        <trans-unit id="3245f5622e48493b93cc2e3e313831a89c6e1d07" translate="yes" xml:space="preserve">
          <source>ERR_ZLIB_BINDING_CLOSED</source>
          <target state="translated">ERR_ZLIB_BINDING_CLOSED</target>
        </trans-unit>
        <trans-unit id="f60d611bb066f3fedd623385edfb403c10bed4b1" translate="yes" xml:space="preserve">
          <source>ERR_ZLIB_INITIALIZATION_FAILED</source>
          <target state="translated">ERR_ZLIB_INITIALIZATION_FAILED</target>
        </trans-unit>
        <trans-unit id="4fccb723194eb71d93333975a120466aec0e17f9" translate="yes" xml:space="preserve">
          <source>ES modules are resolved and cached based upon &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;URL&lt;/a&gt; semantics. This means that files containing special characters such as &lt;code&gt;#&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; need to be escaped.</source>
          <target state="translated">ES 모듈은 &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;URL&lt;/a&gt; 의미를 기반으로 해결되고 캐시됩니다 . 이는 &lt;code&gt;#&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 와 같은 특수 문자가 포함 된 파일을 의미합니다 . 탈출해야합니다.</target>
        </trans-unit>
        <trans-unit id="1931fded5c4697fc23a1e081459b213a9df1e792" translate="yes" xml:space="preserve">
          <source>ES6 example using &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 및 &lt;code&gt;extends&lt;/code&gt; 사용하는 ES6 예제 :</target>
        </trans-unit>
        <trans-unit id="bf0ec5fb15471442456c7213a6aff2240ace6930" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Http2Session&lt;/code&gt; instance will exhibit slightly different behaviors depending on whether it is operating as a server or a client. The &lt;code&gt;http2session.type&lt;/code&gt; property can be used to determine the mode in which an &lt;code&gt;Http2Session&lt;/code&gt; is operating. On the server side, user code should rarely have occasion to work with the &lt;code&gt;Http2Session&lt;/code&gt; object directly, with most actions typically taken through interactions with either the &lt;code&gt;Http2Server&lt;/code&gt; or &lt;code&gt;Http2Stream&lt;/code&gt; objects.</source>
          <target state="translated">각 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스는 서버 또는 클라이언트로 작동하는지에 따라 약간 다른 동작을 나타냅니다. &lt;code&gt;http2session.type&lt;/code&gt; 의 속성은되는 모드 결정하는데 사용될 수있다 &lt;code&gt;Http2Session&lt;/code&gt; 가 작동된다. 서버 측에서 사용자 코드는 &lt;code&gt;Http2Session&lt;/code&gt; 객체를 직접 사용할 기회가 거의 없으며 대부분의 작업은 일반적으로 &lt;code&gt;Http2Server&lt;/code&gt; 또는 &lt;code&gt;Http2Stream&lt;/code&gt; 객체 와의 상호 작용을 통해 수행 됩니다.</target>
        </trans-unit>
        <trans-unit id="dab05b3a729222eb751675b8dfdc69ffa77ae75d" translate="yes" xml:space="preserve">
          <source>Each Brotli-based class takes an &lt;code&gt;options&lt;/code&gt; object. All options are optional.</source>
          <target state="translated">각 Brotli 기반 클래스는 &lt;code&gt;options&lt;/code&gt; 객체를 사용합니다. 모든 옵션은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="090f7cf3224ad9555789b57881bf86331d6e9a3c" translate="yes" xml:space="preserve">
          <source>Each DNS query can return one of the following error codes:</source>
          <target state="translated">각 DNS 쿼리는 다음 오류 코드 중 하나를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d97f73d7ff51019553a9b2d93ab10e77202d4451" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Http2Stream&lt;/code&gt; class represents a bidirectional HTTP/2 communications stream over an &lt;code&gt;Http2Session&lt;/code&gt; instance. Any single &lt;code&gt;Http2Session&lt;/code&gt; may have up to 2&lt;sup&gt;31&lt;/sup&gt;-1 &lt;code&gt;Http2Stream&lt;/code&gt; instances over its lifetime.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; 클래스 의 각 인스턴스 는 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스를 통한 양방향 HTTP / 2 통신 스트림을 나타냅니다 . 단일 &lt;code&gt;Http2Session&lt;/code&gt; 은 수명 동안 최대 2 개의 &lt;sup&gt;31&lt;/sup&gt; -1 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스 를 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="123b26ff79936518466cf91b3e4dd5f864f2f116" translate="yes" xml:space="preserve">
          <source>Each invalid character is now replaced by a single replacement character instead of one for each individual byte.</source>
          <target state="translated">각 유효하지 않은 문자는 이제 개별 바이트 당 하나씩 대신 단일 대체 문자로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="7f9a3fec9b97a9794800b70cb620e0e9d9ecc44d" translate="yes" xml:space="preserve">
          <source>Each key on the returned object identifies a network interface. The associated value is an array of objects that each describe an assigned network address.</source>
          <target state="translated">반환 된 객체의 각 키는 네트워크 인터페이스를 식별합니다. 관련 값은 할당 된 네트워크 주소를 각각 설명하는 객체 배열입니다.</target>
        </trans-unit>
        <trans-unit id="66edb3d7fdc4748b66ef594e342a5bcc57b1181d" translate="yes" xml:space="preserve">
          <source>Each new worker is given its own unique id, this id is stored in the &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">각각의 새로운 노동자는이 ID는에 저장되어, 고유 ID를 부여 &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="125909b0bce9d9b8e52bc936c581019755a9f074" translate="yes" xml:space="preserve">
          <source>Each of the examples illustrated in this document make direct use of the Node.js and V8 APIs for implementing Addons. It is important to understand that the V8 API can, and has, changed dramatically from one V8 release to the next (and one major Node.js release to the next). With each change, Addons may need to be updated and recompiled in order to continue functioning. The Node.js release schedule is designed to minimize the frequency and impact of such changes but there is little that Node.js can do currently to ensure stability of the V8 APIs.</source>
          <target state="translated">이 문서에 설명 된 각 예제는 Addons 구현에 Node.js 및 V8 API를 직접 사용합니다. V8 API는 하나의 V8 릴리스에서 다음 버전으로 (그리고 하나의 주요 Node.js 릴리스에서 다음 버전으로) 크게 변할 수 있으며 현재도이를 이해해야합니다. 변경 될 때마다 기능을 계속하려면 애드온을 업데이트하고 다시 컴파일해야 할 수도 있습니다. Node.js 릴리스 일정은 이러한 변경의 빈도와 영향을 최소화하도록 설계되었지만 Node.js가 V8 API의 안정성을 보장하기 위해 현재 할 수있는 일은 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="11afac2288d49f0a35265e995632dc90d28ff826" translate="yes" xml:space="preserve">
          <source>Each of the methods returns a &lt;a href=&quot;#child_process_child_process&quot;&gt;&lt;code&gt;ChildProcess&lt;/code&gt;&lt;/a&gt; instance. These objects implement the Node.js &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; API, allowing the parent process to register listener functions that are called when certain events occur during the life cycle of the child process.</source>
          <target state="translated">각 메소드는 &lt;a href=&quot;#child_process_child_process&quot;&gt; &lt;code&gt;ChildProcess&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴 합니다. 이러한 객체는 Node.js &lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; API를 구현하여 부모 프로세스가 자식 프로세스의 수명주기 동안 특정 이벤트가 발생할 때 호출되는 리스너 함수를 등록 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="87cdb05e381010b7056f106540a769a6537a03b6" translate="yes" xml:space="preserve">
          <source>Each of these examples using the following &lt;code&gt;binding.gyp&lt;/code&gt; file:</source>
          <target state="translated">이 예제 각각은 다음 &lt;code&gt;binding.gyp&lt;/code&gt; 파일을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="2ed79c1af0552b7a12914314fd2abf3d5d21f103" translate="yes" xml:space="preserve">
          <source>Each resource listed in the policy manifest can be of one the following formats to determine its location:</source>
          <target state="translated">정책 매니페스트에 나열된 각 리소스는 위치를 결정하기 위해 다음 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="337065827c6a2ff340dd440d8be7d54c01e77e8c" translate="yes" xml:space="preserve">
          <source>Each zlib-based class takes an &lt;code&gt;options&lt;/code&gt; object. All options are optional.</source>
          <target state="translated">각 zlib 기반 클래스는 &lt;code&gt;options&lt;/code&gt; 객체를 사용합니다. 모든 옵션은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="ae4eb82b03752b8847526e8f441ddd996044f185" translate="yes" xml:space="preserve">
          <source>Effectively, the &lt;code&gt;'readable'&lt;/code&gt; event indicates that the stream has new information: either new data is available or the end of the stream has been reached. In the former case, &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; will return the available data. In the latter case, &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;null&lt;/code&gt;. For instance, in the following example, &lt;code&gt;foo.txt&lt;/code&gt; is an empty file:</source>
          <target state="translated">실제로 &lt;code&gt;'readable'&lt;/code&gt; 이벤트는 스트림에 새로운 정보가 있음을 나타냅니다. 새 데이터를 사용할 수 있거나 스트림 끝에 도달했습니다. 전자의 경우 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt; 는 사용 가능한 데이터를 반환합니다. 후자의 경우 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 예를 들어 다음 예제에서 &lt;code&gt;foo.txt&lt;/code&gt; 는 빈 파일입니다.</target>
        </trans-unit>
        <trans-unit id="8fe1dc7f3694025ca6e480b3a3b9b6c64870aebd" translate="yes" xml:space="preserve">
          <source>Embed a limited set of ICU data (&lt;code&gt;small-icu&lt;/code&gt;)</source>
          <target state="translated">제한된 ICU 데이터 세트 포함 ( &lt;code&gt;small-icu&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="43ccdbaa13f82a2f21fc4e13c969848fcfa4dbff" translate="yes" xml:space="preserve">
          <source>Embed the entire ICU (&lt;code&gt;full-icu&lt;/code&gt;)</source>
          <target state="translated">전체 ICU 포함 ( &lt;code&gt;full-icu&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f0bdb79a4209f625bd1769689ef6e0b74f4589d3" translate="yes" xml:space="preserve">
          <source>Emit pending deprecation warnings.</source>
          <target state="translated">지원 중단 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="52f085c662d8dad057b5c0e87f7c1924268afc56" translate="yes" xml:space="preserve">
          <source>Emitted after a socket is assigned to this request.</source>
          <target state="translated">소켓이이 요청에 지정된 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c4ec5fc10b6232cfe217b70593e2e9fd60fdf253" translate="yes" xml:space="preserve">
          <source>Emitted after resolving the hostname but before connecting. Not applicable to Unix sockets.</source>
          <target state="translated">호스트 이름을 확인한 후 연결하기 전에 발생합니다. 유닉스 소켓에는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="241caf34c0282fe853310dbc566852d337a0a54f" translate="yes" xml:space="preserve">
          <source>Emitted after the worker IPC channel has disconnected. This can occur when a worker exits gracefully, is killed, or is disconnected manually (such as with &lt;code&gt;worker.disconnect()&lt;/code&gt;).</source>
          <target state="translated">작업자 IPC 채널 연결이 끊어진 후에 발생합니다. 작업자가 정상적으로 종료되거나 종료되거나 수동으로 연결이 끊어진 경우 (예 : &lt;code&gt;worker.disconnect()&lt;/code&gt; ) 이 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43bd9b94db156bfdc9e0eac0147cae6fb926ffd6" translate="yes" xml:space="preserve">
          <source>Emitted each time a client requests an HTTP &lt;code&gt;CONNECT&lt;/code&gt; method. If this event is not listened for, then clients requesting a &lt;code&gt;CONNECT&lt;/code&gt; method will have their connections closed.</source>
          <target state="translated">클라이언트가 HTTP &lt;code&gt;CONNECT&lt;/code&gt; 메소드를 요청할 때마다 발생합니다 . 이 이벤트가 수신되지 않으면 &lt;code&gt;CONNECT&lt;/code&gt; 메소드를 요청하는 클라이언트 는 연결을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="1dfc3dba51aa3b737bf1144bff8620c8bd921b07" translate="yes" xml:space="preserve">
          <source>Emitted each time a client requests an HTTP upgrade. Listening to this event is optional and clients cannot insist on a protocol change.</source>
          <target state="translated">클라이언트가 HTTP 업그레이드를 요청할 때마다 발생합니다. 이 이벤트를 듣는 것은 선택 사항이며 클라이언트는 프로토콜 변경을 주장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa47b3c492a176b3c38f04f1252532ff5694efb2" translate="yes" xml:space="preserve">
          <source>Emitted each time a request with an HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; is received. If this event is not listened for, the server will automatically respond with a &lt;code&gt;100 Continue&lt;/code&gt; as appropriate.</source>
          <target state="translated">HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; 요청 이 수신 될 때마다 발생합니다. 이 이벤트가 수신되지 않으면 서버는 자동으로 &lt;code&gt;100 Continue&lt;/code&gt; (계속) 로 응답 합니다.</target>
        </trans-unit>
        <trans-unit id="ddd3178ebf31cb9430d416de8bcb438f32662200" translate="yes" xml:space="preserve">
          <source>Emitted each time a request with an HTTP &lt;code&gt;Expect&lt;/code&gt; header is received, where the value is not &lt;code&gt;100-continue&lt;/code&gt;. If this event is not listened for, the server will automatically respond with a &lt;code&gt;417 Expectation Failed&lt;/code&gt; as appropriate.</source>
          <target state="translated">HTTP &lt;code&gt;Expect&lt;/code&gt; 헤더가 있는 요청 이 수신 될 때마다 발생하며 값이 &lt;code&gt;100-continue&lt;/code&gt; 이 아닙니다 . 이 이벤트가 수신되지 않으면 서버는 자동으로 &lt;code&gt;417 Expectation Failed&lt;/code&gt; 로 적절하게 응답 합니다.</target>
        </trans-unit>
        <trans-unit id="7065a8cfb0751d9325c9783cb9304b3dd8b410eb" translate="yes" xml:space="preserve">
          <source>Emitted each time a server responds to a request with a &lt;code&gt;CONNECT&lt;/code&gt; method. If this event is not being listened for, clients receiving a &lt;code&gt;CONNECT&lt;/code&gt; method will have their connections closed.</source>
          <target state="translated">서버가 &lt;code&gt;CONNECT&lt;/code&gt; 메소드 로 요청에 응답 할 때마다 발생합니다 . 이 이벤트가 수신되지 않으면 &lt;code&gt;CONNECT&lt;/code&gt; 메소드를 수신하는 클라이언트 는 연결을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="c4f574f184ef432a017233f1764b78c2ae946fc7" translate="yes" xml:space="preserve">
          <source>Emitted each time a server responds to a request with an upgrade. If this event is not being listened for and the response status code is 101 Switching Protocols, clients receiving an upgrade header will have their connections closed.</source>
          <target state="translated">서버가 업그레이드 요청에 응답 할 때마다 발생합니다. 이 이벤트가 수신되지 않고 응답 상태 코드가 101 스위칭 프로토콜 인 경우 업그레이드 헤더를 수신하는 클라이언트는 연결이 끊어집니다.</target>
        </trans-unit>
        <trans-unit id="f626614f8f04ce2b8c225559e5d88cc653a13b77" translate="yes" xml:space="preserve">
          <source>Emitted each time there is a request. There may be multiple requests per connection (in the case of HTTP Keep-Alive connections).</source>
          <target state="translated">요청이있을 때마다 발생합니다. 연결 당 여러 요청이있을 수 있습니다 (HTTP 연결 유지 연결의 경우).</target>
        </trans-unit>
        <trans-unit id="5a0e1ca88558c7c260076251c733177fb1c2edca" translate="yes" xml:space="preserve">
          <source>Emitted each time there is a request. There may be multiple requests per session. See the &lt;a href=&quot;#http2_compatibility_api&quot;&gt;Compatibility API&lt;/a&gt;.</source>
          <target state="translated">요청이있을 때마다 발생합니다. 세션 당 여러 요청이있을 수 있습니다. &lt;a href=&quot;#http2_compatibility_api&quot;&gt;호환성 API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de0df4499800143478ccd3c66cd1e6295bfc023f" translate="yes" xml:space="preserve">
          <source>Emitted every time &lt;code&gt;.setupMaster()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;.setupMaster()&lt;/code&gt; 가 호출 될 때마다 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="17b670b0252618c0fed1a955648729e7aaf29810" translate="yes" xml:space="preserve">
          <source>Emitted if the socket times out from inactivity. This is only to notify that the socket has been idle. The user must manually close the connection.</source>
          <target state="translated">소켓이 비 활동으로 시간 종료되면 발생합니다. 이것은 소켓이 유휴 상태임을 알리기위한 것입니다. 사용자는 연결을 수동으로 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="8fabf5fde1bf48acd8410a0c1d3fef607b52c971" translate="yes" xml:space="preserve">
          <source>Emitted once the socket is fully closed. The argument &lt;code&gt;hadError&lt;/code&gt; is a boolean which says if the socket was closed due to a transmission error.</source>
          <target state="translated">소켓이 완전히 닫히면 발생합니다. &lt;code&gt;hadError&lt;/code&gt; 인수 는 전송 오류로 인해 소켓이 닫혔는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="486d5f029c4c65d253ed66ff5d66167504ae2db8" translate="yes" xml:space="preserve">
          <source>Emitted when a new connection is made. &lt;code&gt;socket&lt;/code&gt; is an instance of &lt;code&gt;net.Socket&lt;/code&gt;.</source>
          <target state="translated">새로 연결했을 때 발생합니다. &lt;code&gt;socket&lt;/code&gt; 은 &lt;code&gt;net.Socket&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="8aa79a4d0926b20dc37142a5e4a35e07591b85cc" translate="yes" xml:space="preserve">
          <source>Emitted when a response is received to this request. This event is emitted only once.</source>
          <target state="translated">이 요청에 대한 응답이 수신 될 때 발생합니다. 이 이벤트는 한 번만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1ba4c47323fe39f13597a940cdfcb9a079929d82" translate="yes" xml:space="preserve">
          <source>Emitted when a socket connection is successfully established. See &lt;a href=&quot;#net_net_createconnection&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소켓 연결이 성공적으로 설정되면 발생합니다. &lt;a href=&quot;#net_net_createconnection&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e111774ef2e3c5e2ff58f39cabb4a4e3b0afee7" translate="yes" xml:space="preserve">
          <source>Emitted when a socket is ready to be used.</source>
          <target state="translated">소켓을 사용할 준비가되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="75b8572995891dfd5aeda8f22dd9d7261cb675e2" translate="yes" xml:space="preserve">
          <source>Emitted when an error occurs while watching the file. The errored &lt;code&gt;fs.FSWatcher&lt;/code&gt; object is no longer usable in the event handler.</source>
          <target state="translated">파일을 보면서 오류가 발생했을 때 발생합니다. 오류가 발생한 &lt;code&gt;fs.FSWatcher&lt;/code&gt; 객체는 더 이상 이벤트 핸들러에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5414c08fafacebda10cfbc8004e975787f518f75" translate="yes" xml:space="preserve">
          <source>Emitted when an error occurs. The &lt;code&gt;'close'&lt;/code&gt; event will be called directly following this event.</source>
          <target state="translated">오류가 발생하면 발생합니다. &lt;code&gt;'close'&lt;/code&gt; 이벤트는 이벤트 다음 직접 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c686cd90a2b201e3223f02b2edd54f0cbd39f045" translate="yes" xml:space="preserve">
          <source>Emitted when an error occurs. Unlike &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#net_event_close&quot;&gt;&lt;code&gt;'close'&lt;/code&gt;&lt;/a&gt; event will &lt;strong&gt;not&lt;/strong&gt; be emitted directly following this event unless &lt;a href=&quot;#net_server_close_callback&quot;&gt;&lt;code&gt;server.close()&lt;/code&gt;&lt;/a&gt; is manually called. See the example in discussion of &lt;a href=&quot;#net_server_listen&quot;&gt;&lt;code&gt;server.listen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오류가 발생하면 발생합니다. 달리 &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;#net_event_close&quot;&gt; &lt;code&gt;'close'&lt;/code&gt; &lt;/a&gt; 이벤트는 것입니다 &lt;strong&gt;하지&lt;/strong&gt; 않는 한이 이벤트 다음 직접 방출 될 &lt;a href=&quot;#net_server_close_callback&quot;&gt; &lt;code&gt;server.close()&lt;/code&gt; &lt;/a&gt; 를 수동으로 호출된다. &lt;a href=&quot;#net_server_listen&quot;&gt; &lt;code&gt;server.listen()&lt;/code&gt; &lt;/a&gt; 에 대한 토론의 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d668fdab6ec7f187981d36f7346e5fbd02944388" translate="yes" xml:space="preserve">
          <source>Emitted when an inspector notification is received that has its method field set to the &lt;code&gt;&amp;lt;inspector-protocol-method&amp;gt;&lt;/code&gt; value.</source>
          <target state="translated">메소드 필드가 &lt;code&gt;&amp;lt;inspector-protocol-method&amp;gt;&lt;/code&gt; 값으로 설정된 관리자 알림이 수신 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="eac96fdb030163d85ec32241f72b21e71dc16eb8" translate="yes" xml:space="preserve">
          <source>Emitted when any notification from the V8 Inspector is received.</source>
          <target state="translated">V8 검사기로부터 알림을 수신하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3295cded98801bfebcde74b15c82a85386acb4f1" translate="yes" xml:space="preserve">
          <source>Emitted when data is received. The argument &lt;code&gt;data&lt;/code&gt; will be a &lt;code&gt;Buffer&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;. Encoding of data is set by &lt;a href=&quot;#net_socket_setencoding_encoding&quot;&gt;&lt;code&gt;socket.setEncoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터가 수신 될 때 발생합니다. 인수 &lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;Buffer&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; 입니다. 데이터 인코딩은 &lt;a href=&quot;#net_socket_setencoding_encoding&quot;&gt; &lt;code&gt;socket.setEncoding()&lt;/code&gt; &lt;/a&gt; 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="3fc56c16d639d945f8d65179e3f94340d4dd98f5" translate="yes" xml:space="preserve">
          <source>Emitted when something changes in a watched directory or file. See more details in &lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt;&lt;code&gt;fs.watch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">감시 디렉토리 또는 파일에서 무언가가 변경 될 때 발생합니다. 자세한 내용은 &lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt; &lt;code&gt;fs.watch()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdd787aa29bf3cdf142e855d1822c0d15c77a393" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;WriteStream&lt;/code&gt;'s file is opened.</source>
          <target state="translated">&lt;code&gt;WriteStream&lt;/code&gt; 파일이 열릴 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="45d7c653516f3e1e451e31cd6798b80c164ea2ab" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;WriteStream&lt;/code&gt;'s underlying file descriptor has been closed.</source>
          <target state="translated">&lt;code&gt;WriteStream&lt;/code&gt; 의 기본 파일 설명자가 닫 혔을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="5b0440444f5c30e97776ba8ba426a409cc279ca8" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;fs.ReadStream&lt;/code&gt; is ready to be used.</source>
          <target state="translated">&lt;code&gt;fs.ReadStream&lt;/code&gt; 을 사용할 준비가 되면 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="16b3ce1f74c99a76ff6f2dc5d441870794b25ee8" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;fs.ReadStream&lt;/code&gt;'s file descriptor has been opened.</source>
          <target state="translated">&lt;code&gt;fs.ReadStream&lt;/code&gt; 의 파일 디스크립터가 열렸을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="300440031e2ab56560c02f79e8c85a7f2ad165f7" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;fs.ReadStream&lt;/code&gt;'s underlying file descriptor has been closed.</source>
          <target state="translated">&lt;code&gt;fs.ReadStream&lt;/code&gt; 의 기본 파일 설명자가 닫 혔을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="e44acccd0cc98cfaa07f4aca8f619f82d58b1f64" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;fs.WriteStream&lt;/code&gt; is ready to be used.</source>
          <target state="translated">&lt;code&gt;fs.WriteStream&lt;/code&gt; 을 사용할 준비가 되면 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="548c6a91914003a483c490156fc745d450dc7900" translate="yes" xml:space="preserve">
          <source>Emitted when the cluster master receives a message from any worker.</source>
          <target state="translated">클러스터 마스터가 작업자로부터 메시지를받을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54b42eae0ee260e20201c79c69cba3baa1843fc0" translate="yes" xml:space="preserve">
          <source>Emitted when the other end of the socket sends a FIN packet, thus ending the readable side of the socket.</source>
          <target state="translated">소켓의 다른 쪽 끝이 FIN 패킷을 보내서 소켓의 읽을 수있는 쪽을 끝내면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="186a230daa8513fe590a58b2dc660d0470fdf816" translate="yes" xml:space="preserve">
          <source>Emitted when the request has been aborted by the client. This event is only emitted on the first call to &lt;code&gt;abort()&lt;/code&gt;.</source>
          <target state="translated">클라이언트가 요청을 중단했을 때 발생합니다. 이 이벤트는 &lt;code&gt;abort()&lt;/code&gt; 에 대한 첫 번째 호출에서만 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4a650c4b8476df85dba1bfb5f655b62b9f12b10" translate="yes" xml:space="preserve">
          <source>Emitted when the request has been aborted.</source>
          <target state="translated">요청이 중단되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7c957d9ed09f00dd8ae5b308240f7a916d185f44" translate="yes" xml:space="preserve">
          <source>Emitted when the response has been sent. More specifically, this event is emitted when the last segment of the response headers and body have been handed off to the HTTP/2 multiplexing for transmission over the network. It does not imply that the client has received anything yet.</source>
          <target state="translated">응답이 전송되었을 때 발생합니다. 보다 구체적으로,이 이벤트는 응답 헤더 및 본문의 마지막 세그먼트가 네트워크를 통한 전송을 위해 HTTP / 2 멀티플렉싱으로 전달 될 때 생성됩니다. 클라이언트가 아직 아무것도받지 않았다는 의미는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f0507190bf29ec6d21954b2608ced049897592d2" translate="yes" xml:space="preserve">
          <source>Emitted when the response has been sent. More specifically, this event is emitted when the last segment of the response headers and body have been handed off to the operating system for transmission over the network. It does not imply that the client has received anything yet.</source>
          <target state="translated">응답이 전송되었을 때 발생합니다. 보다 구체적으로,이 이벤트는 네트워크를 통한 전송을 위해 응답 헤더 및 본문의 마지막 세그먼트가 운영 체제로 전달 될 때 생성됩니다. 클라이언트가 아직 아무것도받지 않았다는 의미는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="deaad74c335f1329cf1bf8081b1f33cce31db915" translate="yes" xml:space="preserve">
          <source>Emitted when the server closes.</source>
          <target state="translated">서버가 닫힐 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e7d84b590928ecb4591ce9248b0d2777d12cec77" translate="yes" xml:space="preserve">
          <source>Emitted when the server closes. If connections exist, this event is not emitted until all connections are ended.</source>
          <target state="translated">서버가 닫힐 때 발생합니다. 연결이 존재하면이 이벤트는 모든 연결이 끝날 때까지 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b82ab07dc5e67b738229942633371d607b7bc1cd" translate="yes" xml:space="preserve">
          <source>Emitted when the server has been bound after calling &lt;a href=&quot;#net_server_listen&quot;&gt;&lt;code&gt;server.listen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_server_listen&quot;&gt; &lt;code&gt;server.listen()&lt;/code&gt; &lt;/a&gt; 을 호출 한 후 서버가 바인드 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b555dba1918159b9c0dca424111958060993b485" translate="yes" xml:space="preserve">
          <source>Emitted when the server sends a '100 Continue' HTTP response, usually because the request contained 'Expect: 100-continue'. This is an instruction that the client should send the request body.</source>
          <target state="translated">서버에 '100 Continue'HTTP 응답을 보낼 때 발생합니다. 일반적으로 요청에 'Expect : 100-continue'가 포함되어 있기 때문입니다. 이것은 클라이언트가 요청 본문을 보내야한다는 지시입니다.</target>
        </trans-unit>
        <trans-unit id="66e96676689fd9c9eabbdb7f9c0bf57c2431e51e" translate="yes" xml:space="preserve">
          <source>Emitted when the server sends a 1xx intermediate response (excluding 101 Upgrade). The listeners of this event will receive an object containing the HTTP version, status code, status message, key-value headers object, and array with the raw header names followed by their respective values.</source>
          <target state="translated">서버가 1xx 중간 응답 (101 업그레이드 제외)을 보낼 때 발생합니다. 이 이벤트의 리스너는 HTTP 버전, 상태 코드, 상태 메시지, 키-값 헤더 오브젝트 및 원시 헤더 이름과 해당 값이 차례로 포함 된 배열을 포함하는 오브젝트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="7e9c59f359b6e39cfc771a692327470713c8a9e1" translate="yes" xml:space="preserve">
          <source>Emitted when the server sends a &lt;code&gt;100 Continue&lt;/code&gt; status, usually because the request contained &lt;code&gt;Expect: 100-continue&lt;/code&gt;. This is an instruction that the client should send the request body.</source>
          <target state="translated">일반적으로 요청에 &lt;code&gt;Expect: 100-continue&lt;/code&gt; 포함되어 있기 때문에 서버가 &lt;code&gt;100 Continue&lt;/code&gt; 상태를 보낼 때 발생합니다 . 이것은 클라이언트가 요청 본문을 보내야한다는 지시입니다.</target>
        </trans-unit>
        <trans-unit id="513aa925e8047af131274ff72571bb1b2c8734de" translate="yes" xml:space="preserve">
          <source>Emitted when the underlying socket times out from inactivity. This only notifies that the socket has been idle. The request must be aborted manually.</source>
          <target state="translated">기본 소켓이 비 활동으로 시간 초과 될 때 발생합니다. 이것은 소켓이 유휴 상태임을 알려줍니다. 요청은 수동으로 중단되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5c0bc00592634d88e3a88acceb67bf60a1716234" translate="yes" xml:space="preserve">
          <source>Emitted when the watcher stops watching for changes. The closed &lt;code&gt;fs.FSWatcher&lt;/code&gt; object is no longer usable in the event handler.</source>
          <target state="translated">감시자가 변경 사항 감시를 중지하면 발생합니다. 닫힌 &lt;code&gt;fs.FSWatcher&lt;/code&gt; 객체는 더 이상 이벤트 핸들러에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="19eff266fbfec96501660f5bbc58f97c3effb151" translate="yes" xml:space="preserve">
          <source>Emitted when the write buffer becomes empty. Can be used to throttle uploads.</source>
          <target state="translated">쓰기 버퍼가 비게되면 발생합니다. 업로드를 조절하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85f776c78c1103be1aed67d55d62731be27918a3" translate="yes" xml:space="preserve">
          <source>Emitting custom warnings</source>
          <target state="translated">맞춤 경고 발생</target>
        </trans-unit>
        <trans-unit id="a5a5a092ab00c96a89bf5c646bd7e1bc7f55dfdd" translate="yes" xml:space="preserve">
          <source>Enable FIPS-compliant crypto at startup. (Requires Node.js to be built with &lt;code&gt;./configure --openssl-fips&lt;/code&gt;.)</source>
          <target state="translated">시작할 때 FIPS 호환 암호화를 활성화하십시오. Node.js를 &lt;code&gt;./configure --openssl-fips&lt;/code&gt; 로 빌드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="49cf8e51ec96040de45a015e0fce2107ad820e8f" translate="yes" xml:space="preserve">
          <source>Enable experimental ES Module support in the &lt;code&gt;vm&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;vm&lt;/code&gt; 모듈 에서 실험 ES 모듈 지원을 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d6eaed2e44bcb6aebcb354a989d7ef0ced15c81" translate="yes" xml:space="preserve">
          <source>Enable experimental ES module support and caching modules.</source>
          <target state="translated">실험적인 ES 모듈 지원 및 캐싱 모듈을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="f1b6a3546bab65242db977546b0b53a76eafb9ef" translate="yes" xml:space="preserve">
          <source>Enable experimental WebAssembly module support.</source>
          <target state="translated">실험적인 웹 어셈블리 모듈 지원을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a78f39f3af90b0f6cdb6f875f2692aaad5951a61" translate="yes" xml:space="preserve">
          <source>Enable experimental diagnostic report feature.</source>
          <target state="translated">실험 진단 보고서 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f14af2c9c2c97d4941f92004d5b1d347d62d4ef2" translate="yes" xml:space="preserve">
          <source>Enable experimental frozen intrinsics like &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 및 &lt;code&gt;Object&lt;/code&gt; 와 같은 실험용 냉동 내장 함수를 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="b8ccb87454b266798c26337d619fb3e1ac9f5012" translate="yes" xml:space="preserve">
          <source>Enable experimental resolution using the &lt;code&gt;exports&lt;/code&gt; field in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;exports&lt;/code&gt; 필드를 사용하여 실험적인 해상도를 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fd6f7e422abf4a8a43bbaa6b350cfac37eaf88c" translate="yes" xml:space="preserve">
          <source>Enable experimental top-level &lt;code&gt;await&lt;/code&gt; keyword support in REPL.</source>
          <target state="translated">REPL에서 실험적인 최상위 &lt;code&gt;await&lt;/code&gt; 키워드 지원을 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="8235befc09b7a643e192617e9f3edb37aafb9c42" translate="yes" xml:space="preserve">
          <source>Enable the callbacks for a given &lt;code&gt;AsyncHook&lt;/code&gt; instance. If no callbacks are provided enabling is a noop.</source>
          <target state="translated">지정된 &lt;code&gt;AsyncHook&lt;/code&gt; 인스턴스에 대한 콜백을 활성화합니다 . 콜백이 제공되지 않으면 활성화는 noop입니다.</target>
        </trans-unit>
        <trans-unit id="328417846c82410bd1f7a155b335b747768573bf" translate="yes" xml:space="preserve">
          <source>Enable/disable keep-alive functionality, and optionally set the initial delay before the first keepalive probe is sent on an idle socket.</source>
          <target state="translated">연결 유지 기능을 활성화 / 비활성화하고 선택적으로 첫 번째 연결 유지 프로브가 유휴 소켓에 전송되기 전에 초기 지연을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0684cd84c9a1aad6fd782133ab8c6e8f5795cd34" translate="yes" xml:space="preserve">
          <source>Enables a signal handler that causes the Node.js process to write a heap dump when the specified signal is received.</source>
          <target state="translated">지정된 신호가 수신 될 때 Node.js 프로세스가 힙 덤프를 작성하도록하는 신호 핸들러를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7e779e6129bcde187beb3ccc475c6f2b5608aede" translate="yes" xml:space="preserve">
          <source>Enables report to be generated on un-caught exceptions, if &lt;code&gt;--experimental-report&lt;/code&gt; is enabled. Useful when inspecting JavaScript stack in conjunction with native stack and other runtime environment data.</source>
          <target state="translated">&lt;code&gt;--experimental-report&lt;/code&gt; 가 활성화 된 경우 catch되지 않은 예외에 대해 보고서를 생성 할 수 있습니다 . 기본 스택 및 기타 런타임 환경 데이터와 함께 JavaScript 스택을 검사 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5c7d84be9239422b33c61cfe5ed292d7a5442d88" translate="yes" xml:space="preserve">
          <source>Enables report to be generated upon receiving the specified (or predefined) signal to the running Node.js process, if &lt;code&gt;--experimental-report&lt;/code&gt; is enabled. The signal to trigger the report is specified through &lt;code&gt;--report-signal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--experimental-report&lt;/code&gt; 가 활성화 된 경우 실행중인 Node.js 프로세스에 지정된 (또는 미리 정의 된) 신호를 수신하면 보고서를 생성 할 수 있습니다. 보고서를 트리거하는 신호는 &lt;code&gt;--report-signal&lt;/code&gt; 을 통해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b8eb73e01e18f1b7ede985aeafee5ad473899a90" translate="yes" xml:space="preserve">
          <source>Enables the FIPS compliant crypto provider in a FIPS-enabled Node.js build. Throws an error if FIPS mode is not available.</source>
          <target state="translated">FIPS 사용 Node.js 빌드에서 FIPS 호환 암호화 제공자를 사용합니다. FIPS 모드를 사용할 수 없으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ac0b6d731033aea57eb4f79c9f175e81ee5a49b6" translate="yes" xml:space="preserve">
          <source>Enables the collection of trace event tracing information.</source>
          <target state="translated">추적 이벤트 추적 정보를 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d48cd2fcd6bacf7791ed81ba6534d5de8421e0" translate="yes" xml:space="preserve">
          <source>Enables the event loop delay sample timer. Returns &lt;code&gt;true&lt;/code&gt; if the timer was started, &lt;code&gt;false&lt;/code&gt; if it was already started.</source>
          <target state="translated">이벤트 루프 지연 샘플 타이머를 활성화합니다. 반환 &lt;code&gt;true&lt;/code&gt; 타이머가 시작되었을 경우 &lt;code&gt;false&lt;/code&gt; 이 이미 시작된 경우.</target>
        </trans-unit>
        <trans-unit id="098960017f926b27d842aa2ce9efe1065fed1ad6" translate="yes" xml:space="preserve">
          <source>Enables the report to be triggered on fatal errors (internal errors within the Node.js runtime such as out of memory) that lead to termination of the application, if &lt;code&gt;--experimental-report&lt;/code&gt; is enabled. Useful to inspect various diagnostic data elements such as heap, stack, event loop state, resource consumption etc. to reason about the fatal error.</source>
          <target state="translated">&lt;code&gt;--experimental-report&lt;/code&gt; 가 활성화 된 경우 응용 프로그램이 종료되는 치명적인 오류 (메모리 부족과 같은 Node.js 런타임 내의 내부 오류)에 대해 보고서를 트리거 할 수 있습니다 . 치명적 오류에 대한 원인으로 힙, 스택, 이벤트 루프 상태, 리소스 소비 등 다양한 진단 데이터 요소를 검사하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ab38d6ca586ba007b7eafdeeb694b6709c37d621" translate="yes" xml:space="preserve">
          <source>Enables this &lt;code&gt;Tracing&lt;/code&gt; object for the set of categories covered by the &lt;code&gt;Tracing&lt;/code&gt; object.</source>
          <target state="translated">이 활성화 &lt;code&gt;Tracing&lt;/code&gt; 에 의해 덮여 종류의 객체 집합에 대해 &lt;code&gt;Tracing&lt;/code&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="ab6c4d9a6009e703e713b51ae1e148dbd59d9898" translate="yes" xml:space="preserve">
          <source>Enabling</source>
          <target state="translated">Enabling</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="6796bf20c4b6c53a5378c6cde035c8d8675e78dc" translate="yes" xml:space="preserve">
          <source>Encoding provided to &lt;code&gt;TextDecoder()&lt;/code&gt; API was not one of the &lt;a href=&quot;util#util_whatwg_supported_encodings&quot;&gt;WHATWG Supported Encodings&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TextDecoder()&lt;/code&gt; API에 제공된 인코딩 은 &lt;a href=&quot;util#util_whatwg_supported_encodings&quot;&gt;WHATWG 지원 인코딩&lt;/a&gt; 중 하나가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="62f8c7df5515cf2cc98b10874daa40ce952112b3" translate="yes" xml:space="preserve">
          <source>Encodings Requiring Full ICU Data</source>
          <target state="translated">전체 ICU 데이터가 필요한 인코딩</target>
        </trans-unit>
        <trans-unit id="cdcd156cae12b497d5c7cc776fdb2aff9a47ef29" translate="yes" xml:space="preserve">
          <source>Encodings Supported Without ICU</source>
          <target state="translated">ICU없이 지원되는 인코딩</target>
        </trans-unit>
        <trans-unit id="003d049cc9a2ad00d3dcd100f864cf023c5d2079" translate="yes" xml:space="preserve">
          <source>Encodings Supported by Default (With ICU)</source>
          <target state="translated">기본적으로 지원되는 인코딩 (ICU 포함)</target>
        </trans-unit>
        <trans-unit id="dde1d8f84491bbae34870844c0a4212e3f1a3605" translate="yes" xml:space="preserve">
          <source>Encodings supported by &lt;code&gt;buffer.transcode()&lt;/code&gt; are: &lt;code&gt;'ascii'&lt;/code&gt;, &lt;code&gt;'utf8'&lt;/code&gt;, &lt;code&gt;'utf16le'&lt;/code&gt;, &lt;code&gt;'ucs2'&lt;/code&gt;, &lt;code&gt;'latin1'&lt;/code&gt;, and &lt;code&gt;'binary'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buffer.transcode()&lt;/code&gt; 가 지원하는 인코딩 은 &lt;code&gt;'ascii'&lt;/code&gt; , &lt;code&gt;'utf8'&lt;/code&gt; , &lt;code&gt;'utf16le'&lt;/code&gt; , &lt;code&gt;'ucs2'&lt;/code&gt; , &lt;code&gt;'latin1'&lt;/code&gt; 및 &lt;code&gt;'binary'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b6727aed31e3ebb0e094a009754a129c7dd2a76f" translate="yes" xml:space="preserve">
          <source>Encrypts &lt;code&gt;buffer&lt;/code&gt; with &lt;code&gt;privateKey&lt;/code&gt;. The returned data can be decrypted using the corresponding public key, for example using &lt;a href=&quot;#crypto_crypto_publicdecrypt_key_buffer&quot;&gt;&lt;code&gt;crypto.publicDecrypt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 로 &lt;code&gt;buffer&lt;/code&gt; 를 암호화 합니다 . 반환 된 데이터는 해당 공개 키 &lt;a href=&quot;#crypto_crypto_publicdecrypt_key_buffer&quot;&gt; &lt;code&gt;crypto.publicDecrypt()&lt;/code&gt; &lt;/a&gt; 예 : crypto.publicDecrypt ()) 를 사용하여 해독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="072aa6c9edfdf3c11d61188ef77419b10dba008f" translate="yes" xml:space="preserve">
          <source>Encrypts the content of &lt;code&gt;buffer&lt;/code&gt; with &lt;code&gt;key&lt;/code&gt; and returns a new &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; with encrypted content. The returned data can be decrypted using the corresponding private key, for example using &lt;a href=&quot;#crypto_crypto_privatedecrypt_privatekey_buffer&quot;&gt;&lt;code&gt;crypto.privateDecrypt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 내용을 암호화 &lt;code&gt;buffer&lt;/code&gt; 와 &lt;code&gt;key&lt;/code&gt; 반환 새로운 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 암호화 된 내용입니다. 반환 된 데이터는 해당 개인 키 &lt;a href=&quot;#crypto_crypto_privatedecrypt_privatekey_buffer&quot;&gt; &lt;code&gt;crypto.privateDecrypt()&lt;/code&gt; &lt;/a&gt; 예 : crypto.privateDecrypt ()) 를 사용하여 해독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c433ce67c51e205c48485d8398bed477e4ea1dcc" translate="yes" xml:space="preserve">
          <source>End-of-Life</source>
          <target state="translated">End-of-Life</target>
        </trans-unit>
        <trans-unit id="2314f81c034f792ecf70b38421fb840ba33caf19" translate="yes" xml:space="preserve">
          <source>End-of-Life (for &lt;code&gt;digest === undefined&lt;/code&gt;).</source>
          <target state="translated">수명 종료 ( &lt;code&gt;digest === undefined&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="32e81c9816beadbcce313da4f343ee5d477822bd" translate="yes" xml:space="preserve">
          <source>End-of-Life.</source>
          <target state="translated">End-of-Life.</target>
        </trans-unit>
        <trans-unit id="34add90ea2e6ba11b42a358c7d1d8282a3cb803d" translate="yes" xml:space="preserve">
          <source>Enhance Your Calm</source>
          <target state="translated">당신의 평온을 강화</target>
        </trans-unit>
        <trans-unit id="b6387e837f0fac2edda1ac39c2ad64144b985aa2" translate="yes" xml:space="preserve">
          <source>Ensures that no more I/O activity happens on this socket. Only necessary in case of errors (parse error or so).</source>
          <target state="translated">이 소켓에서 더 이상 I / O 활동이 발생하지 않도록합니다. 오류 (구문 분석 오류 등)의 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a90b45275712d81cce74968837bc94f42d058471" translate="yes" xml:space="preserve">
          <source>Enum types</source>
          <target state="translated">열거 형 유형</target>
        </trans-unit>
        <trans-unit id="9a483503f6d59bcdcd854f083d3145edeefb8c8c" translate="yes" xml:space="preserve">
          <source>Enumerable own &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; properties are compared as well.</source>
          <target state="translated">열거 가능한 자체 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 속성도 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="eae0e07ba1b5e31f5f7a3276aabef82b36de5083" translate="yes" xml:space="preserve">
          <source>Enumerable symbol properties are now compared.</source>
          <target state="translated">열거 가능한 심볼 속성이 비교되었습니다.</target>
        </trans-unit>
        <trans-unit id="cbfefacb0c81ff9b45a06b2b10ffb2bd03bd4eaf" translate="yes" xml:space="preserve">
          <source>Environment Life Cycle APIs</source>
          <target state="translated">환경 수명주기 API</target>
        </trans-unit>
        <trans-unit id="f55c41c945883d8246f071cc399809e177b8028f" translate="yes" xml:space="preserve">
          <source>Environment Variable Options</source>
          <target state="translated">환경 변수 옵션</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="eeb2db51dfa6919e1a427184e3c8b4acc361ca36" translate="yes" xml:space="preserve">
          <source>Ephemeral methods may have some performance drawbacks, because key generation is expensive.</source>
          <target state="translated">키 생성에 많은 비용이 들기 때문에 임시 방법에는 성능 저하가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83ecf8caf1333d65c447a457c115360990fb5a02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt;&lt;code&gt;buf.indexOf() !== -1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동등 &lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt; &lt;code&gt;buf.indexOf() !== -1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e69d79f8d854da4c4b71046e9850bcef201b3ba5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;process#process_process_arch&quot;&gt;&lt;code&gt;process.arch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#process_process_arch&quot;&gt; &lt;code&gt;process.arch&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7fd0a7d59308d2765c1cfc8864bd3091934a3ae4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;process#process_process_platform&quot;&gt;&lt;code&gt;process.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#process_process_platform&quot;&gt; &lt;code&gt;process.platform&lt;/code&gt; 과&lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ba3d62c3c76a91b2e575d1cb6167c5c94af1f65a" translate="yes" xml:space="preserve">
          <source>Equivalents of &lt;code&gt;__filename&lt;/code&gt; and &lt;code&gt;__dirname&lt;/code&gt; can be created inside of each file via &lt;a href=&quot;#esm_import_meta&quot;&gt;&lt;code&gt;import.meta.url&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 등가물 &lt;code&gt;__filename&lt;/code&gt; 및 &lt;code&gt;__dirname&lt;/code&gt; 를 통해 각 파일의 내부를 만들 수 있습니다 &lt;a href=&quot;#esm_import_meta&quot;&gt; &lt;code&gt;import.meta.url&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="78be018a0e5f7ca838191f406d8d5b64aa7bb86a" translate="yes" xml:space="preserve">
          <source>Error Behavior</source>
          <target state="translated">오류 행동</target>
        </trans-unit>
        <trans-unit id="7cf576c273308d17b73055988b50009277aef7be" translate="yes" xml:space="preserve">
          <source>Error Codes for RST_STREAM and GOAWAY</source>
          <target state="translated">RST_STREAM 및 GOAWAY에 대한 오류 코드</target>
        </trans-unit>
        <trans-unit id="a56eafe91ac3c144325dd150a91e0485c4903ba8" translate="yes" xml:space="preserve">
          <source>Error Constants</source>
          <target state="translated">오류 상수</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="9c75ad295cee96a17f441360a9e4d7b753609c8b" translate="yes" xml:space="preserve">
          <source>Error Propagation and Interception</source>
          <target state="translated">오류 전파 및 차단</target>
        </trans-unit>
        <trans-unit id="26c1aaafd7b122199cea3435b0578dc6cf9917df" translate="yes" xml:space="preserve">
          <source>Error codes</source>
          <target state="translated">에러 코드</target>
        </trans-unit>
        <trans-unit id="c11f06d56175ddb18e913813c88506844a3cb633" translate="yes" xml:space="preserve">
          <source>Error events</source>
          <target state="translated">오류 이벤트</target>
        </trans-unit>
        <trans-unit id="5815b2d7380e774da3ce0e2a89fe42147476c0ad" translate="yes" xml:space="preserve">
          <source>Error-first callbacks</source>
          <target state="translated">오류 우선 콜백</target>
        </trans-unit>
        <trans-unit id="0365527287cf46c043b731da143c45370ea468e5" translate="yes" xml:space="preserve">
          <source>Error.captureStackTrace(targetObject[, constructorOpt])</source>
          <target state="translated">Error.captureStackTrace (targetObject [, constructorOpt])</target>
        </trans-unit>
        <trans-unit id="e0032e60b22a1b8f9539d6a9886ceb5071db982f" translate="yes" xml:space="preserve">
          <source>Error.stackTraceLimit</source>
          <target state="translated">Error.stackTraceLimit</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="5cb42978249e34fd29e455369c06f1926397c26d" translate="yes" xml:space="preserve">
          <source>Errors While Reading</source>
          <target state="translated">읽는 동안 오류</target>
        </trans-unit>
        <trans-unit id="43a32c8a9fe2e3735291f83c1fbd15b58b88054d" translate="yes" xml:space="preserve">
          <source>Errors While Writing</source>
          <target state="translated">쓰는 중 오류</target>
        </trans-unit>
        <trans-unit id="4772a1ba8b41d18c707a6b36049bef0dae64a030" translate="yes" xml:space="preserve">
          <source>Errors generated in this way &lt;em&gt;cannot&lt;/em&gt; be intercepted using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; as they are thrown &lt;em&gt;after&lt;/em&gt; the calling code has already exited.</source>
          <target state="translated">이 방법으로 생성 된 오류 는 호출 코드가 이미 종료 된 &lt;em&gt;후에&lt;/em&gt; 발생하므로 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; 를 사용하여 가로 챌 &lt;em&gt;수 없습니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80523080ed92d029ed13154984e345d5e3d0fb26" translate="yes" xml:space="preserve">
          <source>Errors in the input stream are not forwarded.</source>
          <target state="translated">입력 스트림의 오류가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="78b9b5917c9555d4b8553a6214d8a70d54e25e0a" translate="yes" xml:space="preserve">
          <source>Errors originating in &lt;code&gt;crypto&lt;/code&gt; or &lt;code&gt;tls&lt;/code&gt; are of class &lt;code&gt;Error&lt;/code&gt;, and in addition to the standard &lt;code&gt;.code&lt;/code&gt; and &lt;code&gt;.message&lt;/code&gt; properties, may have some additional OpenSSL-specific properties.</source>
          <target state="translated">&lt;code&gt;crypto&lt;/code&gt; 또는 &lt;code&gt;tls&lt;/code&gt; 에서 발생하는 오류는 &lt;code&gt;Error&lt;/code&gt; 클래스 이며 표준 &lt;code&gt;.code&lt;/code&gt; 및 &lt;code&gt;.message&lt;/code&gt; 속성 외에도 몇 가지 추가 OpenSSL 관련 속성이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be749d949a193eadfa31676d9bdbfaeee40829ac" translate="yes" xml:space="preserve">
          <source>Errors that occur while writing to the underlying streams will now be ignored by default.</source>
          <target state="translated">기본 스트림에 쓰는 동안 발생하는 오류는 이제 기본적으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f476078fd3012bcf3330e002564db8e0b2710b25" translate="yes" xml:space="preserve">
          <source>Errors that occur within &lt;em&gt;Asynchronous APIs&lt;/em&gt; may be reported in multiple ways:</source>
          <target state="translated">&lt;em&gt;비동기 API&lt;/em&gt; 내에서 발생하는 오류 는 여러 가지 방법으로보고 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b47b123d48ff3b61d0c7a6c77df2d29fd63a115" translate="yes" xml:space="preserve">
          <source>Escapable handle scopes are a special type of handle scope to return values created within a particular handle scope to a parent scope.</source>
          <target state="translated">이스케이프 가능한 핸들 범위는 특정 핸들 범위 내에서 작성된 값을 상위 범위로 리턴하는 특수 유형의 핸들 범위입니다.</target>
        </trans-unit>
        <trans-unit id="1427cd23d5da54ea0eff3ab43fb612a94930f548" translate="yes" xml:space="preserve">
          <source>Especially useful in error handling scenarios where a stream is destroyed prematurely (like an aborted HTTP request), and will not emit &lt;code&gt;'end'&lt;/code&gt; or &lt;code&gt;'finish'&lt;/code&gt;.</source>
          <target state="translated">특히 HTTP 요청 중단과 같이 스트림이 조기에 파괴되어 &lt;code&gt;'end'&lt;/code&gt; 또는 &lt;code&gt;'finish'&lt;/code&gt; 를 방출하지 않는 오류 처리 시나리오에서 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="533be17cc05f77f2705b39204d00a7bdbac8f3aa" translate="yes" xml:space="preserve">
          <source>Establishing a TLS session can be relatively slow. The process can be sped up by saving and later reusing the session state. There are several mechanisms to do so, discussed here from oldest to newest (and preferred).</source>
          <target state="translated">TLS 세션 설정은 상대적으로 느릴 수 있습니다. 세션 상태를 저장 한 후 나중에 재사용하여 프로세스 속도를 높일 수 있습니다. 그렇게하는 몇 가지 메커니즘이 있으며 여기에서 가장 오래된 것부터 가장 새로운 것 (그리고 선호되는 것)까지 논의됩니다.</target>
        </trans-unit>
        <trans-unit id="c1ec91130b80b6350b6265b57a2fbd4cb58bf56e" translate="yes" xml:space="preserve">
          <source>Evaluate the following argument as JavaScript. The modules which are predefined in the REPL can also be used in &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">다음 인수를 JavaScript로 평가하십시오. REPL에 사전 정의 된 모듈은 &lt;code&gt;script&lt;/code&gt; 에서도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1be8c935803d3d54dd40db1b50d471f08b39af4" translate="yes" xml:space="preserve">
          <source>Evaluate the module.</source>
          <target state="translated">모듈을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="090d6c1df76c686eef83e4e7e4f033bb734430a0" translate="yes" xml:space="preserve">
          <source>Even though HTTP/2 streams and network sockets are not in a 1:1 correspondence, a network error will destroy each individual stream and must be handled on the stream level, as shown above.</source>
          <target state="translated">HTTP / 2 스트림과 네트워크 소켓이 1 : 1에 해당하지 않더라도 네트워크 오류는 각 개별 스트림을 삭제하므로 위에 표시된대로 스트림 레벨에서 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="4fb95f1177719f22693f3ecfe30efccfe01d4a63" translate="yes" xml:space="preserve">
          <source>Even though calling &lt;code&gt;update()&lt;/code&gt; is sufficient to encrypt/decrypt the message, applications &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;final()&lt;/code&gt; to compute or verify the authentication tag.</source>
          <target state="translated">&lt;code&gt;update()&lt;/code&gt; 호출 하면 메시지를 암호화 / 암호 해독하기에 충분 하지만 응용 프로그램 &lt;em&gt;은 &lt;/em&gt; &lt;code&gt;final()&lt;/code&gt; 을 호출 하여 인증 태그를 계산하거나 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3bd3d581332bf55adf9054f25b2acf843d89079" translate="yes" xml:space="preserve">
          <source>Even though the name of this function is &lt;code&gt;process.kill()&lt;/code&gt;, it is really just a signal sender, like the &lt;code&gt;kill&lt;/code&gt; system call. The signal sent may do something other than kill the target process.</source>
          <target state="translated">이 함수의 이름은 &lt;code&gt;process.kill()&lt;/code&gt; 이지만 실제로 &lt;code&gt;kill&lt;/code&gt; 시스템 호출 과 같은 신호 발신자 입니다. 전송 된 신호는 대상 프로세스를 종료하는 것 이외의 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="596c1b0bd67fb56485b5c4f9f95303f06ecb61aa" translate="yes" xml:space="preserve">
          <source>Event: &amp;lt;inspector-protocol-method&amp;gt;</source>
          <target state="translated">이벤트 : &amp;lt;검사관 프로토콜 방법&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cdc68d8affc4cc1f1a44ebbe2650ebb2e830fd56" translate="yes" xml:space="preserve">
          <source>Event: 'OCSPRequest'</source>
          <target state="translated">이벤트 : 'OCSPRequest'</target>
        </trans-unit>
        <trans-unit id="054d70d0f40b1c2c801876a27dec7fc4e8d68703" translate="yes" xml:space="preserve">
          <source>Event: 'OCSPResponse'</source>
          <target state="translated">이벤트 : 'OCSPResponse'</target>
        </trans-unit>
        <trans-unit id="eeceafe2e2874d57a26ed7e9f0170b9283d4f692" translate="yes" xml:space="preserve">
          <source>Event: 'SIGCONT'</source>
          <target state="translated">이벤트 : 'SIGCONT'</target>
        </trans-unit>
        <trans-unit id="4aece5195234ece763b0805cdb87f0a714d43b36" translate="yes" xml:space="preserve">
          <source>Event: 'SIGINT'</source>
          <target state="translated">이벤트 : 'SIGINT'</target>
        </trans-unit>
        <trans-unit id="cda0214c109d75846e9f9edbbc09cf3bc9aa7154" translate="yes" xml:space="preserve">
          <source>Event: 'SIGTSTP'</source>
          <target state="translated">이벤트 : 'SIGTSTP'</target>
        </trans-unit>
        <trans-unit id="18ba2a99ebc35675670b4a33cf42b299fd0ae1c7" translate="yes" xml:space="preserve">
          <source>Event: 'abort'</source>
          <target state="translated">이벤트 : '중단'</target>
        </trans-unit>
        <trans-unit id="8f484ed0398f51fe6c536ca9b1632f7ed584f7cb" translate="yes" xml:space="preserve">
          <source>Event: 'aborted'</source>
          <target state="translated">이벤트 : '중지됨'</target>
        </trans-unit>
        <trans-unit id="9a810cbcc5da97a6755deb913d4d0f469f86e36d" translate="yes" xml:space="preserve">
          <source>Event: 'altsvc'</source>
          <target state="translated">이벤트 : 'altsvc'</target>
        </trans-unit>
        <trans-unit id="fe92dc3af3cf8f01b237b634450e7443e4b9db7e" translate="yes" xml:space="preserve">
          <source>Event: 'beforeExit'</source>
          <target state="translated">이벤트 : 'beforeExit'</target>
        </trans-unit>
        <trans-unit id="9b7ae192350cc683f0a1dfd157f2c0aeca4db857" translate="yes" xml:space="preserve">
          <source>Event: 'change'</source>
          <target state="translated">이벤트 : 'change'</target>
        </trans-unit>
        <trans-unit id="69ed136e0d2688e197169a771e70ef125815c478" translate="yes" xml:space="preserve">
          <source>Event: 'checkContinue'</source>
          <target state="translated">이벤트 : 'checkContinue'</target>
        </trans-unit>
        <trans-unit id="dc7c8c0f01008db8daf1594a9c7849b780cc5308" translate="yes" xml:space="preserve">
          <source>Event: 'checkExpectation'</source>
          <target state="translated">이벤트 : 'checkExpectation'</target>
        </trans-unit>
        <trans-unit id="d201423d5f70ab2442fda428f599e089754cfe75" translate="yes" xml:space="preserve">
          <source>Event: 'clientError'</source>
          <target state="translated">이벤트 : 'clientError'</target>
        </trans-unit>
        <trans-unit id="9d3aa9eca362226e8a29d42cab560d4dc9797b99" translate="yes" xml:space="preserve">
          <source>Event: 'close'</source>
          <target state="translated">이벤트 : '닫기'</target>
        </trans-unit>
        <trans-unit id="1d9db80bc98309bb9ed2e94399fa0f734fb900d9" translate="yes" xml:space="preserve">
          <source>Event: 'connect'</source>
          <target state="translated">이벤트 : 'connect'</target>
        </trans-unit>
        <trans-unit id="6b56941ed7240629db6a59211e45626f105d8c06" translate="yes" xml:space="preserve">
          <source>Event: 'connection'</source>
          <target state="translated">이벤트 : '연결'</target>
        </trans-unit>
        <trans-unit id="92edf5329a1715911c43aa646d64a262296d9a23" translate="yes" xml:space="preserve">
          <source>Event: 'continue'</source>
          <target state="translated">이벤트 : '계속'</target>
        </trans-unit>
        <trans-unit id="8e9301c670cd3895495ba961a809f1f700e2e63b" translate="yes" xml:space="preserve">
          <source>Event: 'data'</source>
          <target state="translated">이벤트 : '데이터'</target>
        </trans-unit>
        <trans-unit id="f0f1be5e460c79b86c3fe32ebdcf8fa0cdc75193" translate="yes" xml:space="preserve">
          <source>Event: 'disconnect'</source>
          <target state="translated">이벤트 : '연결 끊기'</target>
        </trans-unit>
        <trans-unit id="57298fa1b6a7d576750c0047e4220ab0d85e93a2" translate="yes" xml:space="preserve">
          <source>Event: 'drain'</source>
          <target state="translated">이벤트 : '배수'</target>
        </trans-unit>
        <trans-unit id="5c005053f694e926c573690c146759562b6977b7" translate="yes" xml:space="preserve">
          <source>Event: 'end'</source>
          <target state="translated">이벤트 : '종료'</target>
        </trans-unit>
        <trans-unit id="a447b8f79ad17be80f1d8a22ec1eaa6dd259f85b" translate="yes" xml:space="preserve">
          <source>Event: 'error'</source>
          <target state="translated">이벤트 : '오류'</target>
        </trans-unit>
        <trans-unit id="4fb9e4ee0feec8fa72f8abd7f9d8273619c5fef7" translate="yes" xml:space="preserve">
          <source>Event: 'exit'</source>
          <target state="translated">이벤트 : '종료'</target>
        </trans-unit>
        <trans-unit id="dc8e22a5dc3d24e8bd32258ae034a76c8710196f" translate="yes" xml:space="preserve">
          <source>Event: 'finish'</source>
          <target state="translated">이벤트 : '마침'</target>
        </trans-unit>
        <trans-unit id="4225c8dbfc01fb8f70bab3c3a7c4cc6ed8ae26ef" translate="yes" xml:space="preserve">
          <source>Event: 'fork'</source>
          <target state="translated">이벤트 : '포크'</target>
        </trans-unit>
        <trans-unit id="249f904027d8033e5265f4fcabe929e69a3a4660" translate="yes" xml:space="preserve">
          <source>Event: 'frameError'</source>
          <target state="translated">이벤트 : 'frameError'</target>
        </trans-unit>
        <trans-unit id="9c8522e9cce9a2788db2ee5e82e5a607c094d2bb" translate="yes" xml:space="preserve">
          <source>Event: 'goaway'</source>
          <target state="translated">이벤트 : '도주'</target>
        </trans-unit>
        <trans-unit id="9939f34efd70460c16c242339f470ff258c5a76c" translate="yes" xml:space="preserve">
          <source>Event: 'headers'</source>
          <target state="translated">이벤트 : '헤더'</target>
        </trans-unit>
        <trans-unit id="e1fd5b6c70aac741a5275fab9ec835494c74740b" translate="yes" xml:space="preserve">
          <source>Event: 'information'</source>
          <target state="translated">이벤트 : '정보'</target>
        </trans-unit>
        <trans-unit id="5dab6a44f10a908956451f850ecd98a5ad796b5e" translate="yes" xml:space="preserve">
          <source>Event: 'inspectorNotification'</source>
          <target state="translated">이벤트 : 'inspectorNotification'</target>
        </trans-unit>
        <trans-unit id="f1d78a0bfaed30919e5780a9d94338e0ec06ef64" translate="yes" xml:space="preserve">
          <source>Event: 'keylog'</source>
          <target state="translated">이벤트 : 'keylog'</target>
        </trans-unit>
        <trans-unit id="0e49501dec17c42545d879f665e70addd59ae45b" translate="yes" xml:space="preserve">
          <source>Event: 'line'</source>
          <target state="translated">이벤트 : 'line'</target>
        </trans-unit>
        <trans-unit id="4be89dd4b2b0fe7f87f19c1f55f5aa86c82e55f3" translate="yes" xml:space="preserve">
          <source>Event: 'listening'</source>
          <target state="translated">이벤트 : '듣기'</target>
        </trans-unit>
        <trans-unit id="b40521b9be07e55b8e588a0219f7809d400d3609" translate="yes" xml:space="preserve">
          <source>Event: 'localSettings'</source>
          <target state="translated">이벤트 : 'localSettings'</target>
        </trans-unit>
        <trans-unit id="e2091601817c760eb036974b2a99c82d91ad508f" translate="yes" xml:space="preserve">
          <source>Event: 'lookup'</source>
          <target state="translated">이벤트 : '조회'</target>
        </trans-unit>
        <trans-unit id="84fab72ddfba34e0f695041960cca5991f6247af" translate="yes" xml:space="preserve">
          <source>Event: 'message'</source>
          <target state="translated">이벤트 : '메시지'</target>
        </trans-unit>
        <trans-unit id="6438ea8e69fcb0f8de050af641eeada5547ea6f7" translate="yes" xml:space="preserve">
          <source>Event: 'multipleResolves'</source>
          <target state="translated">이벤트 : 'multipleResolves'</target>
        </trans-unit>
        <trans-unit id="654174074d59d1d21cdd1018a51a9c43f3fb362c" translate="yes" xml:space="preserve">
          <source>Event: 'newListener'</source>
          <target state="translated">이벤트 : 'newListener'</target>
        </trans-unit>
        <trans-unit id="17d1c6af523d102d0cea75264b2231b698523b02" translate="yes" xml:space="preserve">
          <source>Event: 'newSession'</source>
          <target state="translated">이벤트 : 'newSession'</target>
        </trans-unit>
        <trans-unit id="2edad91ecc5d5d8463d70440ed56f49359b51502" translate="yes" xml:space="preserve">
          <source>Event: 'online'</source>
          <target state="translated">이벤트 : '온라인'</target>
        </trans-unit>
        <trans-unit id="d70691916f3f3d7aaf81ec5a4e8ed19c049986f9" translate="yes" xml:space="preserve">
          <source>Event: 'open'</source>
          <target state="translated">이벤트 : '열기'</target>
        </trans-unit>
        <trans-unit id="37ebf1d4463a2ea73befce97ff48cd06c55efd87" translate="yes" xml:space="preserve">
          <source>Event: 'origin'</source>
          <target state="translated">이벤트 : 'origin'</target>
        </trans-unit>
        <trans-unit id="a0267559295b114f78afb56e2a06f836f6b58547" translate="yes" xml:space="preserve">
          <source>Event: 'pause'</source>
          <target state="translated">이벤트 : '일시 중지'</target>
        </trans-unit>
        <trans-unit id="8c39a24ca13cec8d73361b973a74b710073257f7" translate="yes" xml:space="preserve">
          <source>Event: 'ping'</source>
          <target state="translated">이벤트 : 'ping'</target>
        </trans-unit>
        <trans-unit id="864033a2c39a64e61f06d01cf7e2ab40e3fe92be" translate="yes" xml:space="preserve">
          <source>Event: 'pipe'</source>
          <target state="translated">이벤트 : '파이프'</target>
        </trans-unit>
        <trans-unit id="357b33d3d417ccdf05e96ff4a5d3844c41eb6139" translate="yes" xml:space="preserve">
          <source>Event: 'push'</source>
          <target state="translated">이벤트 : '푸시'</target>
        </trans-unit>
        <trans-unit id="0bacd278c524173424d04f8c7ed618fbe5d6b0ad" translate="yes" xml:space="preserve">
          <source>Event: 'readable'</source>
          <target state="translated">이벤트 : '읽을 수있는'</target>
        </trans-unit>
        <trans-unit id="d38a8ede9b6be51b5110a6af24fee382968aac41" translate="yes" xml:space="preserve">
          <source>Event: 'ready'</source>
          <target state="translated">이벤트 : '준비'</target>
        </trans-unit>
        <trans-unit id="ba894745736ee42db97ff47e8960addc8ae0ee91" translate="yes" xml:space="preserve">
          <source>Event: 'rejectionHandled'</source>
          <target state="translated">이벤트 : 'rejectionHandled'</target>
        </trans-unit>
        <trans-unit id="3f615bec06c9acd567436068412f6fa535314879" translate="yes" xml:space="preserve">
          <source>Event: 'remoteSettings'</source>
          <target state="translated">이벤트 : 'remoteSettings'</target>
        </trans-unit>
        <trans-unit id="addbeb891e8b32c57c1665f2bd3dcce6e019b173" translate="yes" xml:space="preserve">
          <source>Event: 'removeListener'</source>
          <target state="translated">이벤트 : 'removeListener'</target>
        </trans-unit>
        <trans-unit id="9d524aacc0dd8633bf7999d70fdf4c2857c300ab" translate="yes" xml:space="preserve">
          <source>Event: 'request'</source>
          <target state="translated">이벤트 : '요청'</target>
        </trans-unit>
        <trans-unit id="a346eaf966210dd668dc6128557bf21e54d0a56f" translate="yes" xml:space="preserve">
          <source>Event: 'reset'</source>
          <target state="translated">이벤트 : '재설정'</target>
        </trans-unit>
        <trans-unit id="b174d222973f4b28b8023777d0aba7b5ac2fab47" translate="yes" xml:space="preserve">
          <source>Event: 'resize'</source>
          <target state="translated">이벤트 : '크기 조정'</target>
        </trans-unit>
        <trans-unit id="04d38edf482ece5caa6eed5cd8470376068705ce" translate="yes" xml:space="preserve">
          <source>Event: 'response'</source>
          <target state="translated">이벤트 : '응답'</target>
        </trans-unit>
        <trans-unit id="da9ee1fe88b34cbc01a8d8c78b110b01f97d9bc2" translate="yes" xml:space="preserve">
          <source>Event: 'resume'</source>
          <target state="translated">이벤트 : '재개'</target>
        </trans-unit>
        <trans-unit id="3f6d0f58cdb52966be1665aa77d684800ea903dc" translate="yes" xml:space="preserve">
          <source>Event: 'resumeSession'</source>
          <target state="translated">이벤트 : 'resumeSession'</target>
        </trans-unit>
        <trans-unit id="7ec3b89655a8655de51593fabd5924a9410796f2" translate="yes" xml:space="preserve">
          <source>Event: 'secure'</source>
          <target state="translated">이벤트 : '보안'</target>
        </trans-unit>
        <trans-unit id="f6d829221849c1eb1739a79d4523237234dcd061" translate="yes" xml:space="preserve">
          <source>Event: 'secureConnect'</source>
          <target state="translated">이벤트 : 'secureConnect'</target>
        </trans-unit>
        <trans-unit id="84e6f687eba34de5f4fbecde5f3c3a98fa0f5da2" translate="yes" xml:space="preserve">
          <source>Event: 'secureConnection'</source>
          <target state="translated">이벤트 : 'secureConnection'</target>
        </trans-unit>
        <trans-unit id="785cfc1edde752b8060a939d780a40a9b7bec582" translate="yes" xml:space="preserve">
          <source>Event: 'session'</source>
          <target state="translated">이벤트 : '세션'</target>
        </trans-unit>
        <trans-unit id="fbbc7d448fbe9d860c390157bf8d1972c26a6c35" translate="yes" xml:space="preserve">
          <source>Event: 'sessionError'</source>
          <target state="translated">이벤트 : 'sessionError'</target>
        </trans-unit>
        <trans-unit id="a4ae253b9e076d822a8c3a39806c397be4f3ac4a" translate="yes" xml:space="preserve">
          <source>Event: 'setup'</source>
          <target state="translated">이벤트 : 'setup'</target>
        </trans-unit>
        <trans-unit id="d495526ad8674a58e64028a89fc87310566fd2c3" translate="yes" xml:space="preserve">
          <source>Event: 'socket'</source>
          <target state="translated">이벤트 : '소켓'</target>
        </trans-unit>
        <trans-unit id="8ab3f8e289a4cecc2b102f8a981727a7555c5951" translate="yes" xml:space="preserve">
          <source>Event: 'stream'</source>
          <target state="translated">이벤트 : '스트림'</target>
        </trans-unit>
        <trans-unit id="1fd253fdd1ea36115ac6dc375d8da612e670b769" translate="yes" xml:space="preserve">
          <source>Event: 'timeout'</source>
          <target state="translated">이벤트 : 'timeout'</target>
        </trans-unit>
        <trans-unit id="5d4043430cd936d1fb533dbbe3bc78a29edac0b2" translate="yes" xml:space="preserve">
          <source>Event: 'tlsClientError'</source>
          <target state="translated">이벤트 : 'tlsClientError'</target>
        </trans-unit>
        <trans-unit id="b32f99aa77332fc9b0eda89e113820fa4de99e47" translate="yes" xml:space="preserve">
          <source>Event: 'trailers'</source>
          <target state="translated">이벤트 : '예고편'</target>
        </trans-unit>
        <trans-unit id="6343417f0e935bfafa20a1f47c093f988d2673b4" translate="yes" xml:space="preserve">
          <source>Event: 'uncaughtException'</source>
          <target state="translated">이벤트 : 'uncaughtException'</target>
        </trans-unit>
        <trans-unit id="787215a2e8cf35e7dbbf9238a651a084cbfff8fa" translate="yes" xml:space="preserve">
          <source>Event: 'unhandledRejection'</source>
          <target state="translated">이벤트 : 'unhandledRejection'</target>
        </trans-unit>
        <trans-unit id="6547082b5b5f932328b2e444cb782f03bb05b5e3" translate="yes" xml:space="preserve">
          <source>Event: 'unknownProtocol'</source>
          <target state="translated">이벤트 : '알 수없는 프로토콜'</target>
        </trans-unit>
        <trans-unit id="a9dcfb2586c9460a5e9bc55159306875df9c4a79" translate="yes" xml:space="preserve">
          <source>Event: 'unpipe'</source>
          <target state="translated">이벤트 : '언 파이프'</target>
        </trans-unit>
        <trans-unit id="d1b3d001804373a739091a4cfe433cd619282ad8" translate="yes" xml:space="preserve">
          <source>Event: 'upgrade'</source>
          <target state="translated">이벤트 : '업그레이드'</target>
        </trans-unit>
        <trans-unit id="2986da26bfd3ca5ea48a19a9d8b73407a3dce986" translate="yes" xml:space="preserve">
          <source>Event: 'wantTrailers'</source>
          <target state="translated">이벤트 : 'wantTrailers'</target>
        </trans-unit>
        <trans-unit id="0d3eae4ee800f29c8a3466db920e9fe439580dd5" translate="yes" xml:space="preserve">
          <source>Event: 'warning'</source>
          <target state="translated">이벤트 : '경고'</target>
        </trans-unit>
        <trans-unit id="5876adadbcd068acd9f996c259fbd067d5cbf8d9" translate="yes" xml:space="preserve">
          <source>EventEmitter</source>
          <target state="translated">EventEmitter</target>
        </trans-unit>
        <trans-unit id="beffffbc9849e2360f650283dc08ef77aa77d838" translate="yes" xml:space="preserve">
          <source>EventEmitter.defaultMaxListeners</source>
          <target state="translated">EventEmitter.defaultMaxListeners</target>
        </trans-unit>
        <trans-unit id="0272ead6d77b1ac27b60220f089811eff900ca05" translate="yes" xml:space="preserve">
          <source>EventEmitter.listenerCount(emitter, eventName)</source>
          <target state="translated">EventEmitter.listenerCount (이미 터, eventName)</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="488a25f7070ada497925d4c30065d54af0364842" translate="yes" xml:space="preserve">
          <source>Events: 'finish' and 'end'</source>
          <target state="translated">이벤트 : '종료'및 '종료'</target>
        </trans-unit>
        <trans-unit id="290deeed41220a799b876bf0e63adb6c7e58720d" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Http2Session&lt;/code&gt; instance is associated with exactly one &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt;&lt;code&gt;tls.TLSSocket&lt;/code&gt;&lt;/a&gt; when it is created. When either the &lt;code&gt;Socket&lt;/code&gt; or the &lt;code&gt;Http2Session&lt;/code&gt; are destroyed, both will be destroyed.</source>
          <target state="translated">모든 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스 는 생성 될 때 정확히 하나의 &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt; &lt;code&gt;tls.TLSSocket&lt;/code&gt; &lt;/a&gt; 과 연결됩니다 . 어느 때 &lt;code&gt;Socket&lt;/code&gt; 또는이 &lt;code&gt;Http2Session&lt;/code&gt; 파괴, 모두 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="e2beb9f87baacd614d0e9456be1f1f4dd8f251f0" translate="yes" xml:space="preserve">
          <source>Every method has a &lt;code&gt;*Sync&lt;/code&gt; counterpart, which accept the same arguments, but without a callback.</source>
          <target state="translated">모든 메소드에는 &lt;code&gt;*Sync&lt;/code&gt; 대응 항목이 있으며 동일한 인수를 허용하지만 콜백은 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1d05568b85b400963681eb2c968db636ef3b4c3" translate="yes" xml:space="preserve">
          <source>Every new resource is assigned an ID that is unique within the scope of the current Node.js instance.</source>
          <target state="translated">모든 새 리소스에는 현재 Node.js 인스턴스 범위 내에서 고유 한 ID가 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="3ead340fb11dd97f1161e98b79b8c853f17169b8" translate="yes" xml:space="preserve">
          <source>Example (obtaining a shared secret):</source>
          <target state="translated">예 (공유 비밀 확보) :</target>
        </trans-unit>
        <trans-unit id="efa8ad0f3245c715da2727fad64d39df1050915e" translate="yes" xml:space="preserve">
          <source>Example (uncompressing a key):</source>
          <target state="translated">예 (키 압축 해제) :</target>
        </trans-unit>
        <trans-unit id="ae87311d1e99810502428a61e81c83e7bb6052fe" translate="yes" xml:space="preserve">
          <source>Example certificate:</source>
          <target state="translated">인증서 예 :</target>
        </trans-unit>
        <trans-unit id="0f91f7aab10ca161169f6a19ce9651a05dc0aab2" translate="yes" xml:space="preserve">
          <source>Example error diff:</source>
          <target state="translated">오류 차이 예 :</target>
        </trans-unit>
        <trans-unit id="dca7926f73aab8c50442609e609dfcbcbe107f44" translate="yes" xml:space="preserve">
          <source>Example of a UDP server listening on port 41234:</source>
          <target state="translated">포트 41234에서 수신 대기하는 UDP 서버의 예 :</target>
        </trans-unit>
        <trans-unit id="693a921291d0a58a903e054f343f9b293bbb7baf" translate="yes" xml:space="preserve">
          <source>Example of a long-running process, by detaching and also ignoring its parent &lt;code&gt;stdio&lt;/code&gt; file descriptors, in order to ignore the parent's termination:</source>
          <target state="translated">부모의 종료를 무시하기 위해 부모 &lt;code&gt;stdio&lt;/code&gt; 파일 설명자를 분리하고 무시함으로써 장기 실행 프로세스의 예 :</target>
        </trans-unit>
        <trans-unit id="1850db24111a105c73b785fb5c31a1ff82d8e438" translate="yes" xml:space="preserve">
          <source>Example of checking for failed &lt;code&gt;spawn&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;spawn&lt;/code&gt; 실패 확인의 예 :</target>
        </trans-unit>
        <trans-unit id="dc390d110d8ce31065a61febbc99884bd4ce1dea" translate="yes" xml:space="preserve">
          <source>Example of running &lt;code&gt;ls -lh /usr&lt;/code&gt;, capturing &lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;stderr&lt;/code&gt;, and the exit code:</source>
          <target state="translated">&lt;code&gt;ls -lh /usr&lt;/code&gt; 실행 , &lt;code&gt;stdout&lt;/code&gt; , &lt;code&gt;stderr&lt;/code&gt; 및 종료 코드 캡처의 예 :</target>
        </trans-unit>
        <trans-unit id="d71f776cce92151b176b74f48c32c907d7e006e3" translate="yes" xml:space="preserve">
          <source>Example of sending a UDP packet composed of multiple buffers to a port on &lt;code&gt;127.0.0.1&lt;/code&gt;;</source>
          <target state="translated">여러 버퍼로 구성된 UDP 패킷을 &lt;code&gt;127.0.0.1&lt;/code&gt; 의 포트로 보내는 예 ;</target>
        </trans-unit>
        <trans-unit id="f7ef7ae18a94d851a898a9fef33067ebf4e64a05" translate="yes" xml:space="preserve">
          <source>Example of sending a UDP packet to a port on &lt;code&gt;localhost&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;localhost&lt;/code&gt; 의 포트로 UDP 패킷을 보내는 예 ;</target>
        </trans-unit>
        <trans-unit id="4c6e3f20665afbbde9f39c47144f99b24635eda7" translate="yes" xml:space="preserve">
          <source>Example of sending a UDP packet using a socket connected to a port on &lt;code&gt;localhost&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;localhost&lt;/code&gt; 의 포트에 연결된 소켓을 사용하여 UDP 패킷을 보내는 예 :</target>
        </trans-unit>
        <trans-unit id="f8b17f19e2be31b3bca04ac3d56acd73659116ef" translate="yes" xml:space="preserve">
          <source>Example pinning on certificate fingerprint, or the public key (similar to &lt;code&gt;pin-sha256&lt;/code&gt;):</source>
          <target state="translated">인증서 지문 또는 공개 키 ( &lt;code&gt;pin-sha256&lt;/code&gt; 과 유사)에 고정하는 예 :</target>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="b1ff1c685f0a2308f4410a7d0441270c9e63c5de" translate="yes" xml:space="preserve">
          <source>Example use of &lt;code&gt;stackStartFn&lt;/code&gt; for truncating the exception's stacktrace:</source>
          <target state="translated">예외의 스택 &lt;code&gt;stackStartFn&lt;/code&gt; 을 자르기위한 stackStartFn 사용 예 :</target>
        </trans-unit>
        <trans-unit id="87d3244aa004a0ef62c53fa15e26e64b607aa5cf" translate="yes" xml:space="preserve">
          <source>Example using a &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 으로 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 을 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="d053991e4aab3cb611e5cfa37a320b3c0c353c33" translate="yes" xml:space="preserve">
          <source>Example using a file path:</source>
          <target state="translated">파일 경로를 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="119ebc2839b71f256c0339aef7b9fb6a692516a3" translate="yes" xml:space="preserve">
          <source>Example using a relative path on POSIX (relative to &lt;code&gt;process.cwd()&lt;/code&gt;):</source>
          <target state="translated">POSIX에서 상대 경로를 사용하는 예 ( &lt;code&gt;process.cwd()&lt;/code&gt; 상대적 ) :</target>
        </trans-unit>
        <trans-unit id="57676b90a9502a0f4b6ed0d81d0974db9bdb967b" translate="yes" xml:space="preserve">
          <source>Example using an absolute path on POSIX:</source>
          <target state="translated">POSIX에서 절대 경로를 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="e59415b9b538caa36900bbd707a7f4a2dc95498c" translate="yes" xml:space="preserve">
          <source>Example using options from &lt;a href=&quot;tls#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;tls#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 옵션을 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="a42f901ebd1af7e9f84028b019d8f8a879e6a869" translate="yes" xml:space="preserve">
          <source>Example using the &lt;code&gt;Console&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;Console&lt;/code&gt; 클래스를 사용한 예 :</target>
        </trans-unit>
        <trans-unit id="d903ac4d94ccc0fc30cea2d8cefb6d45b8147d86" translate="yes" xml:space="preserve">
          <source>Example using the global &lt;code&gt;console&lt;/code&gt;:</source>
          <target state="translated">글로벌 &lt;code&gt;console&lt;/code&gt; 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="bce5072739efcecac5f474af5e634d8a21d2c6b4" translate="yes" xml:space="preserve">
          <source>Example: A very elaborate way to run &lt;code&gt;ps ax | grep ssh&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;ps ax | grep ssh&lt;/code&gt; 를 실행하는 매우 정교한 방법 | grep ssh</target>
        </trans-unit>
        <trans-unit id="acde9ed3e58a551026ae1810da2658d6874419d7" translate="yes" xml:space="preserve">
          <source>Example: IPv4 Outgoing Multicast Interface</source>
          <target state="translated">예 : IPv4 발신 멀티 캐스트 인터페이스</target>
        </trans-unit>
        <trans-unit id="fc9889811d10dcf9db452188e660869153a8d266" translate="yes" xml:space="preserve">
          <source>Example: Patched Dependency</source>
          <target state="translated">예 : 패치 된 종속성</target>
        </trans-unit>
        <trans-unit id="7ed79174cba1314d202899216243066fd449b0c2" translate="yes" xml:space="preserve">
          <source>Example: Read File Stream Line-by-Line</source>
          <target state="translated">예 : 파일 스트림 읽기</target>
        </trans-unit>
        <trans-unit id="5de2aeebff5c5173b9e7a37c84993b0a92200eec" translate="yes" xml:space="preserve">
          <source>Example: Running an HTTP Server within a VM</source>
          <target state="translated">예 : VM 내에서 HTTP 서버 실행</target>
        </trans-unit>
        <trans-unit id="7be0b667563045e14225b88516e9bc28370f5f90" translate="yes" xml:space="preserve">
          <source>Example: Tiny CLI</source>
          <target state="translated">예 : Tiny CLI</target>
        </trans-unit>
        <trans-unit id="b3aa0ead1d15e20ca542be76e36e2695d224404d" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Cipher&lt;/code&gt; and piped streams:</source>
          <target state="translated">예 : &lt;code&gt;Cipher&lt;/code&gt; 및 파이프 스트림 사용 :</target>
        </trans-unit>
        <trans-unit id="fb4dace4c7e50dcc60eb64e095818307ae4e3ce5" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Cipher&lt;/code&gt; objects as streams:</source>
          <target state="translated">예 : &lt;code&gt;Cipher&lt;/code&gt; 객체를 스트림으로 사용 :</target>
        </trans-unit>
        <trans-unit id="52674621423b066b0952c9efec6db27fb2dc2e72" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Decipher&lt;/code&gt; and piped streams:</source>
          <target state="translated">예 : &lt;code&gt;Decipher&lt;/code&gt; 및 파이프 스트림 사용 :</target>
        </trans-unit>
        <trans-unit id="f043321e9d68d9df86b518e596c3cfe65d8d8a64" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Decipher&lt;/code&gt; objects as streams:</source>
          <target state="translated">예 : &lt;code&gt;Decipher&lt;/code&gt; 객체를 스트림으로 사용 :</target>
        </trans-unit>
        <trans-unit id="669e8f7d41617e05ceeb1262fdcf704d518d15eb" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Hash&lt;/code&gt; and piped streams:</source>
          <target state="translated">예 : &lt;code&gt;Hash&lt;/code&gt; 및 파이프 스트림 사용 :</target>
        </trans-unit>
        <trans-unit id="dd1428ec09145d8dca490df8c368e0758de80f54" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Hash&lt;/code&gt; objects as streams:</source>
          <target state="translated">예 : &lt;code&gt;Hash&lt;/code&gt; 객체를 스트림으로 사용 :</target>
        </trans-unit>
        <trans-unit id="6c8e4e6e08480156f84c374a6008ca2e3c2a77d3" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Hmac&lt;/code&gt; and piped streams:</source>
          <target state="translated">예 : &lt;code&gt;Hmac&lt;/code&gt; 및 파이프 스트림 사용 :</target>
        </trans-unit>
        <trans-unit id="cd1dcada88f80821f5be0929befd08e0b424b04f" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Hmac&lt;/code&gt; objects as streams:</source>
          <target state="translated">예 : &lt;code&gt;Hmac&lt;/code&gt; 객체를 스트림으로 사용 :</target>
        </trans-unit>
        <trans-unit id="9c4b86c47e6686926a33c9bbfc037354baa5be06" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;Sign&lt;/code&gt; and &lt;a href=&quot;#crypto_class_verify&quot;&gt;&lt;code&gt;Verify&lt;/code&gt;&lt;/a&gt; objects as streams:</source>
          <target state="translated">예 : &lt;code&gt;Sign&lt;/code&gt; 및 &lt;a href=&quot;#crypto_class_verify&quot;&gt; &lt;code&gt;Verify&lt;/code&gt; &lt;/a&gt; 객체를 스트림으로 사용 :</target>
        </trans-unit>
        <trans-unit id="e2003fb846fbdbf1e0078677cb6179cdf837f806" translate="yes" xml:space="preserve">
          <source>Example: Using the &lt;a href=&quot;#crypto_cipher_update_data_inputencoding_outputencoding&quot;&gt;&lt;code&gt;cipher.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt;&lt;code&gt;cipher.final()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">예 : &lt;a href=&quot;#crypto_cipher_update_data_inputencoding_outputencoding&quot;&gt; &lt;code&gt;cipher.update()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt; &lt;code&gt;cipher.final()&lt;/code&gt; &lt;/a&gt; 메소드 사용 :</target>
        </trans-unit>
        <trans-unit id="5e5dbdf6769a74efb39f79e2a388f6eeb101a62b" translate="yes" xml:space="preserve">
          <source>Example: Using the &lt;a href=&quot;#crypto_decipher_update_data_inputencoding_outputencoding&quot;&gt;&lt;code&gt;decipher.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt;&lt;code&gt;decipher.final()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">예 : &lt;a href=&quot;#crypto_decipher_update_data_inputencoding_outputencoding&quot;&gt; &lt;code&gt;decipher.update()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt; &lt;code&gt;decipher.final()&lt;/code&gt; &lt;/a&gt; 메소드 사용 :</target>
        </trans-unit>
        <trans-unit id="90adb38b48f126d93dee7bd0e66c606066766d81" translate="yes" xml:space="preserve">
          <source>Example: Using the &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt;&lt;code&gt;hash.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">예 : &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt; &lt;code&gt;hash.update()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest()&lt;/code&gt; &lt;/a&gt; 메소드 사용 :</target>
        </trans-unit>
        <trans-unit id="787f5c5654365ffc382b25edc11ff0e3689c781b" translate="yes" xml:space="preserve">
          <source>Example: Using the &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt;&lt;code&gt;hmac.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_hmac_digest_encoding&quot;&gt;&lt;code&gt;hmac.digest()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">예 : &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt; &lt;code&gt;hmac.update()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#crypto_hmac_digest_encoding&quot;&gt; &lt;code&gt;hmac.digest()&lt;/code&gt; &lt;/a&gt; 메소드 사용 :</target>
        </trans-unit>
        <trans-unit id="48344d61aac39ec9ae20511d3bcdfffff11b9e14" translate="yes" xml:space="preserve">
          <source>Example: Using the &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt;&lt;code&gt;sign.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_verify_update_data_inputencoding&quot;&gt;&lt;code&gt;verify.update()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">예 : &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt; &lt;code&gt;sign.update()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#crypto_verify_update_data_inputencoding&quot;&gt; &lt;code&gt;verify.update()&lt;/code&gt; &lt;/a&gt; 메소드 사용 :</target>
        </trans-unit>
        <trans-unit id="a3212b407c0dee7f3306df12cac797302b0cc64f" translate="yes" xml:space="preserve">
          <source>Example: generating the sha256 HMAC of a file</source>
          <target state="translated">예 : 파일의 sha256 HMAC 생성</target>
        </trans-unit>
        <trans-unit id="5b48dfa141819e8a19eddc3969ad6089deb17f2b" translate="yes" xml:space="preserve">
          <source>Example: generating the sha256 sum of a file</source>
          <target state="translated">예 : 파일의 sha256 합계 생성</target>
        </trans-unit>
        <trans-unit id="b4d8a59b9b96bfc420fdfef0b1c88b69e1e1a171" translate="yes" xml:space="preserve">
          <source>Example: running &lt;code&gt;node example.js&lt;/code&gt; from &lt;code&gt;/Users/mjr&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;/Users/mjr&lt;/code&gt; 에서 &lt;code&gt;node example.js&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="968e749d74098109cb220327d0414a352b28f9be" translate="yes" xml:space="preserve">
          <source>Example: sending a server object</source>
          <target state="translated">예 : 서버 객체 보내기</target>
        </trans-unit>
        <trans-unit id="f356d1a2f7539b723b5da02e72549e4525b3a74a" translate="yes" xml:space="preserve">
          <source>Example: sending a socket object</source>
          <target state="translated">예 : 소켓 객체 보내기</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="1649132d276217dda8eca7e51a70ca08eed95523" translate="yes" xml:space="preserve">
          <source>Examples of &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; streams include:</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; 스트림의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f87b350a2a57eeaff1727dfa5a55d39ecafea71e" translate="yes" xml:space="preserve">
          <source>Examples of &lt;code&gt;Duplex&lt;/code&gt; streams include:</source>
          <target state="translated">&lt;code&gt;Duplex&lt;/code&gt; 스트림의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="61e532bc7b7beae1f31868770eaa346b6f5f262f" translate="yes" xml:space="preserve">
          <source>Examples of &lt;code&gt;Readable&lt;/code&gt; streams include:</source>
          <target state="translated">&lt;code&gt;Readable&lt;/code&gt; 스트림의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8a8aae8801356bbb169729566fd82d2a5386077d" translate="yes" xml:space="preserve">
          <source>Examples of &lt;code&gt;Transform&lt;/code&gt; streams include:</source>
          <target state="translated">&lt;code&gt;Transform&lt;/code&gt; 스트림의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="e0abbf00de89725cd39e71594277c4843dd4b55e" translate="yes" xml:space="preserve">
          <source>Examples: IPv6 Outgoing Multicast Interface</source>
          <target state="translated">예 : IPv6 발신 멀티 캐스트 인터페이스</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="1d1100b6ca20d5d67d81c1b3b99424a802ff2db0" translate="yes" xml:space="preserve">
          <source>Exceptions that occur using synchronous operations are thrown immediately and may be handled using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt;, or may be allowed to bubble up.</source>
          <target state="translated">동기 연산을 사용하여 발생하는 예외는 즉시 발생하며 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; 사용하여 처리 되거나 버블 링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="847d30c785fd87f3c66147a767d85939c301996c" translate="yes" xml:space="preserve">
          <source>Exceptions thrown from within the event handler will not be caught. Instead the process will exit with a non-zero exit code and the stack trace will be printed. This is to avoid infinite recursion.</source>
          <target state="translated">이벤트 핸들러 내에서 발생 된 예외는 포착되지 않습니다. 대신 프로세스는 0이 아닌 종료 코드로 종료되고 스택 추적이 인쇄됩니다. 이것은 무한 재귀를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f2b7ac920b402141c4e96b86c7fa1bd42b5a45f2" translate="yes" xml:space="preserve">
          <source>Exceptions vs. Errors</source>
          <target state="translated">예외와 오류</target>
        </trans-unit>
        <trans-unit id="f29ed82b97630fdceae444a645ee263bc5792e06" translate="yes" xml:space="preserve">
          <source>Execute without arguments to start the &lt;a href=&quot;repl&quot;&gt;REPL&lt;/a&gt;.</source>
          <target state="translated">인수없이 실행하여 &lt;a href=&quot;repl&quot;&gt;REPL&lt;/a&gt; 을 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="61331b9f9094d1bfc69360ed4d6e095cd7019547" translate="yes" xml:space="preserve">
          <source>Execution control</source>
          <target state="translated">실행 제어</target>
        </trans-unit>
        <trans-unit id="37840dac8c2895cbe48ca4ce2cfe5d14240b877f" translate="yes" xml:space="preserve">
          <source>Execution may stop at any point as a result of &lt;a href=&quot;#worker_threads_worker_terminate&quot;&gt;&lt;code&gt;worker.terminate()&lt;/code&gt;&lt;/a&gt; being invoked.</source>
          <target state="translated">&lt;a href=&quot;#worker_threads_worker_terminate&quot;&gt; &lt;code&gt;worker.terminate()&lt;/code&gt; &lt;/a&gt; 가 호출 되면 언제든지 실행이 중지 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="158b85ca0aa65feb9a980d8c26bcad2299b1c15a" translate="yes" xml:space="preserve">
          <source>Exit Codes</source>
          <target state="translated">종료 코드</target>
        </trans-unit>
        <trans-unit id="9dbfa3a4f722aaca5457931336eb43355a07ef72" translate="yes" xml:space="preserve">
          <source>Expect major changes in the implementation including interoperability support, specifier resolution, and default behavior.</source>
          <target state="translated">상호 운용성 지원, 지정자 해결 및 기본 동작을 포함하여 구현에서 주요 변경이 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="a6453f5405c010b76c38bdb97e09d77e1b726ec2" translate="yes" xml:space="preserve">
          <source>Expects the function &lt;code&gt;fn&lt;/code&gt; to throw an error.</source>
          <target state="translated">함수 &lt;code&gt;fn&lt;/code&gt; 이 오류를 발생시킬 것으로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="5c0226cb085688ad1678ee104e776053f3d10e21" translate="yes" xml:space="preserve">
          <source>Experimental Loader hooks</source>
          <target state="translated">실험용 로더 후크</target>
        </trans-unit>
        <trans-unit id="e8ffd933912afbf37264b43c064a6621730ff162" translate="yes" xml:space="preserve">
          <source>Experimental Wasm Modules</source>
          <target state="translated">실험용 Wasm 모듈</target>
        </trans-unit>
        <trans-unit id="9a17497667c247ee74eb82c74811c59b8b36d5d5" translate="yes" xml:space="preserve">
          <source>Explicit Binding</source>
          <target state="translated">명시 적 바인딩</target>
        </trans-unit>
        <trans-unit id="f081f46199af7e6022f795d097e1095feedbdca9" translate="yes" xml:space="preserve">
          <source>Explicitly adds an emitter to the domain. If any event handlers called by the emitter throw an error, or if the emitter emits an &lt;code&gt;'error'&lt;/code&gt; event, it will be routed to the domain's &lt;code&gt;'error'&lt;/code&gt; event, just like with implicit binding.</source>
          <target state="translated">이미 터를 도메인에 명시 적으로 추가합니다. 이미 터가 호출 한 이벤트 핸들러가 오류를 발생 시키거나 이미 터가 &lt;code&gt;'error'&lt;/code&gt; 이벤트를 생성하면 암시 적 바인딩과 같이 도메인의 &lt;code&gt;'error'&lt;/code&gt; 이벤트 로 라우팅됩니다 .</target>
        </trans-unit>
        <trans-unit id="748f04286aca170b7832684c5f37c8e68e6cda3e" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;http2#http2_class_http2stream&quot;&gt;&amp;lt;Http2Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http2#http2_class_http2stream&quot;&gt;&amp;lt;Http2Stream&amp;gt;을&lt;/a&gt; 확장</target>
        </trans-unit>
        <trans-unit id="97c3f34d072e2e8af28342c18a6bb7441ce1ff43" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</source>
          <target state="translated">연장 : &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51318cf0c7e2d62b4257c56a46172876ff2782d9" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;http2#http2_class_http2stream&quot;&gt;&amp;lt;Http2Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;http2#http2_class_http2stream&quot;&gt;&amp;lt;Http2Stream&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24f298acb3089a84c7d5feffc1597d4613e3069f" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d2dd135167035d5bfa6fa0169bae3a44232f146" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4673eac39d6b576eba478200a52937ef7a6eff28" translate="yes" xml:space="preserve">
          <source>Extends: &lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">확장 : &lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03d91d1714100f414cd686c4310313776fb73806" translate="yes" xml:space="preserve">
          <source>FS Constants</source>
          <target state="translated">FS 상수</target>
        </trans-unit>
        <trans-unit id="ad6e86fbc1f2f0c00d2b8bd803b5184518d5de72" translate="yes" xml:space="preserve">
          <source>Factory of wrapped objects</source>
          <target state="translated">포장 된 물체의 공장</target>
        </trans-unit>
        <trans-unit id="d30563def1cd0f0ecae8cc9c4667f49791307624" translate="yes" xml:space="preserve">
          <source>Fatal Errors</source>
          <target state="translated">치명적인 오류</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="35122f5af5c6720f2b90f4021e3a932245122a66" translate="yes" xml:space="preserve">
          <source>File Access Constants</source>
          <target state="translated">파일 액세스 상수</target>
        </trans-unit>
        <trans-unit id="87293873123771136bbad1b2f299c11e9a310d23" translate="yes" xml:space="preserve">
          <source>File Copy Constants</source>
          <target state="translated">파일 복사 상수</target>
        </trans-unit>
        <trans-unit id="3063067e5409fd06dc9fbbc077bf1cd84d42a06c" translate="yes" xml:space="preserve">
          <source>File Descriptors</source>
          <target state="translated">파일 디스크립터</target>
        </trans-unit>
        <trans-unit id="144d2e82601533c75c5b0e28093dabe0b3659f07" translate="yes" xml:space="preserve">
          <source>File Mode Constants</source>
          <target state="translated">파일 모드 상수</target>
        </trans-unit>
        <trans-unit id="70e401f79a2e604a21ab0c47e4de84af7eef38e9" translate="yes" xml:space="preserve">
          <source>File Modules</source>
          <target state="translated">파일 모듈</target>
        </trans-unit>
        <trans-unit id="a24c345d2a50eb97bb5e3c92aa7b14bef2dd1076" translate="yes" xml:space="preserve">
          <source>File Open Constants</source>
          <target state="translated">파일 열기 상수</target>
        </trans-unit>
        <trans-unit id="a926222b8bec34819e069693ffbdca4d0b2f8b69" translate="yes" xml:space="preserve">
          <source>File System</source>
          <target state="translated">파일 시스템</target>
        </trans-unit>
        <trans-unit id="afdabcc15fdcb6db2739d3bf679a8edcc2e213be" translate="yes" xml:space="preserve">
          <source>File System Flags</source>
          <target state="translated">파일 시스템 플래그</target>
        </trans-unit>
        <trans-unit id="95aa56c8d6069a1bef755fa40eca2fc4fa8d1dc6" translate="yes" xml:space="preserve">
          <source>File Type Constants</source>
          <target state="translated">파일 유형 상수</target>
        </trans-unit>
        <trans-unit id="f4d156e2a49bc010a5ae0d5f1a99b8179c33352f" translate="yes" xml:space="preserve">
          <source>File mode indicating executable by group.</source>
          <target state="translated">그룹별로 실행 파일을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="fa6e8f54f4d198b95b2d11f7aeaaf8f7fffc63df" translate="yes" xml:space="preserve">
          <source>File mode indicating executable by others.</source>
          <target state="translated">다른 사람이 실행할 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="5d7969a0e77d80f30df04a00849ea1f532fb4eb5" translate="yes" xml:space="preserve">
          <source>File mode indicating executable by owner.</source>
          <target state="translated">소유자 별 실행 파일을 나타내는 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="37c8f391f5a79b0095b841c762116ffc47c3cf4f" translate="yes" xml:space="preserve">
          <source>File mode indicating readable by group.</source>
          <target state="translated">그룹별로 읽을 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="6ed255d49cd0e30e9a4fb96859ee903f9651a320" translate="yes" xml:space="preserve">
          <source>File mode indicating readable by others.</source>
          <target state="translated">다른 사람이 읽을 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="7f01e45a76eee6dc733be22ae7e928df5ff62bf4" translate="yes" xml:space="preserve">
          <source>File mode indicating readable by owner.</source>
          <target state="translated">소유자가 읽을 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="d391f7a15562c131877587661dde705399687e32" translate="yes" xml:space="preserve">
          <source>File mode indicating readable, writable, and executable by group.</source>
          <target state="translated">그룹별로 읽기, 쓰기 및 실행 파일을 나타내는 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="ce2e7f7f4ad98760dd9463a1a34405aa6d7effaf" translate="yes" xml:space="preserve">
          <source>File mode indicating readable, writable, and executable by others.</source>
          <target state="translated">다른 사람이 읽기, 쓰기 및 실행을 나타내는 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="78381835051ee3eca52a35521a6585f138b5e2fc" translate="yes" xml:space="preserve">
          <source>File mode indicating readable, writable, and executable by owner.</source>
          <target state="translated">소유자가 읽기, 쓰기 및 실행 파일을 나타내는 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="3a62373c705005ac62e7192bc39e6d4b540ed436" translate="yes" xml:space="preserve">
          <source>File mode indicating writable by group.</source>
          <target state="translated">그룹별로 쓸 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="7e0b3a901b947f259446b2a5331db2771282e796" translate="yes" xml:space="preserve">
          <source>File mode indicating writable by others.</source>
          <target state="translated">다른 사람이 쓸 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="495d9d9d8e3e593896b6ad73aa659f88a51a2914" translate="yes" xml:space="preserve">
          <source>File mode indicating writable by owner.</source>
          <target state="translated">소유자가 쓸 수 있음을 나타내는 파일 모드.</target>
        </trans-unit>
        <trans-unit id="44351e19bb95196b5909f0387569e8792f24a314" translate="yes" xml:space="preserve">
          <source>File modes</source>
          <target state="translated">파일 모드</target>
        </trans-unit>
        <trans-unit id="35a9ce4931dbd91f1a8af537b9a38c062a2a2ad8" translate="yes" xml:space="preserve">
          <source>File paths</source>
          <target state="translated">파일 경로</target>
        </trans-unit>
        <trans-unit id="1bad21cb6e662a3a8974a3201ccc833f48f0a33c" translate="yes" xml:space="preserve">
          <source>File type constant for a FIFO/pipe.</source>
          <target state="translated">FIFO / 파이프의 파일 유형 상수.</target>
        </trans-unit>
        <trans-unit id="31e66c7294c24e93de5ac7a5bb4255eee457d0d7" translate="yes" xml:space="preserve">
          <source>File type constant for a block-oriented device file.</source>
          <target state="translated">블록 지향 장치 파일의 파일 유형 상수.</target>
        </trans-unit>
        <trans-unit id="a9b6d4a86ad3480afed431f26e451c5ce72205e9" translate="yes" xml:space="preserve">
          <source>File type constant for a character-oriented device file.</source>
          <target state="translated">문자 지향 장치 파일의 파일 형식 상수입니다.</target>
        </trans-unit>
        <trans-unit id="64125cdad1f1fad2a4f1ae4e71589cc1d495c26a" translate="yes" xml:space="preserve">
          <source>File type constant for a directory.</source>
          <target state="translated">디렉토리의 파일 형 정수.</target>
        </trans-unit>
        <trans-unit id="92527b4b61ff1f243773b3a2d6a3e165003d472c" translate="yes" xml:space="preserve">
          <source>File type constant for a regular file.</source>
          <target state="translated">일반 파일의 파일 형식 상수입니다.</target>
        </trans-unit>
        <trans-unit id="551c9c78b66871fb8ece445d56bd1fe7dd1f17b0" translate="yes" xml:space="preserve">
          <source>File type constant for a socket.</source>
          <target state="translated">소켓의 파일 형 정수.</target>
        </trans-unit>
        <trans-unit id="7b1987833542ff80d387db8ee91a784c08069e5c" translate="yes" xml:space="preserve">
          <source>File type constant for a symbolic link.</source>
          <target state="translated">심볼릭 링크의 파일 형식 상수</target>
        </trans-unit>
        <trans-unit id="e05b4ecf8f29a5fb278e5216a1a0bcc59f292e16" translate="yes" xml:space="preserve">
          <source>FileURL-based resolution as is used by ES modules</source>
          <target state="translated">ES 모듈에서 사용되는 FileURL 기반 해상도</target>
        </trans-unit>
        <trans-unit id="6658dd65a72369d8554ad5fa40c5ce20380c0114" translate="yes" xml:space="preserve">
          <source>Filename Argument</source>
          <target state="translated">파일 이름 인수</target>
        </trans-unit>
        <trans-unit id="f19a118b2a9f5fa74b28342d8dc41567fef0d017" translate="yes" xml:space="preserve">
          <source>Filename where the report is written. If set to the empty string, the output filename will be comprised of a timestamp, PID, and sequence number. The default value is the empty string.</source>
          <target state="translated">보고서가 작성된 파일 이름입니다. 빈 문자열로 설정하면 출력 파일 이름은 타임 스탬프, PID 및 시퀀스 번호로 구성됩니다. 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e812c6fcdf71a9a6761c1d7ab47470675e2c88d1" translate="yes" xml:space="preserve">
          <source>Files ending in &lt;code&gt;.cjs&lt;/code&gt;.</source>
          <target state="translated">끝나는 파일 &lt;code&gt;.cjs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c64778b1732a7744c60295fb757ea4a7be0936" translate="yes" xml:space="preserve">
          <source>Files ending in &lt;code&gt;.js&lt;/code&gt;, or extensionless files, when the nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a top-level field &lt;code&gt;&quot;type&quot;&lt;/code&gt; with a value of &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt;.</source>
          <target state="translated">로 끝나는 파일 &lt;code&gt;.js&lt;/code&gt; 가장 가까운 부모 때, 또는 확장명이 파일 &lt;code&gt;package.json&lt;/code&gt; 의 파일이 최상위 필드 포함 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 의 값을 &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7574f95e7b210c63abef99fafd53f0fab85d3b3a" translate="yes" xml:space="preserve">
          <source>Files ending in &lt;code&gt;.js&lt;/code&gt;, or extensionless files, when the nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a top-level field &lt;code&gt;&quot;type&quot;&lt;/code&gt; with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">로 끝나는 파일 &lt;code&gt;.js&lt;/code&gt; 가장 가까운 부모 때, 또는 확장명이 파일 &lt;code&gt;package.json&lt;/code&gt; 의 파일이 최상위 필드 포함 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 의 값을 &lt;code&gt;&quot;module&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0db8b011514bd3098a0db54c92247b9792f081b" translate="yes" xml:space="preserve">
          <source>Files ending in &lt;code&gt;.mjs&lt;/code&gt;.</source>
          <target state="translated">끝나는 파일 &lt;code&gt;.mjs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3c8b15d1c5a17c46249fa37ef85062b183ae56e" translate="yes" xml:space="preserve">
          <source>Files ending with &lt;code&gt;.cjs&lt;/code&gt; are always loaded as CommonJS regardless of package scope.</source>
          <target state="translated">&lt;code&gt;.cjs&lt;/code&gt; 로 끝나는 파일 은 패키지 범위에 관계없이 항상 CommonJS로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="26ae5d8dddc40d853d577a74e4ad8f06ffccb123" translate="yes" xml:space="preserve">
          <source>Files ending with &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.mjs&lt;/code&gt;, or lacking any extension, will be loaded as ES modules when the nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a top-level field &lt;code&gt;&quot;type&quot;&lt;/code&gt; with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">파일로 끝나는 &lt;code&gt;.js&lt;/code&gt; 또는 &lt;code&gt;.mjs&lt;/code&gt; 가장 가까운 부모 때, 또는 확장 결여는 ES 모듈로로드됩니다 &lt;code&gt;package.json&lt;/code&gt; 의 파일이 최상위 필드 포함 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 의 값을 &lt;code&gt;&quot;module&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c93f84cac80e0d2d81afdcf06f3b8a9125a8e9db" translate="yes" xml:space="preserve">
          <source>Files ending with &lt;code&gt;.mjs&lt;/code&gt; are always loaded as ES modules regardless of package scope.</source>
          <target state="translated">&lt;code&gt;.mjs&lt;/code&gt; 로 끝나는 파일 은 패키지 범위에 관계없이 항상 ES 모듈로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="48ef84d21bc2e840b4dd65c2d742afd1b30d8a7a" translate="yes" xml:space="preserve">
          <source>Files: &lt;em&gt;synchronous&lt;/em&gt; on Windows and POSIX</source>
          <target state="translated">파일 : Windows 및 POSIX에서 &lt;em&gt;동기&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="912e8f5343a8f6bc55d8c0913802c06444ea8327" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;buf&lt;/code&gt; with the specified &lt;code&gt;value&lt;/code&gt;. If the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are not given, the entire &lt;code&gt;buf&lt;/code&gt; will be filled:</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 를 지정된 &lt;code&gt;value&lt;/code&gt; 채 웁니다 . 경우 &lt;code&gt;offset&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 제공되지 않습니다, 전체 &lt;code&gt;buf&lt;/code&gt; 채워집니다 :</target>
        </trans-unit>
        <trans-unit id="bdf5acb6eb987e41cf495c216e4933104a388adb" translate="yes" xml:space="preserve">
          <source>Finally, multiple properties can also be defined on an object for performance reasons. Consider the following JavaScript:</source>
          <target state="translated">마지막으로 성능상의 이유로 개체에 여러 속성을 정의 할 수도 있습니다. 다음 JavaScript를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5ccac172ae5f02f9a668db136b351d336b251976" translate="yes" xml:space="preserve">
          <source>Finishes sending the request. If any parts of the body are unsent, it will flush them to the stream. If the request is chunked, this will send the terminating &lt;code&gt;'0\r\n\r\n'&lt;/code&gt;.</source>
          <target state="translated">요청 전송을 완료합니다. 본문의 어떤 부분도 보내지 않으면 스트림으로 플러시합니다. 요청이 청크되면 종료 &lt;code&gt;'0\r\n\r\n'&lt;/code&gt; 을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="a6d4c93097ca1690d30953b8300253260178112a" translate="yes" xml:space="preserve">
          <source>Fires immediately after &lt;code&gt;'open'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'open'&lt;/code&gt; 직후에 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c22fad220f8b01af47bda572031aff768e32ef6b" translate="yes" xml:space="preserve">
          <source>First contextifies the given &lt;code&gt;sandbox&lt;/code&gt;, runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; object within the created sandbox, and returns the result. Running code does not have access to local scope.</source>
          <target state="translated">먼저 지정된 &lt;code&gt;sandbox&lt;/code&gt; 를 &lt;code&gt;vm.Script&lt;/code&gt; 하고 작성된 샌드 박스 내 vm.Script 오브젝트에 포함 된 컴파일 된 코드를 실행 한 후 결과를 리턴합니다. 실행 코드는 로컬 범위에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fbec0c9e7885eb51d3e1ba195359fbe71954fac8" translate="yes" xml:space="preserve">
          <source>First, a stream developer would declare a new JavaScript class that extends one of the four basic stream classes (&lt;code&gt;stream.Writable&lt;/code&gt;, &lt;code&gt;stream.Readable&lt;/code&gt;, &lt;code&gt;stream.Duplex&lt;/code&gt;, or &lt;code&gt;stream.Transform&lt;/code&gt;), making sure they call the appropriate parent class constructor:</source>
          <target state="translated">첫째, 스트림 개발자는 네 가지 기본 스트림 클래스 (중 하나를 확장하는 새 자바 스크립트 클래스를 선언 할 것 &lt;code&gt;stream.Writable&lt;/code&gt; , &lt;code&gt;stream.Readable&lt;/code&gt; , &lt;code&gt;stream.Duplex&lt;/code&gt; , 또는 &lt;code&gt;stream.Transform&lt;/code&gt; 을 확인 그들이 적절한 부모 클래스의 생성자를 호출하고,) :</target>
        </trans-unit>
        <trans-unit id="9af740ef1bd5ea5af06c5988224b7616ca48e469" translate="yes" xml:space="preserve">
          <source>First, create the file &lt;code&gt;hello.cc&lt;/code&gt;:</source>
          <target state="translated">먼저 &lt;code&gt;hello.cc&lt;/code&gt; 파일을 만듭니다 :</target>
        </trans-unit>
        <trans-unit id="f6bb84cef0528de2fdf5d63c4c9393277ad3cb35" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;createObject()&lt;/code&gt; method is implemented in &lt;code&gt;addon.cc&lt;/code&gt;:</source>
          <target state="translated">먼저 &lt;code&gt;createObject()&lt;/code&gt; 메소드는 &lt;code&gt;addon.cc&lt;/code&gt; 에서 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="4800670f8ad27947927af359cbb8f518bcb9d711" translate="yes" xml:space="preserve">
          <source>Flag indicating reading accesses to the file system will no longer result in an update to the &lt;code&gt;atime&lt;/code&gt; information associated with the file. This flag is available on Linux operating systems only.</source>
          <target state="translated">파일 시스템에 대한 읽기 액세스를 나타내는 플래그는 더 이상 파일과 관련된 &lt;code&gt;atime&lt;/code&gt; 정보를 업데이트하지 않습니다 . 이 플래그는 Linux 운영 체제에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="6203a63eba0ab5bac9288c9bbbd56a2949e03284" translate="yes" xml:space="preserve">
          <source>Flag indicating that data will be appended to the end of the file.</source>
          <target state="translated">데이터가 파일 끝에 추가 될 것임을 나타내는 플래그.</target>
        </trans-unit>
        <trans-unit id="3ecca9426f7a18515bcdd018f719181e400c2032" translate="yes" xml:space="preserve">
          <source>Flag indicating that if path identifies a terminal device, opening the path shall not cause that terminal to become the controlling terminal for the process (if the process does not already have one).</source>
          <target state="translated">경로가 터미널 장치를 식별하는 경우 경로를 열면 해당 터미널이 프로세스의 제어 터미널이되지 않아야합니다 (프로세스에 아직없는 경우).</target>
        </trans-unit>
        <trans-unit id="3c5c2b98286a0a0f4c8177fdf1d668c1db4bcce7" translate="yes" xml:space="preserve">
          <source>Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero.</source>
          <target state="translated">파일이 존재하고 일반 파일이고 쓰기 액세스를 위해 파일을 성공적으로 열었 음을 나타내는 플래그는 길이가 0으로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="e118cb7c6683b538bab4ed94bf7de2f00fd8727e" translate="yes" xml:space="preserve">
          <source>Flag indicating that opening a file should fail if the &lt;code&gt;O_CREAT&lt;/code&gt; flag is set and the file already exists.</source>
          <target state="translated">&lt;code&gt;O_CREAT&lt;/code&gt; 플래그가 설정되고 파일이 이미 존재하는 경우 파일 열기가 실패해야 함을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="f64965ec7220ae5c25705b555f0641f855e3976e" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file can be executed by the calling process. This has no effect on Windows (will behave like &lt;code&gt;fs.constants.F_OK&lt;/code&gt;).</source>
          <target state="translated">호출 프로세스에서 파일을 실행할 수 있음을 나타내는 플래그입니다. 이것은 Windows에 영향을 미치지 않습니다 ( &lt;code&gt;fs.constants.F_OK&lt;/code&gt; 처럼 작동 함 ).</target>
        </trans-unit>
        <trans-unit id="46948853c1359be53904b38562e372026a264b0a" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file can be read by the calling process.</source>
          <target state="translated">호출 프로세스가 파일을 읽을 수 있음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="8ca617d086ae1b65ebd4130f9ab73548c56be72e" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file can be written by the calling process.</source>
          <target state="translated">호출 프로세스에서 파일을 쓸 수 있음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="468f7f0e2609aaaf1702d380d4519956f3a882b6" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file is opened for synchronized I/O with write operations waiting for data integrity.</source>
          <target state="translated">데이터 무결성을 기다리는 쓰기 조작으로 동기화 된 I / O를 위해 파일이 열린 것을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="c3650665aa50c58fb1d5160889ba5d7928503603" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file is opened for synchronized I/O with write operations waiting for file integrity.</source>
          <target state="translated">파일 무결성을 기다리는 쓰기 조작으로 동기화 된 I / O를 위해 파일이 열린 것을 나타내는 플래그.</target>
        </trans-unit>
        <trans-unit id="b447a0344c553b4a266b7c6400e8d27962905471" translate="yes" xml:space="preserve">
          <source>Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing about &lt;code&gt;rwx&lt;/code&gt; permissions. Default if no mode is specified.</source>
          <target state="translated">파일이 호출 프로세스에 표시됨을 나타내는 플래그입니다. 파일이 있는지 확인하는 데 유용하지만 &lt;code&gt;rwx&lt;/code&gt; 권한 에 대해서는 아무 것도 말하지 않습니다 . 모드가 지정되지 않은 경우 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="41e1279208bacee158ad424e7cbbf95260774bc0" translate="yes" xml:space="preserve">
          <source>Flag indicating that the open should fail if the path is a symbolic link.</source>
          <target state="translated">경로가 기호 링크 인 경우 열기가 실패해야 함을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="f00bca1c2710c0a8faac60abc465a7014ba68dcc" translate="yes" xml:space="preserve">
          <source>Flag indicating that the open should fail if the path is not a directory.</source>
          <target state="translated">경로가 디렉토리가 아닌 경우 열기가 실패해야 함을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="8133ad9a0ce13e8a44a3c1f300422f2082a58af7" translate="yes" xml:space="preserve">
          <source>Flag indicating to create the file if it does not already exist.</source>
          <target state="translated">파일이 존재하지 않는 경우 파일을 작성하도록 표시하는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="73d2d1f5d768074fccb754d6c032ca5ecdf97b92" translate="yes" xml:space="preserve">
          <source>Flag indicating to open a file for read-only access.</source>
          <target state="translated">읽기 전용 액세스를 위해 파일을 여는 것을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="4b12518e195f57218f3ed6a96eea234b0accc1e0" translate="yes" xml:space="preserve">
          <source>Flag indicating to open a file for read-write access.</source>
          <target state="translated">읽기-쓰기 액세스를 위해 파일을 여는 것을 나타내는 플래그.</target>
        </trans-unit>
        <trans-unit id="8b0845898183de3e00d3deb5bbbdf27ea5e51a76" translate="yes" xml:space="preserve">
          <source>Flag indicating to open a file for write-only access.</source>
          <target state="translated">쓰기 전용 액세스를 위해 파일을 여는 것을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="e7408fb6b2c829ac7bd48977c90671d575f42d1c" translate="yes" xml:space="preserve">
          <source>Flag indicating to open the file in nonblocking mode when possible.</source>
          <target state="translated">가능한 경우 비 블로킹 모드에서 파일을 여는 것을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="1339d1e741cbeb2c2831c779fdeca7072ea926c0" translate="yes" xml:space="preserve">
          <source>Flag indicating to open the symbolic link itself rather than the resource it is pointing to.</source>
          <target state="translated">가리키는 자원이 아닌 기호 링크 자체를 여는 것을 나타내는 플래그.</target>
        </trans-unit>
        <trans-unit id="d24262e0c8f22de88f9adc1e1457d8184bb10092" translate="yes" xml:space="preserve">
          <source>Flags &lt;em&gt;must&lt;/em&gt; be allowable within &lt;a href=&quot;cli#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플래그 &lt;em&gt;는 &lt;/em&gt;&lt;a href=&quot;cli#cli_node_options_options&quot;&gt; &lt;code&gt;NODE_OPTIONS&lt;/code&gt; &lt;/a&gt; 내에서 허용 &lt;em&gt;되어야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="20e16ebeb6278789bfb194ff26fdc1fde8ae2753" translate="yes" xml:space="preserve">
          <source>Flags may contain one or more equals (&lt;code&gt;=&lt;/code&gt;) characters; all characters after and including the first equals will be ignored; e.g., &lt;code&gt;--stack-trace-limit=100&lt;/code&gt;.</source>
          <target state="translated">플래그는 하나 이상의 등호 ( &lt;code&gt;=&lt;/code&gt; ) 문자를 포함 할 수 있습니다 . 첫 번째 등호 다음을 포함한 모든 문자는 무시됩니다. 예를 들어, &lt;code&gt;--stack-trace-limit=100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72a5eb9494f325092ff0c9f575491b207e0de167" translate="yes" xml:space="preserve">
          <source>Flags may omit leading single (&lt;code&gt;-&lt;/code&gt;) or double (&lt;code&gt;--&lt;/code&gt;) dashes; e.g., &lt;code&gt;inspect-brk&lt;/code&gt; for &lt;code&gt;--inspect-brk&lt;/code&gt;, or &lt;code&gt;r&lt;/code&gt; for &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">플래그는 선행 단일 ( &lt;code&gt;-&lt;/code&gt; ) 또는 이중 ( &lt;code&gt;--&lt;/code&gt; ) 대시를 생략 할 수 있습니다 . 예를 들면, &lt;code&gt;inspect-brk&lt;/code&gt; 에 대한 &lt;code&gt;--inspect-brk&lt;/code&gt; , 또는 &lt;code&gt;r&lt;/code&gt; 에 대한 &lt;code&gt;-r&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="a199364f6ef3b768037b4c62b4526feb9230652e" translate="yes" xml:space="preserve">
          <source>Flags passed through to V8 (as listed in &lt;code&gt;--v8-options&lt;/code&gt;) may replace one or more &lt;em&gt;non-leading&lt;/em&gt; dashes for an underscore, or vice-versa; e.g., &lt;code&gt;--perf_basic_prof&lt;/code&gt;, &lt;code&gt;--perf-basic-prof&lt;/code&gt;, &lt;code&gt;--perf_basic-prof&lt;/code&gt;, etc.</source>
          <target state="translated">V8에 전달 된 플래그 ( &lt;code&gt;--v8-options&lt;/code&gt; 에 나열 됨 )는 밑줄에 대한 하나 이상의 &lt;em&gt;비대시&lt;/em&gt; 대시를 대체 하거나 그 반대로 할 수 있습니다. 예 : &lt;code&gt;--perf_basic_prof&lt;/code&gt; , &lt;code&gt;--perf-basic-prof&lt;/code&gt; , &lt;code&gt;--perf_basic-prof&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="c6f86d623ffc9d5a5f32a250b098e6bef08529d4" translate="yes" xml:space="preserve">
          <source>Flow Control Error</source>
          <target state="translated">흐름 제어 오류</target>
        </trans-unit>
        <trans-unit id="05f539596c85a8dcff913b8786aee719a585dfe5" translate="yes" xml:space="preserve">
          <source>Flush operations</source>
          <target state="translated">플러시 작업</target>
        </trans-unit>
        <trans-unit id="c3db444af1ef5ead4ffca281491c5831f95302fb" translate="yes" xml:space="preserve">
          <source>Flush pending data. Don't call this frivolously, premature flushes negatively impact the effectiveness of the compression algorithm.</source>
          <target state="translated">보류중인 데이터를 비 웁니다. 이것을 엄청나게 부르지 말고 조기 플러시는 압축 알고리즘의 효과에 부정적인 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="af0144ad8588391b2f587a0b967a54e12bfe650e" translate="yes" xml:space="preserve">
          <source>Flushes the request headers.</source>
          <target state="translated">요청 헤더를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="6581c7edc58d10b0e77e444e8de35dff2af33545" translate="yes" xml:space="preserve">
          <source>Flushes the response headers. See also: &lt;a href=&quot;#http_request_flushheaders&quot;&gt;&lt;code&gt;request.flushHeaders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응답 헤더를 플러시합니다. &lt;a href=&quot;#http_request_flushheaders&quot;&gt; &lt;code&gt;request.flushHeaders()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca447072e179b8239502f1f4cd8c8f7174c9b801" translate="yes" xml:space="preserve">
          <source>Flushing</source>
          <target state="translated">Flushing</target>
        </trans-unit>
        <trans-unit id="948f30180920619fed0f6f0ff2fa1b319bfa7d68" translate="yes" xml:space="preserve">
          <source>Folders as Modules</source>
          <target state="translated">모듈로서의 폴더</target>
        </trans-unit>
        <trans-unit id="e964430cef74586c5f2c2f25b435d9e04075a1a5" translate="yes" xml:space="preserve">
          <source>Folders can also be mapped with package exports:</source>
          <target state="translated">패키지 내보내기로 폴더를 매핑 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c99c144cf5b270c52f8725c4b844b0c19827c50" translate="yes" xml:space="preserve">
          <source>Following are some example Addons intended to help developers get started. The examples make use of the V8 APIs. Refer to the online &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;V8 reference&lt;/a&gt; for help with the various V8 calls, and V8's &lt;a href=&quot;https://github.com/v8/v8/wiki/Embedder's%20Guide&quot;&gt;Embedder's Guide&lt;/a&gt; for an explanation of several concepts used such as handles, scopes, function templates, etc.</source>
          <target state="translated">다음은 개발자가 시작하는 데 도움이되는 애드온의 예입니다. 예제는 V8 API를 사용합니다. 다양한 V8 호출에 대한 도움말 은 온라인 &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;V8 참조&lt;/a&gt; 를, 핸들, 스코프, 함수 템플릿 등과 같은 여러 개념에 대한 설명은 V8 &lt;a href=&quot;https://github.com/v8/v8/wiki/Embedder's%20Guide&quot;&gt;Embedder 's Guide&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7fbf548c54fc5019a00dc97cf34a6dbbf46c6fb9" translate="yes" xml:space="preserve">
          <source>Following is a simple overview of the public API.</source>
          <target state="translated">다음은 공개 API에 대한 간단한 개요입니다.</target>
        </trans-unit>
        <trans-unit id="3d3da17627bbb105a67ffaef4cde451b1975b1c7" translate="yes" xml:space="preserve">
          <source>Following is an example of a client of the echo server described in the &lt;a href=&quot;#net_net_createserver_options_connectionlistener&quot;&gt;&lt;code&gt;net.createServer()&lt;/code&gt;&lt;/a&gt; section:</source>
          <target state="translated">다음은 &lt;a href=&quot;#net_net_createserver_options_connectionlistener&quot;&gt; &lt;code&gt;net.createServer()&lt;/code&gt; &lt;/a&gt; 섹션에 설명 된 에코 서버 클라이언트의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="50f12e835371a94a0761fa5bd02427c269944d14" translate="yes" xml:space="preserve">
          <source>Following successful read, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an object with a &lt;code&gt;bytesRead&lt;/code&gt; property specifying the number of bytes read, and a &lt;code&gt;buffer&lt;/code&gt; property that is a reference to the passed in &lt;code&gt;buffer&lt;/code&gt; argument.</source>
          <target state="translated">읽은 후, &lt;code&gt;Promise&lt;/code&gt; 는 읽은 바이트 수를 지정 하는 &lt;code&gt;bytesRead&lt;/code&gt; 속성과 전달 된 &lt;code&gt;buffer&lt;/code&gt; 인수 에 대한 참조 인 &lt;code&gt;buffer&lt;/code&gt; 속성을 가진 개체로 확인됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e751ad7175cba92753720b10ba78d5928c127b0" translate="yes" xml:space="preserve">
          <source>Follows &lt;code&gt;require()&lt;/code&gt;'s module resolution rules. &lt;code&gt;module&lt;/code&gt; may be either a path to a file, or a node module name.</source>
          <target state="translated">&lt;code&gt;require()&lt;/code&gt; 의 모듈 확인 규칙을 따릅니다 . &lt;code&gt;module&lt;/code&gt; 은 파일의 경로이거나 노드 모듈 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="364153e1c2cf21cfe5f226aed551c4d175223ae8" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; connections, available &lt;code&gt;options&lt;/code&gt; are:</source>
          <target state="translated">들어 &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC의&lt;/a&gt; 연결 가능한 &lt;code&gt;options&lt;/code&gt; 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6743ce5cc737d221faa9da6d6e2770ef67f0eaed" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'base64'&lt;/code&gt; and &lt;code&gt;'hex'&lt;/code&gt;, this function assumes valid input. For strings that contain non-Base64/Hex-encoded data (e.g. whitespace), the return value might be greater than the length of a &lt;code&gt;Buffer&lt;/code&gt; created from the string.</source>
          <target state="translated">들어 &lt;code&gt;'base64'&lt;/code&gt; 와 &lt;code&gt;'hex'&lt;/code&gt; ,이 기능은 유효한 입력을 가정합니다. Base64가 아닌 16 진수로 인코딩 된 데이터 (예 : 공백)가 포함 된 문자열의 경우 반환 값이 문자열에서 생성 된 &lt;code&gt;Buffer&lt;/code&gt; 길이보다 클 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5738b1d816bc0019a52ca62db0ce81fdbf60fca3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Duplex&lt;/code&gt; streams, &lt;code&gt;objectMode&lt;/code&gt; can be set exclusively for either the &lt;code&gt;Readable&lt;/code&gt; or &lt;code&gt;Writable&lt;/code&gt; side using the &lt;code&gt;readableObjectMode&lt;/code&gt; and &lt;code&gt;writableObjectMode&lt;/code&gt; options respectively.</source>
          <target state="translated">들면 &lt;code&gt;Duplex&lt;/code&gt; 스트림 &lt;code&gt;objectMode&lt;/code&gt; 는 어느만으로 설정 될 수 &lt;code&gt;Readable&lt;/code&gt; 또는 &lt;code&gt;Writable&lt;/code&gt; 은 USING 측 &lt;code&gt;readableObjectMode&lt;/code&gt; 및 &lt;code&gt;writableObjectMode&lt;/code&gt; 의 각각 옵션.</target>
        </trans-unit>
        <trans-unit id="726a3814672a51bb16b132deb5b27c9dfceacadd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;IPv6&lt;/code&gt;, the minimum &lt;code&gt;MTU&lt;/code&gt; is &lt;code&gt;1280&lt;/code&gt; octets, however, the mandatory minimum fragment reassembly buffer size is &lt;code&gt;1500&lt;/code&gt; octets. The value of &lt;code&gt;68&lt;/code&gt; octets is very small, since most current link layer technologies, like Ethernet, have a minimum &lt;code&gt;MTU&lt;/code&gt; of &lt;code&gt;1500&lt;/code&gt;.</source>
          <target state="translated">내용 &lt;code&gt;IPv6&lt;/code&gt; , 최소 &lt;code&gt;MTU&lt;/code&gt; 는 인 &lt;code&gt;1280&lt;/code&gt; 옥텟 그러나, 필수 최소 단편 재조합 버퍼 크기가 &lt;code&gt;1500&lt;/code&gt; 옥텟. 이더넷과 같은 대부분의 현재 링크 계층 기술은 최소 &lt;code&gt;MTU&lt;/code&gt; 가 &lt;code&gt;1500&lt;/code&gt; 이기 때문에 &lt;code&gt;68&lt;/code&gt; 옥텟 의 값 은 매우 작습니다 .</target>
        </trans-unit>
        <trans-unit id="807ed9c50474fd97ddcf0fbafe4910d8a06b93be" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; objects, if an &lt;code&gt;'error'&lt;/code&gt; event handler is not provided, the error will be thrown, causing the Node.js process to report an uncaught exception and crash unless either: The &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module is used appropriately or a handler has been registered for the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">들어 &lt;em&gt;모든 &lt;/em&gt;&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; 의&lt;/a&gt; 는 IF 객체, &lt;code&gt;'error'&lt;/code&gt; : 이벤트 핸들러가 제공되지 않는 오류가하지 않는 한 어느 쪽 캐치되지 않는 예외와 충돌을보고 할 Node.js를 원인 프로세스 발생합니다 &lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; 모듈이 적절하게 사용하거나 핸들러가 등록 된 에 대한 &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt; &lt;code&gt;'uncaughtException'&lt;/code&gt; &lt;/a&gt; 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="9db239cb39b6243c0a9896e792edcb1f42803ef2" translate="yes" xml:space="preserve">
          <source>For API consistency &lt;code&gt;disable()&lt;/code&gt; also returns the &lt;code&gt;AsyncHook&lt;/code&gt; instance.</source>
          <target state="translated">API 일관성을 위해 &lt;code&gt;disable()&lt;/code&gt; 은 &lt;code&gt;AsyncHook&lt;/code&gt; 인스턴스 도 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3588eddb6018d7625324d1f57375f846d2459584" translate="yes" xml:space="preserve">
          <source>For Brotli-based streams</source>
          <target state="translated">Brotli 기반 스트림</target>
        </trans-unit>
        <trans-unit id="f745f32641eabb2eb1367bcb56d453946dde71bc" translate="yes" xml:space="preserve">
          <source>For EC keys, the following properties may be defined:</source>
          <target state="translated">EC 키의 경우 다음 속성을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ff2da1e3a9deef252592555908b062e3d215e3" translate="yes" xml:space="preserve">
          <source>For HTTP/2 Client &lt;code&gt;Http2Session&lt;/code&gt; instances only, the &lt;code&gt;http2session.request()&lt;/code&gt; creates and returns an &lt;code&gt;Http2Stream&lt;/code&gt; instance that can be used to send an HTTP/2 request to the connected server.</source>
          <target state="translated">HTTP / 2 클라이언트 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스의 경우에만 &lt;code&gt;http2session.request()&lt;/code&gt; 는 연결된 서버에 HTTP / 2 요청을 보내는 데 사용할 수 있는 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스를 작성하고 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ac52d39bfe5e210ec0d46e02a56edabe98515f79" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:authority&lt;/code&gt; pseudo-header is required.</source>
          <target state="translated">&lt;code&gt;CONNECT&lt;/code&gt; 메소드를 사용하는 HTTP / 2 요청의 경우 &lt;code&gt;:authority&lt;/code&gt; pseudo-header가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1235c965de149b89779a05b39e095354458ec8b3" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:path&lt;/code&gt; pseudo-header is forbidden.</source>
          <target state="translated">&lt;code&gt;CONNECT&lt;/code&gt; 메소드를 사용하는 HTTP / 2 요청의 경우 &lt;code&gt;:path&lt;/code&gt; 의사 헤더는 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="9f76b25e7f9c52c79a4dd8c33b36c128a6246cd7" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:scheme&lt;/code&gt; pseudo-header is forbidden.</source>
          <target state="translated">&lt;code&gt;CONNECT&lt;/code&gt; 메소드를 사용하는 HTTP / 2 요청의 경우 &lt;code&gt;:scheme&lt;/code&gt; 의사 헤더가 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="d7b4dc5adbc9a37cc0fa282f9707d1bf909242a6" translate="yes" xml:space="preserve">
          <source>For IPv4 sockets, this should be the IP configured for the desired physical interface. All packets sent to multicast on the socket will be sent on the interface determined by the most recent successful use of this call.</source>
          <target state="translated">IPv4 소켓의 경우 원하는 물리적 인터페이스에 대해 구성된 IP 여야합니다. 소켓에서 멀티 캐스트로 전송 된 모든 패킷은이 호출의 가장 최근 사용에 의해 결정된 인터페이스로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="da7e5155b506d17e1cd7f7057b5e95a6f05d933c" translate="yes" xml:space="preserve">
          <source>For IPv6 sockets, &lt;code&gt;multicastInterface&lt;/code&gt; should include a scope to indicate the interface as in the examples that follow. In IPv6, individual &lt;code&gt;send&lt;/code&gt; calls can also use explicit scope in addresses, so only packets sent to a multicast address without specifying an explicit scope are affected by the most recent successful use of this call.</source>
          <target state="translated">IPv6 소켓의 경우 &lt;code&gt;multicastInterface&lt;/code&gt; 에는 다음 예제와 같이 인터페이스를 나타내는 범위가 포함되어야합니다. IPv6에서 개별 &lt;code&gt;send&lt;/code&gt; 호출은 주소에서 명시 적 범위를 사용할 수도 있으므로 명시 적 범위를 지정하지 않고 멀티 캐스트 주소로 전송 된 패킷 만이 호출의 가장 성공적인 사용에 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="d72f8355ff2ff242fbb93f63d211c16d47fcbf07" translate="yes" xml:space="preserve">
          <source>For Node.js &amp;gt;=4 &lt;code&gt;Buffers&lt;/code&gt; are &lt;code&gt;Uint8Array&lt;/code&gt;s.</source>
          <target state="translated">Node.js&amp;gt; = 4의 경우 &lt;code&gt;Buffers&lt;/code&gt; 는 &lt;code&gt;Uint8Array&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d91b862c34fefcbbfc2f7f3f050ba30ad9c62cea" translate="yes" xml:space="preserve">
          <source>For Node.js, clients use the same APIs for resumption with session identifiers as for resumption with session tickets. For debugging, if &lt;a href=&quot;#tls_tlssocket_gettlsticket&quot;&gt;&lt;code&gt;tls.TLSSocket.getTLSTicket()&lt;/code&gt;&lt;/a&gt; returns a value, the session data contains a ticket, otherwise it contains client-side session state.</source>
          <target state="translated">Node.js의 경우 클라이언트는 세션 티켓으로 재개 할 때와 세션 식별자로 재개 할 때 동일한 API를 사용합니다. 디버깅을 위해 &lt;a href=&quot;#tls_tlssocket_gettlsticket&quot;&gt; &lt;code&gt;tls.TLSSocket.getTLSTicket()&lt;/code&gt; &lt;/a&gt; 이 값을 반환하면 세션 데이터에 티켓이 포함되고 그렇지 않으면 클라이언트 측 세션 상태가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c96e0afc2bb2d26f14d553f20addf6a5c8b0dd68" translate="yes" xml:space="preserve">
          <source>For Node.js, clients wait for the &lt;a href=&quot;#tls_event_session&quot;&gt;&lt;code&gt;'session'&lt;/code&gt;&lt;/a&gt; event to get the session data, and provide the data to the &lt;code&gt;session&lt;/code&gt; option of a subsequent &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to reuse the session. Servers must implement handlers for the &lt;a href=&quot;#tls_event_newsession&quot;&gt;&lt;code&gt;'newSession'&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tls_event_resumesession&quot;&gt;&lt;code&gt;'resumeSession'&lt;/code&gt;&lt;/a&gt; events to save and restore the session data using the session ID as the lookup key to reuse sessions. To reuse sessions across load balancers or cluster workers, servers must use a shared session cache (such as Redis) in their session handlers.</source>
          <target state="translated">Node.js의 경우 클라이언트는 &lt;a href=&quot;#tls_event_session&quot;&gt; &lt;code&gt;'session'&lt;/code&gt; &lt;/a&gt; 이벤트가 세션 데이터를 가져 오기를 &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 세션을 재사용하기 위해 후속 tls.connect () 의 &lt;code&gt;session&lt;/code&gt; 옵션에 데이터를 제공합니다 . 서버는 세션을 재사용하기위한 검색 키로 세션 ID를 사용하여 세션 데이터를 저장하고 복원 하려면 &lt;a href=&quot;#tls_event_newsession&quot;&gt; &lt;code&gt;'newSession'&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#tls_event_resumesession&quot;&gt; &lt;code&gt;'resumeSession'&lt;/code&gt; &lt;/a&gt; 이벤트에 대한 핸들러를 구현해야 합니다. 로드 밸런서 또는 클러스터 워커에서 세션을 재사용하려면 서버는 세션 핸들러에서 공유 세션 캐시 (예 : Redis)를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a31791d20d42eff4891173bcddf13197675ee48" translate="yes" xml:space="preserve">
          <source>For RSA keys, the following properties may be defined:</source>
          <target state="translated">RSA 키의 경우 다음 속성을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d77554b430ac3edbc023e55df228aa42aa46a1fd" translate="yes" xml:space="preserve">
          <source>For TCP connections, available &lt;code&gt;options&lt;/code&gt; are:</source>
          <target state="translated">TCP 연결의 경우 사용 가능한 &lt;code&gt;options&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="979dfbcfa700e680c9501372ceaa9ed2a59656aa" translate="yes" xml:space="preserve">
          <source>For TLSv1.3, renegotiation cannot be initiated, it is not supported by the protocol.</source>
          <target state="translated">TLSv1.3의 경우 재협상을 시작할 수 없으며 프로토콜에서 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3744b46885dc2cf0f0abd7bd5b5b20e9ce947bf9" translate="yes" xml:space="preserve">
          <source>For UDP sockets, causes the &lt;code&gt;dgram.Socket&lt;/code&gt; to listen for datagram messages on a named &lt;code&gt;port&lt;/code&gt; and optional &lt;code&gt;address&lt;/code&gt; that are passed as properties of an &lt;code&gt;options&lt;/code&gt; object passed as the first argument. If &lt;code&gt;port&lt;/code&gt; is not specified or is &lt;code&gt;0&lt;/code&gt;, the operating system will attempt to bind to a random port. If &lt;code&gt;address&lt;/code&gt; is not specified, the operating system will attempt to listen on all addresses. Once binding is complete, a &lt;code&gt;'listening'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called.</source>
          <target state="translated">UDP 소켓의 경우 &lt;code&gt;dgram.Socket&lt;/code&gt; 이 첫 번째 인수로 전달 된 &lt;code&gt;options&lt;/code&gt; 객체의 속성으로 전달 된 명명 된 &lt;code&gt;port&lt;/code&gt; 및 선택적 &lt;code&gt;address&lt;/code&gt; 에서 데이터 그램 메시지를 수신합니다 . 경우 &lt;code&gt;port&lt;/code&gt; 지정되지 않았거나 &lt;code&gt;0&lt;/code&gt; , 운영 시스템은 임의의 포트에 바인딩을 시도합니다. 경우 &lt;code&gt;address&lt;/code&gt; 지정되지 않은 운영 체제는 모든 주소를 수신 할 시도합니다. 바인딩이 완료되면 &lt;code&gt;'listening'&lt;/code&gt; 이벤트가 생성되고 선택적 &lt;code&gt;callback&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="63b5a5e0d8c4664472ec4c4a544906d5dce5d01e" translate="yes" xml:space="preserve">
          <source>For UDP sockets, causes the &lt;code&gt;dgram.Socket&lt;/code&gt; to listen for datagram messages on a named &lt;code&gt;port&lt;/code&gt; and optional &lt;code&gt;address&lt;/code&gt;. If &lt;code&gt;port&lt;/code&gt; is not specified or is &lt;code&gt;0&lt;/code&gt;, the operating system will attempt to bind to a random port. If &lt;code&gt;address&lt;/code&gt; is not specified, the operating system will attempt to listen on all addresses. Once binding is complete, a &lt;code&gt;'listening'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called.</source>
          <target state="translated">UDP 소켓의 경우 &lt;code&gt;dgram.Socket&lt;/code&gt; 이 이름 지정된 &lt;code&gt;port&lt;/code&gt; 및 선택적 &lt;code&gt;address&lt;/code&gt; 에서 데이터 그램 메시지를 청취 합니다 . 경우 &lt;code&gt;port&lt;/code&gt; 지정되지 않았거나 &lt;code&gt;0&lt;/code&gt; , 운영 시스템은 임의의 포트에 바인딩을 시도합니다. 경우 &lt;code&gt;address&lt;/code&gt; 지정되지 않은 운영 체제는 모든 주소를 수신 할 시도합니다. 바인딩이 완료되면 &lt;code&gt;'listening'&lt;/code&gt; 이벤트가 생성되고 선택적 &lt;code&gt;callback&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0f10d6312c65a10e40478628490edb2096732122" translate="yes" xml:space="preserve">
          <source>For a client, returns the TLS session ticket if one is available, or &lt;code&gt;undefined&lt;/code&gt;. For a server, always returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">클라이언트의 경우 TLS 세션 티켓이 사용 가능하거나 &lt;code&gt;undefined&lt;/code&gt; 경우이를 리턴합니다 . 서버의 경우 항상 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="630f6e17ed438455cfbf701cc3919cfedd516f9b" translate="yes" xml:space="preserve">
          <source>For a file &lt;code&gt;foo.js&lt;/code&gt;, this will be &lt;code&gt;true&lt;/code&gt; if run via &lt;code&gt;node foo.js&lt;/code&gt;, but &lt;code&gt;false&lt;/code&gt; if run by &lt;code&gt;require('./foo')&lt;/code&gt;.</source>
          <target state="translated">파일의 경우 &lt;code&gt;foo.js&lt;/code&gt; ,이 될 것입니다 &lt;code&gt;true&lt;/code&gt; 통해 실행하는 경우 &lt;code&gt;node foo.js&lt;/code&gt; 하지만 &lt;code&gt;false&lt;/code&gt; 으로 실행하는 경우 &lt;code&gt;require('./foo')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="092b0e56ba5f0c7434ace0be825451abc0fc5031" translate="yes" xml:space="preserve">
          <source>For a main program this is not necessarily the same as the file name used in the command line.</source>
          <target state="translated">기본 프로그램의 경우 이는 명령 행에 사용 된 파일 이름과 반드시 ​​같을 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="094a7aed80ffd76ce1da617382947687f2caf83d" translate="yes" xml:space="preserve">
          <source>For a server listening on a pipe or Unix domain socket, the name is returned as a string.</source>
          <target state="translated">파이프 또는 Unix 도메인 소켓에서 수신 대기하는 서버의 경우 이름이 문자열로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b77166bb59c03f091498405867db62e6d7e2ce9f" translate="yes" xml:space="preserve">
          <source>For a timer that was previously started by calling &lt;a href=&quot;#console_console_time_label&quot;&gt;&lt;code&gt;console.time()&lt;/code&gt;&lt;/a&gt;, prints the elapsed time and other &lt;code&gt;data&lt;/code&gt; arguments to &lt;code&gt;stdout&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;#console_console_time_label&quot;&gt; &lt;code&gt;console.time()&lt;/code&gt; &lt;/a&gt; 을 호출하여 이전에 시작한 타이머의 경우 경과 시간 및 기타 &lt;code&gt;data&lt;/code&gt; 인수를 &lt;code&gt;stdout&lt;/code&gt; 에 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="d97dbfb76da7ef6e4ade39dc2ca4fda8cbd356aa" translate="yes" xml:space="preserve">
          <source>For advanced line-editors, start Node.js with the environment variable &lt;code&gt;NODE_NO_READLINE=1&lt;/code&gt;. This will start the main and debugger REPL in canonical terminal settings, which will allow use with &lt;code&gt;rlwrap&lt;/code&gt;.</source>
          <target state="translated">고급 라인 편집기의 경우 환경 변수 &lt;code&gt;NODE_NO_READLINE=1&lt;/code&gt; 로 Node.js를 시작하십시오 . 그러면 정식 터미널 설정에서 기본 및 디버거 REPL이 시작되어 &lt;code&gt;rlwrap&lt;/code&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="956902aa84cfb91f426f18cd11e77e87658eab1e" translate="yes" xml:space="preserve">
          <source>For all other headers, the values are joined together with ', '.</source>
          <target state="translated">다른 모든 헤더의 경우 값은 ','와 함께 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="5f9e78e07b8e3d47493e082f3a0b59b361f8d9f4" translate="yes" xml:space="preserve">
          <source>For all string values of &lt;code&gt;urlObject.protocol&lt;/code&gt; that &lt;em&gt;do not end&lt;/em&gt; with an ASCII colon (&lt;code&gt;:&lt;/code&gt;) character, the literal string &lt;code&gt;:&lt;/code&gt; will be appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">모든 문자열 값에 대한 &lt;code&gt;urlObject.protocol&lt;/code&gt; &lt;em&gt;말을하지 않습니다&lt;/em&gt; (아스키 콜론 &lt;code&gt;:&lt;/code&gt; ) 문자, 리터럴 문자열 &lt;code&gt;:&lt;/code&gt; 에 추가됩니다 &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca59737c208aca1081310d096f89773e74cabed" translate="yes" xml:space="preserve">
          <source>For all the mechanisms, when resumption fails, servers will create new sessions. Since failing to resume the session does not cause TLS/HTTPS connection failures, it is easy to not notice unnecessarily poor TLS performance. The OpenSSL CLI can be used to verify that servers are resuming sessions. Use the &lt;code&gt;-reconnect&lt;/code&gt; option to &lt;code&gt;openssl s_client&lt;/code&gt;, for example:</source>
          <target state="translated">모든 메커니즘에서 재개에 실패하면 서버는 새 세션을 만듭니다. 세션 재개에 실패해도 TLS / HTTPS 연결 실패가 발생하지 않으므로 불필요하게 TLS 성능이 저하되는 것을 쉽게 알 수 없습니다. OpenSSL CLI를 사용하여 서버가 세션을 재개하고 있는지 확인할 수 있습니다. &lt;code&gt;-reconnect&lt;/code&gt; 옵션을 사용하여 &lt;code&gt;openssl s_client&lt;/code&gt; 를 입력하십시오 (예 :</target>
        </trans-unit>
        <trans-unit id="a0b60983e76d7f440441e08547a1823af1549878" translate="yes" xml:space="preserve">
          <source>For an example of running a &quot;full-featured&quot; (&lt;code&gt;terminal&lt;/code&gt;) REPL over a &lt;code&gt;net.Server&lt;/code&gt; and &lt;code&gt;net.Socket&lt;/code&gt; instance, see: &lt;a href=&quot;https://gist.github.com/TooTallNate/2209310&quot;&gt;https://gist.github.com/TooTallNate/2209310&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;net.Server&lt;/code&gt; 를 통해 &quot;전 기능&quot;( &lt;code&gt;terminal&lt;/code&gt; ) REPL을 실행하는 예제 및 &lt;code&gt;net.Socket&lt;/code&gt; 인스턴스에서&lt;a href=&quot;https://gist.github.com/TooTallNate/2209310&quot;&gt; https://gist.github.com/TooTallNate/2209310을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="07a0aeba9b4457e77a58461fba017f92063a71cb" translate="yes" xml:space="preserve">
          <source>For an example of running a REPL instance over &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt;&lt;code&gt;curl(1)&lt;/code&gt;&lt;/a&gt;, see: &lt;a href=&quot;https://gist.github.com/TooTallNate/2053342&quot;&gt;https://gist.github.com/TooTallNate/2053342&lt;/a&gt;.</source>
          <target state="translated">REPL 인스턴스를 실행하는 예제 &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt; &lt;code&gt;curl(1)&lt;/code&gt; &lt;/a&gt; 에서&lt;a href=&quot;https://gist.github.com/TooTallNate/2053342&quot;&gt; https://gist.github.com/TooTallNate/2053342를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4be3dea74f8c5394f0d772060dd8dfe750945e2" translate="yes" xml:space="preserve">
          <source>For asymmetric keys, the &lt;code&gt;options&lt;/code&gt; parameter is used to determine the export format.</source>
          <target state="translated">비대칭 키의 경우 &lt;code&gt;options&lt;/code&gt; 매개 변수를 사용하여 내보내기 형식을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6d94d466d7937d23e8d706b37324e3a1192a7b33" translate="yes" xml:space="preserve">
          <source>For asymmetric keys, this property represents the type of the key. Supported key types are:</source>
          <target state="translated">비대칭 키의 경우이 속성은 키 유형을 나타냅니다. 지원되는 키 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec619ed21139aa754437a9abbf846fa6dc1227ce" translate="yes" xml:space="preserve">
          <source>For available options, see &lt;a href=&quot;#net_new_net_socket_options&quot;&gt;&lt;code&gt;new net.Socket([options])&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 옵션은 &lt;a href=&quot;#net_new_net_socket_options&quot;&gt; &lt;code&gt;new net.Socket([options])&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e719e3fc1d310a7e64c540e90b09027f0d710116" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, removing &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handlers will &lt;strong&gt;not&lt;/strong&gt; automatically pause the stream. Also, if there are piped destinations, then calling &lt;a href=&quot;#stream_readable_pause&quot;&gt;&lt;code&gt;stream.pause()&lt;/code&gt;&lt;/a&gt; will not guarantee that the stream will &lt;em&gt;remain&lt;/em&gt; paused once those destinations drain and ask for more data.</source>
          <target state="translated">이전 버전과의 호환성을 위해 &lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러를 제거해도 스트림이 자동으로 일시 중지 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 또한 파이프 된 대상이있는 경우 &lt;a href=&quot;#stream_readable_pause&quot;&gt; &lt;code&gt;stream.pause()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 스트림이&lt;em&gt;&lt;/em&gt; 하면 해당 대상이 배출되고 더 많은 데이터를 요청 일시 중지 된 &lt;em&gt;상태로 유지&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="391e7d798da035e1df8b3a58985f8189e10524aa" translate="yes" xml:space="preserve">
          <source>For certain use cases, such as automating shell scripts, the &lt;a href=&quot;#child_process_synchronous_process_creation&quot;&gt;synchronous counterparts&lt;/a&gt; may be more convenient. In many cases, however, the synchronous methods can have significant impact on performance due to stalling the event loop while spawned processes complete.</source>
          <target state="translated">셸 스크립트 자동화와 같은 특정 사용 사례의 경우 &lt;a href=&quot;#child_process_synchronous_process_creation&quot;&gt; 동기 상대방&lt;/a&gt; 이 더 편리 할 수 ​​있습니다. 그러나 대부분의 경우 동기 메소드는 생성 된 프로세스가 완료되는 동안 이벤트 루프가 정지되어 성능에 상당한 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92fed84099ae298e282510b979a03e0e6d087d46" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;a href=&quot;http&quot;&gt;HTTP/1&lt;/a&gt;, a human-readable &lt;code&gt;statusMessage&lt;/code&gt; may be passed as the second argument. However, because the &lt;code&gt;statusMessage&lt;/code&gt; has no meaning within HTTP/2, the argument will have no effect and a process warning will be emitted.</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt;HTTP / 1&lt;/a&gt; 과의 호환성을 위해 , 사람이 읽을 수있는 &lt;code&gt;statusMessage&lt;/code&gt; 가 두 번째 인수로 전달 될 수 있습니다. 그러나 &lt;code&gt;statusMessage&lt;/code&gt; 는 HTTP / 2 내에서 의미가 없으므로 인수가 적용되지 않으며 프로세스 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="31e384f06cf594d15b7f90d53096bd4481fa0bc8" translate="yes" xml:space="preserve">
          <source>For completeness there is also &lt;code&gt;--input-type=commonjs&lt;/code&gt;, for explicitly running string input as CommonJS. This is the default behavior if &lt;code&gt;--input-type&lt;/code&gt; is unspecified.</source>
          <target state="translated">&lt;code&gt;--input-type=commonjs&lt;/code&gt; 을 위해 문자열 입력을 CommonJS로 명시 적으로 실행하기위한 --input-type = commonjs 도 있습니다 . &lt;code&gt;--input-type&lt;/code&gt; 이 지정되지 않은 경우 이것이 기본 동작 입니다.</target>
        </trans-unit>
        <trans-unit id="98fc04d7d5785d371edbb41ee50020498b1a136b" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;options.stdio&lt;/code&gt; may be one of the following strings:</source>
          <target state="translated">편의상, &lt;code&gt;options.stdio&lt;/code&gt; 는 다음 문자열 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bed0fbf79e83dbe9b208684ee2d517bec0c11bf" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;child_process&lt;/code&gt; module provides a handful of synchronous and asynchronous alternatives to &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;. Each of these alternatives are implemented on top of &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">편의상 &lt;code&gt;child_process&lt;/code&gt; 모듈은 &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt; &lt;code&gt;child_process.spawn()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt; 대한 소수의 동기 및 비동기 대안을 제공합니다 . 이러한 각 대안은 &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt; &lt;code&gt;child_process.spawn()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt; 위에 구현됩니다. .</target>
        </trans-unit>
        <trans-unit id="057dd38e823bb2e1cba139ab7426a8ac0df9e0f5" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_chmod_path_mode_callback&quot;&gt;&lt;code&gt;fs.chmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_chmod_path_mode_callback&quot;&gt; &lt;code&gt;fs.chmod()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f55866a6066caed39753b96f223b49821bcdf3e" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_ftruncate_fd_len_callback&quot;&gt;&lt;code&gt;fs.ftruncate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_ftruncate_fd_len_callback&quot;&gt; &lt;code&gt;fs.ftruncate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7966b350e8f4af364eac8a1a2f1cfe584ac00d9c" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_mkdtemp_prefix_options_callback&quot;&gt;&lt;code&gt;fs.mkdtemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_mkdtemp_prefix_options_callback&quot;&gt; &lt;code&gt;fs.mkdtemp()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="345ea263ca7cd8151a65a6e51b81b5683256d83d" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_open_path_flags_mode_callback&quot;&gt;&lt;code&gt;fs.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_open_path_flags_mode_callback&quot;&gt; &lt;code&gt;fs.open()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="686d2f045c616932d3ff22cc8786f2b1c1995cbc" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_read_fd_buffer_offset_length_position_callback&quot;&gt;&lt;code&gt;fs.read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_read_fd_buffer_offset_length_position_callback&quot;&gt; &lt;code&gt;fs.read()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0b8688ce27c0c13b0e5e638b026b6e915dcedb" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_readfile_path_options_callback&quot;&gt;&lt;code&gt;fs.readFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_readfile_path_options_callback&quot;&gt; &lt;code&gt;fs.readFile()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="026100d5ae38e39e11318cc2cb6d97aac4353ca6" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_realpath_path_options_callback&quot;&gt;&lt;code&gt;fs.realpath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_realpath_path_options_callback&quot;&gt; &lt;code&gt;fs.realpath()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7177737b8cf18949166e6d0bb6268a458923d13" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_symlink_target_path_type_callback&quot;&gt;&lt;code&gt;fs.symlink()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_symlink_target_path_type_callback&quot;&gt; &lt;code&gt;fs.symlink()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4720f7b4719a50a736dc74b6b468dc1ad01a1e0f" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.utimes()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48e8602ce9e660170055a6f47c4dc1959e90dce6" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_write_fd_buffer_offset_length_position_callback&quot;&gt;&lt;code&gt;fs.write(fd, buffer...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 &lt;a href=&quot;#fs_fs_write_fd_buffer_offset_length_position_callback&quot;&gt; &lt;code&gt;fs.write(fd, buffer...)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="915a4eebfd2351966e0f2be56e64fc6fd86cdd29" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_write_fd_string_position_encoding_callback&quot;&gt;&lt;code&gt;fs.write(fd, string...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_write_fd_string_position_encoding_callback&quot;&gt; &lt;code&gt;fs.write(fd, string...)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cef3142dfe3ea04c130dffb0f747452a95966d87" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_writefile_file_data_options_callback&quot;&gt;&lt;code&gt;fs.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;#fs_fs_writefile_file_data_options_callback&quot;&gt; &lt;code&gt;fs.writeFile()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6bd81a73f2e605eb60c72787c48b4ebfb0a3515" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_writev_fd_buffers_position_callback&quot;&gt;&lt;code&gt;fs.writev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은이 API의 비동기 버전 설명서 인 &lt;a href=&quot;#fs_fs_writev_fd_buffers_position_callback&quot;&gt; &lt;code&gt;fs.writev()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb460aea3653b08568036649165ab5edfff25bc7" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;fs#fs_fs_exists_path_callback&quot;&gt;&lt;code&gt;fs.exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는이 API의 비동기 버전 문서 인 &lt;a href=&quot;fs#fs_fs_exists_path_callback&quot;&gt; &lt;code&gt;fs.exists()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f4255927b82eac232a3604f861da1b4f744c0e1" translate="yes" xml:space="preserve">
          <source>For duplicate &lt;code&gt;cookie&lt;/code&gt; headers, the values are joined together with '; '.</source>
          <target state="translated">중복 &lt;code&gt;cookie&lt;/code&gt; 헤더의 경우 값은 '; '.</target>
        </trans-unit>
        <trans-unit id="9a215762dd9627461e893eb50e7ebc4a894bd5b4" translate="yes" xml:space="preserve">
          <source>For each item &lt;em&gt;targetValue&lt;/em&gt; in &lt;em&gt;target&lt;/em&gt;, do</source>
          <target state="translated">&lt;em&gt;target의&lt;/em&gt; 각 항목 &lt;em&gt;targetValue&lt;/em&gt; 에 대해 다음을 수행하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c2ec175e11de8ee7e10fd9de87958e9ab2fbadf" translate="yes" xml:space="preserve">
          <source>For each key &lt;em&gt;directory&lt;/em&gt; in &lt;em&gt;directoryKeys&lt;/em&gt;, do</source>
          <target state="translated">각 키의 경우 &lt;em&gt;디렉토리&lt;/em&gt; 에 &lt;em&gt;directoryKeys&lt;/em&gt; 수행</target>
        </trans-unit>
        <trans-unit id="57ba04e0b7bcbfc8b08ec80a0e3f27a752793ffd" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, Node.js normally buffers the request headers until &lt;code&gt;request.end()&lt;/code&gt; is called or the first chunk of request data is written. It then tries to pack the request headers and data into a single TCP packet.</source>
          <target state="translated">효율성상의 이유로 Node.js는 일반적으로 &lt;code&gt;request.end()&lt;/code&gt; 가 호출되거나 요청 데이터의 첫 번째 청크가 작성 될 때까지 요청 헤더를 버퍼링합니다 . 그런 다음 요청 헤더와 데이터를 단일 TCP 패킷으로 압축합니다.</target>
        </trans-unit>
        <trans-unit id="55784e38364a3c74fb65e18506c562ba93681880" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;--pending-deprecation&lt;/code&gt; is equivalent to &lt;code&gt;--pending_deprecation&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;--pending-deprecation&lt;/code&gt; 은 &lt;code&gt;--pending_deprecation&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="81efa59dff5974501c74872b767ce28b3355d17d" translate="yes" xml:space="preserve">
          <source>For example, a dummy loader to load JavaScript restricted to browser resolution rules with only JS file extension and Node.js builtin modules support could be written:</source>
          <target state="translated">예를 들어, JS 파일 확장자 및 Node.js 내장 모듈 만 지원하는 브라우저 확인 규칙으로 제한되는 JavaScript를로드하는 더미 로더를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2e61c77fd207165adf6649bf4866952e2f3edfa" translate="yes" xml:space="preserve">
          <source>For example, an &lt;code&gt;index.mjs&lt;/code&gt; containing:</source>
          <target state="translated">예를 들어 &lt;code&gt;index.mjs&lt;/code&gt; 포함 하는 index.mjs :</target>
        </trans-unit>
        <trans-unit id="791196aee4b2d4aa0012058507fbdff766fc7664" translate="yes" xml:space="preserve">
          <source>For example, assuming the following script for &lt;code&gt;process-args.js&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;process-args.js&lt;/code&gt; 에 대한 다음 스크립트를 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="897f4de2b32102497cc28727717c94d918135994" translate="yes" xml:space="preserve">
          <source>For example, consider the following code:</source>
          <target state="translated">예를 들어 다음 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8204daa0aa3b64001a20242119f9653776f37906" translate="yes" xml:space="preserve">
          <source>For example, given the following folder structure:</source>
          <target state="translated">예를 들어 다음과 같은 폴더 구조가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="edbcaae834047f2d42e2dc73d0381d1160281bb3" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;fs.writeFile()&lt;/code&gt; is called twice in a row, first to write the string &lt;code&gt;'Hello'&lt;/code&gt;, then to write the string &lt;code&gt;', World'&lt;/code&gt;, the file would contain &lt;code&gt;'Hello, World'&lt;/code&gt;, and might contain some of the file's original data (depending on the size of the original file, and the position of the file descriptor). If a file name had been used instead of a descriptor, the file would be guaranteed to contain only &lt;code&gt;', World'&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;fs.writeFile()&lt;/code&gt; 이 두 번 연속으로 호출되면 먼저 문자열 &lt;code&gt;'Hello'&lt;/code&gt; 를 쓰고 문자열 &lt;code&gt;', World'&lt;/code&gt; 를 쓰 려면 파일에 &lt;code&gt;'Hello, World'&lt;/code&gt; 가 포함되며 일부는 파일의 원본 데이터 (원본 파일의 크기 및 파일 설명 자의 위치에 따라 다름) 디스크립터 대신 파일 이름이 사용 된 경우 파일에는 &lt;code&gt;', World'&lt;/code&gt; 만 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="83817681c437a9bbd3db2ac07540c577eeb01fe0" translate="yes" xml:space="preserve">
          <source>For example, if an attacker can cause an application to receive a number where a string is expected, the application may call &lt;code&gt;new Buffer(100)&lt;/code&gt; instead of &lt;code&gt;new Buffer(&quot;100&quot;)&lt;/code&gt;, it will allocate a 100 byte buffer instead of allocating a 3 byte buffer with content &lt;code&gt;&quot;100&quot;&lt;/code&gt;. This is commonly possible using JSON API calls. Since JSON distinguishes between numeric and string types, it allows injection of numbers where a naive application might expect to always receive a string. Before Node.js 8.0.0, the 100 byte buffer might contain arbitrary pre-existing in-memory data, so may be used to expose in-memory secrets to a remote attacker. Since Node.js 8.0.0, exposure of memory cannot occur because the data is zero-filled. However, other attacks are still possible, such as causing very large buffers to be allocated by the server, leading to performance degradation or crashing on memory exhaustion.</source>
          <target state="translated">예를 들어 공격자가 응용 프로그램에서 문자열이 예상되는 숫자를 수신하도록 할 수있는 경우 응용 프로그램은 &lt;code&gt;new Buffer(&quot;100&quot;)&lt;/code&gt; 대신 &lt;code&gt;new Buffer(100)&lt;/code&gt; 호출 할 수 있습니다 . 내용이 포함 된 3 바이트 버퍼 &lt;code&gt;&quot;100&quot;&lt;/code&gt; 인. 이것은 일반적으로 JSON API 호출을 사용하여 가능합니다. JSON은 숫자 유형과 문자열 유형을 구별하기 때문에 순진 애플리케이션이 항상 문자열을 수신 할 것으로 예상되는 곳에 숫자를 삽입 할 수 있습니다. Node.js 8.0.0 이전에는 100 바이트 버퍼에 임의의 기존 메모리 내 데이터가 포함되어있을 수 있으므로 메모리 내 비밀을 원격 공격자에게 노출시키는 데 사용될 수 있습니다. Node.js 8.0.0부터는 데이터가 0으로 채워져 메모리 노출이 발생할 수 없습니다. 그러나 서버에서 매우 큰 버퍼를 할당하여 성능이 저하되거나 메모리 소진이 발생하는 등의 다른 공격이 여전히 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f1025750a0bfba66023ecadd2e06770fcbd925fd" translate="yes" xml:space="preserve">
          <source>For example, if the file at &lt;code&gt;'/home/ry/projects/foo.js'&lt;/code&gt; called &lt;code&gt;require('bar.js')&lt;/code&gt;, then Node.js would look in the following locations, in this order:</source>
          <target state="translated">에서 파일 예를 들어, &lt;code&gt;'/home/ry/projects/foo.js'&lt;/code&gt; 라는이 &lt;code&gt;require('bar.js')&lt;/code&gt; 하고 Node.js를이 순서대로 다음 위치에 보일 것이다 :</target>
        </trans-unit>
        <trans-unit id="3b0f2056b45a2559c1472d535117f55bdedb6244" translate="yes" xml:space="preserve">
          <source>For example, in the parent script:</source>
          <target state="translated">예를 들어, 부모 스크립트에서 :</target>
        </trans-unit>
        <trans-unit id="67a0d1e33770f9ea91b472de0a7268d921bab538" translate="yes" xml:space="preserve">
          <source>For example, looking up &lt;code&gt;iana.org&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;iana.org&lt;/code&gt; 를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="5f9b50abb71fe1243d71bc3deae82a5ec37fd08d" translate="yes" xml:space="preserve">
          <source>For example, on POSIX:</source>
          <target state="translated">예를 들어 POSIX에서 :</target>
        </trans-unit>
        <trans-unit id="80772b48d8fee4f56aa373bb49a7eceb85d6d0a7" translate="yes" xml:space="preserve">
          <source>For example, suppose we were making a module called &lt;code&gt;a.js&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;a.js&lt;/code&gt; 라는 모듈을 만들고 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="9ba613f62c42163b625f2f325ed7988a5b30d289" translate="yes" xml:space="preserve">
          <source>For example, the ASCII space character (&lt;code&gt;' '&lt;/code&gt;) is encoded as &lt;code&gt;%20&lt;/code&gt;. The ASCII forward slash (&lt;code&gt;/&lt;/code&gt;) character is encoded as &lt;code&gt;%3C&lt;/code&gt;.</source>
          <target state="translated">예를 들어 ASCII 공백 문자 ( &lt;code&gt;' '&lt;/code&gt; )는 &lt;code&gt;%20&lt;/code&gt; 인코딩됩니다 . ASCII 슬래시 ( &lt;code&gt;/&lt;/code&gt; ) 문자는 &lt;code&gt;%3C&lt;/code&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="0daafbfc8f622fbbbf3dc05ed0fe2f79d7ba67f6" translate="yes" xml:space="preserve">
          <source>For example, the code:</source>
          <target state="translated">예를 들어 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f817e6e8af1e18f940aeb34cdd6a390f1393d6ed" translate="yes" xml:space="preserve">
          <source>For example, the following can be added to a &lt;code&gt;.bashrc&lt;/code&gt; file:</source>
          <target state="translated">예를 들어 &lt;code&gt;.bashrc&lt;/code&gt; 파일에 다음을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7062ec00a8c1f78373bb58b32df0bbbb0623d2a5" translate="yes" xml:space="preserve">
          <source>For example, the following code executed by &lt;code&gt;vm.runInNewContext()&lt;/code&gt; with a timeout of 5 milliseconds schedules an infinite loop to run after a promise resolves. The scheduled loop is never interrupted by the timeout:</source>
          <target state="translated">예를 들어 시간 제한이 5 밀리 &lt;code&gt;vm.runInNewContext()&lt;/code&gt; 의해 실행 된 다음 코드 는 약속이 해결 된 후 무한 루프가 실행되도록 예약합니다. 스케줄 된 루프는 시간 종료에 의해 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="253119df57953f965aae87ba4baa7e428da8850a" translate="yes" xml:space="preserve">
          <source>For example, the following program retains only the first four bytes of the file:</source>
          <target state="translated">예를 들어, 다음 프로그램은 파일의 처음 4 바이트 만 유지합니다.</target>
        </trans-unit>
        <trans-unit id="1eb3dadf374a52eddc18a55a08c68490065d1798" translate="yes" xml:space="preserve">
          <source>For example, the octal value &lt;code&gt;0o765&lt;/code&gt; means:</source>
          <target state="translated">예를 들어, 8 진수 값 &lt;code&gt;0o765&lt;/code&gt; 는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6de4cd8836649e28fe680a474b55dd4cd12f68eb" translate="yes" xml:space="preserve">
          <source>For example, the query string &lt;code&gt;'foo=bar&amp;amp;abc=xyz&amp;amp;abc=123'&lt;/code&gt; is parsed into:</source>
          <target state="translated">예를 들어 쿼리 문자열 &lt;code&gt;'foo=bar&amp;amp;abc=xyz&amp;amp;abc=123'&lt;/code&gt; 은 다음과 같이 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="c4faa016c1fe90248554940ea2a901f2767764e1" translate="yes" xml:space="preserve">
          <source>For example, the value &lt;code&gt;'h2=&quot;example.org:81&quot;'&lt;/code&gt; indicates that the HTTP/2 protocol is available on the host &lt;code&gt;'example.org'&lt;/code&gt; on TCP/IP port 81. The host and port &lt;em&gt;must&lt;/em&gt; be contained within the quote (&lt;code&gt;&quot;&lt;/code&gt;) characters.</source>
          <target state="translated">예를 들어, 값 &lt;code&gt;'h2=&quot;example.org:81&quot;'&lt;/code&gt; 은 HTTP / 2 프로토콜이 TCP / IP 포트 81의 &lt;code&gt;'example.org'&lt;/code&gt; 호스트에서 사용 가능함을 나타냅니다 . 호스트 및 포트 &lt;em&gt;는&lt;/em&gt; 인용 부호 안에 포함되어야합니다. ( &lt;code&gt;&quot;&lt;/code&gt; ) 자</target>
        </trans-unit>
        <trans-unit id="f95e4eeabc8b5c5766a98b87237a905f5362fd09" translate="yes" xml:space="preserve">
          <source>For example, there could be one domain in use for an HTTP server, but perhaps we would like to have a separate domain to use for each request.</source>
          <target state="translated">예를 들어 HTTP 서버에 사용중인 도메인이 하나있을 수 있지만 각 요청에 사용할 별도의 도메인을 원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c70aab1281bafc98591fb41a8a2e156b4733b83" translate="yes" xml:space="preserve">
          <source>For example, this is not a good idea:</source>
          <target state="translated">예를 들어, 이것은 좋은 생각이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e99d0e4483ca3b79ca406bdcee63685fc7db1e22" translate="yes" xml:space="preserve">
          <source>For example, to copy &lt;code&gt;process.stdin&lt;/code&gt; to &lt;code&gt;process.stdout&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;process.stdin&lt;/code&gt; 을 &lt;code&gt;process.stdout&lt;/code&gt; 에 복사 하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="74c8c01fdcc407c4056c3c4c23fbc67e2bab6243" translate="yes" xml:space="preserve">
          <source>For example, to create a promise and pass it to an asynchronous worker:</source>
          <target state="translated">예를 들어, 약속을 작성하여 비동기 작업자에게 전달하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="df453f73e080d9b234f689c60388312d2911405c" translate="yes" xml:space="preserve">
          <source>For example, to reduce the default memory requirements from 256K to 128K, the options should be set to:</source>
          <target state="translated">예를 들어 기본 메모리 요구 사항을 256K에서 128K로 줄이려면 옵션을 다음과 같이 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b5a5c3485b1b24a59e97f7e53ad29c392af3458" translate="yes" xml:space="preserve">
          <source>For example, with a function that takes in &lt;code&gt;(foo, onSuccessCallback, onErrorCallback)&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;(foo, onSuccessCallback, onErrorCallback)&lt;/code&gt; 함수를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ae799d12f1b44275fbc0da9bcd67a2da1006e7c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'#hash'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'#hash'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c86de8e00622a7747509a64e10a55fe34615d87b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'/p/a/t/h'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'/p/a/t/h'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b6e5f08123a700de002eb4d0e40657ba4c345591" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'/p/a/t/h?query=string'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'/p/a/t/h?query=string'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3bdbc1893285ae2bc6187853f472bb89b348832d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'8080'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'8080'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b18a73507aef0be5082b6fdcfbb3d2764429f21c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'?query=string'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'?query=string'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1431a97ff50bfe6b8c67eaa08445cc79d5cbf2cd" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'http:'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'http:'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1e875c30c2bd795fb8f83356873fa8387d92e587" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'http://user:pass@sub.example.com:8080/p/a/t/h?query=string#hash'&lt;/code&gt;.</source>
          <target state="translated">예를 들면 &lt;code&gt;'http://user:pass@sub.example.com:8080/p/a/t/h?query=string#hash'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="326379a1cda187f82e1710768f1264546688dc9d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'query=string'&lt;/code&gt; or &lt;code&gt;{'query': 'string'}&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'query=string'&lt;/code&gt; 또는 &lt;code&gt;{'query': 'string'}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c80eba690887dc33a88b69fed72632e28fc2b10d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'sub.example.com'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'sub.example.com'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e91a6553effbbe4dda469429f21b677db459ecb4" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'sub.example.com:8080'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'sub.example.com:8080'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30ac7f71aef57cd86825b42aad02544467fac9f1" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'user:pass'&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;'user:pass'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb56fd25c97e401b170d334578f71eec41d07444" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;{ name: 'AES256-SHA', version: 'TLSv1.2' }&lt;/code&gt;.</source>
          <target state="translated">예를 들면 다음과 같습니다. &lt;code&gt;{ name: 'AES256-SHA', version: 'TLSv1.2' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6ef9a1e93233f967d1e9c16153dffc3223c156f" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;{ type: 'ECDH', name: 'prime256v1', size: 256 }&lt;/code&gt;.</source>
          <target state="translated">예를 들면 다음과 같습니다. &lt;code&gt;{ type: 'ECDH', name: 'prime256v1', size: 256 }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ffd0ce6961facbf22f866f23a22e700aae1c9c0" translate="yes" xml:space="preserve">
          <source>For incoming headers:</source>
          <target state="translated">수신 헤더 :</target>
        </trans-unit>
        <trans-unit id="015b6275e1ee8dfd8d259a1e7dd30758f09835c4" translate="yes" xml:space="preserve">
          <source>For instance, changing from &lt;code&gt;http&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt; works:</source>
          <target state="translated">예를 들어 &lt;code&gt;http&lt;/code&gt; 에서 &lt;code&gt;https&lt;/code&gt; 로 변경 하면 작동합니다.</target>
        </trans-unit>
        <trans-unit id="271858bddcffa7d0c42a54bdba61f9004a962156" translate="yes" xml:space="preserve">
          <source>For instance, consider the following JavaScript code snippet:</source>
          <target state="translated">예를 들어, 다음 JavaScript 코드 스 니펫을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8de3f2a74ab84a9ac2fd498796cb9fa9361c6fdb" translate="yes" xml:space="preserve">
          <source>For instance, the following example illustrates a &lt;em&gt;misuse&lt;/em&gt; of the &lt;code&gt;process.exit()&lt;/code&gt; method that could lead to data printed to stdout being truncated and lost:</source>
          <target state="translated">예를 들어, 다음 예제 는 stdout으로 인쇄 된 데이터가 잘리고 손실 될 수 있는 &lt;code&gt;process.exit()&lt;/code&gt; 메소드 의 &lt;em&gt;오용&lt;/em&gt; 을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="77ea46760578e2f2b62948845228f02c4dee3345" translate="yes" xml:space="preserve">
          <source>For instance: &lt;code&gt;[[substr1, substr2, ...], originalsubstring]&lt;/code&gt;.</source>
          <target state="translated">예를 들면 다음과 같습니다. &lt;code&gt;[[substr1, substr2, ...], originalsubstring]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c59bd509f789ff650135339c76dd7b0ac979c77a" translate="yes" xml:space="preserve">
          <source>For instance: a &lt;a href=&quot;net#net_class_net_server&quot;&gt;&lt;code&gt;net.Server&lt;/code&gt;&lt;/a&gt; object emits an event each time a peer connects to it; a &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&lt;code&gt;fs.ReadStream&lt;/code&gt;&lt;/a&gt; emits an event when the file is opened; a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; emits an event whenever data is available to be read.</source>
          <target state="translated">예를 들어 : &lt;a href=&quot;net#net_class_net_server&quot;&gt; &lt;code&gt;net.Server&lt;/code&gt; &lt;/a&gt; 객체는 피어가 연결할 때마다 이벤트를 생성합니다. &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt; &lt;code&gt;fs.ReadStream&lt;/code&gt; 는&lt;/a&gt; 파일이 열릴 이벤트를 방출; &lt;a href=&quot;stream&quot;&gt;스트림&lt;/a&gt; 데이터를 읽을 수 있습니다 때마다 이벤트를 방출한다.</target>
        </trans-unit>
        <trans-unit id="90d4f2fe0ce5674f5975d3a9b7f2e779132cdc4d" translate="yes" xml:space="preserve">
          <source>For listeners attached using &lt;code&gt;.once()&lt;/code&gt; this returns the original listeners instead of wrapper functions now.</source>
          <target state="translated">&lt;code&gt;.once()&lt;/code&gt; 사용하여 연결된 리스너의 경우 이제 래퍼 함수 대신 원래 리스너를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12dd976275742ec5690cbcff1b48498bba5c82e7" translate="yes" xml:space="preserve">
          <source>For listeners attached using &lt;code&gt;.once()&lt;/code&gt;, the &lt;code&gt;listener&lt;/code&gt; argument now yields the original listener function.</source>
          <target state="translated">&lt;code&gt;.once()&lt;/code&gt; 사용하여 연결된 리스너의 경우 &lt;code&gt;listener&lt;/code&gt; 인수는 이제 원래 리스너 함수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5390feeb439b25ef7d23bf7036f6e833b5328267" translate="yes" xml:space="preserve">
          <source>For many simple cases, it is possible to construct a stream without relying on inheritance. This can be accomplished by directly creating instances of the &lt;code&gt;stream.Writable&lt;/code&gt;, &lt;code&gt;stream.Readable&lt;/code&gt;, &lt;code&gt;stream.Duplex&lt;/code&gt; or &lt;code&gt;stream.Transform&lt;/code&gt; objects and passing appropriate methods as constructor options.</source>
          <target state="translated">많은 간단한 경우에 상속에 의존하지 않고 스트림을 구성 할 수 있습니다. 이것은 직접 인스턴스를 생성하여 수행 할 수 있습니다 &lt;code&gt;stream.Writable&lt;/code&gt; , &lt;code&gt;stream.Readable&lt;/code&gt; , &lt;code&gt;stream.Duplex&lt;/code&gt; 또는 &lt;code&gt;stream.Transform&lt;/code&gt; 객체와 생성자 옵션으로 적절한 방법을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="2cf6b17b8b3c132991ca261367a85c345bb8add2" translate="yes" xml:space="preserve">
          <source>For more details on building addon modules in general, refer to the existing API.</source>
          <target state="translated">일반적인 애드온 모듈 구축에 대한 자세한 내용은 기존 API를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="048f678cdb9d7b9304af334737ac3c0c98e0202e" translate="yes" xml:space="preserve">
          <source>For more details on setting properties on objects, see the section on &lt;a href=&quot;#n_api_working_with_javascript_properties&quot;&gt;Working with JavaScript Properties&lt;/a&gt;.</source>
          <target state="translated">객체의 속성 설정에 대한 자세한 내용은 &lt;a href=&quot;#n_api_working_with_javascript_properties&quot;&gt;JavaScript 속성 작업&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="62febcf03c89fd8d13fb23c6c4f7af2e73d21726" translate="yes" xml:space="preserve">
          <source>For more details, review the &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;객체 수명 관리를&lt;/a&gt; 검토하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b4362c9db6fa952f739e6dd9663dfe4a36d653f" translate="yes" xml:space="preserve">
          <source>For more information on the serialization and deserialization mechanisms behind this API, see the &lt;a href=&quot;v8#v8_serialization_api&quot;&gt;serialization API of the &lt;code&gt;v8&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">이 API의 직렬화 및 역 직렬화 메커니즘에 대한 자세한 정보 &lt;a href=&quot;v8#v8_serialization_api&quot;&gt;는 &lt;code&gt;v8&lt;/code&gt; 모듈&lt;/a&gt; 의 직렬화 API를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e952f5b7997183488314ca0ac63d1a60975dc542" translate="yes" xml:space="preserve">
          <source>For more verbose tests for &lt;code&gt;Intl&lt;/code&gt; support, the following resources may be found to be helpful:</source>
          <target state="translated">&lt;code&gt;Intl&lt;/code&gt; 지원에 대한보다 자세한 테스트를 위해 다음 리소스가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecd2609711f87d3a858227a0c7f59cff0e8ea6a1" translate="yes" xml:space="preserve">
          <source>For most &lt;code&gt;fs&lt;/code&gt; module functions, the &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;filename&lt;/code&gt; argument may be passed as a WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; object. Only &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects using the &lt;code&gt;file:&lt;/code&gt; protocol are supported.</source>
          <target state="translated">대부분의 &lt;code&gt;fs&lt;/code&gt; 모듈 함수의 경우 &lt;code&gt;path&lt;/code&gt; 또는 &lt;code&gt;filename&lt;/code&gt; 인수가 WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 객체 로 전달 될 수 있습니다 . &lt;code&gt;file:&lt;/code&gt; 프로토콜을 사용하는 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 객체 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d0aee94b121d9c05cc7446b9819d27a13b48f781" translate="yes" xml:space="preserve">
          <source>For now, only modules using the &lt;code&gt;file:&lt;/code&gt; protocol can be loaded.</source>
          <target state="translated">현재는 &lt;code&gt;file:&lt;/code&gt; 프로토콜을 사용하는 모듈 만 로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b4ab566ef7a83d33b552404e3d4411d9267581f" translate="yes" xml:space="preserve">
          <source>For objects that support &lt;code&gt;Symbol.toPrimitive&lt;/code&gt;, returns &lt;code&gt;Buffer.from(object[Symbol.toPrimitive](), offsetOrEncoding, length)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Symbol.toPrimitive&lt;/code&gt; 를 지원하는 객체의 경우 &lt;code&gt;Buffer.from(object[Symbol.toPrimitive](), offsetOrEncoding, length)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="39a3ab913b459b47836eb75d147bf2460ed81971" translate="yes" xml:space="preserve">
          <source>For objects whose &lt;code&gt;valueOf()&lt;/code&gt; function returns a value not strictly equal to &lt;code&gt;object&lt;/code&gt;, returns &lt;code&gt;Buffer.from(object.valueOf(), offsetOrEncoding, length)&lt;/code&gt;.</source>
          <target state="translated">그 객체 &lt;code&gt;valueOf()&lt;/code&gt; 함수의 리턴 값이 엄격하게 동일한 &lt;code&gt;object&lt;/code&gt; 반품 &lt;code&gt;Buffer.from(object.valueOf(), offsetOrEncoding, length)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="196376ca4658d4a04273a684e12bfd5930516772" translate="yes" xml:space="preserve">
          <source>For private keys, the following encoding options can be used:</source>
          <target state="translated">개인 키의 경우 다음 인코딩 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c31e69fc6ccede8b8e14bfc7cbefe3fb86771aea" translate="yes" xml:space="preserve">
          <source>For public keys, the following encoding options can be used:</source>
          <target state="translated">공개 키의 경우 다음 인코딩 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b12757b9f92a1aa99a7a1d18244e653d9f9e551d" translate="yes" xml:space="preserve">
          <source>For secret keys, this property represents the size of the key in bytes. This property is &lt;code&gt;undefined&lt;/code&gt; for asymmetric keys.</source>
          <target state="translated">비밀 키의 경우이 속성은 키 크기를 바이트 단위로 나타냅니다. 이 속성은 비대칭 키에 대해서는 &lt;code&gt;undefined&lt;/code&gt; 되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a9641c5ddc18ec715361923bbf6bb46c068e3f6a" translate="yes" xml:space="preserve">
          <source>For streams not operating in object mode, if the &lt;code&gt;chunk&lt;/code&gt; parameter of &lt;code&gt;readable.push()&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, it will be treated as empty string or buffer. See &lt;a href=&quot;#stream_readable_push&quot;&gt;&lt;code&gt;readable.push('')&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">객체 모드에서 작동하지 않는 스트림의 경우 &lt;code&gt;readable.push()&lt;/code&gt; 의 &lt;code&gt;chunk&lt;/code&gt; 매개 변수 가 &lt;code&gt;undefined&lt;/code&gt; 인 경우 빈 문자열 또는 버퍼로 처리됩니다. 자세한 내용은 &lt;a href=&quot;#stream_readable_push&quot;&gt; &lt;code&gt;readable.push('')&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1b263c0395c776ff1e910343334f54923c680ff1" translate="yes" xml:space="preserve">
          <source>For symmetric keys, this function allocates a &lt;code&gt;Buffer&lt;/code&gt; containing the key material and ignores any options.</source>
          <target state="translated">대칭 키의 경우이 기능 은 키 자료를 포함 하는 &lt;code&gt;Buffer&lt;/code&gt; 를 할당하고 옵션을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="bd60fbcc07ae08d935aca50b8141e2dff8f12bcc" translate="yes" xml:space="preserve">
          <source>For wrapped objects it may be difficult to distinguish between a function called on a class prototype and a function called on an instance of a class. A common pattern used to address this problem is to save a persistent reference to the class constructor for later &lt;code&gt;instanceof&lt;/code&gt; checks.</source>
          <target state="translated">랩핑 된 객체의 경우 클래스 프로토 타입에서 호출 된 함수와 클래스 인스턴스에서 호출 된 함수를 구별하기 어려울 수 있습니다. 이 문제를 해결하는 데 사용되는 일반적인 패턴은 나중에 검사 할 &lt;code&gt;instanceof&lt;/code&gt; 를 위해 클래스 생성자에 대한 지속적 참조를 저장하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="fe72bacdc1a0a3fbd24699c40c550c6a0d21a15e" translate="yes" xml:space="preserve">
          <source>For zlib-based streams</source>
          <target state="translated">zlib 기반 스트림</target>
        </trans-unit>
        <trans-unit id="7758b0cb08acdedaecd144d42644989705ebf51f" translate="yes" xml:space="preserve">
          <source>Force FIPS-compliant crypto on startup. (Cannot be disabled from script code.) (Same requirements as &lt;code&gt;--enable-fips&lt;/code&gt;.)</source>
          <target state="translated">시작시 FIPS 호환 암호화를 강제 실행하십시오. (스크립트 코드에서 비활성화 할 수 없습니다.) &lt;code&gt;--enable-fips&lt;/code&gt; 와 동일한 요구 사항 입니다.</target>
        </trans-unit>
        <trans-unit id="3f7db64b36cb48a5ead37108e5190bb1cb147353" translate="yes" xml:space="preserve">
          <source>Frame Size Error</source>
          <target state="translated">프레임 크기 오류</target>
        </trans-unit>
        <trans-unit id="333d0c70190b8e2c3cb1c4017702839184a1fdcc" translate="yes" xml:space="preserve">
          <source>Frames are only generated for JavaScript functions. If, for example, execution synchronously passes through a C++ addon function called &lt;code&gt;cheetahify&lt;/code&gt; which itself calls a JavaScript function, the frame representing the &lt;code&gt;cheetahify&lt;/code&gt; call will not be present in the stack traces:</source>
          <target state="translated">프레임은 JavaScript 함수에 대해서만 생성됩니다. 예를 들어, 실행 이 자체적으로 JavaScript 함수를 호출하는 &lt;code&gt;cheetahify&lt;/code&gt; 라는 C ++ 애드온 함수를 동 기적으로 전달 하면 &lt;code&gt;cheetahify&lt;/code&gt; 를 나타내는 프레임 호출을 이 스택 추적에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a76a4194d0fdb22daa95831f66851b1b3ddac7b0" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;zlib/zconf.h&lt;/code&gt;, modified to Node.js's usage:</source>
          <target state="translated">에서 &lt;code&gt;zlib/zconf.h&lt;/code&gt; , Node.js를의 사용과 수정 :</target>
        </trans-unit>
        <trans-unit id="c74409dbf97fc00637d09c29d6300330ac26ce15" translate="yes" xml:space="preserve">
          <source>From the perspective of a native addon this means that the bindings it provides may be called multiple times, from multiple contexts, and even concurrently from multiple threads.</source>
          <target state="translated">네이티브 애드온의 관점에서 이것은 바인딩이 제공하는 바인딩이 여러 번, 여러 컨텍스트에서, 심지어 여러 스레드에서 동시에 호출 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7a605a56e2cdcdebd5e329a93e319622341b36f7" translate="yes" xml:space="preserve">
          <source>Function arguments</source>
          <target state="translated">함수 인수</target>
        </trans-unit>
        <trans-unit id="993dd96d93bbdf9a74fd4898e6fcf68d7b3f10bb" translate="yes" xml:space="preserve">
          <source>Function factory</source>
          <target state="translated">기능 공장</target>
        </trans-unit>
        <trans-unit id="ec5a7f09a1e8ef3b422abd91ceca943a4a3ab7df" translate="yes" xml:space="preserve">
          <source>Function pointer type for add-on provided functions that allow the user to be notified when externally-owned data is ready to be cleaned up because the object with which it was associated with, has been garbage-collected. The user must provide a function satisfying the following signature which would get called upon the object's collection. Currently, &lt;code&gt;napi_finalize&lt;/code&gt; can be used for finding out when objects that have external data are collected.</source>
          <target state="translated">추가 기능에 대한 함수 포인터 유형은 연결된 개체가 가비지 수집되어 외부 소유 데이터를 정리할 준비가되었을 때 사용자에게 알릴 수있는 기능을 제공했습니다. 사용자는 오브젝트의 콜렉션에서 호출 될 다음 서명을 만족시키는 기능을 제공해야합니다. 현재 &lt;code&gt;napi_finalize&lt;/code&gt; 는 외부 데이터가있는 개체가 수집되는시기를 찾는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f6bbd08fb84a42ff48f50954929b61f3a27bdd1" translate="yes" xml:space="preserve">
          <source>Function pointer type for user-provided native functions which are to be exposed to JavaScript via N-API. Callback functions should satisfy the following signature:</source>
          <target state="translated">N-API를 통해 JavaScript에 노출되는 사용자 제공 원시 함수에 대한 함수 포인터 유형입니다. 콜백 함수는 다음 서명을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="fcc492b0639005eacef46c445e2cbda28e7bde17" translate="yes" xml:space="preserve">
          <source>Function pointer used with asynchronous thread-safe function calls. The callback will be called on the main thread. Its purpose is to use a data item arriving via the queue from one of the secondary threads to construct the parameters necessary for a call into JavaScript, usually via &lt;code&gt;napi_call_function&lt;/code&gt;, and then make the call into JavaScript.</source>
          <target state="translated">비동기 스레드 안전 함수 호출과 함께 사용되는 함수 포인터. 기본 스레드에서 콜백이 호출됩니다. 그 목적은 보조 스레드 중 하나에서 큐를 통해 도착하는 데이터 항목을 사용하여 JavaScript 호출에 필요한 매개 변수를 구성하는 것입니다 (보통 &lt;code&gt;napi_call_function&lt;/code&gt; 사용). 다음 호출을 JavaScript로 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="599595a9fdcd3063f28e8ae0d1e237aa707ed504" translate="yes" xml:space="preserve">
          <source>Function pointer used with functions that support asynchronous operations. Callback functions must satisfy the following signature:</source>
          <target state="translated">비동기 작업을 지원하는 함수와 함께 사용되는 함수 포인터. 콜백 함수는 다음 서명을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="7964d22a59f5fcc5efede2d81c68f063b79d7282" translate="yes" xml:space="preserve">
          <source>Functionalities that only require the ICU library itself, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL parser&lt;/a&gt;, are fully supported under &lt;code&gt;small-icu&lt;/code&gt;. Features that require ICU locale data in addition, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;, generally only work with the English locale:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL 파서&lt;/a&gt; 와 같이 ICU 라이브러리 자체 만 필요한 기능은 &lt;code&gt;small-icu&lt;/code&gt; 에서 완전히 지원됩니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; 과 같이 ICU 로캘 데이터가 필요한 기능 일반적으로 영어 로캘에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3af5b7dcf7212050b3c0d6a9cc548227069312e0" translate="yes" xml:space="preserve">
          <source>Functionalities that only require the ICU library itself, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL parser&lt;/a&gt;, are fully supported under &lt;code&gt;system-icu&lt;/code&gt;. Features that require ICU locale data in addition, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;&lt;em&gt;may&lt;/em&gt; be fully or partially supported, depending on the completeness of the ICU data installed on the system.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL 파서&lt;/a&gt; 와 같이 ICU 라이브러리 자체 만 필요한 기능은 &lt;code&gt;system-icu&lt;/code&gt; 에서 완전히 지원됩니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; 과 같이 ICU 로캘 데이터가 추가로 필요한 기능 은 시스템에 설치된 ICU 데이터의 완전성에 따라 완전히 또는 부분적으로 지원 &lt;em&gt;될 수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="af4222c3289bb32c1f1824b1c43727481175c73d" translate="yes" xml:space="preserve">
          <source>Functions based on &lt;code&gt;fs.open()&lt;/code&gt; exhibit this behavior as well: &lt;code&gt;fs.writeFile()&lt;/code&gt;, &lt;code&gt;fs.readFile()&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;fs.open()&lt;/code&gt; 기반 함수 는이 동작도 나타냅니다 : &lt;code&gt;fs.writeFile()&lt;/code&gt; , &lt;code&gt;fs.readFile()&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="d639d5948d45cf53034fa5bb18a5e3f51824cdfe" translate="yes" xml:space="preserve">
          <source>Functions to convert from C types to N-API</source>
          <target state="translated">C 타입에서 N-API로 변환하는 함수</target>
        </trans-unit>
        <trans-unit id="6b2d12745e2e915ec380d5a20817a9e69c8f53b1" translate="yes" xml:space="preserve">
          <source>Functions to convert from N-API to C types</source>
          <target state="translated">N-API에서 C 유형으로 변환하는 함수</target>
        </trans-unit>
        <trans-unit id="cb1aa769905304dd687caa842e65229bd0139a1f" translate="yes" xml:space="preserve">
          <source>Functions to get global instances</source>
          <target state="translated">전역 인스턴스를 가져 오는 함수</target>
        </trans-unit>
        <trans-unit id="b70f7f5f0e5e2c6bebca28cd6a14886b0ba34dad" translate="yes" xml:space="preserve">
          <source>Fundamentally, these APIs are used to do one of the following: 1. Create a new JavaScript object 2. Convert from a primitive C type to an N-API value 3. Convert from N-API value to a primitive C type 4. Get global instances including &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">기본적으로이 API는 다음 중 하나를 수행하는 데 사용됩니다. 1. 새 JavaScript 객체 생성 2. 기본 C 유형에서 N-API 값으로 변환 3. N-API 값에서 기본 C 유형으로 변환 4. 가져 오기 &lt;code&gt;undefined&lt;/code&gt; 및 &lt;code&gt;null&lt;/code&gt; 을 포함한 전역 인스턴스</target>
        </trans-unit>
        <trans-unit id="9431231cf63ba365f4794647b56c6dc1799c5188" translate="yes" xml:space="preserve">
          <source>Furthermore, to make the module lookup process even more optimal, rather than putting packages directly in &lt;code&gt;/usr/lib/node&lt;/code&gt;, we could put them in &lt;code&gt;/usr/lib/node_modules/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;&lt;/code&gt;. Then Node.js will not bother looking for missing dependencies in &lt;code&gt;/usr/node_modules&lt;/code&gt; or &lt;code&gt;/node_modules&lt;/code&gt;.</source>
          <target state="translated">또한 패키지를 &lt;code&gt;/usr/lib/node&lt;/code&gt; 에 직접 넣지 않고 모듈 조회 프로세스를 더욱 최적화하기 위해 &lt;code&gt;/usr/lib/node_modules/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;&lt;/code&gt; 에 넣을 수 있습니다 . 그러면 Node.js는 &lt;code&gt;/usr/node_modules&lt;/code&gt; 또는 &lt;code&gt;/node_modules&lt;/code&gt; 에서 누락 된 종속성을 찾지 않아도됩니다. 됩니다.</target>
        </trans-unit>
        <trans-unit id="bcde9c22c0f6fcf332c79f17237db4140e32e18b" translate="yes" xml:space="preserve">
          <source>Generate V8 profiler output.</source>
          <target state="translated">V8 프로파일 러 출력을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="28e72539a254b50376120d97739ce35acef6675a" translate="yes" xml:space="preserve">
          <source>Generates a heap snapshot each time the process receives the specified signal. &lt;code&gt;signal&lt;/code&gt; must be a valid signal name. Disabled by default.</source>
          <target state="translated">프로세스가 지정된 신호를 수신 할 때마다 힙 스냅 샷을 생성합니다. &lt;code&gt;signal&lt;/code&gt; 은 유효한 신호 이름이어야합니다. 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8414494901013cf6abd1e8bca004e06c01bbf9" translate="yes" xml:space="preserve">
          <source>Generates a new asymmetric key pair of the given &lt;code&gt;type&lt;/code&gt;. RSA, DSA, EC, Ed25519 and Ed448 are currently supported.</source>
          <target state="translated">지정된 &lt;code&gt;type&lt;/code&gt; 의 새로운 비대칭 키 페어를 생성합니다 . RSA, DSA, EC, Ed25519 및 Ed448이 현재 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="83b586516a8c546d7c129a26589b417da1bdfc1f" translate="yes" xml:space="preserve">
          <source>Generates a snapshot of the current V8 heap and returns a Readable Stream that may be used to read the JSON serialized representation. This JSON stream format is intended to be used with tools such as Chrome DevTools. The JSON schema is undocumented and specific to the V8 engine, and may change from one version of V8 to the next.</source>
          <target state="translated">현재 V8 힙의 스냅 샷을 생성하고 JSON 직렬화 된 표현을 읽는 데 사용할 수있는 읽기 가능한 스트림을 리턴합니다. 이 JSON 스트림 형식은 Chrome DevTools와 같은 도구와 함께 사용하기위한 것입니다. JSON 스키마는 문서화되지 않았으며 V8 엔진에 따라 다르며 V8 버전마다 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9252ad8696289e2a967e228e69921690ca5d2b80" translate="yes" xml:space="preserve">
          <source>Generates a snapshot of the current V8 heap and writes it to a JSON file. This file is intended to be used with tools such as Chrome DevTools. The JSON schema is undocumented and specific to the V8 engine, and may change from one version of V8 to the next.</source>
          <target state="translated">현재 V8 힙의 스냅 샷을 생성하여 JSON 파일에 씁니다. 이 파일은 Chrome DevTools와 같은 도구와 함께 사용하기위한 것입니다. JSON 스키마는 문서화되지 않았으며 V8 엔진에 따라 다르며 V8 버전마다 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8042318054979101a6bb3a3e52a4426bd1a01e8e" translate="yes" xml:space="preserve">
          <source>Generates cryptographically strong pseudo-random data. The &lt;code&gt;size&lt;/code&gt; argument is a number indicating the number of bytes to generate.</source>
          <target state="translated">암호화 적으로 강력한 의사 난수 데이터를 생성합니다. &lt;code&gt;size&lt;/code&gt; 인수는 생성하는 바이트 수를 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="8f1def4238b0303604ad14681f55ec2c047a99ea" translate="yes" xml:space="preserve">
          <source>Generates private and public Diffie-Hellman key values, and returns the public key in the specified &lt;code&gt;encoding&lt;/code&gt;. This key should be transferred to the other party. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">개인 및 공개 Diffie-Hellman 키 값을 생성하고 지정된 &lt;code&gt;encoding&lt;/code&gt; 공개 키를 리턴합니다 . 이 키는 상대방에게 양도해야합니다. 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1c46f03d5b840f015caf47a97b09bb9a6d45e875" translate="yes" xml:space="preserve">
          <source>Generates private and public EC Diffie-Hellman key values, and returns the public key in the specified &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt;. This key should be transferred to the other party.</source>
          <target state="translated">개인 및 공개 EC Diffie-Hellman 키 값을 생성하고 지정된 &lt;code&gt;format&lt;/code&gt; 및 &lt;code&gt;encoding&lt;/code&gt; 으로 공개 키를 반환합니다 . 이 키는 상대방에게 양도해야합니다.</target>
        </trans-unit>
        <trans-unit id="112ec9f89c94053c72eaeec02eadd15823d03a79" translate="yes" xml:space="preserve">
          <source>Generates six random characters to be appended behind a required &lt;code&gt;prefix&lt;/code&gt; to create a unique temporary directory. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="translated">고유 한 임시 디렉토리를 작성하기 위해 필수 &lt;code&gt;prefix&lt;/code&gt; 뒤에 6 개의 임의 문자를 추가합니다 . 플랫폼 불일치로 인해 &lt;code&gt;prefix&lt;/code&gt; 뒤에 &lt;code&gt;X&lt;/code&gt; 문자를 사용 하지 마십시오 . BSD와 같은 일부 플랫폼은 6 개 이상의 임의 문자를 반환 하고 &lt;code&gt;prefix&lt;/code&gt; &lt;code&gt;X&lt;/code&gt; 문자 를 임의 문자로 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="761f1a9e4f4d22dd8635a8dbf3a5cf7ac00d865b" translate="yes" xml:space="preserve">
          <source>Get a unique name for a set of request options, to determine whether a connection can be reused. For an HTTP agent, this returns &lt;code&gt;host:port:localAddress&lt;/code&gt; or &lt;code&gt;host:port:localAddress:family&lt;/code&gt;. For an HTTPS agent, the name includes the CA, cert, ciphers, and other HTTPS/TLS-specific options that determine socket reusability.</source>
          <target state="translated">연결을 재사용 할 수 있는지 여부를 판별하기 위해 요청 옵션 세트의 고유 이름을 가져옵니다. HTTP 에이전트의 경우 &lt;code&gt;host:port:localAddress&lt;/code&gt; 또는 &lt;code&gt;host:port:localAddress:family&lt;/code&gt; 를 리턴 합니다 . HTTPS 에이전트의 경우이 이름에는 소켓 재사용 성을 결정하는 CA, 인증서, 암호 및 기타 HTTPS / TLS 관련 옵션이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b09eeb13f193e3ae59b33a0b658953d55cdb9b4b" translate="yes" xml:space="preserve">
          <source>Get information about the context in which the callback was invoked.</source>
          <target state="translated">콜백이 호출 된 컨텍스트에 대한 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a118bb6557c8f257122a10913093f916497c2c2a" translate="yes" xml:space="preserve">
          <source>Get the arguments passed into the callback.</source>
          <target state="translated">콜백에 전달 된 인수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8f60d44bd72ead1d05680199b7cc03269a3750b0" translate="yes" xml:space="preserve">
          <source>Gets and sets the fragment portion of the URL.</source>
          <target state="translated">URL의 조각 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="869f7a80c02184fc0dca0832b3a470dc1aefb8a1" translate="yes" xml:space="preserve">
          <source>Gets and sets the host portion of the URL.</source>
          <target state="translated">URL의 호스트 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d91766529908cc65cdc84cce450a51bb66b9825e" translate="yes" xml:space="preserve">
          <source>Gets and sets the hostname portion of the URL. The key difference between &lt;code&gt;url.host&lt;/code&gt; and &lt;code&gt;url.hostname&lt;/code&gt; is that &lt;code&gt;url.hostname&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; include the port.</source>
          <target state="translated">URL의 호스트 이름 부분을 가져오고 설정합니다. 주요 차이점 &lt;code&gt;url.host&lt;/code&gt; 및 &lt;code&gt;url.hostname&lt;/code&gt; 는 점이다 &lt;code&gt;url.hostname&lt;/code&gt; 가 않습니다 &lt;em&gt;하지&lt;/em&gt; 포트를 포함한다.</target>
        </trans-unit>
        <trans-unit id="435bf65c246a2f6d454ee3b74918f156c257edc9" translate="yes" xml:space="preserve">
          <source>Gets and sets the password portion of the URL.</source>
          <target state="translated">URL의 비밀번호 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="549880df821aadf8b2109c55bc62b773d21f658f" translate="yes" xml:space="preserve">
          <source>Gets and sets the path portion of the URL.</source>
          <target state="translated">URL의 경로 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9e66f4502bfc4d266ba11a26208355dd8dee1fc5" translate="yes" xml:space="preserve">
          <source>Gets and sets the port portion of the URL.</source>
          <target state="translated">URL의 포트 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9c6f5f9722f21599fb9d10d2b13bf6afe12c0be8" translate="yes" xml:space="preserve">
          <source>Gets and sets the protocol portion of the URL.</source>
          <target state="translated">URL의 프로토콜 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e2a068947ada10ff8415b1f0a99c1458d7e8ac42" translate="yes" xml:space="preserve">
          <source>Gets and sets the serialized URL.</source>
          <target state="translated">직렬화 된 URL을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="38a5d7386ed10cf65f072100b54a680fe0f9fd33" translate="yes" xml:space="preserve">
          <source>Gets and sets the serialized query portion of the URL.</source>
          <target state="translated">URL의 직렬화 된 쿼리 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f34ab704a12cd0ef99be499eda1ab1ec475f9e1a" translate="yes" xml:space="preserve">
          <source>Gets and sets the username portion of the URL.</source>
          <target state="translated">URL의 사용자 이름 부분을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7aa696bbcdcc43a3b4597525214bd5ca86861c90" translate="yes" xml:space="preserve">
          <source>Gets the &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object representing the query parameters of the URL. This property is read-only; to replace the entirety of query parameters of the URL, use the &lt;a href=&quot;#url_url_search&quot;&gt;&lt;code&gt;url.search&lt;/code&gt;&lt;/a&gt; setter. See &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; documentation for details.</source>
          <target state="translated">URL의 쿼리 매개 변수를 나타내는 &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt; 개체를 가져옵니다 . 이 속성은 읽기 전용입니다. URL의 전체 쿼리 매개 변수를 바꾸려면 &lt;a href=&quot;#url_url_search&quot;&gt; &lt;code&gt;url.search&lt;/code&gt; &lt;/a&gt; setter를 사용하십시오 . 자세한 내용은 &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="75998834bfd160517b383467d6db3081eea8a588" translate="yes" xml:space="preserve">
          <source>Gets the read-only serialization of the URL's origin.</source>
          <target state="translated">URL 원점의 읽기 전용 직렬화를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5348b55d35480052ed3df5fd894e6230cb855e10" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;encoding&lt;/code&gt; of a given &lt;code&gt;Readable&lt;/code&gt; stream. The &lt;code&gt;encoding&lt;/code&gt; property can be set using the &lt;a href=&quot;#stream_readable_setencoding_encoding&quot;&gt;&lt;code&gt;readable.setEncoding()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">주어진 &lt;code&gt;Readable&lt;/code&gt; 스트림 의 속성 &lt;code&gt;encoding&lt;/code&gt; 을 위한 Getter . &lt;code&gt;encoding&lt;/code&gt; 속성은 사용하여 설정할 수 &lt;a href=&quot;#stream_readable_setencoding_encoding&quot;&gt; &lt;code&gt;readable.setEncoding()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="b63484bad5ed49a9ef21b266de55ef78730b074c" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;objectMode&lt;/code&gt; of a given &lt;code&gt;Readable&lt;/code&gt; stream.</source>
          <target state="translated">주어진 &lt;code&gt;Readable&lt;/code&gt; 스트림의 &lt;code&gt;objectMode&lt;/code&gt; 속성에 대한 Getter입니다 .</target>
        </trans-unit>
        <trans-unit id="04799911b332b0e61c7c42d5ee3d7a55aff3ffd4" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;objectMode&lt;/code&gt; of a given &lt;code&gt;Writable&lt;/code&gt; stream.</source>
          <target state="translated">지정된 &lt;code&gt;Writable&lt;/code&gt; 스트림의 &lt;code&gt;objectMode&lt;/code&gt; 속성에 대한 Getter입니다 .</target>
        </trans-unit>
        <trans-unit id="1df26200bb8d49a249a1311c46b8cae48b1f069c" translate="yes" xml:space="preserve">
          <source>Getting the value of the &lt;code&gt;href&lt;/code&gt; property is equivalent to calling &lt;a href=&quot;#url_url_tostring&quot;&gt;&lt;code&gt;url.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;href&lt;/code&gt; 속성 값을 얻는 것은 &lt;a href=&quot;#url_url_tostring&quot;&gt; &lt;code&gt;url.toString()&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="eda80b83a6983362aa0540edf49d4ad18f1a51c3" translate="yes" xml:space="preserve">
          <source>GitHub Repo &amp;amp; Issue Tracker</source>
          <target state="translated">GitHub 리포지토리 및 이슈 트래커</target>
        </trans-unit>
        <trans-unit id="64fa5ba39f3db1e4e3025e3bb38168ee7debb652" translate="yes" xml:space="preserve">
          <source>Given the above code, the add-on can be used from JavaScript as follows:</source>
          <target state="translated">위 코드가 주어지면, 애드온은 다음과 같이 JavaScript에서 사용될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="be3aa1dec5068fa02e91e240d40f210ae17130d7" translate="yes" xml:space="preserve">
          <source>Given the file &lt;code&gt;test.js&lt;/code&gt; below, the command &lt;code&gt;node --trace-event-categories node.perf test.js&lt;/code&gt; will print &lt;code&gt;'node.async_hooks,node.perf'&lt;/code&gt; to the console.</source>
          <target state="translated">아래 &lt;code&gt;test.js&lt;/code&gt; 파일이 주어지면 &lt;code&gt;node --trace-event-categories node.perf test.js&lt;/code&gt; 명령 이 콘솔에 &lt;code&gt;'node.async_hooks,node.perf'&lt;/code&gt; 를 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="05f7f9a759c42ea233ab74999c709f6b1e876d7d" translate="yes" xml:space="preserve">
          <source>Given two modules: &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; is a dependency of &lt;code&gt;a&lt;/code&gt; and there is a directory structure of:</source>
          <target state="translated">두 개의 모듈 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 주어 졌는데, 여기서 &lt;code&gt;b&lt;/code&gt; 는 a의 종속성이며 &lt;code&gt;a&lt;/code&gt; 과 같은 디렉토리 구조가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5cdadeb82c625264f87984cdb7712780b8ec0e8" translate="yes" xml:space="preserve">
          <source>Global Objects</source>
          <target state="translated">글로벌 객체</target>
        </trans-unit>
        <trans-unit id="2fbfcc83f5aaca871794a502e4acc6e3f184a789" translate="yes" xml:space="preserve">
          <source>Global Uncaught Exceptions</source>
          <target state="translated">잡히지 않은 글로벌 예외</target>
        </trans-unit>
        <trans-unit id="5fb36c11e9fc0d37d09666e2af5e8441d628402a" translate="yes" xml:space="preserve">
          <source>Global and Local Scope</source>
          <target state="translated">글로벌 및 로컬 범위</target>
        </trans-unit>
        <trans-unit id="4e37f490a39d54c9fbeb3fe41c5d4ea1ae177329" translate="yes" xml:space="preserve">
          <source>Global instance of &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;https.Agent&lt;/code&gt;&lt;/a&gt; for all HTTPS client requests.</source>
          <target state="translated">모든 HTTPS 클라이언트 요청에 대한 &lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;https.Agent&lt;/code&gt; 의&lt;/a&gt; 글로벌 인스턴스</target>
        </trans-unit>
        <trans-unit id="0325bf31f1497d9a8e4078e8217123ef9c5d16a1" translate="yes" xml:space="preserve">
          <source>Global instance of &lt;code&gt;Agent&lt;/code&gt; which is used as the default for all HTTP client requests.</source>
          <target state="translated">모든 HTTP 클라이언트 요청의 기본값으로 사용되는 &lt;code&gt;Agent&lt;/code&gt; 글로벌 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="3f827c66e7e04723ed3fa1ab0945dff3f10b9b83" translate="yes" xml:space="preserve">
          <source>Globals</source>
          <target state="translated">Globals</target>
        </trans-unit>
        <trans-unit id="4a04855390ce638fd14ff576f9ce989505246d79" translate="yes" xml:space="preserve">
          <source>Gracefully closes the &lt;code&gt;Http2Session&lt;/code&gt;, allowing any existing streams to complete on their own and preventing new &lt;code&gt;Http2Stream&lt;/code&gt; instances from being created. Once closed, &lt;code&gt;http2session.destroy()&lt;/code&gt;&lt;em&gt;might&lt;/em&gt; be called if there are no open &lt;code&gt;Http2Stream&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 을 정상적으로 닫아 기존 스트림을 자체적으로 완료하고 새 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스가 작성되지 않도록합니다. 폐쇄되면, &lt;code&gt;http2session.destroy()&lt;/code&gt; &lt;em&gt;수있는&lt;/em&gt; 열린이없는 경우라고 할 수 &lt;code&gt;Http2Stream&lt;/code&gt; 의 인스턴스.</target>
        </trans-unit>
        <trans-unit id="aaa2e96a3d3268692d6f1633b35f5be17a47afc2" translate="yes" xml:space="preserve">
          <source>HPE_HEADER_OVERFLOW</source>
          <target state="translated">HPE_HEADER_OVERFLOW</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="fdb5a4b986e0dcc27ea3e57d3e4174bc376076a2" translate="yes" xml:space="preserve">
          <source>HTTP message headers are represented by an object like this:</source>
          <target state="translated">HTTP 메시지 헤더는 다음과 같은 객체로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6bedb581201b3185f91c52a099cb8493bc05da02" translate="yes" xml:space="preserve">
          <source>HTTP requests, on the client</source>
          <target state="translated">클라이언트의 HTTP 요청</target>
        </trans-unit>
        <trans-unit id="8c27f8f8898f84f5f0e669f814562011af3abe1f" translate="yes" xml:space="preserve">
          <source>HTTP requests, on the server</source>
          <target state="translated">서버의 HTTP 요청</target>
        </trans-unit>
        <trans-unit id="7e79e0f7231dc71d3c2aaa877778c65a5247b0d2" translate="yes" xml:space="preserve">
          <source>HTTP requires the &lt;code&gt;Trailer&lt;/code&gt; header to be sent in order to emit trailers, with a list of the header fields in its value. E.g.,</source>
          <target state="translated">HTTP에서는 &lt;code&gt;Trailer&lt;/code&gt; 려면 예고편 헤더를 보내야하며 값에 헤더 필드 목록이 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="86fcfbb15f6845bfac98cdb49edf4809f4e265ca" translate="yes" xml:space="preserve">
          <source>HTTP responses, on the client</source>
          <target state="translated">클라이언트의 HTTP 응답</target>
        </trans-unit>
        <trans-unit id="48f2266f075962126f207086a2582ec55aae30f1" translate="yes" xml:space="preserve">
          <source>HTTP responses, on the server</source>
          <target state="translated">서버의 HTTP 응답</target>
        </trans-unit>
        <trans-unit id="c8ea5ddd7ae4ea21da1ba2ad745cba902ce0e7c9" translate="yes" xml:space="preserve">
          <source>HTTP/1 connection specific headers are forbidden to be used in HTTP/2 requests and responses.</source>
          <target state="translated">HTTP / 1 연결 특정 헤더는 HTTP / 2 요청 및 응답에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56c29f7b7a2556c18bd6ae0375852ab119253dde" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Required</source>
          <target state="translated">HTTP / 1.1 필요</target>
        </trans-unit>
        <trans-unit id="396826d4135990391d3176f7b40c9091eed2c0d3" translate="yes" xml:space="preserve">
          <source>HTTP/2</source>
          <target state="translated">HTTP/2</target>
        </trans-unit>
        <trans-unit id="8148960d4e61716fc44450d8897a0e7b3f04fd9e" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;code&gt;ORIGIN&lt;/code&gt; frames are limited to a length of 16382 bytes.</source>
          <target state="translated">HTTP / 2 &lt;code&gt;ORIGIN&lt;/code&gt; 프레임은 길이가 16382 바이트로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="4a2dece163a07b7e6be65743d283e8755270d1ad" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;code&gt;ORIGIN&lt;/code&gt; frames require a valid origin.</source>
          <target state="translated">HTTP / 2 &lt;code&gt;ORIGIN&lt;/code&gt; 프레임에는 유효한 원점이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9230f85593a0376299b95c5b187c2cfcd9228863" translate="yes" xml:space="preserve">
          <source>HTTP/2 ALTSVC frames are limited to a maximum of 16,382 payload bytes.</source>
          <target state="translated">HTTP / 2 ALTSVC 프레임은 최대 16,382 페이로드 바이트로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="dacf73205d74d5e87bb8aca79da96f9db3b2255e" translate="yes" xml:space="preserve">
          <source>HTTP/2 ALTSVC frames require a valid origin.</source>
          <target state="translated">HTTP / 2 ALTSVC 프레임에는 유효한 원점이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="32c063f11c9e54047fa82b0c64454229ca1c933a" translate="yes" xml:space="preserve">
          <source>HTTP/2 informational headers must only be sent &lt;em&gt;prior&lt;/em&gt; to calling the &lt;code&gt;Http2Stream.prototype.respond()&lt;/code&gt; method.</source>
          <target state="translated">HTTP / 2 정보 헤더는 &lt;code&gt;Http2Stream.prototype.respond()&lt;/code&gt; 메소드 를 호출 &lt;em&gt;하기 전에&lt;/em&gt; 만 전송해야합니다 .</target>
        </trans-unit>
        <trans-unit id="528fe308debf6ef52289c4212825715f2f7cc298" translate="yes" xml:space="preserve">
          <source>HTTP/2 is now Stable. Previously, it had been Experimental.</source>
          <target state="translated">이제 HTTP / 2가 안정적입니다. 이전에는 실험적이었습니다.</target>
        </trans-unit>
        <trans-unit id="e077df1ae49c023afc50547177431823bd0969d2" translate="yes" xml:space="preserve">
          <source>HTTP/2 ping payloads must be exactly 8 bytes in length.</source>
          <target state="translated">HTTP / 2 핑 페이로드의 길이는 정확히 8 바이트 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="ef09cecaab6baa3ec4655e999ed134572f934f56" translate="yes" xml:space="preserve">
          <source>HTTPS is the HTTP protocol over TLS/SSL. In Node.js this is implemented as a separate module.</source>
          <target state="translated">HTTPS는 TLS / SSL을 통한 HTTP 프로토콜입니다. Node.js에서 이것은 별도의 모듈로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0c638f78e236c7b777e5413fb14f7ac604a42539" translate="yes" xml:space="preserve">
          <source>Half-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.</source>
          <target state="translated">소켓을 반쯤 닫습니다. 즉, FIN 패킷을 보냅니다. 서버가 여전히 일부 데이터를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f9e5d2b5f778fe24b47ab2ebc0290eb3118419c" translate="yes" xml:space="preserve">
          <source>Handle non-&lt;code&gt;Uint8Array&lt;/code&gt; typed arrays correctly.</source>
          <target state="translated">비 &lt;code&gt;Uint8Array&lt;/code&gt; 유형 배열을 올바르게 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="fd711236f5bce407cc82e7be889f63bbf1c1e755" translate="yes" xml:space="preserve">
          <source>Handle scopes are created using &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt;&lt;code&gt;napi_open_handle_scope&lt;/code&gt;&lt;/a&gt; and are destroyed using &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt;&lt;code&gt;napi_close_handle_scope&lt;/code&gt;&lt;/a&gt;. Closing the scope can indicate to the GC that all &lt;code&gt;napi_value&lt;/code&gt;s created during the lifetime of the handle scope are no longer referenced from the current stack frame.</source>
          <target state="translated">핸들 범위는 &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt; &lt;code&gt;napi_open_handle_scope&lt;/code&gt; 를&lt;/a&gt; 사용하여 생성 되고 &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt; &lt;code&gt;napi_close_handle_scope&lt;/code&gt; 를&lt;/a&gt; 사용하여 제거 됩니다. 범위를 닫으면 핸들 범위의 수명 동안 생성 된 모든 &lt;code&gt;napi_value&lt;/code&gt; 가 더 이상 현재 스택 프레임에서 참조되지 않음을 GC에 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b4670d802dc0f8d1d8fe9b416d00a6e619d00e5" translate="yes" xml:space="preserve">
          <source>Handlers for &lt;code&gt;Promise&lt;/code&gt;s are now invoked in the domain in which the first promise of a chain was created.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 용 핸들러 는 이제 체인의 첫 번째 약속이 작성된 도메인에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d16ab4925704ec488726f12cbc19ee310ea09d7a" translate="yes" xml:space="preserve">
          <source>Handling events only once</source>
          <target state="translated">한 번만 이벤트 처리</target>
        </trans-unit>
        <trans-unit id="6b91098d75c32149f113553d14a234924b548a1e" translate="yes" xml:space="preserve">
          <source>Handling this event involves calling &lt;a href=&quot;#http2_response_writecontinue&quot;&gt;&lt;code&gt;response.writeContinue()&lt;/code&gt;&lt;/a&gt; if the client should continue to send the request body, or generating an appropriate HTTP response (e.g. 400 Bad Request) if the client should not continue to send the request body.</source>
          <target state="translated">이 이벤트를 처리 하려면 클라이언트가 요청 본문을 계속 보내야하는 경우 &lt;a href=&quot;#http2_response_writecontinue&quot;&gt; &lt;code&gt;response.writeContinue()&lt;/code&gt; &lt;/a&gt; 를 호출 하거나 클라이언트가 요청 본문을 계속 보내지 않아야하는 경우 적절한 HTTP 응답 (예 : 400 잘못된 요청)을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b712796f82e3fa4437c6dea3765a90d7215fbfd" translate="yes" xml:space="preserve">
          <source>Handling this event involves calling &lt;a href=&quot;#http_response_writecontinue&quot;&gt;&lt;code&gt;response.writeContinue()&lt;/code&gt;&lt;/a&gt; if the client should continue to send the request body, or generating an appropriate HTTP response (e.g. 400 Bad Request) if the client should not continue to send the request body.</source>
          <target state="translated">이 이벤트를 처리 하려면 클라이언트가 요청 본문을 계속 보내야하는 경우 &lt;a href=&quot;#http_response_writecontinue&quot;&gt; &lt;code&gt;response.writeContinue()&lt;/code&gt; &lt;/a&gt; 를 호출 하거나 클라이언트가 요청 본문을 계속 보내지 않아야하는 경우 적절한 HTTP 응답 (예 : 400 잘못된 요청)을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="40aba275f1ef6a200de77f3a58f12fd38676ccf0" translate="yes" xml:space="preserve">
          <source>Header field names are &lt;em&gt;case-insensitive&lt;/em&gt; and are transmitted over the wire strictly as lower-case strings. The API provided by Node.js allows header names to be set as mixed-case strings (e.g. &lt;code&gt;Content-Type&lt;/code&gt;) but will convert those to lower-case (e.g. &lt;code&gt;content-type&lt;/code&gt;) upon transmission.</source>
          <target state="translated">헤더 필드 이름은 &lt;em&gt;대소 문자를 구분하지 않으며&lt;/em&gt; 소문자 문자열로 엄격하게 전송됩니다. Node.js가 제공하는 API를 사용하면 헤더 이름을 대소 문자 혼합 문자열 (예 : &lt;code&gt;Content-Type&lt;/code&gt; ) 로 설정할 수 있지만 전송시이를 소문자 (예 : &lt;code&gt;content-type&lt;/code&gt; ) 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="88b12fc1e888c0c5168ce6494ea0eeffcfbfa675" translate="yes" xml:space="preserve">
          <source>Header field values are handled with more leniency but &lt;em&gt;should&lt;/em&gt; not contain new-line or carriage return characters and &lt;em&gt;should&lt;/em&gt; be limited to US-ASCII characters, per the requirements of the HTTP specification.</source>
          <target state="translated">헤더 필드 값은 더 관용으로 취급되지만 &lt;em&gt;한다&lt;/em&gt; 새로운 라인 또는 캐리지 리턴 문자를 포함하고 &lt;em&gt;있어야&lt;/em&gt; HTTP 사양의 요구 사항에 따라, US-ASCII 문자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="2ec8b1892d59bd2c1b2abd7acb2f186730da0aaa" translate="yes" xml:space="preserve">
          <source>Header field-names &lt;em&gt;must only&lt;/em&gt; contain one or more of the following ASCII characters: &lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;`&lt;/code&gt; (backtick), &lt;code&gt;|&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">헤더 필드 이름 &lt;em&gt;만 있어야&lt;/em&gt; 하나 이상의 다음과 같은 ASCII 문자가 들어 - &lt;code&gt;z&lt;/code&gt; , - &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;#&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; , &lt;code&gt;_&lt;/code&gt; , &lt;code&gt;`&lt;/code&gt; (백틱), &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;~&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d9b086c13105ea35971403bf835a70d0bbb872e" translate="yes" xml:space="preserve">
          <source>Header names are not lowercased, and duplicates are not merged.</source>
          <target state="translated">헤더 이름은 소문자가 아니며 복제본은 병합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2511e922d77fcdc42cd4383bff0441bb6537fa5c" translate="yes" xml:space="preserve">
          <source>Header objects passed to callback functions will have a &lt;code&gt;null&lt;/code&gt; prototype. This means that normal JavaScript object methods such as &lt;code&gt;Object.prototype.toString()&lt;/code&gt; and &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; will not work.</source>
          <target state="translated">콜백 함수에 전달 된 헤더 객체에는 &lt;code&gt;null&lt;/code&gt; 프로토 타입이 있습니다. 이는 &lt;code&gt;Object.prototype.toString()&lt;/code&gt; 및 &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; 와 같은 일반적인 JavaScript 객체 메소드 가 작동하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9e4700ad76aa91c1d67e40b3abea4c788dda8a72" translate="yes" xml:space="preserve">
          <source>Headers Object</source>
          <target state="translated">헤더 객체</target>
        </trans-unit>
        <trans-unit id="67c4b953e20f4046d4339e1ef3eb71030cdf4cff" translate="yes" xml:space="preserve">
          <source>Headers are represented as own-properties on JavaScript objects. The property keys will be serialized to lower-case. Property values should be strings (if they are not they will be coerced to strings) or an &lt;code&gt;Array&lt;/code&gt; of strings (in order to send more than one value per header field).</source>
          <target state="translated">헤더는 JavaScript 객체에서 자체 속성으로 표시됩니다. 속성 키는 소문자로 직렬화됩니다. 속성 값은 문자열 (문자열이 아닌 경우 문자열로 강제 변환 됨) 또는 문자열 &lt;code&gt;Array&lt;/code&gt; (헤더 필드 당 둘 이상의 값을 보내려면)이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c27c007a96dfa358dbc61fd4c0845a6951498148" translate="yes" xml:space="preserve">
          <source>Heap Profiler</source>
          <target state="translated">힙 프로파일 러</target>
        </trans-unit>
        <trans-unit id="7b502c3a1f48c8609ae212cdfb639dee39673f5e" translate="yes" xml:space="preserve">
          <source>Hello world</source>
          <target state="translated">안녕하세요 세계</target>
        </trans-unit>
        <trans-unit id="41c6cab4071321fb2d749352736fd5b32cfb564f" translate="yes" xml:space="preserve">
          <source>Here are the contents of &lt;code&gt;circle.js&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;circle.js&lt;/code&gt; 의 내용은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2137a56ebf15e23f0b386430b270eb5b5bd497" translate="yes" xml:space="preserve">
          <source>Here is an example below:</source>
          <target state="translated">아래에 예가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="08b02063a09fd208f0e5d16954f0cb86868b6df8" translate="yes" xml:space="preserve">
          <source>Here is an example of an TCP echo server which listens for connections on port 8124:</source>
          <target state="translated">다음은 포트 8124의 연결을 수신 대기하는 TCP 에코 서버의 예입니다.</target>
        </trans-unit>
        <trans-unit id="650d7a34601ecbfc556318f1e1d6fb2cc04c920d" translate="yes" xml:space="preserve">
          <source>Here is an example of the &lt;code&gt;ret&lt;/code&gt; object passed to the callback:</source>
          <target state="translated">다음은 콜백에 전달 된 &lt;code&gt;ret&lt;/code&gt; 객체 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="4d067608386a71a40cf2ed3a4efd12148eb6d04d" translate="yes" xml:space="preserve">
          <source>Here is an example of the result object:</source>
          <target state="translated">결과 객체의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9a605b24ae485b7b7ebfaac5e6d6801a86626a08" translate="yes" xml:space="preserve">
          <source>Here is an example using the message system. It keeps a count in the master process of the number of HTTP requests received by the workers:</source>
          <target state="translated">다음은 메시지 시스템을 사용하는 예입니다. 작업자가 수신 한 HTTP 요청 수의 마스터 프로세스에 카운트를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="da970d32241bd4accf1d4a727aee19b70f849a64" translate="yes" xml:space="preserve">
          <source>Here's an example showing how to use the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/HeapProfiler&quot;&gt;Heap Profiler&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/HeapProfiler&quot;&gt;힙 프로파일 러&lt;/a&gt; 를 사용하는 방법을 보여주는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="26838d9f3d94b6ddd2817d8b544156b68bf25304" translate="yes" xml:space="preserve">
          <source>Here's an example showing how to use the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/Profiler&quot;&gt;CPU Profiler&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/Profiler&quot;&gt;CPU 프로파일 러&lt;/a&gt; 를 사용하는 방법을 보여주는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f16459104f92ab6b38aa265adb4ecbfc3768e303" translate="yes" xml:space="preserve">
          <source>Histogram</source>
          <target state="translated">Histogram</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="cc4a71065ff8ca97a2cf841b164f030229d81b91" translate="yes" xml:space="preserve">
          <source>Hmac</source>
          <target state="translated">Hmac</target>
        </trans-unit>
        <trans-unit id="f3d2ec6b4a586d95b5d4f5d2adbc69eebe706a88" translate="yes" xml:space="preserve">
          <source>Hook Callbacks</source>
          <target state="translated">훅 콜백</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="b8b013bb14afa30043c795cf70fba96d444186a1" translate="yes" xml:space="preserve">
          <source>However, changing from &lt;code&gt;http&lt;/code&gt; to a hypothetical &lt;code&gt;fish&lt;/code&gt; protocol does not because the new protocol is not special.</source>
          <target state="translated">그러나 &lt;code&gt;http&lt;/code&gt; 에서 가상 &lt;code&gt;fish&lt;/code&gt; 프로토콜 로 변경 한다고 해서 새로운 프로토콜이 특별하지 않기 때문은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="217dafda23837f885d1064b5c21d68c773e81068" translate="yes" xml:space="preserve">
          <source>However, if this function succeeded, further calls to this function after the initial instantiation will be no-ops, to be consistent with the ECMAScript specification.</source>
          <target state="translated">그러나이 함수가 성공하면 ECMAScript 사양과 일치하도록 초기 인스턴스화 후이 함수를 추가로 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d1b7ad14a7be7d7e22cd04a62b5f23338533302a" translate="yes" xml:space="preserve">
          <source>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled &lt;code&gt;Buffer&lt;/code&gt; instance using &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; and then copying out the relevant bits.</source>
          <target state="translated">그러나 개발자가 결정되지 않은 시간 동안 풀에서 작은 메모리 청크를 유지해야하는 경우에는 &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; 사용하여 풀링되지 않은 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 만든 다음 복사하는 것이 좋습니다 . 관련 비트.</target>
        </trans-unit>
        <trans-unit id="371f9ed83922bcd4b3843ce103949d80056a0911" translate="yes" xml:space="preserve">
          <source>However, the created &lt;code&gt;MessagePort&lt;/code&gt; will no longer inherit from &lt;a href=&quot;events&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;, and only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt;&lt;code&gt;port.onmessage()&lt;/code&gt;&lt;/a&gt; can be used to receive events using it.</source>
          <target state="translated">그러나 작성된 &lt;code&gt;MessagePort&lt;/code&gt; 는 더 이상 &lt;a href=&quot;events&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; 에서 상속되지 않으며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt; &lt;code&gt;port.onmessage()&lt;/code&gt; &lt;/a&gt; 만 사용하여 이벤트를 수신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d38fc251c7926f79e6e726b8ee8e35076886e90" translate="yes" xml:space="preserve">
          <source>However, the following will result in an &lt;code&gt;AssertionError&lt;/code&gt; with the message 'Got unwanted exception...':</source>
          <target state="translated">그러나 다음은 'Gon 원하지 않는 예외 ...'메시지와 함께 &lt;code&gt;AssertionError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f4f31e79d484e6bad0399f3831ddb8f4f71d4b70" translate="yes" xml:space="preserve">
          <source>Http2SecureServer</source>
          <target state="translated">Http2SecureServer</target>
        </trans-unit>
        <trans-unit id="69e173fd39778ed04b13acb1e3cb6b95259bc29b" translate="yes" xml:space="preserve">
          <source>Http2Server</source>
          <target state="translated">Http2Server</target>
        </trans-unit>
        <trans-unit id="e07e208f0d559a077e5ff88cdf452db14558d01d" translate="yes" xml:space="preserve">
          <source>Http2Session</source>
          <target state="translated">Http2Session</target>
        </trans-unit>
        <trans-unit id="c5163621c30ca50884bfc415eac2ea0ee630b513" translate="yes" xml:space="preserve">
          <source>Http2Session and Sockets</source>
          <target state="translated">Http2Session 및 소켓</target>
        </trans-unit>
        <trans-unit id="0ab6c9fdd17eeadb81f558be7086b2bf5a839c48" translate="yes" xml:space="preserve">
          <source>Http2Stream</source>
          <target state="translated">Http2Stream</target>
        </trans-unit>
        <trans-unit id="e488ff3925f9c2b81a0fc61328b3e3ca7adb034e" translate="yes" xml:space="preserve">
          <source>Http2Stream Lifecycle</source>
          <target state="translated">Http2Stream 라이프 사이클</target>
        </trans-unit>
        <trans-unit id="8fdf25d549e82b325ad178006258a8719d41ecfb" translate="yes" xml:space="preserve">
          <source>ICU is able to automatically find and load a variety of data formats, but the data must be appropriate for the ICU version, and the file correctly named. The most common name for the data file is &lt;code&gt;icudt6X[bl].dat&lt;/code&gt;, where &lt;code&gt;6X&lt;/code&gt; denotes the intended ICU version, and &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;l&lt;/code&gt; indicates the system's endianness. Check &lt;a href=&quot;http://userguide.icu-project.org/icudata&quot;&gt;&quot;ICU Data&quot;&lt;/a&gt; article in the ICU User Guide for other supported formats and more details on ICU data in general.</source>
          <target state="translated">ICU는 다양한 데이터 형식을 자동으로 찾아서로드 할 수 있지만 데이터는 ICU 버전에 적합해야하며 파일 이름은 올바르게 지정해야합니다. 데이터 파일의 가장 일반적인 이름은 &lt;code&gt;icudt6X[bl].dat&lt;/code&gt; . 여기서 &lt;code&gt;6X&lt;/code&gt; 는 의도 한 ICU 버전을 나타내고 &lt;code&gt;b&lt;/code&gt; 또는 &lt;code&gt;l&lt;/code&gt; 은 시스템의 엔디안을 나타냅니다. 지원되는 다른 형식과 일반적인 ICU 데이터에 대한 자세한 내용은 ICU 사용 설명서의 &lt;a href=&quot;http://userguide.icu-project.org/icudata&quot;&gt;&quot;ICU 데이터&quot;&lt;/a&gt; 기사를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="324af4da694d68f4b7d517af8a91fe505f93074c" translate="yes" xml:space="preserve">
          <source>IPC Support</source>
          <target state="translated">IPC 지원</target>
        </trans-unit>
        <trans-unit id="cd07613e18fd2980e850dc35cf7b7b6aa2c0cde7" translate="yes" xml:space="preserve">
          <source>IPC channels from parent processes are not accessible.</source>
          <target state="translated">상위 프로세스의 IPC 채널에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c55c70f459a62763619af9f57cf5850cd15f474f" translate="yes" xml:space="preserve">
          <source>IPv4 addresses (default)</source>
          <target state="translated">IPv4 주소 (기본값)</target>
        </trans-unit>
        <trans-unit id="6c0afb2bb01117b0e08d467de866f58f12c8ad23" translate="yes" xml:space="preserve">
          <source>IPv6 addresses</source>
          <target state="translated">IPv6 주소</target>
        </trans-unit>
        <trans-unit id="4025174d38891a7c19336433fdedd242a1eeb261" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt;&lt;code&gt;buf.indexOf()&lt;/code&gt;&lt;/a&gt;, except the last occurrence of &lt;code&gt;value&lt;/code&gt; is found rather than the first occurrence.</source>
          <target state="translated">동일 &lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt; &lt;code&gt;buf.indexOf()&lt;/code&gt; &lt;/a&gt; 의 최후의 발생을 제외한 &lt;code&gt;value&lt;/code&gt; 보다는 처음 나타나는보다 발견된다.</target>
        </trans-unit>
        <trans-unit id="99807e48005beb9afb928c593a1736f90716a5cf" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;-e&lt;/code&gt; but prints the result.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 와 동일 하지만 결과를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="eff66c38c482071129bb47b8b0514c9ef9980f78" translate="yes" xml:space="preserve">
          <source>Identifying paths for IPC connections</source>
          <target state="translated">IPC 연결 경로 식별</target>
        </trans-unit>
        <trans-unit id="1eb8242c3d7f4981b86f02d871e9facba25b76e8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http2_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; are called before calling this, the implicit/mutable headers will be calculated and call this function.</source>
          <target state="translated">경우 &lt;a href=&quot;#http2_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; 이를 호출하기 전에 호출, 암시 적 / 가변 헤더는 계산이 함수를 호출한다.</target>
        </trans-unit>
        <trans-unit id="1f5db519e046b3f5c079931debb7310f19546987" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; are called before calling this, the implicit/mutable headers will be calculated and call this function.</source>
          <target state="translated">경우 &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt; 이를 호출하기 전에 호출, 암시 적 / 가변 헤더는 계산이 함수를 호출한다.</target>
        </trans-unit>
        <trans-unit id="13c1d4abaa2e24db688c942bc44506eecb997ffd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; method is called and this method has not been called, it will directly write the supplied header values onto the network channel without caching internally, and the &lt;a href=&quot;#http_response_getheader_name&quot;&gt;&lt;code&gt;response.getHeader()&lt;/code&gt;&lt;/a&gt; on the header will not yield the expected result. If progressive population of headers is desired with potential future retrieval and modification, use &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하고,이 메소드가 호출되어 있지 않은, 직접적 내부 캐시 않고 네트워크 채널 상에 제공된 헤더 값을 쓸 것이고, &lt;a href=&quot;#http_response_getheader_name&quot;&gt; &lt;code&gt;response.getHeader()&lt;/code&gt; &lt;/a&gt; 헤더에 예상 결과를 얻을 수 없다. 향후 검색 및 수정이 가능한 점진적인 헤더 채우기가 필요한 경우 &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c39f6015a6de86ba481a03db4cf0b880b07f9b9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;s are used, each thread has an independent &lt;code&gt;async_hooks&lt;/code&gt; interface, and each thread will use a new set of async IDs.</source>
          <target state="translated">경우 &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 의를 사용하는 각 스레드는 독립적가 &lt;code&gt;async_hooks&lt;/code&gt; 의 인터페이스를, 각 스레드는 비동기 ID의 새로운 세트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0871e8ec0ac48a52952a27247e63cbf0113f285d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-dir&lt;/code&gt; is not specified, the generated profile will be placed in the current working directory.</source>
          <target state="translated">경우 &lt;code&gt;--cpu-prof-dir&lt;/code&gt; 지정하지 않으면 생성 된 프로파일은 현재 작업 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="7f06f2cbbef2e0fb250e543666453b867b0203fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-name&lt;/code&gt; is not specified, the generated profile will be named &lt;code&gt;CPU.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.cpuprofile&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;--cpu-prof-name&lt;/code&gt; 지정되지 않은, 생성 된 프로파일이 지정됩니다 &lt;code&gt;CPU.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.cpuprofile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="252f256b679b33839de5451abb1450ca761612a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--experimental-exports&lt;/code&gt; is enabled, Node.js allows packages loaded via &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; to explicitly declare which file paths to expose and how they should be interpreted. This expands on the control packages already had using the &lt;code&gt;main&lt;/code&gt; field.</source>
          <target state="translated">경우 &lt;code&gt;--experimental-exports&lt;/code&gt; 활성화되어, Node.js를이를 통해로드 패키지 수 &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; 명시 적으로 노출하고, 그들이 어떻게 해석해야하는 파일 경로 선언에 있습니다. 이것은 이미 &lt;code&gt;main&lt;/code&gt; 필드를 사용했던 제어 패키지에서 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb76738d0d5b293cfa7a0ef70a7b9988c388ff9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-dir&lt;/code&gt; is not specified, the generated profile will be placed in the current working directory.</source>
          <target state="translated">경우 &lt;code&gt;--heap-prof-dir&lt;/code&gt; 지정하지 않으면 생성 된 프로파일은 현재 작업 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="46da7a20ea57b72f58b0fe3ec3917cf72b3a7d80" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-name&lt;/code&gt; is not specified, the generated profile will be named &lt;code&gt;Heap.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.heapprofile&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;--heap-prof-name&lt;/code&gt; 지정되지 않은, 생성 된 프로파일이 지정됩니다 &lt;code&gt;Heap.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.heapprofile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a980a9bd1025b824afd68b7411862ede9f40818" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--use-openssl-ca&lt;/code&gt; is enabled, this overrides and sets OpenSSL's directory containing trusted certificates.</source>
          <target state="translated">경우 &lt;code&gt;--use-openssl-ca&lt;/code&gt; 활성화되어,이 오버라이드 (override)과 세트에는 OpenSSL의 디렉토리 신뢰할 수있는 인증서를 포함.</target>
        </trans-unit>
        <trans-unit id="2fb80a9ef49b333f19355375aacc43b97c24f1e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--use-openssl-ca&lt;/code&gt; is enabled, this overrides and sets OpenSSL's file containing trusted certificates.</source>
          <target state="translated">경우 &lt;code&gt;--use-openssl-ca&lt;/code&gt; 활성화되어,이 오버라이드 (override)과 세트에는 OpenSSL의 파일을 신뢰할 수있는 인증서를 포함.</target>
        </trans-unit>
        <trans-unit id="7e11b3232ffd9dab8c9348cab833faebe15ef6ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;address&lt;/code&gt; is not a valid IP address, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown. The &lt;code&gt;port&lt;/code&gt; will be coerced to a number. If it is not a legal port, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 가 유효한 IP 주소 가 아닌 경우 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다. &lt;code&gt;port&lt;/code&gt; 숫자로 강제됩니다. 유효한 포트가 아닌 경우 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dcd8be5407b5fb181647c0388b364a8265244634" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowHalfOpen&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, when the other end of the socket sends a FIN packet, the server will only send a FIN packet back when &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt; is explicitly called, until then the connection is half-closed (non-readable but still writable). See &lt;a href=&quot;#net_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event and &lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;RFC 1122&lt;/a&gt; (section 4.2.2.13) for more information.</source>
          <target state="translated">경우 &lt;code&gt;allowHalfOpen&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; 소켓의 다른 쪽 끝은 FIN 패킷을 전송하면, 서버는 단지 FIN 패킷 다시 보내드립니다 &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;socket.end()&lt;/code&gt; &lt;/a&gt; 연결이 (비 읽을 반 닫혀 그때까지, 명시 적으로 호출된다 여전히 쓸 수 있음). 자세한 내용은 &lt;a href=&quot;#net_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; 이벤트 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;RFC 1122&lt;/a&gt; (섹션 4.2.2.13)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b6058ee035a415370db1a3db640b04683644860b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;asyncFn&lt;/code&gt; is a function and it throws an error synchronously, &lt;code&gt;assert.doesNotReject()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with that error. If the function does not return a promise, &lt;code&gt;assert.doesNotReject()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with an &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt;&lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt;&lt;/a&gt; error. In both cases the error handler is skipped.</source>
          <target state="translated">경우 &lt;code&gt;asyncFn&lt;/code&gt; 이 함수하고, 동기 에러가 발생 &lt;code&gt;assert.doesNotReject()&lt;/code&gt; 거부 반환 &lt;code&gt;Promise&lt;/code&gt; 그 오류. 함수가 약속을 반환하지 않으면 &lt;code&gt;assert.doesNotReject()&lt;/code&gt; 는 &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt; &lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt; &lt;/a&gt; 오류 와 함께 거부 된 &lt;code&gt;Promise&lt;/code&gt; 을 반환합니다 . 두 경우 모두 오류 처리기를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="41ea89f36eae232beb7b436e30b4cf63aba4bfd0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;asyncFn&lt;/code&gt; is a function and it throws an error synchronously, &lt;code&gt;assert.rejects()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with that error. If the function does not return a promise, &lt;code&gt;assert.rejects()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with an &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt;&lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt;&lt;/a&gt; error. In both cases the error handler is skipped.</source>
          <target state="translated">경우 &lt;code&gt;asyncFn&lt;/code&gt; 는 함수이며 동기 에러가 발생, &lt;code&gt;assert.rejects()&lt;/code&gt; 거부 반환 &lt;code&gt;Promise&lt;/code&gt; 그 오류. 함수가 약속을 반환하지 않으면 &lt;code&gt;assert.rejects()&lt;/code&gt; 는 &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt; &lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt; &lt;/a&gt; 오류 와 함께 거부 된 &lt;code&gt;Promise&lt;/code&gt; 을 반환합니다 . 두 경우 모두 오류 처리기를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="59c43e5b8c09c005a303cada9f14ee3496dfd208" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoClose&lt;/code&gt; is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak. If &lt;code&gt;autoClose&lt;/code&gt; is set to true (default behavior), on &lt;code&gt;'error'&lt;/code&gt; or &lt;code&gt;'end'&lt;/code&gt; the file descriptor will be closed automatically.</source>
          <target state="translated">&lt;code&gt;autoClose&lt;/code&gt; 가 false 이면 오류 가 있어도 파일 디스크립터가 닫히지 않습니다. 응용 프로그램은 응용 프로그램을 닫고 파일 디스크립터 누출이 없는지 확인해야합니다. &lt;code&gt;autoClose&lt;/code&gt; 가 true (기본 동작)로 설정 되면 &lt;code&gt;'error'&lt;/code&gt; 또는 &lt;code&gt;'end'&lt;/code&gt; 에서 파일 설명자가 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="539b14e864af1c39151389953522f5a823d83c18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoClose&lt;/code&gt; is set to true (default behavior) on &lt;code&gt;'error'&lt;/code&gt; or &lt;code&gt;'finish'&lt;/code&gt; the file descriptor will be closed automatically. If &lt;code&gt;autoClose&lt;/code&gt; is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak.</source>
          <target state="translated">경우 &lt;code&gt;autoClose&lt;/code&gt; 에 참 (기본 동작)로 설정되어 &lt;code&gt;'error'&lt;/code&gt; 또는 &lt;code&gt;'finish'&lt;/code&gt; 파일 기술자가 자동으로 종료됩니다. &lt;code&gt;autoClose&lt;/code&gt; 가 false 이면 오류 가 있어도 파일 디스크립터가 닫히지 않습니다. 응용 프로그램은 응용 프로그램을 닫고 파일 디스크립터 누출이 없는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="884077a55ab26855c918c881218b89b04b494140" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;byteOffset&lt;/code&gt; is not a number, it will be coerced to a number. Any arguments that coerce to &lt;code&gt;NaN&lt;/code&gt;, like &lt;code&gt;{}&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, will search the whole buffer. This behavior matches &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf&quot;&gt;&lt;code&gt;String#lastIndexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;byteOffset&lt;/code&gt; 은 숫자가 아니라,이 숫자로 강제됩니다. &lt;code&gt;{}&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 와 같이 &lt;code&gt;NaN&lt;/code&gt; 을 강제하는 모든 인수 는 전체 버퍼를 검색합니다. 이 동작은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf&quot;&gt; &lt;code&gt;String#lastIndexOf()&lt;/code&gt; &lt;/a&gt; 와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="b7b130c5da2c6867ef71cd5fe02db9d69ebd0795" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;byteOffset&lt;/code&gt; is not a number, it will be coerced to a number. If the result of coercion is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, then the entire buffer will be searched. This behavior matches &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot;&gt;&lt;code&gt;String#indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;byteOffset&lt;/code&gt; 은 숫자가 아니라,이 숫자로 강제됩니다. 강제 변환의 결과가 &lt;code&gt;NaN&lt;/code&gt; 또는 &lt;code&gt;0&lt;/code&gt; 이면 전체 버퍼가 검색됩니다. 이 동작은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot;&gt; &lt;code&gt;String#indexOf()&lt;/code&gt; &lt;/a&gt; 와 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="c590e6de95cfddb8ed4a4d519ab06c0bb835b03a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is not a function, a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 이 함수가 아닌 경우 &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f96bd4f40d4ce94291921e72da0a0dee934b282" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is provided, it is not invoked until all active sessions have been closed, although the server has already stopped allowing new sessions. See &lt;a href=&quot;net#net_server_close_callback&quot;&gt;&lt;code&gt;net.Server.close()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 제공되는 모든 활성 세션이 종료 될 때까지 서버가 이미 새로운 세션을 허용 중단했지만, 그것은, 호출되지 않습니다. 자세한 내용은 &lt;a href=&quot;net#net_server_close_callback&quot;&gt; &lt;code&gt;net.Server.close()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="598b066902e0bb1da7edca563a32a66a0b6c3b13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is provided, it is not invoked until all active sessions have been closed, although the server has already stopped allowing new sessions. See &lt;a href=&quot;tls#tls_server_close_callback&quot;&gt;&lt;code&gt;tls.Server.close()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 제공되는 모든 활성 세션이 종료 될 때까지 서버가 이미 새로운 세션을 허용 중단했지만, 그것은, 호출되지 않습니다. 자세한 내용은 &lt;a href=&quot;tls#tls_server_close_callback&quot;&gt; &lt;code&gt;tls.Server.close()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4321180d73b6506962002c0e8c30474f65569ce1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is specified, it will be called when the request stream is finished.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 지정된 요청 스트림이 완료 될 때, 그것은 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="289f877647833459c9661200af57b09de3403f4a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is specified, it will be called when the response stream is finished.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 지정된 응답 스트림이 완료 될 때, 그것은 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7fa93683434fd29bb44a881093da31d55c3a7e23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;a href=&quot;#http_request_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;request.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;request.end(callback)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 지정된 경우는 호출하는 것과 &lt;a href=&quot;#http_request_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;request.write(data, encoding)&lt;/code&gt; &lt;/a&gt; 하였다 &lt;code&gt;request.end(callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8427d4b682c9e1679aa15d985063ddcd570ecf5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;a href=&quot;http#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;response.end(callback)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 지정된 경우는 호출하는 것과 &lt;a href=&quot;http#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write(data, encoding)&lt;/code&gt; &lt;/a&gt; 다음 &lt;code&gt;response.end(callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="229ece6c8182b142b9ec817aaf04f94cce304527" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;code&gt;socket.write(data, encoding)&lt;/code&gt; followed by &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 지정되어,이 호출하는 것과 &lt;code&gt;socket.write(data, encoding)&lt;/code&gt; 하였다 &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;socket.end()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0071baccfdde3653b128f8b8005e7668d6faf522" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is similar in effect to calling &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;response.end(callback)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 지정되면 그 전화에 사실상 유사하다 &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write(data, encoding)&lt;/code&gt; &lt;/a&gt; 다음 &lt;code&gt;response.end(callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1429cd543300865d3187bd54d6de4ff5a31b2f3d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;'sha1'&lt;/code&gt; will be used. This behavior is deprecated, please specify a &lt;code&gt;digest&lt;/code&gt; explicitly.</source>
          <target state="translated">경우 &lt;code&gt;digest&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;'sha1'&lt;/code&gt; 사용됩니다. 이 동작은 더 이상 사용되지 않습니다 . &lt;code&gt;digest&lt;/code&gt; 명시 적으로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="296de98e0eac254a8d7d501b18c4e257eafcc0da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="2e3c255effb35f8dcbf9e574c3558ceb3e16a170" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is specified, a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;encoding&lt;/code&gt; 지정하는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="02dfbed9e2c0a8c31f6ac956adbe7f6a81882d56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exception&lt;/code&gt; is specified, an &lt;a href=&quot;#net_event_error_1&quot;&gt;&lt;code&gt;'error'&lt;/code&gt;&lt;/a&gt; event will be emitted and any listeners for that event will receive &lt;code&gt;exception&lt;/code&gt; as an argument.</source>
          <target state="translated">경우 &lt;code&gt;exception&lt;/code&gt; 지정되어, &lt;a href=&quot;#net_event_error_1&quot;&gt; &lt;code&gt;'error'&lt;/code&gt; &lt;/a&gt; 이벤트가 방출되며, 해당 이벤트에 대한 리스너가 나타납니다 &lt;code&gt;exception&lt;/code&gt; 인수로.</target>
        </trans-unit>
        <trans-unit id="299ba421d8d3b42b4b24e019249c38c9a00df27b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exclusive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (default), then cluster workers will use the same underlying handle, allowing connection handling duties to be shared. When &lt;code&gt;exclusive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the handle is not shared, and attempted port sharing results in an error. An example which listens on an exclusive port is shown below.</source>
          <target state="translated">경우 &lt;code&gt;exclusive&lt;/code&gt; 입니다 &lt;code&gt;false&lt;/code&gt; (기본), 다음 클러스터 근로자가 업무를 처리하는 연결을 공유 할 수 있도록, 동일한 기본 핸들을 사용합니다. 때 &lt;code&gt;exclusive&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; , 핸들 공유하고, 오류가 포트 공유 결과를 시도되지 않습니다. 전용 포트에서 수신 대기하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8d2e28ac1ebbc4f0807dc298e38f7537f901ffe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fd&lt;/code&gt; is specified, &lt;code&gt;ReadStream&lt;/code&gt; will ignore the &lt;code&gt;path&lt;/code&gt; argument and will use the specified file descriptor. This means that no &lt;code&gt;'open'&lt;/code&gt; event will be emitted. &lt;code&gt;fd&lt;/code&gt; should be blocking; non-blocking &lt;code&gt;fd&lt;/code&gt;s should be passed to &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;fd&lt;/code&gt; 지정되어, &lt;code&gt;ReadStream&lt;/code&gt; 는 무시됩니다 &lt;code&gt;path&lt;/code&gt; 인수를 지정된 파일 기술자를 사용합니다. 이것은 &lt;code&gt;'open'&lt;/code&gt; 이벤트가 발생 하지 않음을 의미합니다 . &lt;code&gt;fd&lt;/code&gt; 는 차단해야합니다. 비 블로킹 &lt;code&gt;fd&lt;/code&gt; 는 &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 으로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c06cb9ca6ab1bd04773000c7b74c88e6ca5c2f4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fd&lt;/code&gt; points to a character device that only supports blocking reads (such as keyboard or sound card), read operations do not finish until data is available. This can prevent the process from exiting and the stream from closing naturally.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; 가 키보드 또는 사운드 카드와 같은 읽기 차단 만 지원하는 문자 장치를 가리키는 경우 데이터를 사용할 수있을 때까지 읽기 작업이 완료되지 않습니다. 이로 인해 프로세스가 종료되고 스트림이 자연스럽게 닫히지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9be4332a701df441e4c063382aa8feb5526f88ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fill&lt;/code&gt; is specified, the allocated &lt;code&gt;Buffer&lt;/code&gt; will be initialized by calling &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(fill)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;fill&lt;/code&gt; 지정, 할당 된 &lt;code&gt;Buffer&lt;/code&gt; 호출에 의해 초기화됩니다 &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(fill)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3be97fb9c90af79625c081ca884c9f352b0b66b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is not specified the point will be returned in &lt;code&gt;'uncompressed'&lt;/code&gt; format.</source>
          <target state="translated">경우 &lt;code&gt;format&lt;/code&gt; 지정되지 않은 점에 반환됩니다 &lt;code&gt;'uncompressed'&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="211c8e7cb128633f9dd54be0102b93101df16008" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;generatorEncoding&lt;/code&gt; is specified, &lt;code&gt;generator&lt;/code&gt; is expected to be a string; otherwise a number, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; is expected.</source>
          <target state="translated">경우 &lt;code&gt;generatorEncoding&lt;/code&gt; 가 지정되어, &lt;code&gt;generator&lt;/code&gt; 문자열 것으로 예상된다; 그렇지 않으면 숫자, &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; 또는 &lt;code&gt;DataView&lt;/code&gt; 가 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="ee915a37cf5a4e8d149f7db663f7692db584ed38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;host&lt;/code&gt; is omitted, the server will accept connections on the &lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;unspecified IPv6 address&lt;/a&gt; (&lt;code&gt;::&lt;/code&gt;) when IPv6 is available, or the &lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;unspecified IPv4 address&lt;/a&gt; (&lt;code&gt;0.0.0.0&lt;/code&gt;) otherwise.</source>
          <target state="translated">경우 &lt;code&gt;host&lt;/code&gt; 생략되고, 서버가에 대한 연결을 받아 &lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;지정되지 않은 IPv6 주소를&lt;/a&gt; ( &lt;code&gt;::&lt;/code&gt; ) IPv6를 사용할 수있는, 또는 경우에 &lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;지정되지 않은 IPv4 주소&lt;/a&gt; ( &lt;code&gt;0.0.0.0&lt;/code&gt; 기타).</target>
        </trans-unit>
        <trans-unit id="719ee6233d43eb6f4cfa33ac467d8a54df639b11" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수는 마치 &lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; 전달 된 것처럼 동작 합니다. 객체 인 경우 다음과 같은 추가 속성을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fc09dc2e7135ef58e69c84b714e24c8a051eadf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수는 마치 &lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; &lt;/a&gt; 건네진 것처럼 동작 합니다. 객체 인 경우 &lt;code&gt;padding&lt;/code&gt; 속성을 전달할 수 있습니다. 그렇지 않으면이 함수는 &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="25511a88834e5e5b625f424cd7943dcdd0e90291" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수는 마치 &lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; &lt;/a&gt; 건네진 것처럼 동작 합니다. 객체 인 경우 &lt;code&gt;padding&lt;/code&gt; 속성을 전달할 수 있습니다. 그렇지 않으면이 함수는 &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="977d93db6bb5497a6e85df4c62341e37909f95ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수는 마치 &lt;code&gt;key&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; &lt;/a&gt; 건네진 것처럼 동작 합니다. 객체 인 경우 다음과 같은 추가 속성을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ed062de2af3cd39b12412e99a474c3e9d61d8c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is specified, &lt;code&gt;data&lt;/code&gt; is ignored.</source>
          <target state="translated">경우 &lt;code&gt;key&lt;/code&gt; 지정되고, &lt;code&gt;data&lt;/code&gt; 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9b27055bc56379296ff853efbb8b5e12f047e7e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is falsy, the error message is set as the values of &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;expected&lt;/code&gt; separated by the provided &lt;code&gt;operator&lt;/code&gt;. If just the two &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;expected&lt;/code&gt; arguments are provided, &lt;code&gt;operator&lt;/code&gt; will default to &lt;code&gt;'!='&lt;/code&gt;. If &lt;code&gt;message&lt;/code&gt; is provided as third argument it will be used as the error message and the other arguments will be stored as properties on the thrown object. If &lt;code&gt;stackStartFn&lt;/code&gt; is provided, all stack frames above that function will be removed from stacktrace (see &lt;a href=&quot;errors#errors_error_capturestacktrace_targetobject_constructoropt&quot;&gt;&lt;code&gt;Error.captureStackTrace&lt;/code&gt;&lt;/a&gt;). If no arguments are given, the default message &lt;code&gt;Failed&lt;/code&gt; will be used.</source>
          <target state="translated">경우 &lt;code&gt;message&lt;/code&gt; falsy되면, 에러 메시지의 값으로 설정되고 &lt;code&gt;actual&lt;/code&gt; 와 &lt;code&gt;expected&lt;/code&gt; 제공된 의해 분리 &lt;code&gt;operator&lt;/code&gt; . 두 개의 &lt;code&gt;actual&lt;/code&gt; 및 &lt;code&gt;expected&lt;/code&gt; 인수 만 제공되는 경우 &lt;code&gt;operator&lt;/code&gt; 는 기본적으로 &lt;code&gt;'!='&lt;/code&gt; 입니다. 경우 &lt;code&gt;message&lt;/code&gt; 세 번째 인수로 제공됩니다 그것은 오류 메시지로 사용되며, 다른 인수는 던져 객체에 속성으로 저장됩니다. 경우 &lt;code&gt;stackStartFn&lt;/code&gt; 가 제공되고, 그 기능 모두 상기 스택 프레임이 스택 트레이스 (참조에서 삭제 &lt;a href=&quot;errors#errors_error_capturestacktrace_targetobject_constructoropt&quot;&gt; &lt;code&gt;Error.captureStackTrace&lt;/code&gt; 을&lt;/a&gt; ). 인수가 없으면 기본 메시지 &lt;code&gt;Failed&lt;/code&gt; 으로 사용될 것.</target>
        </trans-unit>
        <trans-unit id="a18434d4349cf91c980feeaf73d4500129ed008e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multicastInterface&lt;/code&gt; can not be parsed into an IP then an &lt;em&gt;EINVAL&lt;/em&gt;&lt;a href=&quot;errors#errors_class_systemerror&quot;&gt;&lt;code&gt;System Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">경우 &lt;code&gt;multicastInterface&lt;/code&gt; 이 다음 IP로 해석 할 수없는 &lt;em&gt;EINVAL &lt;/em&gt;&lt;a href=&quot;errors#errors_class_systemerror&quot;&gt; &lt;code&gt;System Error&lt;/code&gt; &lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="635a5a9f736b1a79cca9c640330c3981e6630269" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multicastInterface&lt;/code&gt; is not specified, the operating system will attempt to drop membership on all valid interfaces.</source>
          <target state="translated">경우 &lt;code&gt;multicastInterface&lt;/code&gt; 가 지정되지 않은 운영 체제는 유효한 모든 인터페이스에 회원을 드롭을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a04eb70c5e8fdd2359e97890a6ec4806a1c90780" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is equal to &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;PerformanceEntry&lt;/code&gt; will contain the following additional properties:</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 동일 &lt;code&gt;Http2Session&lt;/code&gt; 의 &lt;code&gt;PerformanceEntry&lt;/code&gt; 는 다음과 같은 추가 속성을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="1c0c762bb6f101345ae8084fe010dead16e44a51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is equal to &lt;code&gt;Http2Stream&lt;/code&gt;, the &lt;code&gt;PerformanceEntry&lt;/code&gt; will contain the following additional properties:</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 동일 &lt;code&gt;Http2Stream&lt;/code&gt; 의 &lt;code&gt;PerformanceEntry&lt;/code&gt; 는 다음과 같은 추가 속성을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="74804bac51eaf2ff8552dfa185b4e1083041d783" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is not provided, removes all &lt;code&gt;PerformanceMark&lt;/code&gt; objects from the Performance Timeline. If &lt;code&gt;name&lt;/code&gt; is provided, removes only the named mark.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 제공되지 않으며, 모든 제거 &lt;code&gt;PerformanceMark&lt;/code&gt; 의 성능 타임 라인에서 개체를. &lt;code&gt;name&lt;/code&gt; 이 제공 되면 이름 이 지정된 마크 만 제거합니다.</target>
        </trans-unit>
        <trans-unit id="943eaf90edddd945e52ae31efebbc68f45ee6623" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;object&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;object&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수는 마치 &lt;code&gt;object&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; &lt;/a&gt; 건네진 것처럼 동작 합니다 . 객체 인 경우 다음과 같은 추가 속성을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="868e2ef584eeb787a1b334b2b183edf477e0a4fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;files&lt;/code&gt; array will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">경우 &lt;code&gt;options.withFileTypes&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; 의 &lt;code&gt;files&lt;/code&gt; 배열이 포함됩니다 &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; 의&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="a36bfe70b4e433d3db03a6c9e94c12be8a171a8f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the resolved array will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">경우 &lt;code&gt;options.withFileTypes&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; , 해결 된 배열이 포함됩니다 &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; 의&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="5e10e67408633d0ca404f3c048655c9f70ee664b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the result will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">경우 &lt;code&gt;options.withFileTypes&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; , 결과는 포함 &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; 의&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="e345c64383dd053537ed6dbbf388ab57f2c56df5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the encoding.</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 문자열이며, 다음은 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6ec565c6cdab6a8fe531bbf0a08728c7aaf43c9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the encoding:</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 문자열이며, 다음은 인코딩을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="04daf1ad0c06f14a3e99c3afe2f811ebcde82a21" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the filename.</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 문자열이며, 다음은 파일 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="36b1ebb69a8523459611eb6b3154f41b194ea1b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the input prompt:</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 문자열이며, 그것은 입력 프롬프트를 지정합니다</target>
        </trans-unit>
        <trans-unit id="cedfd7167d9901968bba2de2300e68c96a571770" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is given a string is returned; otherwise, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;outputEncoding&lt;/code&gt; 이 부여 된 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb535f2bf23a7a6abbc7421b6d41c55bac4089c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is given a string will be returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;outputEncoding&lt;/code&gt; 가 주어진 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="747ef625cb7ae2fc9d560c16586c896d5916b26d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;outputEncoding&lt;/code&gt; 가 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6830ad9459746cf99d5ab30887459bdffee5b757" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; resolves to a socket or a pipe, the function will return a system dependent name for that object.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 소켓이나 파이프로 확인 함수는 객체의 시스템에 의존 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="666e07665c3e510f0678f95aa14068f16e22257c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pauseOnConnect&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, then the socket associated with each incoming connection will be paused, and no data will be read from its handle. This allows connections to be passed between processes without any data being read by the original process. To begin reading data from a paused socket, call &lt;a href=&quot;#net_socket_resume&quot;&gt;&lt;code&gt;socket.resume()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pauseOnConnect&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 들어오는 각 연결과 관련된 소켓이 일시 중지되고 핸들에서 데이터를 읽지 않습니다. 이를 통해 원래 프로세스에서 데이터를 읽지 않고도 프로세스간에 연결을 전달할 수 있습니다. 일시 정지 된 소켓에서 데이터 읽기를 시작하려면 &lt;a href=&quot;#net_socket_resume&quot;&gt; &lt;code&gt;socket.resume()&lt;/code&gt; &lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="f034544fed923247a1488a920237881dd61ef658" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; is omitted or is 0, the operating system will assign an arbitrary unused port, which can be retrieved by using &lt;code&gt;server.address().port&lt;/code&gt; after the &lt;a href=&quot;#net_event_listening&quot;&gt;&lt;code&gt;'listening'&lt;/code&gt;&lt;/a&gt; event has been emitted.</source>
          <target state="translated">경우 &lt;code&gt;port&lt;/code&gt; 생략되거나 0되는 운영 체제를 사용하여 검색 될 수있는 임의의 사용되지 않은 포트를 할당한다 &lt;code&gt;server.address().port&lt;/code&gt; 애프터 &lt;a href=&quot;#net_event_listening&quot;&gt; &lt;code&gt;'listening'&lt;/code&gt; &lt;/a&gt; 이벤트가 방출되었습니다.</target>
        </trans-unit>
        <trans-unit id="ad78f5857180aa52600cb852f3aab07932e36ad7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; is specified, it behaves the same as &lt;a href=&quot;#net_server_listen_port_host_backlog_callback&quot;&gt; &lt;code&gt;server.listen([port[, host[, backlog]]][, callback])&lt;/code&gt;&lt;/a&gt;. Otherwise, if &lt;code&gt;path&lt;/code&gt; is specified, it behaves the same as &lt;a href=&quot;#net_server_listen_path_backlog_callback&quot;&gt;&lt;code&gt;server.listen(path[, backlog][, callback])&lt;/code&gt;&lt;/a&gt;. If none of them is specified, an error will be thrown.</source>
          <target state="translated">경우 &lt;code&gt;port&lt;/code&gt; 지정된 경우는 동일하게 동작 &lt;a href=&quot;#net_server_listen_port_host_backlog_callback&quot;&gt; &lt;code&gt;server.listen([port[, host[, backlog]]][, callback])&lt;/code&gt; &lt;/a&gt; . 그렇지 않으면 &lt;code&gt;path&lt;/code&gt; 가 지정되면 &lt;a href=&quot;#net_server_listen_path_backlog_callback&quot;&gt; &lt;code&gt;server.listen(path[, backlog][, callback])&lt;/code&gt; &lt;/a&gt; 과 동일하게 작동합니다 . 이들 중 아무것도 지정되지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="19d2f74a2410539462b318a30f46eab23a8b33a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;primeEncoding&lt;/code&gt; is specified, &lt;code&gt;prime&lt;/code&gt; is expected to be a string; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; is expected.</source>
          <target state="translated">경우 &lt;code&gt;primeEncoding&lt;/code&gt; 가 지정되어, &lt;code&gt;prime&lt;/code&gt; 문자열 것으로 예상된다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; 또는 &lt;code&gt;DataView&lt;/code&gt; 가 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="d34f6ef5137207bf0272e051955badd1a1d8351e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수 는 &lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; 전달 된 것처럼 동작 합니다. 객체 인 경우 &lt;code&gt;padding&lt;/code&gt; 속성을 전달할 수 있습니다. 그렇지 않으면이 함수는 &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="9ca7f1fd906e365d91374bb378b7368f3fa4dc5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수 는 &lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; 전달 된 것처럼 동작 합니다. 객체 인 경우 &lt;code&gt;padding&lt;/code&gt; 속성을 전달할 수 있습니다. 그렇지 않으면이 함수는 &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="b64f75f0f7790d158f233d338846a09cef8678a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 ,이 함수 는 &lt;code&gt;privateKey&lt;/code&gt; 가 &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt; 전달 된 것처럼 동작 합니다. 객체 인 경우 다음과 같은 추가 속성을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ed5ccaf3341448b5d6583d34e4187e903653d1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not valid for the curve specified when the &lt;code&gt;ECDH&lt;/code&gt; object was created, an error is thrown. Upon setting the private key, the associated public point (key) is also generated and set in the &lt;code&gt;ECDH&lt;/code&gt; object.</source>
          <target state="translated">경우 &lt;code&gt;privateKey&lt;/code&gt; 때 지정된 곡선 유효하지 않습니다 &lt;code&gt;ECDH&lt;/code&gt; 의 객체가 생성 된 오류가 발생합니다. 개인 키를 설정하면 관련 공개 지점 (키)도 생성되어 &lt;code&gt;ECDH&lt;/code&gt; 개체에 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e56e2d0b5e192e3b6e7c9010e1154dc149bbd03c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;promisify.custom&lt;/code&gt; is defined but is not a function, &lt;code&gt;promisify()&lt;/code&gt; will throw an error.</source>
          <target state="translated">경우 &lt;code&gt;promisify.custom&lt;/code&gt; 가 정의되어 있지만, 함수가 아닙니다 &lt;code&gt;promisify()&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="76d38c015ea70b86473f47208435ce10352c8cb7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.abort()&lt;/code&gt; is called after the response is received, the following events will be emitted in the following order:</source>
          <target state="translated">경우 &lt;code&gt;req.abort()&lt;/code&gt; 응답을 수신 한 후 호출, 다음 이벤트는 다음과 같은 순서로 방출 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="20fd599f5dc57b9bcf900426d809a999de12a6ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.abort()&lt;/code&gt; is called before the connection succeeds, the following events will be emitted in the following order:</source>
          <target state="translated">경우 &lt;code&gt;req.abort()&lt;/code&gt; 연결이 성공하기 전에 호출, 다음 이벤트는 다음과 같은 순서로 방출 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="64979e154ec2e18ac52da0c320fc458853136631" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sandbox&lt;/code&gt; is omitted (or passed explicitly as &lt;code&gt;undefined&lt;/code&gt;), a new, empty &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; sandbox object will be returned.</source>
          <target state="translated">경우 &lt;code&gt;sandbox&lt;/code&gt; 생략 (또는 명시 적으로 전달되는 &lt;code&gt;undefined&lt;/code&gt; ), 비어있는 새 &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; 샌드 박스 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="edb4b13e975465cae50651e76011131a05d803bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="translated">경우 &lt;code&gt;size&lt;/code&gt; 보다 큰 &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt; 0보다 작은, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; 가&lt;/a&gt; 발생합니다. 제로 길이 &lt;code&gt;Buffer&lt;/code&gt; 가 작성되고 &lt;code&gt;size&lt;/code&gt; 0이다.</target>
        </trans-unit>
        <trans-unit id="4fd544099a496b9d4f88c55eeb5a36cc47420cfc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;socket.setTimeout()&lt;/code&gt; is called here, the timeout will be replaced with &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; when the socket has served a request (if &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; is non-zero).</source>
          <target state="translated">경우 &lt;code&gt;socket.setTimeout()&lt;/code&gt; 여기라고, 타임 아웃은 대체됩니다 &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; (경우 소켓이 요청을 제공 한 경우 &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; 이 제로가 아닌).</target>
        </trans-unit>
        <trans-unit id="1715f20858e56c791aabf4e500684d534a453896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stdin: true&lt;/code&gt; was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this is a writable stream. The data written to this stream will be made available in the worker thread as &lt;a href=&quot;process#process_process_stdin&quot;&gt;&lt;code&gt;process.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;stdin: true&lt;/code&gt; 에 전달 된 &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 생성자,이 쓰기 가능한 스트림입니다. 이 스트림에 기록 된 데이터는 작업자 스레드에서 &lt;a href=&quot;process#process_process_stdin&quot;&gt; &lt;code&gt;process.stdin&lt;/code&gt; &lt;/a&gt; 으로 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="6b5541d5cda0f172c43a1a2f0fe36d970c29c089" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;terminal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; for this instance then the &lt;code&gt;output&lt;/code&gt; stream will get the best compatibility if it defines an &lt;code&gt;output.columns&lt;/code&gt; property and emits a &lt;code&gt;'resize'&lt;/code&gt; event on the &lt;code&gt;output&lt;/code&gt; if or when the columns ever change (&lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; does this automatically when it is a TTY).</source>
          <target state="translated">이 인스턴스에 대해 &lt;code&gt;terminal&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;output&lt;/code&gt; 스트림은 &lt;code&gt;output.columns&lt;/code&gt; 속성을 정의 하고 열이 변경 될 때 또는 &lt;code&gt;output&lt;/code&gt; 이 변경 될 때 출력 에서 &lt;code&gt;'resize'&lt;/code&gt; 이벤트를 생성하는 경우 최상의 호환성을 얻습니다 ( &lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt; 은이를 자동으로 수행함) TTY입니다).</target>
        </trans-unit>
        <trans-unit id="5f3ead5f9fa44a9b06b19da53bb88e5fcf398933" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;textDecoder.fatal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, decoding errors that occur will result in a &lt;code&gt;TypeError&lt;/code&gt; being thrown.</source>
          <target state="translated">경우 &lt;code&gt;textDecoder.fatal&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; 하는 발생합니다 발생하는 오류 디코딩 &lt;code&gt;TypeError&lt;/code&gt; 발생되고있다.</target>
        </trans-unit>
        <trans-unit id="93d508820720453885b3eea699f8ab0480a703ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is 0, then the existing idle timeout is disabled.</source>
          <target state="translated">경우 &lt;code&gt;timeout&lt;/code&gt; 0, 다음, 기존의 유휴 시간 제한을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8ba74037670dfad528dc28eb4a0229cdb290bcbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is greater than &lt;code&gt;0&lt;/code&gt;, the parent will send the signal identified by the &lt;code&gt;killSignal&lt;/code&gt; property (the default is &lt;code&gt;'SIGTERM'&lt;/code&gt;) if the child runs longer than &lt;code&gt;timeout&lt;/code&gt; milliseconds.</source>
          <target state="translated">경우 &lt;code&gt;timeout&lt;/code&gt; 보다 큰 경우 &lt;code&gt;0&lt;/code&gt; , 부모에 의해 확인 된 신호를 보내드립니다 &lt;code&gt;killSignal&lt;/code&gt; 의 속성을 (기본값은 &lt;code&gt;'SIGTERM'&lt;/code&gt; 자식 실행 긴 경우보다) &lt;code&gt;timeout&lt;/code&gt; (밀리 초).</target>
        </trans-unit>
        <trans-unit id="a0d2a11ef3665d165830daf663028da145311e1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;totalLength&lt;/code&gt; is not provided, it is calculated from the &lt;code&gt;Buffer&lt;/code&gt; instances in &lt;code&gt;list&lt;/code&gt;. This however causes an additional loop to be executed in order to calculate the &lt;code&gt;totalLength&lt;/code&gt;, so it is faster to provide the length explicitly if it is already known.</source>
          <target state="translated">경우 &lt;code&gt;totalLength&lt;/code&gt; 가 제공되지 않습니다, 그것은 계산됩니다 &lt;code&gt;Buffer&lt;/code&gt; 의 인스턴스 &lt;code&gt;list&lt;/code&gt; . 그러나 &lt;code&gt;totalLength&lt;/code&gt; 를 계산하기 위해 추가 루프가 실행 되므로 길이를 이미 알고있는 경우 명시 적으로 길이를 제공하는 것이 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="778776dc6e51540045fed75d9d555de635d1f580" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;totalLength&lt;/code&gt; is provided, it is coerced to an unsigned integer. If the combined length of the &lt;code&gt;Buffer&lt;/code&gt;s in &lt;code&gt;list&lt;/code&gt; exceeds &lt;code&gt;totalLength&lt;/code&gt;, the result is truncated to &lt;code&gt;totalLength&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;totalLength&lt;/code&gt; 가 제공되고, 그것은 부호없는 정수로 강제된다. &lt;code&gt;list&lt;/code&gt; 에있는 &lt;code&gt;Buffer&lt;/code&gt; 의 결합 된 길이 가 &lt;code&gt;totalLength&lt;/code&gt; 를 초과 하면 결과가 &lt;code&gt;totalLength&lt;/code&gt; 로 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="001a12b45df8df8df8cbc6ad26dda565a2635808" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; was called and has not yet finished. It will stay &lt;code&gt;true&lt;/code&gt; until the socket becomes connected, then it is set to &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;'connect'&lt;/code&gt; event is emitted. Note that the &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; callback is a listener for the &lt;code&gt;'connect'&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt; 가 호출되었고 아직 완료되지 않았습니다. 그것은 남아있을 것입니다 &lt;code&gt;true&lt;/code&gt; 소켓이 연결 될 때까지 다음로 설정되어, &lt;code&gt;false&lt;/code&gt; 과 &lt;code&gt;'connect'&lt;/code&gt; 이벤트가 방출된다. 주의 &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt; 콜백을위한 수신기 인 &lt;code&gt;'connect'&lt;/code&gt; 이벤트.</target>
        </trans-unit>
        <trans-unit id="35098f3741d27d0e305679a7801e90403a66d2f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated on fatal errors, such as out of memory errors or failed C++ assertions.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 메모리 부족 오류 또는 실패한 C ++ 어설 션과 같은 치명적인 오류에 대해 진단 보고서가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fe8c3d58cec5659de13c53b368f821d4eee957d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated on uncaught exception.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 포착되지 않은 예외에 대해 진단 보고서가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8774522e85a70aaf6c740cab69e563126d689c35" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated when the process receives the signal specified by &lt;code&gt;process.report.signal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 프로세스가 &lt;code&gt;process.report.signal&lt;/code&gt; 에 의해 지정된 신호를 수신 할 때 진단 보고서가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="75ad7440a14c8c38b5aa0199a878d2e5c20d33da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;urlObject.protocol&lt;/code&gt; is a string, it is appended as-is to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;urlObject.protocol&lt;/code&gt; 은 문자열입니다,을 그대로 추가됩니다 &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ff8522e3efe84a8d312b1f86c69044f0485bb19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;urlObject&lt;/code&gt; is not an object or a string, &lt;code&gt;url.format()&lt;/code&gt; will throw a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;urlObject&lt;/code&gt; 가 객체 또는 문자열이 아닌 경우 url.format &lt;code&gt;url.format()&lt;/code&gt; 은 &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="02196f127d73d1d47612cd8839cddc27ad068b47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; contains &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instances, those will be accessible from either thread. They cannot be listed in &lt;code&gt;transferList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 에 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 가 포함되어 있으면 어느 스레드에서나 액세스 할 수 있습니다. &lt;code&gt;transferList&lt;/code&gt; 에 나열 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ff85e949179dc05f61e3f86e27be58bb70b993e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; contains invalid characters, it is truncated; if no valid fill data remains, an exception is thrown:</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 에 유효하지 않은 문자가 포함되어 있으면 잘립니다. 유효한 충전 데이터가 남아 있지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f3b3bb2aa4477309d57f3aa2abedd9b65e4b68a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; equals &lt;code&gt;'0'&lt;/code&gt;, certificate validation is disabled for TLS connections. This makes TLS, and HTTPS by extension, insecure. The use of this environment variable is strongly discouraged.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 등호 &lt;code&gt;'0'&lt;/code&gt; , 인증서 유효성 검사는 TLS 연결에 사용할 수 없습니다. 이로 인해 TLS 및 확장명으로 HTTPS가 안전하지 않게됩니다. 이 환경 변수를 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="477a3b56d3910a570c18028c1ee0026497e1f0ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an empty string or empty &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;byteOffset&lt;/code&gt; is less than &lt;code&gt;buf.length&lt;/code&gt;, &lt;code&gt;byteOffset&lt;/code&gt; will be returned. If &lt;code&gt;value&lt;/code&gt; is empty and &lt;code&gt;byteOffset&lt;/code&gt; is at least &lt;code&gt;buf.length&lt;/code&gt;, &lt;code&gt;buf.length&lt;/code&gt; will be returned.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 빈 문자열 또는 빈 &lt;code&gt;Buffer&lt;/code&gt; 및 &lt;code&gt;byteOffset&lt;/code&gt; 이 적은보다 &lt;code&gt;buf.length&lt;/code&gt; , &lt;code&gt;byteOffset&lt;/code&gt; 가 반환됩니다. 경우 &lt;code&gt;value&lt;/code&gt; 비어 있고 &lt;code&gt;byteOffset&lt;/code&gt; 는 적어도이다 &lt;code&gt;buf.length&lt;/code&gt; , &lt;code&gt;buf.length&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d902facaf6d43dbe41bfb2356769d8f1ffd7b055" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an empty string or empty &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;byteOffset&lt;/code&gt; will be returned.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 빈 문자열 또는 비어있는 &lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;byteOffset&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="610f15b12beaf1c5a62a2377f055103b964040a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not a string, number, or &lt;code&gt;Buffer&lt;/code&gt;, this method will throw a &lt;code&gt;TypeError&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is a number, it will be coerced to a valid byte value, an integer between 0 and 255.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 문자열, 숫자가 아닌, 또는 &lt;code&gt;Buffer&lt;/code&gt; ,이 방법은 발생합니다 &lt;code&gt;TypeError&lt;/code&gt; . 경우 &lt;code&gt;value&lt;/code&gt; 숫자이고, 이것은 0과 255 사이의 유효한 바이트 값의 정수를 강제한다.</target>
        </trans-unit>
        <trans-unit id="c102461aece29b4f7fef8e66b2c5fbb4127e36c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not truthy, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is &lt;code&gt;undefined&lt;/code&gt;, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;. If no arguments are passed in at all &lt;code&gt;message&lt;/code&gt; will be set to the string: &lt;code&gt;'No value argument passed to `assert.ok()`'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 이 진실이 아닌 경우 , &lt;code&gt;message&lt;/code&gt; 속성이 &lt;code&gt;message&lt;/code&gt; 매개 변수 의 값과 동일하게 설정 되어 &lt;code&gt;AssertionError&lt;/code&gt; 가 발생 합니다. 경우 &lt;code&gt;message&lt;/code&gt; 매개 변수가되고 &lt;code&gt;undefined&lt;/code&gt; , 기본 오류 메시지가 할당됩니다. 경우 &lt;code&gt;message&lt;/code&gt; 매개 변수가의 인스턴스 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 다음은 대신의 슬로우됩니다 &lt;code&gt;AssertionError&lt;/code&gt; 를 . 인수가 전달되지 않으면 모든 &lt;code&gt;message&lt;/code&gt; 가 문자열로 설정됩니다 : &lt;code&gt;'No value argument passed to `assert.ok()`'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdd0402e2118e34facbcfab001befd8ad7443b87" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="6aef87783af7020d0cd410d7d651097e2e3c679a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;warning&lt;/code&gt; is passed as an &lt;code&gt;Error&lt;/code&gt; object, it will be passed through to the &lt;code&gt;'warning'&lt;/code&gt; event handler unmodified (and the optional &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;ctor&lt;/code&gt; arguments will be ignored):</source>
          <target state="translated">경우 &lt;code&gt;warning&lt;/code&gt; 로 전달되는 &lt;code&gt;Error&lt;/code&gt; 객체, 그것은을 통해 전달됩니다 &lt;code&gt;'warning'&lt;/code&gt; 수정되지 않은 이벤트 핸들러 (및 옵션 &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;code&lt;/code&gt; 와 &lt;code&gt;ctor&lt;/code&gt; 인수는 무시됩니다)</target>
        </trans-unit>
        <trans-unit id="e4b82326320a632b6ceaad5f485c055d2c7e0174" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;warning&lt;/code&gt; is passed as an &lt;code&gt;Error&lt;/code&gt; object, the &lt;code&gt;options&lt;/code&gt; argument is ignored.</source>
          <target state="translated">경우 &lt;code&gt;warning&lt;/code&gt; 로 전달되는 &lt;code&gt;Error&lt;/code&gt; 객체의 &lt;code&gt;options&lt;/code&gt; 인수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="433d836e378ef348cc420afb2d03c3f46aae06f9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is an Object, then</source>
          <target state="translated">경우 &lt;em&gt;수출은&lt;/em&gt; 다음 개체입니다</target>
        </trans-unit>
        <trans-unit id="74d40a34d800073ac93a2656a712beef1e220d10" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;수출&lt;/em&gt; 하지 &lt;strong&gt;널 (null)&lt;/strong&gt; 또는 &lt;strong&gt;정의되지 않은&lt;/strong&gt; 다음,</target>
        </trans-unit>
        <trans-unit id="626b750f96645f82bd5cc543ca8f99fdf9bde94e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isMain&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt; or &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.js&quot;&lt;/em&gt;, &lt;em&gt;&quot;.json&quot;&lt;/em&gt; or &lt;em&gt;&quot;.node&quot;&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;isMain는&lt;/em&gt; 것입니다 &lt;strong&gt;사실&lt;/strong&gt; 이나 &lt;em&gt;URL&lt;/em&gt; 의 끝에 &lt;em&gt;&quot;의 .js&quot;&lt;/em&gt; , &lt;em&gt;&quot;.json&quot;&lt;/em&gt; 또는 &lt;em&gt;&quot;.node&quot;&lt;/em&gt; 다음,</target>
        </trans-unit>
        <trans-unit id="538d9233728c8d6a4c6514633152fe767963d7a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isMain&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt; or &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.js&quot;&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;isMain는&lt;/em&gt; 것입니다 &lt;strong&gt;사실&lt;/strong&gt; 이나 &lt;em&gt;URL&lt;/em&gt; 의 끝에 &lt;em&gt;&quot;의 .js&quot;&lt;/em&gt; 다음,</target>
        </trans-unit>
        <trans-unit id="c57aac53f3f9fd0d62104d495804a0ae393b46fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageName&lt;/em&gt; starts with &lt;em&gt;&quot;.&quot;&lt;/em&gt; or contains &lt;em&gt;&quot;\&quot;&lt;/em&gt; or &lt;em&gt;&quot;%&quot;&lt;/em&gt;, then</source>
          <target state="translated">&lt;em&gt;packageName&lt;/em&gt; 이 &lt;em&gt;&quot;.&quot;로&lt;/em&gt; 시작하는 경우 또는 &lt;em&gt;&quot;\&quot;&lt;/em&gt; 또는 &lt;em&gt;&quot;%&quot;&lt;/em&gt; 가 포함 된 경우</target>
        </trans-unit>
        <trans-unit id="d35e5f92073bf52038791008480ed2f5c4697c50" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packagePath&lt;/em&gt; is a key of &lt;em&gt;exports&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;packagePath를는&lt;/em&gt; 의 핵심 인 &lt;em&gt;수출&lt;/em&gt; 한 후,</target>
        </trans-unit>
        <trans-unit id="f2f22aee4315b9d9b1a126b11702495290d5d799" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packagePath&lt;/em&gt; starts with &lt;em&gt;directory&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;packagePath를가&lt;/em&gt; 시작 &lt;em&gt;디렉토리&lt;/em&gt; 후,</target>
        </trans-unit>
        <trans-unit id="5b4105fb98e3182d04e974f14eeeb21f882c8130" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; does not contain a &lt;em&gt;&quot;/&quot;&lt;/em&gt; separator, then</source>
          <target state="translated">&lt;em&gt;packageSpecifier&lt;/em&gt; 에 &lt;em&gt;&quot;/&quot;&lt;/em&gt; 구분 기호 가없는 경우</target>
        </trans-unit>
        <trans-unit id="7f7a0cffb3b9cc7675b70e8f76d1f2a739d49f45" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; does not start with &lt;em&gt;&quot;@&quot;&lt;/em&gt;, then</source>
          <target state="translated">만약 &lt;em&gt;packageSpecifier이&lt;/em&gt; 시작되지 않습니다 &lt;em&gt;&quot;@&quot;&lt;/em&gt; 다음</target>
        </trans-unit>
        <trans-unit id="2f16f2a59cbdf0b5925f0cdb310548d264354720" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; is an empty string, then</source>
          <target state="translated">경우 &lt;em&gt;packageSpecifier은&lt;/em&gt; 다음 빈 문자열입니다</target>
        </trans-unit>
        <trans-unit id="74a4411c0f557c404fd9cac2a8f1acb42ad2bc91" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; contains any &lt;em&gt;&quot;.&quot;&lt;/em&gt; or &lt;em&gt;&quot;..&quot;&lt;/em&gt; segments or percent encoded strings for &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; then,</source>
          <target state="translated">&lt;em&gt;packageSubpath&lt;/em&gt; 에 &lt;em&gt;&quot;.&quot;이&lt;/em&gt; 포함 된 경우 또는 &lt;em&gt;&quot;..&quot;&lt;/em&gt; 세그먼트 또는 퍼센트에 대해 문자열을 인코딩 &lt;em&gt;&quot;/&quot;&lt;/em&gt; 또는 &lt;em&gt;&quot;\&quot;&lt;/em&gt; 다음</target>
        </trans-unit>
        <trans-unit id="30820a14bd44bf6838e5df3dc3dd4270f2094932" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; is &lt;em&gt;undefined&lt;/em&gt; and &lt;em&gt;packageName&lt;/em&gt; is a Node.js builtin module, then</source>
          <target state="translated">경우 &lt;em&gt;packageSubpath가&lt;/em&gt; 된다 &lt;em&gt;미정&lt;/em&gt; 과 &lt;em&gt;패키지 명은 반드시&lt;/em&gt; 그리고, Node.js를 내장 모듈</target>
        </trans-unit>
        <trans-unit id="a2d95c17d62993ba9ee7e59cc78fb009d19362ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; is _undefined__, then</source>
          <target state="translated">경우 &lt;em&gt;packageSubpath는&lt;/em&gt; 다음 _undefined__입니다</target>
        </trans-unit>
        <trans-unit id="cac153ab7ad7d83ff26cce43a9687bb252bdf201" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.main&lt;/em&gt; is a String, then</source>
          <target state="translated">경우 &lt;em&gt;pjson.main은&lt;/em&gt; 다음 문자열입니다</target>
        </trans-unit>
        <trans-unit id="29f00e1f0b5e9ea20d8965c2996f9b39a1a4115b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.type&lt;/em&gt; is equal to &lt;em&gt;&quot;module&quot;&lt;/em&gt;, then</source>
          <target state="translated">만약 &lt;em&gt;pjson.type은&lt;/em&gt; 동일하다 &lt;em&gt;&quot;모듈&quot;&lt;/em&gt; 이어서,</target>
        </trans-unit>
        <trans-unit id="cf811ae7a597b7fb485bf93caabe66eeaa852963" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;pjson는&lt;/em&gt; 이다 &lt;strong&gt;널&lt;/strong&gt; 후,</target>
        </trans-unit>
        <trans-unit id="4f80deadcdbf120ed3bc57ab599f9a6b579c8301" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; and &lt;em&gt;pjson&lt;/em&gt; has an &lt;em&gt;&quot;exports&quot;&lt;/em&gt; key, then</source>
          <target state="translated">경우 &lt;em&gt;pjson가&lt;/em&gt; 아닌 &lt;strong&gt;널 (null)&lt;/strong&gt; 과 &lt;em&gt;pjson는&lt;/em&gt; 가 &lt;em&gt;&quot;수출&quot;&lt;/em&gt; 다음, 키를</target>
        </trans-unit>
        <trans-unit id="924f5e7abf32f37553aa5a80dfd4cdbfc346ccc3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;pjson가&lt;/em&gt; 아닌 &lt;strong&gt;널 (null)&lt;/strong&gt; 한 후,</target>
        </trans-unit>
        <trans-unit id="10a7fb27e5c43714c28e08125b5133fc11f467de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson?.type&lt;/em&gt; exists and is &lt;em&gt;&quot;module&quot;&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;pjson? .type이&lt;/em&gt; 존재하고있다 &lt;em&gt;&quot;모듈&quot;&lt;/em&gt; 다음,</target>
        </trans-unit>
        <trans-unit id="a5474accabca7888e2d572af9dd01b3256534e50" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; is contained in &lt;em&gt;resolvedTarget&lt;/em&gt;, then</source>
          <target state="translated">경우 &lt;em&gt;해결&lt;/em&gt; 에 포함되어 &lt;em&gt;resolvedTarget&lt;/em&gt; 다음,</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
