<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="ed1bed94d31959de56b81d8c37631b93ab541397" translate="yes" xml:space="preserve">
          <source>CPU profiler</source>
          <target state="translated">CPU profiler</target>
        </trans-unit>
        <trans-unit id="509d4ff33e2f8df0e0aa8cc2808d8e1f12464a6b" translate="yes" xml:space="preserve">
          <source>Cached data cannot be created for modules which have already been evaluated.</source>
          <target state="translated">Cached data cannot be created for modules which have already been evaluated.</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="678e05070eba083ba5fa14b65273946fcb07e6f5" translate="yes" xml:space="preserve">
          <source>Calculates and returns the signature for &lt;code&gt;data&lt;/code&gt; using the given private key and algorithm. If &lt;code&gt;algorithm&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, then the algorithm is dependent upon the key type (especially Ed25519 and Ed448).</source>
          <target state="translated">주어진 개인 키와 알고리즘을 사용하여 &lt;code&gt;data&lt;/code&gt; 의 서명을 계산하고 반환합니다 . &lt;code&gt;algorithm&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 인 경우 알고리즘 은 키 유형 (특히 Ed25519 및 Ed448)에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="95fd630d6511caa5d9699d2bac443dbcb5fa3f73" translate="yes" xml:space="preserve">
          <source>Calculates the HMAC digest of all of the data passed using &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt;&lt;code&gt;hmac.update()&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned;</source>
          <target state="translated">&lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt; &lt;code&gt;hmac.update()&lt;/code&gt; &lt;/a&gt; 사용하여 전달 된 모든 데이터의 HMAC 다이제스트를 계산합니다 . 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5a14de9b1932649b90d15be6146d2618d7a14172" translate="yes" xml:space="preserve">
          <source>Calculates the digest of all of the data passed to be hashed (using the &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt;&lt;code&gt;hash.update()&lt;/code&gt;&lt;/a&gt; method). If &lt;code&gt;encoding&lt;/code&gt; is provided a string will be returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">해시되도록 전달 된 모든 데이터의 다이제스트를 계산합니다 ( &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt; &lt;code&gt;hash.update()&lt;/code&gt; &lt;/a&gt; 메소드 사용). 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e9457a235861724a763c06f0e5d6db4023735abd" translate="yes" xml:space="preserve">
          <source>Calculates the signature on all the data passed through using either &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt;&lt;code&gt;sign.update()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;sign.write()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt; &lt;code&gt;sign.update()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;sign.write()&lt;/code&gt; &lt;/a&gt; 를 사용하여 전달 된 모든 데이터의 서명을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="ceb0224f01d6ba9708d6616ddb7f724d30e14596" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#http2_http2stream_pushstream_headers_options_callback&quot;&gt;&lt;code&gt;http2stream.pushStream()&lt;/code&gt;&lt;/a&gt; with the given headers, and wrap the given &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; on a newly created &lt;code&gt;Http2ServerResponse&lt;/code&gt; as the callback parameter if successful. When &lt;code&gt;Http2ServerRequest&lt;/code&gt; is closed, the callback is called with an error &lt;code&gt;ERR_HTTP2_INVALID_STREAM&lt;/code&gt;.</source>
          <target state="translated">주어진 헤더로 &lt;a href=&quot;#http2_http2stream_pushstream_headers_options_callback&quot;&gt; &lt;code&gt;http2stream.pushStream()&lt;/code&gt; &lt;/a&gt; 을 호출 하고, 성공한 경우 새로 생성 된 &lt;code&gt;Http2ServerResponse&lt;/code&gt; 에서 지정된 &lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt; 을 콜백 매개 변수로 랩핑하십시오 . 때 &lt;code&gt;Http2ServerRequest&lt;/code&gt; 가 폐쇄되고, 콜백은 오류로 호출 &lt;code&gt;ERR_HTTP2_INVALID_STREAM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a6320cde93d6145af956e406100afd55854873b" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;napi_get_version()&lt;/code&gt; to determine if the API is available.</source>
          <target state="translated">API를 사용할 수 있는지 확인하려면 &lt;code&gt;napi_get_version()&lt;/code&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="94fd4ff755cb3c52aa6952f6c836cb40ee0731d8" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;node::AddEnvironmentCleanupHook()&lt;/code&gt;, passing it the above-created instance and a pointer to &lt;code&gt;DeleteInstance()&lt;/code&gt;. This will ensure the instance is deleted when the environment is torn down.</source>
          <target state="translated">Call &lt;code&gt;node::AddEnvironmentCleanupHook()&lt;/code&gt; , passing it the above-created instance and a pointer to &lt;code&gt;DeleteInstance()&lt;/code&gt; . This will ensure the instance is deleted when the environment is torn down.</target>
        </trans-unit>
        <trans-unit id="ca4a1fc3fd98d71afaa54ca82c4213922df7f62c" translate="yes" xml:space="preserve">
          <source>Call Results</source>
          <target state="translated">전화 결과</target>
        </trans-unit>
        <trans-unit id="8054d82d9e8e1519fa719c6aeec455ce54f1c2d3" translate="yes" xml:space="preserve">
          <source>Call all &lt;code&gt;destroy&lt;/code&gt; hooks. This should only ever be called once. An error will be thrown if it is called more than once. This &lt;strong&gt;must&lt;/strong&gt; be manually called. If the resource is left to be collected by the GC then the &lt;code&gt;destroy&lt;/code&gt; hooks will never be called.</source>
          <target state="translated">모든 &lt;code&gt;destroy&lt;/code&gt; 고리를 호출하십시오 . 한 번만 호출해야합니다. 두 번 이상 호출되면 오류가 발생합니다. 이것은 &lt;strong&gt;합니다&lt;/strong&gt; 수동으로 호출 할 수. 리소스가 GC에 의해 수집 된 상태로 유지되면 &lt;code&gt;destroy&lt;/code&gt; 후크가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b92f3809e9c65b9710749cc91f8c848297c7bf61" translate="yes" xml:space="preserve">
          <source>Call results</source>
          <target state="translated">Call results</target>
        </trans-unit>
        <trans-unit id="d57087226be0373a2bba4cdeb9c854cbb6cbe9b4" translate="yes" xml:space="preserve">
          <source>Call the provided function with the provided arguments in the execution context of the async resource. This will establish the context, trigger the AsyncHooks before callbacks, call the function, trigger the AsyncHooks after callbacks, and then restore the original execution context.</source>
          <target state="translated">비동기 자원의 실행 컨텍스트에서 제공된 인수와 함께 제공된 함수를 호출하십시오. 그러면 컨텍스트가 설정되고 콜백 전에 AsyncHooks를 트리거하고, 함수를 호출하고, 콜백 후 AsyncHooks를 트리거 한 다음 원래 실행 컨텍스트를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="e8d40d01d1721050b675b17b3c12103b068c0079" translate="yes" xml:space="preserve">
          <source>Callback example</source>
          <target state="translated">Callback example</target>
        </trans-unit>
        <trans-unit id="eee0872ef4ee5ce397c4c9b72978c9263346a48c" translate="yes" xml:space="preserve">
          <source>Callback functions must satisfy the following signature:</source>
          <target state="translated">콜백 함수는 다음 서명을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a9afb6f68faba23dc84836881b9eb5b8a1b083a" translate="yes" xml:space="preserve">
          <source>Callback should take two arguments &lt;code&gt;err&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">콜백에는 두 개의 인수 &lt;code&gt;err&lt;/code&gt; 및 &lt;code&gt;count&lt;/code&gt; 가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="6fa4ffba520db1a7b5c34a1e5774758c79670c71" translate="yes" xml:space="preserve">
          <source>Callback will be invoked on streams which have already finished before the call to &lt;code&gt;finished(stream, cb)&lt;/code&gt;.</source>
          <target state="translated">Callback will be invoked on streams which have already finished before the call to &lt;code&gt;finished(stream, cb)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="085c86076e0bb62f3d96e8ab9ed524f7896b4f57" translate="yes" xml:space="preserve">
          <source>Callbacks are run in last-in first-out order.</source>
          <target state="translated">콜백은 선입 선출 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="97f0ddda0975556fed24b899d76bd09f3d4af829" translate="yes" xml:space="preserve">
          <source>Called after the resource corresponding to &lt;code&gt;asyncId&lt;/code&gt; is destroyed. It is also called asynchronously from the embedder API &lt;code&gt;emitDestroy()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asyncId&lt;/code&gt; 에 해당하는 리소스 가 삭제 된 후 호출 됩니다. &lt;code&gt;emitDestroy()&lt;/code&gt; 베더 API emitDestroy () 에서 비동기식으로 호출 되기도 합니다.</target>
        </trans-unit>
        <trans-unit id="f73bc7c18321ec878ed5be8f3a395fdb861c3a42" translate="yes" xml:space="preserve">
          <source>Called immediately after the callback specified in &lt;code&gt;before&lt;/code&gt; is completed.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 지정된 콜백 이 완료된 직후에 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="67c2b8bea298c5f79d398c93c499cd6cc2cc63bc" translate="yes" xml:space="preserve">
          <source>Called when &lt;code&gt;socket&lt;/code&gt; is attached to &lt;code&gt;request&lt;/code&gt; after being persisted because of the keep-alive options. Default behavior is to:</source>
          <target state="translated">연결 유지 옵션으로 인해 &lt;code&gt;socket&lt;/code&gt; 이 지속 된 후 &lt;code&gt;request&lt;/code&gt; 연결 되면 호출됩니다 . 기본 동작은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b43ca4223265ca6ece79115569f4b471b8e6e5b1" translate="yes" xml:space="preserve">
          <source>Called when &lt;code&gt;socket&lt;/code&gt; is detached from a request and could be persisted by the &lt;code&gt;Agent&lt;/code&gt;. Default behavior is to:</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; 이 요청에서 분리되어 &lt;code&gt;Agent&lt;/code&gt; 가 지속 할 수있을 때 호출됩니다 . 기본 동작은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6e0fac62afd6b0e58d7b3a3ab50ee2fe316fbd3" translate="yes" xml:space="preserve">
          <source>Called when a class is constructed that has the &lt;em&gt;possibility&lt;/em&gt; to emit an asynchronous event. This &lt;em&gt;does not&lt;/em&gt; mean the instance must call &lt;code&gt;before&lt;/code&gt;/&lt;code&gt;after&lt;/code&gt; before &lt;code&gt;destroy&lt;/code&gt; is called, only that the possibility exists.</source>
          <target state="translated">클래스가 가지고있는 구조 될 때 호출 &lt;em&gt;가능성&lt;/em&gt; 비동기 이벤트를 방출합니다. 이는 인스턴스가 &lt;code&gt;destroy&lt;/code&gt; 가 호출 &lt;code&gt;before&lt;/code&gt; / &lt;code&gt;after&lt;/code&gt; 전에 호출해야한다는 의미 &lt;em&gt;는 아니며&lt;/em&gt; 가능성 만 존재한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3d63fa3265203b858c580696f09f2e560a220bbb" translate="yes" xml:space="preserve">
          <source>Called when the &lt;code&gt;resolve&lt;/code&gt; function passed to the &lt;code&gt;Promise&lt;/code&gt; constructor is invoked (either directly or through other means of resolving a promise).</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 생성자에 전달 된 &lt;code&gt;resolve&lt;/code&gt; 함수가 호출 될 때 (직접 또는 약속을 해결하는 다른 방법을 통해) 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0006d6166a25633ad05674dbf8d3d512c6337747" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; can be significantly slower than the alternative &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; but ensures that the newly created &lt;code&gt;Buffer&lt;/code&gt; instance contents will &lt;em&gt;never contain sensitive data&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; 호출 은 대체 &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; 보다 상당히 느릴 수 있지만 새로 작성된 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 컨텐츠에 &lt;em&gt;민감한 데이터가 포함되지&lt;/em&gt; 않도록합니다 .</target>
        </trans-unit>
        <trans-unit id="0bbceabafc3e0854955c3b1892b91371ca84a3c4" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; can be measurably slower than the alternative &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; but ensures that the newly created &lt;code&gt;Buffer&lt;/code&gt; instance contents will never contain sensitive data from previous allocations, including data that might not have been allocated for &lt;code&gt;Buffer&lt;/code&gt;s.</source>
          <target state="translated">Calling &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; can be measurably slower than the alternative &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; but ensures that the newly created &lt;code&gt;Buffer&lt;/code&gt; instance contents will never contain sensitive data from previous allocations, including data that might not have been allocated for &lt;code&gt;Buffer&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="15ca5213e7d7180fac30f6abbb6f91cb46f2b44a" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read([size])&lt;/code&gt;&lt;/a&gt; after the &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event has been emitted will return &lt;code&gt;null&lt;/code&gt;. No runtime error will be raised.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; 이벤트가 발생한 후 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read([size])&lt;/code&gt; &lt;/a&gt; 호출 하면 &lt;code&gt;null&lt;/code&gt; 이 반환 됩니다. 런타임 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a327da6454f2c24bf02624120f5cf6246f42a8a" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#zlib_zlib_flush_kind_callback&quot;&gt;&lt;code&gt;.flush()&lt;/code&gt;&lt;/a&gt; on a compression stream will make &lt;code&gt;zlib&lt;/code&gt; return as much output as currently possible. This may come at the cost of degraded compression quality, but can be useful when data needs to be available as soon as possible.</source>
          <target state="translated">압축 스트림에서 &lt;a href=&quot;#zlib_zlib_flush_kind_callback&quot;&gt; &lt;code&gt;.flush()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 &lt;code&gt;zlib&lt;/code&gt; 가 현재 가능한 한 많은 출력을 반환합니다. 압축 품질이 저하 될 수 있지만 가능한 빨리 데이터를 사용할 수 있어야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5141b4d2b9075af331be0843a1f8f08d2013a321" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Readable.from(string)&lt;/code&gt; or &lt;code&gt;Readable.from(buffer)&lt;/code&gt; will not have the strings or buffers be iterated to match the other streams semantics for performance reasons.</source>
          <target state="translated">Calling &lt;code&gt;Readable.from(string)&lt;/code&gt; or &lt;code&gt;Readable.from(buffer)&lt;/code&gt; will not have the strings or buffers be iterated to match the other streams semantics for performance reasons.</target>
        </trans-unit>
        <trans-unit id="3f17ed04b22d13c77454c0d44a9b87f476ae136c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;abort&lt;/code&gt; on the &lt;code&gt;AbortController&lt;/code&gt; corresponding to the passed &lt;code&gt;AbortSignal&lt;/code&gt; will behave the same way as calling &lt;code&gt;.destroy(new AbortError())&lt;/code&gt; on the readable created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6565d8438f7ac6f1f154d4ff8c9270eeae6b6e1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;abort&lt;/code&gt; on the &lt;code&gt;AbortController&lt;/code&gt; corresponding to the passed &lt;code&gt;AbortSignal&lt;/code&gt; will behave the same way as calling &lt;code&gt;.destroy(new AbortError())&lt;/code&gt; on the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357cff43f8c274e1889c32d2b4ee4c54cad5a3b6" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;abort&lt;/code&gt; on the &lt;code&gt;AbortController&lt;/code&gt; corresponding to the passed &lt;code&gt;AbortSignal&lt;/code&gt; will behave the same way as calling &lt;code&gt;.destroy(new AbortError())&lt;/code&gt; on the writeable stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e90c94816b0161805991665f9858088f6d8052" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;assert.fail()&lt;/code&gt; with more than one argument is deprecated and emits a warning.</source>
          <target state="translated">둘 이상의 인수로 &lt;code&gt;assert.fail()&lt;/code&gt; 을 호출 하면 더 이상 사용되지 않으며 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fab10f04d3c6a9f7d0706d38e8587f02801a351e" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;asyncLocalStorage.disable()&lt;/code&gt; is required before the &lt;code&gt;asyncLocalStorage&lt;/code&gt; can be garbage collected. This does not apply to stores provided by the &lt;code&gt;asyncLocalStorage&lt;/code&gt;, as those objects are garbage collected along with the corresponding async resources.</source>
          <target state="translated">Calling &lt;code&gt;asyncLocalStorage.disable()&lt;/code&gt; is required before the &lt;code&gt;asyncLocalStorage&lt;/code&gt; can be garbage collected. This does not apply to stores provided by the &lt;code&gt;asyncLocalStorage&lt;/code&gt; , as those objects are garbage collected along with the corresponding async resources.</target>
        </trans-unit>
        <trans-unit id="94280ccc0fd0253b42a97393c68cd22d5c301fd5" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;asyncLocalStorage.enterWith(store)&lt;/code&gt; will transition into the context for the remainder of the current synchronous execution and will persist through any following asynchronous calls.</source>
          <target state="translated">Calling &lt;code&gt;asyncLocalStorage.enterWith(store)&lt;/code&gt; will transition into the context for the remainder of the current synchronous execution and will persist through any following asynchronous calls.</target>
        </trans-unit>
        <trans-unit id="20eb687e2b4b0f97d82ec63e8f711bda6bfced13" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;callback(err)&lt;/code&gt; will result in a &lt;code&gt;socket.destroy(err)&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;callback(err)&lt;/code&gt; 호출 하면 &lt;code&gt;socket.destroy(err)&lt;/code&gt; 호출이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8f20fc2ded04c4e55d0dd45d3b69ac3563bd9616" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;console.assert()&lt;/code&gt; with a falsy assertion will only cause the &lt;code&gt;message&lt;/code&gt; to be printed to the console without interrupting execution of subsequent code.</source>
          <target state="translated">잘못된 어설 션으로 &lt;code&gt;console.assert()&lt;/code&gt; 를 호출 하면 후속 코드의 실행을 방해하지 않고 콘솔에 &lt;code&gt;message&lt;/code&gt; 가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="2eb35ea5b21c7f0f049a33e3bc5d6ddad7969a8f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;enter()&lt;/code&gt; changes only the active domain, and does not alter the domain itself. &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt; can be called an arbitrary number of times on a single domain.</source>
          <target state="translated">&lt;code&gt;enter()&lt;/code&gt; 호출 하면 활성 도메인 만 변경되고 도메인 자체는 변경되지 않습니다. 단일 도메인에서 &lt;code&gt;enter()&lt;/code&gt; 및 &lt;code&gt;exit()&lt;/code&gt; 를 임의의 횟수로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f05af83268fb80cda3c54af7b3d16fdd9cc8698c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;exit()&lt;/code&gt; changes only the active domain, and does not alter the domain itself. &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt; can be called an arbitrary number of times on a single domain.</source>
          <target state="translated">&lt;code&gt;exit()&lt;/code&gt; 호출 하면 활성 도메인 만 변경되고 도메인 자체는 변경되지 않습니다. 단일 도메인에서 &lt;code&gt;enter()&lt;/code&gt; 및 &lt;code&gt;exit()&lt;/code&gt; 를 임의의 횟수로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6b53cb5489505dfb4b0981b2861e08d99ce49ff" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.close()&lt;/code&gt; on any file descriptor (&lt;code&gt;fd&lt;/code&gt;) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</source>
          <target state="translated">Calling &lt;code&gt;fs.close()&lt;/code&gt; on any file descriptor ( &lt;code&gt;fd&lt;/code&gt; ) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</target>
        </trans-unit>
        <trans-unit id="8c2db601af89fbbe8f95838bb5a7e44f10c2e7e5" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.closeSync()&lt;/code&gt; on any file descriptor (&lt;code&gt;fd&lt;/code&gt;) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</source>
          <target state="translated">Calling &lt;code&gt;fs.closeSync()&lt;/code&gt; on any file descriptor ( &lt;code&gt;fd&lt;/code&gt; ) that is currently in use through any other &lt;code&gt;fs&lt;/code&gt; operation may lead to undefined behavior.</target>
        </trans-unit>
        <trans-unit id="ec8aa57b24478363b554d3943852be6a13be5ced" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fs.unwatchFile()&lt;/code&gt; with a filename that is not being watched is a no-op, not an error.</source>
          <target state="translated">감시되지 않는 파일 이름으로 &lt;code&gt;fs.unwatchFile()&lt;/code&gt; 을 호출 하는 것은 오류가 아니라 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0a4d0906433636ff7d216bf870a15233e09ddee" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;http2stream.pushStream()&lt;/code&gt; from within a pushed stream is not permitted and will throw an error.</source>
          <target state="translated">푸시 된 스트림 내에서 &lt;code&gt;http2stream.pushStream()&lt;/code&gt; 을 호출 하는 것은 허용되지 않으며 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d4f0d5f458a3b6c7a483e701e66f4412e43f2090" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;napi_wrap()&lt;/code&gt; a second time on an object will return an error. To associate another native instance with the object, use &lt;code&gt;napi_remove_wrap()&lt;/code&gt; first.</source>
          <target state="translated">객체에서 &lt;code&gt;napi_wrap()&lt;/code&gt; 을 두 번 호출 하면 오류가 반환됩니다. 다른 기본 인스턴스를 오브젝트와 연관 ​​시키려면 먼저 &lt;code&gt;napi_remove_wrap()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ebda8add9c29049e05ed036aff1782a09cb87b1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.exit()&lt;/code&gt; will force the process to exit as quickly as possible even if there are still asynchronous operations pending that have not yet completed fully, including I/O operations to &lt;code&gt;process.stdout&lt;/code&gt; and &lt;code&gt;process.stderr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;process.exit()&lt;/code&gt; 호출 하면 &lt;code&gt;process.stdout&lt;/code&gt; 및 &lt;code&gt;process.stderr&lt;/code&gt; 에 대한 I / O 작업을 포함하여 아직 완전히 완료되지 않은 비동기 작업이 아직 보류중인 경우에도 프로세스가 최대한 빨리 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="d190ead55e96738c98d8fed378efeb2cbb21ecc1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.umask()&lt;/code&gt; with no argument causes the process-wide umask to be written twice. This introduces a race condition between threads, and is a potential security vulnerability. There is no safe, cross-platform alternative API.</source>
          <target state="translated">Calling &lt;code&gt;process.umask()&lt;/code&gt; with no argument causes the process-wide umask to be written twice. This introduces a race condition between threads, and is a potential security vulnerability. There is no safe, cross-platform alternative API.</target>
        </trans-unit>
        <trans-unit id="3d5e3d3238ac01729339628783aa89ea9aa61529" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;process.umask()&lt;/code&gt; with no arguments is deprecated.</source>
          <target state="translated">Calling &lt;code&gt;process.umask()&lt;/code&gt; with no arguments is deprecated.</target>
        </trans-unit>
        <trans-unit id="7323b93b8e12f957933a587d47060d857018d255" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;readable.pause()&lt;/code&gt;, &lt;code&gt;readable.unpipe()&lt;/code&gt;, or receiving backpressure will cause the &lt;code&gt;readable.readableFlowing&lt;/code&gt; to be set as &lt;code&gt;false&lt;/code&gt;, temporarily halting the flowing of events but &lt;em&gt;not&lt;/em&gt; halting the generation of data. While in this state, attaching a listener for the &lt;code&gt;'data'&lt;/code&gt; event will not switch &lt;code&gt;readable.readableFlowing&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;readable.pause()&lt;/code&gt; , &lt;code&gt;readable.unpipe()&lt;/code&gt; 호출 하거나 역압을 받으면 &lt;code&gt;readable.readableFlowing&lt;/code&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되어 이벤트의 흐름은 일시적으로 중단되지만 데이터 생성은 중단 &lt;em&gt;되지 않습니다&lt;/em&gt; . 이 상태에서 &lt;code&gt;'data'&lt;/code&gt; 이벤트에 대한 리스너를 연결하면 &lt;code&gt;readable.readableFlowing&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 전환되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2a3f3a11ea8f6637aadcb714ac4728d792909580" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;realpath&lt;/code&gt; now works again for various edge cases on Windows.</source>
          <target state="translated">&lt;code&gt;realpath&lt;/code&gt; 호출은 이제 Windows의 다양한 에지 사례에서 다시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a4e9f23e24b8d27f39bddad7d86d865e2f7733e8" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;realpathSync&lt;/code&gt; now works again for various edge cases on Windows.</source>
          <target state="translated">&lt;code&gt;realpathSync&lt;/code&gt; 호출은 이제 Windows의 다양한 경우에 대해 다시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="87d1261360ff72ec95c95ee514a63575e6bae995" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;require('crypto').webcrypto&lt;/code&gt; returns an instance of the &lt;code&gt;Crypto&lt;/code&gt; class. &lt;code&gt;Crypto&lt;/code&gt; is a singleton that provides access to the remainder of the crypto API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b678714991b62ac3cce51d8357294b5bf1dceb4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;rl.close()&lt;/code&gt; does not immediately stop other events (including &lt;code&gt;'line'&lt;/code&gt;) from being emitted by the &lt;code&gt;readline.Interface&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;rl.close()&lt;/code&gt; 호출 해도 &lt;code&gt;readline.Interface&lt;/code&gt; 인스턴스 에서 다른 이벤트 ( &lt;code&gt;'line'&lt;/code&gt; 포함 ) 가 생성되는 것을 즉시 중지하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b6f61394faa3e62d84c5820e41b7b246c12212e0" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;rl.pause()&lt;/code&gt; does not immediately pause other events (including &lt;code&gt;'line'&lt;/code&gt;) from being emitted by the &lt;code&gt;readline.Interface&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;rl.pause()&lt;/code&gt; 호출 해도 &lt;code&gt;readline.Interface&lt;/code&gt; 인스턴스 에서 생성 된 다른 이벤트 ( &lt;code&gt;'line'&lt;/code&gt; 포함 ) 가 즉시 일시 중지되지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8dea4b251b7c8b9c8fc41a049eef8c3b77a55bda" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;socket.ref()&lt;/code&gt; multiples times will have no additional effect.</source>
          <target state="translated">&lt;code&gt;socket.ref()&lt;/code&gt; 여러 번 호출 해도 추가 효과는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a06a1edf1cea527997b3f2119ac83309d1ae5287" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;socket.unref()&lt;/code&gt; multiple times will have no addition effect.</source>
          <target state="translated">&lt;code&gt;socket.unref()&lt;/code&gt; 여러 번 호출 해도 추가 효과는 없습니다.</target>
        </trans-unit>
        <trans-unit id="38a1a6ceda16214f70b7617e7a0377890f834eed" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;subprocess.ref()&lt;/code&gt; after making a call to &lt;code&gt;subprocess.unref()&lt;/code&gt; will restore the removed reference count for the child process, forcing the parent to wait for the child to exit before exiting itself.</source>
          <target state="translated">호출 &lt;code&gt;subprocess.ref()&lt;/code&gt; 를 호출 한 후에 &lt;code&gt;subprocess.unref()&lt;/code&gt; 자체를 종료하기 전에 종료에 자녀를 기다리는 부모를 강제로 자식 프로세스에 대한 제거 된 참조 횟수를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="78e13b939ab4b2f41815cd4f21b6110578698c0a" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;subtle.deriveKey()&lt;/code&gt; is equivalent to calling &lt;code&gt;subtle.deriveBits()&lt;/code&gt; to generate raw keying material, then passing the result into the &lt;code&gt;subtle.importKey()&lt;/code&gt; method using the &lt;code&gt;deriveKeyAlgorithm&lt;/code&gt;, &lt;code&gt;extractable&lt;/code&gt;, and &lt;code&gt;keyUsages&lt;/code&gt; parameters as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2833339af51f066ced2f958bc0e1083995e97d16" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;timeout.unref()&lt;/code&gt; creates an internal timer that will wake the Node.js event loop. Creating too many of these can adversely impact performance of the Node.js application.</source>
          <target state="translated">&lt;code&gt;timeout.unref()&lt;/code&gt; 를 호출 하면 Node.js 이벤트 루프를 깨울 내부 타이머가 생성됩니다. 이러한 항목을 너무 많이 만들면 Node.js 응용 프로그램의 성능에 부정적인 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f60681c6b70a778796c9cc6749771c641a2a2aa" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a BroadcastChannel allows the thread to exit if this is the only active handle in the event system. If the BroadcastChannel is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3168ed6bfd41b3e1ef57bcfdb722071e2d70ea2" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a port allows the thread to exit if this is the only active handle in the event system. If the port is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95e54c427a7b734f1c32352760edb016c2bd068" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a port will allow the thread to exit if this is the only active handle in the event system. If the port is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">포트에서 &lt;code&gt;unref()&lt;/code&gt; 를 호출 하면 스레드가 이벤트 시스템에서 유일한 활성 핸들 인 경우 스레드를 종료 할 수 있습니다. 포트가 이미 &lt;code&gt;unref()&lt;/code&gt; &lt;code&gt;unref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="02352fed74503165b45a489b4daee80456ad1743" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a server will allow the program to exit if this is the only active server in the event system. If the server is already &lt;code&gt;unref&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">서버에서 &lt;code&gt;unref()&lt;/code&gt; 를 호출 하면 이것이 이벤트 시스템에서 유일한 활성 서버 인 경우 프로그램을 종료 할 수 있습니다. 서버가 이미 &lt;code&gt;unref&lt;/code&gt; 되지 않은 경우 &lt;code&gt;unref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4469cbd36594d3df846fdd2c07cb60bc99b17a15" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a socket will allow the program to exit if this is the only active socket in the event system. If the socket is already &lt;code&gt;unref&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; 호출소켓에서 를 하면 이것이 이벤트 시스템에서 유일한 활성 소켓 인 경우 프로그램을 종료 할 수 있습니다. 소켓이 이미 &lt;code&gt;unref&lt;/code&gt; 되지 않은 경우 &lt;code&gt;unref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c9544b9889b1b83fcb60fa9b69f51b73857d4a2e" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a worker allows the thread to exit if this is the only active handle in the event system. If the worker is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de61ab041c4868c205fac22161fa4869982342" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;unref()&lt;/code&gt; on a worker will allow the thread to exit if this is the only active handle in the event system. If the worker is already &lt;code&gt;unref()&lt;/code&gt;ed calling &lt;code&gt;unref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; 호출 를 하면 스레드가 이벤트 시스템에서 유일한 활성 핸들 인 경우 스레드가 종료됩니다. 작업자가 이미 &lt;code&gt;unref()&lt;/code&gt; &lt;code&gt;unref()&lt;/code&gt; 다시 호출 해도 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="afa91dc69bcf88ccf412777c1a3072768775cfdd" translate="yes" xml:space="preserve">
          <source>Calling a thread-safe function</source>
          <target state="translated">Calling a thread-safe function</target>
        </trans-unit>
        <trans-unit id="7ab25ca3d5236395bcb978792bef3d17b01a9a47" translate="yes" xml:space="preserve">
          <source>Calling an asynchronous function without a callback throws a &lt;code&gt;TypeError&lt;/code&gt; in Node.js 10.0.0 onwards. See &lt;a href=&quot;https://github.com/nodejs/node/pull/12562&quot;&gt;https://github.com/nodejs/node/pull/12562&lt;/a&gt;.</source>
          <target state="translated">콜백없이 비동기 함수를 호출하면 &lt;code&gt;TypeError&lt;/code&gt; Node.js 10.0.0부터 TypeError . &lt;a href=&quot;https://github.com/nodejs/node/pull/12562&quot;&gt;https://github.com/nodejs/node/pull/12562를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e000b78e4a066abb436dcedf2fd0197163f31621" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt;&lt;code&gt;stream.pipe()&lt;/code&gt;&lt;/a&gt; method to send the data to a &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt; &lt;code&gt;stream.pipe()&lt;/code&gt; &lt;/a&gt; 호출 메서드를 데이터를 &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt; 로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="e6a5dd85e64a357d2f59a1b2211f6e5f33f7c20e" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_readable_resume&quot;&gt;&lt;code&gt;stream.resume()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">전화 &lt;a href=&quot;#stream_readable_resume&quot;&gt; &lt;code&gt;stream.resume()&lt;/code&gt; &lt;/a&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="b3c47f789d09be5edd65ad6fc03b86c1aeef7e16" translate="yes" xml:space="preserve">
          <source>Calling the &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; method after calling &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.end()&lt;/code&gt;&lt;/a&gt; will raise an error.</source>
          <target state="translated">&lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt; 호출 호출 한 후 방법 &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.end()&lt;/code&gt; &lt;/a&gt; 에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f380e84940a1c56d9d9abfddf75cbebd64d7c459" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c7f7a8bdbf4a9620ca24fdb52199d72c99f860" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream. If provided, the optional &lt;code&gt;callback&lt;/code&gt; function is attached as a listener for the &lt;a href=&quot;#stream_event_finish&quot;&gt;&lt;code&gt;'finish'&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="translated">Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream. If provided, the optional &lt;code&gt;callback&lt;/code&gt; function is attached as a listener for the &lt;a href=&quot;#stream_event_finish&quot;&gt; &lt;code&gt;'finish'&lt;/code&gt; &lt;/a&gt; and the &lt;code&gt;'error'&lt;/code&gt; event.</target>
        </trans-unit>
        <trans-unit id="1f85bd2e8a09f4bcd7f2dfe1cb1939e8aeea38bc" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;writable.end()&lt;/code&gt; method signals that no more data will be written to the &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;. The optional &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; arguments allow one final additional chunk of data to be written immediately before closing the stream. If provided, the optional &lt;code&gt;callback&lt;/code&gt; function is attached as a listener for the &lt;a href=&quot;#stream_event_finish&quot;&gt;&lt;code&gt;'finish'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">&lt;code&gt;writable.end()&lt;/code&gt; 메소드를 호출하면 더 이상 데이터가 &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; 에&lt;/a&gt; 기록되지 않음을 알립니다 . 선택적 &lt;code&gt;chunk&lt;/code&gt; 및 &lt;code&gt;encoding&lt;/code&gt; 인수를 사용하면 스트림을 닫기 직전에 하나의 최종 추가 데이터 청크를 작성할 수 있습니다. 제공된 경우 선택적 &lt;code&gt;callback&lt;/code&gt; 함수는 &lt;a href=&quot;#stream_event_finish&quot;&gt; &lt;code&gt;'finish'&lt;/code&gt; &lt;/a&gt; 이벤트에 대한 리스너로 첨부됩니다 .</target>
        </trans-unit>
        <trans-unit id="486450554d452ea3ef58646033a7abfef517ec1c" translate="yes" xml:space="preserve">
          <source>Calling this constructor emits a deprecation warning now.</source>
          <target state="translated">이 생성자를 호출하면 사용 중단 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f248cdb963d84cfbf437baaa656287502ce623ff" translate="yes" xml:space="preserve">
          <source>Calling this constructor emits a deprecation warning when run from code outside the &lt;code&gt;node_modules&lt;/code&gt; directory.</source>
          <target state="translated">이 생성자를 호출하면 코드 외부에서 코드를 실행할 때 사용 중단 경고가 표시됩니다. &lt;code&gt;node_modules&lt;/code&gt; 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="70ddef5f629bd63f186e419574fe226c58ab4950" translate="yes" xml:space="preserve">
          <source>Calling this constructor no longer emits a deprecation warning.</source>
          <target state="translated">이 생성자를 호출해도 더 이상 사용 중단 경고가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8116dccb9c8a3d9df8fbc521eec3b56fbd9a274" translate="yes" xml:space="preserve">
          <source>Calling this function without passing the &lt;code&gt;digest&lt;/code&gt; parameter is deprecated now and will emit a warning.</source>
          <target state="translated">&lt;code&gt;digest&lt;/code&gt; 를 전달하지 않고이 함수 호출 매개 변수 더 이상 사용되지 않으며 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="548e58a933c8dfc41643f5b26e2332c4a57e23fb" translate="yes" xml:space="preserve">
          <source>Calling this only flushes data from the internal &lt;code&gt;zlib&lt;/code&gt; state, and does not perform flushing of any kind on the streams level. Rather, it behaves like a normal call to &lt;code&gt;.write()&lt;/code&gt;, i.e. it will be queued up behind other pending writes and will only produce output when data is being read from the stream.</source>
          <target state="translated">이를 호출하면 내부 &lt;code&gt;zlib&lt;/code&gt; 상태 에서만 데이터가 플러시 되며 스트림 수준에서 플러시를 수행하지 않습니다. 오히려 &lt;code&gt;.write()&lt;/code&gt; 대한 일반적인 호출처럼 작동합니다 . 즉, 보류중인 다른 쓰기 뒤에 대기하고 스트림에서 데이터를 읽을 때만 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e20bdaa1bb2c895cecf9eb2cc38bf17eafebab5c" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;net#net_socket_ref&quot;&gt;&lt;code&gt;ref()&lt;/code&gt;&lt;/a&gt; on this &lt;code&gt;Http2Session&lt;/code&gt; instance's underlying &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스의 기본 &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;net#net_socket_ref&quot;&gt; &lt;code&gt;ref()&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="152fa161791d1088060c2efd968b8eee1abf6c87" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;net#net_socket_unref&quot;&gt;&lt;code&gt;unref()&lt;/code&gt;&lt;/a&gt; on this &lt;code&gt;Http2Session&lt;/code&gt; instance's underlying &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스의 기본 &lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;net#net_socket_unref&quot;&gt; &lt;code&gt;unref()&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="8a14ca6bd4c2f0838399d694595ecf5310324eb4" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;.disconnect()&lt;/code&gt; on each worker in &lt;code&gt;cluster.workers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cluster.workers&lt;/code&gt; 의 각 작업자에서 &lt;code&gt;.disconnect()&lt;/code&gt; 를 호출합니다. .</target>
        </trans-unit>
        <trans-unit id="796b1e900e21675ef7498b7a251fcc986ab7ad4c" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; that received the &lt;a href=&quot;#http2_class_http2_http2serverrequest&quot;&gt;&lt;code&gt;Http2ServerRequest&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="translated">&lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt; 를 수신 한 &lt;a href=&quot;#http2_class_http2_http2serverrequest&quot;&gt; &lt;code&gt;Http2ServerRequest&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;destroy()&lt;/code&gt; 를 호출 합니다 . 경우 &lt;code&gt;error&lt;/code&gt; 제공된다 &lt;code&gt;'error'&lt;/code&gt; 이벤트가 방출되고, &lt;code&gt;error&lt;/code&gt; 이벤트 리스너에 인수로 전달된다.</target>
        </trans-unit>
        <trans-unit id="508f724bce65948e92b765d2568208e631d6f536" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the socket that received the &lt;code&gt;IncomingMessage&lt;/code&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="translated">&lt;code&gt;IncomingMessage&lt;/code&gt; 를받은 소켓에서 &lt;code&gt;destroy()&lt;/code&gt; 를 호출 합니다 . 경우 &lt;code&gt;error&lt;/code&gt; 제공된다 &lt;code&gt;'error'&lt;/code&gt; 이벤트가 방출되고, &lt;code&gt;error&lt;/code&gt; 이벤트 리스너에 인수로 전달된다.</target>
        </trans-unit>
        <trans-unit id="d9b10d623a7bd30e253e4f6daf7942b01152b96e" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;destroy()&lt;/code&gt; on the socket that received the &lt;code&gt;IncomingMessage&lt;/code&gt;. If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted on the socket and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</source>
          <target state="translated">Calls &lt;code&gt;destroy()&lt;/code&gt; on the socket that received the &lt;code&gt;IncomingMessage&lt;/code&gt; . If &lt;code&gt;error&lt;/code&gt; is provided, an &lt;code&gt;'error'&lt;/code&gt; event is emitted on the socket and &lt;code&gt;error&lt;/code&gt; is passed as an argument to any listeners on the event.</target>
        </trans-unit>
        <trans-unit id="9844a074979212b87bb51b9fdd608eeae7d70d55" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;message.connection.setTimeout(msecs, callback)&lt;/code&gt;.</source>
          <target state="translated">호출 &lt;code&gt;message.connection.setTimeout(msecs, callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c28bb749125d417f452a373b21d38a048ffd27" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;message.socket.setTimeout(msecs, callback)&lt;/code&gt;.</source>
          <target state="translated">Calls &lt;code&gt;message.socket.setTimeout(msecs, callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77dfd2135f4db726c47299bb55be26f7f4525a46" translate="yes" xml:space="preserve">
          <source>Cancel</source>
          <target state="translated">Cancel</target>
        </trans-unit>
        <trans-unit id="4ee591c4cf7f779e828b9fc5cc36321f176c8cf7" translate="yes" xml:space="preserve">
          <source>Cancel all outstanding DNS queries made by this resolver. The corresponding callbacks will be called with an error with code &lt;code&gt;ECANCELLED&lt;/code&gt;.</source>
          <target state="translated">이 리졸버가 수행 한 미해결 DNS 쿼리를 모두 취소하십시오. 해당 콜백은 &lt;code&gt;ECANCELLED&lt;/code&gt; 코드로 오류와 함께 호출됩니다. .</target>
        </trans-unit>
        <trans-unit id="04e9a85f375721bc1dc2fd71fff5e9e170653559" translate="yes" xml:space="preserve">
          <source>Cancel all outstanding DNS queries made by this resolver. The corresponding promises will be rejected with an error with code &lt;code&gt;ECANCELLED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2463832da8de25f89b0d8f4332b7e4c84c0a9c1" translate="yes" xml:space="preserve">
          <source>Cancelling Timers</source>
          <target state="translated">타이머 취소</target>
        </trans-unit>
        <trans-unit id="024a5c7b380a2a151a2d315141bde30c9d1af7c9" translate="yes" xml:space="preserve">
          <source>Cancelling timers</source>
          <target state="translated">Cancelling timers</target>
        </trans-unit>
        <trans-unit id="de46483cb35a84fb4908eb275a79a7f998204985" translate="yes" xml:space="preserve">
          <source>Cancels a &lt;code&gt;Timeout&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt; 의해 작성된 &lt;code&gt;Timeout&lt;/code&gt; 오브젝트를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="78f7c92b5120d3533261efea5775bdb5aa171065" translate="yes" xml:space="preserve">
          <source>Cancels a &lt;code&gt;Timeout&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 &lt;code&gt;Timeout&lt;/code&gt; 객체를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="4ff2323e5e56e86f75579626820c490b760d9f85" translate="yes" xml:space="preserve">
          <source>Cancels an &lt;code&gt;Immediate&lt;/code&gt; object created by &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 &lt;code&gt;Immediate&lt;/code&gt; 객체를 취소 .</target>
        </trans-unit>
        <trans-unit id="d1f504b080a4a85ec363bced48a5ba42f894a4e7" translate="yes" xml:space="preserve">
          <source>Capture rejections of promises</source>
          <target state="translated">Capture rejections of promises</target>
        </trans-unit>
        <trans-unit id="1b1d770c3ecdca9ecf80bacdda11923dcbcea1ca" translate="yes" xml:space="preserve">
          <source>Care must be taken when using &lt;code&gt;Transform&lt;/code&gt; streams in that data written to the stream can cause the &lt;code&gt;Writable&lt;/code&gt; side of the stream to become paused if the output on the &lt;code&gt;Readable&lt;/code&gt; side is not consumed.</source>
          <target state="translated">스트림에 기록 된 데이터가 &lt;code&gt;Readable&lt;/code&gt; 의 출력에서 ​​스트림 의 &lt;code&gt;Writable&lt;/code&gt; 측이 일시 정지 될 수 있도록 &lt;code&gt;Transform&lt;/code&gt; 스트림을 사용할 때주의해야 쪽 이 소비되지 않으면 .</target>
        </trans-unit>
        <trans-unit id="df474205a6a591fcc3f2eaa64f458c74194c4ede" translate="yes" xml:space="preserve">
          <source>Care should be taken when using Node.js-specific extensions as they are not supported by other WebCrypto implementations and reduce the portability of code to other environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a42da72cf01756093a37d8bd374857d5a0b61c" translate="yes" xml:space="preserve">
          <source>Careful planning is required to allow cyclic module dependencies to work correctly within an application.</source>
          <target state="translated">주기적 모듈 종속성이 애플리케이션 내에서 올바르게 작동하려면 신중한 계획이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="78f8544ebbc1f8c06e2c0bc866cc14bb1d9b7692" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; to be set.</source>
          <target state="translated">원인 &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; 설정하려면.</target>
        </trans-unit>
        <trans-unit id="e8bf593e3d4c135822610c6b1cedd2aabaf63730" translate="yes" xml:space="preserve">
          <source>Causes the salt length for &lt;code&gt;RSA_PKCS1_PSS_PADDING&lt;/code&gt; to be determined automatically when verifying a signature.</source>
          <target state="translated">서명을 확인할 때 &lt;code&gt;RSA_PKCS1_PSS_PADDING&lt;/code&gt; 의 솔트 길이가 자동으로 결정되도록합니다.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="5f3225c71f034b1eb05a74dd4d995132bb2a8513" translate="yes" xml:space="preserve">
          <source>Caveats: on Windows only the write permission can be changed, and the distinction among the permissions of group, owner or others is not implemented.</source>
          <target state="translated">주의 사항 : Windows에서는 쓰기 권한 만 변경할 수 있으며 그룹, 소유자 또는 다른 사람의 권한 구분은 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="542a6be4be44519412c0a6a33063a112f507d046" translate="yes" xml:space="preserve">
          <source>Certain platforms (macOS, Linux) will use the value of &lt;code&gt;argv[0]&lt;/code&gt; for the process title while others (Windows, SunOS) will use &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">특정 플랫폼 (macOS, Linux)은 프로세스 제목 으로 &lt;code&gt;argv[0]&lt;/code&gt; 값을 사용하고 다른 플랫폼 (Windows, SunOS)은 &lt;code&gt;command&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="8e6cefad56966b7f11fbbc717428ce6f816c9f77" translate="yes" xml:space="preserve">
          <source>Certain versions of &lt;code&gt;node::MakeCallback&lt;/code&gt; APIs available to native modules are deprecated. Please use the versions of the API that accept an &lt;code&gt;async_context&lt;/code&gt; parameter.</source>
          <target state="translated">기본 모듈에 사용 가능한 특정 버전의 &lt;code&gt;node::MakeCallback&lt;/code&gt; API는 더 이상 사용되지 않습니다. &lt;code&gt;async_context&lt;/code&gt; 를 허용하는 API 버전을 사용하십시오 매개 변수 .</target>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="ba0b998ec4ee590a1525fb9ce924b5c6c3d689ee" translate="yes" xml:space="preserve">
          <source>Certificate Object</source>
          <target state="translated">인증서 객체</target>
        </trans-unit>
        <trans-unit id="0e46ccea2e734333340472ce4905398e0d5aae79" translate="yes" xml:space="preserve">
          <source>Certificate object</source>
          <target state="translated">인증서 개체</target>
        </trans-unit>
        <trans-unit id="b969b822cb62addc88af143d23d0f7ca1f38e76b" translate="yes" xml:space="preserve">
          <source>Certificate.exportChallenge(spkac)</source>
          <target state="translated">Certificate.exportChallenge(spkac)</target>
        </trans-unit>
        <trans-unit id="79c9f188b04a8c83116afff3489959f7520adee3" translate="yes" xml:space="preserve">
          <source>Certificate.exportPublicKey(spkac[, encoding])</source>
          <target state="translated">Certificate.exportPublicKey (spkac [, 인코딩])</target>
        </trans-unit>
        <trans-unit id="1dda9c4a42569f11fa531833a979e7b26c3cb3c1" translate="yes" xml:space="preserve">
          <source>Certificate.verifySpkac(spkac)</source>
          <target state="translated">Certificate.verifySpkac(spkac)</target>
        </trans-unit>
        <trans-unit id="f9f992008d089dc6749bdc02848d0d25794ae6cc" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;autoDestroy&lt;/code&gt; option default to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;autoDestroy&lt;/code&gt; 옵션 기본값을 &lt;code&gt;true&lt;/code&gt; 로 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="04764c0a352f5541e03bda016aef35d4b0a5fc25" translate="yes" xml:space="preserve">
          <source>Change maximum default size of HTTP headers from 8KB to 16KB.</source>
          <target state="translated">HTTP 헤더의 최대 기본 크기를 8KB에서 16KB로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7347240ef01071152bcae9baf5c7851899ba69bb" translate="yes" xml:space="preserve">
          <source>Change the default &lt;code&gt;captureRejections&lt;/code&gt; option on all new &lt;code&gt;EventEmitter&lt;/code&gt; objects.</source>
          <target state="translated">모든 새 &lt;code&gt;EventEmitter&lt;/code&gt; 개체 에서 기본 &lt;code&gt;captureRejections&lt;/code&gt; 옵션을 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="14f98dd21e4e93a81eb0a556a457909ea7edded1" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가 참조하는 객체의 파일 시스템 타임 스탬프를 변경 한 후 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="f5ae887dbdc3043d85987ab885ebc8cadc9b1f81" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 가 참조하는 오브젝트의 파일 시스템 시간 소인을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="cae08d63ae772c6156e3a92a9ac517d0ce8564cb" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by the &lt;code&gt;FileHandle&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;FileHandle&lt;/code&gt; 이 참조하는 오브젝트의 파일 시스템 시간 소인을 변경 한 후 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결하십시오 .</target>
        </trans-unit>
        <trans-unit id="46496f35fc19324406d7348485838237b7709596" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the object referenced by the supplied file descriptor. See &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 파일 디스크립터가 참조하는 오브젝트의 파일 시스템 시간 소인을 변경하십시오. &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.utimes()&lt;/code&gt; &lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="cd760825006601f0d1db77dbe98faabe823c044e" translate="yes" xml:space="preserve">
          <source>Change the file system timestamps of the symbolic link referenced by &lt;code&gt;path&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt;, or throws an exception when parameters are incorrect or the operation fails. This is the synchronous version of &lt;a href=&quot;#fs_fs_lutimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.lutimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 에서 참조하는 심볼릭 링크의 파일 시스템 타임 스탬프를 변경합니다 . &lt;code&gt;undefined&lt;/code&gt; 를 반환 하거나 매개 변수가 올바르지 않거나 작업이 실패하면 예외를 throw합니다. 이것은 &lt;a href=&quot;#fs_fs_lutimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.lutimes()&lt;/code&gt; &lt;/a&gt; 의 동기 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="d3ff552ade7769c53f6d53d34c42849496b1419f" translate="yes" xml:space="preserve">
          <source>Change to asynchronous &lt;code&gt;socket.bind()&lt;/code&gt; behavior</source>
          <target state="translated">비동기 &lt;code&gt;socket.bind()&lt;/code&gt; 동작으로 변경</target>
        </trans-unit>
        <trans-unit id="1a1c741f67d8e48d84d118fcd87e4354fd49b83d" translate="yes" xml:space="preserve">
          <source>Changed &quot;strict mode&quot; to &quot;strict assertion mode&quot; and &quot;legacy mode&quot; to &quot;legacy assertion mode&quot; to avoid confusion with the more usual meaning of &quot;strict mode&quot;.</source>
          <target state="translated">&quot;엄격 모드&quot;의보다 일반적인 의미와 혼동을 피하기 위해 &quot;엄격 모드&quot;를 &quot;엄격 어설 션 모드&quot;로, &quot;레거시 모드&quot;를 &quot;레거시 어설 션 모드&quot;로 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="349a5454cfd8fce11b754ed79b97cf46da235813" translate="yes" xml:space="preserve">
          <source>Changed 'flags' argument to 'mode' and imposed stricter type validation.</source>
          <target state="translated">'flags'인수를 'mode'로 변경하고 더 엄격한 유형 유효성 검사를 부과했습니다.</target>
        </trans-unit>
        <trans-unit id="818fd22e47e21bdc096c8e5561ef2b7af74f70ff" translate="yes" xml:space="preserve">
          <source>Changed default mode to &lt;code&gt;throw&lt;/code&gt;. Previously, a warning was emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99165cb6ce1ec2addb736cdc095a100703df24e7" translate="yes" xml:space="preserve">
          <source>Changed error format to better support invalid public key error</source>
          <target state="translated">잘못된 공개 키 오류를 더 잘 지원하도록 오류 형식이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b9e66d0cd47c11f946bcf3f66b907d26166de1c" translate="yes" xml:space="preserve">
          <source>Changed error format to better support invalid public key error.</source>
          <target state="translated">잘못된 공개 키 오류를 더 잘 지원하도록 오류 형식을 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="8cbaeeddc5694fae75217f3656be4ccd5dbd5707" translate="yes" xml:space="preserve">
          <source>Changed from &lt;code&gt;--diagnostic-report-directory&lt;/code&gt; to &lt;code&gt;--report-directory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--diagnostic-report-directory&lt;/code&gt; 에서 &lt;code&gt;--report-directory&lt;/code&gt; 로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="d928b9e11fd1ede5a9aee3ebf02c846b2674da63" translate="yes" xml:space="preserve">
          <source>Changed from &lt;code&gt;--diagnostic-report-directory&lt;/code&gt; to &lt;code&gt;--report-directory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--diagnostic-report-directory&lt;/code&gt; 에서 &lt;code&gt;--report-directory&lt;/code&gt; 로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="af3e674770217fdfd65427748478c31c04b73bfd" translate="yes" xml:space="preserve">
          <source>Changed signature of the &lt;code&gt;hook&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;hook&lt;/code&gt; 콜백의 서명이 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="cc7e98989841432b3d5053fdfb18c52a7c6d4880" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times of a file in the same way as &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;, with the difference that if the path refers to a symbolic link, then the link is not dereferenced: instead, the timestamps of the symbolic link itself are changed.</source>
          <target state="translated">&lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.utimes()&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 파일의 액세스 및 수정 시간을 변경합니다. 단 , 경로가 기호 링크를 참조하면 링크가 역 참조되지 않습니다. 대신 기호 링크 자체의 타임 스탬프는 다음과 같습니다. 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="36b255768e8a5d1bf16e9b6dc0ce381a30d64a52" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times of a file in the same way as &lt;a href=&quot;#fs_fspromises_utimes_path_atime_mtime&quot;&gt;&lt;code&gt;fsPromises.utimes()&lt;/code&gt;&lt;/a&gt;, with the difference that if the path refers to a symbolic link, then the link is not dereferenced: instead, the timestamps of the symbolic link itself are changed.</source>
          <target state="translated">&lt;a href=&quot;#fs_fspromises_utimes_path_atime_mtime&quot;&gt; &lt;code&gt;fsPromises.utimes()&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 파일의 액세스 및 수정 시간을 변경합니다. 단 , 경로가 기호 링크를 참조하는 경우 링크는 역 참조되지 않습니다. 대신 기호 링크 자체의 타임 스탬프는 다음과 같습니다. 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="910411f3f6621c104d1594e3a510db26b10b2e3e" translate="yes" xml:space="preserve">
          <source>Changes the ownership of a file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">파일의 소유권을 변경 한 후 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="238102f2dbe75cd58d3152e5d40da5207a0dd1e7" translate="yes" xml:space="preserve">
          <source>Changes the ownership of the file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">파일의 소유권을 변경 한 후 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="6fcb78fa81d0e40788cd6b2553daffb7f76a6bdf" translate="yes" xml:space="preserve">
          <source>Changes the ownership on a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">심볼릭 링크의 소유권을 변경 한 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="f1109f85ae69d0a1f63b598004239d9b62102c98" translate="yes" xml:space="preserve">
          <source>Changes the permissions of a file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon succces.</source>
          <target state="translated">파일의 권한을 변경 한 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="65e2973aa15d11dbeae3f78f93ed89c70ba95575" translate="yes" xml:space="preserve">
          <source>Changes the permissions on a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success. This method is only implemented on macOS.</source>
          <target state="translated">심볼릭 링크의 권한을 변경 한 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 . 이 방법은 macOS에서만 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="3500b4fbd8a4cb2108b880eb1ad0fe03d4ca6987" translate="yes" xml:space="preserve">
          <source>Changes to the ticket keys are effective only for future server connections. Existing or currently pending server connections will use the previous keys.</source>
          <target state="translated">티켓 키 변경은 향후 서버 연결에만 유효합니다. 기존 또는 현재 보류중인 서버 연결은 이전 키를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f3793c34f8c1fcfb9679d2e716615991d279b467" translate="yes" xml:space="preserve">
          <source>Changing the direction immediately searches for the next entry in the expected direction from the current position on.</source>
          <target state="translated">방향을 변경하면 현재 위치에서 예상되는 방향의 다음 항목을 즉시 검색합니다.</target>
        </trans-unit>
        <trans-unit id="7c1f9012744a0c922289b23488394e62f55560a9" translate="yes" xml:space="preserve">
          <source>Changing the socket encoding is not allowed per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3&quot;&gt;RFC 7230 Section 3&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5594b0d22083d67868716b50b13a959c9ff6de" translate="yes" xml:space="preserve">
          <source>Check for equality between two JavaScript values.</source>
          <target state="translated">두 JavaScript 값이 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2ef5ffba10003518ae7b046596dd0556d244d802" translate="yes" xml:space="preserve">
          <source>Check if there are active subscribers to the named channel. This is helpful if the message you want to send might be expensive to prepare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801901979b8edf43ff5087a1360aac32a853926f" translate="yes" xml:space="preserve">
          <source>Check if there are active subscribers to this channel. This is helpful if the message you want to send might be expensive to prepare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf528eddabeaaf5c884396ce600aae4ca5ee05" translate="yes" xml:space="preserve">
          <source>Check the type of a JavaScript value.</source>
          <target state="translated">JavaScript 값의 유형을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d42fec64aa51ec3ce090c90f06d00fa184adfb" translate="yes" xml:space="preserve">
          <source>Child Node.js processes will have a &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;process.send()&lt;/code&gt;&lt;/a&gt; method of their own that allows the child to send messages back to the parent.</source>
          <target state="translated">자식 Node.js 프로세스에는 자식 프로세스가 부모에게 메시지를 다시 보낼 수 있는 &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;process.send()&lt;/code&gt; &lt;/a&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="26963308dd032b828d8addf78d8674866f0ac4ef" translate="yes" xml:space="preserve">
          <source>Child Process</source>
          <target state="translated">아동 과정</target>
        </trans-unit>
        <trans-unit id="5091e72502f618e2b372fcb37e80054927942ac3" translate="yes" xml:space="preserve">
          <source>Child Processes</source>
          <target state="translated">자식 프로세스</target>
        </trans-unit>
        <trans-unit id="5dd7bcb18ba5a5596ca39fc2b46bd4ee3eed258c" translate="yes" xml:space="preserve">
          <source>Child process</source>
          <target state="translated">자식 과정</target>
        </trans-unit>
        <trans-unit id="54ba584ac6e1c17fc38d60a80fcb1aab76067a8b" translate="yes" xml:space="preserve">
          <source>Child processes</source>
          <target state="translated">자식 프로세스</target>
        </trans-unit>
        <trans-unit id="f800dfc855a8d087469dd156d7740838a57bd431" translate="yes" xml:space="preserve">
          <source>Child processes support a serialization mechanism for IPC that is based on the &lt;a href=&quot;v8#v8_serialization_api&quot;&gt;serialization API of the &lt;code&gt;v8&lt;/code&gt; module&lt;/a&gt;, based on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;HTML structured clone algorithm&lt;/a&gt;. This is generally more powerful and supports more built-in JavaScript object types, such as &lt;code&gt;BigInt&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;ArrayBuffer&lt;/code&gt; and &lt;code&gt;TypedArray&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;RegExp&lt;/code&gt; etc.</source>
          <target state="translated">자식 프로세스 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;HTML 구조화 된 복제 알고리즘을&lt;/a&gt; 기반으로하는 &lt;a href=&quot;v8#v8_serialization_api&quot;&gt; &lt;code&gt;v8&lt;/code&gt; &lt;/a&gt; 모듈 의 직렬화 API를 기반으로하는 IPC에 대한 직렬화 메커니즘을 지원합니다 . 이것은 일반적으로 더 강력하며 &lt;code&gt;BigInt&lt;/code&gt; , &lt;code&gt;Map&lt;/code&gt; 및 &lt;code&gt;Set&lt;/code&gt; , &lt;code&gt;ArrayBuffer&lt;/code&gt; 및 &lt;code&gt;TypedArray&lt;/code&gt; , &lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;Error&lt;/code&gt; , &lt;code&gt;RegExp&lt;/code&gt; 등과 같은 더 많은 내장 JavaScript 객체 유형을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="05bd3c97ff8e567451615977d0e45a00fedacf24" translate="yes" xml:space="preserve">
          <source>ChildProcess</source>
          <target state="translated">ChildProcess</target>
        </trans-unit>
        <trans-unit id="61723dd6e790f56bdc8e9ea2ef53b6104004e939" translate="yes" xml:space="preserve">
          <source>Choose One API Style</source>
          <target state="translated">하나의 API 스타일을 선택하십시오</target>
        </trans-unit>
        <trans-unit id="b88bdca9cda81488b11540f0cade61a62a19e9fa" translate="yes" xml:space="preserve">
          <source>Choose one API style</source>
          <target state="translated">하나의 API 스타일 선택</target>
        </trans-unit>
        <trans-unit id="5dc240f4f7aa523c3a97c7be9bf36139a483fb72" translate="yes" xml:space="preserve">
          <source>Chooses an HTTP parser library. Available values are:</source>
          <target state="translated">HTTP 파서 라이브러리를 선택합니다. 사용 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f03b3d3edcb18f6d3a66daaf164ba1fa8637b7da" translate="yes" xml:space="preserve">
          <source>Chrome DevTools doesn't support debugging &lt;a href=&quot;worker_threads&quot;&gt;worker threads&lt;/a&gt; yet. &lt;a href=&quot;https://github.com/GoogleChromeLabs/ndb/&quot;&gt;ndb&lt;/a&gt; can be used to debug them.</source>
          <target state="translated">Chrome DevTools는 아직 &lt;a href=&quot;worker_threads&quot;&gt;작업자 스레드&lt;/a&gt; 디버깅을 지원하지 않습니다 . &lt;a href=&quot;https://github.com/GoogleChromeLabs/ndb/&quot;&gt;ndb&lt;/a&gt; 를 사용하여 디버깅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ad1793e0814a287884fb61a145e768578af3982" translate="yes" xml:space="preserve">
          <source>Cipher</source>
          <target state="translated">Cipher</target>
        </trans-unit>
        <trans-unit id="1be878e682a29c4dd57e8d0f3cb03ae1d3ad43d9" translate="yes" xml:space="preserve">
          <source>Cipher names that start with &lt;code&gt;'tls_'&lt;/code&gt; are for TLSv1.3, all the others are for TLSv1.2 and below.</source>
          <target state="translated">&lt;code&gt;'tls_'&lt;/code&gt; 로 시작하는 암호 이름은 TLSv1.3 용이고 다른 모든 이름 은 TLSv1.2 이하입니다.</target>
        </trans-unit>
        <trans-unit id="62654c79e461119e8f24bd51dd8ebab7b66e8a41" translate="yes" xml:space="preserve">
          <source>Ciphers in OCB mode are now supported.</source>
          <target state="translated">OCB 모드의 암호가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0ea99b533eb5ebf08717903cc4de2bbd57820c62" translate="yes" xml:space="preserve">
          <source>Circular references now include a marker to the reference.</source>
          <target state="translated">이제 순환 참조에 참조에 대한 마커가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b6b1a4e9fa748a5e728cafcf3e2894187d26c42e" translate="yes" xml:space="preserve">
          <source>Circular references point to their anchor by using a reference index:</source>
          <target state="translated">순환 참조는 참조 색인을 사용하여 앵커를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="e4bc2fab9760903c2ea26724c3ee3a290eccac10" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.alloc(size[, fill[, encoding]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.alloc (size [, fill [, encoding]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L326&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bd304f348bb695261ba6cd32faa4e542940dfe5" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.allocUnsafe(size)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L339&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.allocUnsafe (size) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L339&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86e43f6edbc5b8167cea5a836ddcaea95350c1d0" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.allocUnsafeSlow(size)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.allocUnsafeSlow (size) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L349&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00b00d723cbd9373eb70e3428493296f8775d55d" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.byteLength(string[, encoding])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.byteLength (string [, encoding]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L556&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a4b100e5aeee6d2ef611bc39a6eaf423c586cc2" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.compare(buf1, buf2)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L478&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.compare (buf1, buf2) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L478&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c605df86339fa80c38fb11bfcb08f5bfe7302a88" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.concat(list[, totalLength])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.concat (list [, totalLength]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L500&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef8e43b8edb032504b82ee3dd2f60ea929fb6aff" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(array)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.from (array) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12be169b38b981d89e1db463bcda8517c860d3c8" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.from (arrayBuffer [, byteOffset [, length]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4de54c149a71d5b78b579751a9dc245f37848cc" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(buffer)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.from (buffer) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9494cd46f5ae3b535bc3943acba5b4db19453fa5" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(object[, offsetOrEncoding[, length]])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.from (object [, offsetOrEncoding [, length]]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0595098369046930958f6b9830440c03bf1370fd" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.from(string[, encoding])&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.from (string [, encoding]) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L264&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62c86e84072bc4c8feeed65e43f41328af790778" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.isBuffer(obj)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L474&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.isBuffer (obj) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L474&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4789044f0b05a25b98df355135b972c8c20e68fe" translate="yes" xml:space="preserve">
          <source>Class Method: Buffer.isEncoding(encoding)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L494&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 메소드 : Buffer.isEncoding (encoding) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L494&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="336213b6b5e5ec95aa5e83647d4c38b8f2b0a3d7" translate="yes" xml:space="preserve">
          <source>Class Method: ECDH.convertKey(key, curve[, inputEncoding[, outputEncoding[, format]]])</source>
          <target state="translated">클래스 메소드 : ECDH.convertKey (키, 곡선 [, inputEncoding [, outputEncoding [, 형식]]])</target>
        </trans-unit>
        <trans-unit id="b15f11a262a1df7da3c3768795bea76a9e35e5d6" translate="yes" xml:space="preserve">
          <source>Class Property: Buffer.poolSize&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L103&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 속성 : Buffer.poolSize &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/buffer.js#L103&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b5d8ffd398b6a271dcf4e35e9c7c0a7b63bc79f" translate="yes" xml:space="preserve">
          <source>Class property: &lt;code&gt;Buffer.poolSize&lt;/code&gt;</source>
          <target state="translated">클래스 속성 : &lt;code&gt;Buffer.poolSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21b6b3f4f97d2f73dbcd52c26d598e0cad6ab55c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AbortController&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ab3c2b9e1ee6f89822a503535f1e3053fa600a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AbortSignal&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6357782933d24ce3f5d8506cd28e2a5c555a03d0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesCbcParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876ffe3e1ccdd0607b9b7dabb9fe750903ce3b93" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesCtrParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a513a54fc242ef5e0997cf779f3b817abb7c1f86" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesGcmParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd758f9c33b6e6afa98fd56ebf865dd885358586" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3186dc3b18c29d3556b64bc6c44b51bfe54d0e77" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesKeyGenParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75925b7591df216c963c830f0962770184800776" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AesKwParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27501a5955ee17472ff57d63cea79162a8329776" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AssertionError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;AssertionError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87212b23b1401aea44731c43dd87fcc56c01fb2d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncHook&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;AsyncHook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09290e79a490339e8ffc7b59c31d7644a190928e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncLocalStorage&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;AsyncLocalStorage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6096c601317e64825c0710988967d5dc7841825d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;AsyncResource&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;AsyncResource&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bdaf759fbbee4af89db0cb0fe46048bf47809b1" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;BroadcastChannel extends EventTarget&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293f6a8c7d94b1a255b19cff7e155f8d30685ba" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;BrotliOptions&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;BrotliOptions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f828fd42665db8f6f2a9dd5050f327334772bbce" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Buffer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15f3b14c8f49ad2efe6de4d9834109175a935e7e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Certificate&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Certificate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d9fb1a44575152d4523b96887206a422a0a71cc" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Channel&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df6b98aaf4cf1d51ebf78eb87894510f3ef3cb9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ChildProcess&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ChildProcess&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7a9e5b624df1e9a13f51a0c843b96ca3d7f4451" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Cipher&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Cipher&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc27203bb7e040f46b594d99b94908da7c27e61c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ClientHttp2Session&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ClientHttp2Session&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0f07de9dddffe2d5cb06d46e3c4f07a77a79631" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ClientHttp2Stream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ClientHttp2Stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e516509baa6bce4ea4b3532205b4b8f110dec888" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Console&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Console&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2fb09db6d8076b3b277185beacc0ac5c2c2d88c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Crypto&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f86064439205a54e51dfb91b763649a0ae08f4b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;CryptoKey&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48222413d30a9ed441c4dc501fe03c46bf10b5ec" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;CryptoKeyPair&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e4f8271ddb6139edc4bc1ee53e4e0ec34d565" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Decipher&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Decipher&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c98418180b8901301f3817ad89ee0677cff2acab" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;DiffieHellman&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;DiffieHellman&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4ae295a9dec527ce8b322d09a92902a4d9d2a37" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;DiffieHellmanGroup&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;DiffieHellmanGroup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0b6752b069e495ff6e1c9ff23e52077acbeb537" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Domain&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Domain&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9f63da69bd63329259868acca2392ed4f496dd6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ECDH&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ECDH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc916de07b06db51721973a6c8c1c12268a19382" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EcKeyGenParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d8492665f26e75aabe73fb3231e0df0ec38494" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EcKeyImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f423d5d4ffc2a0808e450624f595823e4e28eadf" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EcdhKeyDeriveParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd4f3365eebf418b434bb9117e2d4cc49849a56" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EcdsaParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd65832b9171e15f2f7591fcd8819aeca715c28" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Error&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38cd5ed37a967c316999a87b71c00354a4f16ab0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31db6329b79fbaa1a55bfdc7dc535bcf8b140224" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EventEmitter&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;EventEmitter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8fa930cde32a135dfb052005b9b8c9ceee18bae" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;EventTarget&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;EventTarget&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02d0ade417a6aad158118b0dc077e81c0495971c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;FileHandle&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;FileHandle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c8753e7d921543124c3b1d881243e6fd8b65db9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Hash&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Hash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54c9819d29871dcd8e030d09624328d125c1e202" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Histogram&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Histogram&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="748466e006bbab17ab22a7aee26b7102be66a596" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;HkdfParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddadc60603371e897e29f2c4ff6d3e0239507ba" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Hmac&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Hmac&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a3cf3e9dac9b06cfadc66a8d9411de4e68ef892" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;HmacImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f12cbb16e0ec2abbe19e1286a2667a4ff2cea" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;HmacKeyGenParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbef522f225347cfce1f51be1853424f749975f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;HmacParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c7e4541eaaf5f94366e368bcd12c6bb0b0590d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2SecureServer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Http2SecureServer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="394b73a3c5ffeb6c78b92ba7030c287b58f626ec" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Server&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Http2Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="169ad8eb0a83c8810b250c3aff40c76042a418f4" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Session&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Http2Session&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48e124237bc25da608afe321f1818330deef798d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Http2Stream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Http2Stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cad876c3d9b85c8f04e09542c0ffe9223cc252e7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Immediate&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Immediate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9289ec1ae4be07bf51d67fda5b97372b9546696" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Interface&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Interface&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="067fc60a88043b100bd9abd7e66333e05b0f2e59" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;KeyObject&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;KeyObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c2c061cbe7813597897703757964e7f550272c0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;MessageChannel&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;MessageChannel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4f9a28178ccf618b92d8cf93b1161d5ad01c62b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;MessagePort&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;MessagePort&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ed69c4cc40929afade4732ac635ec843e6168cc" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeDhImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d097b7ad67c8f26df9ec64355be87dbf57eb17b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeDsaImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aa15eaffdfada38a178a57715aadc1a47f843b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeDsaKeyGenParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee4b415fb93ee69e639cb4cccee002d7c0fddf" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeDsaSignParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abed10363fb294c297e130d888966f8cee6bfec8" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeEventTarget extends EventTarget&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;NodeEventTarget extends EventTarget&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fc063078d240b305ae9dc0fc624cece1dd0a4b1" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeEventTarget&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fd821ab8aba587dc464b386f0e24f9e70d69c0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeScryptImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6bdbc800cf610ecb9986a11b0bbf0c8c95d04e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;NodeScryptParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e67f8295d7f905dfec697e65350295cf83de467" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Options&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Options&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edd110a5c65f91bd16634121b3eb027ed483ef26" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Pbkdf2ImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03de0d096c5822584298aec2eddcec35cb0bceaf" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Pbkdf2Params&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d25f3e7e930c852cb28178512907a74085c4bd" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceEntry&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;PerformanceEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5201cd1f418bb602c826aa4061968b37ab4aeb5d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceNodeTiming extends PerformanceEntry&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;PerformanceNodeTiming extends PerformanceEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfd44b04116199a10d6829c83edbe06fc80f9a7e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceNodeTiming&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2148126d641342d13ec4b14177524510183a8f8e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;PerformanceObserverEntryList&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;PerformanceObserverEntryList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="445a01dbce603063da7314443db8939cb66139c4" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicClientSession extends QuicSession&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287ac0acafe3304a52f7ebed5e84ed22b79810c3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicEndpoint&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948dccc7ecee6f834642a4f6fca64ae1a3bc6fb9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicServerSession extends QuicSession&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2ff29385f5753fb6cdfdb127920f7747bb8202" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicSession extends EventEmitter&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6368dbf63ad1773aa7999f163ed671924ddede6a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicSocket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef85eac08e0b6a4b7c0aa234e7eb64e2b269f787" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;QuicStream extends stream.Duplex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be364697bb7a99d7f1fb7f6d1719c993a4280526" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;REPLServer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;REPLServer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05bb5728be6f9914eeb2a288b27f7182b998cea6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RangeError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;RangeError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="993c430fc1095e2501d731ef15fe0f504e884e15" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ReferenceError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ReferenceError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e814876f535a5457fad63e9202a3d1888e941e61" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RsaHashedImportParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e14f9523ee371fc9d1212563e9e16e24a50906e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RsaHashedKeyGenParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d60e12db88ac3bcd8eff99e0521293d4fe9f3e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RsaOaepParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3bfae176b9292b0701c9eb930ca2e7ae069e87" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RsaPssParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ea169ba7ce4a6bec565c03e84aa2037d45219e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;RsaSignParams&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cd9cfbe08b19d60f39b8819b3441bfe575be0a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ServerHttp2Session&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ServerHttp2Session&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd33870a955bbb2abeacda6984a21cdaabb1cad3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;ServerHttp2Stream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;ServerHttp2Stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87bc8e4345bc100ab81d5da8fe115c9600c653bb" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Sign&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Sign&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4537ec24928e66d81d8e7b93a2ac86d13ee86800" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SlowBuffer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;SlowBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faaa50b185a1f04a06ee0c39f85e30e829320ead" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;StringDecoder&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;StringDecoder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e6dff0de4a153e762523c1da7da0715417ae97c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SubtleCrypto&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801bc2dafd82f3e1019a111b1422d5ac816bb4fa" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SyntaxError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;SyntaxError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="daed51b13eda51c364ec171bca588b2882de1765" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;SystemError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;SystemError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b090d270dde3a420368de8207da39e89fe06e74c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Timeout&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Timeout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d3795fd2be1714ba689b9815da9abd174a4dbe" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;TypeError&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;TypeError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d9eda72439e4e1f0093c2479254b59b89668722" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;URL&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c16e68f95f5c4f86d8d6aad5742ecb3434bb4ad8" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;URLSearchParams&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;URLSearchParams&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d07fecb03c4d8b846432e5b8f185d9a35c3b39e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Verify&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Verify&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="441fcaf8b5a22d04095b4fe31c1e48c429dffb75" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;WASI&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae94a89f90e9ec8c694bcdcb37a0a4d2ce813a02" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;Worker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da48d8409ad872d80f21315957fcaaf5990834e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;assert.CallTracker&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;assert.CallTracker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70e6f911818263c38883389b4e6f121517f944ec" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dgram.Socket&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;dgram.Socket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1304fa1e1982923f2a6555cb3f204900aa07df9d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dns.Resolver&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;dns.Resolver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad0e4c0144dcc4ee68cfc12599cc32a34e5725b3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;dnsPromises.Resolver&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;dnsPromises.Resolver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db25b4926e9ca3234a1adcfd7f1d27d43d520183" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Dir&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.Dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a263f1f3c2c28caa4bfcafec3b22d1dd545cbee7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Dirent&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.Dirent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d400631423ec217e36a7338fdb2ab3313e2903a9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.FSWatcher&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.FSWatcher&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9be66b6da0283d87f00c35d50b7c40e840a232c" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.ReadStream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.ReadStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0877b27e0f8d90acbcdacc738211b0b918f10b5" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.StatWatcher&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.StatWatcher&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e43479c5868708442559949ebf647672d1f609d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.Stats&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.Stats&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c627777e505fdee0f2cd519876b48090c4c027c5" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;fs.WriteStream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;fs.WriteStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43199a6a15f7e93878aa706cb9f1af67e9076c27" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.Agent&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http.Agent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2d0865a4816d4da588c1a580033ab25cb7c7a93" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.ClientRequest&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http.ClientRequest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d645fddd2883b6506f912f1fd8b490a047ec65a0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.IncomingMessage&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http.IncomingMessage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0f1d676fbfe01cf74ebc4ac17e6cf1be889548b" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.Server&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http.Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68586c3320b8f627f58b69292be72e2539e8d090" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http.ServerResponse&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http.ServerResponse&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20467e5950e2c248b5072c448e7871bf8411c72a" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http2.Http2ServerRequest&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http2.Http2ServerRequest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2842f44ea1464aac4711aedecd39f0da261019ca" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;http2.Http2ServerResponse&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;http2.Http2ServerResponse&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b36810ce3c83edc9a734d4195c8ec551970cc22d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;https.Agent&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;https.Agent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b48c06e2bb9e21b0e025fa27ccb7f0069926cc70" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;https.Server&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;https.Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff60c03821be870b2ffa4e32bdfcc3bed1c9c9b7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;inspector.Session&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;inspector.Session&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9bb91eff141b2dc0d4caf6e00c2cf53bdc00c98" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;module.SourceMap&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;module.SourceMap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a773c275897784257bc2e12fc1f44534ccb1346" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;net.BlockList&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff8763bb71dd01ee1a8657b94eec7f9708c9bb2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;net.Server&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;net.Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8127299b83e711d38b1297dc6a814038f25430e7" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;net.Socket&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;net.Socket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99fac2ad3f855661500795b3d84e0e83be7fd37f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;perf_hooks.PerformanceObserver&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;perf_hooks.PerformanceObserver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa046b8446417e649084aab58d362cbefe4e1ce2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Duplex&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;stream.Duplex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27580bc6d067c6f5ea229cf8197e72a21fdc6c8d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.PassThrough&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;stream.PassThrough&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3c08337c9ee22556da4d8fc00d149c9f9fb8b7d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Readable&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;stream.Readable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be5fd6ae02241467eef2d40de233758ddda73a82" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Transform&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;stream.Transform&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f9baf2aa7145db6b485140b54feff170629fadb" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;stream.Writable&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;stream.Writable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2156ae839b992df6df04df3b580406b31aef6b3" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.CryptoStream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tls.CryptoStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8401dbf157c8cc1fa2df2471144c72b503350d6" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.SecurePair&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tls.SecurePair&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfb1f3ade2693e34732f1def4a006ae3c9746341" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.Server&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tls.Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7932b6139c70f60636091df0207b674c64380a72" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tls.TLSSocket&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tls.TLSSocket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f92abbc9ef8ddaf894ed623d77520922815503f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tty.ReadStream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tty.ReadStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a40af4349e8ce9d8a7fbe802ea7420048edab33d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;tty.WriteStream&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;tty.WriteStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d63bc6ce12996f78e68fbd68d1e950ada6493e9" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;util.TextDecoder&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;util.TextDecoder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d25516dbca653ff9386bda8bae61c4ba4a18b7c0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;util.TextEncoder&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;util.TextEncoder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86d9989066047df024f9901ad876ef89b7829045" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.DefaultDeserializer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;v8.DefaultDeserializer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9cdbde4b5a92c8b76f02ad11c2801095a049b72" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.DefaultSerializer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;v8.DefaultSerializer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d4bf0067bc878656416599fcbcedcc383cfd15d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.Deserializer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;v8.Deserializer&lt;/code&gt; . 디시리얼라이저</target>
        </trans-unit>
        <trans-unit id="997527e48ecb3c5ae1757feeab9844ceedc4329d" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;v8.Serializer&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;v8.Serializer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69db96ba8e7ecb3eeb4536145bd3d69de27130bc" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.Module&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;vm.Module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8202eb48804c2007fd6210ba80c301ef5fff275" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.Script&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;vm.Script&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb9b150144c6c5723cc943d4ffd1dfe1766ad50e" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.SourceTextModule&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;vm.SourceTextModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e7d8162eda40278cd8f766647d3cda53a4a0bb2" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;vm.SyntheticModule&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;vm.SyntheticModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec045b2d5df15c204116039fc31dfd075a2e0efe" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.BrotliCompress&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.BrotliCompress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e470bf06bc69ebfc858b296633b6abe2684d5897" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.BrotliDecompress&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.BrotliDecompress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9fe835cb2a40918c087e14831794d7c6e022b36" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Deflate&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.Deflate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f1a9bcad8576c4eea57a59e532bb3a1ccf2f502" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.DeflateRaw&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.DeflateRaw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="066b144ced8e2a40b9c87c7502eb4930c6c90410" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Gunzip&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.Gunzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87e6d8fa5fdbce52a6e1104595111c771ab5a294" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Gzip&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.Gzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="925d87d0551dca3e6c4a36a2ad7978b584864fb0" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Inflate&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.Inflate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="382d3c2d8921f325ff7972d7fc03ec9dce08d29f" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.InflateRaw&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.InflateRaw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="863fb4d97c1043e0eb2c36ea4871a1b8cb0935da" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.Unzip&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.Unzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a49c05641bf8578e5f4a06269eb8a33caec20d56" translate="yes" xml:space="preserve">
          <source>Class: &lt;code&gt;zlib.ZlibBase&lt;/code&gt;</source>
          <target state="translated">클래스 : &lt;code&gt;zlib.ZlibBase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bee5dca77717117d2ea3be02b0a85e8328b8363" translate="yes" xml:space="preserve">
          <source>Class: AssertionError</source>
          <target state="translated">클래스 : AssertionError</target>
        </trans-unit>
        <trans-unit id="6d89c69c426d0de4237b573e03a1b16d394b233d" translate="yes" xml:space="preserve">
          <source>Class: AsyncResource&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/async_hooks.js#L133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : AsyncResource &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/async_hooks.js#L133&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df6870e0644ad25a7dc8c078eb6c7058e89330f0" translate="yes" xml:space="preserve">
          <source>Class: BrotliOptions</source>
          <target state="translated">클래스 : BrotliOptions</target>
        </trans-unit>
        <trans-unit id="ee91340540f9ff1d6eda0c3ff2611deada61f014" translate="yes" xml:space="preserve">
          <source>Class: Buffer</source>
          <target state="translated">클래스 : 버퍼</target>
        </trans-unit>
        <trans-unit id="7ea07e6292c4eec4c072b03d25a18317615da40d" translate="yes" xml:space="preserve">
          <source>Class: Certificate</source>
          <target state="translated">클래스 : 인증서</target>
        </trans-unit>
        <trans-unit id="6dfca7a0da2800bb450081a25c4c6922ded53539" translate="yes" xml:space="preserve">
          <source>Class: ChildProcess</source>
          <target state="translated">클래스 : ChildProcess</target>
        </trans-unit>
        <trans-unit id="5f35c36984a11b5cb8f9df9b480e1dc1ad48cee7" translate="yes" xml:space="preserve">
          <source>Class: Cipher</source>
          <target state="translated">클래스 : 암호</target>
        </trans-unit>
        <trans-unit id="9772ea16b0b16a53ce1f500faf71e260f1958af6" translate="yes" xml:space="preserve">
          <source>Class: ClientHttp2Session</source>
          <target state="translated">클래스 : ClientHttp2Session</target>
        </trans-unit>
        <trans-unit id="a0a74d71da9cf4b5a7d1fb9b972c8d3b30c490d3" translate="yes" xml:space="preserve">
          <source>Class: ClientHttp2Stream</source>
          <target state="translated">클래스 : ClientHttp2Stream</target>
        </trans-unit>
        <trans-unit id="b1030ee1d76abf669683f525fd54f40dadf6ec4a" translate="yes" xml:space="preserve">
          <source>Class: Console</source>
          <target state="translated">클래스 : 콘솔</target>
        </trans-unit>
        <trans-unit id="94be7767bc80ec7404f3c0c38ab40f134438abc1" translate="yes" xml:space="preserve">
          <source>Class: CryptoStream</source>
          <target state="translated">클래스 : CryptoStream</target>
        </trans-unit>
        <trans-unit id="8d4ba27c6fec639f6690b510c5baa27c6f946d5c" translate="yes" xml:space="preserve">
          <source>Class: Decipher</source>
          <target state="translated">클래스 : 해독</target>
        </trans-unit>
        <trans-unit id="d76911ae52c82753ed4161e351b3461546f92494" translate="yes" xml:space="preserve">
          <source>Class: DiffieHellman</source>
          <target state="translated">클래스 : DiffieHellman</target>
        </trans-unit>
        <trans-unit id="401e3ac552c57c25fc587e4be68d0dc6f51e8ed5" translate="yes" xml:space="preserve">
          <source>Class: DiffieHellmanGroup</source>
          <target state="translated">클래스 : DiffieHellmanGroup</target>
        </trans-unit>
        <trans-unit id="36860b0af82237a08fe0c130cbd1111d75165a57" translate="yes" xml:space="preserve">
          <source>Class: Domain</source>
          <target state="translated">클래스 : 도메인</target>
        </trans-unit>
        <trans-unit id="9b7002b14ba51117138db0d08961dd313855042b" translate="yes" xml:space="preserve">
          <source>Class: ECDH</source>
          <target state="translated">클래스 : ECDH</target>
        </trans-unit>
        <trans-unit id="8a3a597e3722137704da8f7dc8649f5cbe6a85e8" translate="yes" xml:space="preserve">
          <source>Class: Error</source>
          <target state="translated">클래스 : 오류</target>
        </trans-unit>
        <trans-unit id="fc67e3d56e36bfdaff45abf4ea446a2ceb036d7b" translate="yes" xml:space="preserve">
          <source>Class: EventEmitter</source>
          <target state="translated">클래스 : EventEmitter</target>
        </trans-unit>
        <trans-unit id="eb651ff99a194e6231d2d6a9ccddb0992d633985" translate="yes" xml:space="preserve">
          <source>Class: Hash</source>
          <target state="translated">클래스 : 해시</target>
        </trans-unit>
        <trans-unit id="7edcd9901bee03137f2198db15bad6fb165c2489" translate="yes" xml:space="preserve">
          <source>Class: Histogram</source>
          <target state="translated">클래스 : 히스토그램</target>
        </trans-unit>
        <trans-unit id="e7712bf8c14c2b069bd415f8ad1039d0fa70ade9" translate="yes" xml:space="preserve">
          <source>Class: Hmac</source>
          <target state="translated">수업 : Hmac</target>
        </trans-unit>
        <trans-unit id="055143c248f2dd8abbfca2cf9d3de70c4542fbf6" translate="yes" xml:space="preserve">
          <source>Class: Http2SecureServer</source>
          <target state="translated">클래스 : Http2SecureServer</target>
        </trans-unit>
        <trans-unit id="53d5b1cdfe9ecfd0452ec17f8c7de326dbf1ab2c" translate="yes" xml:space="preserve">
          <source>Class: Http2Server</source>
          <target state="translated">클래스 : Http2Server</target>
        </trans-unit>
        <trans-unit id="62a12fdafb1c79fe966203dce5ee47d5945e2a80" translate="yes" xml:space="preserve">
          <source>Class: Http2Session</source>
          <target state="translated">클래스 : Http2Session</target>
        </trans-unit>
        <trans-unit id="d0c0e4d5bd1a7f02848afd26d4226fc6b34792c8" translate="yes" xml:space="preserve">
          <source>Class: Http2Stream</source>
          <target state="translated">클래스 : Http2Stream</target>
        </trans-unit>
        <trans-unit id="c9ed8e0724da394f68c9c7aac8606be05926a4c9" translate="yes" xml:space="preserve">
          <source>Class: Immediate</source>
          <target state="translated">클래스 : 즉시</target>
        </trans-unit>
        <trans-unit id="f8ade0adf31707c878b07c45fa034fddbb4dee06" translate="yes" xml:space="preserve">
          <source>Class: Interface</source>
          <target state="translated">클래스 : 인터페이스</target>
        </trans-unit>
        <trans-unit id="ddbf474d24c91341d0b5b926b44739b30142c430" translate="yes" xml:space="preserve">
          <source>Class: KeyObject</source>
          <target state="translated">클래스 : KeyObject</target>
        </trans-unit>
        <trans-unit id="4a11c864b5123ffac1bf02b1987894716e9178e0" translate="yes" xml:space="preserve">
          <source>Class: MessageChannel</source>
          <target state="translated">클래스 : MessageChannel</target>
        </trans-unit>
        <trans-unit id="ee173713a0263c0b29641e9c44da5d8804f1c133" translate="yes" xml:space="preserve">
          <source>Class: MessagePort</source>
          <target state="translated">클래스 : MessagePort</target>
        </trans-unit>
        <trans-unit id="76e5b3f5db3d9c1082c27dfe0954f9d621dc98b1" translate="yes" xml:space="preserve">
          <source>Class: NodeDhDeriveBitsParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15870ee43505bbcbdd3646450789342f1a1d2bb6" translate="yes" xml:space="preserve">
          <source>Class: NodeDhKeyGenParams`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c40d8ac65690b8494f8e70f5c90fed80ace506" translate="yes" xml:space="preserve">
          <source>Class: Options</source>
          <target state="translated">클래스 : 옵션</target>
        </trans-unit>
        <trans-unit id="95e417bb475601667efac8864a2d2f34dcbc6435" translate="yes" xml:space="preserve">
          <source>Class: Performance</source>
          <target state="translated">클래스 : 성능</target>
        </trans-unit>
        <trans-unit id="1febc9f73366381df9c70bb9e370d1872b0ca1fc" translate="yes" xml:space="preserve">
          <source>Class: PerformanceEntry</source>
          <target state="translated">클래스 : PerformanceEntry</target>
        </trans-unit>
        <trans-unit id="660bc1eb3347f57ca0d77ff6760720b78cef946c" translate="yes" xml:space="preserve">
          <source>Class: PerformanceNodeTiming extends PerformanceEntry</source>
          <target state="translated">클래스 : PerformanceNodeTiming으로 PerformanceEntry 확장</target>
        </trans-unit>
        <trans-unit id="49bd12691709816f0ad3cf3f60bf556a88a495e8" translate="yes" xml:space="preserve">
          <source>Class: PerformanceObserver&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/perf_hooks.js#L285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : PerformanceObserver &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/perf_hooks.js#L285&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2d71bddd2159350b0710cec7f08c41e14aad67b" translate="yes" xml:space="preserve">
          <source>Class: PerformanceObserverEntryList</source>
          <target state="translated">클래스 : PerformanceObserverEntryList</target>
        </trans-unit>
        <trans-unit id="7971aa490eae2ba6177d084efef15f00e8a231aa" translate="yes" xml:space="preserve">
          <source>Class: REPLServer</source>
          <target state="translated">클래스 : REPLServer</target>
        </trans-unit>
        <trans-unit id="bb53bf2faac6d90fa3c4bcef9dd2ea033396da60" translate="yes" xml:space="preserve">
          <source>Class: RangeError</source>
          <target state="translated">클래스 : RangeError</target>
        </trans-unit>
        <trans-unit id="1ff1cba0df1133bd5ee2d424e6bfb925546fb9a7" translate="yes" xml:space="preserve">
          <source>Class: ReferenceError</source>
          <target state="translated">클래스 : ReferenceError</target>
        </trans-unit>
        <trans-unit id="d6610a9a095cbb5bceb184ea6ef03375195896d7" translate="yes" xml:space="preserve">
          <source>Class: SecurePair</source>
          <target state="translated">클래스 : SecurePair</target>
        </trans-unit>
        <trans-unit id="73983d4b4ae4bcf52d5358959a5ebcaf0f4db5ff" translate="yes" xml:space="preserve">
          <source>Class: ServerHttp2Session</source>
          <target state="translated">클래스 : ServerHttp2Session</target>
        </trans-unit>
        <trans-unit id="90ecafc208a992e89d97aec23cfba5674695dfa1" translate="yes" xml:space="preserve">
          <source>Class: ServerHttp2Stream</source>
          <target state="translated">클래스 : ServerHttp2Stream</target>
        </trans-unit>
        <trans-unit id="f02b8d27a4e11d427a9c8ffcd8a58e6cb0dcb8fe" translate="yes" xml:space="preserve">
          <source>Class: Sign</source>
          <target state="translated">클래스 : 사인</target>
        </trans-unit>
        <trans-unit id="f402f70409b707e1cf81e329bd1d9cbb04e722ba" translate="yes" xml:space="preserve">
          <source>Class: SlowBuffer</source>
          <target state="translated">클래스 : SlowBuffer</target>
        </trans-unit>
        <trans-unit id="14ea72601a1e4445d77a12385d1928ffeeb3a975" translate="yes" xml:space="preserve">
          <source>Class: StringDecoder</source>
          <target state="translated">클래스 : StringDecoder</target>
        </trans-unit>
        <trans-unit id="c039928f51b3ce557b08b8c161c9776f3919083c" translate="yes" xml:space="preserve">
          <source>Class: SyntaxError</source>
          <target state="translated">클래스 : SyntaxError</target>
        </trans-unit>
        <trans-unit id="6546bd0dc67ac75ecbb21fa8ef97ac2784e2c42a" translate="yes" xml:space="preserve">
          <source>Class: SystemError</source>
          <target state="translated">클래스 : SystemError</target>
        </trans-unit>
        <trans-unit id="ca77ab749f487047c1c339f8f61efb068e74444f" translate="yes" xml:space="preserve">
          <source>Class: Timeout</source>
          <target state="translated">클래스 : 타임 아웃</target>
        </trans-unit>
        <trans-unit id="a07fa94c48261641deb021767e49ce5bbbe00343" translate="yes" xml:space="preserve">
          <source>Class: TypeError</source>
          <target state="translated">클래스 : TypeError</target>
        </trans-unit>
        <trans-unit id="9cbe7b594a816b5b5a63f3cd1339263238406bf2" translate="yes" xml:space="preserve">
          <source>Class: URL</source>
          <target state="translated">클래스 : URL</target>
        </trans-unit>
        <trans-unit id="c1ede861f38dede64144117f0a263f47d5cb3acd" translate="yes" xml:space="preserve">
          <source>Class: URLSearchParams</source>
          <target state="translated">클래스 : URLSearchParams</target>
        </trans-unit>
        <trans-unit id="2c3dbdb817da19e37677c7b22b7b3ea95743a02f" translate="yes" xml:space="preserve">
          <source>Class: Verify</source>
          <target state="translated">클래스 : 확인</target>
        </trans-unit>
        <trans-unit id="d3d940ddc9abe58f39b5d8a8d49d75f2bf5a37cb" translate="yes" xml:space="preserve">
          <source>Class: Worker</source>
          <target state="translated">직업 : 노동자</target>
        </trans-unit>
        <trans-unit id="ee0069323931cb8188be353cd2eff2673625921b" translate="yes" xml:space="preserve">
          <source>Class: assert.AssertionError&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/assert.js#L135&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : assert.AssertionError &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/assert.js#L135&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32620af846c88a6c6e5ef4add6064e4da05a6ea9" translate="yes" xml:space="preserve">
          <source>Class: assert.AssertionError&lt;a href=&quot;https://github.com/nodejs/node/blob/c1da528bc25c9cc5a8240a7b4f136f5968f6e113/lib/assert.js#L150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : assert.AssertionError &lt;a href=&quot;https://github.com/nodejs/node/blob/c1da528bc25c9cc5a8240a7b4f136f5968f6e113/lib/assert.js#L150&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0a941f426549022f94f419d7254db9d31d09323" translate="yes" xml:space="preserve">
          <source>Class: assert.AssertionError&lt;a href=&quot;https://github.com/nodejs/node/blob/f978628b806b6650a90cd47e8b28590224af75e8/lib/assert.js#L165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7646356f2df51dc886844401490ff50a7b8df9" translate="yes" xml:space="preserve">
          <source>Class: dgram.Socket&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dgram.js#L88&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : dgram.Socket &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dgram.js#L88&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f1245d31deaf0cd8a70c45ad46da689a419a765" translate="yes" xml:space="preserve">
          <source>Class: dns.Resolver</source>
          <target state="translated">클래스 : dns.Resolver</target>
        </trans-unit>
        <trans-unit id="5eec419c0c522138b6d28cc206a9e5de84a0c64f" translate="yes" xml:space="preserve">
          <source>Class: dnsPromises.Resolver</source>
          <target state="translated">클래스 : dnsPromises.Resolver</target>
        </trans-unit>
        <trans-unit id="63d596a0474b09de3ce23542bb0817ecd855247d" translate="yes" xml:space="preserve">
          <source>Class: fs.Dirent</source>
          <target state="translated">수업 : fs. Dirent</target>
        </trans-unit>
        <trans-unit id="32bb13d3d8cd1233db6906a10144788baafc15d8" translate="yes" xml:space="preserve">
          <source>Class: fs.FSWatcher</source>
          <target state="translated">수업 : fs.FSWatcher</target>
        </trans-unit>
        <trans-unit id="572eca4917fc3210a922b60070778ee660105b83" translate="yes" xml:space="preserve">
          <source>Class: fs.ReadStream</source>
          <target state="translated">클래스 : fs.ReadStream</target>
        </trans-unit>
        <trans-unit id="1d3e6ac82044e79293f42dd0965dbdbe0823ea5b" translate="yes" xml:space="preserve">
          <source>Class: fs.Stats</source>
          <target state="translated">클래스 : fs.Stats</target>
        </trans-unit>
        <trans-unit id="a2c81974801e4aff8ac1e5ba5973db293f034c82" translate="yes" xml:space="preserve">
          <source>Class: fs.WriteStream</source>
          <target state="translated">클래스 : fs.WriteStream</target>
        </trans-unit>
        <trans-unit id="dd3d2d41e4d8701b85414e4141372fd43c9fe051" translate="yes" xml:space="preserve">
          <source>Class: http.Agent</source>
          <target state="translated">클래스 : http.Agent</target>
        </trans-unit>
        <trans-unit id="858ae2efe19958bc0bcd201c0d05ed287bb41ab6" translate="yes" xml:space="preserve">
          <source>Class: http.ClientRequest</source>
          <target state="translated">클래스 : http.ClientRequest</target>
        </trans-unit>
        <trans-unit id="f0f90a86616b70b7c34a7291a6fc608129d8462e" translate="yes" xml:space="preserve">
          <source>Class: http.IncomingMessage</source>
          <target state="translated">클래스 : http.IncomingMessage</target>
        </trans-unit>
        <trans-unit id="ef0141af934b8c39f1edab875f23ee69096d2056" translate="yes" xml:space="preserve">
          <source>Class: http.Server</source>
          <target state="translated">클래스 : http.Server</target>
        </trans-unit>
        <trans-unit id="cc662b9c387098851edd45a7ed5e318b286d4c31" translate="yes" xml:space="preserve">
          <source>Class: http.ServerResponse</source>
          <target state="translated">클래스 : http.ServerResponse</target>
        </trans-unit>
        <trans-unit id="8ede30dd7e205f2ad51ffd5043b6d2c5253499b8" translate="yes" xml:space="preserve">
          <source>Class: http2.Http2ServerRequest</source>
          <target state="translated">클래스 : http2.Http2ServerRequest</target>
        </trans-unit>
        <trans-unit id="f53b529b3e1e7a29a3a635b33a5a680c1b4a2ad6" translate="yes" xml:space="preserve">
          <source>Class: http2.Http2ServerResponse</source>
          <target state="translated">클래스 : http2.Http2ServerResponse</target>
        </trans-unit>
        <trans-unit id="4d73fc1bdc8c0b1c0bea59de1af87ad1d4d21ef8" translate="yes" xml:space="preserve">
          <source>Class: https.Agent&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L144&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : https.Agent &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L144&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a5ce6b058e98b48dd8ff9073173543677d09416" translate="yes" xml:space="preserve">
          <source>Class: https.Server&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : https.Server &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/https.js#L46&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0073527762c3a38e48ff45f4735d8e0f019fe89" translate="yes" xml:space="preserve">
          <source>Class: inspector.Session</source>
          <target state="translated">클래스 : 관리자. 세션</target>
        </trans-unit>
        <trans-unit id="f7c9efa3f1c0df2ce051ba9dced85f1d7ca51e75" translate="yes" xml:space="preserve">
          <source>Class: net.Server&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L1070&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : net.Server &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L1070&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c728b92ec9ed66645064171f51275b5522d4bad" translate="yes" xml:space="preserve">
          <source>Class: net.Socket&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L236&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : net.Socket &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/net.js#L236&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4585dad1ddb9ee702a469e8b3ce45cb5368dad87" translate="yes" xml:space="preserve">
          <source>Class: stream.Duplex</source>
          <target state="translated">클래스 : stream.Duplex</target>
        </trans-unit>
        <trans-unit id="591fded34eab8e336702db78394cd67506a57fec" translate="yes" xml:space="preserve">
          <source>Class: stream.PassThrough</source>
          <target state="translated">클래스 : stream.PassThrough</target>
        </trans-unit>
        <trans-unit id="e727b34caa07882e0e3d2f424db4c9f32759ef32" translate="yes" xml:space="preserve">
          <source>Class: stream.Readable</source>
          <target state="translated">클래스 : stream.Readable</target>
        </trans-unit>
        <trans-unit id="27c7c100e21b60cfe9f259349393d2d59e19a8d7" translate="yes" xml:space="preserve">
          <source>Class: stream.Transform</source>
          <target state="translated">클래스 : stream.Transform</target>
        </trans-unit>
        <trans-unit id="e7fc0551d9f93663b10b16f1c305f9b6761ccea4" translate="yes" xml:space="preserve">
          <source>Class: stream.Writable</source>
          <target state="translated">클래스 : stream.Writable</target>
        </trans-unit>
        <trans-unit id="cf580adf552f5943b00465f95eb1d451f48f362a" translate="yes" xml:space="preserve">
          <source>Class: tls.Server</source>
          <target state="translated">클래스 : tls.Server</target>
        </trans-unit>
        <trans-unit id="266c110f36269a9dd6d8b7179dcbd694534d7fef" translate="yes" xml:space="preserve">
          <source>Class: tls.TLSSocket</source>
          <target state="translated">클래스 : tls.TLSSocket</target>
        </trans-unit>
        <trans-unit id="8cda23b6d1e9dc869f485f0a6b4ae5cec1c4fcc1" translate="yes" xml:space="preserve">
          <source>Class: tty.ReadStream&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L42&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : tty.ReadStream &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L42&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14c4e5000edbe8baf9291fcfad1d7c5bf7ca76cc" translate="yes" xml:space="preserve">
          <source>Class: tty.WriteStream&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L80&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : tty.WriteStream &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/tty.js#L80&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2176201a8eb17202fda9eada206590ab0d8a5f3b" translate="yes" xml:space="preserve">
          <source>Class: util.TextDecoder</source>
          <target state="translated">클래스 : util.TextDecoder</target>
        </trans-unit>
        <trans-unit id="225a821ad4ae8dd42565de0ab9fc4d91effbf7d9" translate="yes" xml:space="preserve">
          <source>Class: util.TextEncoder</source>
          <target state="translated">클래스 : util.TextEncoder</target>
        </trans-unit>
        <trans-unit id="a1dd6ce5fb062867f583fca6877bd4e08ce6e249" translate="yes" xml:space="preserve">
          <source>Class: vm.Script</source>
          <target state="translated">클래스 : vm.Script</target>
        </trans-unit>
        <trans-unit id="9c140e48cc581e4c97b858c58702bd26a98f14d8" translate="yes" xml:space="preserve">
          <source>Class: vm.SourceTextModule</source>
          <target state="translated">클래스 : vm.SourceTextModule</target>
        </trans-unit>
        <trans-unit id="3c540cf26c882374d4b6c797ba59f97b5c4df290" translate="yes" xml:space="preserve">
          <source>Class: zlib.BrotliCompress&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L815&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.BrotliCompress &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L815&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21ad982768a17be628b475c2929baf1a8593f2b4" translate="yes" xml:space="preserve">
          <source>Class: zlib.BrotliDecompress&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L823&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.BrotliDecompress &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L823&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f550d3b072eb35f957e9787e2fc811a678680a42" translate="yes" xml:space="preserve">
          <source>Class: zlib.Deflate&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L695&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.Deflate &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L695&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f821e12183e76cf6291d97bc0a98ebc35e5016e1" translate="yes" xml:space="preserve">
          <source>Class: zlib.DeflateRaw&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L727&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.DeflateRaw &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L727&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e85c06b5b12e00902e6cd83d551a80afd898508" translate="yes" xml:space="preserve">
          <source>Class: zlib.Gunzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.Gunzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L719&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7c198a3e256c2e36c67572a7f0cc7ecc2ece130" translate="yes" xml:space="preserve">
          <source>Class: zlib.Gzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L711&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.Gzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L711&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4322d196f046aebe16fe93df5fca9302e83174e4" translate="yes" xml:space="preserve">
          <source>Class: zlib.Inflate&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L703&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.Inflate &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L703&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1916fabc525d061eecf452a39a4962c7e46d94c3" translate="yes" xml:space="preserve">
          <source>Class: zlib.InflateRaw&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L736&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.InflateRaw &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L736&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1350d4e7ef7676f24a19f7dd15e6ec215e8aa27" translate="yes" xml:space="preserve">
          <source>Class: zlib.Unzip&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">클래스 : zlib.Unzip &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/zlib.js#L744&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="980ed6673f63de346b3d489473fbef175ec32df7" translate="yes" xml:space="preserve">
          <source>Class: zlib.ZlibBase</source>
          <target state="translated">클래스 : zlib.ZlibBase</target>
        </trans-unit>
        <trans-unit id="aa9f433a09a0d71ab935003b1ebd93f8e70f503c" translate="yes" xml:space="preserve">
          <source>Cleanup hooks may now be asynchronous.</source>
          <target state="translated">이제 정리 후크가 비동기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccfc0c40cf622522920c5b4968f2565c85442775" translate="yes" xml:space="preserve">
          <source>Cleanup on exit of the current Node.js instance</source>
          <target state="translated">현재 Node.js 인스턴스 종료시 정리</target>
        </trans-unit>
        <trans-unit id="8cbea0dd03d659f6fc0af020526f99576b13aca1" translate="yes" xml:space="preserve">
          <source>Clear screen</source>
          <target state="translated">화면 지우기</target>
        </trans-unit>
        <trans-unit id="91862a19aff09c25114045bc03ad2d37e6d85e0f" translate="yes" xml:space="preserve">
          <source>Client and server QuicSessions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83530e1815352d08d7559083ed9fe11b37d61b98" translate="yes" xml:space="preserve">
          <source>Client connects to the server and sends an &lt;code&gt;'OCSPRequest'&lt;/code&gt; (via the status info extension in ClientHello).</source>
          <target state="translated">클라이언트는 서버에 연결하고 (ClientHello의 상태 정보 확장을 통해) &lt;code&gt;'OCSPRequest'&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9b7cc2a0a237b02bd18c475c2ab878b20b029ff1" translate="yes" xml:space="preserve">
          <source>Client validates the response and either destroys the socket or performs a handshake.</source>
          <target state="translated">클라이언트는 응답을 확인하고 소켓을 파괴하거나 핸드 셰이크를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5d3a08e6b324632a99205ff0c000dd4b31ad8fa4" translate="yes" xml:space="preserve">
          <source>Client-initiated renegotiation attack mitigation</source>
          <target state="translated">클라이언트 시작 재협상 공격 완화</target>
        </trans-unit>
        <trans-unit id="3f05c67d59ace95834a9f9bd821143e71e8efc0a" translate="yes" xml:space="preserve">
          <source>Client-side example</source>
          <target state="translated">클라이언트 측 예</target>
        </trans-unit>
        <trans-unit id="5b197dbe61813078ff8e2b5e607665e44a4c4995" translate="yes" xml:space="preserve">
          <source>ClientHttp2Session</source>
          <target state="translated">ClientHttp2Session</target>
        </trans-unit>
        <trans-unit id="7fc70a335ae1867faaff77960fa66720966f0085" translate="yes" xml:space="preserve">
          <source>ClientHttp2Stream</source>
          <target state="translated">ClientHttp2Stream</target>
        </trans-unit>
        <trans-unit id="9356a7830a1ab4cfef496cc697121b119fad5c6f" translate="yes" xml:space="preserve">
          <source>Close the underlying handle.</source>
          <target state="translated">기본 핸들을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ae50316a0aa7c9805d6ed82df38055ff62f8937a" translate="yes" xml:space="preserve">
          <source>Close the underlying socket and stop listening for data on it. If a callback is provided, it is added as a listener for the &lt;a href=&quot;#dgram_event_close&quot;&gt;&lt;code&gt;'close'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">기본 소켓을 닫고 데이터 수신을 중지하십시오. 콜백이 제공되면 &lt;a href=&quot;#dgram_event_close&quot;&gt; &lt;code&gt;'close'&lt;/code&gt; &lt;/a&gt; 이벤트에 대한 리스너로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="67bf3868b4ddbc544a9864568f318b525553d921" translate="yes" xml:space="preserve">
          <source>Closes and destroys the &lt;code&gt;QuicEndpoint&lt;/code&gt; instance making it unusable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb96016ec3931951884e3f7e2837e6b2d04d5d95" translate="yes" xml:space="preserve">
          <source>Closes and destroys the &lt;code&gt;QuicEndpoint&lt;/code&gt;. Returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved once the &lt;code&gt;QuicEndpoint&lt;/code&gt; has been destroyed, or rejects if the &lt;code&gt;QuicEndpoint&lt;/code&gt; is destroyed with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f981ea51f96231660aa5788f51d067f6344e301f" translate="yes" xml:space="preserve">
          <source>Closes the &lt;code&gt;BroadcastChannel&lt;/code&gt; connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e3ae6a3f36eae2e25af6e890e376b2aff0609c" translate="yes" xml:space="preserve">
          <source>Closes the &lt;code&gt;Http2Stream&lt;/code&gt; instance by sending an &lt;code&gt;RST_STREAM&lt;/code&gt; frame to the connected HTTP/2 peer.</source>
          <target state="translated">연결된 HTTP / 2 피어에 &lt;code&gt;RST_STREAM&lt;/code&gt; 프레임을 전송 하여 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스를 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="4e9c9e37c1fb9dd2f2132dccfe33ac3c0670b23d" translate="yes" xml:space="preserve">
          <source>Closes the &lt;code&gt;QuicStream&lt;/code&gt; by ending both sides of the &lt;code&gt;QuicStream&lt;/code&gt;&lt;code&gt;Duplex&lt;/code&gt;. Returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved once the &lt;code&gt;QuicStream&lt;/code&gt; has been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90aa5c8c38b8453581e4f0a38f89caf25684cae6" translate="yes" xml:space="preserve">
          <source>Closes the IPC channel between parent and child, allowing the child to exit gracefully once there are no other connections keeping it alive. After calling this method the &lt;code&gt;subprocess.connected&lt;/code&gt; and &lt;code&gt;process.connected&lt;/code&gt; properties in both the parent and child (respectively) will be set to &lt;code&gt;false&lt;/code&gt;, and it will be no longer possible to pass messages between the processes.</source>
          <target state="translated">부모와 자식 사이의 IPC 채널을 닫아 다른 연결이 없으면 자식이 정상적으로 종료되도록합니다. 이 메소드를 호출 한 후 상위 및 하위 (각각) 의 &lt;code&gt;subprocess.connected&lt;/code&gt; 및 &lt;code&gt;process.connected&lt;/code&gt; 특성이 &lt;code&gt;false&lt;/code&gt; 로 설정되며 더 이상 프로세스간에 메시지를 전달할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b23804a0449627c9510bdc5ef3368ac152ce239a" translate="yes" xml:space="preserve">
          <source>Closes the file descriptor.</source>
          <target state="translated">파일 디스크립터를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7bd60970fde2583fb6e37ac641bc3823907421c1" translate="yes" xml:space="preserve">
          <source>Closes the file handle after waiting for any pending operation on the handle to complete.</source>
          <target state="translated">핸들에서 보류중인 작업이 완료되기를 기다린 후 파일 핸들을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="d75dc68bbdd56c9cbd58d4bbdabda84bcca2c47f" translate="yes" xml:space="preserve">
          <source>Cluster</source>
          <target state="translated">Cluster</target>
        </trans-unit>
        <trans-unit id="80a64dd5f45d9fb715134e38ce4612066b549518" translate="yes" xml:space="preserve">
          <source>Code repository and issue tracker</source>
          <target state="translated">코드 저장소 및 문제 추적기</target>
        </trans-unit>
        <trans-unit id="8d8cae0cc7280b8132a5dbc4f717c5748e2447d5" translate="yes" xml:space="preserve">
          <source>Coerce JavaScript values to specific JavaScript types (such as &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;).</source>
          <target state="translated">JavaScript 값을 특정 JavaScript 유형 (예 : &lt;code&gt;Number&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; ) 으로 강제 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b53e899409de575e1244cfe6fa90eaec6eb9f30b" translate="yes" xml:space="preserve">
          <source>Coerce a &lt;code&gt;Timeout&lt;/code&gt; to a primitive. The primitive can be used to clear the &lt;code&gt;Timeout&lt;/code&gt;. The primitive can only be used in the same thread where the timeout was created. Therefore, to use it across &lt;a href=&quot;worker_threads&quot;&gt;&lt;code&gt;worker_threads&lt;/code&gt;&lt;/a&gt; it must first be passed to the correct thread. This allows enhanced compatibility with browser &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;setInterval()&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; 을 기본 요소로 강제합니다 . 프리미티브를 사용하여 &lt;code&gt;Timeout&lt;/code&gt; 을 지울 수 있습니다 . 프리미티브는 제한 시간이 작성된 동일한 스레드에서만 사용할 수 있습니다. 따라서 &lt;a href=&quot;worker_threads&quot;&gt; &lt;code&gt;worker_threads&lt;/code&gt; &lt;/a&gt; 에서 사용 하려면 먼저 올바른 스레드로 전달되어야합니다. 이를 통해 브라우저 &lt;code&gt;setTimeout()&lt;/code&gt; 및 &lt;code&gt;setInterval()&lt;/code&gt; 구현 과의 호환성이 향상됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef502b0ca48abd2a5e8cec682e639ff6c32d7286" translate="yes" xml:space="preserve">
          <source>Coercing the offsets to integers now handles values outside the 32-bit integer range properly.</source>
          <target state="translated">오프셋을 정수로 강제 변환하면 32 비트 정수 범위 밖의 값이 올바르게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="1bfa05f9053ea71498a731db3bc6837c2172ca1a" translate="yes" xml:space="preserve">
          <source>Collecting HTTP/2 Performance Metrics</source>
          <target state="translated">HTTP / 2 성능 메트릭 수집</target>
        </trans-unit>
        <trans-unit id="529028624ea8e23bec9437eed43351cd264fe1ce" translate="yes" xml:space="preserve">
          <source>Collecting HTTP/2 performance metrics</source>
          <target state="translated">HTTP / 2 성능 메트릭 수집</target>
        </trans-unit>
        <trans-unit id="c5f5792195fb8136faeef77ceb20296d74989e1c" translate="yes" xml:space="preserve">
          <source>Color output (if enabled) of &lt;code&gt;util.inspect&lt;/code&gt; is customizable globally via the &lt;code&gt;util.inspect.styles&lt;/code&gt; and &lt;code&gt;util.inspect.colors&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;util.inspect&lt;/code&gt; 의 색상 출력 (활성화 된 경우)은 &lt;code&gt;util.inspect.styles&lt;/code&gt; 및 &lt;code&gt;util.inspect.colors&lt;/code&gt; 속성을 통해 전역 적으로 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0d8230784db766154d6c1ff4966e49efa892e1f" translate="yes" xml:space="preserve">
          <source>Color styling uses ANSI control codes that may not be supported on all terminals. To verify color support use &lt;a href=&quot;tty#tty_writestream_hascolors_count_env&quot;&gt;&lt;code&gt;tty.hasColors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">색상 스타일은 모든 터미널에서 지원되지 않을 수있는 ANSI 제어 코드를 사용합니다. 색상 지원을 확인하려면 &lt;a href=&quot;tty#tty_writestream_hascolors_count_env&quot;&gt; &lt;code&gt;tty.hasColors()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b91918e82d5cef17a745f0886369f20996ba6c7" translate="yes" xml:space="preserve">
          <source>Command Line Options</source>
          <target state="translated">명령 줄 옵션</target>
        </trans-unit>
        <trans-unit id="f0cab561b2d1b6a50046aaac51d5900407780ea5" translate="yes" xml:space="preserve">
          <source>Command reference</source>
          <target state="translated">명령 참조</target>
        </trans-unit>
        <trans-unit id="f67e000a046a21604b2818c94a17c7ddab8e2442" translate="yes" xml:space="preserve">
          <source>Command-line options</source>
          <target state="translated">명령 줄 옵션</target>
        </trans-unit>
        <trans-unit id="0f0b4b72394982e026b43cb2db09fa5145ad7301" translate="yes" xml:space="preserve">
          <source>Commands and Special Keys</source>
          <target state="translated">명령 및 특수 키</target>
        </trans-unit>
        <trans-unit id="4e1ca4b72c5872b942d411ffa31f6464b505951e" translate="yes" xml:space="preserve">
          <source>Commands and special keys</source>
          <target state="translated">명령 및 특수 키</target>
        </trans-unit>
        <trans-unit id="92be5fa035fee22260aba9f79a65963da742ee1d" translate="yes" xml:space="preserve">
          <source>Common System Errors</source>
          <target state="translated">일반적인 시스템 오류</target>
        </trans-unit>
        <trans-unit id="ef08deaf3f4c249bbe9a48bd8e7379d9bb44230b" translate="yes" xml:space="preserve">
          <source>Common system errors</source>
          <target state="translated">일반적인 시스템 오류</target>
        </trans-unit>
        <trans-unit id="8033c63f80a0687faa646f40064ddca5ac7658a0" translate="yes" xml:space="preserve">
          <source>CommonJS Namespaces</source>
          <target state="translated">CommonJS 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="ac7f0c8b47fa8755de2e6a42fa5925842da149a7" translate="yes" xml:space="preserve">
          <source>CommonJS modules consist of a &lt;code&gt;module.exports&lt;/code&gt; object which can be of any type.</source>
          <target state="translated">CommonJS 모듈은 모든 유형이 될 수 있는 &lt;code&gt;module.exports&lt;/code&gt; 객체 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="542deb57ecc58fd227e59b53356f94558c609262" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and Native Modules</source>
          <target state="translated">CommonJS, JSON 및 기본 모듈</target>
        </trans-unit>
        <trans-unit id="cf0e4eba6367908e6a37758a03578c6a444962e7" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and Native modules can be used with &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CommonJS, JSON 및 Native 모듈은 &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc5d5f8bf1408cd9ec94fd7d33e89df84ef92d7d" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and native modules</source>
          <target state="translated">CommonJS, JSON 및 네이티브 모듈</target>
        </trans-unit>
        <trans-unit id="7abf88640b642b6100fd4713e03f78464f62592e" translate="yes" xml:space="preserve">
          <source>CommonJS, JSON, and native modules can be used with &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CommonJS, JSON 및 네이티브 모듈은 &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53ccb30453ab89dbc276697018900c2f50212b90" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf1&lt;/code&gt; to &lt;code&gt;buf2&lt;/code&gt; typically for the purpose of sorting arrays of &lt;code&gt;Buffer&lt;/code&gt; instances. This is equivalent to calling &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf1.compare(buf2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; 인스턴스의 배열을 정렬하기 위해 일반적으로 &lt;code&gt;buf1&lt;/code&gt; 과 &lt;code&gt;buf2&lt;/code&gt; 를 비교 합니다. 이것은 &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf1.compare(buf2)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ada6a4ede25d56bfe6118bcb823055fa788907a1" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf1&lt;/code&gt; to &lt;code&gt;buf2&lt;/code&gt;, typically for the purpose of sorting arrays of &lt;code&gt;Buffer&lt;/code&gt; instances. This is equivalent to calling &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf1.compare(buf2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스의 배열을 정렬하기 위해 &lt;code&gt;buf1&lt;/code&gt; 과 &lt;code&gt;buf2&lt;/code&gt; 를 비교 합니다. 이것은 &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf1.compare(buf2)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7329f3b38a62c0f324292d3fe25680d52a97fdaa" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;buf&lt;/code&gt; with &lt;code&gt;target&lt;/code&gt; and returns a number indicating whether &lt;code&gt;buf&lt;/code&gt; comes before, after, or is the same as &lt;code&gt;target&lt;/code&gt; in sort order. Comparison is based on the actual sequence of bytes in each &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">비교 &lt;code&gt;buf&lt;/code&gt; 와 &lt;code&gt;target&lt;/code&gt; 하고 있는지 여부를 나타내는 숫자를 반환 &lt;code&gt;buf&lt;/code&gt; 후, 이전에 제공, 또는 동일 &lt;code&gt;target&lt;/code&gt; 정렬 순서입니다. 비교는 각 &lt;code&gt;Buffer&lt;/code&gt; 의 실제 바이트 순서를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="654c715fbc2fff5e31c10b96f4e85a596df737f3" translate="yes" xml:space="preserve">
          <source>Compares the pointer given as &lt;code&gt;type_tag&lt;/code&gt; with any that can be found on &lt;code&gt;js_object&lt;/code&gt;. If no tag is found on &lt;code&gt;js_object&lt;/code&gt; or, if a tag is found but it does not match &lt;code&gt;type_tag&lt;/code&gt;, then &lt;code&gt;result&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. If a tag is found and it matches &lt;code&gt;type_tag&lt;/code&gt;, then &lt;code&gt;result&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">로 주어진 포인터 비교 &lt;code&gt;type_tag&lt;/code&gt; 에서 발견 할 수있는과 &lt;code&gt;js_object&lt;/code&gt; 을 . &lt;code&gt;js_object&lt;/code&gt; 에 태그가 없거나 태그가 있지만 &lt;code&gt;type_tag&lt;/code&gt; 와 일치하지 않는 경우 &lt;code&gt;result&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 . 태그를 발견하고이 일치하면 &lt;code&gt;type_tag&lt;/code&gt; 을 , 그 다음 &lt;code&gt;result&lt;/code&gt; 로 설정되어 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b52e2ee6d651b57fdc9ad10d7bbb24ca5e9c359" translate="yes" xml:space="preserve">
          <source>Comparison details</source>
          <target state="translated">비교 세부 사항</target>
        </trans-unit>
        <trans-unit id="949928fcaffafca4a96e2dcf44af151918d71bd2" translate="yes" xml:space="preserve">
          <source>Compatibility API</source>
          <target state="translated">호환성 API</target>
        </trans-unit>
        <trans-unit id="e1685df32db96b50d7007e22511d7c8fcb7a3937" translate="yes" xml:space="preserve">
          <source>Compatibility with Older Node.js Versions</source>
          <target state="translated">이전 Node.js 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="6413835c55396e8854853b2d37b72e339a275500" translate="yes" xml:space="preserve">
          <source>Compatibility with older Node.js versions</source>
          <target state="translated">이전 Node.js 버전과의 호환성</target>
        </trans-unit>
        <trans-unit id="07d07b5e3b2ed558031b18dcb738c564565b0303" translate="yes" xml:space="preserve">
          <source>Compile-time deprecation.</source>
          <target state="translated">컴파일 타임 지원 중단.</target>
        </trans-unit>
        <trans-unit id="62c7ad14ed9196d03fbbd8778af027d2783d1f59" translate="yes" xml:space="preserve">
          <source>Compiles the given code into the provided context (if no context is supplied, the current context is used), and returns it wrapped inside a function with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">주어진 코드를 제공된 컨텍스트로 컴파일하고 (컨텍스트가 제공되지 않으면 현재 컨텍스트가 사용됨) 지정된 &lt;code&gt;params&lt;/code&gt; 를 사용하여 함수 내부에 래핑 된 코드를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c48a836dcb6a5027e827d0e895d6df08489f9ae" translate="yes" xml:space="preserve">
          <source>Compiles the given code into the provided context/sandbox (if no context is supplied, the current context is used), and returns it wrapped inside a function with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">제공된 코드를 제공된 컨텍스트 / 샌드 박스로 컴파일하고 (컨텍스트가 제공되지 않으면 현재 컨텍스트가 사용됨) 주어진 &lt;code&gt;params&lt;/code&gt; 로 함수 안에 래핑 된 코드를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6bc5a622940147f5fde54e40bd8f9dd42748aa3f" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt;&lt;code&gt;BrotliCompress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt; &lt;code&gt;BrotliCompress&lt;/code&gt; &lt;/a&gt; 로 데이터 청크를 압축하십시오 .</target>
        </trans-unit>
        <trans-unit id="a51ef9aa08748a455d376a484ca7a4ea2014c614" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; 을 사용&lt;/a&gt; 하여 데이터 청크를 압축하십시오 .</target>
        </trans-unit>
        <trans-unit id="882c021e07cd95aa9596d9bb97bbd683575e933a" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt;&lt;code&gt;DeflateRaw&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt; &lt;code&gt;DeflateRaw&lt;/code&gt; &lt;/a&gt; 로 데이터 청크를 압축하십시오 .</target>
        </trans-unit>
        <trans-unit id="ddd950feef64772a2192ddc0fbfad70c8e5937b3" translate="yes" xml:space="preserve">
          <source>Compress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt;&lt;code&gt;Gzip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt; &lt;code&gt;Gzip&lt;/code&gt; &lt;/a&gt; 으로 데이터 청크를 압축하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b836e8e2670339cdd499dfccffc683fa0654654" translate="yes" xml:space="preserve">
          <source>Compress data using deflate, and do not append a &lt;code&gt;zlib&lt;/code&gt; header.</source>
          <target state="translated">deflate를 사용하여 데이터를 압축하고 &lt;code&gt;zlib&lt;/code&gt; 헤더를 추가하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="6a5f382fe2bc977e5ffd68e64b49abcba50f3889" translate="yes" xml:space="preserve">
          <source>Compress data using deflate.</source>
          <target state="translated">수축을 사용하여 데이터를 압축합니다.</target>
        </trans-unit>
        <trans-unit id="5eff9f796879353b5f4b6b64990c52eba1c7edd4" translate="yes" xml:space="preserve">
          <source>Compress data using gzip.</source>
          <target state="translated">gzip을 사용하여 데이터를 압축하십시오.</target>
        </trans-unit>
        <trans-unit id="7d1f912218507ca3cc5b73350cf1bb6c9f78c08b" translate="yes" xml:space="preserve">
          <source>Compress data using the Brotli algorithm.</source>
          <target state="translated">Brotli 알고리즘을 사용하여 데이터를 압축하십시오.</target>
        </trans-unit>
        <trans-unit id="c6c1e5d1d739c448afb871c4436a6df754d47162" translate="yes" xml:space="preserve">
          <source>Compressing HTTP requests and responses</source>
          <target state="translated">HTTP 요청 및 응답 압축</target>
        </trans-unit>
        <trans-unit id="2a729b5fe3cc43023943afc839ec7f014a9775a2" translate="yes" xml:space="preserve">
          <source>Compressing or decompressing a stream (such as a file) can be accomplished by piping the source stream data through a &lt;code&gt;zlib&lt;/code&gt; stream into a destination stream:</source>
          <target state="translated">&lt;code&gt;zlib&lt;/code&gt; 스트림을 통해 소스 스트림 데이터를 대상 스트림 으로 파이프하여 스트림 (예 : 파일)을 압축하거나 압축 해제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1c648b47a9f2e63fd2d2f2fbdddbfee0ea552bb" translate="yes" xml:space="preserve">
          <source>Compressing or decompressing a stream (such as a file) can be accomplished by piping the source stream through a &lt;code&gt;zlib&lt;/code&gt;&lt;code&gt;Transform&lt;/code&gt; stream into a destination stream:</source>
          <target state="translated">스트림 (예 : 파일)을 압축하거나 압축 해제하려면 소스 스트림을 &lt;code&gt;zlib&lt;/code&gt; &lt;code&gt;Transform&lt;/code&gt; 스트림을 통해 대상 스트림 으로 파이핑하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="687646452a200d59908103e90311205bb64151d2" translate="yes" xml:space="preserve">
          <source>Compression Error</source>
          <target state="translated">압축 오류</target>
        </trans-unit>
        <trans-unit id="e3ea1441e134ebbb31bc51cc9d81c6139db0a3c4" translate="yes" xml:space="preserve">
          <source>Compression and decompression are built around the Node.js &lt;a href=&quot;stream&quot;&gt;Streams API&lt;/a&gt;.</source>
          <target state="translated">압축 및 압축 해제는 Node.js &lt;a href=&quot;stream&quot;&gt;Streams API를&lt;/a&gt; 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="f06bcf5b1e1b82469c32de085fda03a5c32340dc" translate="yes" xml:space="preserve">
          <source>Compression levels.</source>
          <target state="translated">압축 수준.</target>
        </trans-unit>
        <trans-unit id="107902d2b7faa488b978b8da1c9fb43aaf256260" translate="yes" xml:space="preserve">
          <source>Compression strategy.</source>
          <target state="translated">압축 전략.</target>
        </trans-unit>
        <trans-unit id="705d2325d10730a4e64b75746d16d86a88621f64" translate="yes" xml:space="preserve">
          <source>Compressor options</source>
          <target state="translated">압축기 옵션</target>
        </trans-unit>
        <trans-unit id="8c06a818419341dcc00c55c4d90cdf72d90fa31a" translate="yes" xml:space="preserve">
          <source>Computes the Diffie-Hellman secret based on a &lt;code&gt;privateKey&lt;/code&gt; and a &lt;code&gt;publicKey&lt;/code&gt;. Both keys must have the same &lt;code&gt;asymmetricKeyType&lt;/code&gt;, which must be one of &lt;code&gt;'dh'&lt;/code&gt; (for Diffie-Hellman), &lt;code&gt;'ec'&lt;/code&gt; (for ECDH), &lt;code&gt;'x448'&lt;/code&gt;, or &lt;code&gt;'x25519'&lt;/code&gt; (for ECDH-ES).</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 및 &lt;code&gt;publicKey&lt;/code&gt; 를 기반으로 Diffie-Hellman 비밀을 계산합니다 . 두 키 모두 동일한 &lt;code&gt;asymmetricKeyType&lt;/code&gt; 을 가져야하며 &lt;code&gt;'dh'&lt;/code&gt; (Diffie-Hellman의 경우), &lt;code&gt;'ec'&lt;/code&gt; (ECDH의 경우), &lt;code&gt;'x448'&lt;/code&gt; 또는 &lt;code&gt;'x25519'&lt;/code&gt; (ECDH-ES의 경우) 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="209cfc803ab4bbccd1b92cc5d64c90559099e286" translate="yes" xml:space="preserve">
          <source>Computes the shared secret using &lt;code&gt;otherPublicKey&lt;/code&gt; as the other party's public key and returns the computed shared secret. The supplied key is interpreted using specified &lt;code&gt;inputEncoding&lt;/code&gt;, and the returned secret is encoded using the specified &lt;code&gt;outputEncoding&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, &lt;code&gt;otherPublicKey&lt;/code&gt; is expected to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;otherPublicKey&lt;/code&gt; 를 상대방의 공개 키로 사용하여 공유 암호를 계산하고 계산 된 공유 암호를 반환합니다. 제공된 키는 지정된 &lt;code&gt;inputEncoding&lt;/code&gt; 을 사용하여 해석 되고 반환 된 비밀은 지정된 &lt;code&gt;outputEncoding&lt;/code&gt; 을 사용하여 인코딩됩니다 . 경우 &lt;code&gt;inputEncoding&lt;/code&gt; 가 제공되지 &lt;code&gt;otherPublicKey&lt;/code&gt; 은 것으로 예상된다 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; , 또는 &lt;code&gt;DataView&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="ad3852bf7998d9f16ec46b178a773a89c513afcb" translate="yes" xml:space="preserve">
          <source>Computes the shared secret using &lt;code&gt;otherPublicKey&lt;/code&gt; as the other party's public key and returns the computed shared secret. The supplied key is interpreted using the specified &lt;code&gt;inputEncoding&lt;/code&gt;, and secret is encoded using specified &lt;code&gt;outputEncoding&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, &lt;code&gt;otherPublicKey&lt;/code&gt; is expected to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;otherPublicKey&lt;/code&gt; 를 상대방의 공개 키로 사용하여 공유 암호를 계산하고 계산 된 공유 암호를 반환합니다. 제공된 키는 지정된 &lt;code&gt;inputEncoding&lt;/code&gt; 을 사용하여 해석 되고 비밀은 지정된 &lt;code&gt;outputEncoding&lt;/code&gt; 을 사용하여 인코딩됩니다 . 경우 &lt;code&gt;inputEncoding&lt;/code&gt; 가 제공되지 &lt;code&gt;otherPublicKey&lt;/code&gt; 은 것으로 예상된다 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;TypedArray&lt;/code&gt; , 또는 &lt;code&gt;DataView&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3d91c827962fadb5ab1b17f7dcc40fe3360e829a" translate="yes" xml:space="preserve">
          <source>Conditional exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48557433e934f9a82413b5e9037175f47265909" translate="yes" xml:space="preserve">
          <source>Conditional exports can also be extended to exports subpaths, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567036cffa91fd1b09762fe647b2d2b8ec9599d8" translate="yes" xml:space="preserve">
          <source>Conditional exports provide a way to map to different paths depending on certain conditions. They are supported for both CommonJS and ES module imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b86197665433281b31512ad141bc4a0e7f614f" translate="yes" xml:space="preserve">
          <source>Conditions continue to be matched in order as with flat conditions. If a nested conditional does not have any mapping it will continue checking the remaining conditions of the parent condition. In this way nested conditions behave analogously to nested JavaScript &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="ad824d940265b366316a0d82798b4bfaaaaa9bca" translate="yes" xml:space="preserve">
          <source>Configuration on module initialization is also available via environment variables:</source>
          <target state="translated">환경 변수를 통해 모듈 초기화 구성도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="fd343cadfd8c4297debd9367427b8e3199a5a455" translate="yes" xml:space="preserve">
          <source>Connect Error</source>
          <target state="translated">연결 오류</target>
        </trans-unit>
        <trans-unit id="019ca1e2c9079a1a064b9c9f761efaac20200ac7" translate="yes" xml:space="preserve">
          <source>Connects a session to the inspector back-end.</source>
          <target state="translated">세션을 인스펙터 백엔드에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cfd483354feaaad4c6488ff4e153b453de9c1f84" translate="yes" xml:space="preserve">
          <source>Connects a session to the inspector back-end. An exception will be thrown if there is already a connected session established either through the API or by a front-end connected to the Inspector WebSocket port.</source>
          <target state="translated">세션을 인스펙터 백엔드에 연결합니다. API를 통해 또는 Inspector WebSocket 포트에 연결된 프런트 엔드에 의해 이미 연결된 세션이있는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6a3ccd6375c4d43fa4d5595d475b4c4c0abaf23f" translate="yes" xml:space="preserve">
          <source>Connects a session to the main thread inspector back-end. An exception will be thrown if this API was not called on a Worker thread.</source>
          <target state="translated">세션을 메인 스레드 인스펙터 백엔드에 연결합니다. 이 API가 작업자 스레드에서 호출되지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7bce5eea9f5285b9caff03061be93178944a6b70" translate="yes" xml:space="preserve">
          <source>Consider this situation:</source>
          <target state="translated">이 상황을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="e52785568ffbed7cc5dfe29cb6cb4924433e7371" translate="yes" xml:space="preserve">
          <source>Considerations when transferring TypedArrays and Buffers</source>
          <target state="translated">TypedArray 및 버퍼 전송시 고려 사항</target>
        </trans-unit>
        <trans-unit id="f65dd03fe32462c1ef50bf727e2875b6d0a13a52" translate="yes" xml:space="preserve">
          <source>Consistently set socket timeout only when the socket connects.</source>
          <target state="translated">소켓이 연결될 때만 소켓 제한 시간을 일관되게 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9f3341d3710b74c1bace9f7d9d287f157faea4f4" translate="yes" xml:space="preserve">
          <source>Console</source>
          <target state="translated">Console</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="6885ebdd7073d6b1008150a4271ba49427d73555" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;tls.TLSSocket&lt;/code&gt; object from an existing TCP socket.</source>
          <target state="translated">기존 TCP 소켓에서 새 &lt;code&gt;tls.TLSSocket&lt;/code&gt; 객체를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="db5f47689fca29a6b2a3dc3a12435f09750e7ad1" translate="yes" xml:space="preserve">
          <source>Constructor: new URL(input[, base])</source>
          <target state="translated">생성자 : 새 URL (input [, base])</target>
        </trans-unit>
        <trans-unit id="6e8280b203fc633489ff031c747d433819075e43" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams()</source>
          <target state="translated">생성자 : new URLSearchParams ()</target>
        </trans-unit>
        <trans-unit id="d7a12d65ee7485d2e8c5b3d322591654410166c6" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(iterable)</source>
          <target state="translated">생성자 : 새로운 URLSearchParams (iterable)</target>
        </trans-unit>
        <trans-unit id="ef957972061dfe971ae7ed8328f33934f82d6362" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(obj)</source>
          <target state="translated">생성자 : 새로운 URLSearchParams (obj)</target>
        </trans-unit>
        <trans-unit id="acb5d88524215896d0eda1d976bf13a13625463b" translate="yes" xml:space="preserve">
          <source>Constructor: new URLSearchParams(string)</source>
          <target state="translated">생성자 : 새로운 URLSearchParams (string)</target>
        </trans-unit>
        <trans-unit id="11a89e914bedec196f22f206b290ec5629177b77" translate="yes" xml:space="preserve">
          <source>Constructor: new inspector.Session()</source>
          <target state="translated">생성자 : new inspector.Session ()</target>
        </trans-unit>
        <trans-unit id="cf9ed2b3923e5608b657c5193c702543f56a3ead" translate="yes" xml:space="preserve">
          <source>Constructor: new stream.Writable([options])</source>
          <target state="translated">생성자 : new stream. 쓰기 가능 ([옵션])</target>
        </trans-unit>
        <trans-unit id="efebf4343b8cda5afd208f14a3c5c74922c3e79e" translate="yes" xml:space="preserve">
          <source>Constructor: new vm.Script(code[, options])</source>
          <target state="translated">생성자 : new vm.Script (code [, options])</target>
        </trans-unit>
        <trans-unit id="bf01f0a8a66bcc77139555e7b0fbc9aef87caedf" translate="yes" xml:space="preserve">
          <source>Constructor: new vm.SourceTextModule(code[, options])</source>
          <target state="translated">생성자 : new vm.SourceTextModule (code [, options])</target>
        </trans-unit>
        <trans-unit id="7a2716cd99df92c674d90bf3be7264f6c1b60a32" translate="yes" xml:space="preserve">
          <source>Consuming Readable Streams with Async Iterators</source>
          <target state="translated">비동기 반복자와 함께 읽을 수있는 스트림 소비</target>
        </trans-unit>
        <trans-unit id="55b8149b797db6c0f28965fd4339088b60844032" translate="yes" xml:space="preserve">
          <source>Consuming readable streams with async iterators</source>
          <target state="translated">비동기 반복기로 읽을 수있는 스트림 사용</target>
        </trans-unit>
        <trans-unit id="c8850220933e5a730ec2dc2548619b4a5ef22513" translate="yes" xml:space="preserve">
          <source>Contains commonly used operating system-specific constants for error codes, process signals, and so on. The specific constants defined are described in &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS constants&lt;/a&gt;.</source>
          <target state="translated">오류 코드, 프로세스 신호 등에 일반적으로 사용되는 운영 체제 별 상수를 포함합니다. 정의 된 특정 상수는 &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS 상수에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2313cde4c4d594475138fe868c498b0196dee663" translate="yes" xml:space="preserve">
          <source>Context properties are not read-only by default. To specify read-only globals, context properties must be defined using &lt;code&gt;Object.defineProperty()&lt;/code&gt;:</source>
          <target state="translated">컨텍스트 속성은 기본적으로 읽기 전용이 아닙니다. 읽기 전용 전역을 지정하려면 &lt;code&gt;Object.defineProperty()&lt;/code&gt; 사용하여 컨텍스트 속성을 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d9f3f1e0279409b35f7d388561f45dd59523090e" translate="yes" xml:space="preserve">
          <source>Context-aware addons</source>
          <target state="translated">상황 인식 애드온</target>
        </trans-unit>
        <trans-unit id="ad25394c09efd907bfecf00713c6f5d1dd3ed976" translate="yes" xml:space="preserve">
          <source>Continue the next loop iteration.</source>
          <target state="translated">다음 루프 반복을 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="517aad1de32c1b4176dc8bd3bf6b9d050c9b89db" translate="yes" xml:space="preserve">
          <source>Continuing the above example, the following skeleton addon implementation illustrates the use of &lt;code&gt;napi_type_tag_object()&lt;/code&gt; and &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt;.</source>
          <target state="translated">위의 예를 계속해서 다음 스켈레톤 애드온 구현은 &lt;code&gt;napi_type_tag_object()&lt;/code&gt; 및 &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="93299bc1cf08a655446ad464b16460a92aa9cf8b" translate="yes" xml:space="preserve">
          <source>Convenience Methods</source>
          <target state="translated">편의 방법</target>
        </trans-unit>
        <trans-unit id="1f619076858d6ded347f81f166e575080deac279" translate="yes" xml:space="preserve">
          <source>Convenience methods</source>
          <target state="translated">편의 방법</target>
        </trans-unit>
        <trans-unit id="97ff5738f21b77c9eec3b3ac05fcd9e8d12a3198" translate="yes" xml:space="preserve">
          <source>Convert from N-API value to a primitive C type</source>
          <target state="translated">N-API 값에서 기본 C 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="42902c990cbceb4f179b06cbf387d78d959552d5" translate="yes" xml:space="preserve">
          <source>Convert from a primitive C type to an N-API value</source>
          <target state="translated">기본 C 유형에서 N-API 값으로 변환</target>
        </trans-unit>
        <trans-unit id="744d12ff097b4cdf6e8d44882fbcbe7fa1351158" translate="yes" xml:space="preserve">
          <source>Converting a &lt;code&gt;Buffer&lt;/code&gt; into a string using one of the above is referred to as decoding, and converting a string into a &lt;code&gt;Buffer&lt;/code&gt; is referred to as encoding.</source>
          <target state="translated">A 변환 &lt;code&gt;Buffer&lt;/code&gt; 전술 중 하나를 사용하여 문자열로 디코딩하고, 문자열로 변환이라고 &lt;code&gt;Buffer&lt;/code&gt; 부호화라고한다.</target>
        </trans-unit>
        <trans-unit id="6b7736b5866f1089792465dadb41af34bd95c7f1" translate="yes" xml:space="preserve">
          <source>Converts the EC Diffie-Hellman public key specified by &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;curve&lt;/code&gt; to the format specified by &lt;code&gt;format&lt;/code&gt;. The &lt;code&gt;format&lt;/code&gt; argument specifies point encoding and can be &lt;code&gt;'compressed'&lt;/code&gt;, &lt;code&gt;'uncompressed'&lt;/code&gt; or &lt;code&gt;'hybrid'&lt;/code&gt;. The supplied key is interpreted using the specified &lt;code&gt;inputEncoding&lt;/code&gt;, and the returned key is encoded using the specified &lt;code&gt;outputEncoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;curve&lt;/code&gt; 로 지정된 EC Diffie-Hellman 공개 키 를 format에서 지정된 &lt;code&gt;format&lt;/code&gt; . &lt;code&gt;format&lt;/code&gt; 인수 지정 코딩 지점과 수 &lt;code&gt;'compressed'&lt;/code&gt; , &lt;code&gt;'uncompressed'&lt;/code&gt; 또는 &lt;code&gt;'hybrid'&lt;/code&gt; . 제공된 키는 지정된 &lt;code&gt;inputEncoding&lt;/code&gt; 을 사용하여 해석 되고 리턴 된 키는 지정된 &lt;code&gt;outputEncoding&lt;/code&gt; 을 사용하여 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="d0346e3fd785f5d99144a1c02b9c2e857197d198" translate="yes" xml:space="preserve">
          <source>Copies data from a region of &lt;code&gt;buf&lt;/code&gt; to a region in &lt;code&gt;target&lt;/code&gt; even if the &lt;code&gt;target&lt;/code&gt; memory region overlaps with &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 메모리 영역이 &lt;code&gt;buf&lt;/code&gt; 와 겹치는 경우에도 &lt;code&gt;buf&lt;/code&gt; 영역에서 &lt;code&gt;target&lt;/code&gt; 의 영역으로 데이터를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="3e2fdc02df0a47f81fe4ecc3ed8f8e6e084d58d5" translate="yes" xml:space="preserve">
          <source>Copies data from a region of &lt;code&gt;buf&lt;/code&gt; to a region in &lt;code&gt;target&lt;/code&gt;, even if the &lt;code&gt;target&lt;/code&gt; memory region overlaps with &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 메모리 영역이 &lt;code&gt;buf&lt;/code&gt; 와 겹치는 경우에도 &lt;code&gt;buf&lt;/code&gt; 영역에서 &lt;code&gt;target&lt;/code&gt; 영역으로 데이터를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="c55f0139cfd5b9e65c5f39963edca4667e1a93a7" translate="yes" xml:space="preserve">
          <source>Copies the passed &lt;code&gt;buffer&lt;/code&gt; data onto a new &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">전달 된 &lt;code&gt;buffer&lt;/code&gt; 데이터를 새 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 에 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="3a78fa347747de6accab57af2e36f26f24b67750" translate="yes" xml:space="preserve">
          <source>Core API</source>
          <target state="translated">핵심 API</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="translated">핵심 모듈</target>
        </trans-unit>
        <trans-unit id="67d35c68c7df776a652523a80899e489b317a9b0" translate="yes" xml:space="preserve">
          <source>Core modules</source>
          <target state="translated">핵심 모듈</target>
        </trans-unit>
        <trans-unit id="c53b1974c86fa9608a82f8d059769ee1122bda7d" translate="yes" xml:space="preserve">
          <source>Core modules are always preferentially loaded if their identifier is passed to &lt;code&gt;require()&lt;/code&gt;. For instance, &lt;code&gt;require('http')&lt;/code&gt; will always return the built in HTTP module, even if there is a file by that name.</source>
          <target state="translated">코어 모듈은 식별자가 &lt;code&gt;require()&lt;/code&gt; 전달되면 항상 우선적으로로드됩니다 . 예를 들어 &lt;code&gt;require('http')&lt;/code&gt; 는 해당 이름의 파일이 있더라도 항상 내장 HTTP 모듈을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18a444bb0eaa5d5c5c70af0097791a7565b4010e" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; abstract operation in the ECMAScript specification.</source>
          <target state="translated">ECMAScript 사양 의 &lt;a href=&quot;https://tc39.es/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; 추상 작업에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="337c2273a123741dbebe1ed7455662a1b80086c0" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduledeclarationlinking&quot;&gt;Link() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduledeclarationlinking&quot;&gt;링크 () 구체적인 방법&lt;/a&gt; 의 필드 &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;순환 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="54f3e4fc3633d7c695b451688db146d47301f39d" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduleevaluation&quot;&gt;Evaluate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;a href=&quot;https://tc39.es/ecma262/#sec-moduleevaluation&quot;&gt;평가 () 구체적인 방법&lt;/a&gt; 의 필드 &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;순환 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="30058252154c7f3803e95e6a2422e4ba07598d74" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; abstract operation in the ECMAScript specification.</source>
          <target state="translated">ECMAScript 사양 의 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-getmodulenamespace&quot;&gt;GetModuleNamespace&lt;/a&gt; 추상 작업에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="89d8020a2038620e82de4de9ad4ab548d1ac8cb7" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation&quot;&gt;Instantiate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation&quot;&gt;인스턴스화 () 구체적인 방법&lt;/a&gt; 의 필드 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;소스 텍스트 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="335aeb0ce7e1295242e1a5b080497af27b11aaa3" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduleevaluation&quot;&gt;Evaluate() concrete method&lt;/a&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-moduleevaluation&quot;&gt;평가 () 구체적인 방법&lt;/a&gt; 의 필드 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;소스 텍스트 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="658703ed3a262a18969f60248ee132196f23b4cd" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;SSL_get_finished&lt;/code&gt; routine in OpenSSL and may be used to implement the &lt;code&gt;tls-unique&lt;/code&gt; channel binding from &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 의 &lt;code&gt;SSL_get_finished&lt;/code&gt; 루틴에 해당하며 &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt; 에서 &lt;code&gt;tls-unique&lt;/code&gt; 채널 바인딩 을 구현하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6bd33cb10079a3c04fe16b0de64bd1b1cae43516" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;SSL_get_peer_finished&lt;/code&gt; routine in OpenSSL and may be used to implement the &lt;code&gt;tls-unique&lt;/code&gt; channel binding from &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt;.</source>
          <target state="translated">OpenSSL 의 &lt;code&gt;SSL_get_peer_finished&lt;/code&gt; 루틴에 해당하며 &lt;a href=&quot;https://tools.ietf.org/html/rfc5929&quot;&gt;RFC 5929&lt;/a&gt; 에서 &lt;code&gt;tls-unique&lt;/code&gt; 채널 바인딩 을 구현하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63d7cbf24593135d66f07b5245c2d90ac41e524d" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[EvaluationError]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; 필드 &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;순환 녹음 모듈&lt;/a&gt; ECMA 스크립트 사양들.</target>
        </trans-unit>
        <trans-unit id="8619ca0519ef68f2c83155b82feff00c5c8697ad" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[EvaluationError]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; 의 필드 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;소스 텍스트 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="a577bec8c2f8bb6807f02f358dead1810bb18476" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[RequestedModules]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;code&gt;[[RequestedModules]]&lt;/code&gt; 필드 &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;순환 녹음 모듈&lt;/a&gt; ECMA 스크립트 사양들.</target>
        </trans-unit>
        <trans-unit id="97b96a087d8c17e6c540a8830c50f96b012edbec" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;[[RequestedModules]]&lt;/code&gt; field of &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;s in the ECMAScript specification.</source>
          <target state="translated">에 해당합니다 &lt;code&gt;[[RequestedModules]]&lt;/code&gt; 의 필드 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;소스 텍스트 모듈 기록&lt;/a&gt; ECMA 스크립트 사양의.</target>
        </trans-unit>
        <trans-unit id="12a47f54079f0b1acfa0c7a09eeb7e114b5f8250" translate="yes" xml:space="preserve">
          <source>Coverage is output as an array of &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/tot/Profiler#type-ScriptCoverage&quot;&gt;ScriptCoverage&lt;/a&gt; objects on the top-level key &lt;code&gt;result&lt;/code&gt;:</source>
          <target state="translated">Coverage는 최상위 키 &lt;code&gt;result&lt;/code&gt; 에 &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/tot/Profiler#type-ScriptCoverage&quot;&gt;ScriptCoverage&lt;/a&gt; 객체 의 배열로 출력됩니다 .</target>
        </trans-unit>
        <trans-unit id="7045a6da4882ca033b605752d377c4eb81b42e3b" translate="yes" xml:space="preserve">
          <source>Coverage output</source>
          <target state="translated">커버리지 출력</target>
        </trans-unit>
        <trans-unit id="7cf6c032fd6ae7c61f1b93da35fc44ebcaf1f1b8" translate="yes" xml:space="preserve">
          <source>Create a new JavaScript object</source>
          <target state="translated">새 JavaScript 개체 만들기</target>
        </trans-unit>
        <trans-unit id="610dd1b37fc977df7dde1d4da1429edaaa5c502d" translate="yes" xml:space="preserve">
          <source>Create a new instance of the &lt;code&gt;inspector.Session&lt;/code&gt; class. The inspector session needs to be connected through &lt;a href=&quot;#inspector_session_connect&quot;&gt;&lt;code&gt;session.connect()&lt;/code&gt;&lt;/a&gt; before the messages can be dispatched to the inspector backend.</source>
          <target state="translated">&lt;code&gt;inspector.Session&lt;/code&gt; 클래스 의 새 인스턴스를 만듭니다 . 인스펙터 세션 은 메시지가 인스펙터 백엔드로 디스패치되기 전에 &lt;a href=&quot;#inspector_session_connect&quot;&gt; &lt;code&gt;session.connect()&lt;/code&gt; &lt;/a&gt; 를 통해 연결 되어야합니다.</target>
        </trans-unit>
        <trans-unit id="54deb817cff3a4a7fdba839fc12d8509a4b8a400" translate="yes" xml:space="preserve">
          <source>Create a new resolver.</source>
          <target state="translated">새 해결자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9bcc409e40ec595c6632ed9d65254ab363ea9e00" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;AsyncIterator&lt;/code&gt; object that iterates through each line in the input stream as a string. This method allows asynchronous iteration of &lt;code&gt;readline.Interface&lt;/code&gt; objects through &lt;code&gt;for await...of&lt;/code&gt; loops.</source>
          <target state="translated">입력 스트림의 각 줄을 문자열로 반복 하는 &lt;code&gt;AsyncIterator&lt;/code&gt; 객체를 만듭니다 . 이 방법은 비동기 반복 할 수 있습니다 &lt;code&gt;readline.Interface&lt;/code&gt; 을 통해 객체 &lt;code&gt;for await...of&lt;/code&gt; 루프.</target>
        </trans-unit>
        <trans-unit id="754da92379b16444b31d5185a99ac03dcdc61432" translate="yes" xml:space="preserve">
          <source>Create client &lt;code&gt;QuicSession&lt;/code&gt; instances;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44ef7baf4d253e9a35902b42e109fa6d31ebf4d" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;#fs_fs_opendir_path_options_callback&quot;&gt;&lt;code&gt;fs.opendir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fs_fs_opendirsync_path_options&quot;&gt;&lt;code&gt;fs.opendirSync()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#fs_fspromises_opendir_path_options&quot;&gt;&lt;code&gt;fsPromises.opendir()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#fs_fs_opendir_path_options_callback&quot;&gt; &lt;code&gt;fs.opendir()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#fs_fs_opendirsync_path_options&quot;&gt; &lt;code&gt;fs.opendirSync()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#fs_fspromises_opendir_path_options&quot;&gt; &lt;code&gt;fsPromises.opendir()&lt;/code&gt; &lt;/a&gt; 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="49faf71491f45e8f62679a49f7c9cffd0d05f4b6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;.stack&lt;/code&gt; property on &lt;code&gt;targetObject&lt;/code&gt;, which when accessed returns a string representing the location in the code at which &lt;code&gt;Error.captureStackTrace()&lt;/code&gt; was called.</source>
          <target state="translated">&lt;code&gt;targetObject&lt;/code&gt; 에 &lt;code&gt;.stack&lt;/code&gt; 속성을 만듭니다.이 속성은 액세스하면 &lt;code&gt;Error.captureStackTrace()&lt;/code&gt; 가 호출 된 코드의 위치를 ​​나타내는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="861ea554e920de38cd6ca9bf8e78d7fc3fdea253" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object and generates a prime of &lt;code&gt;primeLength&lt;/code&gt; bits using an optional specific numeric &lt;code&gt;generator&lt;/code&gt;. If &lt;code&gt;generator&lt;/code&gt; is not specified, the value &lt;code&gt;2&lt;/code&gt; is used.</source>
          <target state="translated">생성 &lt;code&gt;DiffieHellman&lt;/code&gt; 키 교환 대상과의 주요한 발생 &lt;code&gt;primeLength&lt;/code&gt; 의 임의의 특정 숫자를 사용 비트 &lt;code&gt;generator&lt;/code&gt; . 경우 &lt;code&gt;generator&lt;/code&gt; 지정되지 않은 경우, 값 &lt;code&gt;2&lt;/code&gt; 를 사용한다.</target>
        </trans-unit>
        <trans-unit id="94ccec7a1bed4822778508279eba1d3cdea49d1f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object using the supplied &lt;code&gt;prime&lt;/code&gt; and an optional specific &lt;code&gt;generator&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;prime&lt;/code&gt; 와 선택적인 특정 &lt;code&gt;generator&lt;/code&gt; 사용하여 &lt;code&gt;DiffieHellman&lt;/code&gt; 키 교환 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="633f7290cffe7d54d5d107ea22501818af866c84" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Histogram&lt;/code&gt; object that samples and reports the event loop delay over time. The delays will be reported in nanoseconds.</source>
          <target state="translated">시간에 따른 이벤트 루프 지연을 샘플링하고보고 하는 &lt;code&gt;Histogram&lt;/code&gt; 개체를 만듭니다 . 지연은 나노초로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="addb7bc35a2fda9c78340d8017729c3865adb5b2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Promise&lt;/code&gt; that is fulfilled when the &lt;code&gt;EventEmitter&lt;/code&gt; emits the given event or that is rejected if the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt; while waiting. The &lt;code&gt;Promise&lt;/code&gt; will resolve with an array of all the arguments emitted to the given event.</source>
          <target state="translated">&lt;code&gt;EventEmitter&lt;/code&gt; 가 지정된 이벤트를 내보낼 때 충족 되거나 &lt;code&gt;EventEmitter&lt;/code&gt; &lt;code&gt;'error'&lt;/code&gt; 대기하는 동안 '오류' 를 발생 하면 거부 되는 &lt;code&gt;Promise&lt;/code&gt; 를 만듭니다 . &lt;code&gt;Promise&lt;/code&gt; 주어진 이벤트에 방출되는 모든 인수의 배열을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="84d9586a173a523d220f163d6b9034f1ebee6404" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Promise&lt;/code&gt; that is resolved when the &lt;code&gt;EventEmitter&lt;/code&gt; emits the given event or that is rejected when the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt;. The &lt;code&gt;Promise&lt;/code&gt; will resolve with an array of all the arguments emitted to the given event.</source>
          <target state="translated">&lt;code&gt;EventEmitter&lt;/code&gt; 가 지정된 이벤트를 생성 할 때 해결 되거나 &lt;code&gt;EventEmitter&lt;/code&gt; 가 &lt;code&gt;'error'&lt;/code&gt; 를 방출 할 때 거부 되는 &lt;code&gt;Promise&lt;/code&gt; 합니다 . &lt;code&gt;Promise&lt;/code&gt; 주어진 이벤트에 방출되는 모든 인수의 배열을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="f519284c6a4688da71e7f1ec6160dcba10c2f5aa" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object of the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;type&lt;/code&gt; 의 &lt;code&gt;dgram.Socket&lt;/code&gt; 개체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="969be098b1da05dd2bc5a306c3c8264e3355f80f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object of the specified &lt;code&gt;type&lt;/code&gt;. The &lt;code&gt;type&lt;/code&gt; argument can be either &lt;code&gt;'udp4'&lt;/code&gt; or &lt;code&gt;'udp6'&lt;/code&gt;. An optional &lt;code&gt;callback&lt;/code&gt; function can be passed which is added as a listener for &lt;code&gt;'message'&lt;/code&gt; events.</source>
          <target state="translated">지정된 &lt;code&gt;type&lt;/code&gt; 의 &lt;code&gt;dgram.Socket&lt;/code&gt; 객체를 만듭니다 . &lt;code&gt;type&lt;/code&gt; 인수가 될 수 있습니다 &lt;code&gt;'udp4'&lt;/code&gt; 또는 &lt;code&gt;'udp6'&lt;/code&gt; . &lt;code&gt;'message'&lt;/code&gt; 이벤트에 대한 리스너로 추가 된 선택적 &lt;code&gt;callback&lt;/code&gt; 함수를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46ace698cde21ad3955f493363d8d446265cd505" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;dgram.Socket&lt;/code&gt; object. Once the socket is created, calling &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; will instruct the socket to begin listening for datagram messages. When &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; are not passed to &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; the method will bind the socket to the &quot;all interfaces&quot; address on a random port (it does the right thing for both &lt;code&gt;udp4&lt;/code&gt; and &lt;code&gt;udp6&lt;/code&gt; sockets). The bound address and port can be retrieved using &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().port&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dgram.Socket&lt;/code&gt; 객체를 만듭니다 . 소켓이 작성되면 &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; 를 호출하면 소켓이 데이터 그램 메시지 청취를 시작하도록 지시합니다. 시 &lt;code&gt;address&lt;/code&gt; 와 &lt;code&gt;port&lt;/code&gt; 전달되지 않습니다 &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; 메소드는 (그것이 모두 옳은 일을하는 임의의 포트에 &quot;모든 인터페이스&quot;주소로 소켓을 바인딩 &lt;code&gt;udp4&lt;/code&gt; 및 &lt;code&gt;udp6&lt;/code&gt; 소켓). 바인딩 된 주소와 포트는 &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().address&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().port&lt;/code&gt; &lt;/a&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7193d4ef1dae3396c91e4d9d8130268717e69bd" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the &lt;code&gt;Script&lt;/code&gt; constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a &lt;code&gt;Buffer&lt;/code&gt;. This method may be called at any time and any number of times.</source>
          <target state="translated">&lt;code&gt;Script&lt;/code&gt; 생성자의 &lt;code&gt;cachedData&lt;/code&gt; 옵션 과 함께 사용할 수있는 코드 캐시를 만듭니다 . &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 . 이 메서드는 언제든지 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57645e834344545789ed737f1dfabbdb7b7fc6bb" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the &lt;code&gt;SourceTextModule&lt;/code&gt; constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a &lt;code&gt;Buffer&lt;/code&gt;. This method may be called any number of times before the module has been evaluated.</source>
          <target state="translated">&lt;code&gt;SourceTextModule&lt;/code&gt; 생성자의 &lt;code&gt;cachedData&lt;/code&gt; 옵션 과 함께 사용할 수있는 코드 캐시를 만듭니다 . &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 . 이 메서드는 모듈이 평가되기 전에 여러 번 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d15582251fcfe3743db495b81d51ed26272aa3de" translate="yes" xml:space="preserve">
          <source>Creates a code cache that can be used with the Script constructor's &lt;code&gt;cachedData&lt;/code&gt; option. Returns a Buffer. This method may be called at any time and any number of times.</source>
          <target state="translated">스크립트 생성자의 &lt;code&gt;cachedData&lt;/code&gt; 옵션 과 함께 사용할 수있는 코드 캐시를 만듭니다 . 버퍼를 돌려줍니다. 이 메소드는 언제 어디서나 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb46a1832e50ec07e277c4b0cf6fea0d3c2288c9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#assert_class_assert_calltracker&quot;&gt;&lt;code&gt;CallTracker&lt;/code&gt;&lt;/a&gt; object which can be used to track if functions were called a specific number of times. The &lt;code&gt;tracker.verify()&lt;/code&gt; must be called for the verification to take place. The usual pattern would be to call it in a &lt;a href=&quot;process#process_event_exit&quot;&gt;&lt;code&gt;process.on('exit')&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">함수가 특정 횟수만큼 호출되었는지 추적하는 데 사용할 수 있는 새 &lt;a href=&quot;#assert_class_assert_calltracker&quot;&gt; &lt;code&gt;CallTracker&lt;/code&gt; &lt;/a&gt; 개체를 만듭니다 . &lt;code&gt;tracker.verify()&lt;/code&gt; 자리를 차지할 검증을 요구해야합니다. 일반적인 패턴은 &lt;a href=&quot;process#process_event_exit&quot;&gt; &lt;code&gt;process.on('exit')&lt;/code&gt; &lt;/a&gt; 핸들러 에서 호출하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="9cf2b8c4ea0eb4eefc28ec317ad6837af1158c25" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;#tls_class_tls_server&quot;&gt;&lt;code&gt;tls.Server&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;secureConnectionListener&lt;/code&gt;, if provided, is automatically set as a listener for the &lt;a href=&quot;#tls_event_secureconnection&quot;&gt;&lt;code&gt;'secureConnection'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">새로운 &lt;a href=&quot;#tls_class_tls_server&quot;&gt; &lt;code&gt;tls.Server&lt;/code&gt; 를 작성&lt;/a&gt; 합니다. &lt;code&gt;secureConnectionListener&lt;/code&gt; 가 제공되는 경우, 자동 리스너로서 설정 &lt;a href=&quot;#tls_event_secureconnection&quot;&gt; &lt;code&gt;'secureConnection'&lt;/code&gt; &lt;/a&gt; 이벤트.</target>
        </trans-unit>
        <trans-unit id="d173b01aad9dfdc8a52f33573498da41307864c8" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Buffer&lt;/code&gt; containing &lt;code&gt;string&lt;/code&gt;. The &lt;code&gt;encoding&lt;/code&gt; parameter identifies the character encoding of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 을 포함 하는 새 &lt;code&gt;Buffer&lt;/code&gt; 를 작성 합니다 . &lt;code&gt;encoding&lt;/code&gt; 파라미터를 식별 부호화 문자 &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9856649ee604c511286b6abf88c530a2f5a548a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Buffer&lt;/code&gt; containing &lt;code&gt;string&lt;/code&gt;. The &lt;code&gt;encoding&lt;/code&gt; parameter identifies the character encoding to be used when converting &lt;code&gt;string&lt;/code&gt; into bytes.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 을 포함 하는 새로운 &lt;code&gt;Buffer&lt;/code&gt; 를 생성 합니다 . &lt;code&gt;encoding&lt;/code&gt; 변환시 문자 인코딩 파라미터 식별은 사용되는 &lt;code&gt;string&lt;/code&gt; 바이트로.</target>
        </trans-unit>
        <trans-unit id="cf51154b8c41364cbbddecade887b89d2c6563a4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Console&lt;/code&gt; with one or two writable stream instances. &lt;code&gt;stdout&lt;/code&gt; is a writable stream to print log or info output. &lt;code&gt;stderr&lt;/code&gt; is used for warning or error output. If &lt;code&gt;stderr&lt;/code&gt; is not provided, &lt;code&gt;stdout&lt;/code&gt; is used for &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">하나 또는 두 개의 쓰기 가능한 스트림 인스턴스 로 새 &lt;code&gt;Console&lt;/code&gt; 을 만듭니다 . &lt;code&gt;stdout&lt;/code&gt; 은 로그 또는 정보 출력을 인쇄하기위한 쓰기 가능한 스트림입니다. &lt;code&gt;stderr&lt;/code&gt; 은 경고 또는 오류 출력에 사용됩니다. 경우 &lt;code&gt;stderr&lt;/code&gt; 제공되지 않으며, &lt;code&gt;stdout&lt;/code&gt; 사용되는 &lt;code&gt;stderr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d4e1d962e7f5b123017efe6e420af0a8aac8274" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Deserializer&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;Deserializer&lt;/code&gt; 객체를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7872b5d87fca267c6b8f4b8e93ec4b1a28842ac9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Error&lt;/code&gt; object and sets the &lt;code&gt;error.message&lt;/code&gt; property to the provided text message. If an object is passed as &lt;code&gt;message&lt;/code&gt;, the text message is generated by calling &lt;code&gt;message.toString()&lt;/code&gt;. The &lt;code&gt;error.stack&lt;/code&gt; property will represent the point in the code at which &lt;code&gt;new Error()&lt;/code&gt; was called. Stack traces are dependent on &lt;a href=&quot;https://github.com/v8/v8/wiki/Stack-Trace-API&quot;&gt;V8's stack trace API&lt;/a&gt;. Stack traces extend only to either (a) the beginning of &lt;em&gt;synchronous code execution&lt;/em&gt;, or (b) the number of frames given by the property &lt;code&gt;Error.stackTraceLimit&lt;/code&gt;, whichever is smaller.</source>
          <target state="translated">새 &lt;code&gt;Error&lt;/code&gt; 객체를 만들고 &lt;code&gt;error.message&lt;/code&gt; 속성을 제공된 문자 메시지로 설정합니다. 객체가 &lt;code&gt;message&lt;/code&gt; 로 전달되면 &lt;code&gt;message.toString()&lt;/code&gt; 을 호출하여 텍스트 메시지가 생성됩니다 . &lt;code&gt;error.stack&lt;/code&gt; 의 속성이되는 코드의 포인트 대표 할 &lt;code&gt;new Error()&lt;/code&gt; 호출되었다. 스택 추적은 &lt;a href=&quot;https://github.com/v8/v8/wiki/Stack-Trace-API&quot;&gt;V8의 스택 추적 API&lt;/a&gt; 에 따라 다릅니다 . 스택 추적은 (a) &lt;em&gt;동기 코드 실행&lt;/em&gt; 의 시작 또는 (b) &lt;code&gt;Error.stackTraceLimit&lt;/code&gt; 속성이 제공하는 프레임 수 중 더 작은 쪽 까지만 확장 됩니다.</target>
        </trans-unit>
        <trans-unit id="c67c9a49f8d245b9dab680a12fa5bb47d1022d46" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Hash&lt;/code&gt; object that contains a deep copy of the internal state of the current &lt;code&gt;Hash&lt;/code&gt; object.</source>
          <target state="translated">현재 &lt;code&gt;Hash&lt;/code&gt; 개체 의 내부 상태에 대한 전체 복사본을 포함 하는 새 &lt;code&gt;Hash&lt;/code&gt; 개체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c9f35e67567b47c684eeffac3d1e66e7c87f030a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PerformanceMark&lt;/code&gt; entry in the Performance Timeline. A &lt;code&gt;PerformanceMark&lt;/code&gt; is a subclass of &lt;code&gt;PerformanceEntry&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is always &lt;code&gt;'mark'&lt;/code&gt;, and whose &lt;code&gt;performanceEntry.duration&lt;/code&gt; is always &lt;code&gt;0&lt;/code&gt;. Performance marks are used to mark specific significant moments in the Performance Timeline.</source>
          <target state="translated">성능 타임 라인에 새 &lt;code&gt;PerformanceMark&lt;/code&gt; 항목을 만듭니다 . &lt;code&gt;PerformanceMark&lt;/code&gt; 는 의 서브 클래스입니다 &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;code&gt;performanceEntry.entryType&lt;/code&gt; 항상 &lt;code&gt;'mark'&lt;/code&gt; , 누구의 &lt;code&gt;performanceEntry.duration&lt;/code&gt; 는 항상 &lt;code&gt;0&lt;/code&gt; . 성능 마크는 성능 타임 라인에서 중요한 순간을 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a9c508f0e96dc24226b4b314d31b9faf4350b538" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PerformanceMeasure&lt;/code&gt; entry in the Performance Timeline. A &lt;code&gt;PerformanceMeasure&lt;/code&gt; is a subclass of &lt;code&gt;PerformanceEntry&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is always &lt;code&gt;'measure'&lt;/code&gt;, and whose &lt;code&gt;performanceEntry.duration&lt;/code&gt; measures the number of milliseconds elapsed since &lt;code&gt;startMark&lt;/code&gt; and &lt;code&gt;endMark&lt;/code&gt;.</source>
          <target state="translated">성능 타임 라인에 새 &lt;code&gt;PerformanceMeasure&lt;/code&gt; 항목을 만듭니다 . &lt;code&gt;PerformanceMeasure&lt;/code&gt; 는 의 서브 클래스입니다 &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;code&gt;performanceEntry.entryType&lt;/code&gt; 항상 &lt;code&gt;'measure'&lt;/code&gt; , 누구의 &lt;code&gt;performanceEntry.duration&lt;/code&gt; 의 조치 (밀리 초)이 경과 &lt;code&gt;startMark&lt;/code&gt; 및 &lt;code&gt;endMark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba42bd2ef1522141d74454b4c85fc78b302b41e0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Serializer&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;Serializer&lt;/code&gt; 객체를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="587a1edcd84fa14d185b744d17dddfb457d6fe96" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SourceTextModule&lt;/code&gt; instance.</source>
          <target state="translated">새 &lt;code&gt;SourceTextModule&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5f3d7fd224b9e2172664c9deee0c85084b49b0b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;StringDecoder&lt;/code&gt; instance.</source>
          <target state="translated">새로운 &lt;code&gt;StringDecoder&lt;/code&gt; 인스턴스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="e57e0c62b11066d4c81295403c6d96703484378e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SyntheticModule&lt;/code&gt; instance.</source>
          <target state="translated">새 &lt;code&gt;SyntheticModule&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="87db8396c574fc6b711f2bac00caa7973058f54e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;URL&lt;/code&gt; object by parsing the &lt;code&gt;input&lt;/code&gt; relative to the &lt;code&gt;base&lt;/code&gt;. If &lt;code&gt;base&lt;/code&gt; is passed as a string, it will be parsed equivalent to &lt;code&gt;new URL(base)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; 에 상대적인 &lt;code&gt;input&lt;/code&gt; 을 구문 분석하여 새 &lt;code&gt;URL&lt;/code&gt; 객체를 만듭니다 . &lt;code&gt;base&lt;/code&gt; 가 문자열로 전달 되면 &lt;code&gt;new URL(base)&lt;/code&gt; 과 동일하게 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="e98cb535eda047e8f57de53a7926b98bb0ba32ec" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;sourceMap&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c50716411a3db17d970b33b214901d027924525" translate="yes" xml:space="preserve">
          <source>Creates a new ES &lt;code&gt;Module&lt;/code&gt; object.</source>
          <target state="translated">새로운 ES &lt;code&gt;Module&lt;/code&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="4b032e823eb03edd65ef1ba7c46ebbb6f8de2a82" translate="yes" xml:space="preserve">
          <source>Creates a new TCP or &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; server.</source>
          <target state="translated">새로운 TCP 또는 &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; 서버를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4dbd2af6c1d9d533ef1ebccd2bbd37f35e55cca2" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;AsyncLocalStorage&lt;/code&gt;. Store is only provided within a &lt;code&gt;run&lt;/code&gt; method call.</source>
          <target state="translated">&lt;code&gt;AsyncLocalStorage&lt;/code&gt; 의 새 인스턴스를 만듭니다 . 저장소는 &lt;code&gt;run&lt;/code&gt; 메서드 호출 내에서만 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e776f7fa7e23615b2d8bf8c1ff1d7b5837a9c840" translate="yes" xml:space="preserve">
          <source>Creates a new secure pair object with two streams, one of which reads and writes the encrypted data and the other of which reads and writes the cleartext data. Generally, the encrypted stream is piped to/from an incoming encrypted data stream and the cleartext one is used as a replacement for the initial encrypted stream.</source>
          <target state="translated">하나는 암호화 된 데이터를 읽고 쓰는 것이고 다른 하나는 일반 텍스트 데이터를 읽고 쓰는 두 개의 스트림으로 새로운 보안 쌍 오브젝트를 작성합니다. 일반적으로, 암호화 된 스트림은 들어오는 암호화 된 데이터 스트림으로 /로부터 파이프되고 일반 텍스트 스트림은 초기 암호화 된 스트림의 대체물로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="acc52bfbed8482fc6bbd3689ddd2a9ebbfb324c3" translate="yes" xml:space="preserve">
          <source>Creates a new socket object.</source>
          <target state="translated">새로운 소켓 객체를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="2f6e7b9d4b6897b9e7c68dd1a7dc11dc7bc6d632" translate="yes" xml:space="preserve">
          <source>Creates a predefined &lt;code&gt;DiffieHellman&lt;/code&gt; key exchange object. The supported groups are: &lt;code&gt;'modp1'&lt;/code&gt;, &lt;code&gt;'modp2'&lt;/code&gt;, &lt;code&gt;'modp5'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412&lt;/a&gt;, but see &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;Caveats&lt;/a&gt;) and &lt;code&gt;'modp14'&lt;/code&gt;, &lt;code&gt;'modp15'&lt;/code&gt;, &lt;code&gt;'modp16'&lt;/code&gt;, &lt;code&gt;'modp17'&lt;/code&gt;, &lt;code&gt;'modp18'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC 3526&lt;/a&gt;). The returned object mimics the interface of objects created by &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt;&lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt;&lt;/a&gt;, but will not allow changing the keys (with &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt;&lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt;&lt;/a&gt;, for example). The advantage of using this method is that the parties do not have to generate nor exchange a group modulus beforehand, saving both processor and communication time.</source>
          <target state="translated">사전 정의 된 &lt;code&gt;DiffieHellman&lt;/code&gt; 키 교환 오브젝트를 작성합니다. 지원되는 그룹은 &lt;code&gt;'modp1'&lt;/code&gt; , &lt;code&gt;'modp2'&lt;/code&gt; , &lt;code&gt;'modp5'&lt;/code&gt; ( &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412에&lt;/a&gt; 정의되어 있지만 &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;주의 사항&lt;/a&gt; 참조 ) 및 &lt;code&gt;'modp14'&lt;/code&gt; , &lt;code&gt;'modp15'&lt;/code&gt; , &lt;code&gt;'modp16'&lt;/code&gt; , &lt;code&gt;'modp17'&lt;/code&gt; , &lt;code&gt;'modp18'&lt;/code&gt; ( &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC에&lt;/a&gt; 정의 됨) 3526 ). 반환 된 객체는 &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt; &lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 객체의 인터페이스를 모방 하지만 키를 변경할 수는 없습니다 ( &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt; &lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt; &lt;/a&gt;예를 들어). 이 방법을 사용하면 당사자들이 미리 그룹 계수를 생성하거나 교환 할 필요가 없으므로 프로세서와 통신 시간이 절약됩니다.</target>
        </trans-unit>
        <trans-unit id="f8d79cb2af056655426725adb6ac8e4701a23b4d" translate="yes" xml:space="preserve">
          <source>Creates a predefined &lt;code&gt;DiffieHellmanGroup&lt;/code&gt; key exchange object. The supported groups are: &lt;code&gt;'modp1'&lt;/code&gt;, &lt;code&gt;'modp2'&lt;/code&gt;, &lt;code&gt;'modp5'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412&lt;/a&gt;, but see &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;Caveats&lt;/a&gt;) and &lt;code&gt;'modp14'&lt;/code&gt;, &lt;code&gt;'modp15'&lt;/code&gt;, &lt;code&gt;'modp16'&lt;/code&gt;, &lt;code&gt;'modp17'&lt;/code&gt;, &lt;code&gt;'modp18'&lt;/code&gt; (defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC 3526&lt;/a&gt;). The returned object mimics the interface of objects created by &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt;&lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt;&lt;/a&gt;, but will not allow changing the keys (with &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt;&lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt;&lt;/a&gt;, for example). The advantage of using this method is that the parties do not have to generate nor exchange a group modulus beforehand, saving both processor and communication time.</source>
          <target state="translated">미리 정의 된 &lt;code&gt;DiffieHellmanGroup&lt;/code&gt; 키 교환 개체를 만듭니다 . 지원되는 그룹은 &lt;code&gt;'modp1'&lt;/code&gt; , &lt;code&gt;'modp2'&lt;/code&gt; , &lt;code&gt;'modp5'&lt;/code&gt; ( &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2412.txt&quot;&gt;RFC 2412에&lt;/a&gt; 정의되어 있지만 &lt;a href=&quot;#crypto_support_for_weak_or_compromised_algorithms&quot;&gt;주의 사항&lt;/a&gt; 참조 ) 및 &lt;code&gt;'modp14'&lt;/code&gt; , &lt;code&gt;'modp15'&lt;/code&gt; , &lt;code&gt;'modp16'&lt;/code&gt; , &lt;code&gt;'modp17'&lt;/code&gt; , &lt;code&gt;'modp18'&lt;/code&gt; ( &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3526.txt&quot;&gt;RFC에&lt;/a&gt; 정의 됨)입니다 . 3526 ). 반환 된 객체는 &lt;a href=&quot;#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding&quot;&gt; &lt;code&gt;crypto.createDiffieHellman()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 객체의 인터페이스를 모방 하지만 키 변경을 허용하지 않습니다 ( &lt;a href=&quot;#crypto_diffiehellman_setpublickey_publickey_encoding&quot;&gt; &lt;code&gt;diffieHellman.setPublicKey()&lt;/code&gt; &lt;/a&gt;예). 이 방법을 사용하는 이점은 당사자가 미리 그룹 모듈러스를 생성하거나 교환 할 필요가 없으므로 프로세서와 통신 시간을 모두 절약 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2ae01e34f86babf6cfc9d4db217d4b26f757b780" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">심볼릭 링크를 만든 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="f22c81c47e49011fd378be15776a8ba7f151511f" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory and resolves the &lt;code&gt;Promise&lt;/code&gt; with the created directory path. A unique directory name is generated by appending six random characters to the end of the provided &lt;code&gt;prefix&lt;/code&gt;. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="translated">고유 한 임시 디렉토리를 생성하고 생성 된 디렉토리 경로로 &lt;code&gt;Promise&lt;/code&gt; 를 해결합니다 . 제공된 &lt;code&gt;prefix&lt;/code&gt; 끝에 6 개의 임의 문자를 추가하여 고유 한 디렉토리 이름을 생성 합니다 . 플랫폼 불일치로 인해 &lt;code&gt;prefix&lt;/code&gt; 뒤에 &lt;code&gt;X&lt;/code&gt; 문자를 사용 하지 마십시오 . 일부 플랫폼, 특히 BSD는 6 개 이상의 임의 문자를 반환 하고 &lt;code&gt;prefix&lt;/code&gt; 후행 &lt;code&gt;X&lt;/code&gt; 문자 를 임의의 문자로 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8dbfeb5ffe7100c76afddc5e2c44f9500b4a53f4" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory and resolves the &lt;code&gt;Promise&lt;/code&gt; with the created folder path. A unique directory name is generated by appending six random characters to the end of the provided &lt;code&gt;prefix&lt;/code&gt;. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="translated">고유 한 임시 디렉토리를 작성하고 작성된 폴더 경로로 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 . 제공된 &lt;code&gt;prefix&lt;/code&gt; 끝에 6 개의 임의 문자를 추가하여 고유 한 디렉토리 이름이 생성됩니다 . 플랫폼 불일치로 인해 &lt;code&gt;prefix&lt;/code&gt; 뒤에 &lt;code&gt;X&lt;/code&gt; 문자를 사용 하지 마십시오 . BSD와 같은 일부 플랫폼은 6 개 이상의 임의 문자를 반환 하고 &lt;code&gt;prefix&lt;/code&gt; &lt;code&gt;X&lt;/code&gt; 문자 를 임의 문자로 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7800e1b0e924145a98553afbc8fdeebd911cc03" translate="yes" xml:space="preserve">
          <source>Creates a unique temporary directory.</source>
          <target state="translated">고유 한 임시 디렉토리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ecbf31f66cfc0a7cc849a453a5544be34ade1f8b" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;#fs_class_fs_dir&quot;&gt;&lt;code&gt;fs.Dir&lt;/code&gt;&lt;/a&gt;, which contains all further functions for reading from and cleaning up the directory.</source>
          <target state="translated">디렉토리에서 읽고 정리하기위한 모든 추가 함수를 포함 하는 &lt;a href=&quot;#fs_class_fs_dir&quot;&gt; &lt;code&gt;fs.Dir&lt;/code&gt; 을&lt;/a&gt; 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="aefff0ae1012c84ba50832c935ee6a4688705cf8" translate="yes" xml:space="preserve">
          <source>Creates an Elliptic Curve Diffie-Hellman (&lt;code&gt;ECDH&lt;/code&gt;) key exchange object using a predefined curve specified by the &lt;code&gt;curveName&lt;/code&gt; string. Use &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt;&lt;code&gt;crypto.getCurves()&lt;/code&gt;&lt;/a&gt; to obtain a list of available curve names. On recent OpenSSL releases, &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; will also display the name and description of each available elliptic curve.</source>
          <target state="translated">&lt;code&gt;curveName&lt;/code&gt; 문자열로 지정된 미리 정의 된 곡선을 사용하여 &lt;code&gt;ECDH&lt;/code&gt; (Elliptic Curve Diffie-Hellman ) 키 교환 객체를 만듭니다 . 사용 가능한 커브 이름 목록을 얻으려면 &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt; &lt;code&gt;crypto.getCurves()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 최근 OpenSSL 릴리스에서 &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; 에는 사용 가능한 각 타원 곡선의 이름과 설명도 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3ff0f91d2c8c792bd5d5ecdc7c9fce7305188495" translate="yes" xml:space="preserve">
          <source>Creates an new &lt;code&gt;TextDecoder&lt;/code&gt; instance. The &lt;code&gt;encoding&lt;/code&gt; may specify one of the supported encodings or an alias.</source>
          <target state="translated">새로운 &lt;code&gt;TextDecoder&lt;/code&gt; 인스턴스를 작성합니다. &lt;code&gt;encoding&lt;/code&gt; 지원 인코딩 또는 별칭 중 하나를 지정할 수있다.</target>
        </trans-unit>
        <trans-unit id="d78f0ead7ca6427615ce9585713ef0162be37e84" translate="yes" xml:space="preserve">
          <source>Creates and adds a new &lt;code&gt;QuicEndpoint&lt;/code&gt; to the &lt;code&gt;QuicSocket&lt;/code&gt; instance. An error will be thrown if &lt;code&gt;quicsocket.addEndpoint()&lt;/code&gt; is called either after the &lt;code&gt;QuicSocket&lt;/code&gt; has already started binding to the local ports, or after the &lt;code&gt;QuicSocket&lt;/code&gt; has been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8dd7aadaa774fd3a0ee0850e1bf1a2d26e9d0b" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Cipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;algorithm&lt;/code&gt; 과 &lt;code&gt;password&lt;/code&gt; 를 사용 하는 &lt;code&gt;Cipher&lt;/code&gt; 객체를 작성해 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="97d96bcb151743f1ae0f093f6fb0b4c794492163" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Cipher&lt;/code&gt; object, with the given &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and initialization vector (&lt;code&gt;iv&lt;/code&gt;).</source>
          <target state="translated">지정된 &lt;code&gt;algorithm&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; 및 초기화 벡터 ( &lt;code&gt;iv&lt;/code&gt; )를 사용해 &lt;code&gt;Cipher&lt;/code&gt; 객체를 작성해 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="86bfab5bc0d4753aa7e45ac9e9b549b256f27690" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Decipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; (key).</source>
          <target state="translated">주어진 &lt;code&gt;algorithm&lt;/code&gt; 과 &lt;code&gt;password&lt;/code&gt; (키) 를 사용 하는 &lt;code&gt;Decipher&lt;/code&gt; 객체를 만들고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="05daf002c0718e44663e4dfbf83d75c2601dca76" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Decipher&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and initialization vector (&lt;code&gt;iv&lt;/code&gt;).</source>
          <target state="translated">주어진 &lt;code&gt;algorithm&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; 및 초기화 벡터 ( &lt;code&gt;iv&lt;/code&gt; ) 를 사용 하는 &lt;code&gt;Decipher&lt;/code&gt; 객체를 만들고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dfbe3921bacab7503435332811688b212f7c21c0" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Hash&lt;/code&gt; object that can be used to generate hash digests using the given &lt;code&gt;algorithm&lt;/code&gt;. Optional &lt;code&gt;options&lt;/code&gt; argument controls stream behavior. For XOF hash functions such as &lt;code&gt;'shake256'&lt;/code&gt;, the &lt;code&gt;outputLength&lt;/code&gt; option can be used to specify the desired output length in bytes.</source>
          <target state="translated">지정된 &lt;code&gt;algorithm&lt;/code&gt; 사용하여 해시 다이제스트를 생성하는 데 사용할 수 있는 &lt;code&gt;Hash&lt;/code&gt; 객체를 만들고 반환합니다 . 선택적 &lt;code&gt;options&lt;/code&gt; 인수는 스트림 동작을 제어합니다. &lt;code&gt;'shake256'&lt;/code&gt; 과 같은 XOF 해시 함수의 경우 &lt;code&gt;outputLength&lt;/code&gt; 옵션을 사용하여 원하는 출력 길이를 바이트 단위로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f23e8a3f43c21c2627b1021a92c09d404368794" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Sign&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt;. Use &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt; to obtain the names of the available digest algorithms. Optional &lt;code&gt;options&lt;/code&gt; argument controls the &lt;code&gt;stream.Writable&lt;/code&gt; behavior.</source>
          <target state="translated">주어진 &lt;code&gt;algorithm&lt;/code&gt; 을 사용 하는 &lt;code&gt;Sign&lt;/code&gt; 객체를 생성하고 반환합니다 . 사용 가능한 다이제스트 알고리즘의 이름을 얻으려면 &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 선택적 &lt;code&gt;options&lt;/code&gt; 인수는 &lt;code&gt;stream.Writable&lt;/code&gt; 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="cd8bf2612bd86aa139c5b56cd0caf9506739a20c" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Tracing&lt;/code&gt; object for the given set of &lt;code&gt;categories&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;categories&lt;/code&gt; 세트에 대한 &lt;code&gt;Tracing&lt;/code&gt; 오브젝트를 작성 하고 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="db92d150d8909efcd50b9a4bd6b14b435b57c1dd" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;code&gt;Verify&lt;/code&gt; object that uses the given algorithm. Use &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt; to obtain an array of names of the available signing algorithms. Optional &lt;code&gt;options&lt;/code&gt; argument controls the &lt;code&gt;stream.Writable&lt;/code&gt; behavior.</source>
          <target state="translated">주어진 알고리즘을 사용 하는 &lt;code&gt;Verify&lt;/code&gt; 객체를 생성하고 반환합니다 . 사용 가능한 서명 알고리즘의 이름 배열을 얻으려면 &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 . 선택적 &lt;code&gt;options&lt;/code&gt; 인수는 &lt;code&gt;stream.Writable&lt;/code&gt; 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="db710d2a72118c7d92a15e1433250866576f2fd1" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt;&lt;code&gt;BrotliCompress&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_brotlicompress&quot;&gt; &lt;code&gt;BrotliCompress&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="910bb78abfc9a859998a74678c629277026f290c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt;&lt;code&gt;BrotliDecompress&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt; &lt;code&gt;BrotliDecompress&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9c7288d6bb60992c5befb81b2d42446effa47b79" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt;&lt;code&gt;Deflate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_deflate&quot;&gt; &lt;code&gt;Deflate&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="41a2248d33fcee16a941bdea0fc7e6525918416b" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt;&lt;code&gt;DeflateRaw&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_deflateraw&quot;&gt; &lt;code&gt;DeflateRaw&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0dbf195d9c9fbc21046c761cbdadb545f1837e17" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt;&lt;code&gt;Gunzip&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt; &lt;code&gt;Gunzip&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="95f22b4640ff2203f5e47db51892eb380fccfe3d" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt;&lt;code&gt;Gzip&lt;/code&gt;&lt;/a&gt; object. See &lt;a href=&quot;#zlib_zlib&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_gzip&quot;&gt; &lt;code&gt;Gzip&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다. &lt;a href=&quot;#zlib_zlib&quot;&gt;예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b2da6e5b341be788ca6de1b30803c698d0b7575" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt;&lt;code&gt;Inflate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt; &lt;code&gt;Inflate&lt;/code&gt; &lt;/a&gt; 객체를 만들고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e2daa256748e8e5fe70fda4713de295ebbf30735" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt;&lt;code&gt;InflateRaw&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt; &lt;code&gt;InflateRaw&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="43b4d69666843c880b0a8ce0fb473fd3f4499f9c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt;&lt;code&gt;Unzip&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">새로운 &lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt; &lt;code&gt;Unzip&lt;/code&gt; &lt;/a&gt; 객체를 생성하고 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="91ae69e4dd09559550a8924553990e49c5878e4e" translate="yes" xml:space="preserve">
          <source>Creates and returns a new &lt;code&gt;QuicSocket&lt;/code&gt;. Please refer to the &lt;a href=&quot;quic&quot;&gt;QUIC documentation&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cea4a3ecf372d6ec7165bb99279d250e5b23609" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a private key. If &lt;code&gt;key&lt;/code&gt; is a string or &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt; is assumed to be &lt;code&gt;'pem'&lt;/code&gt;; otherwise, &lt;code&gt;key&lt;/code&gt; must be an object with the properties described above.</source>
          <target state="translated">개인 키를 포함하는 새 키 객체를 만들어 반환합니다. 경우 &lt;code&gt;key&lt;/code&gt; 문자열 또는이다 &lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;format&lt;/code&gt; 으로 가정 &lt;code&gt;'pem'&lt;/code&gt; ; 그렇지 않으면 &lt;code&gt;key&lt;/code&gt; 는 위에서 설명한 속성을 가진 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c804ec74ed5f02d037070d65a57297f0eea24d7c" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a public key. If &lt;code&gt;key&lt;/code&gt; is a string or &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt; is assumed to be &lt;code&gt;'pem'&lt;/code&gt;; if &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'private'&lt;/code&gt;, the public key is derived from the given private key; otherwise, &lt;code&gt;key&lt;/code&gt; must be an object with the properties described above.</source>
          <target state="translated">공개 키를 포함한 새로운 키 객체를 작성해 돌려줍니다. 경우 &lt;code&gt;key&lt;/code&gt; 문자열 또는이다 &lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;format&lt;/code&gt; 으로 가정 &lt;code&gt;'pem'&lt;/code&gt; ; 만약 &lt;code&gt;key&lt;/code&gt; A는 &lt;code&gt;KeyObject&lt;/code&gt; 유형은 &lt;code&gt;'private'&lt;/code&gt; , 공개 키는 소정의 개인 키로부터 유도된다; 그렇지 않으면 &lt;code&gt;key&lt;/code&gt; 는 위에서 설명한 속성을 가진 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5437727c2dcdf3fb4e73b69e059be356a7c50e80" translate="yes" xml:space="preserve">
          <source>Creates and returns a new key object containing a secret key for symmetric encryption or &lt;code&gt;Hmac&lt;/code&gt;.</source>
          <target state="translated">대칭 암호화 또는 &lt;code&gt;Hmac&lt;/code&gt; 비밀 키가 포함 된 새 키 객체를 만들어 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="046fe71abcb910163bfbfce07bf64001443712d8" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; for &lt;code&gt;buf&lt;/code&gt; values (bytes). This function is called automatically when a &lt;code&gt;Buffer&lt;/code&gt; is used in a &lt;code&gt;for..of&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 값 (바이트)에 대한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;반복자&lt;/a&gt; 를 작성 하고 리턴합니다 . 이 함수는 &lt;code&gt;for..of&lt;/code&gt; 문 에 &lt;code&gt;Buffer&lt;/code&gt; 가 사용될 때 자동으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d62268c7950db94b9a92f74779207323cdc52e9" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; of &lt;code&gt;[index, byte]&lt;/code&gt; pairs from the contents of &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 내용에서 &lt;code&gt;[index, byte]&lt;/code&gt; 쌍 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;반복자&lt;/a&gt; 를 작성 하고 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4c8f73eabddcfa4986a12c810155d3dac99e6ef8" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterator&lt;/a&gt; of &lt;code&gt;buf&lt;/code&gt; keys (indices).</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 키 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;반복자&lt;/a&gt; 를 작성 하고 리턴 합니다 (표시).</target>
        </trans-unit>
        <trans-unit id="f696e266ec1284b435f285957d301e9a5ca61ca1" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;code&gt;Hmac&lt;/code&gt; object that uses the given &lt;code&gt;algorithm&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;. Optional &lt;code&gt;options&lt;/code&gt; argument controls stream behavior.</source>
          <target state="translated">주어진 &lt;code&gt;algorithm&lt;/code&gt; 과 &lt;code&gt;key&lt;/code&gt; 를 사용 하는 &lt;code&gt;Hmac&lt;/code&gt; 객체를 생성하고 반환합니다 . 선택적 &lt;code&gt;options&lt;/code&gt; 인수는 스트림 동작을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="f41c5af14aa6a079567de94c5e39061124b3400f" translate="yes" xml:space="preserve">
          <source>Creating &lt;code&gt;Worker&lt;/code&gt; instances inside of other &lt;code&gt;Worker&lt;/code&gt;s is possible.</source>
          <target state="translated">만들기 &lt;code&gt;Worker&lt;/code&gt; 다른 내부 인스턴스를 &lt;code&gt;Worker&lt;/code&gt; 의 것은 가능하다.</target>
        </trans-unit>
        <trans-unit id="4b302ceb28568307311ff1b214724fe907d6ece1" translate="yes" xml:space="preserve">
          <source>Creating Readable Streams with Async Generators</source>
          <target state="translated">비동기 생성기를 사용하여 읽을 수있는 스트림 만들기</target>
        </trans-unit>
        <trans-unit id="5bb4d1497f2be8242e2bd704d3afed44f8d9b22c" translate="yes" xml:space="preserve">
          <source>Creating a new &lt;code&gt;vm.Script&lt;/code&gt; object compiles &lt;code&gt;code&lt;/code&gt; but does not run it. The compiled &lt;code&gt;vm.Script&lt;/code&gt; can be run later multiple times. The &lt;code&gt;code&lt;/code&gt; is not bound to any global object; rather, it is bound before each run, just for that run.</source>
          <target state="translated">새 &lt;code&gt;vm.Script&lt;/code&gt; 객체를 만들면 &lt;code&gt;code&lt;/code&gt; 가 컴파일 되지만 실행되지는 않습니다. 컴파일 된 &lt;code&gt;vm.Script&lt;/code&gt; 는 나중에 여러 번 실행할 수 있습니다. &lt;code&gt;code&lt;/code&gt; 전역 개체에 바인딩되지 않고, 오히려 해당 실행에 대해서만 각 실행 전에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="d4a1fc8d2739887fb7436a40a98232e2d08acef8" translate="yes" xml:space="preserve">
          <source>Creating a new resolver uses the default server settings. Setting the servers used for a resolver using &lt;a href=&quot;#dns_dns_setservers_servers&quot;&gt;&lt;code&gt;resolver.setServers()&lt;/code&gt;&lt;/a&gt; does not affect other resolvers:</source>
          <target state="translated">새 리졸버를 작성하면 기본 서버 설정이 사용됩니다. &lt;a href=&quot;#dns_dns_setservers_servers&quot;&gt; &lt;code&gt;resolver.setServers()&lt;/code&gt; &lt;/a&gt; 사용하여 리졸버에 사용되는 서버를 설정해도 다른 리졸버에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9898857154be7c693dd6c4e5c9e30b390179899" translate="yes" xml:space="preserve">
          <source>Creating a new resolver uses the default server settings. Setting the servers used for a resolver using &lt;a href=&quot;#dns_dnspromises_setservers_servers&quot;&gt;&lt;code&gt;resolver.setServers()&lt;/code&gt;&lt;/a&gt; does not affect other resolvers:</source>
          <target state="translated">새 리졸버를 작성하면 기본 서버 설정이 사용됩니다. &lt;a href=&quot;#dns_dnspromises_setservers_servers&quot;&gt; &lt;code&gt;resolver.setServers()&lt;/code&gt; &lt;/a&gt; 사용하여 리졸버에 사용되는 서버를 설정해도 다른 리졸버에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="859af298e2258f383cb18d630c5f7ad1a78e291c" translate="yes" xml:space="preserve">
          <source>Creating a self-signed certificate using the OpenSSL command-line interface is illustrated in the example below:</source>
          <target state="translated">OpenSSL 명령 행 인터페이스를 사용하여 자체 서명 된 인증서 작성이 아래 예에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="281ff6a3059c1f6ed0a254ee0efd442720f6b82b" translate="yes" xml:space="preserve">
          <source>Creating and maintaining an addon that benefits from the ABI stability provided by N-API carries with it certain &lt;a href=&quot;n-api#n_api_implications_of_abi_stability&quot;&gt;implementation considerations&lt;/a&gt;.</source>
          <target state="translated">N-API가 제공하는 ABI 안정성을 활용하는 애드온을 만들고 유지 관리하는 데에는 특정 &lt;a href=&quot;n-api#n_api_implications_of_abi_stability&quot;&gt;구현 고려 사항이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa98474d743dc0bd7f4857bf4b6965f5277b0de4" translate="yes" xml:space="preserve">
          <source>Creating and using a large number of zlib objects simultaneously can cause significant memory fragmentation.</source>
          <target state="translated">많은 수의 zlib 객체를 동시에 만들고 사용하면 상당한 메모리 조각화가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa0a57380932f79f428705fed6a1ebb839a37af1" translate="yes" xml:space="preserve">
          <source>Creating readable streams with async generators</source>
          <target state="translated">비동기 생성기로 읽을 수있는 스트림 생성</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="e158a0e5361840fbb27d9dee0315ebf553283bc3" translate="yes" xml:space="preserve">
          <source>Creation of a &lt;a href=&quot;zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; object failed due to incorrect configuration.</source>
          <target state="translated">잘못된 구성으로 인해 &lt;a href=&quot;zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; 오브젝트 작성에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="e849494484ed2e3c1a93babc3e347d2e98ac8604" translate="yes" xml:space="preserve">
          <source>Crypto</source>
          <target state="translated">Crypto</target>
        </trans-unit>
        <trans-unit id="ad966676447bf067d6159b58c8d9636c78cf1a40" translate="yes" xml:space="preserve">
          <source>Crypto Constants</source>
          <target state="translated">암호화 상수</target>
        </trans-unit>
        <trans-unit id="795698fe57c8b1e6fd6479044f1c39874bf87cc0" translate="yes" xml:space="preserve">
          <source>Crypto constants</source>
          <target state="translated">암호화 상수</target>
        </trans-unit>
        <trans-unit id="9654ee1c347773162335e16a3dc47973dae4c65c" translate="yes" xml:space="preserve">
          <source>CryptoStream</source>
          <target state="translated">CryptoStream</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="a208bf408f60d2e9f69fec6c5865500dcfb8a4c6" translate="yes" xml:space="preserve">
          <source>Ctrl+C</source>
          <target state="translated">Ctrl+C</target>
        </trans-unit>
        <trans-unit id="de46ae766f89cea388f24245e2d74391f4232814" translate="yes" xml:space="preserve">
          <source>Currently importing JSON modules are only supported in the &lt;code&gt;commonjs&lt;/code&gt; mode and are loaded using the CJS loader. &lt;a href=&quot;https://html.spec.whatwg.org/#creating-a-json-module-script&quot;&gt;WHATWG JSON modules specification&lt;/a&gt; are still being standardized, and are experimentally supported by including the additional flag &lt;code&gt;--experimental-json-modules&lt;/code&gt; when running Node.js.</source>
          <target state="translated">현재 가져 오는 JSON 모듈은 &lt;code&gt;commonjs&lt;/code&gt; 모드 에서만 지원되며 CJS 로더를 사용하여로드됩니다. &lt;a href=&quot;https://html.spec.whatwg.org/#creating-a-json-module-script&quot;&gt;WHATWG JSON 모듈 사양&lt;/a&gt; 은 아직 표준화 중이며 Node.js를 실행할 때 추가 플래그 &lt;code&gt;--experimental-json-modules&lt;/code&gt; 를 포함하여 실험적으로 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b366770acb4de49b363475b5b1b35b76da886a4" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;AbortSignal&lt;/code&gt;s' &lt;code&gt;&quot;abort&quot;&lt;/code&gt; event is fired with &lt;code&gt;isTrusted&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b723debd86a1c0494d840ba0beaae1f4d289b31" translate="yes" xml:space="preserve">
          <source>Currently only HTTP/3 supports the use of &lt;code&gt;pushStream()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c665816aa82707fbf80cbec61ecd394e060366" translate="yes" xml:space="preserve">
          <source>Currently only the &amp;ldquo;default export&amp;rdquo; is supported for CommonJS files or packages:</source>
          <target state="translated">현재 CommonJS 파일 또는 패키지에는 &quot;기본 내보내기&quot;만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="37c61c4cb455a903ad09bf2181f46777058288c6" translate="yes" xml:space="preserve">
          <source>Currently possible values are:</source>
          <target state="translated">현재 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3580625f03297579863311a1444aaed2a0cd29c6" translate="yes" xml:space="preserve">
          <source>Currently two methods are commonly used to achieve Perfect Forward Secrecy (note the character &quot;E&quot; appended to the traditional abbreviations):</source>
          <target state="translated">현재 Perfect Forward Secrecy를 달성하기 위해 일반적으로 두 가지 방법이 사용됩니다 (기존 약어에 &quot;E&quot;문자 추가).</target>
        </trans-unit>
        <trans-unit id="e5cb3b3c87095b5ab0527671486620718f3ae3eb" translate="yes" xml:space="preserve">
          <source>Currently two methods are commonly used to achieve perfect forward secrecy (note the character &quot;E&quot; appended to the traditional abbreviations):</source>
          <target state="translated">현재 완벽한 순방향 비밀 성을 달성하기 위해 일반적으로 두 가지 방법이 사용됩니다 (전통적인 약어에 &quot;E&quot;문자가 추가됨).</target>
        </trans-unit>
        <trans-unit id="74c4f4eb27002360755a576ca8fb848155143a5a" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;for await...of&lt;/code&gt; loop can be a bit slower. If &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; flow and speed are both essential, a mixed approach can be applied:</source>
          <target state="translated">현재 &lt;code&gt;for await...of&lt;/code&gt; 루프는 조금 느릴 수 있습니다. 경우 &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; 를 흐름과 속도가 모두 필수적이다, 혼합 방식을 적용 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5ceded851a35eec5a124a6b34f636032d3f10ef6" translate="yes" xml:space="preserve">
          <source>Currently, overriding &lt;code&gt;Error.prepareStackTrace&lt;/code&gt; is ignored when the &lt;code&gt;--enable-source-maps&lt;/code&gt; flag is set.</source>
          <target state="translated">현재 &lt;code&gt;--enable-source-maps&lt;/code&gt; 플래그가 설정 되면 &lt;code&gt;Error.prepareStackTrace&lt;/code&gt; 재정의 가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="328afef5c7ee2861dc1344ae4feffaac29949ef9" translate="yes" xml:space="preserve">
          <source>Custom &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; implementations &lt;em&gt;may&lt;/em&gt; implement the &lt;code&gt;transform._flush()&lt;/code&gt; method. This will be called when there is no more written data to be consumed, but before the &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event is emitted signaling the end of the &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">사용자 정의 &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 구현 &lt;em&gt;할 수&lt;/em&gt; 구현 &lt;code&gt;transform._flush()&lt;/code&gt; 메소드를. 더 이상 쓸 데이터가 없을 때 호출되지만 &lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt; 이벤트가 발생 하기 전에 &lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 스트림 의 끝을 알리는 호출 입니다.</target>
        </trans-unit>
        <trans-unit id="57497d360f13a585a86f864dd659757db39a08c4" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Duplex&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; constructor and implement &lt;em&gt;both&lt;/em&gt; the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;writable._write()&lt;/code&gt; methods.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Duplex&lt;/code&gt; 스트림 &lt;em&gt;해야한다&lt;/em&gt; 부르는 &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; 생성자를 구현할 &lt;em&gt;모두에게 &lt;/em&gt;&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;writable._write()&lt;/code&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="3e6a583187c72696117a6ebb5c2d5f872c9d5f8b" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Duplex&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; constructor and implement &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;readable._read()&lt;/code&gt; and &lt;code&gt;writable._write()&lt;/code&gt; methods.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Duplex&lt;/code&gt; 스트림 &lt;em&gt;해야한다&lt;/em&gt; 부르는 &lt;code&gt;new stream.Duplex([options])&lt;/code&gt; 생성자를 구현할 &lt;em&gt;모두에게 &lt;/em&gt; &lt;code&gt;readable._read()&lt;/code&gt; 및 &lt;code&gt;writable._write()&lt;/code&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="240c12f0518b36f635f0dfcbfa82ee6afe6d1b63" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Readable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Readable([options])&lt;/code&gt; constructor and implement the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Readable&lt;/code&gt; 스트림 &lt;em&gt;은 &lt;/em&gt; &lt;code&gt;new stream.Readable([options])&lt;/code&gt; 생성자를 호출하고 Readable._read &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 메서드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d1c5efe40f367d812fccf5c2f294af0f1f1a02fd" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Readable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Readable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;readable._read()&lt;/code&gt; method.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Readable&lt;/code&gt; 스트림 &lt;em&gt;은 &lt;/em&gt; &lt;code&gt;new stream.Readable([options])&lt;/code&gt; 생성자를 호출 하고 &lt;code&gt;readable._read()&lt;/code&gt; 메소드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1318d112f9e1fae2312d1c3a38302040cd0ce570" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Writable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Writable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;writable._write()&lt;/code&gt; and/or &lt;code&gt;writable._writev()&lt;/code&gt; method.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Writable&lt;/code&gt; 스트림 &lt;em&gt;은 &lt;/em&gt; &lt;code&gt;new stream.Writable([options])&lt;/code&gt; 생성자를 호출하고 &lt;code&gt;writable._write()&lt;/code&gt; 및 / 또는 &lt;code&gt;writable._writev()&lt;/code&gt; 메서드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8651edb1971cccfdd90f17fdad43e9030a954aa2" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Writable&lt;/code&gt; streams &lt;em&gt;must&lt;/em&gt; call the &lt;code&gt;new stream.Writable([options])&lt;/code&gt; constructor and implement the &lt;code&gt;writable._write()&lt;/code&gt; method. The &lt;code&gt;writable._writev()&lt;/code&gt; method &lt;em&gt;may&lt;/em&gt; also be implemented.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Writable&lt;/code&gt; 스트림 &lt;em&gt;은 &lt;/em&gt; &lt;code&gt;new stream.Writable([options])&lt;/code&gt; 생성자를 호출 하고 &lt;code&gt;writable._write()&lt;/code&gt; 메소드를 구현해야합니다 . &lt;code&gt;writable._writev()&lt;/code&gt; 메소드가 &lt;em&gt;있다&lt;/em&gt; 또한 구현 될 수있다.</target>
        </trans-unit>
        <trans-unit id="9e60d8ad094ec27952577a405e93a261987d1313" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;[util.inspect.custom](depth, opts)&lt;/code&gt; functions typically return a string but may return a value of any type that will be formatted accordingly by &lt;code&gt;util.inspect()&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 &lt;code&gt;[util.inspect.custom](depth, opts)&lt;/code&gt; 함수는 일반적으로 문자열을 반환하지만 &lt;code&gt;util.inspect()&lt;/code&gt; 에 따라 형식이 지정된 모든 유형의 값을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="384a7e4db30f89fc72c3c090991519ba0980fa09" translate="yes" xml:space="preserve">
          <source>Custom Asynchronous Operations</source>
          <target state="translated">맞춤형 비동기 작업</target>
        </trans-unit>
        <trans-unit id="d5549441cd26e180f518b302fbd5ffd5c8a0f81a" translate="yes" xml:space="preserve">
          <source>Custom DNS lookup functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d3af7ed1269787b3f905f1ebb743a5369bb1bd" translate="yes" xml:space="preserve">
          <source>Custom Evaluation Functions</source>
          <target state="translated">맞춤형 평가 기능</target>
        </trans-unit>
        <trans-unit id="1aea5483a9617e3df79bd8f3a134d8bbbe759633" translate="yes" xml:space="preserve">
          <source>Custom asynchronous operations</source>
          <target state="translated">사용자 지정 비동기 작업</target>
        </trans-unit>
        <trans-unit id="6445c8568aa7b6058d96f0f5d2e8851cd208e442" translate="yes" xml:space="preserve">
          <source>Custom dictionaries are now supported by &lt;code&gt;InflateRaw&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 사전은 이제 &lt;code&gt;InflateRaw&lt;/code&gt; 에서 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="108963fbc6ff9a4bbd95e23e408e53066d58ec0d" translate="yes" xml:space="preserve">
          <source>Custom error validation:</source>
          <target state="translated">맞춤 오류 확인 :</target>
        </trans-unit>
        <trans-unit id="07063e3086de6ec382abcb92473cdc51cf757366" translate="yes" xml:space="preserve">
          <source>Custom evaluation functions</source>
          <target state="translated">맞춤형 평가 기능</target>
        </trans-unit>
        <trans-unit id="80eb443f3ab134e25aea7fc6ba84cf767387aa29" translate="yes" xml:space="preserve">
          <source>Custom inspection functions can now return &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 검사 기능은 이제 &lt;code&gt;this&lt;/code&gt; 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32e5526a656dd195eb28b226185900d2a27b55d4" translate="yes" xml:space="preserve">
          <source>Custom inspection functions on Objects</source>
          <target state="translated">물체에 대한 맞춤형 검사 기능</target>
        </trans-unit>
        <trans-unit id="3d40526999df820323c8d123006c9f7324f22910" translate="yes" xml:space="preserve">
          <source>Custom inspection functions on objects</source>
          <target state="translated">개체에 대한 맞춤형 검사 기능</target>
        </trans-unit>
        <trans-unit id="c5b3c107bf9cdad2c6a30640529d42a81e56b173" translate="yes" xml:space="preserve">
          <source>Custom promisified functions</source>
          <target state="translated">맞춤형 약속 기능</target>
        </trans-unit>
        <trans-unit id="71bef58a330c9b2a591a74330fc89e9ad572480a" translate="yes" xml:space="preserve">
          <source>Custom validation object/error instance:</source>
          <target state="translated">사용자 지정 유효성 검사 개체 / 오류 인스턴스 :</target>
        </trans-unit>
        <trans-unit id="b43b849f9ae704f1648e93a5d460cfed34c61d47" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;util.inspect&lt;/code&gt; colors</source>
          <target state="translated">&lt;code&gt;util.inspect&lt;/code&gt; 색상 사용자 정의</target>
        </trans-unit>
        <trans-unit id="0edb34c3d8f095735c75f3f6eebfec33a07f4130" translate="yes" xml:space="preserve">
          <source>Customizing ESM specifier resolution algorithm</source>
          <target state="translated">ESM 지정자 해결 알고리즘 사용자 정의</target>
        </trans-unit>
        <trans-unit id="1d3eb47b58d51936ae62f16b19a1268d6ba6fa3a" translate="yes" xml:space="preserve">
          <source>Customizing REPL Output</source>
          <target state="translated">REPL 출력 사용자 정의</target>
        </trans-unit>
        <trans-unit id="6d57c81784fdd28e7706855d03d292d3a6d208d9" translate="yes" xml:space="preserve">
          <source>Customizing REPL output</source>
          <target state="translated">REPL 출력 사용자 정의</target>
        </trans-unit>
        <trans-unit id="97f064aff5a5a2219a6dc94f9eacd00f29d6f9fe" translate="yes" xml:space="preserve">
          <source>Cycles</source>
          <target state="translated">Cycles</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="516fdb58db1c868bb251d086b5d3e46be8b47f7f" translate="yes" xml:space="preserve">
          <source>DEP0001: &lt;code&gt;http.OutgoingMessage.prototype.flush&lt;/code&gt;</source>
          <target state="translated">DEP0001 : &lt;code&gt;http.OutgoingMessage.prototype.flush&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="181260347610d38bccbe216528a040a22e0c31a6" translate="yes" xml:space="preserve">
          <source>DEP0001: http.OutgoingMessage.prototype.flush</source>
          <target state="translated">DEP0001 : http.OutgoingMessage.prototype.flush</target>
        </trans-unit>
        <trans-unit id="e39e83c16839f13c9383f1ed1484f558067b026b" translate="yes" xml:space="preserve">
          <source>DEP0002: &lt;code&gt;require('_linklist')&lt;/code&gt;</source>
          <target state="translated">DEP0002 : &lt;code&gt;require('_linklist')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db811586843d3ab823fb0690d86a246f076af9ee" translate="yes" xml:space="preserve">
          <source>DEP0002: require('_linklist')</source>
          <target state="translated">DEP0002 : 필요 ( '_linklist')</target>
        </trans-unit>
        <trans-unit id="ea4ff33399a653e4342032c4c03884993cf990eb" translate="yes" xml:space="preserve">
          <source>DEP0003: &lt;code&gt;_writableState.buffer&lt;/code&gt;</source>
          <target state="translated">DEP0003 : &lt;code&gt;_writableState.buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7d2826b43fc8cd5bbf68f66cdbb3432ad0d0261" translate="yes" xml:space="preserve">
          <source>DEP0003: _writableState.buffer</source>
          <target state="translated">DEP0003 : _writableState.buffer</target>
        </trans-unit>
        <trans-unit id="fd3f84abf3770cb969b4411cf4b051b4d0505f8d" translate="yes" xml:space="preserve">
          <source>DEP0004: &lt;code&gt;CryptoStream.prototype.readyState&lt;/code&gt;</source>
          <target state="translated">DEP0004 : &lt;code&gt;CryptoStream.prototype.readyState&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="175b6de37a20b6e579c256ea9a7172580a2a7b14" translate="yes" xml:space="preserve">
          <source>DEP0004: CryptoStream.prototype.readyState</source>
          <target state="translated">DEP0004 : CryptoStream.prototype.readyState</target>
        </trans-unit>
        <trans-unit id="52f0254583f781df638fd58c6ff5963aa706eea5" translate="yes" xml:space="preserve">
          <source>DEP0005: &lt;code&gt;Buffer()&lt;/code&gt; constructor</source>
          <target state="translated">DEP0005 : &lt;code&gt;Buffer()&lt;/code&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="38a42e1eb4e00bd9d784859f28cac734719cb47f" translate="yes" xml:space="preserve">
          <source>DEP0005: Buffer() constructor</source>
          <target state="translated">DEP0005 : Buffer () 생성자</target>
        </trans-unit>
        <trans-unit id="fc962bf2f3b68caa9dc0761314a25f4678195e6e" translate="yes" xml:space="preserve">
          <source>DEP0006: &lt;code&gt;child_process&lt;/code&gt;&lt;code&gt;options.customFds&lt;/code&gt;</source>
          <target state="translated">DEP0006 : &lt;code&gt;child_process&lt;/code&gt; &lt;code&gt;options.customFds&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f69d8434dd6043ca4f9863da425c71d4f8b4a58" translate="yes" xml:space="preserve">
          <source>DEP0006: child_process options.customFds</source>
          <target state="translated">DEP0006 : child_process 옵션 .customFds</target>
        </trans-unit>
        <trans-unit id="4b5bc2ee810ab6cff2dadb4a59d21b49f55329b9" translate="yes" xml:space="preserve">
          <source>DEP0007: Replace &lt;code&gt;cluster&lt;/code&gt;&lt;code&gt;worker.suicide&lt;/code&gt; with &lt;code&gt;worker.exitedAfterDisconnect&lt;/code&gt;</source>
          <target state="translated">DEP0007 : &lt;code&gt;worker.suicide&lt;/code&gt; &lt;code&gt;cluster&lt;/code&gt; 를 &lt;code&gt;worker.exitedAfterDisconnect&lt;/code&gt; 로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="2c7687356708e53bb03ebdb309d787fa148273a9" translate="yes" xml:space="preserve">
          <source>DEP0007: Replace cluster worker.suicide with worker.exitedAfterDisconnect</source>
          <target state="translated">DEP0007 : 클러스터 worker.suicide를 worker.exitedAfterDisconnect로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="828ec0ad4c00594363c0ba9e4c14b450135a9bbc" translate="yes" xml:space="preserve">
          <source>DEP0008: &lt;code&gt;require('constants')&lt;/code&gt;</source>
          <target state="translated">DEP0008 : &lt;code&gt;require('constants')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a11f6b7afe6e1641de65cb5d50f19210aada17" translate="yes" xml:space="preserve">
          <source>DEP0008: require('constants')</source>
          <target state="translated">DEP0008 : require ( '상수')</target>
        </trans-unit>
        <trans-unit id="ee6fa44a1694192c7b17b73fe3ec6396eb4fa4e8" translate="yes" xml:space="preserve">
          <source>DEP0009: &lt;code&gt;crypto.pbkdf2&lt;/code&gt; without digest</source>
          <target state="translated">DEP0009 : 다이제스트없는 &lt;code&gt;crypto.pbkdf2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87d0ac5b822174e2be70cbec3abac8e152f563a2" translate="yes" xml:space="preserve">
          <source>DEP0009: crypto.pbkdf2 without digest</source>
          <target state="translated">DEP0009 : 요약없는 crypto.pbkdf2</target>
        </trans-unit>
        <trans-unit id="d97e86c8c22fcd4d5e8b1e4d4d43fcf691d88d23" translate="yes" xml:space="preserve">
          <source>DEP0010: &lt;code&gt;crypto.createCredentials&lt;/code&gt;</source>
          <target state="translated">DEP0010 : &lt;code&gt;crypto.createCredentials&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c497a679c79fc4c69292018d43e4559b0ac2413" translate="yes" xml:space="preserve">
          <source>DEP0010: crypto.createCredentials</source>
          <target state="translated">DEP0010 : crypto.createCredentials</target>
        </trans-unit>
        <trans-unit id="71bfca0ef0e54297ce2bb3e818e00f1fa1f9ba9c" translate="yes" xml:space="preserve">
          <source>DEP0011: &lt;code&gt;crypto.Credentials&lt;/code&gt;</source>
          <target state="translated">DEP0011 : &lt;code&gt;crypto.Credentials&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae10ac0b8fc4a6d8c98e6a51d9fb8e44ab34b1df" translate="yes" xml:space="preserve">
          <source>DEP0011: crypto.Credentials</source>
          <target state="translated">DEP0011 : 암호화. 인증서</target>
        </trans-unit>
        <trans-unit id="316fa6e05a79d9b73a38bada194cd39fb99fd97f" translate="yes" xml:space="preserve">
          <source>DEP0012: &lt;code&gt;Domain.dispose&lt;/code&gt;</source>
          <target state="translated">DEP0012 : &lt;code&gt;Domain.dispose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3a71ce205b48babe6c90e7f907d58fbd17dfd6a" translate="yes" xml:space="preserve">
          <source>DEP0012: Domain.dispose</source>
          <target state="translated">DEP0012 : Domain.dispose</target>
        </trans-unit>
        <trans-unit id="adf2daf4f7a0ae334bbe79b3abad5ace7c0ea6c2" translate="yes" xml:space="preserve">
          <source>DEP0013: &lt;code&gt;fs&lt;/code&gt; asynchronous function without callback</source>
          <target state="translated">DEP0013 : 콜백없는 &lt;code&gt;fs&lt;/code&gt; 비동기 함수</target>
        </trans-unit>
        <trans-unit id="a26ad7ed77d1e1fec63c5eb1e75c6d74a5959fbc" translate="yes" xml:space="preserve">
          <source>DEP0013: fs asynchronous function without callback</source>
          <target state="translated">DEP0013 : 콜백없는 fs 비동기 함수</target>
        </trans-unit>
        <trans-unit id="3b50e00699d66fe069d66cec160249c18da3ad15" translate="yes" xml:space="preserve">
          <source>DEP0014: &lt;code&gt;fs.read&lt;/code&gt; legacy String interface</source>
          <target state="translated">DEP0014 : &lt;code&gt;fs.read&lt;/code&gt; 레거시 문자열 인터페이스</target>
        </trans-unit>
        <trans-unit id="47e7868cbbc035988386a3affdfbc92a5e6a78e9" translate="yes" xml:space="preserve">
          <source>DEP0014: fs.read legacy String interface</source>
          <target state="translated">DEP0014 : fs.read 레거시 문자열 인터페이스</target>
        </trans-unit>
        <trans-unit id="9e13ba4b20bbe63bf4987b05057b6e3b4a611cdf" translate="yes" xml:space="preserve">
          <source>DEP0015: &lt;code&gt;fs.readSync&lt;/code&gt; legacy String interface</source>
          <target state="translated">DEP0015 : &lt;code&gt;fs.readSync&lt;/code&gt; 레거시 문자열 인터페이스</target>
        </trans-unit>
        <trans-unit id="4fa3397e75e98f30ebbb208af1b61ee67e5be3f4" translate="yes" xml:space="preserve">
          <source>DEP0015: fs.readSync legacy String interface</source>
          <target state="translated">DEP0015 : fs.readSync 레거시 문자열 인터페이스</target>
        </trans-unit>
        <trans-unit id="10aba09f773ead07eb85a20d08cf58ef75836be3" translate="yes" xml:space="preserve">
          <source>DEP0016: &lt;code&gt;GLOBAL&lt;/code&gt;/&lt;code&gt;root&lt;/code&gt;</source>
          <target state="translated">DEP0016 : &lt;code&gt;GLOBAL&lt;/code&gt; / &lt;code&gt;root&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51ca7c26404986d5b3451435367f963386c17668" translate="yes" xml:space="preserve">
          <source>DEP0016: GLOBAL/root</source>
          <target state="translated">DEP0016 : 글로벌 / 루트</target>
        </trans-unit>
        <trans-unit id="04b51bac236b3c0f2b8cfc528ef28284b664428e" translate="yes" xml:space="preserve">
          <source>DEP0017: &lt;code&gt;Intl.v8BreakIterator&lt;/code&gt;</source>
          <target state="translated">DEP0017 : &lt;code&gt;Intl.v8BreakIterator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee0a5dc8ef9ad615ea6d8087c887810ccc5e5435" translate="yes" xml:space="preserve">
          <source>DEP0017: Intl.v8BreakIterator</source>
          <target state="translated">DEP0017 : Intl.v8BreakIterator</target>
        </trans-unit>
        <trans-unit id="07671985a361d615ab78402ad3a4a1944f441fe8" translate="yes" xml:space="preserve">
          <source>DEP0018: Unhandled promise rejections</source>
          <target state="translated">DEP0018 : 처리되지 않은 약속 거부</target>
        </trans-unit>
        <trans-unit id="70d0283840254440a372830520fec40ec9eeb7c4" translate="yes" xml:space="preserve">
          <source>DEP0019: &lt;code&gt;require('.')&lt;/code&gt; resolved outside directory</source>
          <target state="translated">DEP0019 : &lt;code&gt;require('.')&lt;/code&gt; 가 디렉터리 외부에서 확인되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1c48ca9221b1390ae100d21485dd5efd2b1e0f06" translate="yes" xml:space="preserve">
          <source>DEP0019: require('.') resolved outside directory</source>
          <target state="translated">DEP0019 : require ( '.')가 디렉토리 외부에서 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="c34e703386f8c7c074874d96214fecec42283deb" translate="yes" xml:space="preserve">
          <source>DEP0020: &lt;code&gt;Server.connections&lt;/code&gt;</source>
          <target state="translated">DEP0020 : &lt;code&gt;Server.connections&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e913497bba91765d8a33ccb377fe4eb998bb896" translate="yes" xml:space="preserve">
          <source>DEP0020: Server.connections</source>
          <target state="translated">DEP0020 : 서버 연결</target>
        </trans-unit>
        <trans-unit id="714fd63d8b5ec7d4de851462cfd0eeeb92d9055e" translate="yes" xml:space="preserve">
          <source>DEP0021: &lt;code&gt;Server.listenFD&lt;/code&gt;</source>
          <target state="translated">DEP0021 : &lt;code&gt;Server.listenFD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52ab1ad67f60ec89d2f4020a498ae3814e18ccc5" translate="yes" xml:space="preserve">
          <source>DEP0021: Server.listenFD</source>
          <target state="translated">DEP0021 : Server.listenFD</target>
        </trans-unit>
        <trans-unit id="b77837d3337eacaa3ed805aa481b8877e0445166" translate="yes" xml:space="preserve">
          <source>DEP0022: &lt;code&gt;os.tmpDir()&lt;/code&gt;</source>
          <target state="translated">DEP0022 : &lt;code&gt;os.tmpDir()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="228ac6129e463511657ea20810b2ecd28a412d3e" translate="yes" xml:space="preserve">
          <source>DEP0022: os.tmpDir()</source>
          <target state="translated">DEP0022 : os.tmpDir ()</target>
        </trans-unit>
        <trans-unit id="7250b9721eaf2a25d8ba35dd25b03033e82fe442" translate="yes" xml:space="preserve">
          <source>DEP0023: &lt;code&gt;os.getNetworkInterfaces()&lt;/code&gt;</source>
          <target state="translated">DEP0023 : &lt;code&gt;os.getNetworkInterfaces()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ceb47e792f73636d4d5902394990e63db24ef503" translate="yes" xml:space="preserve">
          <source>DEP0023: os.getNetworkInterfaces()</source>
          <target state="translated">DEP0023 : os.getNetworkInterfaces ()</target>
        </trans-unit>
        <trans-unit id="453421bf39644ee9539ab7978643d0c7ee933409" translate="yes" xml:space="preserve">
          <source>DEP0024: &lt;code&gt;REPLServer.prototype.convertToContext()&lt;/code&gt;</source>
          <target state="translated">DEP0024 : &lt;code&gt;REPLServer.prototype.convertToContext()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d8b35d0e5c5dbef90247b7fd50f1b31faf5cf93" translate="yes" xml:space="preserve">
          <source>DEP0024: REPLServer.prototype.convertToContext()</source>
          <target state="translated">DEP0024 : REPLServer.prototype.convertToContext ()</target>
        </trans-unit>
        <trans-unit id="543314a86a03a395b6905b91b93d84e134ea18d8" translate="yes" xml:space="preserve">
          <source>DEP0025: &lt;code&gt;require('sys')&lt;/code&gt;</source>
          <target state="translated">DEP0025 : &lt;code&gt;require('sys')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="845f81194a693dd601035277ae71effef155ac15" translate="yes" xml:space="preserve">
          <source>DEP0025: require('sys')</source>
          <target state="translated">DEP0025 : 요구 ( 'sys')</target>
        </trans-unit>
        <trans-unit id="cf94f8e43326aa7f1283ce1d02ae15aead3c7282" translate="yes" xml:space="preserve">
          <source>DEP0026: &lt;code&gt;util.print()&lt;/code&gt;</source>
          <target state="translated">DEP0026 : &lt;code&gt;util.print()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e0b2fbc6d3ea611dd21abe2cec67e7b80926869" translate="yes" xml:space="preserve">
          <source>DEP0026: util.print()</source>
          <target state="translated">DEP0026 : util.print ()</target>
        </trans-unit>
        <trans-unit id="cabc0c2bf8063a499954b69c4e336d7702b8adc2" translate="yes" xml:space="preserve">
          <source>DEP0027: &lt;code&gt;util.puts()&lt;/code&gt;</source>
          <target state="translated">DEP0027 : &lt;code&gt;util.puts()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="adab1d15a03ddb636e120706d886e8f5a4d35e26" translate="yes" xml:space="preserve">
          <source>DEP0027: util.puts()</source>
          <target state="translated">DEP0027 : util.puts ()</target>
        </trans-unit>
        <trans-unit id="a15ad0fb7a7ea3441c4d836252419abadcd952e4" translate="yes" xml:space="preserve">
          <source>DEP0028: &lt;code&gt;util.debug()&lt;/code&gt;</source>
          <target state="translated">DEP0028 : &lt;code&gt;util.debug()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09a1f60306e02272b7980ea5d9599788daadb376" translate="yes" xml:space="preserve">
          <source>DEP0028: util.debug()</source>
          <target state="translated">DEP0028 : util.debug ()</target>
        </trans-unit>
        <trans-unit id="62c0c8cd99a8ca7233b788ece39135099499fa86" translate="yes" xml:space="preserve">
          <source>DEP0029: &lt;code&gt;util.error()&lt;/code&gt;</source>
          <target state="translated">DEP0029 : &lt;code&gt;util.error()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f654c7a40e78a0eb142e62cc0d8137023f1b8629" translate="yes" xml:space="preserve">
          <source>DEP0029: util.error()</source>
          <target state="translated">DEP0029 : util.error ()</target>
        </trans-unit>
        <trans-unit id="84183918e5664c46482e24c151032a2193298aa1" translate="yes" xml:space="preserve">
          <source>DEP0030: &lt;code&gt;SlowBuffer&lt;/code&gt;</source>
          <target state="translated">DEP0030 : &lt;code&gt;SlowBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a89d71d17e27ca9f382ea6f1d981a8218d855bf" translate="yes" xml:space="preserve">
          <source>DEP0030: SlowBuffer</source>
          <target state="translated">DEP0030 : 슬로우 버퍼</target>
        </trans-unit>
        <trans-unit id="afbb76238d9513cfe8503c2245616e8f90bbc9da" translate="yes" xml:space="preserve">
          <source>DEP0031: &lt;code&gt;ecdh.setPublicKey()&lt;/code&gt;</source>
          <target state="translated">DEP0031 : &lt;code&gt;ecdh.setPublicKey()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98de69ca0acc868a75643d8dcf5de5959bf0e76e" translate="yes" xml:space="preserve">
          <source>DEP0031: ecdh.setPublicKey()</source>
          <target state="translated">DEP0031 : ecdh.setPublicKey ()</target>
        </trans-unit>
        <trans-unit id="cfe6aa4b11895930729685c9083cdc37d5ddce1d" translate="yes" xml:space="preserve">
          <source>DEP0032: &lt;code&gt;domain&lt;/code&gt; module</source>
          <target state="translated">DEP0032 : &lt;code&gt;domain&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="6602362f91e73319c257db85bfad5c60692a1f3c" translate="yes" xml:space="preserve">
          <source>DEP0032: domain module</source>
          <target state="translated">DEP0032 : 도메인 모듈</target>
        </trans-unit>
        <trans-unit id="eea031254b56f1bc33e3a17210ae37c16d5c4752" translate="yes" xml:space="preserve">
          <source>DEP0033: &lt;code&gt;EventEmitter.listenerCount()&lt;/code&gt;</source>
          <target state="translated">DEP0033 : &lt;code&gt;EventEmitter.listenerCount()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a517fdd416d730a1a0cbc117ebce8092852c356" translate="yes" xml:space="preserve">
          <source>DEP0033: EventEmitter.listenerCount()</source>
          <target state="translated">DEP0033 : EventEmitter.listenerCount ()</target>
        </trans-unit>
        <trans-unit id="5440c5c292b52ca76132fb4622a9e5facf392f90" translate="yes" xml:space="preserve">
          <source>DEP0034: &lt;code&gt;fs.exists(path, callback)&lt;/code&gt;</source>
          <target state="translated">DEP0034 : &lt;code&gt;fs.exists(path, callback)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63a61780945c902eb61dd21547ff578ed40890a5" translate="yes" xml:space="preserve">
          <source>DEP0034: fs.exists(path, callback)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0034 : fs.exists (경로, 콜백) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L206&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ed19fd28ca779b11d55fb9293adeff58cf2f675" translate="yes" xml:space="preserve">
          <source>DEP0035: &lt;code&gt;fs.lchmod(path, mode, callback)&lt;/code&gt;</source>
          <target state="translated">DEP0035 : &lt;code&gt;fs.lchmod(path, mode, callback)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cc548cd471299c5ab77bc4df714e0d8adff1498" translate="yes" xml:space="preserve">
          <source>DEP0035: fs.lchmod(path, mode, callback)</source>
          <target state="translated">DEP0035 : fs.lchmod (경로, 모드, 콜백)</target>
        </trans-unit>
        <trans-unit id="888afea7b5b58bea7e4cdbf8bf079110b68aa4fe" translate="yes" xml:space="preserve">
          <source>DEP0036: &lt;code&gt;fs.lchmodSync(path, mode)&lt;/code&gt;</source>
          <target state="translated">DEP0036 : &lt;code&gt;fs.lchmodSync(path, mode)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df15e1f4a20c2f6c1a8364dd28e035de2392eb49" translate="yes" xml:space="preserve">
          <source>DEP0036: fs.lchmodSync(path, mode)</source>
          <target state="translated">DEP0036 : fs.lchmodSync (경로, 모드)</target>
        </trans-unit>
        <trans-unit id="b93e92965cd06cd2556c1fb3bbc24e5b02453796" translate="yes" xml:space="preserve">
          <source>DEP0037: &lt;code&gt;fs.lchown(path, uid, gid, callback)&lt;/code&gt;</source>
          <target state="translated">DEP0037 : &lt;code&gt;fs.lchown(path, uid, gid, callback)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04dd0966062896e4ed5b16ad2eb2b323d7462f6f" translate="yes" xml:space="preserve">
          <source>DEP0037: fs.lchown(path, uid, gid, callback)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L1090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0037 : fs.lchown (경로, UID, GID, 콜백) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L1090&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5a5f5ce3d6e7176e99fab83f4818cff3534df90" translate="yes" xml:space="preserve">
          <source>DEP0038: &lt;code&gt;fs.lchownSync(path, uid, gid)&lt;/code&gt;</source>
          <target state="translated">DEP0038 : &lt;code&gt;fs.lchownSync(path, uid, gid)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="084b173a1d85c1821d4f3a13c46d56f0e80814c0" translate="yes" xml:space="preserve">
          <source>DEP0038: fs.lchownSync(path, uid, gid)&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L1100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0038 : fs.lchownSync (경로, UID, GID) &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L1100&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b07750dc4b1675012bb753745af8fee671202158" translate="yes" xml:space="preserve">
          <source>DEP0039: &lt;code&gt;require.extensions&lt;/code&gt;</source>
          <target state="translated">DEP0039 : &lt;code&gt;require.extensions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd7ad4e8eb56ecb10cabdb660d5a8dec5bf3e3d3" translate="yes" xml:space="preserve">
          <source>DEP0039: require.extensions</source>
          <target state="translated">DEP0039 : require.extensions</target>
        </trans-unit>
        <trans-unit id="9d276971a64e69eac77b4d333caf95119c929856" translate="yes" xml:space="preserve">
          <source>DEP0040: &lt;code&gt;punycode&lt;/code&gt; module</source>
          <target state="translated">DEP0040 : &lt;code&gt;punycode&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="176f5b1252ea99dfbca94904d4b2d5a7dbe66070" translate="yes" xml:space="preserve">
          <source>DEP0040: punycode module</source>
          <target state="translated">DEP0040 : 퓨니 코드 모듈</target>
        </trans-unit>
        <trans-unit id="51b0b4b106fc321dced1d8d87487730258716dbf" translate="yes" xml:space="preserve">
          <source>DEP0041: &lt;code&gt;NODE_REPL_HISTORY_FILE&lt;/code&gt; environment variable</source>
          <target state="translated">DEP0041 : &lt;code&gt;NODE_REPL_HISTORY_FILE&lt;/code&gt; 환경 변수</target>
        </trans-unit>
        <trans-unit id="bf8098eac909adabdc49d6d09a3d4af20348d137" translate="yes" xml:space="preserve">
          <source>DEP0041: NODE_REPL_HISTORY_FILE environment variable</source>
          <target state="translated">DEP0041 : NODE_REPL_HISTORY_FILE 환경 변수</target>
        </trans-unit>
        <trans-unit id="f5a9bf746d6a3e79969427e3bc50ae93db08cffa" translate="yes" xml:space="preserve">
          <source>DEP0042: &lt;code&gt;tls.CryptoStream&lt;/code&gt;</source>
          <target state="translated">DEP0042 : &lt;code&gt;tls.CryptoStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05f6a925d701bd842ff5228feda0db840c2e9614" translate="yes" xml:space="preserve">
          <source>DEP0042: tls.CryptoStream</source>
          <target state="translated">DEP0042 : tls.CryptoStream</target>
        </trans-unit>
        <trans-unit id="69106c90a7fd5272a943f7045e35b3d4b1bb6846" translate="yes" xml:space="preserve">
          <source>DEP0043: &lt;code&gt;tls.SecurePair&lt;/code&gt;</source>
          <target state="translated">DEP0043 : tls. &lt;code&gt;tls.SecurePair&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8781cfcf5bfb84cb2cbb2eddb935a5375d19bfbe" translate="yes" xml:space="preserve">
          <source>DEP0043: tls.SecurePair</source>
          <target state="translated">DEP0043 : tls.SecurePair</target>
        </trans-unit>
        <trans-unit id="fbd75894cddfa0b3fce8ab856e9868848bbf97e0" translate="yes" xml:space="preserve">
          <source>DEP0044: &lt;code&gt;util.isArray()&lt;/code&gt;</source>
          <target state="translated">DEP0044 : &lt;code&gt;util.isArray()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b3881a6a82257d54f8feef2373e66e2d2825302" translate="yes" xml:space="preserve">
          <source>DEP0044: util.isArray()</source>
          <target state="translated">DEP0044 : util.isArray ()</target>
        </trans-unit>
        <trans-unit id="634ff0b9ab3aa01052bc516baeb8675c7374604e" translate="yes" xml:space="preserve">
          <source>DEP0045: &lt;code&gt;util.isBoolean()&lt;/code&gt;</source>
          <target state="translated">DEP0045 : &lt;code&gt;util.isBoolean()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="710f3843a0527cfd00df73e7d1db6f410e285ce8" translate="yes" xml:space="preserve">
          <source>DEP0045: util.isBoolean()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L55&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0045 : util.isBoolean () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L55&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1f3431b4f5a26c8f628464e6068ac33e9af77ee" translate="yes" xml:space="preserve">
          <source>DEP0046: &lt;code&gt;util.isBuffer()&lt;/code&gt;</source>
          <target state="translated">DEP0046 : &lt;code&gt;util.isBuffer()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1aea2ddc5414628c4331e10d63f42b92e13f3bbc" translate="yes" xml:space="preserve">
          <source>DEP0046: util.isBuffer()</source>
          <target state="translated">DEP0046 : util.isBuffer ()</target>
        </trans-unit>
        <trans-unit id="6620f56867c03da4f6cabc7e57ff45688e24ba73" translate="yes" xml:space="preserve">
          <source>DEP0047: &lt;code&gt;util.isDate()&lt;/code&gt;</source>
          <target state="translated">DEP0047 : &lt;code&gt;util.isDate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44b740ad505d1cb6cdec80d5be04528598c842c0" translate="yes" xml:space="preserve">
          <source>DEP0047: util.isDate()</source>
          <target state="translated">DEP0047 : util.isDate ()</target>
        </trans-unit>
        <trans-unit id="2dad32ba25f85047aa361a96a5f7c228fbacdedf" translate="yes" xml:space="preserve">
          <source>DEP0048: &lt;code&gt;util.isError()&lt;/code&gt;</source>
          <target state="translated">DEP0048 : &lt;code&gt;util.isError()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a67e639836e8937db8e993edfdaa78a39d9539f" translate="yes" xml:space="preserve">
          <source>DEP0048: util.isError()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0048 : util.isError () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L87&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="961e5eca91256dcddc6e16b34da900e1bac1128c" translate="yes" xml:space="preserve">
          <source>DEP0049: &lt;code&gt;util.isFunction()&lt;/code&gt;</source>
          <target state="translated">DEP0049 : &lt;code&gt;util.isFunction()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5ad2179d761cc149d4db8b60dbcacda0c191f" translate="yes" xml:space="preserve">
          <source>DEP0049: util.isFunction()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L91&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0049 : util.isFunction () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L91&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="053f2c31d3eb667a83a2f0c06187d264e85f22bd" translate="yes" xml:space="preserve">
          <source>DEP0050: &lt;code&gt;util.isNull()&lt;/code&gt;</source>
          <target state="translated">DEP0050 : &lt;code&gt;util.isNull()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="064a67f91bce745d2d27fb5d73b9ee7d88a61128" translate="yes" xml:space="preserve">
          <source>DEP0050: util.isNull()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L59&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0050 : util.isNull () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L59&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a61cc46f7ddd4c14ce92bb4978388d729617c24" translate="yes" xml:space="preserve">
          <source>DEP0051: &lt;code&gt;util.isNullOrUndefined()&lt;/code&gt;</source>
          <target state="translated">DEP0051 : &lt;code&gt;util.isNullOrUndefined()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="592c1088effff2c9a193abb973fe08caf870d7f6" translate="yes" xml:space="preserve">
          <source>DEP0051: util.isNullOrUndefined()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0051 : util.isNullOrUndefined () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L63&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e0d7df33ae8db895bdb3697b51583d53e6479ed" translate="yes" xml:space="preserve">
          <source>DEP0052: &lt;code&gt;util.isNumber()&lt;/code&gt;</source>
          <target state="translated">DEP0052 : &lt;code&gt;util.isNumber()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f899d2b58a80abd3437616f7dfa359b4afa3a31d" translate="yes" xml:space="preserve">
          <source>DEP0052: util.isNumber()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L67&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0052 : util.isNumber () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L67&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="755c22d6eb992c78bb5f5214e5b961d2edb3469e" translate="yes" xml:space="preserve">
          <source>DEP0053 util.isObject()</source>
          <target state="translated">DEP0053 util.isObject ()</target>
        </trans-unit>
        <trans-unit id="8014788197d395305146ab0da5a12564cd5de51e" translate="yes" xml:space="preserve">
          <source>DEP0053: &lt;code&gt;util.isObject()&lt;/code&gt;</source>
          <target state="translated">DEP0053 : &lt;code&gt;util.isObject()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39c2d1c151c8361297013901a42ec8dbe4793eb7" translate="yes" xml:space="preserve">
          <source>DEP0054: &lt;code&gt;util.isPrimitive()&lt;/code&gt;</source>
          <target state="translated">DEP0054 : &lt;code&gt;util.isPrimitive()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="587631cd2d79b0cb1d2ca334a75496b416d83d86" translate="yes" xml:space="preserve">
          <source>DEP0054: util.isPrimitive()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L95&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0054 : util.isPrimitive () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L95&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d86daefa4d34d5194716477c1c97d3170593aaf" translate="yes" xml:space="preserve">
          <source>DEP0055: &lt;code&gt;util.isRegExp()&lt;/code&gt;</source>
          <target state="translated">DEP0055 : &lt;code&gt;util.isRegExp()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14b0d2074c966ec0239d6d07624776ab39db72ab" translate="yes" xml:space="preserve">
          <source>DEP0055: util.isRegExp()</source>
          <target state="translated">DEP0055 : util.isRegExp ()</target>
        </trans-unit>
        <trans-unit id="607cf13dffd9bb594a3caa53ea84eff6ac3c2a4b" translate="yes" xml:space="preserve">
          <source>DEP0056: &lt;code&gt;util.isString()&lt;/code&gt;</source>
          <target state="translated">DEP0056 : &lt;code&gt;util.isString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20c9be669fd8d537f653875881aaf3c46eb4eeae" translate="yes" xml:space="preserve">
          <source>DEP0056: util.isString()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L71&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0056 : util.isString () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L71&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d47db66b0851dfaec411e09a4612e728c3dde8" translate="yes" xml:space="preserve">
          <source>DEP0057: &lt;code&gt;util.isSymbol()&lt;/code&gt;</source>
          <target state="translated">DEP0057 : &lt;code&gt;util.isSymbol()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e3e6d38f008e9c6de1d1b7d0885e456b2eb2c0b" translate="yes" xml:space="preserve">
          <source>DEP0057: util.isSymbol()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0057 : util.isSymbol () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L75&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a667c6b7aeb4d18b14e5e44f4e35481d35d0314" translate="yes" xml:space="preserve">
          <source>DEP0058: &lt;code&gt;util.isUndefined()&lt;/code&gt;</source>
          <target state="translated">DEP0058 : &lt;code&gt;util.isUndefined()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd34e92af7c23ba7bce2f59a19f79610fea8e394" translate="yes" xml:space="preserve">
          <source>DEP0058: util.isUndefined()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L79&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0058 : util.isUndefined () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L79&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2a2ff58e1896b2274bc2b497f1b55c8405940d4" translate="yes" xml:space="preserve">
          <source>DEP0059: &lt;code&gt;util.log()&lt;/code&gt;</source>
          <target state="translated">DEP0059 : &lt;code&gt;util.log()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3935869d21cbb3f0d45dbe8bfaaa3276348c607" translate="yes" xml:space="preserve">
          <source>DEP0059: util.log()&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0059 : util.log () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/util.js#L118&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57996141b3c4f344c9f75fd8a6291c37d6e19a58" translate="yes" xml:space="preserve">
          <source>DEP0060: &lt;code&gt;util._extend()&lt;/code&gt;</source>
          <target state="translated">DEP0060 : &lt;code&gt;util._extend()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbb44fb45b4abf324f1139b9a5035e2f9a648991" translate="yes" xml:space="preserve">
          <source>DEP0060: util._extend()</source>
          <target state="translated">DEP0060 : util._extend ()</target>
        </trans-unit>
        <trans-unit id="9e71f528e907cf0d4f95f1d0ac76c62266ae560a" translate="yes" xml:space="preserve">
          <source>DEP0061: &lt;code&gt;fs.SyncWriteStream&lt;/code&gt;</source>
          <target state="translated">DEP0061 : &lt;code&gt;fs.SyncWriteStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a45922680bf90954888a3cc1742b24504d30b283" translate="yes" xml:space="preserve">
          <source>DEP0061: fs.SyncWriteStream</source>
          <target state="translated">DEP0061 : fs.SyncWriteStream</target>
        </trans-unit>
        <trans-unit id="9accccac83bf60488b9c924efd333430c0a861ed" translate="yes" xml:space="preserve">
          <source>DEP0062: &lt;code&gt;node --debug&lt;/code&gt;</source>
          <target state="translated">DEP0062 : &lt;code&gt;node --debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ee556a6c0f3d22e47651510bd5376a65f3b24a4" translate="yes" xml:space="preserve">
          <source>DEP0062: node --debug</source>
          <target state="translated">DEP0062 : 노드-디버그</target>
        </trans-unit>
        <trans-unit id="6e431748ba6faf1729778baeed5fab98722a0976" translate="yes" xml:space="preserve">
          <source>DEP0063: &lt;code&gt;ServerResponse.prototype.writeHeader()&lt;/code&gt;</source>
          <target state="translated">DEP0063 : &lt;code&gt;ServerResponse.prototype.writeHeader()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8da770448a5de1ecb62d6c775926d07c6ed0f932" translate="yes" xml:space="preserve">
          <source>DEP0063: ServerResponse.prototype.writeHeader()</source>
          <target state="translated">DEP0063 : ServerResponse.prototype.writeHeader ()</target>
        </trans-unit>
        <trans-unit id="9e7c9544a2eeaa5599e9d67783acdb86423288bc" translate="yes" xml:space="preserve">
          <source>DEP0064: &lt;code&gt;tls.createSecurePair()&lt;/code&gt;</source>
          <target state="translated">DEP0064 : &lt;code&gt;tls.createSecurePair()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a429ab899216f49653d4922df38415346344e67" translate="yes" xml:space="preserve">
          <source>DEP0064: tls.createSecurePair()</source>
          <target state="translated">DEP0064 : tls.createSecurePair ()</target>
        </trans-unit>
        <trans-unit id="0b819e1bd88fc69a923da7d35c97e55e9d4b6523" translate="yes" xml:space="preserve">
          <source>DEP0065: &lt;code&gt;repl.REPL_MODE_MAGIC&lt;/code&gt; and &lt;code&gt;NODE_REPL_MODE=magic&lt;/code&gt;</source>
          <target state="translated">DEP0065 : &lt;code&gt;repl.REPL_MODE_MAGIC&lt;/code&gt; 및 &lt;code&gt;NODE_REPL_MODE=magic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d29d355c6a8bd8f24ec818fe6fae487ee033f04c" translate="yes" xml:space="preserve">
          <source>DEP0065: repl.REPL_MODE_MAGIC and NODE_REPL_MODE=magic</source>
          <target state="translated">DEP0065 : repl.REPL_MODE_MAGIC 및 NODE_REPL_MODE = magic</target>
        </trans-unit>
        <trans-unit id="3011de10d19699d32e9bfa1ac0557c3b10d78388" translate="yes" xml:space="preserve">
          <source>DEP0066: &lt;code&gt;OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames&lt;/code&gt;</source>
          <target state="translated">DEP0066 : &lt;code&gt;OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8648c74e5602b3ca96dc90a009f388c26ad684d6" translate="yes" xml:space="preserve">
          <source>DEP0066: OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames</source>
          <target state="translated">DEP0066 : OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames</target>
        </trans-unit>
        <trans-unit id="815b0df443e07a517463cb9cad0d0d082410eaff" translate="yes" xml:space="preserve">
          <source>DEP0067: &lt;code&gt;OutgoingMessage.prototype._renderHeaders&lt;/code&gt;</source>
          <target state="translated">DEP0067 : &lt;code&gt;OutgoingMessage.prototype._renderHeaders&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="580079a21020b20cb2cb2609c8ada6819a83d9a5" translate="yes" xml:space="preserve">
          <source>DEP0067: OutgoingMessage.prototype._renderHeaders</source>
          <target state="translated">DEP0067 : OutgoingMessage.prototype._renderHeaders</target>
        </trans-unit>
        <trans-unit id="9510f37a7f7924829cdfa5cb69c4faffcc14568a" translate="yes" xml:space="preserve">
          <source>DEP0068: &lt;code&gt;node debug&lt;/code&gt;</source>
          <target state="translated">DEP0068 : &lt;code&gt;node debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c183af9a2e9e3043f11355e17a89b9628a28707" translate="yes" xml:space="preserve">
          <source>DEP0068: node debug</source>
          <target state="translated">DEP0068 : 노드 디버그</target>
        </trans-unit>
        <trans-unit id="569218e5e468e71b41ee1cdb4e82d945cab2aa0d" translate="yes" xml:space="preserve">
          <source>DEP0069: &lt;code&gt;vm.runInDebugContext(string)&lt;/code&gt;</source>
          <target state="translated">DEP0069 : &lt;code&gt;vm.runInDebugContext(string)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee38252d1829ce440716b62478e009bdf22221c7" translate="yes" xml:space="preserve">
          <source>DEP0069: vm.runInDebugContext(string)</source>
          <target state="translated">DEP0069 : vm.runInDebugContext (문자열)</target>
        </trans-unit>
        <trans-unit id="473469ae0e50324f08ec32c0597cdebdae050bf8" translate="yes" xml:space="preserve">
          <source>DEP0070: &lt;code&gt;async_hooks.currentId()&lt;/code&gt;</source>
          <target state="translated">DEP0070 : &lt;code&gt;async_hooks.currentId()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7f036738eb3d3cf5acddd984282ea1f53b06924" translate="yes" xml:space="preserve">
          <source>DEP0070: async_hooks.currentId()</source>
          <target state="translated">DEP0070 : async_hooks.currentId ()</target>
        </trans-unit>
        <trans-unit id="69f391d8374d02e50e03acf157ad5c44a35d9362" translate="yes" xml:space="preserve">
          <source>DEP0071: &lt;code&gt;async_hooks.triggerId()&lt;/code&gt;</source>
          <target state="translated">DEP0071 : &lt;code&gt;async_hooks.triggerId()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c79319e5e3cf879ccc8fd2d245f40f459d69c9d" translate="yes" xml:space="preserve">
          <source>DEP0071: async_hooks.triggerId()</source>
          <target state="translated">DEP0071 : async_hooks.triggerId ()</target>
        </trans-unit>
        <trans-unit id="ee2afcc015b1c9be2ef08140262a4b18c5f57481" translate="yes" xml:space="preserve">
          <source>DEP0072: &lt;code&gt;async_hooks.AsyncResource.triggerId()&lt;/code&gt;</source>
          <target state="translated">DEP0072 : &lt;code&gt;async_hooks.AsyncResource.triggerId()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="564deeb4de3c7990589faf13cb0845457709a0c9" translate="yes" xml:space="preserve">
          <source>DEP0072: async_hooks.AsyncResource.triggerId()</source>
          <target state="translated">DEP0072 : async_hooks.AsyncResource.triggerId ()</target>
        </trans-unit>
        <trans-unit id="87ff9eff507be68237cea7d0485535d0e0573997" translate="yes" xml:space="preserve">
          <source>DEP0073: Several internal properties of &lt;code&gt;net.Server&lt;/code&gt;</source>
          <target state="translated">DEP0073 : 여러 내부 속성 &lt;code&gt;net.Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d41b5cdd606c15e2314e390c1f8ad4959fe2c118" translate="yes" xml:space="preserve">
          <source>DEP0073: Several internal properties of net.Server</source>
          <target state="translated">DEP0073 : net.Server의 여러 내부 속성</target>
        </trans-unit>
        <trans-unit id="e5a846ab89de4b00b10412cc4c137af42061ba8a" translate="yes" xml:space="preserve">
          <source>DEP0074: &lt;code&gt;REPLServer.bufferedCommand&lt;/code&gt;</source>
          <target state="translated">DEP0074 : &lt;code&gt;REPLServer.bufferedCommand&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10bd72f88a0e6ec1105031f59298324cd305482c" translate="yes" xml:space="preserve">
          <source>DEP0074: REPLServer.bufferedCommand</source>
          <target state="translated">DEP0074 : REPLServer.bufferedCommand</target>
        </trans-unit>
        <trans-unit id="867a3d11b51b80205bb3790c3336e4fdfea25f98" translate="yes" xml:space="preserve">
          <source>DEP0075: &lt;code&gt;REPLServer.parseREPLKeyword()&lt;/code&gt;</source>
          <target state="translated">DEP0075 : &lt;code&gt;REPLServer.parseREPLKeyword()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56a456b8d04924bce83a53e07150c1982ee00c04" translate="yes" xml:space="preserve">
          <source>DEP0075: REPLServer.parseREPLKeyword()</source>
          <target state="translated">DEP0075 : REPLServer.parseREPLKeyword ()</target>
        </trans-unit>
        <trans-unit id="e533741a714a3695c411cc8c4a02f1cd7ca15fd5" translate="yes" xml:space="preserve">
          <source>DEP0076: &lt;code&gt;tls.parseCertString()&lt;/code&gt;</source>
          <target state="translated">DEP0076 : &lt;code&gt;tls.parseCertString()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4e712fb818197bd796389661a785d6c6b53a402" translate="yes" xml:space="preserve">
          <source>DEP0076: tls.parseCertString()</source>
          <target state="translated">DEP0076 : tls.parseCertString ()</target>
        </trans-unit>
        <trans-unit id="6d08ac8c54687dfaf7a738fe1de947cf1567c357" translate="yes" xml:space="preserve">
          <source>DEP0077: &lt;code&gt;Module._debug()&lt;/code&gt;</source>
          <target state="translated">DEP0077 : &lt;code&gt;Module._debug()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="827fb274c931c6d67af948ca8cb48d46960b2bc5" translate="yes" xml:space="preserve">
          <source>DEP0077: Module._debug()</source>
          <target state="translated">DEP0077 : Module._debug ()</target>
        </trans-unit>
        <trans-unit id="503a261f98e642f8a06e4a6f78d1ef97de8278ba" translate="yes" xml:space="preserve">
          <source>DEP0078: &lt;code&gt;REPLServer.turnOffEditorMode()&lt;/code&gt;</source>
          <target state="translated">DEP0078 : &lt;code&gt;REPLServer.turnOffEditorMode()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b51f849982248d62ac0684e99b69c2d052b27a2" translate="yes" xml:space="preserve">
          <source>DEP0078: REPLServer.turnOffEditorMode()</source>
          <target state="translated">DEP0078 : REPLServer.turnOffEditorMode ()</target>
        </trans-unit>
        <trans-unit id="89c6bfc424f4e2abb92bcb654264643c48f1f951" translate="yes" xml:space="preserve">
          <source>DEP0079: Custom inspection function on Objects via .inspect()</source>
          <target state="translated">DEP0079 : .inspect ()를 통한 객체의 사용자 정의 검사 기능</target>
        </trans-unit>
        <trans-unit id="39c0bb7da1ff3c29a9dd36ecde96eb08349be9c0" translate="yes" xml:space="preserve">
          <source>DEP0079: Custom inspection function on objects via &lt;code&gt;.inspect()&lt;/code&gt;</source>
          <target state="translated">DEP0079 : &lt;code&gt;.inspect()&lt;/code&gt; 를 통해 개체에 대한 사용자 지정 검사 기능</target>
        </trans-unit>
        <trans-unit id="93a85f6eeeadd86c455fb2aa6b1431a8a5491561" translate="yes" xml:space="preserve">
          <source>DEP0080: &lt;code&gt;path._makeLong()&lt;/code&gt;</source>
          <target state="translated">DEP0080 : &lt;code&gt;path._makeLong()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f019603cc50583a7f104dd22f6e9244987a66aa" translate="yes" xml:space="preserve">
          <source>DEP0080: path._makeLong()</source>
          <target state="translated">DEP0080 : path._makeLong ()</target>
        </trans-unit>
        <trans-unit id="5c70abc2e4314a995bb3a1ceb905842b81306da7" translate="yes" xml:space="preserve">
          <source>DEP0081: &lt;code&gt;fs.truncate()&lt;/code&gt; using a file descriptor</source>
          <target state="translated">DEP0081 : 파일 설명자를 사용하는 &lt;code&gt;fs.truncate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="542687c54b65b71a2d3b64415504c4eab36463c7" translate="yes" xml:space="preserve">
          <source>DEP0081: fs.truncate() using a file descriptor&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L654&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0081 : 파일 디스크립터를 사용하여 fs.truncate () &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/fs.js#L654&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd2d9ccbd02815e47b674fc8086f25e03780342c" translate="yes" xml:space="preserve">
          <source>DEP0082: &lt;code&gt;REPLServer.prototype.memory()&lt;/code&gt;</source>
          <target state="translated">DEP0082 : &lt;code&gt;REPLServer.prototype.memory()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2dff893b25a009c92416832b4981652ca30bcb2" translate="yes" xml:space="preserve">
          <source>DEP0082: REPLServer.prototype.memory()</source>
          <target state="translated">DEP0082 : REPLServer.prototype.memory ()</target>
        </trans-unit>
        <trans-unit id="98eb9ae623069dc2006ae63fd6242d1f0f1d860b" translate="yes" xml:space="preserve">
          <source>DEP0083: Disabling ECDH by setting &lt;code&gt;ecdhCurve&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">DEP0083 : &lt;code&gt;ecdhCurve&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하여 ECDH 비활성화</target>
        </trans-unit>
        <trans-unit id="d70923d0c949900cfb2b82aec8b22854b2334430" translate="yes" xml:space="preserve">
          <source>DEP0083: Disabling ECDH by setting ecdhCurve to false</source>
          <target state="translated">DEP0083 : ecdhCurve를 false로 설정하여 ECDH 비활성화</target>
        </trans-unit>
        <trans-unit id="608e7032b3ff7be0240828567205ef58c1dbe26e" translate="yes" xml:space="preserve">
          <source>DEP0084: requiring bundled internal dependencies</source>
          <target state="translated">DEP0084 : 번들 내부 종속성 필요</target>
        </trans-unit>
        <trans-unit id="3b0510a5ddf7a53ade86c6cb522aa2d0e68a9653" translate="yes" xml:space="preserve">
          <source>DEP0085: AsyncHooks Sensitive API</source>
          <target state="translated">DEP0085 : AsyncHooks 민감한 API</target>
        </trans-unit>
        <trans-unit id="7ac8f3d2481e98e0590071c5f9377366c6e3ca35" translate="yes" xml:space="preserve">
          <source>DEP0085: AsyncHooks sensitive API</source>
          <target state="translated">DEP0085 : AsyncHooks 민감한 API</target>
        </trans-unit>
        <trans-unit id="1b19efba51f6dcf4b64d3d0fccc6344738b66efc" translate="yes" xml:space="preserve">
          <source>DEP0086: Remove &lt;code&gt;runInAsyncIdScope&lt;/code&gt;</source>
          <target state="translated">DEP0086 : 제거 &lt;code&gt;runInAsyncIdScope&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3112dab5399a482cdf7257d5ba4a114955eb87c8" translate="yes" xml:space="preserve">
          <source>DEP0086: Remove runInAsyncIdScope</source>
          <target state="translated">DEP0086 : runInAsyncIdScope 제거</target>
        </trans-unit>
        <trans-unit id="ba55c2e636cf63e0cb61c06c140e5de03e82dd29" translate="yes" xml:space="preserve">
          <source>DEP0089: &lt;code&gt;require('assert')&lt;/code&gt;</source>
          <target state="translated">DEP0089 : &lt;code&gt;require('assert')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="511ff1c42d98e093f9ab9293471e77253d6bcbc3" translate="yes" xml:space="preserve">
          <source>DEP0089: require('assert')</source>
          <target state="translated">DEP0089 : 요구 ( '어설 션')</target>
        </trans-unit>
        <trans-unit id="5a4ec9c582f555ae08a1de56565a33475e78784b" translate="yes" xml:space="preserve">
          <source>DEP0090: Invalid GCM authentication tag lengths</source>
          <target state="translated">DEP0090 : 유효하지 않은 GCM 인증 태그 길이</target>
        </trans-unit>
        <trans-unit id="55cf20826c8c48fb938cf19c398b8183be82ed1a" translate="yes" xml:space="preserve">
          <source>DEP0091: &lt;code&gt;crypto.DEFAULT_ENCODING&lt;/code&gt;</source>
          <target state="translated">DEP0091 : &lt;code&gt;crypto.DEFAULT_ENCODING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c5db7a096e70ef1154214d857180b654a1d711c" translate="yes" xml:space="preserve">
          <source>DEP0091: crypto.DEFAULT_ENCODING</source>
          <target state="translated">DEP0091 : 암호 .DEFAULT_ENCODING</target>
        </trans-unit>
        <trans-unit id="73edd01924b96adac0db88e9aceb3145aa45523a" translate="yes" xml:space="preserve">
          <source>DEP0092: Top-level &lt;code&gt;this&lt;/code&gt; bound to &lt;code&gt;module.exports&lt;/code&gt;</source>
          <target state="translated">DEP0092 : &lt;code&gt;this&lt;/code&gt; 수준 은 &lt;code&gt;module.exports&lt;/code&gt; 에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="c1a5e705a645dc79b10e884dbec062be6d2ddf50" translate="yes" xml:space="preserve">
          <source>DEP0093: &lt;code&gt;crypto.fips&lt;/code&gt; is deprecated and replaced.</source>
          <target state="translated">DEP0093 : &lt;code&gt;crypto.fips&lt;/code&gt; 는 더 이상 사용되지 않으며 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="cddecf272e2acb5ec2d3ced7cddd81b513ef1bba" translate="yes" xml:space="preserve">
          <source>DEP0093: crypto.fips is deprecated and replaced.</source>
          <target state="translated">DEP0093 : crypto.fips는 더 이상 사용되지 않으며 교체되었습니다.</target>
        </trans-unit>
        <trans-unit id="0f8821f39e8713accd9c40fc0ebf48486ad13ec7" translate="yes" xml:space="preserve">
          <source>DEP0094: Using &lt;code&gt;assert.fail()&lt;/code&gt; with more than one argument.</source>
          <target state="translated">DEP0094 : 둘 이상의 인수와 함께 &lt;code&gt;assert.fail()&lt;/code&gt; 사용 .</target>
        </trans-unit>
        <trans-unit id="6ad175d830e65fe65a3e0aa46e52075649b76838" translate="yes" xml:space="preserve">
          <source>DEP0095: &lt;code&gt;timers.enroll()&lt;/code&gt;</source>
          <target state="translated">DEP0095 : &lt;code&gt;timers.enroll()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1ad756dd64d4af6899d2a9586dc60310383d569" translate="yes" xml:space="preserve">
          <source>DEP0095: timers.enroll()</source>
          <target state="translated">DEP0095 : timers.enroll ()</target>
        </trans-unit>
        <trans-unit id="1e8f7b9c33b077c7b0a52a28c549077a52f949dd" translate="yes" xml:space="preserve">
          <source>DEP0096: &lt;code&gt;timers.unenroll()&lt;/code&gt;</source>
          <target state="translated">DEP0096 : &lt;code&gt;timers.unenroll()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc15d7ea3647bf6ea8ed0ce5b08e6f17fd0e5b27" translate="yes" xml:space="preserve">
          <source>DEP0096: timers.unenroll()</source>
          <target state="translated">DEP0096 : timers.unenroll ()</target>
        </trans-unit>
        <trans-unit id="85e3e3954db366265f6c9dc1847962b9aa691ced" translate="yes" xml:space="preserve">
          <source>DEP0097: &lt;code&gt;MakeCallback&lt;/code&gt; with &lt;code&gt;domain&lt;/code&gt; property</source>
          <target state="translated">DEP0097 : &lt;code&gt;MakeCallback&lt;/code&gt; 와 &lt;code&gt;domain&lt;/code&gt; 특성</target>
        </trans-unit>
        <trans-unit id="4ec3bc6704b3f482b506229dac56d41374f30e1b" translate="yes" xml:space="preserve">
          <source>DEP0097: MakeCallback with domain property</source>
          <target state="translated">DEP0097 : 도메인 특성이있는 MakeCallback</target>
        </trans-unit>
        <trans-unit id="0ffd3c377f5619c4d643d99a658993e4b6aba656" translate="yes" xml:space="preserve">
          <source>DEP0098: AsyncHooks Embedder AsyncResource.emitBefore and AsyncResource.emitAfter APIs</source>
          <target state="translated">DEP0098 : AsyncHooks Embedder AsyncResource.emitBefore 및 AsyncResource.emitAfter API</target>
        </trans-unit>
        <trans-unit id="102ce52aab9e5f4d460b2d6194774d6d025b2ceb" translate="yes" xml:space="preserve">
          <source>DEP0098: AsyncHooks embedder &lt;code&gt;AsyncResource.emitBefore&lt;/code&gt; and &lt;code&gt;AsyncResource.emitAfter&lt;/code&gt; APIs</source>
          <target state="translated">DEP0098 : AsyncHooks 임 베더 &lt;code&gt;AsyncResource.emitBefore&lt;/code&gt; 및 &lt;code&gt;AsyncResource.emitAfter&lt;/code&gt; API</target>
        </trans-unit>
        <trans-unit id="acdb59eda3c5112165be1cf0b3f9cd2531e8b0f9" translate="yes" xml:space="preserve">
          <source>DEP0099: Async context-unaware &lt;code&gt;node::MakeCallback&lt;/code&gt; C++ APIs</source>
          <target state="translated">DEP0099 : 비동기 컨텍스트 비 인식 &lt;code&gt;node::MakeCallback&lt;/code&gt; C ++ API</target>
        </trans-unit>
        <trans-unit id="2ffc9a68386d98739278fd1241e28b27ed7db86b" translate="yes" xml:space="preserve">
          <source>DEP0099: async context-unaware node::MakeCallback C++ APIs</source>
          <target state="translated">DEP0099 : 비동기 컨텍스트 비 인식 노드 :: MakeCallback C ++ API</target>
        </trans-unit>
        <trans-unit id="b66dd63104c1d37235a1edd72acd36784a192d18" translate="yes" xml:space="preserve">
          <source>DEP0100: &lt;code&gt;process.assert()&lt;/code&gt;</source>
          <target state="translated">DEP0100 : &lt;code&gt;process.assert()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07b0cb55827f155d511617f638757dde1f01fff0" translate="yes" xml:space="preserve">
          <source>DEP0100: process.assert()</source>
          <target state="translated">DEP0100 : process.assert ()</target>
        </trans-unit>
        <trans-unit id="e48311ba2bac7cd6ff97203e9a8d5415749373af" translate="yes" xml:space="preserve">
          <source>DEP0101: --with-lttng</source>
          <target state="translated">DEP0101 : --with-lttng</target>
        </trans-unit>
        <trans-unit id="a70b056fafc97751590991d30ba31f17880cd17f" translate="yes" xml:space="preserve">
          <source>DEP0101: &lt;code&gt;--with-lttng&lt;/code&gt;</source>
          <target state="translated">DEP0101 : &lt;code&gt;--with-lttng&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ab16803ad90a02b02e548d4aa16a5e3fe1ccadb" translate="yes" xml:space="preserve">
          <source>DEP0102: Using &lt;code&gt;noAssert&lt;/code&gt; in &lt;code&gt;Buffer#(read|write)&lt;/code&gt; operations.</source>
          <target state="translated">DEP0102 : 사용 &lt;code&gt;noAssert&lt;/code&gt; 을 에 &lt;code&gt;Buffer#(read|write)&lt;/code&gt; 작업.</target>
        </trans-unit>
        <trans-unit id="dde10af1a782eaa051b12f57380b1866ae891e33" translate="yes" xml:space="preserve">
          <source>DEP0102: Using &lt;code&gt;noAssert&lt;/code&gt; in Buffer#(read|write) operations.</source>
          <target state="translated">DEP0102 : 사용 &lt;code&gt;noAssert&lt;/code&gt; 를 버퍼 번호에 (읽기 | 쓰기) 작업.</target>
        </trans-unit>
        <trans-unit id="af494f2565e2e6ca9c00908e9079b84d754b97c8" translate="yes" xml:space="preserve">
          <source>DEP0103: &lt;code&gt;process.binding('util').is[...]&lt;/code&gt; typechecks</source>
          <target state="translated">DEP0103 : &lt;code&gt;process.binding('util').is[...]&lt;/code&gt; 검사</target>
        </trans-unit>
        <trans-unit id="13585dbcb7b546e190db0f25da7844deebaed2d8" translate="yes" xml:space="preserve">
          <source>DEP0103: process.binding('util').is[...] typechecks</source>
          <target state="translated">DEP0103 : process.binding ( 'util'). is [...] 유형 검사</target>
        </trans-unit>
        <trans-unit id="23aeeca033540ebf9b20ef51cc35faee8b320e0e" translate="yes" xml:space="preserve">
          <source>DEP0104: &lt;code&gt;process.env&lt;/code&gt; string coercion</source>
          <target state="translated">DEP0104 : &lt;code&gt;process.env&lt;/code&gt; 문자열 강제</target>
        </trans-unit>
        <trans-unit id="7c784bbacecb12e2254f20ff783709ba624967f7" translate="yes" xml:space="preserve">
          <source>DEP0104: process.env string coercion</source>
          <target state="translated">DEP0104 : process.env 문자열 강제</target>
        </trans-unit>
        <trans-unit id="ebdacd959f9cc909b44c890afb0c1a24b7a621fa" translate="yes" xml:space="preserve">
          <source>DEP0105: &lt;code&gt;decipher.finaltol&lt;/code&gt;</source>
          <target state="translated">DEP0105 : &lt;code&gt;decipher.finaltol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="660af96369847d87c4de2c1fc9050ab3c55779d8" translate="yes" xml:space="preserve">
          <source>DEP0105: decipher.finaltol</source>
          <target state="translated">DEP0105 : 해독. 최종</target>
        </trans-unit>
        <trans-unit id="e8c04b2b88f9f2088333601c4c810a2b09e99440" translate="yes" xml:space="preserve">
          <source>DEP0106: &lt;code&gt;crypto.createCipher&lt;/code&gt; and &lt;code&gt;crypto.createDecipher&lt;/code&gt;</source>
          <target state="translated">DEP0106 ​​: &lt;code&gt;crypto.createCipher&lt;/code&gt; 및 &lt;code&gt;crypto.createDecipher&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3679a05e090eb40b09cf43513ab8a6b6fc6383ea" translate="yes" xml:space="preserve">
          <source>DEP0106: crypto.createCipher and crypto.createDecipher</source>
          <target state="translated">DEP0106 ​​: crypto.createCipher 및 crypto.createDecipher</target>
        </trans-unit>
        <trans-unit id="fff5f51f88fe0781d6d67978ca0390f17e338905" translate="yes" xml:space="preserve">
          <source>DEP0107: &lt;code&gt;tls.convertNPNProtocols()&lt;/code&gt;</source>
          <target state="translated">DEP0107 : &lt;code&gt;tls.convertNPNProtocols()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e19a817ad17db1735756932336fd2111c271f29" translate="yes" xml:space="preserve">
          <source>DEP0107: tls.convertNPNProtocols()</source>
          <target state="translated">DEP0107 : tls.convertNPNProtocols ()</target>
        </trans-unit>
        <trans-unit id="02519eb013e89658d9ad44c196e3e9b3ab179352" translate="yes" xml:space="preserve">
          <source>DEP0108: &lt;code&gt;zlib.bytesRead&lt;/code&gt;</source>
          <target state="translated">DEP0108 : &lt;code&gt;zlib.bytesRead&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a1ab5f7213725281a594a88364230f57e6e95d2" translate="yes" xml:space="preserve">
          <source>DEP0108: zlib.bytesRead</source>
          <target state="translated">DEP0108 : zlib.bytesRead</target>
        </trans-unit>
        <trans-unit id="12e57334755c6a2ad2133ff17bd812d3dad3f799" translate="yes" xml:space="preserve">
          <source>DEP0109: &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, and &lt;code&gt;tls&lt;/code&gt; support for invalid URLs</source>
          <target state="translated">DEP0109 : 잘못된 URL에 대한 &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;https&lt;/code&gt; 및 &lt;code&gt;tls&lt;/code&gt; 지원</target>
        </trans-unit>
        <trans-unit id="0c46c7a0029c930bc65e8cdd57fa7feee35e47fd" translate="yes" xml:space="preserve">
          <source>DEP0109: http, https, and tls support for invalid URLs</source>
          <target state="translated">DEP0109 : http, https 및 tls에서 유효하지 않은 URL 지원</target>
        </trans-unit>
        <trans-unit id="b842ca08094942ec011d6ac608c19fc1c5912be4" translate="yes" xml:space="preserve">
          <source>DEP0110: &lt;code&gt;vm.Script&lt;/code&gt; cached data</source>
          <target state="translated">DEP0110 : &lt;code&gt;vm.Script&lt;/code&gt; 캐시 데이터</target>
        </trans-unit>
        <trans-unit id="6fdf988cbf974f0506e9c71df3ddfaf999ac9f8f" translate="yes" xml:space="preserve">
          <source>DEP0110: vm.Script cached data</source>
          <target state="translated">DEP0110 : vm.Script 캐시 데이터</target>
        </trans-unit>
        <trans-unit id="19b210ae190418dd6c797799395713d1c8b30226" translate="yes" xml:space="preserve">
          <source>DEP0111: &lt;code&gt;process.binding()&lt;/code&gt;</source>
          <target state="translated">DEP0111 : &lt;code&gt;process.binding()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="666b614603d5dae9840dd5b0769923ba7d5ded92" translate="yes" xml:space="preserve">
          <source>DEP0111: process.binding()</source>
          <target state="translated">DEP0111 : process.binding ()</target>
        </trans-unit>
        <trans-unit id="d43012210daca7a3324621aaab0a4e9d14a66243" translate="yes" xml:space="preserve">
          <source>DEP0112: &lt;code&gt;dgram&lt;/code&gt; private APIs</source>
          <target state="translated">DEP0112 : &lt;code&gt;dgram&lt;/code&gt; 개인 API</target>
        </trans-unit>
        <trans-unit id="fae9f73df174c329b2ce302aafa2e29bc5a8fb52" translate="yes" xml:space="preserve">
          <source>DEP0112: dgram private APIs</source>
          <target state="translated">DEP0112 : dgram 개인 API</target>
        </trans-unit>
        <trans-unit id="b1955c3b62df41cbec58247118e279f79bc3de00" translate="yes" xml:space="preserve">
          <source>DEP0113: &lt;code&gt;Cipher.setAuthTag()&lt;/code&gt;, &lt;code&gt;Decipher.getAuthTag()&lt;/code&gt;</source>
          <target state="translated">DEP0113 : &lt;code&gt;Cipher.setAuthTag()&lt;/code&gt; , &lt;code&gt;Decipher.getAuthTag()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="453d7b0bd954bbbf5369cd77d881a5686c9dadc2" translate="yes" xml:space="preserve">
          <source>DEP0113: Cipher.setAuthTag(), Decipher.getAuthTag()</source>
          <target state="translated">DEP0113 : Cipher.setAuthTag (), Decipher.getAuthTag ()</target>
        </trans-unit>
        <trans-unit id="5756df1963e552297c1e35a84c459998d0d58eed" translate="yes" xml:space="preserve">
          <source>DEP0114: &lt;code&gt;crypto._toBuf()&lt;/code&gt;</source>
          <target state="translated">DEP0114 : &lt;code&gt;crypto._toBuf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdab6b71f9be9845b63ed4cb8b32ea85e3f96872" translate="yes" xml:space="preserve">
          <source>DEP0114: crypto._toBuf()</source>
          <target state="translated">DEP0114 : crypto._toBuf ()</target>
        </trans-unit>
        <trans-unit id="a48ac2340b1f1d2268c3af0b78fc836cef0e614a" translate="yes" xml:space="preserve">
          <source>DEP0115: &lt;code&gt;crypto.prng()&lt;/code&gt;, &lt;code&gt;crypto.pseudoRandomBytes()&lt;/code&gt;, &lt;code&gt;crypto.rng()&lt;/code&gt;</source>
          <target state="translated">DEP0115 : &lt;code&gt;crypto.prng()&lt;/code&gt; , &lt;code&gt;crypto.pseudoRandomBytes()&lt;/code&gt; , &lt;code&gt;crypto.rng()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c380e656cadfc2ef584efb6a1eb58e6b6a031eae" translate="yes" xml:space="preserve">
          <source>DEP0115: crypto.prng(), crypto.pseudoRandomBytes(), crypto.rng()</source>
          <target state="translated">DEP0115 : crypto.prng (), crypto.pseudoRandomBytes (), crypto.rng ()</target>
        </trans-unit>
        <trans-unit id="91b34ce0b32454e9afcefff459cb6edf35d3f32a" translate="yes" xml:space="preserve">
          <source>DEP0116: Legacy URL API</source>
          <target state="translated">DEP0116 : 레거시 URL API</target>
        </trans-unit>
        <trans-unit id="3f2ba0a9c4dbf302735c5f3000409a6d4582a315" translate="yes" xml:space="preserve">
          <source>DEP0117: Native crypto handles</source>
          <target state="translated">DEP0117 : 기본 암호화 핸들</target>
        </trans-unit>
        <trans-unit id="8a59450941f332a10b0a48864c506760033205f0" translate="yes" xml:space="preserve">
          <source>DEP0118: &lt;code&gt;dns.lookup()&lt;/code&gt; support for a falsy host name</source>
          <target state="translated">DEP0118 : &lt;code&gt;dns.lookup()&lt;/code&gt; 호스트 이름에 대한 dns.lookup () 지원</target>
        </trans-unit>
        <trans-unit id="0923a0ff14ca53c76e9ebdd39c3befbc2e6ebb8e" translate="yes" xml:space="preserve">
          <source>DEP0118: dns.lookup() support for a falsy hostname&lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dns.js#L90&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">DEP0118 : 잘못된 호스트 이름 &lt;a href=&quot;https://github.com/nodejs/node/blob/9cfb3841785cd658bb13369ed642247e089a5533/lib/dns.js#L90&quot;&gt;[src]에&lt;/a&gt; 대한 dns.lookup () 지원</target>
        </trans-unit>
        <trans-unit id="03a5f3c28e7faaae54166e439e99ce7d889d3124" translate="yes" xml:space="preserve">
          <source>DEP0119: &lt;code&gt;process.binding('uv').errname()&lt;/code&gt; private API</source>
          <target state="translated">DEP0119 : &lt;code&gt;process.binding('uv').errname()&lt;/code&gt; 개인 API</target>
        </trans-unit>
        <trans-unit id="a03a65784ae0db5882fd10d1ad3213a3023a88b4" translate="yes" xml:space="preserve">
          <source>DEP0119: process.binding('uv').errname() private API</source>
          <target state="translated">DEP0119 : process.binding ( 'uv'). errname () 개인 API</target>
        </trans-unit>
        <trans-unit id="c6c6d893979162685e9056c979740465e0192de9" translate="yes" xml:space="preserve">
          <source>DEP0120: Windows Performance Counter Support</source>
          <target state="translated">DEP0120 : Windows 성능 카운터 지원</target>
        </trans-unit>
        <trans-unit id="1d2070039a3e7eebf75ae310ffc56ceb523070ea" translate="yes" xml:space="preserve">
          <source>DEP0120: Windows Performance Counter support</source>
          <target state="translated">DEP0120 : Windows 성능 카운터 지원</target>
        </trans-unit>
        <trans-unit id="25cc04783b2a07330f50c4eabc56ccdd2901f61f" translate="yes" xml:space="preserve">
          <source>DEP0121: &lt;code&gt;net._setSimultaneousAccepts()&lt;/code&gt;</source>
          <target state="translated">DEP0121 : &lt;code&gt;net._setSimultaneousAccepts()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f4445f4f2d7846c82d9916e60e323ecb4661456" translate="yes" xml:space="preserve">
          <source>DEP0121: net._setSimultaneousAccepts()</source>
          <target state="translated">DEP0121 : net._setSimultaneousAccepts ()</target>
        </trans-unit>
        <trans-unit id="d65effc7dd740bd72ad49993794c179e96dc248b" translate="yes" xml:space="preserve">
          <source>DEP0122: &lt;code&gt;tls&lt;/code&gt;&lt;code&gt;Server.prototype.setOptions()&lt;/code&gt;</source>
          <target state="translated">DEP0122 : &lt;code&gt;tls&lt;/code&gt; &lt;code&gt;Server.prototype.setOptions()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06bd792b69ba63f6b05e70c57264a2534ea65da4" translate="yes" xml:space="preserve">
          <source>DEP0122: tls Server.prototype.setOptions()</source>
          <target state="translated">DEP0122 : tls Server.prototype.setOptions ()</target>
        </trans-unit>
        <trans-unit id="c827866fdd4262824587092f0251cae9572edffe" translate="yes" xml:space="preserve">
          <source>DEP0123: setting the TLS ServerName to an IP address</source>
          <target state="translated">DEP0123 : TLS ServerName을 IP 주소로 설정</target>
        </trans-unit>
        <trans-unit id="df282c5d77ebb4167c2f1425ca358fc76260727c" translate="yes" xml:space="preserve">
          <source>DEP0124: using &lt;code&gt;REPLServer.rli&lt;/code&gt;</source>
          <target state="translated">DEP0124 : 사용 &lt;code&gt;REPLServer.rli&lt;/code&gt; 를</target>
        </trans-unit>
        <trans-unit id="8e4c506f70296e8e58fc7eeec295333deb1c9167" translate="yes" xml:space="preserve">
          <source>DEP0124: using REPLServer.rli</source>
          <target state="translated">DEP0124 : REPLServer.rli 사용</target>
        </trans-unit>
        <trans-unit id="559adc17fea69e9535a01d1011b7d6e674b8f98f" translate="yes" xml:space="preserve">
          <source>DEP0125: &lt;code&gt;require('_stream_wrap')&lt;/code&gt;</source>
          <target state="translated">DEP0125 : &lt;code&gt;require('_stream_wrap')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3b323f9c441f5091d86070e7b91bce61d7e5fb5" translate="yes" xml:space="preserve">
          <source>DEP0125: require('_stream_wrap')</source>
          <target state="translated">DEP0125 : require ( '_ stream_wrap')</target>
        </trans-unit>
        <trans-unit id="f045389bb0d3ef1aa12b024c5b102bf8ed257c87" translate="yes" xml:space="preserve">
          <source>DEP0126: &lt;code&gt;timers.active()&lt;/code&gt;</source>
          <target state="translated">DEP0126 : &lt;code&gt;timers.active()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e245f07b02a1bbfe51cf85b89c7241cff59c313" translate="yes" xml:space="preserve">
          <source>DEP0126: timers.active()</source>
          <target state="translated">DEP0126 : timers.active ()</target>
        </trans-unit>
        <trans-unit id="a133dd193004aea9ba6918e72775edf4744e994e" translate="yes" xml:space="preserve">
          <source>DEP0127: &lt;code&gt;timers._unrefActive()&lt;/code&gt;</source>
          <target state="translated">DEP0127 : &lt;code&gt;timers._unrefActive()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5887910a75679c56327bdbff264a059ed785056b" translate="yes" xml:space="preserve">
          <source>DEP0127: timers._unrefActive()</source>
          <target state="translated">DEP0127 : 타이머 ._unrefActive ()</target>
        </trans-unit>
        <trans-unit id="e9e4df1f09db8516eb484c23752f4fef842decea" translate="yes" xml:space="preserve">
          <source>DEP0128: modules with an invalid &lt;code&gt;main&lt;/code&gt; entry and an &lt;code&gt;index.js&lt;/code&gt; file</source>
          <target state="translated">DEP0128 : 유효하지 않은 &lt;code&gt;main&lt;/code&gt; 항목 및 &lt;code&gt;index.js&lt;/code&gt; 파일 이있는 모듈</target>
        </trans-unit>
        <trans-unit id="fe3ef62f26a02ce3e6d8503ab2469be3c9c4d7ac" translate="yes" xml:space="preserve">
          <source>DEP0129: &lt;code&gt;ChildProcess._channel&lt;/code&gt;</source>
          <target state="translated">DEP0129 : &lt;code&gt;ChildProcess._channel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9268dd7bb7604f6fd0f31347ebf3a909af60b033" translate="yes" xml:space="preserve">
          <source>DEP0129: ChildProcess._channel</source>
          <target state="translated">DEP0129 : ChildProcess._channel</target>
        </trans-unit>
        <trans-unit id="745be88246ba40dea427d2d3375d3b799e9848a8" translate="yes" xml:space="preserve">
          <source>DEP0130: &lt;code&gt;Module.createRequireFromPath()&lt;/code&gt;</source>
          <target state="translated">DEP0130 : &lt;code&gt;Module.createRequireFromPath()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26df7ccc8404b2ea0e6ec615033499f5c791ffe8" translate="yes" xml:space="preserve">
          <source>DEP0130: Module.createRequireFromPath()</source>
          <target state="translated">DEP0130 : Module.createRequireFromPath ()</target>
        </trans-unit>
        <trans-unit id="c43d08ea68b3731d74753c53671217c4e988d72f" translate="yes" xml:space="preserve">
          <source>DEP0131: Legacy HTTP parser</source>
          <target state="translated">DEP0131 : 레거시 HTTP 파서</target>
        </trans-unit>
        <trans-unit id="64e7325fa572c7ca55ad65941d09ad849d4b4607" translate="yes" xml:space="preserve">
          <source>DEP0132: &lt;code&gt;worker.terminate()&lt;/code&gt; with callback</source>
          <target state="translated">DEP0132 : 콜백이있는 &lt;code&gt;worker.terminate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a0a8c3a719544e4a7154e28ee9207fc0317830e" translate="yes" xml:space="preserve">
          <source>DEP0132: worker.terminate() with callback</source>
          <target state="translated">DEP0132 : 콜백이있는 worker.terminate ()</target>
        </trans-unit>
        <trans-unit id="74690411bd14ee63c5a872e8fdb0c14a66ce8365" translate="yes" xml:space="preserve">
          <source>DEP0133: &lt;code&gt;http&lt;/code&gt;&lt;code&gt;connection&lt;/code&gt;</source>
          <target state="translated">DEP0133 : &lt;code&gt;http&lt;/code&gt; &lt;code&gt;connection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09fb3eb3c0638f2d522268c43f052c3a8654cefc" translate="yes" xml:space="preserve">
          <source>DEP0134: &lt;code&gt;process._tickCallback&lt;/code&gt;</source>
          <target state="translated">DEP0134 : &lt;code&gt;process._tickCallback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="201536829f21a011c973672c7f6dc2abdf1957cd" translate="yes" xml:space="preserve">
          <source>DEP0135: &lt;code&gt;WriteStream.open()&lt;/code&gt; and &lt;code&gt;ReadStream.open()&lt;/code&gt; are internal</source>
          <target state="translated">DEP0135 : &lt;code&gt;WriteStream.open()&lt;/code&gt; 및 &lt;code&gt;ReadStream.open()&lt;/code&gt; 은 내부입니다.</target>
        </trans-unit>
        <trans-unit id="0be016026a8d36c9f886f995b681d1aa56a32669" translate="yes" xml:space="preserve">
          <source>DEP0136: &lt;code&gt;http&lt;/code&gt;&lt;code&gt;finished&lt;/code&gt;</source>
          <target state="translated">DEP0136 : &lt;code&gt;http&lt;/code&gt; &lt;code&gt;finished&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ea9dcd30873cd9556ef28b936915bcbdce71cc9" translate="yes" xml:space="preserve">
          <source>DEP0137: Closing fs.FileHandle on garbage collection</source>
          <target state="translated">DEP0137 : 가비지 콜렉션에서 fs.FileHandle 닫기</target>
        </trans-unit>
        <trans-unit id="dff3e0decb74aa478c1dc9a3a1ef50546b96c679" translate="yes" xml:space="preserve">
          <source>DEP0138: &lt;code&gt;process.mainModule&lt;/code&gt;</source>
          <target state="translated">DEP0138 : &lt;code&gt;process.mainModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a40f911ec2f69016ba7ebcbb34aef2935b475c8" translate="yes" xml:space="preserve">
          <source>DEP0139: &lt;code&gt;process.umask()&lt;/code&gt; with no arguments</source>
          <target state="translated">DEP0139 : 인수가 없는 &lt;code&gt;process.umask()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75e3c75a11225cde9fd6c0356638ee6a3fa370df" translate="yes" xml:space="preserve">
          <source>DEP0140: Use &lt;code&gt;request.destroy()&lt;/code&gt; instead of &lt;code&gt;request.abort()&lt;/code&gt;</source>
          <target state="translated">DEP0140 : &lt;code&gt;request.destroy()&lt;/code&gt; 대신 &lt;code&gt;request.abort()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5fcabca254be1ffefbc988a95ac92858bce675ef" translate="yes" xml:space="preserve">
          <source>DEP0141: &lt;code&gt;repl.inputStream&lt;/code&gt; and &lt;code&gt;repl.outputStream&lt;/code&gt;</source>
          <target state="translated">DEP0141 : &lt;code&gt;repl.inputStream&lt;/code&gt; 및 &lt;code&gt;repl.outputStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d75c1b87259fcaa9be1c8bee3c645a3667f4f4d" translate="yes" xml:space="preserve">
          <source>DEP0142: &lt;code&gt;repl._builtinLibs&lt;/code&gt;</source>
          <target state="translated">DEP0142 : &lt;code&gt;repl._builtinLibs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34fc25a8a8ebe863133470e686ff1c88b3b15ead" translate="yes" xml:space="preserve">
          <source>DEP0143: &lt;code&gt;Transform._transformState&lt;/code&gt;</source>
          <target state="translated">DEP0143 : &lt;code&gt;Transform._transformState&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36a9f867aa4408aa28ee36ef2276aaf6b502a947" translate="yes" xml:space="preserve">
          <source>DEP0144: &lt;code&gt;module.parent&lt;/code&gt;</source>
          <target state="translated">DEP0144 : &lt;code&gt;module.parent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d478113bd3a8052952240dff88adfd48e0aef8f" translate="yes" xml:space="preserve">
          <source>DEP0145: &lt;code&gt;socket.bufferSize&lt;/code&gt;</source>
          <target state="translated">DEP0145 : &lt;code&gt;socket.bufferSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fac022d3229386683e9e2c1b09b090e37487d78" translate="yes" xml:space="preserve">
          <source>DEP0146: &lt;code&gt;new crypto.Certificate()&lt;/code&gt;</source>
          <target state="translated">DEP0146 : &lt;code&gt;new crypto.Certificate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0375b5b33b3896634eb8996c2b2ef28031aff1e8" translate="yes" xml:space="preserve">
          <source>DEP0147: &lt;code&gt;fs.rmdir(path, { recursive: true })&lt;/code&gt;</source>
          <target state="translated">DEP0147 : &lt;code&gt;fs.rmdir(path, { recursive: true })&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dfad1b5793c240bfae4cc2bc166da41d57bd659" translate="yes" xml:space="preserve">
          <source>DEP0148: Folder mappings in &lt;code&gt;&quot;exports&quot;&lt;/code&gt; (trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddc21b1eaa5ad6e57bb26bc517091c9b2d2e86d" translate="yes" xml:space="preserve">
          <source>DNS</source>
          <target state="translated">DNS</target>
        </trans-unit>
        <trans-unit id="6754f5502828f15dd52a01c8d7f5671d5a7a1103" translate="yes" xml:space="preserve">
          <source>DNS Promises API</source>
          <target state="translated">DNS 약속 API</target>
        </trans-unit>
        <trans-unit id="9c6bbd7dad352a732a8d16f9f7736d9898117eb1" translate="yes" xml:space="preserve">
          <source>DNS promises API</source>
          <target state="translated">DNS 약속 API</target>
        </trans-unit>
        <trans-unit id="87cceeb3f262876bc42dda6c83145f634eb6a7d7" translate="yes" xml:space="preserve">
          <source>DNS server operators may choose not to respond to &lt;code&gt;ANY&lt;/code&gt; queries. It may be better to call individual methods like &lt;a href=&quot;#dns_dns_resolve4_hostname_options_callback&quot;&gt;&lt;code&gt;dns.resolve4()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveMx()&lt;/code&gt;&lt;/a&gt;, and so on. For more details, see &lt;a href=&quot;https://tools.ietf.org/html/rfc8482&quot;&gt;RFC 8482&lt;/a&gt;.</source>
          <target state="translated">DNS 서버 운영자는 &lt;code&gt;ANY&lt;/code&gt; 쿼리 에 응답하지 않도록 선택할 수 있습니다 . &lt;a href=&quot;#dns_dns_resolve4_hostname_options_callback&quot;&gt; &lt;code&gt;dns.resolve4()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveMx()&lt;/code&gt; &lt;/a&gt; 등과 같은 개별 메소드를 호출하는 것이 좋습니다 . 자세한 내용은 &lt;a href=&quot;https://tools.ietf.org/html/rfc8482&quot;&gt;RFC 8482를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f2bd1783046a733f5023f751242ebdb09c74444" translate="yes" xml:space="preserve">
          <source>Data could be sent on a socket.</source>
          <target state="translated">소켓으로 데이터를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b7d7b1aff4025a9f04253e3bf5210458a3f400b" translate="yes" xml:space="preserve">
          <source>Data could not be sent on a socket.</source>
          <target state="translated">소켓에서 데이터를 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="85254476d82ec01be8f3b5cd8f3d21cb777cb590" translate="yes" xml:space="preserve">
          <source>Data is buffered in &lt;code&gt;Readable&lt;/code&gt; streams when the implementation calls &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push(chunk)&lt;/code&gt;&lt;/a&gt;. If the consumer of the Stream does not call &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt;, the data will sit in the internal queue until it is consumed.</source>
          <target state="translated">구현시 &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push(chunk)&lt;/code&gt; &lt;/a&gt; 호출하면 데이터가 &lt;code&gt;Readable&lt;/code&gt; 스트림 으로 버퍼링됩니다 . Stream 소비자가 &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt; 호출하지 않으면 데이터는 소비 될 때까지 내부 큐에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="8c5039d3d6548742d4067316c3b558c43041e195" translate="yes" xml:space="preserve">
          <source>Data is buffered in &lt;code&gt;Writable&lt;/code&gt; streams when the &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;writable.write(chunk)&lt;/code&gt;&lt;/a&gt; method is called repeatedly. While the total size of the internal write buffer is below the threshold set by &lt;code&gt;highWaterMark&lt;/code&gt;, calls to &lt;code&gt;writable.write()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;. Once the size of the internal buffer reaches or exceeds the &lt;code&gt;highWaterMark&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">버퍼링 된 데이터 &lt;code&gt;Writable&lt;/code&gt; 때 스트림 &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;writable.write(chunk)&lt;/code&gt; &lt;/a&gt; 메소드를 반복적으로 호출된다. 내부 쓰기 버퍼의 총 크기가 &lt;code&gt;highWaterMark&lt;/code&gt; 에 의해 설정된 임계 값보다 작은 반면 &lt;code&gt;writable.write()&lt;/code&gt; 호출 은 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 상기 내부 버퍼의 크기에 도달하거나 초과하면 &lt;code&gt;highWaterMark&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 반환한다.</target>
        </trans-unit>
        <trans-unit id="648ad664e37c72cf0b7ccb84b96178c006f0bf40" translate="yes" xml:space="preserve">
          <source>Data passed to a Brotli stream was not successfully compressed.</source>
          <target state="translated">Brotli 스트림으로 전달 된 데이터가 성공적으로 압축되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f06dfb622a43d7eb38bee27a79740d16c9f86791" translate="yes" xml:space="preserve">
          <source>Data path for ICU (&lt;code&gt;Intl&lt;/code&gt; object) data. Will extend linked-in data when compiled with small-icu support.</source>
          <target state="translated">ICU의 데이터 경로 ( &lt;code&gt;Intl&lt;/code&gt; object) 데이터의 . small-icu 지원으로 컴파일 할 때 연결된 데이터를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="7b52c91ba78ff932d753b1ba6e5c2167e91e9f5f" translate="yes" xml:space="preserve">
          <source>Data provided to &lt;code&gt;TextDecoder()&lt;/code&gt; API was invalid according to the encoding provided.</source>
          <target state="translated">&lt;code&gt;TextDecoder()&lt;/code&gt; 제공된 데이터 인코딩에 따라 API에 가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e116004a82e1f0284e392d65b10ab896099fffa" translate="yes" xml:space="preserve">
          <source>Deactivate the inspector. Blocks until there are no active connections.</source>
          <target state="translated">인스펙터를 비활성화하십시오. 활성 연결이 없을 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="33ef7c16d13cc6c14173b0445ecb490c2434821c" translate="yes" xml:space="preserve">
          <source>DebugContext has been removed in V8 and is not available in Node.js 10+.</source>
          <target state="translated">DebugContext는 V8에서 제거되었으며 Node.js 10+에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f328913d9ef8e3e8f1c6e853a6a633d12493170b" translate="yes" xml:space="preserve">
          <source>DebugContext was an experimental API.</source>
          <target state="translated">DebugContext는 실험적인 API였습니다.</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="9cc74c92df5c5a2f7ffdda6a1e304d73c3c313d0" translate="yes" xml:space="preserve">
          <source>Deciding whether to keep the process running</source>
          <target state="translated">프로세스 실행 유지 여부 결정</target>
        </trans-unit>
        <trans-unit id="f390868c0654dcbccc335b5d71c6db5b368565dc" translate="yes" xml:space="preserve">
          <source>Decipher</source>
          <target state="translated">Decipher</target>
        </trans-unit>
        <trans-unit id="e80d4b2ee209eaab2e8654c2248eb145f42ba021" translate="yes" xml:space="preserve">
          <source>Decodes &lt;code&gt;buf&lt;/code&gt; to a string according to the specified character encoding in &lt;code&gt;encoding&lt;/code&gt;. &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; may be passed to decode only a subset of &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">디코딩은 &lt;code&gt;buf&lt;/code&gt; 지정된 문자 인코딩에 따라 문자열로 &lt;code&gt;encoding&lt;/code&gt; . &lt;code&gt;buf&lt;/code&gt; 의 부분 집합만을 해독하기 위해 &lt;code&gt;start&lt;/code&gt; 와 &lt;code&gt;end&lt;/code&gt; 가 전달 될 수있다 .</target>
        </trans-unit>
        <trans-unit id="48c48030e1706aaf755a1d5a3d8cbaefd39a00e1" translate="yes" xml:space="preserve">
          <source>Decodes the &lt;code&gt;input&lt;/code&gt; and returns a string. If &lt;code&gt;options.stream&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, any incomplete byte sequences occurring at the end of the &lt;code&gt;input&lt;/code&gt; are buffered internally and emitted after the next call to &lt;code&gt;textDecoder.decode()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 디코딩하고 문자열을 반환합니다. 경우 &lt;code&gt;options.stream&lt;/code&gt; 가 인 &lt;code&gt;true&lt;/code&gt; 의 끝에서 발생하는 불완전한 바이트 시퀀스 &lt;code&gt;input&lt;/code&gt; 내부에 버퍼링하고 다음 호출 후에 방출된다 &lt;code&gt;textDecoder.decode()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfbf00495fd4e44a325d07310b260d38846ac8e" translate="yes" xml:space="preserve">
          <source>Decoding buffers in a Writable Stream</source>
          <target state="translated">쓰기 가능한 스트림에서 버퍼 디코딩</target>
        </trans-unit>
        <trans-unit id="c2ffc6a5660f0a7222378e9e9de613f7cedf9e65" translate="yes" xml:space="preserve">
          <source>Decoding buffers in a writable stream</source>
          <target state="translated">쓰기 가능한 스트림에서 버퍼 디코딩</target>
        </trans-unit>
        <trans-unit id="1f36b1ca963e5190d40b0c9c73204803bbef712e" translate="yes" xml:space="preserve">
          <source>Decoding buffers is a common task, for instance, when using transformers whose input is a string. This is not a trivial process when using multi-byte characters encoding, such as UTF-8. The following example shows how to decode multi-byte strings using &lt;code&gt;StringDecoder&lt;/code&gt; and &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버퍼 디코딩은 예를 들어 입력이 문자열 인 변환기를 사용할 때 일반적인 작업입니다. UTF-8과 같은 멀티 바이트 문자 인코딩을 사용할 때는 사소한 프로세스가 아닙니다. 다음 예제는 &lt;code&gt;StringDecoder&lt;/code&gt; 및 &lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; 을&lt;/a&gt; 사용하여 멀티 바이트 문자열을 디코딩하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="06bcebee3ddca6ec69e832bf19fb5e5159930a2a" translate="yes" xml:space="preserve">
          <source>Decompress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt;&lt;code&gt;BrotliDecompress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_brotlidecompress&quot;&gt; &lt;code&gt;BrotliDecompress&lt;/code&gt; &lt;/a&gt; 로 데이터 청크를 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad5a384034d646797aafc7a78a5d444c47fdab28" translate="yes" xml:space="preserve">
          <source>Decompress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt;&lt;code&gt;Gunzip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_gunzip&quot;&gt; &lt;code&gt;Gunzip&lt;/code&gt; &lt;/a&gt; 으로 데이터 덩어리를 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="5afcc373b804d657d17352ebf72247b50af224d4" translate="yes" xml:space="preserve">
          <source>Decompress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt;&lt;code&gt;Inflate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_inflate&quot;&gt; &lt;code&gt;Inflate&lt;/code&gt; &lt;/a&gt; 로 데이터 청크를 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="5140476bb83a8705f462c3a590e85a2bd4b428e6" translate="yes" xml:space="preserve">
          <source>Decompress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt;&lt;code&gt;InflateRaw&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_inflateraw&quot;&gt; &lt;code&gt;InflateRaw&lt;/code&gt; &lt;/a&gt; 로 데이터 청크를 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="c062bd64dd81265bfc43b3435302430dd8ff4851" translate="yes" xml:space="preserve">
          <source>Decompress a chunk of data with &lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt;&lt;code&gt;Unzip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zlib_class_zlib_unzip&quot;&gt; &lt;code&gt;Unzip&lt;/code&gt; &lt;/a&gt; 으로 데이터 청크를 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="19c8c4b636d01cfc59969c08df8148062a628ab6" translate="yes" xml:space="preserve">
          <source>Decompress a deflate stream.</source>
          <target state="translated">수축 스트림을 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="a1a3b891d05a831e17d3bc4a3150c24aaa8a29e6" translate="yes" xml:space="preserve">
          <source>Decompress a gzip stream.</source>
          <target state="translated">gzip 스트림을 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="4067139138e281390912b18bc94470eef739cfbf" translate="yes" xml:space="preserve">
          <source>Decompress a raw deflate stream.</source>
          <target state="translated">원시 수축 스트림을 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="cf7e90e079e97a1ad0532273cc471cc3c540c5af" translate="yes" xml:space="preserve">
          <source>Decompress data using the Brotli algorithm.</source>
          <target state="translated">Brotli 알고리즘을 사용하여 데이터를 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="cb80ce30a8088f6348ef336fff8c67a7c64a652f" translate="yes" xml:space="preserve">
          <source>Decompress either a Gzip- or Deflate-compressed stream by auto-detecting the header.</source>
          <target state="translated">헤더를 자동 감지하여 Gzip 또는 Deflate 압축 스트림을 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="a34c79e64ceccc0189c30c9c4d0875d6441c158d" translate="yes" xml:space="preserve">
          <source>Decompressor options</source>
          <target state="translated">압축 해 제기 옵션</target>
        </trans-unit>
        <trans-unit id="be16ebed22699e522170d6b722b527f3adb81bb5" translate="yes" xml:space="preserve">
          <source>Decreases indentation of subsequent lines by spaces for &lt;code&gt;groupIndentation&lt;/code&gt; length.</source>
          <target state="translated">&lt;code&gt;groupIndentation&lt;/code&gt; 길이에 대해 공백으로 다음 줄의 들여 쓰기를 줄 입니다.</target>
        </trans-unit>
        <trans-unit id="46f514dfa23e138b085fb83292e6225d8783f651" translate="yes" xml:space="preserve">
          <source>Decreases indentation of subsequent lines by two spaces.</source>
          <target state="translated">다음 줄의 들여 쓰기를 두 칸 줄입니다.</target>
        </trans-unit>
        <trans-unit id="8d181d14c29fc23559105d381058a7d8efd52c04" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;buffer&lt;/code&gt; with &lt;code&gt;key&lt;/code&gt;.&lt;code&gt;buffer&lt;/code&gt; was previously encrypted using the corresponding private key, for example using &lt;a href=&quot;#crypto_crypto_privateencrypt_privatekey_buffer&quot;&gt;&lt;code&gt;crypto.privateEncrypt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 하여 &lt;code&gt;buffer&lt;/code&gt; 를 해독 합니다 . &lt;code&gt;buffer&lt;/code&gt; 는 이전에 해당 개인 키를 사용하여 암호화되었습니다 (예 : &lt;a href=&quot;#crypto_crypto_privateencrypt_privatekey_buffer&quot;&gt; &lt;code&gt;crypto.privateEncrypt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51bd2cf97f30421a75b4814cfd8cd07552d923f6" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;buffer&lt;/code&gt; with &lt;code&gt;privateKey&lt;/code&gt;. &lt;code&gt;buffer&lt;/code&gt; was previously encrypted using the corresponding public key, for example using &lt;a href=&quot;#crypto_crypto_publicencrypt_key_buffer&quot;&gt;&lt;code&gt;crypto.publicEncrypt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;privateKey&lt;/code&gt; 로 &lt;code&gt;buffer&lt;/code&gt; 를 해독 합니다 . &lt;code&gt;buffer&lt;/code&gt; 는 해당 공개 키를 사용하여 이전에 암호화되었습니다 (예 : &lt;a href=&quot;#crypto_crypto_publicencrypt_key_buffer&quot;&gt; &lt;code&gt;crypto.publicEncrypt()&lt;/code&gt; &lt;/a&gt; 사용 ). .</target>
        </trans-unit>
        <trans-unit id="44754971f3e2c785c56b5d1f064552ac8ed0bcbb" translate="yes" xml:space="preserve">
          <source>Default Evaluation</source>
          <target state="translated">기본 평가</target>
        </trans-unit>
        <trans-unit id="3b886c1a2b0441af01939be9b1b08c3f77703b61" translate="yes" xml:space="preserve">
          <source>Default Windows Shell</source>
          <target state="translated">기본 Windows 셸</target>
        </trans-unit>
        <trans-unit id="4d70dda3bfe0874bcc1af529d8d9b9c06df84a78" translate="yes" xml:space="preserve">
          <source>Default Windows shell</source>
          <target state="translated">기본 Windows 셸</target>
        </trans-unit>
        <trans-unit id="5b0a62957312ac3aeea395e99736e06361fdd261" translate="yes" xml:space="preserve">
          <source>Default behavior is to try close the socket with a HTTP '400 Bad Request', or a HTTP '431 Request Header Fields Too Large' in the case of a &lt;a href=&quot;errors#errors_hpe_header_overflow&quot;&gt;&lt;code&gt;HPE_HEADER_OVERFLOW&lt;/code&gt;&lt;/a&gt; error. If the socket is not writable it is immediately destroyed.</source>
          <target state="translated">기본 동작은 &lt;a href=&quot;errors#errors_hpe_header_overflow&quot;&gt; &lt;code&gt;HPE_HEADER_OVERFLOW&lt;/code&gt; &lt;/a&gt; 오류 의 경우 HTTP '400 Bad Request'또는 HTTP '431 Request Header Fields Too Large'로 소켓을 닫는 것 입니다. 소켓이 쓰기 가능하지 않으면 즉시 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="ee2efb0d955ecb9afe2a5910868e4433fddd51b8" translate="yes" xml:space="preserve">
          <source>Default behavior is to try close the socket with a HTTP '400 Bad Request', or a HTTP '431 Request Header Fields Too Large' in the case of a &lt;a href=&quot;errors#errors_hpe_header_overflow&quot;&gt;&lt;code&gt;HPE_HEADER_OVERFLOW&lt;/code&gt;&lt;/a&gt; error. If the socket is not writable or has already written data it is immediately destroyed.</source>
          <target state="translated">기본 동작은 HTTP '400 Bad Request'또는 &lt;a href=&quot;errors#errors_hpe_header_overflow&quot;&gt; &lt;code&gt;HPE_HEADER_OVERFLOW&lt;/code&gt; &lt;/a&gt; 오류 의 경우 HTTP '431 Request Header Fields Too Large'로 소켓을 닫는 것 입니다. 소켓이 쓰기 가능하지 않거나 이미 데이터를 쓴 경우 즉시 소멸됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
