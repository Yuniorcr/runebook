<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="b992a9b66ecf9c509977f4e79d71ce4d083dbf97" translate="yes" xml:space="preserve">
          <source>On the client side, instances of &lt;a href=&quot;#http2_class_clienthttp2stream&quot;&gt;&lt;code&gt;ClientHttp2Stream&lt;/code&gt;&lt;/a&gt; are created when the &lt;code&gt;http2session.request()&lt;/code&gt; method is called.</source>
          <target state="translated">클라이언트 측 에서 &lt;code&gt;http2session.request()&lt;/code&gt; 메소드가 호출 될 때 &lt;a href=&quot;#http2_class_clienthttp2stream&quot;&gt; &lt;code&gt;ClientHttp2Stream&lt;/code&gt; &lt;/a&gt; 인스턴스 가 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac9f26bc28901e0da3bba962837c8a762d501500" translate="yes" xml:space="preserve">
          <source>On the client, the &lt;code&gt;Http2Stream&lt;/code&gt; instance returned by &lt;code&gt;http2session.request()&lt;/code&gt; may not be immediately ready for use if the parent &lt;code&gt;Http2Session&lt;/code&gt; has not yet been fully established. In such cases, operations called on the &lt;code&gt;Http2Stream&lt;/code&gt; will be buffered until the &lt;code&gt;'ready'&lt;/code&gt; event is emitted. User code should rarely, if ever, need to handle the &lt;code&gt;'ready'&lt;/code&gt; event directly. The ready status of an &lt;code&gt;Http2Stream&lt;/code&gt; can be determined by checking the value of &lt;code&gt;http2stream.id&lt;/code&gt;. If the value is &lt;code&gt;undefined&lt;/code&gt;, the stream is not yet ready for use.</source>
          <target state="translated">클라이언트 에서 부모 &lt;code&gt;Http2Session&lt;/code&gt; 이 아직 완전히 설정되지 않은 경우 &lt;code&gt;http2session.request()&lt;/code&gt; 의해 리턴 된 &lt;code&gt;Http2Stream&lt;/code&gt; 인스턴스를 즉시 사용할 수 없습니다 . 이러한 경우 &lt;code&gt;Http2Stream&lt;/code&gt; 에서 호출 된 작업 은 &lt;code&gt;'ready'&lt;/code&gt; 이벤트가 생성 될 때까지 버퍼링됩니다 . 사용자 코드가 &lt;code&gt;'ready'&lt;/code&gt; 이벤트를 직접 처리 할 필요는 거의 없습니다 . 의 준비 상태 &lt;code&gt;Http2Stream&lt;/code&gt; 은 값 확인하여 판단 할 수 &lt;code&gt;http2stream.id&lt;/code&gt; 을 . 값이 &lt;code&gt;undefined&lt;/code&gt; 인 경우 스트림을 아직 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f16439cf41d36a278e3eaf44e9d440d888072b10" translate="yes" xml:space="preserve">
          <source>On the client, the &lt;code&gt;session&lt;/code&gt; can be provided to the &lt;code&gt;session&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to resume the connection.</source>
          <target state="translated">클라이언트에서 &lt;code&gt;session&lt;/code&gt; 을 &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;session&lt;/code&gt; 옵션에 제공 하여 연결을 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df17243448ce58a6e9d8efe145f7f94cbbd06305" translate="yes" xml:space="preserve">
          <source>On the first line, &lt;code&gt;foo.js&lt;/code&gt; loads the module &lt;code&gt;circle.js&lt;/code&gt; that is in the same directory as &lt;code&gt;foo.js&lt;/code&gt;.</source>
          <target state="translated">첫 번째 행에서 &lt;code&gt;foo.js&lt;/code&gt; 는 &lt;code&gt;foo.js&lt;/code&gt; 와 동일한 디렉토리에있는 &lt;code&gt;circle.js&lt;/code&gt; 모듈을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="3b07e2e6f8a12bd63b2638139eb922d67ad2dfaf" translate="yes" xml:space="preserve">
          <source>On the main thread, values are removed from the queue associated with the thread-safe function in an idle loop. This error indicates that an error has occurred when attempting to start the loop.</source>
          <target state="translated">기본 스레드에서 유휴 루프의 스레드 안전 기능과 관련된 대기열에서 값이 제거됩니다. 이 오류는 루프를 시작하려고 할 때 오류가 발생했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a21df9b2f395bf348632f07253f5adab79a3235" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;node-inspect&lt;/code&gt; can be installed locally through a package manager, as it is published on the npm registry under the same name. No source code modification is necessary if that is done.</source>
          <target state="translated">반면에 &lt;code&gt;node-inspect&lt;/code&gt; 는 동일한 이름으로 npm 레지스트리에 게시되므로 패키지 관리자를 통해 로컬로 설치할 수 있습니다. 그렇게하면 소스 코드를 수정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bfb69afb09660b281005b2feb90d4b1d5ba3d6e1" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;node-inspect&lt;/code&gt; may be installed locally through a package manager, as it is published on the npm registry under the same name. No source code modification is necessary if that is done.</source>
          <target state="translated">반면 &lt;code&gt;node-inspect&lt;/code&gt; 는 npm 레지스트리에 동일한 이름으로 게시되므로 패키지 관리자를 통해 로컬로 설치할 수 있습니다. 소스 코드 수정이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="45d01237536f26cbcba80929de5b721832402940" translate="yes" xml:space="preserve">
          <source>On the server side, instances of &lt;a href=&quot;#http2_class_serverhttp2stream&quot;&gt;&lt;code&gt;ServerHttp2Stream&lt;/code&gt;&lt;/a&gt; are created either when:</source>
          <target state="translated">서버 측에서 &lt;a href=&quot;#http2_class_serverhttp2stream&quot;&gt; &lt;code&gt;ServerHttp2Stream&lt;/code&gt; 의&lt;/a&gt; 인스턴스는 다음과 같은 경우에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="93fbaba0c5ebedfd2d6fa15d405cceb8572a7ff1" translate="yes" xml:space="preserve">
          <source>On the server side, user code will typically not listen for this event directly, and would instead register a handler for the &lt;code&gt;'stream'&lt;/code&gt; event emitted by the &lt;code&gt;net.Server&lt;/code&gt; or &lt;code&gt;tls.Server&lt;/code&gt; instances returned by &lt;code&gt;http2.createServer()&lt;/code&gt; and &lt;code&gt;http2.createSecureServer()&lt;/code&gt;, respectively, as in the example below:</source>
          <target state="translated">서버 측에서 사용자 코드는 일반적으로이 이벤트를 직접 수신하지 않고 &lt;code&gt;http2.createServer()&lt;/code&gt; 및 &lt;code&gt;http2.createSecureServer()&lt;/code&gt; 의해 리턴 된 net.Server 또는 &lt;code&gt;tls.Server&lt;/code&gt; 인스턴스 에서 &lt;code&gt;net.Server&lt;/code&gt; 된 &lt;code&gt;'stream'&lt;/code&gt; 이벤트에 대한 핸들러를 등록합니다. 아래 예와 같이 각각 ()</target>
        </trans-unit>
        <trans-unit id="db98c36f8419db12b0191adee61e97e682faea7d" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;destroy()&lt;/code&gt; has been called any further calls will be a no-op and no further errors except from &lt;code&gt;_destroy()&lt;/code&gt; may be emitted as &lt;code&gt;'error'&lt;/code&gt;.</source>
          <target state="translated">일단 &lt;code&gt;destroy()&lt;/code&gt; 더 호출이 어떤 조합과에서를 제외하고 더 이상의 오류가 없습니다 호출 된 &lt;code&gt;_destroy()&lt;/code&gt; 로 방출 할 수있다 &lt;code&gt;'error'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ea59c46dc0807588619ccf2c0d9fae3a8fddb2c" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;destroy()&lt;/code&gt; has been called, any further calls will be a no-op and no further errors except from &lt;code&gt;_destroy()&lt;/code&gt; may be emitted as &lt;code&gt;'error'&lt;/code&gt;.</source>
          <target state="translated">일단 &lt;code&gt;destroy()&lt;/code&gt; 더 호출은 무 조작과에서를 제외하고 더 이상의 오류가 없을 것, 호출 된 &lt;code&gt;_destroy()&lt;/code&gt; 로 방출 할 수있다 &lt;code&gt;'error'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b28a2e0cd081287892b62dd1e0f530cc16c1da53" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;process.connected&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, it is no longer possible to send messages over the IPC channel using &lt;code&gt;process.send()&lt;/code&gt;.</source>
          <target state="translated">일단 &lt;code&gt;process.connected&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; , 그것은 IPC 채널 사용을 통해 메시지를 보내 더 이상 가능하다 &lt;code&gt;process.send()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa23dc4c315219e395e0590efe1a2b70ca58a09" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;Socket&lt;/code&gt; has been bound to an &lt;code&gt;Http2Session&lt;/code&gt;, user code should rely solely on the API of the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; 이 &lt;code&gt;Http2Session&lt;/code&gt; 에 바인딩 되면 사용자 코드는 &lt;code&gt;Http2Session&lt;/code&gt; 의 API에만 의존해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d73920c9a9f1ea9d30889c8dfb8841df2a90c168" translate="yes" xml:space="preserve">
          <source>Once a socket has been passed to a child, the parent is no longer capable of tracking when the socket is destroyed. To indicate this, the &lt;code&gt;.connections&lt;/code&gt; property becomes &lt;code&gt;null&lt;/code&gt;. It is recommended not to use &lt;code&gt;.maxConnections&lt;/code&gt; when this occurs.</source>
          <target state="translated">소켓이 자식에게 전달되면 소켓은 소켓이 파괴 될 때 더 이상 추적 할 수 없습니다. 이를 나타 내기 위해 &lt;code&gt;.connections&lt;/code&gt; 속성이 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 이 경우 &lt;code&gt;.maxConnections&lt;/code&gt; 를 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a692176ad95c5de300944c8834aa875a0d87f9b1" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_setkeepalive_enable_initialdelay&quot;&gt;&lt;code&gt;socket.setKeepAlive()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">소켓이이 요청에 할당되고 연결되면 &lt;a href=&quot;net#net_socket_setkeepalive_enable_initialdelay&quot;&gt; &lt;code&gt;socket.setKeepAlive()&lt;/code&gt; &lt;/a&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7f52f26999bdf868260d070323acc69b57258b58" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_setnodelay_nodelay&quot;&gt;&lt;code&gt;socket.setNoDelay()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">소켓이이 요청에 할당하고 연결되면 &lt;a href=&quot;net#net_socket_setnodelay_nodelay&quot;&gt; &lt;code&gt;socket.setNoDelay()&lt;/code&gt; &lt;/a&gt; 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="33c79533c7386872c12f4b58db6859df57263cfa" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_settimeout_timeout_callback&quot;&gt;&lt;code&gt;socket.setTimeout()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">소켓이이 요청에 할당되고 연결되면 &lt;a href=&quot;net#net_socket_settimeout_timeout_callback&quot;&gt; &lt;code&gt;socket.setTimeout()&lt;/code&gt; &lt;/a&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="efd079e73c7a96e390596e9440343bcb5e17ed66" translate="yes" xml:space="preserve">
          <source>Once again, to build this example, the &lt;code&gt;myobject.cc&lt;/code&gt; file must be added to the &lt;code&gt;binding.gyp&lt;/code&gt;:</source>
          <target state="translated">이 예제를 다시 작성하려면 &lt;code&gt;myobject.cc&lt;/code&gt; 파일을 &lt;code&gt;binding.gyp&lt;/code&gt; 에 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a0f447123bcb9f711d107a546941eab8691f611f" translate="yes" xml:space="preserve">
          <source>Once an event has been emitted, all listeners attached to it at the time of emitting will be called in order. This implies that any &lt;code&gt;removeListener()&lt;/code&gt; or &lt;code&gt;removeAllListeners()&lt;/code&gt; calls &lt;em&gt;after&lt;/em&gt; emitting and &lt;em&gt;before&lt;/em&gt; the last listener finishes execution will not remove them from &lt;code&gt;emit()&lt;/code&gt; in progress. Subsequent events will behave as expected.</source>
          <target state="translated">이벤트가 생성되면 생성시 연결된 모든 리스너가 순서대로 호출됩니다. 이는 방출 &lt;em&gt;후&lt;/em&gt; 및 마지막 리스너 실행이 완료 &lt;em&gt;되기 전에 &lt;/em&gt; &lt;code&gt;removeListener()&lt;/code&gt; 또는 &lt;code&gt;removeAllListeners()&lt;/code&gt; 호출 이 진행중인 &lt;code&gt;emit()&lt;/code&gt; 에서 제거되지 않음을 의미합니다 . 후속 이벤트는 예상대로 작동합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f94fa29a6ba027494d2efe834bdc10a1975cff01" translate="yes" xml:space="preserve">
          <source>Once an event is emitted, all listeners attached to it at the time of emitting are called in order. This implies that any &lt;code&gt;removeListener()&lt;/code&gt; or &lt;code&gt;removeAllListeners()&lt;/code&gt; calls &lt;em&gt;after&lt;/em&gt; emitting and &lt;em&gt;before&lt;/em&gt; the last listener finishes execution will not remove them from &lt;code&gt;emit()&lt;/code&gt; in progress. Subsequent events behave as expected.</source>
          <target state="translated">이벤트가 발생하면 해당 이벤트에 연결된 모든 리스너가 순서대로 호출됩니다. 이것은 어떤 것을 의미 &lt;code&gt;removeListener()&lt;/code&gt; 또는 &lt;code&gt;removeAllListeners()&lt;/code&gt; 호출 &lt;em&gt;한 후&lt;/em&gt; 방출하고 &lt;em&gt;전에&lt;/em&gt; 마지막 리스너가 완료 실행에서 제거되지 않습니다 &lt;code&gt;emit()&lt;/code&gt; 진행. 후속 이벤트는 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e2b0e5947e0cec9da5491e6da952ace81743900d" translate="yes" xml:space="preserve">
          <source>Once built, the binary Addon can be used from within Node.js by pointing &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt; to the built &lt;code&gt;addon.node&lt;/code&gt; module:</source>
          <target state="translated">빌드 된 바이너리 &lt;code&gt;addon.node&lt;/code&gt; 은 &lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt; 를 빌드 된 addon.node 모듈 로 지정하여 Node.js 내에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6a5e03fd76a0c9401995bf6c32afa91bc8f4c48" translate="yes" xml:space="preserve">
          <source>Once built, the binary addon can be used from within Node.js by pointing &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt; to the built &lt;code&gt;addon.node&lt;/code&gt; module:</source>
          <target state="translated">빌드되면 , 빌드 된 &lt;code&gt;addon.node&lt;/code&gt; 모듈에 &lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt; 를 지정하여 Node.js 내에서 바이너리 애드온을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="15b98e33970016f35017b9cd3f8d13b67f71f0b2" translate="yes" xml:space="preserve">
          <source>Once called, the &lt;code&gt;http2session.pendingSettingsAck&lt;/code&gt; property will be &lt;code&gt;true&lt;/code&gt; while the session is waiting for the remote peer to acknowledge the new settings.</source>
          <target state="translated">라고하면, &lt;code&gt;http2session.pendingSettingsAck&lt;/code&gt; 속성이 될 것입니다 &lt;code&gt;true&lt;/code&gt; 세션이 새 설정을 확인하는 원격 피어를 기다리는 동안.</target>
        </trans-unit>
        <trans-unit id="b7b49eb661c1323cc9c21687a30ad06fc5aca2c4" translate="yes" xml:space="preserve">
          <source>Once compiled, the example Addon can be required and used from within Node.js:</source>
          <target state="translated">컴파일되면 Addon 예제가 필요하며 Node.js 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a257431910afb0a71f29f84ab098cccf906f7a42" translate="yes" xml:space="preserve">
          <source>Once compiled, the example addon can be required and used from within Node.js:</source>
          <target state="translated">컴파일이 완료되면 예제 애드온이 필요하며 Node.js 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c860007d4d4eedf037226ad7546486c7073ead4f" translate="yes" xml:space="preserve">
          <source>Once created the async worker can be queued for execution using the &lt;a href=&quot;#n_api_napi_queue_async_work&quot;&gt;&lt;code&gt;napi_queue_async_work&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">일단 생성되면 비동기 작업자는 &lt;a href=&quot;#n_api_napi_queue_async_work&quot;&gt; &lt;code&gt;napi_queue_async_work&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 실행을 위해 대기 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fde554252391956e05e5ec8e1b886df2dade9a50" translate="yes" xml:space="preserve">
          <source>Once destroyed, the &lt;code&gt;Http2Session&lt;/code&gt; will emit the &lt;code&gt;'close'&lt;/code&gt; event. If &lt;code&gt;error&lt;/code&gt; is not undefined, an &lt;code&gt;'error'&lt;/code&gt; event will be emitted immediately before the &lt;code&gt;'close'&lt;/code&gt; event.</source>
          <target state="translated">일단 &lt;code&gt;Http2Session&lt;/code&gt; 이 파괴되면 &lt;code&gt;'close'&lt;/code&gt; 이벤트가 발생합니다. &lt;code&gt;error&lt;/code&gt; 가 정의되지 않은 경우 &lt;code&gt;'close'&lt;/code&gt; 이벤트 직전에 &lt;code&gt;'error'&lt;/code&gt; 이벤트가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b2d38c26dd12cdd65c7b3c851e009727e58fdc0" translate="yes" xml:space="preserve">
          <source>Once enabled, Node.js will treat the following as ES modules when passed to &lt;code&gt;node&lt;/code&gt; as the initial input, or when referenced by &lt;code&gt;import&lt;/code&gt; statements within ES module code:</source>
          <target state="translated">활성화되면 Node.js는 &lt;code&gt;node&lt;/code&gt; 에 초기 입력으로 전달 되거나 ES 모듈 코드 내의 &lt;code&gt;import&lt;/code&gt; 문에서 참조 될 때 다음을 ES 모듈로 취급합니다 .</target>
        </trans-unit>
        <trans-unit id="73e0f4c1adc95b4748965a8b094cee1cd3d7802c" translate="yes" xml:space="preserve">
          <source>Once no more items are left in the queue, the idle loop must be suspended. This error indicates that the idle loop has failed to stop.</source>
          <target state="translated">대기열에 더 이상 항목이 남아 있지 않으면 유휴 루프를 일시 중단해야합니다. 이 오류는 유휴 루프가 중지되지 않았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="56f48e595782eee9bf460b4ddf8f7f4ab9ce4be3" translate="yes" xml:space="preserve">
          <source>Once the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method has been called, it will not be called again until more data is pushed through the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt; method. Empty data such as empty buffers and strings will not cause &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; to be called.</source>
          <target state="translated">일단 &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 한 많은 데이터를 통해 가압 될 때까지, 이는 다시 호출되지 &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; &lt;/a&gt; 방법. 빈 버퍼 및 문자열과 같은 빈 데이터는 &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 를 호출 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="82ae60722591a3b5fc366c0deb82c1caaa5403c3" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file has been created, use &lt;code&gt;node-gyp configure&lt;/code&gt; to generate the appropriate project build files for the current platform. This will generate either a &lt;code&gt;Makefile&lt;/code&gt; (on Unix platforms) or a &lt;code&gt;vcxproj&lt;/code&gt; file (on Windows) in the &lt;code&gt;build/&lt;/code&gt; directory.</source>
          <target state="translated">한 번 &lt;code&gt;binding.gyp&lt;/code&gt; 의 파일이 생성되어, 사용 &lt;code&gt;node-gyp configure&lt;/code&gt; 현재의 플랫폼에 해당하는 프로젝트 빌드 파일을 생성합니다. 이렇게하면 &lt;code&gt;build/&lt;/code&gt; 디렉토리 에 &lt;code&gt;Makefile&lt;/code&gt; (UNIX 플랫폼) 또는 &lt;code&gt;vcxproj&lt;/code&gt; 파일 (Windows)이 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="546e3d8231cb1e62063ceda275311eaa096e3438" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file is ready, the example Addons can be configured and built using &lt;code&gt;node-gyp&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;binding.gyp&lt;/code&gt; 파일이 준비 되면 &lt;code&gt;node-gyp&lt;/code&gt; 를 사용하여 애드온 예제를 구성하고 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c72da0d7dea0742ac9e442107cf2b82db83e160c" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file is ready, the example addons can be configured and built using &lt;code&gt;node-gyp&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;binding.gyp&lt;/code&gt; 파일이 준비 되면 &lt;code&gt;node-gyp&lt;/code&gt; 를 사용하여 예제 애드온을 구성하고 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9da60f44e80b948826dc67bb1bcd8aec425f7132" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;cipher.final()&lt;/code&gt; method has been called, the &lt;code&gt;Cipher&lt;/code&gt; object can no longer be used to encrypt data. Attempts to call &lt;code&gt;cipher.final()&lt;/code&gt; more than once will result in an error being thrown.</source>
          <target state="translated">한 번 &lt;code&gt;cipher.final()&lt;/code&gt; 메소드가 호출 된의 &lt;code&gt;Cipher&lt;/code&gt; 객체는 암호화 데이터를 더 이상 사용할 수 없습니다. &lt;code&gt;cipher.final()&lt;/code&gt; 두 번 이상 호출 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6673a87b1a83c087904fc3e05640c35e0ffaa21b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;decipher.final()&lt;/code&gt; method has been called, the &lt;code&gt;Decipher&lt;/code&gt; object can no longer be used to decrypt data. Attempts to call &lt;code&gt;decipher.final()&lt;/code&gt; more than once will result in an error being thrown.</source>
          <target state="translated">한 번 &lt;code&gt;decipher.final()&lt;/code&gt; 메소드가 호출 된의 &lt;code&gt;Decipher&lt;/code&gt; 객체는 더 이상 해독 데이터를 사용할 수 없습니다. &lt;code&gt;decipher.final()&lt;/code&gt; 두 번 이상 호출 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="52f4dfed9ec5522e12f3e2b5320ac83fe3e4216c" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;readable._read()&lt;/code&gt; method has been called, it will not be called again until the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">한 번 &lt;code&gt;readable._read()&lt;/code&gt; 메소드가 호출 된 때까지 다시 호출되지 않습니다 &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; &lt;/a&gt; 메소드가 호출된다.</target>
        </trans-unit>
        <trans-unit id="1a22398bb64d578f5216c8a024b94cc6d8495243" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;readline.Interface&lt;/code&gt; instance is created, the most common case is to listen for the &lt;code&gt;'line'&lt;/code&gt; event:</source>
          <target state="translated">한 번 &lt;code&gt;readline.Interface&lt;/code&gt; 의 인스턴스가 생성되고, 가장 일반적인 경우는 수신하는 &lt;code&gt;'line'&lt;/code&gt; 이벤트 :</target>
        </trans-unit>
        <trans-unit id="c00e5c746b27e93abda9669983083d6308ff5915" translate="yes" xml:space="preserve">
          <source>Once the CSR file is generated, it can either be sent to a Certificate Authority for signing or used to generate a self-signed certificate.</source>
          <target state="translated">CSR 파일이 생성되면 서명을 위해 인증 기관으로 전송되거나 자체 서명 된 인증서를 생성하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c814183de4ee5ac446ac54e8c1b050300c264185" translate="yes" xml:space="preserve">
          <source>Once the certificate is generated, it can be used to generate a &lt;code&gt;.pfx&lt;/code&gt; or &lt;code&gt;.p12&lt;/code&gt; file:</source>
          <target state="translated">인증서가 생성되면 &lt;code&gt;.pfx&lt;/code&gt; 또는 &lt;code&gt;.p12&lt;/code&gt; 파일 을 생성하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96a60a169bcc053e92f04ade6da11c5c2f124427" translate="yes" xml:space="preserve">
          <source>Once the client receives the &lt;code&gt;SETTINGS&lt;/code&gt; frame from the server indicating that the extended CONNECT may be used, it may send &lt;code&gt;CONNECT&lt;/code&gt; requests that use the &lt;code&gt;':protocol'&lt;/code&gt; HTTP/2 pseudo-header:</source>
          <target state="translated">클라이언트 가 확장 CONNECT를 사용할 수 있음을 나타내는 &lt;code&gt;SETTINGS&lt;/code&gt; 프레임을 서버에서 수신하면 &lt;code&gt;':protocol'&lt;/code&gt; HTTP / 2 의사 헤더 를 사용하는 &lt;code&gt;CONNECT&lt;/code&gt; 요청을 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23163b4a5b1c314b71549df1d1817513f8d243c4" translate="yes" xml:space="preserve">
          <source>Once the debugger is run, a breakpoint will occur at line 3:</source>
          <target state="translated">디버거가 실행되면 3 번 줄에 중단 점이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06333cf16cd00d4e14a36bbf306106e9fe7a8631" translate="yes" xml:space="preserve">
          <source>Once the number of threads making use of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; reaches zero, no further threads can start making use of it by calling &lt;code&gt;napi_acquire_threadsafe_function()&lt;/code&gt;. In fact, all subsequent API calls associated with it, except &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt;, will return an error value of &lt;code&gt;napi_closing&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;napi_threadsafe_function&lt;/code&gt; 을 사용하는 스레드 수가 0에 도달하면 &lt;code&gt;napi_acquire_threadsafe_function()&lt;/code&gt; 을 호출하여 더 이상 사용할 수 없습니다 . 실제로 &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; 제외한 모든 후속 API 호출 은 오류 값 &lt;code&gt;napi_closing&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="697685409a68c8f36ef5cf0d11b15316e24adea9" translate="yes" xml:space="preserve">
          <source>Once the server is now shared between the parent and child, some connections can be handled by the parent and some by the child.</source>
          <target state="translated">서버가 이제 부모와 자식간에 공유되면 일부 연결은 부모와 자식에 의해 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54c3869b5e878ba059e38cec56d8324aec191fbe" translate="yes" xml:space="preserve">
          <source>Once the socket is created, calling &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; will instruct the socket to begin listening for datagram messages. When &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; are not passed to &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; the method will bind the socket to the &quot;all interfaces&quot; address on a random port (it does the right thing for both &lt;code&gt;udp4&lt;/code&gt; and &lt;code&gt;udp6&lt;/code&gt; sockets). The bound address and port can be retrieved using &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().port&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소켓이 작성되면 &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; 를 호출하면 소켓이 데이터 그램 메시지 청취를 시작하도록 지시합니다. 시 &lt;code&gt;address&lt;/code&gt; 와 &lt;code&gt;port&lt;/code&gt; 전달되지 않습니다 &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt; 메소드는 (그것이 모두 옳은 일을하는 임의의 포트에 &quot;모든 인터페이스&quot;주소로 소켓을 바인딩 &lt;code&gt;udp4&lt;/code&gt; 및 &lt;code&gt;udp6&lt;/code&gt; 소켓). 바인딩 된 주소와 포트는 &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().address&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().port&lt;/code&gt; &lt;/a&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9dd7de7e1c91ec7335bd144924ed7a2032f6d8f" translate="yes" xml:space="preserve">
          <source>Once the source code has been written, it must be compiled into the binary &lt;code&gt;addon.node&lt;/code&gt; file. To do so, create a file called &lt;code&gt;binding.gyp&lt;/code&gt; in the top-level of the project describing the build configuration of the module using a JSON-like format. This file is used by &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt; &amp;mdash; a tool written specifically to compile Node.js Addons.</source>
          <target state="translated">소스 코드가 작성되면 바이너리 &lt;code&gt;addon.node&lt;/code&gt; 파일 로 컴파일해야 합니다. 이렇게하려면 JSON과 같은 형식을 사용하여 모듈의 빌드 구성을 설명하는 프로젝트 최상위 레벨에 &lt;code&gt;binding.gyp&lt;/code&gt; 라는 파일을 작성하십시오 . 이 파일은 Node.js 애드온을 컴파일하기 위해 특별히 작성된 도구 인 &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp에서&lt;/a&gt; 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c1ec49d0c8b41620816e4acc922a0bb808c5323" translate="yes" xml:space="preserve">
          <source>Once the source code has been written, it must be compiled into the binary &lt;code&gt;addon.node&lt;/code&gt; file. To do so, create a file called &lt;code&gt;binding.gyp&lt;/code&gt; in the top-level of the project describing the build configuration of the module using a JSON-like format. This file is used by &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt;, a tool written specifically to compile Node.js addons.</source>
          <target state="translated">소스 코드가 작성되면 바이너리 &lt;code&gt;addon.node&lt;/code&gt; 파일 로 컴파일해야 합니다. 이렇게하려면 JSON과 유사한 형식을 사용하여 모듈의 빌드 구성을 설명하는 프로젝트의 최상위 수준에 &lt;code&gt;binding.gyp&lt;/code&gt; 라는 파일을 만듭니다 . 이 파일은 Node.js 애드온을 컴파일하기 위해 특별히 작성된 도구 인 &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt; 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bcbfb2f9203bc4c118a7a189cee574fa849e67c8" translate="yes" xml:space="preserve">
          <source>Once the total size of the internal read buffer reaches the threshold specified by &lt;code&gt;highWaterMark&lt;/code&gt;, the stream will temporarily stop reading data from the underlying resource until the data currently buffered can be consumed (that is, the stream will stop calling the internal &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method that is used to fill the read buffer).</source>
          <target state="translated">내부 읽기 버퍼의 총 크기가 &lt;code&gt;highWaterMark&lt;/code&gt; 에 지정된 임계 값에 도달하면 스트림은 현재 버퍼링 된 데이터를 사용할 수있을 때까지 기본 리소스에서 데이터 읽기를 일시적으로 중지합니다 (즉, 스트림이 내부 &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; 호출을 중지합니다. ) 읽기 버퍼를 채우는 데 사용되는 메서드).</target>
        </trans-unit>
        <trans-unit id="3ab067988cb8464f26b4eae4e55c63ed294db10f" translate="yes" xml:space="preserve">
          <source>Once the total size of the internal read buffer reaches the threshold specified by &lt;code&gt;highWaterMark&lt;/code&gt;, the stream will temporarily stop reading data from the underlying resource until the data currently buffered can be consumed (that is, the stream will stop calling the internal &lt;code&gt;readable._read()&lt;/code&gt; method that is used to fill the read buffer).</source>
          <target state="translated">내부 읽기 버퍼의 총 크기가 &lt;code&gt;highWaterMark&lt;/code&gt; 로 지정된 임계 값에 도달하면 현재 버퍼링 된 데이터를 사용할 수있을 때까지 (즉, 스트림에서 내부 &lt;code&gt;readable._read()&lt;/code&gt; 호출을 중지합니다.) 스트림은 기본 리소스에서 데이터 읽기를 일시적으로 중지합니다. ) 는 읽기 버퍼를 채우는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad2356ff474e553c5985844e65af0e12776a0075" translate="yes" xml:space="preserve">
          <source>Once this code is invoked, the Node.js application will not terminate until the &lt;code&gt;readline.Interface&lt;/code&gt; is closed because the interface waits for data to be received on the &lt;code&gt;input&lt;/code&gt; stream.</source>
          <target state="translated">이 코드가 호출되면 &lt;code&gt;readline.Interface&lt;/code&gt; 가 닫힐 때까지 Node.js 애플리케이션이 종료되지 않습니다 . 인터페이스는 &lt;code&gt;input&lt;/code&gt; 스트림 에서 데이터가 수신되기를 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="8fc3a43e7dfa64098d2c09722663a4214268b6eb" translate="yes" xml:space="preserve">
          <source>Once this has been set, all modules must conform to a policy manifest file passed to the flag:</source>
          <target state="translated">이것이 설정되면 모든 모듈은 플래그에 전달 된 정책 매니페스트 파일을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="3519b2f373a34f74cf339382a013f3959d2d1fd2" translate="yes" xml:space="preserve">
          <source>One can provide the context by &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&quot;contextifying&quot;&lt;/a&gt; a sandbox object. The sandboxed code treats any property in the sandbox like a global variable. Any changes to global variables caused by the sandboxed code are reflected in the sandbox object.</source>
          <target state="translated">샌드 박스 객체를 &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&quot;&lt;/a&gt; 컨텍스트 화 &quot; 하여 컨텍스트를 제공 할 수 있습니다 . 샌드 박스 코드는 샌드 박스의 모든 속성을 전역 변수처럼 취급합니다. 샌드 박스 코드로 인한 전역 변수의 변경 사항은 샌드 박스 객체에 반영됩니다.</target>
        </trans-unit>
        <trans-unit id="187c68bb8a264278e9942712292d71404fc271e4" translate="yes" xml:space="preserve">
          <source>One can provide the context by &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&lt;em&gt;contextifying&lt;/em&gt;&lt;/a&gt; an object. The invoked code treats any property in the context like a global variable. Any changes to global variables caused by the invoked code are reflected in the context object.</source>
          <target state="translated">하나는하여 컨텍스트를 제공 할 수 &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&lt;em&gt;contextifying&lt;/em&gt;&lt;/a&gt; 개체를. 호출 된 코드는 컨텍스트의 모든 속성을 전역 변수처럼 취급합니다. 호출 된 코드로 인한 전역 변수 변경 사항은 컨텍스트 개체에 반영됩니다.</target>
        </trans-unit>
        <trans-unit id="351de5baff893d4ca3128780d0df95fddb77cebd" translate="yes" xml:space="preserve">
          <source>One convenient use of &lt;code&gt;buf.swap16()&lt;/code&gt; is to perform a fast in-place conversion between UTF-16 little-endian and UTF-16 big-endian:</source>
          <target state="translated">&lt;code&gt;buf.swap16()&lt;/code&gt; 의 편리한 사용법 중 하나 는 UTF-16 리틀 엔디안과 UTF-16 빅 엔디안 사이에서 빠른 내부 변환을 수행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3a507f120a673bd98a67457d61883d39ae2de1c" translate="yes" xml:space="preserve">
          <source>One important caveat is that if the &lt;code&gt;Readable&lt;/code&gt; stream emits an error during processing, the &lt;code&gt;Writable&lt;/code&gt; destination &lt;em&gt;is not closed&lt;/em&gt; automatically. If an error occurs, it will be necessary to &lt;em&gt;manually&lt;/em&gt; close each stream in order to prevent memory leaks.</source>
          <target state="translated">중요한 한 가지주의 사항은 처리 중에 &lt;code&gt;Readable&lt;/code&gt; 스트림에서 오류가 발생하면 &lt;code&gt;Writable&lt;/code&gt; 대상 &lt;em&gt;이&lt;/em&gt; 자동으로 &lt;em&gt;닫히지 않는다는 것&lt;/em&gt; 입니다. 오류가 발생 하면 메모리 누수를 방지하기 위해 각 스트림 을 &lt;em&gt;수동으로&lt;/em&gt; 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="fe5f45681577d4b399916698594c49e0ceea86c0" translate="yes" xml:space="preserve">
          <source>One of the most common errors raised when listening is &lt;code&gt;EADDRINUSE&lt;/code&gt;. This happens when another server is already listening on the requested &lt;code&gt;port&lt;/code&gt;/&lt;code&gt;path&lt;/code&gt;/&lt;code&gt;handle&lt;/code&gt;. One way to handle this would be to retry after a certain amount of time:</source>
          <target state="translated">청취 할 때 발생하는 가장 일반적인 오류 중 하나는 &lt;code&gt;EADDRINUSE&lt;/code&gt; 입니다. 다른 서버가 이미 요청 된 &lt;code&gt;port&lt;/code&gt; / &lt;code&gt;path&lt;/code&gt; / &lt;code&gt;handle&lt;/code&gt; 에서 수신 대기 중일 때 발생합니다 . 이를 처리하는 한 가지 방법은 특정 시간 후에 다시 시도하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="aa135875bf0bd9017b9a196225817756a41d1812" translate="yes" xml:space="preserve">
          <source>One or more &lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt;&lt;code&gt;crypto.scrypt()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;crypto#crypto_crypto_scryptsync_password_salt_keylen_options&quot;&gt;&lt;code&gt;crypto.scryptSync()&lt;/code&gt;&lt;/a&gt; parameters are outside their legal range.</source>
          <target state="translated">하나 이상의 &lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt; &lt;code&gt;crypto.scrypt()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;crypto#crypto_crypto_scryptsync_password_salt_keylen_options&quot;&gt; &lt;code&gt;crypto.scryptSync()&lt;/code&gt; &lt;/a&gt; 매개 변수가 올바른 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="6a2562b4150db0fb4119fd85c182ca57d6db6994" translate="yes" xml:space="preserve">
          <source>One possible use case would be as follows:</source>
          <target state="translated">가능한 사용 사례는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb47b123548d590aa8c68a0428d092779ba76f44" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable &quot;own&quot; properties&lt;/a&gt; are considered.</source>
          <target state="translated">만 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;열거 &quot;자신의&quot;특성이&lt;/a&gt; 고려된다.</target>
        </trans-unit>
        <trans-unit id="63f3372d23540753a3045f20a2de73ac6d501f2c" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;file://&lt;/code&gt; URLs are supported. A specifier like &lt;code&gt;'https://example.com/app.js'&lt;/code&gt; may be supported by browsers but it is not supported in Node.js.</source>
          <target state="translated">만 &lt;code&gt;file://&lt;/code&gt; URL이 지원됩니다. &lt;code&gt;'https://example.com/app.js'&lt;/code&gt; 와 같은 지정자는 브라우저에서 지원 될 수 있지만 Node.js에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="edb7a1ea5f66df14050f6a0d49ae943ee3604742" translate="yes" xml:space="preserve">
          <source>Only available on macOS.</source>
          <target state="translated">macOS에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c246cd36bac7738a349801c82a2c89fa583ff6e" translate="yes" xml:space="preserve">
          <source>Only paths that can be converted to UTF8 strings are supported.</source>
          <target state="translated">UTF8 문자열로 변환 할 수있는 경로 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c92c05e05a8e3fc5db502dc24b267e7e1531b49e" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the creation time of this file expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; 가 객체를 생성하는 메서드에 전달되는 경우에만 존재 합니다. POSIX Epoch 이후 나노초로 표현 된이 파일의 생성 시간을 나타내는 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="29a7376fbab5583bd507e910da3f14f9f7f21537" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time the file status was changed expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; 가 객체를 생성하는 메서드에 전달되는 경우에만 존재 합니다. POSIX Epoch 이후 파일 상태가 마지막으로 변경된 시간을 나타내는 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="9afa75ceeef673960abb4793c84e0579e41fbbc0" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time this file was accessed expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; 가 객체를 생성하는 메서드에 전달되는 경우에만 존재 합니다. POSIX Epoch 이후이 파일에 마지막으로 액세스 한 시간을 나타내는 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="37769cfc20877109a333d1d761074b615aa57389" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time this file was modified expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; 가 객체를 생성하는 메서드에 전달되는 경우에만 존재 합니다. POSIX Epoch 이후이 파일이 마지막으로 수정 된 시간을 나타내는 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="ce8407018b2098f6ff3ff68520f9ad9648a860e0" translate="yes" xml:space="preserve">
          <source>Only trace event categories &lt;em&gt;not&lt;/em&gt; covered by other enabled &lt;code&gt;Tracing&lt;/code&gt; objects and &lt;em&gt;not&lt;/em&gt; specified by the &lt;code&gt;--trace-event-categories&lt;/code&gt; flag will be disabled.</source>
          <target state="translated">다른 활성화 된 &lt;code&gt;Tracing&lt;/code&gt; 개체가 포함 &lt;em&gt;하지 않고 &lt;/em&gt; &lt;code&gt;--trace-event-categories&lt;/code&gt; 플래그 로 지정 &lt;em&gt;되지 않은&lt;/em&gt; 추적 이벤트 범주 만 비활성화됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="818c8ba602efd4344b71ff0610ac1f11fe2091e8" translate="yes" xml:space="preserve">
          <source>Only using &lt;code&gt;execution&lt;/code&gt; to graph resource allocation results in the following:</source>
          <target state="translated">&lt;code&gt;execution&lt;/code&gt; 만 사용하여 자원 할당을 그래프로 표시하면 다음과 같은 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0866a6679f2304150872475ce947118962cb398a" translate="yes" xml:space="preserve">
          <source>Only valid HTTP/2 pseudoheaders (&lt;code&gt;:status&lt;/code&gt;, &lt;code&gt;:path&lt;/code&gt;, &lt;code&gt;:authority&lt;/code&gt;, &lt;code&gt;:scheme&lt;/code&gt;, and &lt;code&gt;:method&lt;/code&gt;) may be used.</source>
          <target state="translated">유효한 HTTP / 2 유사 헤더 ( &lt;code&gt;:status&lt;/code&gt; , &lt;code&gt;:path&lt;/code&gt; , &lt;code&gt;:authority&lt;/code&gt; , &lt;code&gt;:scheme&lt;/code&gt; 및 &lt;code&gt;:method&lt;/code&gt; ) 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fbb5394b0bbacb4a606f59c117f48e95ac40839" translate="yes" xml:space="preserve">
          <source>Opaque datatype that is passed to a callback function. It can be used for getting additional information about the context in which the callback was invoked.</source>
          <target state="translated">콜백 함수에 전달되는 불투명 한 데이터 유형입니다. 콜백이 호출 된 컨텍스트에 대한 추가 정보를 얻는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb30108139981163d74614839e16a5955e865262" translate="yes" xml:space="preserve">
          <source>OpenSSL Engine Constants</source>
          <target state="translated">OpenSSL 엔진 상수</target>
        </trans-unit>
        <trans-unit id="bd2ab4c32295a0bfd4af5d2e107b139bdf7ea2ec" translate="yes" xml:space="preserve">
          <source>OpenSSL Errors</source>
          <target state="translated">OpenSSL 오류</target>
        </trans-unit>
        <trans-unit id="0a23fe56e977cbe8b8b37050f90075b125e835ce" translate="yes" xml:space="preserve">
          <source>OpenSSL Options</source>
          <target state="translated">OpenSSL 옵션</target>
        </trans-unit>
        <trans-unit id="8639ec8eb250b9459a4daef900bb6db2e08c3fda" translate="yes" xml:space="preserve">
          <source>OpenSSL engine constants</source>
          <target state="translated">OpenSSL 엔진 상수</target>
        </trans-unit>
        <trans-unit id="8a6027a433eaa432acaa17693b4a1c30ab97c94f" translate="yes" xml:space="preserve">
          <source>OpenSSL errors</source>
          <target state="translated">OpenSSL 오류</target>
        </trans-unit>
        <trans-unit id="e71dbc791da44d2e31d2e955ee345838f69ae994" translate="yes" xml:space="preserve">
          <source>OpenSSL options</source>
          <target state="translated">OpenSSL 옵션</target>
        </trans-unit>
        <trans-unit id="a237923919a0fc450b15f5528b59e5cb5a8fbb77" translate="yes" xml:space="preserve">
          <source>Opens the REPL even if stdin does not appear to be a terminal.</source>
          <target state="translated">stdin이 터미널이 아닌 경우에도 REPL을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="a7b66539f223c2feb1537a76d67d4fea7a2e1c62" translate="yes" xml:space="preserve">
          <source>Operate on written data, then read the result</source>
          <target state="translated">기록 된 데이터를 조작 한 후 결과를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="87f8bbdfe0b61a783e46f76e062c44f9356165fb" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref()&lt;/code&gt;ed worker will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only active handle left (the default behavior). If the worker is &lt;code&gt;ref()&lt;/code&gt;ed, calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; 와 반대로 , 이전에 &lt;code&gt;unref()&lt;/code&gt; 작업 한 작업자 에서 &lt;code&gt;ref()&lt;/code&gt; 를 호출 하면 프로그램이 유일한 활성 핸들 (기본 동작) 인 경우 프로그램을 종료 &lt;em&gt;하지 못합니다&lt;/em&gt; . 작업자가 &lt;code&gt;ref()&lt;/code&gt; 이면 &lt;code&gt;ref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="127baba5a6519d8806b45f384daa393ccb33987f" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref&lt;/code&gt;ed server will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only server left (the default behavior). If the server is &lt;code&gt;ref&lt;/code&gt;ed calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">의 반대 &lt;code&gt;unref()&lt;/code&gt; 호출 &lt;code&gt;ref()&lt;/code&gt; 이전에 &lt;code&gt;unref&lt;/code&gt; 에드 서버는 것이다 &lt;em&gt;되지&lt;/em&gt; 는 왼쪽 전용 서버 (기본 동작)의 경우 프로그램 종료를 할 수 있습니다. 서버가 &lt;code&gt;ref&lt;/code&gt; 되면 &lt;code&gt;ref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b1e004053c4c47fd31d633fd984504a42cd13164" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref&lt;/code&gt;ed socket will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only socket left (the default behavior). If the socket is &lt;code&gt;ref&lt;/code&gt;ed calling &lt;code&gt;ref&lt;/code&gt; again will have no effect.</source>
          <target state="translated">의 반대 &lt;code&gt;unref()&lt;/code&gt; 호출 &lt;code&gt;ref()&lt;/code&gt; 이전에 &lt;code&gt;unref&lt;/code&gt; 에드 소켓 것이다 &lt;em&gt;되지&lt;/em&gt; 는 유일한 소켓 왼쪽 (기본 동작)의 경우 프로그램 종료를 할 수 있습니다. 소켓이 &lt;code&gt;ref&lt;/code&gt; 되면 &lt;code&gt;ref&lt;/code&gt; 를 다시 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="187484a87b2bdaeb306f2e48ad4e7b75c2b51f2c" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;. Calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref()&lt;/code&gt;ed port will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only active handle left (the default behavior). If the port is &lt;code&gt;ref()&lt;/code&gt;ed, calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; 반대입니다 . 이전에 &lt;code&gt;unref()&lt;/code&gt; ed 포트 에서 &lt;code&gt;ref()&lt;/code&gt; 를 호출 하면 프로그램이 유일한 활성 핸들 (기본 동작) 인 경우 프로그램이 종료 &lt;em&gt;되지 않습니다&lt;/em&gt; . 포트가 &lt;code&gt;ref()&lt;/code&gt; 이면 &lt;code&gt;ref()&lt;/code&gt; 다시 호출 해도 효과가 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ca2c93ac54542b570f86014504b2bc62e323b2" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;code&gt;interface&lt;/code&gt; specifies a &lt;code&gt;readline.Interface&lt;/code&gt; instance for which autocompletion is disabled when copy-pasted input is detected.</source>
          <target state="translated">선택적으로 &lt;code&gt;interface&lt;/code&gt; 는 &lt;code&gt;readline.Interface&lt;/code&gt; 인스턴스를 지정하여 복사 붙여 넣기 입력이 감지 될 때 자동 완성이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="75bdbbf93799777386e709ca5d720716b97938f9" translate="yes" xml:space="preserve">
          <source>Optionally, arguments can be passed to the function. They will be passed to the callback function.</source>
          <target state="translated">선택적으로 인수를 함수에 전달할 수 있습니다. 콜백 함수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="27df34d71d94fdab4738a760c4077a1c04332aa3" translate="yes" xml:space="preserve">
          <source>Options for building Node.js</source>
          <target state="translated">Node.js 빌드를위한 옵션</target>
        </trans-unit>
        <trans-unit id="b93bb573dee58e55bb32463b9cef2deb790f7477" translate="yes" xml:space="preserve">
          <source>Options object can be passed in to make Buffer, offset, length and position optional.</source>
          <target state="translated">옵션 객체는 버퍼, 오프셋, 길이 및 위치를 선택 사항으로 만들기 위해 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4e9726239c006b0e965730fee055ac4cbf6886c" translate="yes" xml:space="preserve">
          <source>Options object can be passed in to make offset, length and position optional.</source>
          <target state="translated">옵션 개체를 전달하여 오프셋, 길이 및 위치를 선택적으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="c7e0842c5f7b422b4114fdf246b98ff6f90ee641" translate="yes" xml:space="preserve">
          <source>Or, equivalently using &lt;code&gt;async function&lt;/code&gt;s:</source>
          <target state="translated">또는 &lt;code&gt;async function&lt;/code&gt; s를 동등하게 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e816604026d7740b43374cfc44852e8f51d1183b" translate="yes" xml:space="preserve">
          <source>Or, use the promise-based API:</source>
          <target state="translated">또는 약속 기반 API를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c0289332a46a6ab2e924e9c07a7ed2d872fb2621" translate="yes" xml:space="preserve">
          <source>Or, using the Simplified Constructor approach:</source>
          <target state="translated">또는 Simplified Constructor 접근법을 사용하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b56eff52bda552b1862e7020e3d5ee7f56194e65" translate="yes" xml:space="preserve">
          <source>Or, using the simplified constructor approach:</source>
          <target state="translated">또는 단순화 된 생성자 접근 방식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5e7a93f63ae163c5764065111e0ff2aa8c6b54d2" translate="yes" xml:space="preserve">
          <source>Or, when using pre-ES6 style constructors:</source>
          <target state="translated">또는 ES6 이전 스타일 생성자를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="7db574b20758bcfdd491a74a600d14dfc9e7afab" translate="yes" xml:space="preserve">
          <source>Ordering of callback and promise-based operations</source>
          <target state="translated">콜백 및 약속 기반 작업 순서</target>
        </trans-unit>
        <trans-unit id="671a21fedde0585f7faaf69719a570097901bbc7" translate="yes" xml:space="preserve">
          <source>Organization of this Document</source>
          <target state="translated">이 문서의 구성</target>
        </trans-unit>
        <trans-unit id="669a6b82a27dc15aa96ec2ab10476304cf3cee5a" translate="yes" xml:space="preserve">
          <source>Organization of this document</source>
          <target state="translated">이 문서의 구성</target>
        </trans-unit>
        <trans-unit id="313f2a96e22fad5296235e128769de9aee89d6ce" translate="yes" xml:space="preserve">
          <source>Other OpenSSL Constants</source>
          <target state="translated">다른 OpenSSL 상수</target>
        </trans-unit>
        <trans-unit id="cd7220cc905e8dcd9a741b9d3e5f8dcd1f550b45" translate="yes" xml:space="preserve">
          <source>Other OpenSSL constants</source>
          <target state="translated">기타 OpenSSL 상수</target>
        </trans-unit>
        <trans-unit id="663f15f8e36af763b3a8a1715a35b224493b1cd9" translate="yes" xml:space="preserve">
          <source>Other error codes</source>
          <target state="translated">다른 오류 코드</target>
        </trans-unit>
        <trans-unit id="8fb96cf0c37ad348df64552829c5186f76337aa4" translate="yes" xml:space="preserve">
          <source>Other than &lt;code&gt;'errored'&lt;/code&gt;, this status string corresponds to the specification's &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;'s &lt;code&gt;[[Status]]&lt;/code&gt; field. &lt;code&gt;'errored'&lt;/code&gt; corresponds to &lt;code&gt;'evaluated'&lt;/code&gt; in the specification, but with &lt;code&gt;[[EvaluationError]]&lt;/code&gt; set to a value that is not &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'errored'&lt;/code&gt; 이외 의이 상태 문자열은 사양의 &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;순환 모듈 레코드&lt;/a&gt; 의 &lt;code&gt;[[Status]]&lt;/code&gt; 필드에 해당합니다. &lt;code&gt;'errored'&lt;/code&gt; 에 대응하는 &lt;code&gt;'evaluated'&lt;/code&gt; 명세서에 있지만 함께 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; 없는 값으로 설정 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16bc73dffef4caa71f76fa9eec1d728a29e8862" translate="yes" xml:space="preserve">
          <source>Other than &lt;code&gt;'errored'&lt;/code&gt;, this status string corresponds to the specification's &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;'s &lt;code&gt;[[Status]]&lt;/code&gt; field. &lt;code&gt;'errored'&lt;/code&gt; corresponds to &lt;code&gt;'evaluated'&lt;/code&gt; in the specification, but with &lt;code&gt;[[EvaluationError]]&lt;/code&gt; set to a value that is not &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'errored'&lt;/code&gt; 이외 의이 상태 문자열은 사양의 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;소스 텍스트 모듈 레코드&lt;/a&gt; 의 &lt;code&gt;[[Status]]&lt;/code&gt; 필드에 해당합니다. &lt;code&gt;'errored'&lt;/code&gt; 에 대응하는 &lt;code&gt;'evaluated'&lt;/code&gt; 명세서에 있지만 함께 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; 없는 값으로 설정 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c03d329eb9dfc1e4e5f3f81c39eeba7e7989837f" translate="yes" xml:space="preserve">
          <source>Others may read and execute the file.</source>
          <target state="translated">다른 사람들은 파일을 읽고 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0abd3dc8f76b7c09573e4c76373b00a4045aeb77" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;em&gt;exports&lt;/em&gt; is an Object containing a &lt;em&gt;&quot;.&quot;&lt;/em&gt; property, then</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;exports&lt;/em&gt; 가 &lt;em&gt;&quot;.&quot;를&lt;/em&gt; 포함하는 객체 인 경우 재산, 다음</target>
        </trans-unit>
        <trans-unit id="c02ff0f840a7e18efb9cbc8a237670bf5418237d" translate="yes" xml:space="preserve">
          <source>Otherwise throw an &lt;em&gt;Invalid Package Target&lt;/em&gt; error.</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;잘못된 패키지 대상&lt;/em&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2d9bc18b21194155ea10d0ea79b6439d4c3e5a90" translate="yes" xml:space="preserve">
          <source>Otherwise,</source>
          <target state="translated">Otherwise,</target>
        </trans-unit>
        <trans-unit id="c7913bda121913a068639f18e4186893941adf35" translate="yes" xml:space="preserve">
          <source>Otherwise, behavior generally matches that of &lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 동작은 일반적으로 &lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt; &lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt; 의&lt;/a&gt; 동작과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="c4b82831779189c383dabc4e146234017af09e29" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.hostname&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;urlObject.hostname&lt;/code&gt; 이 &lt;code&gt;undefined&lt;/code&gt; 않았고 문자열이 아닌 경우 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d05789be53a1b6d3a37a3cfa388a27a062e85bcc" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.pathname&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;urlObject.pathname&lt;/code&gt; 이 &lt;code&gt;undefined&lt;/code&gt; 않고 문자열이 아닌 경우 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3028596961bd8400259bc561fca50c1918691c1e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.protocol&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;urlObject.protocol&lt;/code&gt; 이 &lt;code&gt;undefined&lt;/code&gt; 않았고 문자열이 아닌 경우 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="019a7dea222ae0d5248e2924ffd6756a37e26b0e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.search&lt;/code&gt; is a string:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;urlObject.search&lt;/code&gt; 가 문자열 인 경우 :</target>
        </trans-unit>
        <trans-unit id="b57a26c4233692980c3734e6c6632c76d2438b1d" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.search&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;urlObject.search&lt;/code&gt; 가 &lt;code&gt;undefined&lt;/code&gt; 않았고 문자열이 아닌 경우 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f29a7ff99198e35a0bd2c7b3da5f3f7735bd7d9" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;exports&lt;/em&gt; is an Object and all keys of &lt;em&gt;exports&lt;/em&gt; start with &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;exports&lt;/em&gt; 가 Object이고 모든 &lt;em&gt;내보내기&lt;/em&gt; 키 가 &lt;em&gt;&quot;.&quot;로&lt;/em&gt; 시작하는 경우 , 다음</target>
        </trans-unit>
        <trans-unit id="e45fc522c9cb0daaaf495b921b4d37a35277ead2" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;packageSubpath&lt;/em&gt; is equal to &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;packageSubpath&lt;/em&gt; 가 &lt;em&gt;&quot;.&quot;와&lt;/em&gt; 같으면 , 다음</target>
        </trans-unit>
        <trans-unit id="e00ace135f4846630f53756b4ef62f1402b8703b" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;#&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않으면, 경우 &lt;em&gt;지정이&lt;/em&gt; 시작 &lt;em&gt;&quot;#&quot;&lt;/em&gt; 다음</target>
        </trans-unit>
        <trans-unit id="eb5fe908afb5d0cb70939f4f10d7c4d1f21c5481" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;./&quot;&lt;/em&gt; or &lt;em&gt;&quot;../&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않은 경우 &lt;em&gt;지정&lt;/em&gt; 과 함께 시작 &lt;em&gt;&quot;./&quot;&lt;/em&gt; 또는 &lt;em&gt;&quot;../&quot;&lt;/em&gt; 다음</target>
        </trans-unit>
        <trans-unit id="5a46782b0bd0e2ca1e8fb7024065121b8b05b41c" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, &lt;em&gt;&quot;./&quot;&lt;/em&gt; or &lt;em&gt;&quot;../&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않은 경우 &lt;em&gt;지정&lt;/em&gt; 과 함께 시작 &lt;em&gt;&quot;/&quot;&lt;/em&gt; , &lt;em&gt;&quot;./&quot;&lt;/em&gt; 또는 &lt;em&gt;&quot;../&quot;&lt;/em&gt; 다음</target>
        </trans-unit>
        <trans-unit id="26d1d5da0079c52704cb235445b5c20e065cda34" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, then</source>
          <target state="translated">그렇지 않은 경우 &lt;em&gt;지정&lt;/em&gt; 과 함께 시작 &lt;em&gt;&quot;/&quot;&lt;/em&gt; , 다음</target>
        </trans-unit>
        <trans-unit id="4beaee6cc707869036a18773039fe24845a3e2d0" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is &lt;em&gt;null&lt;/em&gt;, return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="translated">그렇지 않은 경우 &lt;em&gt;대상&lt;/em&gt; 이다 &lt;em&gt;널 (null)&lt;/em&gt; , 반환 &lt;strong&gt;null가&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5143ccffae663f5a9995cf027741bf81cb0fd369" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is a non-null Object, then</source>
          <target state="translated">그렇지 않고 &lt;em&gt;대상&lt;/em&gt; 이 널이 아닌 객체이면</target>
        </trans-unit>
        <trans-unit id="85ba9fed38521506b4d5c579c572dad483f0c6b5" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is an Array, then</source>
          <target state="translated">그렇지 않으면, &lt;em&gt;target&lt;/em&gt; 이 Array 인 경우</target>
        </trans-unit>
        <trans-unit id="baff8c909c01e8b443adf4d5d60fa66faff1cb0d" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;urlObject.hash&lt;/code&gt; property is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;urlObject.hash&lt;/code&gt; 속성이 &lt;code&gt;undefined&lt;/code&gt; 되어 있지 않고 문자열이 아닌 경우 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ddbb3f7abfc149ace62e4793649bb29bd4e1b4ac" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;urlObject.host&lt;/code&gt; property value is truthy, the value of &lt;code&gt;urlObject.host&lt;/code&gt; is coerced to a string and appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">경우 생성 그렇지 &lt;code&gt;urlObject.host&lt;/code&gt; 의 속성 값 truthy이다 값 &lt;code&gt;urlObject.host&lt;/code&gt; 은 문자열과 강제로 추가되는 &lt;code&gt;result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b7a1147e9bc6658eed14e938907299c19a2b915" translate="yes" xml:space="preserve">
          <source>Otherwise, return &lt;strong&gt;undefined&lt;/strong&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;strong&gt;undefined를&lt;/strong&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="30114944794d0b3247bc8943e187ffb5318dcd09" translate="yes" xml:space="preserve">
          <source>Otherwise, the value of &lt;code&gt;options.stdio&lt;/code&gt; is an array where each index corresponds to an fd in the child. The fds 0, 1, and 2 correspond to stdin, stdout, and stderr, respectively. Additional fds can be specified to create additional pipes between the parent and child. The value is one of the following:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;options.stdio&lt;/code&gt; 의 값은 각 색인이 하위의 fd에 해당하는 배열입니다. fd 0, 1 및 2는 각각 stdin, stdout 및 stderr에 해당합니다. 부모와 자식 사이에 추가 파이프를 만들기 위해 추가 fd를 지정할 수 있습니다. 값은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="4cc4ada7d607fff2d2fb5b0661fd2dfbc2b8eaaa" translate="yes" xml:space="preserve">
          <source>Otherwise, throw an &lt;em&gt;Invalid Package Target&lt;/em&gt; error.</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;잘못된 패키지 대상&lt;/em&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f44779997c1068f729a825e4cd8329cf3b6df7e" translate="yes" xml:space="preserve">
          <source>Output from only starting the server:</source>
          <target state="translated">서버 시작에서만 출력 :</target>
        </trans-unit>
        <trans-unit id="f29a22741cf8ff14fb33b32cfebfd6e76a83b4e1" translate="yes" xml:space="preserve">
          <source>Output when hitting the server with &lt;code&gt;nc localhost 8080&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;nc localhost 8080&lt;/code&gt; 으로 서버를 칠 때 출력 :</target>
        </trans-unit>
        <trans-unit id="e3e7399cbb487228a7f49b5b23a51e0913aa6ae7" translate="yes" xml:space="preserve">
          <source>Outputs for example:</source>
          <target state="translated">예를 들어 출력 :</target>
        </trans-unit>
        <trans-unit id="994db3e9eea6ba91b51023290a7d28ae4a00a66e" translate="yes" xml:space="preserve">
          <source>Overrides the default value of &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;http2&lt;/code&gt; server socket timeout. Setting the value to 0 disables server socket timeout. Unless provided, http server sockets timeout after 120s (2 minutes). Programmatic setting of the timeout takes precedence over the value set through this flag.</source>
          <target state="translated">기본값 &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;https&lt;/code&gt; 및 &lt;code&gt;http2&lt;/code&gt; 서버 소켓 제한 시간을 대체 합니다. 값을 0으로 설정하면 서버 소켓 시간 초과가 비활성화됩니다. 제공되지 않으면 http 서버 소켓은 120 초 (2 분) 후에 시간 초과됩니다. 시간 초과의 프로그래밍 방식 설정이이 플래그를 통해 설정된 값보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="38030653f1e036c05fa72230b5093ec3b1b98d12" translate="yes" xml:space="preserve">
          <source>PKCS#1, SEC1, and PKCS#8 type keys can be encrypted by using a combination of the &lt;code&gt;cipher&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; options. The PKCS#8 &lt;code&gt;type&lt;/code&gt; can be used with any &lt;code&gt;format&lt;/code&gt; to encrypt any key algorithm (RSA, EC, or DH) by specifying a &lt;code&gt;cipher&lt;/code&gt;. PKCS#1 and SEC1 can only be encrypted by specifying a &lt;code&gt;cipher&lt;/code&gt; when the PEM &lt;code&gt;format&lt;/code&gt; is used. For maximum compatibility, use PKCS#8 for encrypted private keys. Since PKCS#8 defines its own encryption mechanism, PEM-level encryption is not supported when encrypting a PKCS#8 key. See &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5208.txt&quot;&gt;RFC 5208&lt;/a&gt; for PKCS#8 encryption and &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1421.txt&quot;&gt;RFC 1421&lt;/a&gt; for PKCS#1 and SEC1 encryption.</source>
          <target state="translated">&lt;code&gt;cipher&lt;/code&gt; 및 &lt;code&gt;format&lt;/code&gt; 옵션 의 조합을 사용하여 PKCS # 1, SEC1 및 PKCS # 8 유형 키를 암호화 할 수 있습니다. PKCS # 8 &lt;code&gt;type&lt;/code&gt; 은 &lt;code&gt;cipher&lt;/code&gt; 를 지정하여 모든 키 알고리즘 (RSA, EC 또는 DH)을 암호화하기 위해 모든 &lt;code&gt;format&lt;/code&gt; 과 함께 사용할 수 있습니다 . PKCS # 1 및 SEC1은 PEM &lt;code&gt;format&lt;/code&gt; 을 사용할 때 &lt;code&gt;cipher&lt;/code&gt; 를 지정해야만 암호화 할 수 있습니다 . 호환성을 극대화하려면 암호화 된 개인 키에 PKCS # 8을 사용하십시오. PKCS # 8은 자체 암호화 메커니즘을 정의하므로 PKCS # 8 키를 암호화 할 때는 PEM 수준 암호화가 지원되지 않습니다. PKCS # 8 암호화의 경우 &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5208.txt&quot;&gt;RFC 5208&lt;/a&gt; 및 PKCS # 1 및 SEC1 암호화의 경우 &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1421.txt&quot;&gt;RFC 1421&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="630cf368a4fbe56871f6057988d221149a0a6f0b" translate="yes" xml:space="preserve">
          <source>POSIX Error Constants</source>
          <target state="translated">POSIX 오류 상수</target>
        </trans-unit>
        <trans-unit id="813df17f9f8d146acf4bcbfd8da1b8d2c1940798" translate="yes" xml:space="preserve">
          <source>POSIX error constants</source>
          <target state="translated">POSIX 오류 상수</target>
        </trans-unit>
        <trans-unit id="c05711853b0d84b39144b04eb992e7ecf657c71d" translate="yes" xml:space="preserve">
          <source>PSK ciphers are disabled by default, and using TLS-PSK thus requires explicitly specifying a cipher suite with the &lt;code&gt;ciphers&lt;/code&gt; option. The list of available ciphers can be retrieved via &lt;code&gt;openssl ciphers -v 'PSK'&lt;/code&gt;. All TLS 1.3 ciphers are eligible for PSK but currently only those that use SHA256 digest are supported they can be retrieved via &lt;code&gt;openssl ciphers -v -s -tls1_3 -psk&lt;/code&gt;.</source>
          <target state="translated">PSK 암호는 기본적으로 비활성화되어 있으므로 TLS-PSK를 사용하려면 &lt;code&gt;ciphers&lt;/code&gt; 옵션으로 암호 제품군을 명시 적으로 지정해야합니다 . 사용 가능한 암호 목록은 &lt;code&gt;openssl ciphers -v 'PSK'&lt;/code&gt; 를 통해 검색 할 수 있습니다 . 모든 TLS 1.3 암호는 PSK에 적합하지만 현재 SHA256 다이제스트를 사용하는 암호 만 지원되며 &lt;code&gt;openssl ciphers -v -s -tls1_3 -psk&lt;/code&gt; 를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="126b1873e96aa59d61beefbfa96976d9334b8ba6" translate="yes" xml:space="preserve">
          <source>Package Entry Points</source>
          <target state="translated">패키지 진입 점</target>
        </trans-unit>
        <trans-unit id="088555c8e20f88ac5dfd6afbf6e226933408ca9c" translate="yes" xml:space="preserve">
          <source>Package Exports</source>
          <target state="translated">패키지 수출</target>
        </trans-unit>
        <trans-unit id="5298f089fdfda3773971e873567439dc17eb87db" translate="yes" xml:space="preserve">
          <source>Package Scope and File Extensions</source>
          <target state="translated">패키지 범위 및 파일 확장자</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="b105dd67aeea3a80cf91cc4cae23a0830a903533" translate="yes" xml:space="preserve">
          <source>Packages can depend on one another. In order to install package &lt;code&gt;foo&lt;/code&gt;, it may be necessary to install a specific version of package &lt;code&gt;bar&lt;/code&gt;. The &lt;code&gt;bar&lt;/code&gt; package may itself have dependencies, and in some cases, these may even collide or form cyclic dependencies.</source>
          <target state="translated">패키지는 서로 의존 할 수 있습니다. 패키지 &lt;code&gt;foo&lt;/code&gt; 를 설치하기 위해서는 특정 버전의 패키지 &lt;code&gt;bar&lt;/code&gt; 설치해야 할 수도 있습니다 . &lt;code&gt;bar&lt;/code&gt; 패키지 자체가 종속성을 가질 수 있으며, 어떤 경우에는, 이들도에서 충돌 또는 고리 의존성을 형성 할 수있다.</target>
        </trans-unit>
        <trans-unit id="007f92dc52c83abe19f8d3e595f8684aae45891d" translate="yes" xml:space="preserve">
          <source>Parse the &lt;code&gt;string&lt;/code&gt; as a query string, and use it to instantiate a new &lt;code&gt;URLSearchParams&lt;/code&gt; object. A leading &lt;code&gt;'?'&lt;/code&gt;, if present, is ignored.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 을 쿼리 문자열 로 구문 분석하고 이를 사용하여 새 &lt;code&gt;URLSearchParams&lt;/code&gt; 객체 를 인스턴스화 합니다. 최고의 &lt;code&gt;'?'&lt;/code&gt; 있는 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a62f528d752f6902c2c021974e4a3ac9206da888" translate="yes" xml:space="preserve">
          <source>Parsing the URL string using the Legacy API:</source>
          <target state="translated">레거시 API를 사용하여 URL 문자열 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="1ac4bd27fa80c0cddae1cb5d2244972b92d1573d" translate="yes" xml:space="preserve">
          <source>Parsing the URL string using the WHATWG API:</source>
          <target state="translated">WHATWG API를 사용하여 URL 문자열 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="88f6f0a57c529d1f033ace70532d6cfd1696906a" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;v8::External&lt;/code&gt; to all methods exposed to JavaScript by passing it to &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; or &lt;code&gt;v8::Function::New()&lt;/code&gt; which creates the native-backed JavaScript functions. The third parameter of &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; or &lt;code&gt;v8::Function::New()&lt;/code&gt; accepts the &lt;code&gt;v8::External&lt;/code&gt; and makes it available in the native callback using the &lt;code&gt;v8::FunctionCallbackInfo::Data()&lt;/code&gt; method.</source>
          <target state="translated">패스 &lt;code&gt;v8::External&lt;/code&gt; 에 전달하여 자바 스크립트에 노출 된 모든 메소드에 &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; 또는 &lt;code&gt;v8::Function::New()&lt;/code&gt; 네이티브 지원을받는 자바 스크립트 함수를 작성합니다. &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; 또는 &lt;code&gt;v8::Function::New()&lt;/code&gt; 의 세 번째 매개 변수는 v8 :: &lt;code&gt;v8::External&lt;/code&gt; 허용 하고 &lt;code&gt;v8::FunctionCallbackInfo::Data()&lt;/code&gt; 메서드를 사용하여 네이티브 콜백에서 사용할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="c3b9589a76128e7eedf9dcfcc7a38c1a2039e7e5" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;chunk&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt; signals the end of the stream (EOF) and behaves the same as &lt;code&gt;readable.push(null)&lt;/code&gt;, after which no more data can be written. The EOF signal is put at the end of the buffer and any buffered data will still be flushed.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; 를 &lt;code&gt;null&lt;/code&gt; 로 전달 하면 스트림의 끝 (EOF)을 알리고 Readable.push &lt;code&gt;readable.push(null)&lt;/code&gt; 과 동일하게 동작하며 그 후에는 더 이상 데이터를 쓸 수 없습니다. EOF 신호는 버퍼의 끝에 놓이고 버퍼링 된 데이터는 여전히 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="caf337fb7b428ef0cda9bc754bad6681a39c1d8e" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;chunk&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt; signals the end of the stream (EOF), after which no more data can be written.</source>
          <target state="translated">전달 &lt;code&gt;chunk&lt;/code&gt; 로 &lt;code&gt;null&lt;/code&gt; 신호가 더 이상 데이터를 기록 할 수없는 그 후에 흐름 (EOF)의 끝.</target>
        </trans-unit>
        <trans-unit id="e2fb435a7742758b2ed7fd9143c5eb5697582315" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;callback&lt;/code&gt; argument now throws &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 인수 로 &lt;code&gt;null&lt;/code&gt; 을 전달하면 이제 &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="c4cb274ae0fac3ad0cf4488ca57ded2504a2742d" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;chunk&lt;/code&gt; parameter will always be considered invalid now, even in object mode.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; 매개 변수 로 &lt;code&gt;null&lt;/code&gt; 을 전달하면 개체 모드에서도 항상 유효하지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="b363c1f7472c26765d6997faabde2cf251aeb2cb" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;noDelay&lt;/code&gt; or not passing an argument will disable Nagle's algorithm for the socket. Passing &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;noDelay&lt;/code&gt; will enable Nagle's algorithm.</source>
          <target state="translated">전달 &lt;code&gt;true&lt;/code&gt; 에 대한 &lt;code&gt;noDelay&lt;/code&gt; 소켓에 대한 월리의 알고리즘을 사용할 수 없게됩니다 인수를 전달하는 여부. &lt;code&gt;noDelay&lt;/code&gt; 에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하면 Nagle의 알고리즘이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="a630b4518d8c793f8975f346ac5ea16cec9139fc" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;Buffer&lt;/code&gt; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; constructor will copy the &lt;code&gt;Buffer&lt;/code&gt;s contents, interpreted as an array of integers, and not as a byte sequence of the target type.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 생성자에 &lt;code&gt;Buffer&lt;/code&gt; 를 전달 하면 대상 유형의 바이트 시퀀스가 ​​아닌 정수 배열로 해석되는 &lt;code&gt;Buffer&lt;/code&gt; 내용 이 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="c25415d5de99c758ca9f8012c3ca13381d4c98e7" translate="yes" xml:space="preserve">
          <source>Passing a callback to &lt;a href=&quot;worker_threads#worker_threads_worker_terminate&quot;&gt;&lt;code&gt;worker.terminate()&lt;/code&gt;&lt;/a&gt; is deprecated. Use the returned &lt;code&gt;Promise&lt;/code&gt; instead, or a listener to the worker&amp;rsquo;s &lt;code&gt;'exit'&lt;/code&gt; event.</source>
          <target state="translated">&lt;a href=&quot;worker_threads#worker_threads_worker_terminate&quot;&gt; &lt;code&gt;worker.terminate()&lt;/code&gt; &lt;/a&gt; 콜백을 전달하는 것은 더 이상 사용되지 않습니다. 대신 반환 된 &lt;code&gt;Promise&lt;/code&gt; 사용하거나 작업자의 &lt;code&gt;'exit'&lt;/code&gt; 이벤트에 대한 리스너를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8d725c2a889b1d852067945503fc27bf3467751" translate="yes" xml:space="preserve">
          <source>Passing a file descriptor is deprecated and may result in an error being thrown in the future.</source>
          <target state="translated">파일 디스크립터 전달은 더 이상 사용되지 않으며 나중에 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6c58eb24fa5978dcc90c6d0e55212d51047fb5c" translate="yes" xml:space="preserve">
          <source>Passing a negative &lt;code&gt;size&lt;/code&gt; will now throw an error.</source>
          <target state="translated">음수 &lt;code&gt;size&lt;/code&gt; 를 전달 하면 이제 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5cb3de49a792a446a3e5ecf415be046bad29ee5" translate="yes" xml:space="preserve">
          <source>Passing a non-string as the &lt;code&gt;path&lt;/code&gt; argument will throw now.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 인수 로 문자열이 아닌 것을 전달하면 이제 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="82a8c916b00253f3b9c6cb272e3b0055559de061" translate="yes" xml:space="preserve">
          <source>Passing a number as the first argument to &lt;code&gt;Buffer()&lt;/code&gt; (e.g. &lt;code&gt;new Buffer(10)&lt;/code&gt;) allocates a new &lt;code&gt;Buffer&lt;/code&gt; object of the specified size. Prior to Node.js 8.0.0, the memory allocated for such &lt;code&gt;Buffer&lt;/code&gt; instances is &lt;em&gt;not&lt;/em&gt; initialized and &lt;em&gt;can contain sensitive data&lt;/em&gt;. Such &lt;code&gt;Buffer&lt;/code&gt; instances &lt;em&gt;must&lt;/em&gt; be subsequently initialized by using either &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; or by writing to the entire &lt;code&gt;Buffer&lt;/code&gt; before reading data from the &lt;code&gt;Buffer&lt;/code&gt;. While this behavior is &lt;em&gt;intentional&lt;/em&gt; to improve performance, development experience has demonstrated that a more explicit distinction is required between creating a fast-but-uninitialized &lt;code&gt;Buffer&lt;/code&gt; versus creating a slower-but-safer &lt;code&gt;Buffer&lt;/code&gt;. Since Node.js 8.0.0, &lt;code&gt;Buffer(num)&lt;/code&gt; and &lt;code&gt;new Buffer(num)&lt;/code&gt; return a &lt;code&gt;Buffer&lt;/code&gt; with initialized memory.</source>
          <target state="translated">숫자를 &lt;code&gt;Buffer()&lt;/code&gt; 의 첫 번째 인수로 전달하면 (예 : &lt;code&gt;new Buffer(10)&lt;/code&gt; ) 지정된 크기의 새 &lt;code&gt;Buffer&lt;/code&gt; 객체를 할당합니다 . Node.js 8.0.0 이전에는 이러한 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스에 할당 된 메모리 가 초기화 &lt;em&gt;되지 않았&lt;/em&gt; 으며 &lt;em&gt;민감한 데이터를 포함 할 수 있습니다&lt;/em&gt; . 이러한 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스가 &lt;em&gt;있어야합니다&lt;/em&gt; 이후 중 하나를 사용하여 초기화 할 수 &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt; 또는 전체에 작성하여 &lt;code&gt;Buffer&lt;/code&gt; 로부터 데이터를 읽기 전에 &lt;code&gt;Buffer&lt;/code&gt; . 이 동작은 &lt;em&gt;의도적&lt;/em&gt; 이지만&lt;em&gt;&lt;/em&gt;성능을 향상시키기 위해 개발 경험은 빠르지 만 초기화되지 않은 &lt;code&gt;Buffer&lt;/code&gt; 만드는 것과 느리지 만 안전한 &lt;code&gt;Buffer&lt;/code&gt; 만드는 것 사이에 더 명확한 구분이 필요하다는 것을 보여주었습니다 . Node.js 8.0.0부터 &lt;code&gt;Buffer(num)&lt;/code&gt; 및 &lt;code&gt;new Buffer(num)&lt;/code&gt; 는 초기화 된 메모리가 있는 &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="56c07724734004d918ea842ebc675c76944090ba" translate="yes" xml:space="preserve">
          <source>Passing a number as the first argument to &lt;code&gt;Buffer()&lt;/code&gt; (e.g. &lt;code&gt;new Buffer(10)&lt;/code&gt;) allocates a new &lt;code&gt;Buffer&lt;/code&gt; object of the specified size. Prior to Node.js 8.0.0, the memory allocated for such &lt;code&gt;Buffer&lt;/code&gt; instances is &lt;em&gt;not&lt;/em&gt; initialized and &lt;em&gt;can contain sensitive data&lt;/em&gt;. Such &lt;code&gt;Buffer&lt;/code&gt; instances &lt;em&gt;must&lt;/em&gt; be subsequently initialized by using either &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; or by writing to the entire &lt;code&gt;Buffer&lt;/code&gt;. While this behavior is &lt;em&gt;intentional&lt;/em&gt; to improve performance, development experience has demonstrated that a more explicit distinction is required between creating a fast-but-uninitialized &lt;code&gt;Buffer&lt;/code&gt; versus creating a slower-but-safer &lt;code&gt;Buffer&lt;/code&gt;. Since Node.js 8.0.0, &lt;code&gt;Buffer(num)&lt;/code&gt; and &lt;code&gt;new Buffer(num)&lt;/code&gt; return a &lt;code&gt;Buffer&lt;/code&gt; with initialized memory.</source>
          <target state="translated">첫 번째 인수로 숫자를 &lt;code&gt;Buffer()&lt;/code&gt; 전달하면 (예 : &lt;code&gt;new Buffer(10)&lt;/code&gt; ) 지정된 크기의 새 &lt;code&gt;Buffer&lt;/code&gt; 객체를 할당합니다 . Node.js 8.0.0 이전에는 이러한 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스에 할당 된 메모리 가 초기화 &lt;em&gt;되지 않았&lt;/em&gt; 으며 &lt;em&gt;민감한 데이터를 포함 할 수 있습니다&lt;/em&gt; . 이러한 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 &lt;em&gt;는 &lt;/em&gt;&lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt; 을 사용하거나 전체 &lt;code&gt;Buffer&lt;/code&gt; 에 쓰면 초기화됩니다 . 이 동작은 성능 향상을 위해 &lt;em&gt;의도적 인&lt;/em&gt; 것이지만 , 개발 경험에 따르면 초기화는 빠르지 만 초기화되지 않은 것 사이에보다 명확한 구분이 필요하다는 것이 입증되었습니다 &lt;code&gt;Buffer&lt;/code&gt; 느린 -하지만 - 안전하게 만드는 대 &lt;code&gt;Buffer&lt;/code&gt; . Node.js 8.0.0부터 &lt;code&gt;Buffer(num)&lt;/code&gt; 및 &lt;code&gt;new Buffer(num)&lt;/code&gt; 은 초기화 된 메모리가 있는 &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f6181cdf0236416728df3c07a913246b4849876f" translate="yes" xml:space="preserve">
          <source>Passing a string, array, or &lt;code&gt;Buffer&lt;/code&gt; as the first argument copies the passed object's data into the &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">첫 번째 인수로 문자열, 배열 또는 &lt;code&gt;Buffer&lt;/code&gt; 를 전달하면 전달 된 객체의 데이터가 &lt;code&gt;Buffer&lt;/code&gt; 에 복사 됩니다.</target>
        </trans-unit>
        <trans-unit id="02b139d88df2e11354692bd57710d65347c4c6ad" translate="yes" xml:space="preserve">
          <source>Passing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; returns a &lt;code&gt;Buffer&lt;/code&gt; that shares allocated memory with the given array buffer.</source>
          <target state="translated">전달 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 하면&lt;/a&gt; 리턴 &lt;code&gt;Buffer&lt;/code&gt; 주 주어진 배열 버퍼 메모리를 할당 할 것이다.</target>
        </trans-unit>
        <trans-unit id="ac27f690f37bb6425acccbd82efa0bfcecd2a071" translate="yes" xml:space="preserve">
          <source>Passing arguments and &lt;code&gt;this&lt;/code&gt; to listeners</source>
          <target state="translated">인수 및 전달 &lt;code&gt;this&lt;/code&gt; 청취자에게</target>
        </trans-unit>
        <trans-unit id="3f2013cf5caf58ccd8ea896c7e451fa5ea7133a2" translate="yes" xml:space="preserve">
          <source>Passing illegal value as &lt;code&gt;name&lt;/code&gt; will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown, identified by &lt;code&gt;code: 'ERR_INVALID_HTTP_TOKEN'&lt;/code&gt;.</source>
          <target state="translated">로 전달 불법 값 &lt;code&gt;name&lt;/code&gt; A의 발생합니다 &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 에 의해 식별 슬로우 &lt;code&gt;code: 'ERR_INVALID_HTTP_TOKEN'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c96f98ccecfa5d1264f99c282816890ef707c29c" translate="yes" xml:space="preserve">
          <source>Passing illegal value as &lt;code&gt;value&lt;/code&gt; will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">불법 값을 전달 &lt;code&gt;value&lt;/code&gt; A의 발생합니다 &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 발생된다.</target>
        </trans-unit>
        <trans-unit id="4a04c754fe59165f84f9165d79143c01514bf798" translate="yes" xml:space="preserve">
          <source>Passing in a user-defined object instead of the result of a previous call to &lt;code&gt;eventLoopUtilization()&lt;/code&gt; will lead to undefined behavior. The return values are not guaranteed to reflect any correct state of the event loop.</source>
          <target state="translated">&lt;code&gt;eventLoopUtilization()&lt;/code&gt; 에 대한 이전 호출의 결과 대신 사용자 정의 객체를 전달하면 정의 되지 않은 동작이 발생합니다. 반환 값은 이벤트 루프의 올바른 상태를 반영한다고 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b3fce4364194feea5e19b8ac1bd58c0cb3ea3f4" translate="yes" xml:space="preserve">
          <source>Passing invalid input will now throw an error.</source>
          <target state="translated">유효하지 않은 입력을 전달하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="24fd77023a20e9be68e40f7a10ecc8a4e03e9dd5" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;Buffer&lt;/code&gt;s underlying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; will create a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; that shares its memory with the &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">통과 &lt;code&gt;Buffer&lt;/code&gt; 의 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 하는&lt;/a&gt; 만듭니다 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 와 주 메모리가 &lt;code&gt;Buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f935efae738e01c6da3152f05be162e9c183db3b" translate="yes" xml:space="preserve">
          <source>Passing wrapped objects around</source>
          <target state="translated">래핑 된 객체 전달</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="68e11182f7131f98561de12e8e704f9073eee3c9" translate="yes" xml:space="preserve">
          <source>Path is a directory.</source>
          <target state="translated">경로는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="769b2fcf925c4d9bf45f8994209d63164e272a36" translate="yes" xml:space="preserve">
          <source>Path to a Node.js module which will be loaded in place of the built-in REPL. Overriding this value to an empty string (&lt;code&gt;''&lt;/code&gt;) will use the built-in REPL.</source>
          <target state="translated">내장 REPL 대신로드 될 Node.js 모듈의 경로입니다. 이 값을 빈 문자열 ( &lt;code&gt;''&lt;/code&gt; )로 대체 하면 내장 REPL이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c51348745e7a987c01dc3a1051365e48a45e57cc" translate="yes" xml:space="preserve">
          <source>Path to the file used to store the persistent REPL history. The default path is &lt;code&gt;~/.node_repl_history&lt;/code&gt;, which is overridden by this variable. Setting the value to an empty string (&lt;code&gt;''&lt;/code&gt; or &lt;code&gt;' '&lt;/code&gt;) disables persistent REPL history.</source>
          <target state="translated">지속적 REPL 히스토리를 저장하는 데 사용되는 파일의 경로입니다. 기본 경로는 &lt;code&gt;~/.node_repl_history&lt;/code&gt; 이며이 변수로 대체됩니다. 값을 빈 문자열 ( &lt;code&gt;''&lt;/code&gt; 또는 &lt;code&gt;' '&lt;/code&gt; )로 설정하면 영구 REPL 기록이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="18f9c06d8825e9bbfb7842b887595cd1c430cc12" translate="yes" xml:space="preserve">
          <source>Paths specified using a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; are useful primarily on certain POSIX operating systems that treat file paths as opaque byte sequences. On such systems, it is possible for a single file path to contain sub-sequences that use multiple character encodings. As with string paths, &lt;code&gt;Buffer&lt;/code&gt; paths may be relative or absolute:</source>
          <target state="translated">&lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 사용하여 지정된 경로는 파일 경로를 불투명 바이트 시퀀스로 취급하는 특정 POSIX 운영 체제에서 주로 유용합니다. 이러한 시스템에서 단일 파일 경로에 여러 문자 인코딩을 사용하는 서브 시퀀스가 ​​포함될 수 있습니다. 문자열 경로와 마찬가지로 &lt;code&gt;Buffer&lt;/code&gt; 경로는 상대적이거나 절대적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6b2be1832ec5d79b7b64f00a6a934a1f60f17b2" translate="yes" xml:space="preserve">
          <source>Pauses the reading of data. That is, &lt;a href=&quot;#net_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; events will not be emitted. Useful to throttle back an upload.</source>
          <target state="translated">데이터 읽기를 일시 중지합니다. 즉, &lt;a href=&quot;#net_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트가 생성되지 않습니다. 업로드를 다시 조절하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="391fd89d6a4a2539603b28a2931a82b778e0b197" translate="yes" xml:space="preserve">
          <source>Pending deprecations are generally identical to a runtime deprecation with the notable exception that they are turned &lt;em&gt;off&lt;/em&gt; by default and will not be emitted unless either the &lt;code&gt;--pending-deprecation&lt;/code&gt; command line flag, or the &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; environment variable, is set. Pending deprecations are used to provide a kind of selective &quot;early warning&quot; mechanism that developers may leverage to detect deprecated API usage.</source>
          <target state="translated">보류중인 지원 중단은 일반적으로 런타임 지원 중단과 동일하지만 기본적 으로 &lt;em&gt;해제&lt;/em&gt; 되어 있으며 &lt;code&gt;--pending-deprecation&lt;/code&gt; 명령 줄 플래그 또는 &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; 환경 변수가 설정되어 있지 않으면 생성 되지 않습니다 . 보류중인 지원 중단은 개발자가 사용되지 않는 API 사용을 감지하기 위해 활용할 수있는 일종의 선택적 &quot;조기 경고&quot;메커니즘을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b9b5a76911a5490a5ecda0473c87ff18259f952" translate="yes" xml:space="preserve">
          <source>Pending deprecations are generally identical to a runtime deprecation with the notable exception that they are turned &lt;em&gt;off&lt;/em&gt; by default and will not be emitted unless either the &lt;code&gt;--pending-deprecation&lt;/code&gt; command-line flag, or the &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; environment variable, is set. Pending deprecations are used to provide a kind of selective &quot;early warning&quot; mechanism that developers may leverage to detect deprecated API usage.</source>
          <target state="translated">보류중인 지원 중단은 일반적으로 런타임 지원 중단과 동일하지만 기본적 으로 &lt;em&gt;해제&lt;/em&gt; 되어 있으며 &lt;code&gt;--pending-deprecation&lt;/code&gt; 명령 줄 플래그 또는 &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; 환경 변수가 설정 되지 않는 한 내 보내지 않는다는 주목할만한 예외가 있습니다 . 보류중인 지원 중단은 개발자가 지원 중단 된 API 사용을 감지하는 데 활용할 수있는 일종의 선택적 &quot;조기 경고&quot;메커니즘을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e286971f20d3f6d6631e7f551a4ebba6c1d9dd5e" translate="yes" xml:space="preserve">
          <source>Per the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;, the encodings supported by the &lt;code&gt;TextDecoder&lt;/code&gt; API are outlined in the tables below. For each encoding, one or more aliases may be used.</source>
          <target state="translated">당 &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG 인코딩 표준&lt;/a&gt; 의 지원하는 인코딩 &lt;code&gt;TextDecoder&lt;/code&gt; 의 API는 아래 표에 설명되어 있습니다. 각각의 인코딩에 대해, 하나 이상의 별명이 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="983967999b0a46bbbedf3bf77fc614b234c702b4" translate="yes" xml:space="preserve">
          <source>Percent-Encoding in URLs</source>
          <target state="translated">URL의 퍼센트 인코딩</target>
        </trans-unit>
        <trans-unit id="bda26a3277c8996d6a97793ca2091756862217fc" translate="yes" xml:space="preserve">
          <source>Percent-encoding in URLs</source>
          <target state="translated">URL의 백분율 인코딩</target>
        </trans-unit>
        <trans-unit id="7c0e3bdd317f52eeae3cbea40f6b4d310b3a555a" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy</source>
          <target state="translated">완벽한 앞으로 비밀</target>
        </trans-unit>
        <trans-unit id="c4c03ce41c086567b1e274bf9831ee2f88f1a10b" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy is achieved by randomly generating a key pair for key-agreement on every TLS/SSL handshake (in contrast to using the same key for all sessions). Methods implementing this technique are called &quot;ephemeral&quot;.</source>
          <target state="translated">Perfect Forward Secrecy는 모든 세션에 동일한 키를 사용하는 것과 대조적으로 모든 TLS / SSL 핸드 셰이크에서 키 동의를위한 키 페어를 무작위로 생성함으로써 달성됩니다. 이 기술을 구현하는 방법을 &quot;일시적&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="dc8925b8985c4be414476f58d8e2ed75edcb366a" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy was optional up to TLSv1.2, but it is not optional for TLSv1.3, because all TLSv1.3 cipher suites use ECDHE.</source>
          <target state="translated">Perfect Forward Secrecy는 최대 TLSv1.2까지 선택 사항 이었지만 모든 TLSv1.3 암호화 제품군은 ECDHE를 사용하므로 TLSv1.3에서는 선택 사항이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="98bd6f54236b9e445516217510a0d96383d0a74d" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy</source>
          <target state="translated">완벽한 순방향 비밀</target>
        </trans-unit>
        <trans-unit id="1d72c26cc10bc971bf6b41a4004df8ec3a9bcb1f" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy is achieved by randomly generating a key pair for key-agreement on every TLS/SSL handshake (in contrast to using the same key for all sessions). Methods implementing this technique are called &quot;ephemeral&quot;.</source>
          <target state="translated">완벽한 순방향 비밀 성은 모든 TLS / SSL 핸드 셰이크에서 키 동의를위한 키 쌍을 무작위로 생성함으로써 달성됩니다 (모든 세션에 동일한 키를 사용하는 것과는 대조적으로). 이 기술을 구현하는 방법을 &quot;임시&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="46746bd69248004568f369281501f5aafcd17d6d" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy was optional up to TLSv1.2, but it is not optional for TLSv1.3, because all TLSv1.3 cipher suites use ECDHE.</source>
          <target state="translated">Perfect forward secrecy는 TLSv1.2까지 선택 사항 이었지만 모든 TLSv1.3 암호화 제품군이 ECDHE를 사용하기 때문에 TLSv1.3에서는 선택 사항이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="30c6e87bfcef8363e703089b902f74c17f331f5b" translate="yes" xml:space="preserve">
          <source>Perform lazy binding. Node.js sets this flag by default.</source>
          <target state="translated">게으른 바인딩을 수행하십시오. Node.js는 기본적으로이 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="8c7f0532aad540af3ea1be9fd65ad0c0e7a4168b" translate="yes" xml:space="preserve">
          <source>Performance Hooks</source>
          <target state="translated">성능 후크</target>
        </trans-unit>
        <trans-unit id="71f8e1a76f69e5be47518162c01fa085769c50dc" translate="yes" xml:space="preserve">
          <source>Performance Timeline</source>
          <target state="translated">공연 일정</target>
        </trans-unit>
        <trans-unit id="7b2b65806f423fdfaa0433da4c57d56a22fd3d5d" translate="yes" xml:space="preserve">
          <source>Performance Timing API</source>
          <target state="translated">성능 타이밍 API</target>
        </trans-unit>
        <trans-unit id="ee0d0feded5c3dee3d64c389ffd8def9d3e99835" translate="yes" xml:space="preserve">
          <source>Performance hooks</source>
          <target state="translated">Performance hooks</target>
        </trans-unit>
        <trans-unit id="9a2b9715e7c5806b26a62903c575c9fdd677bb37" translate="yes" xml:space="preserve">
          <source>Performance is not on par with the traditional &lt;code&gt;'line'&lt;/code&gt; event API. Use &lt;code&gt;'line'&lt;/code&gt; instead for performance-sensitive applications.</source>
          <target state="translated">성능은 기존의 &lt;code&gt;'line'&lt;/code&gt; 이벤트 API 와 동등하지 않습니다 . 성능에 민감한 응용 프로그램에는 대신 &lt;code&gt;'line'&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="196d57ae39f219d59334df34f5845369f97d8486" translate="yes" xml:space="preserve">
          <source>Performance measurement APIs</source>
          <target state="translated">Performance measurement APIs</target>
        </trans-unit>
        <trans-unit id="6d92e540da2b876784399520d9f3c31bd060c5de" translate="yes" xml:space="preserve">
          <source>PerformanceEntry</source>
          <target state="translated">PerformanceEntry</target>
        </trans-unit>
        <trans-unit id="b11b70f57c8786ec716704340ecdfd0ed58df97b" translate="yes" xml:space="preserve">
          <source>PerformanceNodeTiming extends PerformanceEntry</source>
          <target state="translated">PerformanceNodeTiming은 PerformanceEntry를 확장합니다</target>
        </trans-unit>
        <trans-unit id="84623955bed39288b6dfcfbdd63a0f3ebc13b288" translate="yes" xml:space="preserve">
          <source>PerformanceObserver</source>
          <target state="translated">PerformanceObserver</target>
        </trans-unit>
        <trans-unit id="91504c202101df50dca0d9c6a08aae2c1349b0c3" translate="yes" xml:space="preserve">
          <source>PerformanceObserverEntryList</source>
          <target state="translated">PerformanceObserverEntryList</target>
        </trans-unit>
        <trans-unit id="906c835d85be1a56dd6f4f27178b471ab1bc9042" translate="yes" xml:space="preserve">
          <source>Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an array of host names.</source>
          <target state="translated">Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an array of host names.</target>
        </trans-unit>
        <trans-unit id="be3c1281f680f0086fce68a8aa9223c80c969311" translate="yes" xml:space="preserve">
          <source>Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an array of hostnames.</source>
          <target state="translated">IPv4 또는 IPv6 주소를 호스트 이름 배열로 확인하는 역방향 DNS 쿼리를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e1a9643e280ac3eeefd6ce9c44aafb4fbf7197d6" translate="yes" xml:space="preserve">
          <source>Performs the low-level validations on the provided &lt;code&gt;name&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</source>
          <target state="translated">Performs the low-level validations on the provided &lt;code&gt;name&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="b6eff22a9d9b4fc2367378a3f7dce9cc45b172c2" translate="yes" xml:space="preserve">
          <source>Performs the low-level validations on the provided &lt;code&gt;value&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</source>
          <target state="translated">Performs the low-level validations on the provided &lt;code&gt;value&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="767ed4488c7a675e6204c746715c42eb6d1fd836" translate="yes" xml:space="preserve">
          <source>Performs transparent encryption of written data and all required TLS negotiation.</source>
          <target state="translated">Performs transparent encryption of written data and all required TLS negotiation.</target>
        </trans-unit>
        <trans-unit id="caa7a25e9c9ed1d27cf744a7151f04025e33bef4" translate="yes" xml:space="preserve">
          <source>Persistent History</source>
          <target state="translated">지속적인 역사</target>
        </trans-unit>
        <trans-unit id="25e4e146fd006f4c32f3afe432525e35d7c4cdda" translate="yes" xml:space="preserve">
          <source>Persistent history</source>
          <target state="translated">Persistent history</target>
        </trans-unit>
        <trans-unit id="6433f7fa56804ab6a9ea067199187f9cdd551682" translate="yes" xml:space="preserve">
          <source>Pipe/Socket resolve support was added.</source>
          <target state="translated">파이프 / 소켓 해결 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0bd8c3429e270b8141550502e8df9455b3b61ca" translate="yes" xml:space="preserve">
          <source>Pipes (and sockets): &lt;em&gt;synchronous&lt;/em&gt; on Windows, &lt;em&gt;asynchronous&lt;/em&gt; on POSIX</source>
          <target state="translated">파이프 (소켓) : &lt;em&gt;동기&lt;/em&gt; Windows에서, &lt;em&gt;비동기&lt;/em&gt; POSIX에</target>
        </trans-unit>
        <trans-unit id="f984ce47265d260ed6684e7e3805d910579031ec" translate="yes" xml:space="preserve">
          <source>Piping to Writable Streams from Async Iterators</source>
          <target state="translated">비동기 반복기에서 쓰기 가능한 스트림으로 파이핑</target>
        </trans-unit>
        <trans-unit id="6c4fb6383b90d7227a1296fef6a824092d00fdd3" translate="yes" xml:space="preserve">
          <source>Piping to writable streams from async iterators</source>
          <target state="translated">Piping to writable streams from async iterators</target>
        </trans-unit>
        <trans-unit id="1ffc74ea4ef76aac30439ada668a6baaefe7b280" translate="yes" xml:space="preserve">
          <source>Please ensure that all &lt;code&gt;fs.FileHandle&lt;/code&gt; objects are explicitly closed using &lt;code&gt;FileHandle.prototype.close()&lt;/code&gt; when the &lt;code&gt;fs.FileHandle&lt;/code&gt; is no longer needed:</source>
          <target state="translated">Please ensure that all &lt;code&gt;fs.FileHandle&lt;/code&gt; objects are explicitly closed using &lt;code&gt;FileHandle.prototype.close()&lt;/code&gt; when the &lt;code&gt;fs.FileHandle&lt;/code&gt; is no longer needed:</target>
        </trans-unit>
        <trans-unit id="c5b60c1d044f889af9114b00cef97543049fd5ae" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;customizing esm specifier resolution&lt;/a&gt; for example usage.</source>
          <target state="translated">사용법 예는 &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;esm 지정자 해상도 사용자 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="134d2aea7415f33ad7a7ba8a89d2b36d4b6701d5" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; for additional information about the output of running &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt; on various operating systems.</source>
          <target state="translated">다양한 운영 체제에서 &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; &lt;/a&gt; 을 실행 한 결과에 대한 자세한 내용은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9d106f268a8a569059b32ec890993436f9e7b98" translate="yes" xml:space="preserve">
          <source>Please use &lt;code&gt;Server.prototype.setSecureContext()&lt;/code&gt; instead.</source>
          <target state="translated">대신 &lt;code&gt;Server.prototype.setSecureContext()&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="a5fc37ddc4309cc138777b270c1e10e6b9c94bd1" translate="yes" xml:space="preserve">
          <source>Policies are a security feature intended to allow guarantees about what code Node.js is able to load. The use of policies assumes safe practices for the policy files such as ensuring that policy files cannot be overwritten by the Node.js application by using file permissions.</source>
          <target state="translated">정책은 Node.js가로드 할 수있는 코드를 보장하기위한 보안 기능입니다. 정책 사용은 파일 권한을 사용하여 Node.js 애플리케이션이 정책 파일을 겹쳐 쓸 수 없도록하는 등 정책 파일에 대한 안전한 방법을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="bfe3b858c8b1d161b2a5e17f0f202df7a3fc9efb" translate="yes" xml:space="preserve">
          <source>Policy files must use integrity checks with Subresource Integrity strings compatible with the browser &lt;a href=&quot;https://www.w3.org/TR/SRI/#the-integrity-attribute&quot;&gt;integrity attribute&lt;/a&gt; associated with absolute URLs.</source>
          <target state="translated">정책 파일은 절대 URL과 관련된 브라우저 &lt;a href=&quot;https://www.w3.org/TR/SRI/#the-integrity-attribute&quot;&gt;무결성 속성&lt;/a&gt; 과 호환되는 Subresource Integrity 문자열과 무결성 검사를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8716030375185a002eae425045da203011f9374c" translate="yes" xml:space="preserve">
          <source>Pooled connections have TCP Keep-Alive enabled for them, but servers may still close idle connections, in which case they will be removed from the pool and a new connection will be made when a new HTTP request is made for that host and port. Servers may also refuse to allow multiple requests over the same connection, in which case the connection will have to be remade for every request and cannot be pooled. The &lt;code&gt;Agent&lt;/code&gt; will still make the requests to that server, but each one will occur over a new connection.</source>
          <target state="translated">풀링 된 연결에는 TCP Keep-Alive가 활성화되어 있지만 서버는 여전히 유휴 연결을 닫을 수 있습니다.이 경우 풀에서 제거되고 해당 호스트 및 포트에 대해 새로운 HTTP 요청이 이루어질 때 새 연결이 이루어집니다. 서버는 동일한 연결을 통해 여러 요청을 허용하지 않을 수도 있습니다.이 경우 모든 요청에 ​​대해 연결을 다시 작성해야하며 풀링 할 수 없습니다. &lt;code&gt;Agent&lt;/code&gt; 여전히 서버에 요청을하지만, 각각의 새로운 연결을 통해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78191a9d7360efa4dfcf69d5c322fd4d102df56a" translate="yes" xml:space="preserve">
          <source>Positive integer - The integer value is interpreted as a file descriptor that is currently open in the parent process. It is shared with the child process, similar to how &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; objects can be shared. Passing sockets is not supported on Windows.</source>
          <target state="translated">양의 정수-정수 값은 현재 상위 프로세스에서 열린 파일 디스크립터로 해석됩니다. &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; 객체를 공유 하는 방법과 유사하게 자식 프로세스와 공유됩니다. 패스 소켓은 Windows에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e263c539e76def3656d89fd2bef007bd19081221" translate="yes" xml:space="preserve">
          <source>Positive integer: The integer value is interpreted as a file descriptor that is currently open in the parent process. It is shared with the child process, similar to how &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; objects can be shared. Passing sockets is not supported on Windows.</source>
          <target state="translated">Positive integer: The integer value is interpreted as a file descriptor that is currently open in the parent process. It is shared with the child process, similar to how &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; objects can be shared. Passing sockets is not supported on Windows.</target>
        </trans-unit>
        <trans-unit id="73aaa69917a12de1c79105c772ef07cffb56a08c" translate="yes" xml:space="preserve">
          <source>Possible signatures:</source>
          <target state="translated">가능한 서명 :</target>
        </trans-unit>
        <trans-unit id="2696b6320f592d396097e7a9ab905634e2ee2ebd" translate="yes" xml:space="preserve">
          <source>Possible values are &lt;code&gt;'BE'&lt;/code&gt; for big endian and &lt;code&gt;'LE'&lt;/code&gt; for little endian.</source>
          <target state="translated">Possible values are &lt;code&gt;'BE'&lt;/code&gt; for big endian and &lt;code&gt;'LE'&lt;/code&gt; for little endian.</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="059ac471ac776a59e791dd1377b2188fae2648f9" translate="yes" xml:space="preserve">
          <source>Posts a message to the inspector back-end. &lt;code&gt;callback&lt;/code&gt; will be notified when a response is received. &lt;code&gt;callback&lt;/code&gt; is a function that accepts two optional arguments - error and message-specific result.</source>
          <target state="translated">인스펙터 백엔드에 메시지를 게시합니다. 응답이 수신되면 &lt;code&gt;callback&lt;/code&gt; 알립니다. &lt;code&gt;callback&lt;/code&gt; 은 오류 및 메시지 별 결과라는 두 가지 선택적 인수를 허용하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="07ca36b59c468549fd1512ac399a808933377630" translate="yes" xml:space="preserve">
          <source>Posts a message to the inspector back-end. &lt;code&gt;callback&lt;/code&gt; will be notified when a response is received. &lt;code&gt;callback&lt;/code&gt; is a function that accepts two optional arguments: error and message-specific result.</source>
          <target state="translated">Posts a message to the inspector back-end. &lt;code&gt;callback&lt;/code&gt; will be notified when a response is received. &lt;code&gt;callback&lt;/code&gt; is a function that accepts two optional arguments: error and message-specific result.</target>
        </trans-unit>
        <trans-unit id="d27ffc769e1d965733d4bb252ab3a66f898fff36" translate="yes" xml:space="preserve">
          <source>Pre-shared keys</source>
          <target state="translated">Pre-shared keys</target>
        </trans-unit>
        <trans-unit id="17f11f9801c4cdeb573eb15fcd0b1f87f55831a6" translate="yes" xml:space="preserve">
          <source>Predefined control codes are listed below (grouped as &quot;Modifiers&quot;, &quot;Foreground colors&quot;, and &quot;Background colors&quot;).</source>
          <target state="translated">Predefined control codes are listed below (grouped as &quot;Modifiers&quot;, &quot;Foreground colors&quot;, and &quot;Background colors&quot;).</target>
        </trans-unit>
        <trans-unit id="992e8b087ac31d52c7cb6b7ed0dfa34588b59cab" translate="yes" xml:space="preserve">
          <source>Prefer &lt;a href=&quot;http#http_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;http#http_response_connection&quot;&gt;&lt;code&gt;response.connection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http#http_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;http#http_request_connection&quot;&gt;&lt;code&gt;request.connection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Prefer &lt;a href=&quot;http#http_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; &lt;/a&gt; over &lt;a href=&quot;http#http_response_connection&quot;&gt; &lt;code&gt;response.connection&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;http#http_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; &lt;/a&gt; over &lt;a href=&quot;http#http_request_connection&quot;&gt; &lt;code&gt;request.connection&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0e8b41dbc1ba5a4df63f44e9b7cc953ecbd6b962" translate="yes" xml:space="preserve">
          <source>Preload the specified module at startup.</source>
          <target state="translated">시작할 때 지정된 모듈을 미리로드하십시오.</target>
        </trans-unit>
        <trans-unit id="48d834aff5d03ca7046c2cc28e8b92759ab0a2f0" translate="yes" xml:space="preserve">
          <source>Pressing &lt;code&gt;enter&lt;/code&gt; without typing a command will repeat the previous debugger command.</source>
          <target state="translated">명령을 &lt;code&gt;enter&lt;/code&gt; 하지 않고 enter 를 누르면 이전 디버거 명령이 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="1742b6b7afd792924e3dc141792dd499dcda806e" translate="yes" xml:space="preserve">
          <source>Prevents an abort if a string decoder was set on the Socket or if the decoder is in &lt;code&gt;objectMode&lt;/code&gt;.</source>
          <target state="translated">문자열 디코더가 소켓에 설정되었거나 디코더가 &lt;code&gt;objectMode&lt;/code&gt; 에있는 경우 중단을 방지합니다 .</target>
        </trans-unit>
        <trans-unit id="11ced36a0c5dda489ffa3aa3624a71d155efc788" translate="yes" xml:space="preserve">
          <source>Previous history item</source>
          <target state="translated">Previous history item</target>
        </trans-unit>
        <trans-unit id="74c97dcc9c4c30282873d6e9de5cb76ffa0aa054" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js exposed handles to internal native objects through the &lt;code&gt;_handle&lt;/code&gt; property of the &lt;code&gt;Cipher&lt;/code&gt;, &lt;code&gt;Decipher&lt;/code&gt;, &lt;code&gt;DiffieHellman&lt;/code&gt;, &lt;code&gt;DiffieHellmanGroup&lt;/code&gt;, &lt;code&gt;ECDH&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Hmac&lt;/code&gt;, &lt;code&gt;Sign&lt;/code&gt;, and &lt;code&gt;Verify&lt;/code&gt; classes. The &lt;code&gt;_handle&lt;/code&gt; property has been removed because improper use of the native object can lead to crashing the application.</source>
          <target state="translated">Node.js의 이전 버전은 &lt;code&gt;Cipher&lt;/code&gt; , &lt;code&gt;Decipher&lt;/code&gt; , &lt;code&gt;DiffieHellman&lt;/code&gt; , &lt;code&gt;DiffieHellmanGroup&lt;/code&gt; , &lt;code&gt;ECDH&lt;/code&gt; , &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Hmac&lt;/code&gt; , &lt;code&gt;Sign&lt;/code&gt; 및 &lt;code&gt;Verify&lt;/code&gt; 클래스 의 &lt;code&gt;_handle&lt;/code&gt; 속성을 통해 내부 네이티브 객체에 대한 핸들을 노출했습니다 . 기본 객체를 잘못 사용하면 응용 프로그램 이 &lt;code&gt;_handle&lt;/code&gt; 될 수 있으므로 _handle 속성이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="2548341fd27d2709b74854b61fd8f1c81e11a405" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js supported &lt;code&gt;dns.lookup()&lt;/code&gt; with a falsy host name like &lt;code&gt;dns.lookup(false)&lt;/code&gt; due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</source>
          <target state="translated">Previous versions of Node.js supported &lt;code&gt;dns.lookup()&lt;/code&gt; with a falsy host name like &lt;code&gt;dns.lookup(false)&lt;/code&gt; due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</target>
        </trans-unit>
        <trans-unit id="0a9ec572cae8ecef23f586a6cd6918eec49e9789" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js supported &lt;code&gt;dns.lookup()&lt;/code&gt; with a falsy hostname like &lt;code&gt;dns.lookup(false)&lt;/code&gt; due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</source>
          <target state="translated">이전 버전의 Node.js는 이전 버전 과의 호환성으로 인해 &lt;code&gt;dns.lookup(false)&lt;/code&gt; 와 같은 잘못된 호스트 이름으로 &lt;code&gt;dns.lookup()&lt;/code&gt; 을 지원 했습니다 . 이 동작은 문서화되어 있지 않으며 실제 앱에서는 사용되지 않는 것으로 생각됩니다. 이후 버전의 Node.js에서는 오류가됩니다.</target>
        </trans-unit>
        <trans-unit id="a555e43820fa40adc814153e381baa06410e9d93" translate="yes" xml:space="preserve">
          <source>Previously, the constants were available directly from &lt;code&gt;require('zlib')&lt;/code&gt;, for instance &lt;code&gt;zlib.Z_NO_FLUSH&lt;/code&gt;. Accessing the constants directly from the module is currently still possible but is deprecated.</source>
          <target state="translated">이전에는 상수가 &lt;code&gt;require('zlib')&lt;/code&gt; 에서 직접 사용할 수있었습니다 ( 예 : &lt;code&gt;zlib.Z_NO_FLUSH&lt;/code&gt; ) . 모듈에서 직접 상수에 액세스하는 것은 현재 가능하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4eebbdec037d97714daaf46088074f8f095416a2" translate="yes" xml:space="preserve">
          <source>Primitive values are compared using the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-samevalue&quot;&gt;SameValue Comparison&lt;/a&gt;, used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt;&lt;code&gt;Object.is()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 값은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt; &lt;code&gt;Object.is()&lt;/code&gt; &lt;/a&gt; 사용하는 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-samevalue&quot;&gt;SameValue 비교&lt;/a&gt; 를 사용하여 비교 됩니다 .</target>
        </trans-unit>
        <trans-unit id="3aa13805a48149c8d001d8db1731cc6054a3a97b" translate="yes" xml:space="preserve">
          <source>Primitive values are compared with the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ) with the exception of &lt;code&gt;NaN&lt;/code&gt;. It is treated as being identical in case both sides are &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Primitive values are compared with the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ) with the exception of &lt;code&gt;NaN&lt;/code&gt; . It is treated as being identical in case both sides are &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ced42f45036cc483c9d374d870dad4ed474bdc21" translate="yes" xml:space="preserve">
          <source>Primitive values are compared with the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ).</source>
          <target state="translated">기본 값은 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;추상 평등 비교&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ) 와 비교 됩니다.</target>
        </trans-unit>
        <trans-unit id="70bf0d81505af6384899a96c96fb75a7c80d1d78" translate="yes" xml:space="preserve">
          <source>Print V8 command line options.</source>
          <target state="translated">V8 명령 행 옵션을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="f2f38862321cc2871d8e2df5dc1d9730bd82d2f1" translate="yes" xml:space="preserve">
          <source>Print V8 command-line options.</source>
          <target state="translated">Print V8 command-line options.</target>
        </trans-unit>
        <trans-unit id="095eafa1ee05b0e4cfb091f53ba3406eab5be3dc" translate="yes" xml:space="preserve">
          <source>Print node command line options. The output of this option is less detailed than this document.</source>
          <target state="translated">노드 명령 행 옵션을 인쇄하십시오. 이 옵션의 출력은이 문서보다 덜 자세합니다.</target>
        </trans-unit>
        <trans-unit id="23fe4b683483713475054b7ae501a7bb20ea1256" translate="yes" xml:space="preserve">
          <source>Print node command-line options. The output of this option is less detailed than this document.</source>
          <target state="translated">Print node command-line options. The output of this option is less detailed than this document.</target>
        </trans-unit>
        <trans-unit id="4e8927fd4c74cbc78d568adb9a1b17b406a08a9b" translate="yes" xml:space="preserve">
          <source>Print node's version.</source>
          <target state="translated">프린트 노드 버전.</target>
        </trans-unit>
        <trans-unit id="53faa5e77298001da39c4847073219812fd872b9" translate="yes" xml:space="preserve">
          <source>Print short summaries of calls to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; to stderr. The output could look like this:</source>
          <target state="translated">Print short summaries of calls to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; &lt;/a&gt; to stderr. The output could look like this:</target>
        </trans-unit>
        <trans-unit id="fc88690634368ae78e24e38bdcbae6ae6003e688" translate="yes" xml:space="preserve">
          <source>Print source-able bash completion script for Node.js.</source>
          <target state="translated">Node.js에 대한 소스 가능 bash 완료 스크립트를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="9e3c3ab4fa30dd6f1be84ef6ddb9d661a65ee164" translate="yes" xml:space="preserve">
          <source>Print stack traces for deprecations.</source>
          <target state="translated">더 이상 사용되지 않는 스택 추적을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="61c177a398e7c1674438c1d5434da56f8918bd35" translate="yes" xml:space="preserve">
          <source>Print stack traces for process warnings (including deprecations).</source>
          <target state="translated">프로세스 경고 (더 이상 사용되지 않음)에 대한 스택 추적을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="ebc310a0ea3748b6ac4905fbe13acc453959cf46" translate="yes" xml:space="preserve">
          <source>Print stack traces for uncaught exceptions; usually, the stack trace associated with the creation of an &lt;code&gt;Error&lt;/code&gt; is printed, whereas this makes Node.js also print the stack trace associated with throwing the value (which does not need to be an &lt;code&gt;Error&lt;/code&gt; instance).</source>
          <target state="translated">Print stack traces for uncaught exceptions; usually, the stack trace associated with the creation of an &lt;code&gt;Error&lt;/code&gt; is printed, whereas this makes Node.js also print the stack trace associated with throwing the value (which does not need to be an &lt;code&gt;Error&lt;/code&gt; instance).</target>
        </trans-unit>
        <trans-unit id="068081f9461c8aae0f3ae57847ff9307cc39ab12" translate="yes" xml:space="preserve">
          <source>Printing in AsyncHooks callbacks</source>
          <target state="translated">AsyncHooks 콜백에서 인쇄</target>
        </trans-unit>
        <trans-unit id="70c453d54073c5fb784eeaeafb1094d31a8dcf12" translate="yes" xml:space="preserve">
          <source>Prints TLS packet trace information to &lt;code&gt;stderr&lt;/code&gt;. This can be used to debug TLS connection problems.</source>
          <target state="translated">TLS 패킷 추적 정보를 &lt;code&gt;stderr&lt;/code&gt; 에 인쇄합니다 . TLS 연결 문제를 디버깅하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f312b6b1137a45b692aa4476fc7f61de3717b1a" translate="yes" xml:space="preserve">
          <source>Prints a stack trace on SIGINT.</source>
          <target state="translated">Prints a stack trace on SIGINT.</target>
        </trans-unit>
        <trans-unit id="b39a7dcfa31675a5873a5b343bc968e701e489df" translate="yes" xml:space="preserve">
          <source>Prints a stack trace whenever an environment is exited proactively, i.e. invoking &lt;code&gt;process.exit()&lt;/code&gt;.</source>
          <target state="translated">Prints a stack trace whenever an environment is exited proactively, i.e. invoking &lt;code&gt;process.exit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c6797896530a7086252151eb2d808af0acd5708" translate="yes" xml:space="preserve">
          <source>Prints a stack trace whenever synchronous I/O is detected after the first turn of the event loop.</source>
          <target state="translated">이벤트 루프의 첫 번째 회전 후 동기 I / O가 감지 될 때마다 스택 추적을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="5622b8fe97527f9555a95d48db72e2ef47db69da" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stderr&lt;/code&gt; the string &lt;code&gt;'Trace: '&lt;/code&gt;, followed by the &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt; formatted message and stack trace to the current position in the code.</source>
          <target state="translated">문자열 &lt;code&gt;'Trace: '&lt;/code&gt; 를 &lt;code&gt;stderr&lt;/code&gt; 에 인쇄 한 다음 &lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt; 형식의 메시지와 스택 추적을 코드의 현재 위치로 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="74fac35d9a2e096837c2d3881e8f19985ada046a" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stderr&lt;/code&gt; with newline. Multiple arguments can be passed, with the first used as the primary message and all additional used as substitution values similar to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt;&lt;code&gt;printf(3)&lt;/code&gt;&lt;/a&gt; (the arguments are all passed to &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">줄 바꿈 으로 &lt;code&gt;stderr&lt;/code&gt; 에 인쇄합니다 . 첫 번째 메시지를 기본 메시지로 사용하고 모든 추가 인수 를 &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt; &lt;code&gt;printf(3)&lt;/code&gt; &lt;/a&gt; 와 유사한 대체 값으로 사용하여 여러 인수를 전달할 수 있습니다 (인수는 모두 &lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt; 으로 전달됨 ).</target>
        </trans-unit>
        <trans-unit id="1e1280f741bd1d400df3250b0cb8b1d0b821d4de" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stdout&lt;/code&gt; with newline. Multiple arguments can be passed, with the first used as the primary message and all additional used as substitution values similar to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt;&lt;code&gt;printf(3)&lt;/code&gt;&lt;/a&gt; (the arguments are all passed to &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">줄 바꿈 으로 &lt;code&gt;stdout&lt;/code&gt; 에 인쇄합니다 . 첫 번째 메시지를 기본 메시지로 사용하고 모든 추가 인수 를 &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt; &lt;code&gt;printf(3)&lt;/code&gt; &lt;/a&gt; 와 유사한 대체 값으로 사용하여 여러 인수를 전달할 수 있습니다 (인수는 모두 &lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt; 으로 전달됨 ).</target>
        </trans-unit>
        <trans-unit id="e3855ce03c293b66a787d44a3e98b526098b5f3a" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, streams did not implement the entire &lt;code&gt;stream&lt;/code&gt; module API as it is currently defined. (See &lt;a href=&quot;#stream_compatibility_with_older_node_js_versions&quot;&gt;Compatibility&lt;/a&gt; for more information.)</source>
          <target state="translated">Node.js 0.10 이전에는 스트림 이 현재 정의 된 전체 &lt;code&gt;stream&lt;/code&gt; 모듈 API를 구현하지 않았습니다 . (자세한 내용은 &lt;a href=&quot;#stream_compatibility_with_older_node_js_versions&quot;&gt;호환성&lt;/a&gt; 을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="0e4d74cf100d9d93df5e134d1bdc3544f13a9126" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, the &lt;code&gt;Readable&lt;/code&gt; stream interface was simpler, but also less powerful and less useful.</source>
          <target state="translated">Node.js 0.10 이전에는 &lt;code&gt;Readable&lt;/code&gt; 스트림 인터페이스가 더 단순했지만 강력하지 않고 유용성이 떨어졌습니다.</target>
        </trans-unit>
        <trans-unit id="b73773217fd9db14de34c02fb46b27a87b1d65d7" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, the incoming message data would be simply discarded. However, in Node.js 0.10 and beyond, the socket remains paused forever.</source>
          <target state="translated">Node.js 0.10 이전에는 들어오는 메시지 데이터가 단순히 삭제되었습니다. 그러나 Node.js 0.10 이상에서는 소켓이 영원히 일시 중지 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="799804e4ff65ca9b801a959d1f72b0f2c0736e67" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.12, the &lt;code&gt;ctime&lt;/code&gt; held the &lt;code&gt;birthtime&lt;/code&gt; on Windows systems. As of 0.12, &lt;code&gt;ctime&lt;/code&gt; is not &quot;creation time&quot;, and on Unix systems, it never was.</source>
          <target state="translated">Node.js 0.12 이전에는 &lt;code&gt;ctime&lt;/code&gt; 이 Windows 시스템 에서 &lt;code&gt;birthtime&lt;/code&gt; 을 유지했습니다 . 0.12 현재 &lt;code&gt;ctime&lt;/code&gt; 은 &quot;창조 시간&quot;이 아니며 Unix 시스템에서는 없었습니다.</target>
        </trans-unit>
        <trans-unit id="b5ea6f80e9b75421ec86a674535539182e1cb12a" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 8.0.0, the underlying memory for &lt;code&gt;Buffer&lt;/code&gt; instances created in this way is &lt;em&gt;not initialized&lt;/em&gt;. The contents of a newly created &lt;code&gt;Buffer&lt;/code&gt; are unknown and &lt;em&gt;may contain sensitive data&lt;/em&gt;. Use &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc(size)&lt;/code&gt;&lt;/a&gt; instead to initialize a &lt;code&gt;Buffer&lt;/code&gt; with zeroes.</source>
          <target state="translated">Node.js 8.0.0 이전에는 이러한 방식으로 작성된 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 의 기본 메모리 가 &lt;em&gt;초기화되지 않았습니다&lt;/em&gt; . 새로 작성된 &lt;code&gt;Buffer&lt;/code&gt; 의 내용을 알 &lt;em&gt;수 없으며 민감한 데이터가 포함되어있을 수 있습니다&lt;/em&gt; . 대신 &lt;code&gt;Buffer&lt;/code&gt; 를 0 으로 초기화 하려면 &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc(size)&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f60d8e68c695de16bea08464736b901943f2657" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, the JavaScript language had no mechanism for reading or manipulating streams of binary data. The &lt;code&gt;Buffer&lt;/code&gt; class was introduced as part of the Node.js API to enable interaction with octet streams in TCP streams, file system operations, and other contexts.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 가 도입되기 전에 JavaScript 언어에는 이진 데이터 스트림을 읽거나 조작하는 메커니즘이 없었습니다. &lt;code&gt;Buffer&lt;/code&gt; 클래스는 TCP 스트림에서 옥텟 스트림, 파일 시스템 작업 및 기타 상황과의 상호 작용을 가능하게하는 Node.js를 API의 일부로서 도입되었다.</target>
        </trans-unit>
        <trans-unit id="569010eb9f361cf8faa56363beee5080dfaf7c82" translate="yes" xml:space="preserve">
          <source>Prior versions of Node.js required the use of the &lt;code&gt;--trace-events-enabled&lt;/code&gt; flag to enable trace events. This requirement has been removed. However, the &lt;code&gt;--trace-events-enabled&lt;/code&gt; flag &lt;em&gt;may&lt;/em&gt; still be used and will enable the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;node.async_hooks&lt;/code&gt;, and &lt;code&gt;v8&lt;/code&gt; trace event categories by default.</source>
          <target state="translated">Node.js의 이전 버전에서는 &lt;code&gt;--trace-events-enabled&lt;/code&gt; 플래그를 사용하여 추적 이벤트를 활성화해야했습니다. 이 요구 사항은 제거되었습니다. 그러나 &lt;code&gt;--trace-events-enabled&lt;/code&gt; 플래그 &lt;em&gt;를&lt;/em&gt; 계속 사용할 &lt;em&gt;수&lt;/em&gt; 있으며 기본적으로 &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;node.async_hooks&lt;/code&gt; 및 &lt;code&gt;v8&lt;/code&gt; 추적 이벤트 범주 가 활성화 됩니다.</target>
        </trans-unit>
        <trans-unit id="3eba8ee76ad475accca8e383aa6bd46bc54cf3ec" translate="yes" xml:space="preserve">
          <source>Priority Constants</source>
          <target state="translated">우선 순위 상수</target>
        </trans-unit>
        <trans-unit id="5854455f2e22400232f16336a9364fcaf6b673d5" translate="yes" xml:space="preserve">
          <source>Priority constants</source>
          <target state="translated">Priority constants</target>
        </trans-unit>
        <trans-unit id="87b811635ab3b8310c66cfb0ad327bc513d1a5e4" translate="yes" xml:space="preserve">
          <source>Private keys can be generated in multiple ways. The example below illustrates use of the OpenSSL command-line interface to generate a 2048-bit RSA private key:</source>
          <target state="translated">개인 키는 여러 가지 방법으로 생성 될 수 있습니다. 아래 예제는 OpenSSL 명령 행 인터페이스를 사용하여 2048 비트 RSA 개인 키를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">Process</target>
        </trans-unit>
        <trans-unit id="ed79e49db97c3aadec62bbfc9a3a18e8ab948618" translate="yes" xml:space="preserve">
          <source>Process Events</source>
          <target state="translated">프로세스 이벤트</target>
        </trans-unit>
        <trans-unit id="edc85c4767f043b93bfae05f56b87a8f8bb981b7" translate="yes" xml:space="preserve">
          <source>Process V8 profiler output generated using the V8 option &lt;code&gt;--prof&lt;/code&gt;.</source>
          <target state="translated">V8 옵션 &lt;code&gt;--prof&lt;/code&gt; 를 사용하여 생성 된 V8 프로파일 러 출력을 처리 하십시오 .</target>
        </trans-unit>
        <trans-unit id="47df027e667d25601ac34f1f4644c627704be9e6" translate="yes" xml:space="preserve">
          <source>Process events</source>
          <target state="translated">Process events</target>
        </trans-unit>
        <trans-unit id="e6d3d70d87f346ad17706fe9b8c8f0efbcfe18a8" translate="yes" xml:space="preserve">
          <source>Process files with the extension &lt;code&gt;.sjs&lt;/code&gt; as &lt;code&gt;.js&lt;/code&gt;:</source>
          <target state="translated">확장과 프로세스 파일은 &lt;code&gt;.sjs&lt;/code&gt; 로 &lt;code&gt;.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d9847a8200568ca69ca441425bfe0107e7fd28da" translate="yes" xml:space="preserve">
          <source>Produces a socket/stream to be used for HTTP requests.</source>
          <target state="translated">HTTP 요청에 사용될 소켓 / 스트림을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="23b6ae6a9a0d6b931ccd8b07912cb3226d2ccadf" translate="yes" xml:space="preserve">
          <source>Promise callbacks are entered into the microtask queue of the context in which they were created. For example, if &lt;code&gt;() =&amp;gt; loop()&lt;/code&gt; is replaced with just &lt;code&gt;loop&lt;/code&gt; in the above example, then &lt;code&gt;loop&lt;/code&gt; will be pushed into the global microtask queue, because it is a function from the outer (main) context, and thus will also be able to escape the timeout.</source>
          <target state="translated">Promise callbacks are entered into the microtask queue of the context in which they were created. For example, if &lt;code&gt;() =&amp;gt; loop()&lt;/code&gt; is replaced with just &lt;code&gt;loop&lt;/code&gt; in the above example, then &lt;code&gt;loop&lt;/code&gt; will be pushed into the global microtask queue, because it is a function from the outer (main) context, and thus will also be able to escape the timeout.</target>
        </trans-unit>
        <trans-unit id="2a3887e3a4c754b37f057f5ba4d7665b5decc898" translate="yes" xml:space="preserve">
          <source>Promise contexts may not get precise &lt;code&gt;executionAsyncIds&lt;/code&gt; by default. See the section on &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promise execution tracking&lt;/a&gt;.</source>
          <target state="translated">약속 컨텍스트는 기본적으로 정확한 &lt;code&gt;executionAsyncIds&lt;/code&gt; 를 얻지 못할 수 있습니다 . &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;약속 실행 추적&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91e0c399a6037f8f6a98e138a55d44f0df19487f" translate="yes" xml:space="preserve">
          <source>Promise contexts may not get valid &lt;code&gt;triggerAsyncId&lt;/code&gt;s by default. See the section on &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promise execution tracking&lt;/a&gt;.</source>
          <target state="translated">약속 컨텍스트는 기본적으로 유효한 &lt;code&gt;triggerAsyncId&lt;/code&gt; 를 얻지 못할 수 있습니다 . &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;약속 실행 추적&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f2a21a1defb506a66631b97bc5212a2e135f6ee" translate="yes" xml:space="preserve">
          <source>Promise example</source>
          <target state="translated">Promise example</target>
        </trans-unit>
        <trans-unit id="de39bc50f647464d04975bfae7e18eac651d9d44" translate="yes" xml:space="preserve">
          <source>Promise execution tracking</source>
          <target state="translated">실행 추적 약속</target>
        </trans-unit>
        <trans-unit id="be1729ccf03641bd80e66019be462b4be810f180" translate="yes" xml:space="preserve">
          <source>Promise-based operations return a &lt;code&gt;Promise&lt;/code&gt; that is resolved when the asynchronous operation is complete.</source>
          <target state="translated">Promise-based operations return a &lt;code&gt;Promise&lt;/code&gt; that is resolved when the asynchronous operation is complete.</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="72dc7e3756821ec64d8f538c6a9ac277daf6e8db" translate="yes" xml:space="preserve">
          <source>Properties assigned to the &lt;code&gt;import.meta&lt;/code&gt; object that are objects may allow the &lt;code&gt;Module&lt;/code&gt; to access information outside the specified &lt;code&gt;context&lt;/code&gt;, if the object is created in the top level context. Use &lt;code&gt;vm.runInContext()&lt;/code&gt; to create objects in a specific context.</source>
          <target state="translated">오브젝트 인 &lt;code&gt;import.meta&lt;/code&gt; 오브젝트에 지정된 특성 은 오브젝트가 최상위 컨텍스트에서 작성된 경우 &lt;code&gt;Module&lt;/code&gt; 이 지정된 &lt;code&gt;context&lt;/code&gt; 외부의 정보에 액세스 할 수 있도록합니다 . &lt;code&gt;vm.runInContext()&lt;/code&gt; 를 사용하여 특정 컨텍스트에서 오브젝트를 작성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d40b6e7862b9d2391f0703753844d2fa029aa95f" translate="yes" xml:space="preserve">
          <source>Properties assigned to the &lt;code&gt;import.meta&lt;/code&gt; object that are objects may allow the module to access information outside the specified &lt;code&gt;context&lt;/code&gt;. Use &lt;code&gt;vm.runInContext()&lt;/code&gt; to create objects in a specific context.</source>
          <target state="translated">Properties assigned to the &lt;code&gt;import.meta&lt;/code&gt; object that are objects may allow the module to access information outside the specified &lt;code&gt;context&lt;/code&gt; . Use &lt;code&gt;vm.runInContext()&lt;/code&gt; to create objects in a specific context.</target>
        </trans-unit>
        <trans-unit id="bda4491517fdbddb3ce43bec61f6056056bde879" translate="yes" xml:space="preserve">
          <source>Properties can be retrieved using the APIs described in this section. Consider the following JavaScript snippet:</source>
          <target state="translated">이 섹션에서 설명하는 API를 사용하여 특성을 검색 할 수 있습니다. 다음 JavaScript 스 니펫을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="a3cd4663725b21a7660b35ccc8b4e9e0fdf9e0f8" translate="yes" xml:space="preserve">
          <source>Properties in JavaScript are represented as a tuple of a key and a value. Fundamentally, all property keys in N-API can be represented in one of the following forms:</source>
          <target state="translated">JavaScript의 속성은 키와 값의 튜플로 표시됩니다. 기본적으로 N-API의 모든 속성 키는 다음 형식 중 하나로 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5549e5f59a69fbebbf7d638b195aee138301480f" translate="yes" xml:space="preserve">
          <source>Properties in the &lt;code&gt;context&lt;/code&gt; object appear as local within the REPL:</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 객체의 속성 은 REPL 내에서 로컬로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="0d5acab121bd42e12883f7dbf5c731dccc9ca8c5" translate="yes" xml:space="preserve">
          <source>Properties on the constructor function corresponding to &lt;em&gt;static&lt;/em&gt; data properties, accessors, and methods of the C++ class (defined by property descriptors with the &lt;code&gt;napi_static&lt;/code&gt; attribute).</source>
          <target state="translated">&lt;em&gt;정적&lt;/em&gt; 데이터 속성, 접근 자 및 C ++ 클래스의 메서드에 해당하는 생성자 함수의 속성 ( &lt;code&gt;napi_static&lt;/code&gt; 속성 이있는 속성 설명자에 의해 정의 됨 )</target>
        </trans-unit>
        <trans-unit id="5afbb5e9cfdc5d6daed992275088c08794789f8a" translate="yes" xml:space="preserve">
          <source>Properties on the constructor function's &lt;code&gt;prototype&lt;/code&gt; object corresponding to &lt;em&gt;non-static&lt;/em&gt; data properties, accessors, and methods of the C++ class (defined by property descriptors without the &lt;code&gt;napi_static&lt;/code&gt; attribute).</source>
          <target state="translated">&lt;em&gt;정적&lt;/em&gt; 이 &lt;em&gt;아닌&lt;/em&gt; 데이터 속성, 접근 자 및 C ++ 클래스의 메서드 ( &lt;code&gt;napi_static&lt;/code&gt; 속성이 없는 속성 설명자에 의해 정의 됨)에 해당하는 생성자 함수 &lt;code&gt;prototype&lt;/code&gt; 객체 의 속성입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d26588704be37bebc003478fce78026f44e2d08" translate="yes" xml:space="preserve">
          <source>Property filter bits. They can be or'ed to build a composite filter.</source>
          <target state="translated">Property filter bits. They can be or'ed to build a composite filter.</target>
        </trans-unit>
        <trans-unit id="af895c10b69648206dba04a4d2a069103e37930c" translate="yes" xml:space="preserve">
          <source>Property for checking and controlling whether a FIPS compliant crypto provider is currently in use. Setting to true requires a FIPS build of Node.js.</source>
          <target state="translated">FIPS 호환 암호화 공급자가 현재 사용 중인지 확인 및 제어하기위한 속성입니다. true로 설정하려면 Node.js의 FIPS 빌드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="155652a094bbdea0dbf7c9376121d001ea20f42a" translate="yes" xml:space="preserve">
          <source>Protocol Error</source>
          <target state="translated">프로토콜 오류</target>
        </trans-unit>
        <trans-unit id="5317fa8a548ff6ef690547e3ed30ee12c1cd86a5" translate="yes" xml:space="preserve">
          <source>Protocol errors occur when various HTTP/2 protocol constraints are violated. These will be reported using either a synchronous &lt;code&gt;throw&lt;/code&gt; or via an &lt;code&gt;'error'&lt;/code&gt; event on the &lt;code&gt;Http2Stream&lt;/code&gt;, &lt;code&gt;Http2Session&lt;/code&gt; or HTTP/2 Server objects, depending on where and when the error occurs.</source>
          <target state="translated">다양한 HTTP / 2 프로토콜 제약 조건을 위반하면 프로토콜 오류가 발생합니다. 이들은 동기 중 하나를 사용하여보고됩니다 &lt;code&gt;throw&lt;/code&gt; 또는를 통해 &lt;code&gt;'error'&lt;/code&gt; 온 이벤트 &lt;code&gt;Http2Stream&lt;/code&gt; , &lt;code&gt;Http2Session&lt;/code&gt; 또는 HTTP를 / 2 서버 개체, 언제 어디서 오류가 발생에 따라.</target>
        </trans-unit>
        <trans-unit id="3b198e3442989fa4a3689376e625c3223e1db34c" translate="yes" xml:space="preserve">
          <source>Protocol versions are:</source>
          <target state="translated">프로토콜 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb29f59c18852f12d855a2fa9b3651a9881ec7a7" translate="yes" xml:space="preserve">
          <source>Provided &lt;code&gt;require.cache&lt;/code&gt; is not modified, multiple calls to &lt;code&gt;require('foo')&lt;/code&gt; will not cause the module code to be executed multiple times. This is an important feature. With it, &quot;partially done&quot; objects can be returned, thus allowing transitive dependencies to be loaded even when they would cause cycles.</source>
          <target state="translated">제공 &lt;code&gt;require.cache&lt;/code&gt; 이 수정되지 않습니다, 여러 호출합니다 &lt;code&gt;require('foo')&lt;/code&gt; 모듈 코드가 여러 번 실행되는 발생하지 않습니다. 이것은 중요한 기능입니다. 이를 통해 &quot;부분적으로 완료된&quot;객체를 반환 할 수 있으므로주기를 유발하는 경우에도 전이 종속성을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c15028f134fa4c88efa3d7de86ae9936f73da16" translate="yes" xml:space="preserve">
          <source>Provides a synchronous &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt; implementation. Scrypt is a password-based key derivation function that is designed to be expensive computationally and memory-wise in order to make brute-force attacks unrewarding.</source>
          <target state="translated">동기식 &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;암호화&lt;/a&gt; 구현을 제공합니다 . Scrypt는 암호 기반 키 파생 기능으로 무차별 대입 공격을 보상하지 않기 위해 계산 및 메모리 측면에서 비용이 많이 들도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="eeab70e17b0b0e0845fd186040b5e0f5b565ce54" translate="yes" xml:space="preserve">
          <source>Provides a synchronous Password-Based Key Derivation Function 2 (PBKDF2) implementation. A selected HMAC digest algorithm specified by &lt;code&gt;digest&lt;/code&gt; is applied to derive a key of the requested byte length (&lt;code&gt;keylen&lt;/code&gt;) from the &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and &lt;code&gt;iterations&lt;/code&gt;.</source>
          <target state="translated">동기식 암호 기반 키 파생 함수 2 (PBKDF2) 구현을 제공합니다. 선택에 의해 지정된 다이제스트 HMAC 알고리즘 &lt;code&gt;digest&lt;/code&gt; 요청 된 바이트 길이 (키를 유도하기 위하여인가 &lt;code&gt;keylen&lt;/code&gt; 로부터) &lt;code&gt;password&lt;/code&gt; , &lt;code&gt;salt&lt;/code&gt; 및 &lt;code&gt;iterations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671bd8b3482bdbabbdbdc13642129e08deefce79" translate="yes" xml:space="preserve">
          <source>Provides an asynchronous &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt; implementation. Scrypt is a password-based key derivation function that is designed to be expensive computationally and memory-wise in order to make brute-force attacks unrewarding.</source>
          <target state="translated">비동기 &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;암호화&lt;/a&gt; 구현을 제공합니다 . Scrypt는 암호 기반 키 파생 기능으로 무차별 대입 공격을 보상하지 않기 위해 계산 및 메모리 측면에서 비용이 많이 들도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="28f74a902b84db45aac590c9e42f75d38af51ca5" translate="yes" xml:space="preserve">
          <source>Provides an asynchronous Password-Based Key Derivation Function 2 (PBKDF2) implementation. A selected HMAC digest algorithm specified by &lt;code&gt;digest&lt;/code&gt; is applied to derive a key of the requested byte length (&lt;code&gt;keylen&lt;/code&gt;) from the &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and &lt;code&gt;iterations&lt;/code&gt;.</source>
          <target state="translated">비동기 암호 기반 키 파생 함수 2 (PBKDF2) 구현을 제공합니다. 선택에 의해 지정된 다이제스트 HMAC 알고리즘 &lt;code&gt;digest&lt;/code&gt; 요청 된 바이트 길이 (키를 유도하기 위하여인가 &lt;code&gt;keylen&lt;/code&gt; 로부터) &lt;code&gt;password&lt;/code&gt; , &lt;code&gt;salt&lt;/code&gt; 및 &lt;code&gt;iterations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34eec4209af800878c03f529aec7398b061ddef6" translate="yes" xml:space="preserve">
          <source>Provides an object enumerating Zlib-related constants.</source>
          <target state="translated">Zlib 관련 상수를 열거하는 객체를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cca54bd7ec63a04da6ab61ba04a16a403e25d956" translate="yes" xml:space="preserve">
          <source>Provides general utility methods when interacting with instances of &lt;code&gt;Module&lt;/code&gt; &amp;mdash; the &lt;code&gt;module&lt;/code&gt; variable often seen in file modules. Accessed via &lt;code&gt;require('module')&lt;/code&gt;.</source>
          <target state="translated">파일 인스턴스에서 자주 볼 수 있는 &lt;code&gt;module&lt;/code&gt; 변수 인 &lt;code&gt;Module&lt;/code&gt; 의 인스턴스와 상호 작용할 때 일반적인 유틸리티 방법을 제공합니다 . &lt;code&gt;require('module')&lt;/code&gt; 을 통해 액세스 합니다 .</target>
        </trans-unit>
        <trans-unit id="86976b8c266ce5cb62c49fa552154b6074f635e6" translate="yes" xml:space="preserve">
          <source>Provides miscellaneous information about the current state of the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 의 현재 상태에 대한 기타 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="1326cbdc3a0868919b0e32c44d1897dc8783d7a1" translate="yes" xml:space="preserve">
          <source>Provides miscellaneous information about the current state of the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; 의 현재 상태에 대한 기타 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ad70e72f07264fd0bc24c8c411658b7f9c8a1b32" translate="yes" xml:space="preserve">
          <source>Provides the platform-specific path delimiter:</source>
          <target state="translated">플랫폼 별 경로 구분 기호를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="67855b4b44a418b468f0d88f842eb5464fcdec60" translate="yes" xml:space="preserve">
          <source>Provides the platform-specific path segment separator:</source>
          <target state="translated">플랫폼 별 경로 세그먼트 구분 기호를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec57e8a11eb6beb37383d8d34ec129377ac0db36" translate="yes" xml:space="preserve">
          <source>Provides the set of JS engine resource constraints for this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this matches its values.</source>
          <target state="translated">Provides the set of JS engine resource constraints for this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; constructor, this matches its values.</target>
        </trans-unit>
        <trans-unit id="23ae937f6c6ba054b9da928b1405f874c4b249ff" translate="yes" xml:space="preserve">
          <source>Provides the set of JS engine resource constraints inside this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this matches its values.</source>
          <target state="translated">Provides the set of JS engine resource constraints inside this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; constructor, this matches its values.</target>
        </trans-unit>
        <trans-unit id="6e28f21515cb14f988bc5355746c689a6b4390a1" translate="yes" xml:space="preserve">
          <source>Provides timing details for Node.js itself.</source>
          <target state="translated">Node.js 자체에 대한 타이밍 세부 사항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cbc34debf2a361d24f06ccb998d8d42104d27f49" translate="yes" xml:space="preserve">
          <source>Provides timing details for Node.js itself. The constructor of this class is not exposed to users.</source>
          <target state="translated">Provides timing details for Node.js itself. The constructor of this class is not exposed to users.</target>
        </trans-unit>
        <trans-unit id="0ae13bf1edd59476003114625157218e8695bbb6" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;filename&lt;/code&gt; argument in the callback is only supported on Linux, macOS, Windows, and AIX. Even on supported platforms, &lt;code&gt;filename&lt;/code&gt; is not always guaranteed to be provided. Therefore, don't assume that &lt;code&gt;filename&lt;/code&gt; argument is always provided in the callback, and have some fallback logic if it is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">콜백에서 &lt;code&gt;filename&lt;/code&gt; 인수 제공 은 Linux, macOS, Windows 및 AIX에서만 지원됩니다. 지원되는 플랫폼에서도 &lt;code&gt;filename&lt;/code&gt; 이 항상 제공되는 것은 아닙니다. 따라서 &lt;code&gt;filename&lt;/code&gt; 인수가 항상 콜백에 제공 된다고 가정하지 말고 &lt;code&gt;null&lt;/code&gt; 인 경우 대체 논리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="423d97867307641e5bfb4670da1a3d250f2b3cf4" translate="yes" xml:space="preserve">
          <source>Providing ICU data at runtime</source>
          <target state="translated">런타임에 ICU 데이터 제공</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">퍼블릭 API</target>
        </trans-unit>
        <trans-unit id="600036ef4dd93f433b81d22b2c4158e4bab15338" translate="yes" xml:space="preserve">
          <source>Punycode</source>
          <target state="translated">Punycode</target>
        </trans-unit>
        <trans-unit id="f4f6f1bf430484188d9b8e0107bc80405c8c550c" translate="yes" xml:space="preserve">
          <source>Push streams on the client</source>
          <target state="translated">클라이언트에서 스트림 푸시</target>
        </trans-unit>
        <trans-unit id="ad297c3b470a4f58a6487e3378b107be2593c542" translate="yes" xml:space="preserve">
          <source>Pushing a zero-byte string, &lt;code&gt;Buffer&lt;/code&gt; or &lt;code&gt;Uint8Array&lt;/code&gt; to a stream that is not in object mode has an interesting side effect. Because it &lt;em&gt;is&lt;/em&gt; a call to &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt;, the call will end the reading process. However, because the argument is an empty string, no data is added to the readable buffer so there is nothing for a user to consume.</source>
          <target state="translated">0 바이트 문자열, &lt;code&gt;Buffer&lt;/code&gt; 또는 &lt;code&gt;Uint8Array&lt;/code&gt; 를 오브젝트 모드가 아닌 스트림으로 푸시 하면 흥미로운 부작용이 있습니다. 이 때문에 &lt;em&gt;인&lt;/em&gt; 의 호출 &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; &lt;/a&gt; 호출은 읽기 프로세스를 종료합니다. 그러나 인수가 빈 문자열이므로 읽을 수있는 버퍼에 데이터가 추가되지 않으므로 사용자가 사용할 것이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c49a13f303ff804cc28c2df646069f2275fed36e" translate="yes" xml:space="preserve">
          <source>Putting together all of the above, here is the high-level algorithm in pseudocode of what &lt;code&gt;require()&lt;/code&gt; does:</source>
          <target state="translated">위의 모든 것을 종합하면 &lt;code&gt;require()&lt;/code&gt; 가 수행 하는 의사 코드의 고급 알고리즘은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc58d1871ca5b0c182173d616404a1ecb2d6c3fd" translate="yes" xml:space="preserve">
          <source>Query String</source>
          <target state="translated">쿼리 문자열</target>
        </trans-unit>
        <trans-unit id="076be96f4dae094d0076aa47a176bbe952ccc89c" translate="yes" xml:space="preserve">
          <source>Query Strings</source>
          <target state="translated">쿼리 문자열</target>
        </trans-unit>
        <trans-unit id="206b06ce5521136c11e6e475bdaa1b65cb9f9eea" translate="yes" xml:space="preserve">
          <source>Query string</source>
          <target state="translated">쿼리 문자열</target>
        </trans-unit>
        <trans-unit id="259cd35285b7f492b57a6c1a9b7b3f512f463350" translate="yes" xml:space="preserve">
          <source>Query strings</source>
          <target state="translated">Query strings</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="73775a59948e85039bd898e23e868a9ee126c00f" translate="yes" xml:space="preserve">
          <source>REPL</source>
          <target state="translated">REPL</target>
        </trans-unit>
        <trans-unit id="92e6317b431b79746e56b224cb48154bd3fd2791" translate="yes" xml:space="preserve">
          <source>RangeError</source>
          <target state="translated">RangeError</target>
        </trans-unit>
        <trans-unit id="73a558c834408d5c23ec4695d745a8f2a7e71a24" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;15 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; in steps of &lt;code&gt;1 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt;.</source>
          <target state="translated">범위 &lt;code&gt;0&lt;/code&gt; 행 &lt;code&gt;15 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; 의 단계 &lt;code&gt;1 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe84bc838dde0db273bd3df4f3f71b2b5448eff0" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_NPOSTFIX&lt;/code&gt;.</source>
          <target state="translated">범위는 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;BROTLI_MAX_NPOSTFIX&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7e1f1ec43312a6f92748690eb53428502b0fd70" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_INPUT_BLOCK_BITS&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_INPUT_BLOCK_BITS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BROTLI_MIN_INPUT_BLOCK_BITS&lt;/code&gt; ~ &lt;code&gt;BROTLI_MAX_INPUT_BLOCK_BITS&lt;/code&gt; 범위입니다 .</target>
        </trans-unit>
        <trans-unit id="a36fb1fbbc4b058e775ad3f8d98956c7de281db4" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_QUALITY&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_QUALITY&lt;/code&gt;, with a default of &lt;code&gt;BROTLI_DEFAULT_QUALITY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BROTLI_MIN_QUALITY&lt;/code&gt; ~ &lt;code&gt;BROTLI_MAX_QUALITY&lt;/code&gt; 범위 이며 기본값은 &lt;code&gt;BROTLI_DEFAULT_QUALITY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="619c2d1751063f8f10517bc8824cc89009a9dc83" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_WINDOW_BITS&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_WINDOW_BITS&lt;/code&gt;, with a default of &lt;code&gt;BROTLI_DEFAULT_WINDOW&lt;/code&gt;, or up to &lt;code&gt;BROTLI_LARGE_MAX_WINDOW_BITS&lt;/code&gt; if the &lt;code&gt;BROTLI_PARAM_LARGE_WINDOW&lt;/code&gt; flag is set.</source>
          <target state="translated">범위 &lt;code&gt;BROTLI_MIN_WINDOW_BITS&lt;/code&gt; 에 &lt;code&gt;BROTLI_MAX_WINDOW_BITS&lt;/code&gt; 의 기본값, &lt;code&gt;BROTLI_DEFAULT_WINDOW&lt;/code&gt; , 또는 최대에 &lt;code&gt;BROTLI_LARGE_MAX_WINDOW_BITS&lt;/code&gt; 경우 생성 &lt;code&gt;BROTLI_PARAM_LARGE_WINDOW&lt;/code&gt; 의 플래그가 세트입니다.</target>
        </trans-unit>
        <trans-unit id="49473280b3f01a4a1832170f8480aec3105d0042" translate="yes" xml:space="preserve">
          <source>Rather than calling &lt;code&gt;process.exit()&lt;/code&gt; directly, the code &lt;em&gt;should&lt;/em&gt; set the &lt;code&gt;process.exitCode&lt;/code&gt; and allow the process to exit naturally by avoiding scheduling any additional work for the event loop:</source>
          <target state="translated">&lt;code&gt;process.exit()&lt;/code&gt; 직접 호출하는 대신 코드 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;process.exitCode&lt;/code&gt; 를 설정 하고 이벤트 루프에 대한 추가 작업을 예약하지 않도록하여 프로세스가 자연스럽게 종료되도록 &lt;em&gt;해야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e87d50c3f9f679c215b3d236646e293484972476" translate="yes" xml:space="preserve">
          <source>Rather than emitting an error, &lt;code&gt;process.stderr.end()&lt;/code&gt; now only closes the stream side but not the underlying resource, making this error obsolete.</source>
          <target state="translated">&lt;code&gt;process.stderr.end()&lt;/code&gt; 이제 오류를 발생 시키지 않고 스트림 측만 닫고 기본 리소스는 닫지 않으므로이 오류는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="072d4cf268b7aceb4a63b9acadee2bedbe504737" translate="yes" xml:space="preserve">
          <source>Rather than waiting for calls to the &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; method, &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; events would begin emitting immediately. Applications that would need to perform some amount of work to decide how to handle data were required to store read data into buffers so the data would not be lost.</source>
          <target state="translated">&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 호출을 기다리는 대신 &lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; 이벤트가 즉시 발생하기 시작합니다. 데이터를 처리하는 방법을 결정하기 위해 일정량의 작업을 수행해야하는 응용 프로그램은 읽은 데이터를 버퍼에 저장하여 데이터가 손실되지 않도록해야했습니다.</target>
        </trans-unit>
        <trans-unit id="e416dba574a149f94ecc4e249323d96f61895c6f" translate="yes" xml:space="preserve">
          <source>Re-encodes the given &lt;code&gt;Buffer&lt;/code&gt; or &lt;code&gt;Uint8Array&lt;/code&gt; instance from one character encoding to another. Returns a new &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">지정된 &lt;code&gt;Buffer&lt;/code&gt; 또는 &lt;code&gt;Uint8Array&lt;/code&gt; 인스턴스를 한 문자 인코딩에서 다른 문자 인코딩으로 다시 인코딩합니다. 새로운 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="dbd00159e8482026240bd9581ebd27c65e0cdb79" translate="yes" xml:space="preserve">
          <source>Re-map the Node.js static code to large memory pages at startup. If supported on the target system, this will cause the Node.js static code to be moved onto 2 MiB pages instead of 4 KiB pages.</source>
          <target state="translated">Re-map the Node.js static code to large memory pages at startup. If supported on the target system, this will cause the Node.js static code to be moved onto 2 MiB pages instead of 4 KiB pages.</target>
        </trans-unit>
        <trans-unit id="623222be33f85922759dcb4bc2840b36a6a6275e" translate="yes" xml:space="preserve">
          <source>Read a JS &lt;code&gt;number&lt;/code&gt; value. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JS &lt;code&gt;number&lt;/code&gt; 값을 읽으십시오 . 커스텀 &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt; 내부에서 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="479c6b2b23e67dd3c363c728e9b671fb759cf26a" translate="yes" xml:space="preserve">
          <source>Read a raw 32-bit unsigned integer and return it. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원시 32 비트 부호없는 정수를 읽고 리턴하십시오. 커스텀 &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt; 내부에서 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="6628472c8b59ba02e5848460448095256f84f63a" translate="yes" xml:space="preserve">
          <source>Read a raw 64-bit unsigned integer and return it as an array &lt;code&gt;[hi, lo]&lt;/code&gt; with two 32-bit unsigned integer entries. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원시 64 비트 부호없는 정수를 읽고 두 개의 32 비트 부호없는 정수 항목이 있는 배열 &lt;code&gt;[hi, lo]&lt;/code&gt; 로 리턴하십시오 . 커스텀 &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt; 내부에서 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="59ce8b18338cb003a5eb344e97ace21f7db9a6cd" translate="yes" xml:space="preserve">
          <source>Read data from the file specified by &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; 로 지정된 파일에서 데이터를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="1e9653f0a30ac773e8e9cec6a8aa46baaee6e015" translate="yes" xml:space="preserve">
          <source>Read data from the file.</source>
          <target state="translated">파일에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="8a46ae032e8f643c9a43b2d7934746aadeb89f8c" translate="yes" xml:space="preserve">
          <source>Read from a file and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt;s</source>
          <target state="translated">Read from a file and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="875b11002af9351243e81010c1683541b928e807" translate="yes" xml:space="preserve">
          <source>Read from a file specified by &lt;code&gt;fd&lt;/code&gt; and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt;s using &lt;code&gt;readv()&lt;/code&gt;.</source>
          <target state="translated">Read from a file specified by &lt;code&gt;fd&lt;/code&gt; and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt; s using &lt;code&gt;readv()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="350f1abe715c076469943ce23239c968fc3ee0f4" translate="yes" xml:space="preserve">
          <source>Read raw bytes from the deserializer&amp;rsquo;s internal buffer. The &lt;code&gt;length&lt;/code&gt; parameter must correspond to the length of the buffer that was passed to &lt;a href=&quot;#v8_serializer_writerawbytes_buffer&quot;&gt;&lt;code&gt;serializer.writeRawBytes()&lt;/code&gt;&lt;/a&gt;. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">deserializer의 내부 버퍼에서 원시 바이트를 읽습니다. &lt;code&gt;length&lt;/code&gt; 매개 변수로 전달 된 버퍼의 길이에 대응해야 &lt;a href=&quot;#v8_serializer_writerawbytes_buffer&quot;&gt; &lt;code&gt;serializer.writeRawBytes()&lt;/code&gt; &lt;/a&gt; . 사용자 정의 내부에서 사용&lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt;합니다.</target>
        </trans-unit>
        <trans-unit id="cc55213cdd15ca1bbab1499008d56f7fd8bb160c" translate="yes" xml:space="preserve">
          <source>Read through the debug output. The first connection should say &quot;New&quot;, for example:</source>
          <target state="translated">디버그 출력을 읽습니다. 첫 번째 연결은 &quot;신규&quot;라고 표시해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="268bc4e394cb29df42fae486d00becbf9255636f" translate="yes" xml:space="preserve">
          <source>Read-only property mapped to the &lt;code&gt;SETTINGS_ENABLE_PUSH&lt;/code&gt; flag of the remote client's most recent &lt;code&gt;SETTINGS&lt;/code&gt; frame. Will be &lt;code&gt;true&lt;/code&gt; if the remote peer accepts push streams, &lt;code&gt;false&lt;/code&gt; otherwise. Settings are the same for every &lt;code&gt;Http2Stream&lt;/code&gt; in the same &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">읽기 전용 특성 은 원격 클라이언트의 가장 최근 &lt;code&gt;SETTINGS&lt;/code&gt; 프레임 의 &lt;code&gt;SETTINGS_ENABLE_PUSH&lt;/code&gt; 플래그에 맵핑됩니다 . 수 있을까요 &lt;code&gt;true&lt;/code&gt; 원격 피어 푸시 스트림, 받아들이는 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지. 동일한 &lt;code&gt;Http2Session&lt;/code&gt; 의 모든 &lt;code&gt;Http2Stream&lt;/code&gt; 에 대해 설정이 동일 합니다. .</target>
        </trans-unit>
        <trans-unit id="2e2ec5f4d80c9ac33aa8f72da2e88f56b8d622c1" translate="yes" xml:space="preserve">
          <source>Read-only property specifying the maximum allowed size of HTTP headers in bytes. Defaults to 8KB. Configurable using the &lt;a href=&quot;cli#cli_max_http_header_size_size&quot;&gt;&lt;code&gt;--max-http-header-size&lt;/code&gt;&lt;/a&gt; CLI option.</source>
          <target state="translated">허용되는 최대 HTTP 헤더 크기 (바이트)를 지정하는 읽기 전용 속성입니다. 기본값은 8KB입니다. &lt;a href=&quot;cli#cli_max_http_header_size_size&quot;&gt; &lt;code&gt;--max-http-header-size&lt;/code&gt; 를&lt;/a&gt; 사용하여 구성 가능 CLI 옵션을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16ad5532401355b48824a3ad0fbdcda8662d9094" translate="yes" xml:space="preserve">
          <source>Readable Streams</source>
          <target state="translated">읽을 수있는 스트림</target>
        </trans-unit>
        <trans-unit id="27e7ec72ff450dffcb40780d1c8122cc6fe15275" translate="yes" xml:space="preserve">
          <source>Readable streams</source>
          <target state="translated">읽을 수있는 스트림</target>
        </trans-unit>
        <trans-unit id="9e6492ac9b38e065b18ddf889a3cd4369470057e" translate="yes" xml:space="preserve">
          <source>Readable streams are an abstraction for a &lt;em&gt;source&lt;/em&gt; from which data is consumed.</source>
          <target state="translated">읽을 수있는 스트림은 &lt;em&gt;소스에&lt;/em&gt; 대한 추상화입니다&lt;em&gt;&lt;/em&gt; 데이터가 소비되는 .</target>
        </trans-unit>
        <trans-unit id="ceb93f69e25dd4f67fafd5c0c9bcf1b6c00353d6" translate="yes" xml:space="preserve">
          <source>Reading and writing</source>
          <target state="translated">읽고 쓰기</target>
        </trans-unit>
        <trans-unit id="44ac5e30f92164ff15b5a3d99babd48c470aaa74" translate="yes" xml:space="preserve">
          <source>Reading only</source>
          <target state="translated">읽기 전용</target>
        </trans-unit>
        <trans-unit id="2755293789538b24cd3e2e278f82a4c989b92a15" translate="yes" xml:space="preserve">
          <source>Readline</source>
          <target state="translated">Readline</target>
        </trans-unit>
        <trans-unit id="003e6cfc4a6386f75248f81eb1dd52d3dcaafaeb" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a big-endian, two's complement signed value supporting up to 48 bits of accuracy.</source>
          <target state="translated">Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a big-endian, two's complement signed value supporting up to 48 bits of accuracy.</target>
        </trans-unit>
        <trans-unit id="6bdeb476294744c365320747386306932e9fe457" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a little-endian, two's complement signed value supporting up to 48 bits of accuracy.</source>
          <target state="translated">Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a little-endian, two's complement signed value supporting up to 48 bits of accuracy.</target>
        </trans-unit>
        <trans-unit id="32d2d033a19ffa24c65f1c109f371a73977400d9" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a two's complement signed value. Supports up to 48 bits of accuracy.</source>
          <target state="translated">지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 &lt;code&gt;byteLength&lt;/code&gt; 바이트 수를 읽고 그 결과를 2의 보수 부호 값으로 해석합니다. 최대 48 비트의 정확도를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="65be5c132b2a7f185c6e16c52f1d90d227d548d9" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned big-endian integer supporting up to 48 bits of accuracy.</source>
          <target state="translated">Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned big-endian integer supporting up to 48 bits of accuracy.</target>
        </trans-unit>
        <trans-unit id="4189ea81ab4cd4dcf9d7462997b6d51031a35777" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned integer. Supports up to 48 bits of accuracy.</source>
          <target state="translated">지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 &lt;code&gt;byteLength&lt;/code&gt; 바이트 수를 읽고 결과를 부호없는 정수로 해석합니다. 최대 48 비트의 정확도를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b282fb364a58e3926f5b700cb0309cb8171c48f5" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned, little-endian integer supporting up to 48 bits of accuracy.</source>
          <target state="translated">Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned, little-endian integer supporting up to 48 bits of accuracy.</target>
        </trans-unit>
        <trans-unit id="d7c25cbe698485381fede8d70e2c9be67d367225" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readFloatBE()&lt;/code&gt; returns big endian, &lt;code&gt;readFloatLE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 32 비트 부동 소수점을 읽습니다 ( &lt;code&gt;readFloatBE()&lt;/code&gt; 는 빅 엔디안을 반환 함 ) &lt;code&gt;readFloatLE()&lt;/code&gt; 은 리틀 엔디안을 반환).</target>
        </trans-unit>
        <trans-unit id="e782a844a8884c76683545d2dbede5abd5a393ac" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit, big-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a 32-bit, big-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="323c10e3fb20039e769ab7b9e0bd440eae10b19b" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit, little-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a 32-bit, little-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2edaf0ce341cda679e006ea5a4cca48fae0daff" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readDoubleBE()&lt;/code&gt; returns big endian, &lt;code&gt;readDoubleLE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 64 비트 double을 읽 &lt;code&gt;readDoubleBE()&lt;/code&gt; 는 큰 엔디안, &lt;code&gt;readDoubleLE()&lt;/code&gt; 반환 함 ) 은 리틀 엔디안을 반환).</target>
        </trans-unit>
        <trans-unit id="99f29ff0cb3d8ea04de297a6c135848cd3e8be6a" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit, big-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a 64-bit, big-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64f4f66d32c023775fffbec83cc2ae2ae0dcb077" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit, little-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a 64-bit, little-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e499677be257aef94079fd43ba014820e0eaf74" translate="yes" xml:space="preserve">
          <source>Reads a signed 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readInt16BE()&lt;/code&gt; returns big endian, &lt;code&gt;readInt16LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호있는 16 비트 정수를 읽습니다 ( &lt;code&gt;readInt16BE()&lt;/code&gt; 는 빅 엔디안, &lt;code&gt;readInt16LE()&lt;/code&gt; 은 리틀 엔디안).</target>
        </trans-unit>
        <trans-unit id="29ef095a4521e31a0fac666fa51f3ebac6494b14" translate="yes" xml:space="preserve">
          <source>Reads a signed 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readInt32BE()&lt;/code&gt; returns big endian, &lt;code&gt;readInt32LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 endian 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호있는 32 비트 정수를 읽습니다 ( &lt;code&gt;readInt32BE()&lt;/code&gt; 는 big endian을 리턴 함, &lt;code&gt;readInt32LE()&lt;/code&gt; 은 리틀 엔디안).</target>
        </trans-unit>
        <trans-unit id="108cf67413ffd3740ba5d0b7f786008ac5ab1113" translate="yes" xml:space="preserve">
          <source>Reads a signed 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readBigInt64BE()&lt;/code&gt; returns big endian, &lt;code&gt;readBigInt64LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 endian 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호있는 64 비트 정수를 읽습니다 ( &lt;code&gt;readBigInt64BE()&lt;/code&gt; 는 big endian, &lt;code&gt;readBigInt64LE()&lt;/code&gt; 리턴 함 ) 는 little endian을 반환).</target>
        </trans-unit>
        <trans-unit id="ddf179054c104315d5413710c1e2aec21112c058" translate="yes" xml:space="preserve">
          <source>Reads a signed 8-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호있는 8 비트 정수를 읽습니다. .</target>
        </trans-unit>
        <trans-unit id="175ce9b7d04d510f16b6aaef57112d6ae2cf4bd8" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ed96d1458ba729626be024f02eaae9abc6ad481" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c6a6f5b329aa72afec7a5ea5449a729f3a40a77" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a63a332328383ce6de982ace7b122dfde9139033" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b363e9ea2a152294a37fae3fbb5a0d1606cca3f" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f31b635253131e2d6bce53c63dfceb946acc0f29" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads a signed, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b3c2a4a6d208adb7498e2bd675e58b6b100581d" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readUInt16BE()&lt;/code&gt; returns big endian, &lt;code&gt;readUInt16LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호없는 16 비트 정수를 읽습니다 ( &lt;code&gt;readUInt16BE()&lt;/code&gt; 는 빅 엔디안, &lt;code&gt;readUInt16LE()&lt;/code&gt; 은 리틀 엔디안을 반환).</target>
        </trans-unit>
        <trans-unit id="43f24416e70c75877a074b862fdd686d83f6b53b" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readUInt32BE()&lt;/code&gt; returns big endian, &lt;code&gt;readUInt32LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호없는 32 비트 정수를 읽습니다 ( &lt;code&gt;readUInt32BE()&lt;/code&gt; 는 빅 엔디안, &lt;code&gt;readUInt32LE()&lt;/code&gt; 은 리틀 엔디안을 반환).</target>
        </trans-unit>
        <trans-unit id="545500aca09845013eea94c5817eb7546fdb1447" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readBigUInt64BE()&lt;/code&gt; returns big endian, &lt;code&gt;readBigUInt64LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">지정된 엔디안 형식으로 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호없는 64 비트 정수를 읽습니다 ( &lt;code&gt;readBigUInt64BE()&lt;/code&gt; 는 빅 엔디안, &lt;code&gt;readBigUInt64LE()&lt;/code&gt; 는 리틀 엔디안을 반환).</target>
        </trans-unit>
        <trans-unit id="d6daccb70280e74a5b1c5281fe90fedadbd661ce" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 8-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;offset&lt;/code&gt; 에서 &lt;code&gt;buf&lt;/code&gt; 에서 부호없는 8 비트 정수를 읽습니다. .</target>
        </trans-unit>
        <trans-unit id="a20ddd6d2192086f3149736ef69715d774e55a15" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90caa657f3a7c78c1ac0e74e8cd60591760e588f" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="714505b70ae07fdd65953236a96d5c3d219da2f6" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4c1cb2f1f63ff46c613700e47daa38b6becac50" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="708b484f6ae8db20cbc80b98ce58edfccfc8742a" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baea91c0e117d276b5a89bba8fb9ac6d62019041" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Reads an unsigned, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="150da24c3abf9c4c64cc460c321ec1255e6333ae" translate="yes" xml:space="preserve">
          <source>Reads and validates a header (including the format version). May, for example, reject an invalid or unsupported wire format. In that case, an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="translated">헤더 (형식 버전 포함)를 읽고 확인합니다. 예를 들어, 유효하지 않거나 지원되지 않는 와이어 형식을 거부 할 수 있습니다. 이 경우 &lt;code&gt;Error&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="97575c02de70dda4247da0ea2a67276fef9666d6" translate="yes" xml:space="preserve">
          <source>Reads out a header on the request. The name is case-insensitive. The type of the return value depends on the arguments provided to &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt;&lt;code&gt;request.setHeader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요청시 헤더를 읽습니다. 이름은 대소 문자를 구분하지 않습니다. 리턴 값의 유형은 &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt; &lt;code&gt;request.setHeader()&lt;/code&gt; &lt;/a&gt; 제공된 인수에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="a371e801b9b6617b73258b9ef4b995e7d60c0151" translate="yes" xml:space="preserve">
          <source>Reads out a header that has already been queued but not sent to the client. The name is case-insensitive.</source>
          <target state="translated">이미 큐에 있지만 클라이언트로 전송되지 않은 헤더를 읽습니다. 이름은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a9d93232ab860196f9ba53fa70f189d0ed16e2f" translate="yes" xml:space="preserve">
          <source>Reads out a header that's already been queued but not sent to the client. The name is case-insensitive. The type of the return value depends on the arguments provided to &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이미 큐에 있지만 클라이언트로 전송되지 않은 헤더를 읽습니다. 이름은 대소 문자를 구분하지 않습니다. 리턴 값의 유형은 &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt; 제공된 인수에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="77ed5137d8e9579b44a6cab74cec4901b7acf6ad" translate="yes" xml:space="preserve">
          <source>Reads the contents of a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with an array of the names of the files in the directory excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="translated">디렉토리의 내용을 읽은 다음 &lt;code&gt;'.'&lt;/code&gt; 을 제외한 디렉토리의 파일 이름 배열로 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 . 그리고 &lt;code&gt;'..'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc0fe6fe29a25ab46444a3d3eb37f0c6a5fc70f1" translate="yes" xml:space="preserve">
          <source>Reads the underlying wire format version. Likely mostly to be useful to legacy code reading old wire format versions. May not be called before &lt;code&gt;.readHeader()&lt;/code&gt;.</source>
          <target state="translated">기본 와이어 형식 버전을 읽습니다. 오래된 와이어 형식 버전을 읽는 레거시 코드에 유용 할 것입니다. &lt;code&gt;.readHeader()&lt;/code&gt; 전에는 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3457427973a1a8aec098f23d0df9bd56be97853a" translate="yes" xml:space="preserve">
          <source>Receive a single message from a given &lt;code&gt;MessagePort&lt;/code&gt;. If no message is available, &lt;code&gt;undefined&lt;/code&gt; is returned, otherwise an object with a single &lt;code&gt;message&lt;/code&gt; property that contains the message payload, corresponding to the oldest message in the &lt;code&gt;MessagePort&lt;/code&gt;&amp;rsquo;s queue.</source>
          <target state="translated">지정된 &lt;code&gt;MessagePort&lt;/code&gt; 에서 단일 메시지를받습니다 . 사용 가능한 메시지가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환되고, 그렇지 않으면 &lt;code&gt;MessagePort&lt;/code&gt; 에서 가장 오래된 메시지에 해당하는 메시지 페이로드가 포함 된 단일 &lt;code&gt;message&lt;/code&gt; 속성을 가진 객체 큐 됩니다.</target>
        </trans-unit>
        <trans-unit id="91869fff46dfb0abe88a4d8fd2dd9e191e0ca4e9" translate="yes" xml:space="preserve">
          <source>Recent ECDH Changes</source>
          <target state="translated">최근 ECDH 변경</target>
        </trans-unit>
        <trans-unit id="1d85af69b48f964feb1715a89a342f94b3ad7510" translate="yes" xml:space="preserve">
          <source>Recent ECDH changes</source>
          <target state="translated">Recent ECDH changes</target>
        </trans-unit>
        <trans-unit id="067062e444eecf689ecb7f4ca7d9d324b38c3c8a" translate="yes" xml:space="preserve">
          <source>Recoverable Errors</source>
          <target state="translated">복구 가능한 오류</target>
        </trans-unit>
        <trans-unit id="2de988cb731df4437ddd49d61b6eec3a762206e7" translate="yes" xml:space="preserve">
          <source>Recoverable errors</source>
          <target state="translated">Recoverable errors</target>
        </trans-unit>
        <trans-unit id="51831c0535b85f30395c9b6b76211c69b9010388" translate="yes" xml:space="preserve">
          <source>Recursion stops when both sides differ or both sides encounter a circular reference.</source>
          <target state="translated">양쪽이 다르거 나 양쪽이 원형 참조를 만나면 재귀가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="f4d3b515fac19a2424b2229ce822e329ed03ca12" translate="yes" xml:space="preserve">
          <source>Redirected dependencies can provide attenuated or modified functionality as fits the application. For example, log data about timing of function durations by wrapping the original:</source>
          <target state="translated">Redirected dependencies can provide attenuated or modified functionality as fits the application. For example, log data about timing of function durations by wrapping the original:</target>
        </trans-unit>
        <trans-unit id="b84857d524e01113de84de33d4b6d0c26e26c415" translate="yes" xml:space="preserve">
          <source>Redirection does not prevent access to APIs through means such as direct access to &lt;code&gt;require.cache&lt;/code&gt; or through &lt;code&gt;module.constructor&lt;/code&gt; which allow access to loading modules. Policy redirection only affects specifiers to &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;. Other means, such as to prevent undesired access to APIs through variables, are necessary to lock down that path of loading modules.</source>
          <target state="translated">Redirection does not prevent access to APIs through means such as direct access to &lt;code&gt;require.cache&lt;/code&gt; or through &lt;code&gt;module.constructor&lt;/code&gt; which allow access to loading modules. Policy redirection only affects specifiers to &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; . Other means, such as to prevent undesired access to APIs through variables, are necessary to lock down that path of loading modules.</target>
        </trans-unit>
        <trans-unit id="62e28e25efd5c5d02281bc8a8eece63785358f21" translate="yes" xml:space="preserve">
          <source>Redirection will not prevent access to APIs through means such as direct access to &lt;code&gt;require.cache&lt;/code&gt; and/or through &lt;code&gt;module.constructor&lt;/code&gt; which allow access to loading modules. Policy redirection only affect specifiers to &lt;code&gt;require()&lt;/code&gt;. Other means such as to prevent undesired access to APIs through variables are necessary to lock down that path of loading modules.</source>
          <target state="translated">리디렉션은 &lt;code&gt;require.cache&lt;/code&gt; 에 대한 직접 액세스 및 / 또는 로드 모듈에 대한 액세스를 허용하는 &lt;code&gt;module.constructor&lt;/code&gt; 를 통한 API를 통한 액세스를 막지 않습니다 . 정책 리디렉션은 &lt;code&gt;require()&lt;/code&gt; 지정자에만 영향을줍니다 . 로드 모듈의 경로를 잠 그려면 변수를 통해 API에 원하지 않는 액세스를 방지하는 것과 같은 다른 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6f0e657010a4b37c8f1ef6590554b5c7b94a1714" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveMx()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveMx()&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="1689b08e612cf84f75582f3ca9ff01353f4e359e" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvenaptr_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveNaptr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvenaptr_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveNaptr()&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="0c278e2b9bee058e8c62d811563533125002ec16" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvesoa_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveSoa()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvesoa_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveSoa()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4912b44f79a79f0d6185626cffbbc5c97905a706" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvesrv_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveSrv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvesrv_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveSrv()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="550021836a4206599a99972c5f7a71f3ce2d533d" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvemx_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveMx()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvemx_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveMx()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9a6abda979ad411f7579d56446cb9d353cae3d45" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvenaptr_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveNaptr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvenaptr_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveNaptr()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e70832b6b6035a3287d9dc0c23c95fa278e499b" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvesoa_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveSoa()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvesoa_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveSoa()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ce5cc7ba46e57b41d1977f0f5f0b647b47de083" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvesrv_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveSrv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvesrv_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveSrv()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="948c1fe9289ccb8e632edbe9cddbb21004b7e4c3" translate="yes" xml:space="preserve">
          <source>Reference counting of thread-safe functions</source>
          <target state="translated">Reference counting of thread-safe functions</target>
        </trans-unit>
        <trans-unit id="8c5860a129288d69ad5c94907be8821c7e3ab849" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket.</source>
          <target state="translated">Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket.</target>
        </trans-unit>
        <trans-unit id="699eed09db52dd6a836543a03b9da86a4ed4de9a" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. After &lt;code&gt;response.end()&lt;/code&gt;, the property is nulled.</source>
          <target state="translated">Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. After &lt;code&gt;response.end()&lt;/code&gt; , the property is nulled.</target>
        </trans-unit>
        <trans-unit id="143dec086491ddb9a3bff3d401cdad790d01ad5b" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. After &lt;code&gt;response.end()&lt;/code&gt;, the property is nulled. The &lt;code&gt;socket&lt;/code&gt; may also be accessed via &lt;code&gt;response.connection&lt;/code&gt;.</source>
          <target state="translated">기본 소켓에 대한 참조 일반적으로 사용자는이 속성에 액세스하지 않을 것입니다. 특히, 소켓은 프로토콜 파서가 소켓에 연결하는 방식 때문에 &lt;code&gt;'readable'&lt;/code&gt; 이벤트를 생성 하지 않습니다 . &lt;code&gt;response.end()&lt;/code&gt; 후에 는 속성이 null입니다. &lt;code&gt;socket&lt;/code&gt; 도를 통해 액세스 할 수 있습니다 &lt;code&gt;response.connection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed271f56353159b152694dd33727d0978922795" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. The &lt;code&gt;socket&lt;/code&gt; may also be accessed via &lt;code&gt;request.connection&lt;/code&gt;.</source>
          <target state="translated">기본 소켓에 대한 참조 일반적으로 사용자는이 속성에 액세스하지 않을 것입니다. 특히, 소켓은 프로토콜 파서가 소켓에 연결하는 방식 때문에 &lt;code&gt;'readable'&lt;/code&gt; 이벤트를 생성 하지 않습니다 . &lt;code&gt;socket&lt;/code&gt; 도를 통해 액세스 할 수 있습니다 &lt;code&gt;request.connection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2eca1b4d68aeba600d4d3d5d19a63fddf76c2ea9" translate="yes" xml:space="preserve">
          <source>ReferenceError</source>
          <target state="translated">ReferenceError</target>
        </trans-unit>
        <trans-unit id="f4277e0b175a11243c7e452a046c6d7e79543f95" translate="yes" xml:space="preserve">
          <source>References can be created with an initial reference count. The count can then be modified through &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt;&lt;code&gt;napi_reference_unref&lt;/code&gt;&lt;/a&gt;. If an object is collected while the count for a reference is 0, all subsequent calls to get the object associated with the reference &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt;&lt;code&gt;napi_get_reference_value&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;NULL&lt;/code&gt; for the returned &lt;code&gt;napi_value&lt;/code&gt;. An attempt to call &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; for a reference whose object has been collected results in an error.</source>
          <target state="translated">References can be created with an initial reference count. The count can then be modified through &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt; &lt;code&gt;napi_reference_unref&lt;/code&gt; &lt;/a&gt;. If an object is collected while the count for a reference is 0, all subsequent calls to get the object associated with the reference &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt; &lt;code&gt;napi_get_reference_value&lt;/code&gt; &lt;/a&gt; will return &lt;code&gt;NULL&lt;/code&gt; for the returned &lt;code&gt;napi_value&lt;/code&gt; . An attempt to call &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt; for a reference whose object has been collected results in an error.</target>
        </trans-unit>
        <trans-unit id="87ce1307d1b1792207830310e0c6a4bb721d2994" translate="yes" xml:space="preserve">
          <source>References can be created with an initial reference count. The count can then be modified through &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt;&lt;code&gt;napi_reference_unref&lt;/code&gt;&lt;/a&gt;. If an object is collected while the count for a reference is 0, all subsequent calls to get the object associated with the reference &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt;&lt;code&gt;napi_get_reference_value&lt;/code&gt;&lt;/a&gt; will return NULL for the returned &lt;code&gt;napi_value&lt;/code&gt;. An attempt to call &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; for a reference whose object has been collected will result in an error.</source>
          <target state="translated">초기 참조 횟수로 참조를 만들 수 있습니다. 그런 다음 &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt; &lt;code&gt;napi_reference_unref&lt;/code&gt; 를&lt;/a&gt; 통해 개수를 수정할 수 있습니다 . 참조 카운트가 0 인 동안 오브젝트가 수집되면 참조 &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt; &lt;code&gt;napi_get_reference_value&lt;/code&gt; &lt;/a&gt; 와 연관된 오브젝트를 가져 오는 모든 후속 호출 은 리턴 된 &lt;code&gt;napi_value&lt;/code&gt; 에 대해 NULL을 리턴 합니다 . 객체가 수집 된 참조에 대해 &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt; 를 호출하려고 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5f42708045e9b577a8cfc64b8866cddaa2d17159" translate="yes" xml:space="preserve">
          <source>References must be deleted once they are no longer required by the addon. When a reference is deleted it will no longer prevent the corresponding object from being collected. Failure to delete a persistent reference will result in a 'memory leak' with both the native memory for the persistent reference and the corresponding object on the heap being retained forever.</source>
          <target state="translated">애드온에 더 이상 필요하지 않은 참조는 삭제해야합니다. 참조가 삭제되면 해당 오브젝트가 더 이상 수집되지 않습니다. 영구 참조를 삭제하지 않으면 영구 참조의 기본 메모리와 힙의 해당 오브젝트가 모두 영구적으로 유지되는 '메모리 누수'가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78d3b8603eb59ada22c0147e306d35d4a4b79a8b" translate="yes" xml:space="preserve">
          <source>References must be deleted once they are no longer required by the addon. When a reference is deleted, it will no longer prevent the corresponding object from being collected. Failure to delete a persistent reference results in a 'memory leak' with both the native memory for the persistent reference and the corresponding object on the heap being retained forever.</source>
          <target state="translated">References must be deleted once they are no longer required by the addon. When a reference is deleted, it will no longer prevent the corresponding object from being collected. Failure to delete a persistent reference results in a 'memory leak' with both the native memory for the persistent reference and the corresponding object on the heap being retained forever.</target>
        </trans-unit>
        <trans-unit id="6807f7e84d57ae256bd324368a502c1f30075849" translate="yes" xml:space="preserve">
          <source>References to &lt;code&gt;__filename&lt;/code&gt; within &lt;code&gt;b.js&lt;/code&gt; will return &lt;code&gt;/Users/mjr/app/node_modules/b/b.js&lt;/code&gt; while references to &lt;code&gt;__filename&lt;/code&gt; within &lt;code&gt;a.js&lt;/code&gt; will return &lt;code&gt;/Users/mjr/app/a.js&lt;/code&gt;.</source>
          <target state="translated">에 대한 참조 &lt;code&gt;__filename&lt;/code&gt; 내 &lt;code&gt;b.js&lt;/code&gt; 가 반환됩니다 &lt;code&gt;/Users/mjr/app/node_modules/b/b.js&lt;/code&gt; 을 참조하면서 &lt;code&gt;__filename&lt;/code&gt; 내 &lt;code&gt;a.js&lt;/code&gt; 가 반환됩니다 &lt;code&gt;/Users/mjr/app/a.js&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="e2d6d3de052de95b7c06191007b2659842ad5413" translate="yes" xml:space="preserve">
          <source>References to objects with a lifespan longer than that of the native method</source>
          <target state="translated">기본 메소드보다 수명이 긴 오브젝트에 대한 참조</target>
        </trans-unit>
        <trans-unit id="486e5b60c85424f27d906f0dbb76c17db2b5dc30" translate="yes" xml:space="preserve">
          <source>Refused Stream</source>
          <target state="translated">거부 된 스트림</target>
        </trans-unit>
        <trans-unit id="3f0a03433d4e24a0f0fdbd1209a19dda4e2b4c5e" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;fun&lt;/code&gt; as a function to be run with the &lt;code&gt;arg&lt;/code&gt; parameter once the current Node.js environment exits.</source>
          <target state="translated">현재 Node.js 환경이 종료되면 &lt;code&gt;arg&lt;/code&gt; 매개 변수 와 함께 실행할 함수로 &lt;code&gt;fun&lt;/code&gt; 을 등록 합니다.</target>
        </trans-unit>
        <trans-unit id="49f360dc5b5dc137b4bb8acbdb572dcef53d306e" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;hook&lt;/code&gt;, which is a function of type &lt;a href=&quot;#n_api_napi_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;, as a function to be run with the &lt;code&gt;remove_handle&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; parameters once the current Node.js environment exits.</source>
          <target state="translated">Registers &lt;code&gt;hook&lt;/code&gt; , which is a function of type &lt;a href=&quot;#n_api_napi_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_async_cleanup_hook&lt;/code&gt; &lt;/a&gt;, as a function to be run with the &lt;code&gt;remove_handle&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; parameters once the current Node.js environment exits.</target>
        </trans-unit>
        <trans-unit id="9563ce6b6a0d8d1b0f20d724673c8f497562c28f" translate="yes" xml:space="preserve">
          <source>Registers exit hooks that run after the event loop has ended but before the VM is killed.</source>
          <target state="translated">이벤트 루프가 종료 된 후 VM이 종료되기 전에 실행되는 종료 후크를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="025c46f6fdf88b92b28080b7b553ad9dd747013f" translate="yes" xml:space="preserve">
          <source>Registers functions to be called for different lifetime events of each async operation.</source>
          <target state="translated">각 비동기 작업의 다른 수명 이벤트에 대해 호출 할 함수를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="ba6865d6a340dd4b2fee2f3fb721da208de17d62" translate="yes" xml:space="preserve">
          <source>Rejected after resolve.</source>
          <target state="translated">해결 후 거부되었습니다.</target>
        </trans-unit>
        <trans-unit id="480085d8cd1a12ca9bfb88811776098e07fc38b8" translate="yes" xml:space="preserve">
          <source>Rejected more than once.</source>
          <target state="translated">두 번 이상 거부되었습니다.</target>
        </trans-unit>
        <trans-unit id="f91a207f75395e0de504575d818372fe57f66ef1" translate="yes" xml:space="preserve">
          <source>Relative and absolute URL resolution</source>
          <target state="translated">상대 및 절대 URL 확인</target>
        </trans-unit>
        <trans-unit id="d65b57a74928a0be4f660454d2b48888cccb0bba" translate="yes" xml:space="preserve">
          <source>Relative targets are relative to the link&amp;rsquo;s parent directory.</source>
          <target state="translated">Relative targets are relative to the link&amp;rsquo;s parent directory.</target>
        </trans-unit>
        <trans-unit id="ad12364d0fe9e947eddc76e791d6924658fc1767" translate="yes" xml:space="preserve">
          <source>Removal of &lt;code&gt;importModuleDynamically&lt;/code&gt; due to compatibility issues.</source>
          <target state="translated">Removal of &lt;code&gt;importModuleDynamically&lt;/code&gt; due to compatibility issues.</target>
        </trans-unit>
        <trans-unit id="ee53e06692c8f38b41e9c247511556d08d525567" translate="yes" xml:space="preserve">
          <source>Remove all name-value pairs whose name is &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">name이 &lt;code&gt;name&lt;/code&gt; 인 모든 이름-값 쌍을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="9118b5c0a30a0a081414d34e6dc112bb77f3e34a" translate="yes" xml:space="preserve">
          <source>Remove max limit of &lt;code&gt;crlfDelay&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;crlfDelay&lt;/code&gt; 옵션 의 최대 한계를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f5afc69c7213aff1b31ed6a1468011f5d56dd8c" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;env&lt;/code&gt; parameter.</source>
          <target state="translated">Removed &lt;code&gt;env&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="de74ec8f1f64217caeb726e873039874abce386a" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;noAssert&lt;/code&gt; and no implicit coercion of the offset and &lt;code&gt;byteLength&lt;/code&gt; to &lt;code&gt;uint32&lt;/code&gt; anymore.</source>
          <target state="translated">&lt;code&gt;noAssert&lt;/code&gt; 를 제거 하고 더 이상 오프셋과 &lt;code&gt;byteLength&lt;/code&gt; 를 &lt;code&gt;uint32&lt;/code&gt; 로 강제 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="208f636ea64100a6bd07324c8f534918ff1764b8" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;noAssert&lt;/code&gt; and no implicit coercion of the offset to &lt;code&gt;uint32&lt;/code&gt; anymore.</source>
          <target state="translated">&lt;code&gt;noAssert&lt;/code&gt; 가 제거 되었으며 &lt;code&gt;uint32&lt;/code&gt; 에 대한 오프셋의 암시 적 강제 변환이 더 이상 제거 되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3dae0344cce2d5e6295abe6239df3bcdf9694e5f" translate="yes" xml:space="preserve">
          <source>Removed functionality.</source>
          <target state="translated">기능이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="4f26fbeadc3581562cd5dd9ca922ad8e40ebf216" translate="yes" xml:space="preserve">
          <source>Removed in: v10.12.0</source>
          <target state="translated">v10.12.0에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd823364d875378b9943c2c16f5ae195223dfe0f" translate="yes" xml:space="preserve">
          <source>Removed the deprecated &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;raws&lt;/code&gt; encodings.</source>
          <target state="translated">사용되지 않는 제거 &lt;code&gt;raw&lt;/code&gt; 및 &lt;code&gt;raws&lt;/code&gt; 인코딩.</target>
        </trans-unit>
        <trans-unit id="e8aa4ed70c6a68bd9f873cfc51d2791a8ac258ba" translate="yes" xml:space="preserve">
          <source>Removes a header that has been queued for implicit sending.</source>
          <target state="translated">암시 적 전송을 위해 대기중인 헤더를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5a0b7378e6cb8f4474b74da59aa3512b94178b4f" translate="yes" xml:space="preserve">
          <source>Removes a header that's already defined into headers object.</source>
          <target state="translated">headers 객체에 이미 정의 된 헤더를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="14ab31f14a2b24400605785232d5b77e4291cd5b" translate="yes" xml:space="preserve">
          <source>Removes a header that's queued for implicit sending.</source>
          <target state="translated">암시 적 전송을 위해 대기중인 헤더를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="47cc856ca9392ee0076bf9a7023dd004b3a6953f" translate="yes" xml:space="preserve">
          <source>Removes all listeners, or those of the specified &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">모든 리스너 또는 지정된 &lt;code&gt;eventName&lt;/code&gt; 리스너를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="ad958ec42253c0777e7c7cd34f43c56ef6beb35e" translate="yes" xml:space="preserve">
          <source>Removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). Resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments on success.</source>
          <target state="translated">Removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). Resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments on success.</target>
        </trans-unit>
        <trans-unit id="f3b4271cc4ce1d0bd826613a541e11a87e7c55f4" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;listener&lt;/code&gt; from the list of handlers for event &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">Removes the &lt;code&gt;listener&lt;/code&gt; from the list of handlers for event &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a406d49e49c432bf46bd86a5a72a71da2b54502a" translate="yes" xml:space="preserve">
          <source>Removes the directory identified by &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 로 식별 된 디렉토리를 제거한 다음 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="8cc322fa17c26da2aed60940444a7334545e1e60" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;listener&lt;/code&gt; from the listener array for the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 리스너 배열에서 지정된 &lt;code&gt;listener&lt;/code&gt; 를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="31f9d0a7b059e1db3d5493d4bcc44201ec942512" translate="yes" xml:space="preserve">
          <source>Removing this hook can be done by using &lt;a href=&quot;#n_api_napi_remove_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;. Typically, that happens when the resource for which this hook was added is being torn down anyway.</source>
          <target state="translated">Removing this hook can be done by using &lt;a href=&quot;#n_api_napi_remove_env_cleanup_hook&quot;&gt; &lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt; &lt;/a&gt;. Typically, that happens when the resource for which this hook was added is being torn down anyway.</target>
        </trans-unit>
        <trans-unit id="fd6ebfcb69f72d96b2b9d228d3e963eced720907" translate="yes" xml:space="preserve">
          <source>Removing this hook can be done by using &lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt;. Typically, that happens when the resource for which this hook was added is being torn down anyway.</source>
          <target state="translated">&lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt; 을 사용 하여이 후크를 제거 할 수 있습니다 . 일반적으로이 후크가 추가 된 리소스가 어쨌든 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5a13622503343612316b4482232aa24faa89fdd4" translate="yes" xml:space="preserve">
          <source>Renamed from &lt;code&gt;currentId&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;currentId&lt;/code&gt; 에서 이름이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="0ef11194a1bed32126c4889dae1150ad53122f33" translate="yes" xml:space="preserve">
          <source>Renamed from &lt;code&gt;currentId&lt;/code&gt;.</source>
          <target state="translated">Renamed from &lt;code&gt;currentId&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f955c95b534cb974ec6da7bc1d9810ff2375c702" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;oldPath&lt;/code&gt; to &lt;code&gt;newPath&lt;/code&gt; and resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;oldPath&lt;/code&gt; 의 이름 을 &lt;code&gt;newPath&lt;/code&gt; 로바꾸고 성공시 인수없이 &lt;code&gt;Promise&lt;/code&gt; 을 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="ee45c30326b750387589752c0f75e1dd87ddc7e4" translate="yes" xml:space="preserve">
          <source>Report</source>
          <target state="translated">Report</target>
        </trans-unit>
        <trans-unit id="d5438edddf74651406b54e7da7089349a9272e6c" translate="yes" xml:space="preserve">
          <source>Reports will include information on any Workers that are children of the current thread as part of the &lt;code&gt;workers&lt;/code&gt; section, with each Worker generating a report in the standard report format.</source>
          <target state="translated">Reports will include information on any Workers that are children of the current thread as part of the &lt;code&gt;workers&lt;/code&gt; section, with each Worker generating a report in the standard report format.</target>
        </trans-unit>
        <trans-unit id="5cb2a10e8758980a2aaa5ce15e1b83561bc0de66" translate="yes" xml:space="preserve">
          <source>Represents the largest &lt;code&gt;length&lt;/code&gt; that a &lt;code&gt;string&lt;/code&gt; primitive can have, counted in UTF-16 code units.</source>
          <target state="translated">UTF-16 코드 단위로 계산 된 &lt;code&gt;string&lt;/code&gt; 기본 요소가 가질 수 있는 최대 &lt;code&gt;length&lt;/code&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="61c03071a19d7828ffdb7e7019c925ea60613acd" translate="yes" xml:space="preserve">
          <source>Represents the readable side of a TTY. In normal circumstances &lt;a href=&quot;process#process_process_stdin&quot;&gt;&lt;code&gt;process.stdin&lt;/code&gt;&lt;/a&gt; will be the only &lt;code&gt;tty.ReadStream&lt;/code&gt; instance in a Node.js process and there should be no reason to create additional instances.</source>
          <target state="translated">Represents the readable side of a TTY. In normal circumstances &lt;a href=&quot;process#process_process_stdin&quot;&gt; &lt;code&gt;process.stdin&lt;/code&gt; &lt;/a&gt; will be the only &lt;code&gt;tty.ReadStream&lt;/code&gt; instance in a Node.js process and there should be no reason to create additional instances.</target>
        </trans-unit>
        <trans-unit id="de90bb395892f0a63050b34157d1cea4c4d7653d" translate="yes" xml:space="preserve">
          <source>Represents the writable side of a TTY. In normal circumstances, &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#process_process_stderr&quot;&gt;&lt;code&gt;process.stderr&lt;/code&gt;&lt;/a&gt; will be the only &lt;code&gt;tty.WriteStream&lt;/code&gt; instances created for a Node.js process and there should be no reason to create additional instances.</source>
          <target state="translated">Represents the writable side of a TTY. In normal circumstances, &lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;process#process_process_stderr&quot;&gt; &lt;code&gt;process.stderr&lt;/code&gt; &lt;/a&gt; will be the only &lt;code&gt;tty.WriteStream&lt;/code&gt; instances created for a Node.js process and there should be no reason to create additional instances.</target>
        </trans-unit>
        <trans-unit id="1c662d5530f12430fdecb0881b180be006e48301" translate="yes" xml:space="preserve">
          <source>Request URL string. This contains only the URL that is present in the actual HTTP request. If the request is:</source>
          <target state="translated">요청 URL 문자열. 실제 HTTP 요청에 존재하는 URL 만 포함합니다. 요청이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="3ab3941bdee524dd3cd5882b2b086cc97e9b933f" translate="yes" xml:space="preserve">
          <source>Request URL string. This contains only the URL that is present in the actual HTTP request. Take the following request:</source>
          <target state="translated">Request URL string. This contains only the URL that is present in the actual HTTP request. Take the following request:</target>
        </trans-unit>
        <trans-unit id="2b3c10609231468fa578ee99cb4a43f3634bf23c" translate="yes" xml:space="preserve">
          <source>Reset the compressor/decompressor to factory defaults. Only applicable to the inflate and deflate algorithms.</source>
          <target state="translated">컴프레서 / 압축 해 제기를 공장 기본값으로 재설정하십시오. 팽창 및 수축 알고리즘에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="db3d4094dbadcebd79b1794c5337f64facdbc701" translate="yes" xml:space="preserve">
          <source>Resets the collected histogram data.</source>
          <target state="translated">수집 된 히스토그램 데이터를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="64ad7d46df157e7bdc1f26933e813f5571d92e46" translate="yes" xml:space="preserve">
          <source>Resets the internal counter specific to &lt;code&gt;label&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; 특정의 내부 카운터를 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7aba40a3872ae97a59cb607688d2ac64c68a401c" translate="yes" xml:space="preserve">
          <source>Resolution Algorithm</source>
          <target state="translated">해상도 알고리즘</target>
        </trans-unit>
        <trans-unit id="ed85a9c998ec9600778f949e55641f6ff19bba5c" translate="yes" xml:space="preserve">
          <source>Resolution algorithm</source>
          <target state="translated">Resolution algorithm</target>
        </trans-unit>
        <trans-unit id="c6a168e6ae4f3cec426776f7c35842fd34a04fcb" translate="yes" xml:space="preserve">
          <source>Resolve all undefined symbols in the library before dlopen(3) returns.</source>
          <target state="translated">dlopen (3)이 리턴되기 전에 라이브러리에서 정의되지 않은 모든 기호를 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="24fbb23632a725673f71fda81f293032178e773d" translate="yes" xml:space="preserve">
          <source>Resolve hook</source>
          <target state="translated">후크 해결</target>
        </trans-unit>
        <trans-unit id="b7dc3600181a3299713c18736dcc47c30c09d536" translate="yes" xml:space="preserve">
          <source>Resolved after reject.</source>
          <target state="translated">거부 후 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="fe6423d8b774ab42e2899806fade7814f17b6993" translate="yes" xml:space="preserve">
          <source>Resolved more than once.</source>
          <target state="translated">두 번 이상 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="30f1eb57d2c3fa3a7e0b93c43e4cd261c1d14344" translate="yes" xml:space="preserve">
          <source>Resolver Algorithm</source>
          <target state="translated">리졸버 알고리즘</target>
        </trans-unit>
        <trans-unit id="a702841308e11bf27f71e1a74cdd7fb83aaa18fe" translate="yes" xml:space="preserve">
          <source>Resolver Algorithm Specification</source>
          <target state="translated">Resolver Algorithm Specification</target>
        </trans-unit>
        <trans-unit id="04243d78153ec0127d54f41424cacb5f3c944288" translate="yes" xml:space="preserve">
          <source>Resolver algorithm</source>
          <target state="translated">Resolver algorithm</target>
        </trans-unit>
        <trans-unit id="6aac88644eb90552ba03cb6989809ab486566904" translate="yes" xml:space="preserve">
          <source>Resolver algorithm specification</source>
          <target state="translated">리졸버 알고리즘 사양</target>
        </trans-unit>
        <trans-unit id="ae90f97aaf56685ddb2e0390e67ea8cae6f53870" translate="yes" xml:space="preserve">
          <source>Resolves a host name (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into the first found A (IPv4) or AAAA (IPv6) record. All &lt;code&gt;option&lt;/code&gt; properties are optional. If &lt;code&gt;options&lt;/code&gt; is an integer, then it must be &lt;code&gt;4&lt;/code&gt; or &lt;code&gt;6&lt;/code&gt; &amp;ndash; if &lt;code&gt;options&lt;/code&gt; is not provided, then IPv4 and IPv6 addresses are both returned if found.</source>
          <target state="translated">Resolves a host name (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt; ) into the first found A (IPv4) or AAAA (IPv6) record. All &lt;code&gt;option&lt;/code&gt; properties are optional. If &lt;code&gt;options&lt;/code&gt; is an integer, then it must be &lt;code&gt;4&lt;/code&gt; or &lt;code&gt;6&lt;/code&gt; &amp;ndash; if &lt;code&gt;options&lt;/code&gt; is not provided, then IPv4 and IPv6 addresses are both returned if found.</target>
        </trans-unit>
        <trans-unit id="7633f27bc6ad5138d274b448ca1b4d0af2762059" translate="yes" xml:space="preserve">
          <source>Resolves a hostname (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into the first found A (IPv4) or AAAA (IPv6) record. All &lt;code&gt;option&lt;/code&gt; properties are optional. If &lt;code&gt;options&lt;/code&gt; is an integer, then it must be &lt;code&gt;4&lt;/code&gt; or &lt;code&gt;6&lt;/code&gt; &amp;ndash; if &lt;code&gt;options&lt;/code&gt; is not provided, then IPv4 and IPv6 addresses are both returned if found.</source>
          <target state="translated">호스트 이름 (예 : &lt;code&gt;'nodejs.org'&lt;/code&gt; )을 첫 번째 발견 된 A (IPv4) 또는 AAAA (IPv6) 레코드로 분석합니다. 모든 &lt;code&gt;option&lt;/code&gt; 속성은 선택 사항입니다. 경우 &lt;code&gt;options&lt;/code&gt; 정수, 그것은해야 &lt;code&gt;4&lt;/code&gt; 또는 &lt;code&gt;6&lt;/code&gt; 경우 - &lt;code&gt;options&lt;/code&gt; 찾을 경우 다음 IPv4 및 IPv6 주소가 모두 반환됩니다 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11f42a3795a26884c3a18acf61b1f3387f723b16" translate="yes" xml:space="preserve">
          <source>Resolves the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; into a host name and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</source>
          <target state="translated">Resolves the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; into a host name and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</target>
        </trans-unit>
        <trans-unit id="08e1d2d118e7eb0a81c52289da289dfec9abfbfc" translate="yes" xml:space="preserve">
          <source>Resolves the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; into a hostname and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</source>
          <target state="translated">운영 체제의 기본 &lt;code&gt;getnameinfo&lt;/code&gt; 구현을 사용하여 지정된 &lt;code&gt;address&lt;/code&gt; 와 &lt;code&gt;port&lt;/code&gt; 를 호스트 이름과 서비스로 해석 합니다.</target>
        </trans-unit>
        <trans-unit id="6811650af7c828025da4acabc8d4bf9999181ba5" translate="yes" xml:space="preserve">
          <source>Resource objects returned by &lt;code&gt;executionAsyncResource()&lt;/code&gt; are most often internal Node.js handle objects with undocumented APIs. Using any functions or properties on the object is likely to crash your application and should be avoided.</source>
          <target state="translated">Resource objects returned by &lt;code&gt;executionAsyncResource()&lt;/code&gt; are most often internal Node.js handle objects with undocumented APIs. Using any functions or properties on the object is likely to crash your application and should be avoided.</target>
        </trans-unit>
        <trans-unit id="3209d576f81c84414e8e8f7fb17ec71753c4c605" translate="yes" xml:space="preserve">
          <source>Result type</source>
          <target state="translated">결과 유형</target>
        </trans-unit>
        <trans-unit id="9fc5c69700d9a9c537cdd38a9b499942ad2a8977" translate="yes" xml:space="preserve">
          <source>Results in &lt;code&gt;process.execArgv&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;process.execArgv&lt;/code&gt; 결과 :</target>
        </trans-unit>
        <trans-unit id="7358da28fa39f752fc4c17b10b499d2099cee1fb" translate="yes" xml:space="preserve">
          <source>Resumes reading after a call to &lt;a href=&quot;#net_socket_pause&quot;&gt;&lt;code&gt;socket.pause()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_socket_pause&quot;&gt; &lt;code&gt;socket.pause()&lt;/code&gt; &lt;/a&gt; 호출 후 읽기를 재개합니다 .</target>
        </trans-unit>
        <trans-unit id="402840e8a9c08bfd3f2e41a34b14990e4b777b1a" translate="yes" xml:space="preserve">
          <source>Resumption using session identifiers is supported by most web browsers when making HTTPS requests.</source>
          <target state="translated">세션 식별자를 사용한 재개는 HTTPS 요청을 할 때 대부분의 웹 브라우저에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a6beeeb78733d214a3f8f7863f6669afd3e1189d" translate="yes" xml:space="preserve">
          <source>Resumption using session tickets is becoming commonly supported by many web browsers when making HTTPS requests.</source>
          <target state="translated">세션 티켓을 사용한 재개는 HTTPS 요청을 할 때 많은 웹 브라우저에서 일반적으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e07f6fe70a4d91e5062dde99b0f2db3e952e1977" translate="yes" xml:space="preserve">
          <source>Retrieves a native instance that was previously wrapped in a JavaScript object using &lt;code&gt;napi_wrap()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;napi_wrap()&lt;/code&gt; 사용하여 이전에 JavaScript 객체로 래핑 된 기본 인스턴스를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="ac2f36be4ce2d8046d907e815c0acf007c7f17d2" translate="yes" xml:space="preserve">
          <source>Retrieves a native instance that was previously wrapped in the JavaScript object &lt;code&gt;js_object&lt;/code&gt; using &lt;code&gt;napi_wrap()&lt;/code&gt; and removes the wrapping. If a finalize callback was associated with the wrapping, it will no longer be called when the JavaScript object becomes garbage-collected.</source>
          <target state="translated">&lt;code&gt;napi_wrap()&lt;/code&gt; 사용하여 JavaScript 객체 &lt;code&gt;js_object&lt;/code&gt; 로 이전에 랩핑 된 기본 인스턴스를 검색 하고 랩핑을 제거합니다. finalize 콜백이 줄 바꿈과 관련된 경우 JavaScript 객체가 가비지 수집 될 때 더 이상 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4184c813fcb4aac15c98cc136fcd37956c32d5ff" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; for the file.</source>
          <target state="translated">파일 의 &lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt; 를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="1b3a254075630b84faf8d95f7f64d248675d4d96" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;napi_would_deadlock&lt;/code&gt; when called with &lt;code&gt;napi_tsfn_blocking&lt;/code&gt; from the main thread or a worker thread and the queue is full.</source>
          <target state="translated">Return &lt;code&gt;napi_would_deadlock&lt;/code&gt; when called with &lt;code&gt;napi_tsfn_blocking&lt;/code&gt; from the main thread or a worker thread and the queue is full.</target>
        </trans-unit>
        <trans-unit id="67d4a7e39476f8bdb298e2a6d010b4bb6a81769a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;this&lt;/code&gt; from &lt;code&gt;writeHead()&lt;/code&gt; to allow chaining with &lt;code&gt;end()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end()&lt;/code&gt; 체인을 허용하려면 &lt;code&gt;writeHead()&lt;/code&gt; 에서 이것을 반환 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ab24f0ee2a18d66876671807f5f78a2d1247434" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;&quot;commonjs&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&quot;commonjs&quot;를&lt;/em&gt; 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="27dc905ead70c77231c8dbd71cbaf11b8e3960e1" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;&quot;module&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&quot;module&quot;을&lt;/em&gt; 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a53900dda92bd3e52310eac41e1ee025eba664a" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;legacyMainURL&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;legacyMainURL을&lt;/em&gt; 반환 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="61ee7020ac490772ac30f15e37c9d0f95bb4c316" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;pjson&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pjson을&lt;/em&gt; 리턴 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="40493ab4badb7b762e0f014ba960440e59fe60ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolved&lt;/em&gt;.</source>
          <target state="translated">반환 &lt;em&gt;해결되었습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="bf9571d5ae3200f1a4ebe4137dfe2d541a25e1f0" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolvedMain&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;resolvedMain을&lt;/em&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7ee7b059358ad691f1f6ad884fe8a7bee0e587ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolvedMatch&lt;/em&gt;.</source>
          <target state="translated">Return &lt;em&gt;resolvedMatch&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="af892f7d42d348b7dd0896a8b6b41be3c01c48c3" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;packageSubpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;).</source>
          <target state="translated">반환 &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt; ( &lt;em&gt;PACKAGEURL&lt;/em&gt; , &lt;em&gt;packageSubpath&lt;/em&gt; , &lt;em&gt;pjson.exports&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="612a5c5e5b606670540f8e08403492fd655e8061" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;target&lt;/em&gt;, &lt;em&gt;&quot;&quot;&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt; ( &lt;em&gt;packageURL&lt;/em&gt; , &lt;em&gt;target&lt;/em&gt; , &lt;em&gt;&quot;&quot;&lt;/em&gt; )를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="94bb434a79db60c70ef43965b2b64472f9fba18c" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;target&lt;/em&gt;, &lt;em&gt;subpath&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt; ( &lt;em&gt;packageURL&lt;/em&gt; , &lt;em&gt;target&lt;/em&gt; , &lt;em&gt;subpath&lt;/em&gt; )를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="efb5305cc294ba10cf3e9b764242b8542997f9f2" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; + &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</source>
          <target state="translated">Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; + &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</target>
        </trans-unit>
        <trans-unit id="8be492caa85a5af1ee5f6da07df9f56daad0e312" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced by &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</source>
          <target state="translated">Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced by &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</target>
        </trans-unit>
        <trans-unit id="40609974c5c72ad927a26bc91534ae15b7cff8ff" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="translated">반환 &lt;strong&gt;널 (null)&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="aea755e2ab440aa31185135c409dd518a163fb73" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;undefined&lt;/strong&gt;.</source>
          <target state="translated">Return &lt;strong&gt;undefined&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="f7d3c51d0a8c2c8e99bac646c9709abb5ffb27a7" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;napi_value&lt;/code&gt; back from the callback.</source>
          <target state="translated">콜백에서 &lt;code&gt;napi_value&lt;/code&gt; 를 다시 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d09466a68676bd47dead7153efe390c06f215b2" translate="yes" xml:space="preserve">
          <source>Return a random integer &lt;code&gt;n&lt;/code&gt; such that &lt;code&gt;min &amp;lt;= n &amp;lt; max&lt;/code&gt;. This implementation avoids &lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Modulo_bias&quot;&gt;modulo bias&lt;/a&gt;.</source>
          <target state="translated">Return a random integer &lt;code&gt;n&lt;/code&gt; such that &lt;code&gt;min &amp;lt;= n &amp;lt; max&lt;/code&gt; . This implementation avoids &lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Modulo_bias&quot;&gt;modulo bias&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d97db77b81b13f6e4eab70e655926c8838345ab1" translate="yes" xml:space="preserve">
          <source>Return codes for the compression/decompression functions. Negative values are errors, positive values are used for special but normal events.</source>
          <target state="translated">압축 / 압축 해제 기능에 대한 리턴 코드. 음수 값은 오류이며 양수 값은 특수하지만 정상 이벤트에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0f77bb2a55081f57868af6297ef637dce8dc13ce" translate="yes" xml:space="preserve">
          <source>Return or throw the last fallback resolution &lt;strong&gt;null&lt;/strong&gt; return or error.</source>
          <target state="translated">Return or throw the last fallback resolution &lt;strong&gt;null&lt;/strong&gt; return or error.</target>
        </trans-unit>
        <trans-unit id="0796223e5904f2004cc9c84cdda1c97140f83da1" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;packageSubpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</source>
          <target state="translated">Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;packageSubpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</target>
        </trans-unit>
        <trans-unit id="20c663fe154fda49ed1fce401117b2a6714b5411" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</source>
          <target state="translated">Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</target>
        </trans-unit>
        <trans-unit id="d7715161740732b40547bc687fa73ce9c3f2bfc0" translate="yes" xml:space="preserve">
          <source>Return the IETF cipher name as &lt;code&gt;standardName&lt;/code&gt;.</source>
          <target state="translated">Return the IETF cipher name as &lt;code&gt;standardName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18abf64727800799d857e05f66f4e3f2c2a87ac1" translate="yes" xml:space="preserve">
          <source>Return the URL of the active inspector, or &lt;code&gt;undefined&lt;/code&gt; if there is none.</source>
          <target state="translated">활성 관리자의 URL을 반환하거나 없는 경우 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="61784f517e10733ead68d5b879f29b51472e1253" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of &lt;em&gt;packageSubpath&lt;/em&gt; in &lt;em&gt;packageURL&lt;/em&gt;.</source>
          <target state="translated">의 URL 해상도 돌아 &lt;em&gt;packageSubpath&lt;/em&gt; 에서 &lt;em&gt;PACKAGEURL을&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="50cce687f1a8816a4c2b5f3419a26b081a28dbfe" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of &lt;em&gt;resolvedTarget&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced with &lt;em&gt;subpath&lt;/em&gt;.</source>
          <target state="translated">Return the URL resolution of &lt;em&gt;resolvedTarget&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced with &lt;em&gt;subpath&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="02ff4aa2a24dbefce68146e9d7999ca226842cf2" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of the concatenation of &lt;em&gt;subpath&lt;/em&gt; and &lt;em&gt;resolvedTarget&lt;/em&gt;.</source>
          <target state="translated">Return the URL resolution of the concatenation of &lt;em&gt;subpath&lt;/em&gt; and &lt;em&gt;resolvedTarget&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c4ded376427d36228ba9e609eb18cb96f5c44a1d" translate="yes" xml:space="preserve">
          <source>Return the minimum cipher version, instead of a fixed string (&lt;code&gt;'TLSv1/SSLv3'&lt;/code&gt;).</source>
          <target state="translated">고정 문자열 ( &lt;code&gt;'TLSv1/SSLv3'&lt;/code&gt; ) 대신 최소 암호 버전을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a0f3c07dd82f1166c105f5e9f302a6872c9cffc" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;false&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;false&lt;/strong&gt; }&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="986fc56b376869dd068a769fbdc33a64d8fc889b" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="a83789a2a48702bd675a5014be299313bda8a0ba" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved: &lt;strong&gt;null&lt;/strong&gt;, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">Return the object &lt;em&gt;{ resolved: &lt;strong&gt;null&lt;/strong&gt;, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c439b6050f467a5fd6cc42a86edd7ee5181db31e" translate="yes" xml:space="preserve">
          <source>Return the parsed JSON source of the file at &lt;em&gt;pjsonURL&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pjsonURL&lt;/em&gt; 에서 파일의 구문 분석 된 JSON 소스를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e98b9797506b2df5f0081349b994c7f7dba909d" translate="yes" xml:space="preserve">
          <source>Return the result applying the legacy &lt;strong&gt;LOAD_AS_DIRECTORY&lt;/strong&gt; CommonJS resolver to &lt;em&gt;packageURL&lt;/em&gt;, throwing a &lt;em&gt;Module Not Found&lt;/em&gt; error for no resolution.</source>
          <target state="translated">레거시 &lt;strong&gt;LOAD_AS_DIRECTORY&lt;/strong&gt; CommonJS 리졸버를 &lt;em&gt;packageURL에&lt;/em&gt; 적용한 결과를 반환하고 , 해결이 &lt;em&gt;없는&lt;/em&gt; 경우 &lt;em&gt;모듈을 찾을 수 없음&lt;/em&gt; 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f4a9d092d65c3ad0af4eafbea10490f890efa46d" translate="yes" xml:space="preserve">
          <source>Return the result of &lt;strong&gt;PACKAGE_MAIN_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;pjson&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_MAIN_RESOLVE&lt;/strong&gt; ( &lt;em&gt;packageURL&lt;/em&gt; , &lt;em&gt;pjson&lt;/em&gt; ) 의 결과를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a10f2337fcee347d4a14d464423ec2fe6b0c41f" translate="yes" xml:space="preserve">
          <source>Return the string &lt;em&gt;&quot;node:&quot;&lt;/em&gt; concatenated with &lt;em&gt;packageSpecifier&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;packageSpecifier&lt;/em&gt; 와 연결된 &lt;em&gt;&quot;node :&quot;&lt;/em&gt; 문자열을 리턴하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93b5d476bf0e0bb9381b0893a8415851a4a099e0" translate="yes" xml:space="preserve">
          <source>Return the value of &lt;code&gt;highWaterMark&lt;/code&gt; passed when constructing this &lt;code&gt;Writable&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Writable&lt;/code&gt; 를 구축 할 때에 건네진 &lt;code&gt;highWaterMark&lt;/code&gt; 값을 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="9d42e2f739c476b4724ed40443cd1bdc8b0b0c31" translate="yes" xml:space="preserve">
          <source>Return values</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="74d9648a1f382268d4c8f65f58523764be803b8b" translate="yes" xml:space="preserve">
          <source>Returned by &lt;a href=&quot;#tls_tls_createsecurepair_context_isserver_requestcert_rejectunauthorized_options&quot;&gt;&lt;code&gt;tls.createSecurePair()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tls_tls_createsecurepair_context_isserver_requestcert_rejectunauthorized_options&quot;&gt; &lt;code&gt;tls.createSecurePair()&lt;/code&gt; &lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="420b6ab0ef2aceed43ffa10c584355083c9b9029" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91e5be8b12b3ac52e7caeab3a75e9c306ff4349d" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; object, populating it with &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, and &lt;code&gt;cert&lt;/code&gt; on failure. On success, returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">실패시 &lt;code&gt;reason&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; 및 &lt;code&gt;cert&lt;/code&gt; 로 채워진&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; 객체를 반환 합니다 . 성공하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5d31334356baf98d9e927d499dc5d4a0b2905f3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42ba9945553c3bec262a78b4a6b0b86b881b546a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e7e95480ebf30137b762a3c77bc482cc9b451137" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-&lt;code&gt;BigInt&lt;/code&gt; is passed in it returns &lt;code&gt;napi_bigint_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . &lt;code&gt;BigInt&lt;/code&gt; 가 아닌 것이 전달되면 &lt;code&gt;napi_bigint_expected&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6490e121e190346eb949c231127b7b17ce3e190f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-&lt;code&gt;String&lt;/code&gt;&lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_string_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . &lt;code&gt;String&lt;/code&gt; 이 아닌 &lt;code&gt;napi_value&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_string_expected&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe03832713868cb497a4f8daae1c73856a340a5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-boolean &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_boolean_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 부울이 아닌 &lt;code&gt;napi_value&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_boolean_expected&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="01302c569fc84ae4d0477708f7191fa7853a34a1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-date &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_date_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 날짜가 아닌 &lt;code&gt;napi_value&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_date_expected&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="feabd2bb4096a677fb9e9ef279fa731422ed4ae1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-detachable &lt;code&gt;ArrayBuffer&lt;/code&gt; is passed in it returns &lt;code&gt;napi_detachable_arraybuffer_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 분리 &lt;code&gt;ArrayBuffer&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_detachable_arraybuffer_expected&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="31244b3acfd586ba675eb591e660183d97f41fd1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-external &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_invalid_arg&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 외부가 아닌 &lt;code&gt;napi_value&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_invalid_arg&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="23329f493b922c8c4a2dff1057e433060f168da7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-number &lt;code&gt;napi_value&lt;/code&gt; is passed in &lt;code&gt;napi_number_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 비 번호 경우 &lt;code&gt;napi_value&lt;/code&gt; 가 전달에 &lt;code&gt;napi_number_expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58a71a2991bdd62518b85281b0ee26ed6c433b0b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-number &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_number_expected&lt;/code&gt;.</source>
          <target state="translated">API가 성공하면 &lt;code&gt;napi_ok&lt;/code&gt; 를 반환합니다 . 숫자가 아닌 &lt;code&gt;napi_value&lt;/code&gt; 가 전달되면 &lt;code&gt;napi_number_expected&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="912046b5c0c3eff4b526fd9c1265c0a7605d1daf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;encoding&lt;/code&gt; contains a supported character encoding, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;encoding&lt;/code&gt; 지원되는 문자 인코딩, 또는 포함 &lt;code&gt;false&lt;/code&gt; , 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="5ba1c55d1e171d79aa0c489fbf4c605287dd3422" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;encoding&lt;/code&gt; is the name of a supported character encoding, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;encoding&lt;/code&gt; 지원되는 문자 인코딩, 또는의 이름을 &lt;code&gt;false&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="a48585932f64a3376abdd2c47c6fc8d706314a00" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;obj&lt;/code&gt; 가 A는 &lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="a83bc02a5fc390ffd39171e640645db7b7d4513a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if both &lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;otherBuffer&lt;/code&gt; have exactly the same bytes, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 두 경우 &lt;code&gt;buf&lt;/code&gt; 와 &lt;code&gt;otherBuffer&lt;/code&gt; 가 정확히 동일한 바이트가 &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="d405073b8dd050b974e8a247a7a58f2cc6de7f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if both &lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;otherBuffer&lt;/code&gt; have exactly the same bytes, &lt;code&gt;false&lt;/code&gt; otherwise. Equivalent to &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf.compare(otherBuffer) === 0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 와 &lt;code&gt;otherBuffer&lt;/code&gt; 가 정확히 같은 바이트를 가지고 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다. 등가 &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf.compare(otherBuffer) === 0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c74363a01bd33635ca70935b465f81abdc17463f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if input is a version 4 IP address, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 입력이 버전 4 IP 주소의 경우, 그렇지 않으면 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293882fadee11416122fe70ed15e68f42702edb6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if input is a version 6 IP address, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 입력이 버전 6 IP 주소의 경우, 그렇지 않으면 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7df2cb53778ad5c09b59473658953c42bd6f01ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a block device.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 블록 장치를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="48239c2b02562cb4d9584ca8c2f102296f26d742" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a character device.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 문자 장치를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="acb62bbca56fec68d599da18ea22540e2b6c6214" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a file system directory.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 파일 시스템 디렉토리를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="04f25724fe3f12c0436716ef4f77aa48bdc0f76f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a first-in-first-out (FIFO) pipe.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 선입 선출 (FIFO) 파이프를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="818b436682c0daa0cb2532a311a2ee51cdd1ff23" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a regular file.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 일반 파일을 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="648df0c44f2c9d68714003672ae601685a5a7be6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a socket.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 소켓을 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="61f3a2330b03e689eddc5f10458e200f8898e66a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a symbolic link.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; 객체가 심볼릭 링크를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="06dd61ec6166ec63a2c1decfe9f64a9e31122295" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a block device.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 블록 장치를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5a5f63a6cfd5978d9b19ef38fb1b2df3611d6c2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a character device.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 문자 장치를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f8d14d0aa6a6d02f13d4b7e5842e3787d6793053" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a file system directory.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 파일 시스템 디렉토리를 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="7e03465dae609471ab00113998dc3aaf405b5d14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a first-in-first-out (FIFO) pipe.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 선입 선출 (FIFO) 파이프를 설명하는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="3bbba6ccdbc98f57abe757077c945f5fdf172650" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a regular file.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 일반 파일을 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="74c8d66d60f566f4e487f6feb8f1002c51e3e20d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a socket.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 소켓을 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5e5a581c7f7c795e704c94eae44e820b3925fa79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a symbolic link.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; 객체가 심볼릭 링크를 설명 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="34a4efcc3b91389e895d7623498133e381ec263b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;writeStream&lt;/code&gt; supports at least as many colors as provided in &lt;code&gt;count&lt;/code&gt;. Minimum support is 2 (black and white).</source>
          <target state="translated">&lt;code&gt;writeStream&lt;/code&gt; 이 &lt;code&gt;count&lt;/code&gt; 에 제공된 수 이상의 색상을 지원 하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 최소 지원은 2 (흑백)입니다.</target>
        </trans-unit>
        <trans-unit id="ce963ad02fc7f7b8a079c4291f1f2a46690b8619" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the entire data was flushed successfully to the kernel buffer. Returns &lt;code&gt;false&lt;/code&gt; if all or part of the data was queued in user memory. &lt;a href=&quot;#net_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; will be emitted when the buffer is again free.</source>
          <target state="translated">전체 데이터가 커널 버퍼로 성공적으로 플러시되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 데이터의 전부 또는 일부가 사용자 메모리에 대기 된 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 버퍼가 다시 해제되면 &lt;a href=&quot;#net_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt; 이 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="276348c91eff63ca223f2f15967acbc96026fbdc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the entire data was flushed successfully to the kernel buffer. Returns &lt;code&gt;false&lt;/code&gt; if all or part of the data was queued in user memory. &lt;code&gt;'drain'&lt;/code&gt; will be emitted when the buffer is free again.</source>
          <target state="translated">전체 데이터가 커널 버퍼로 성공적으로 플러시되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 데이터의 전부 또는 일부가 사용자 메모리에 대기 된 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 버퍼가 다시 해제되면 &lt;code&gt;'drain'&lt;/code&gt; 이 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="1a263323063f8db241c7a78af74e645839d34a7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the event had listeners, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">이벤트에 리스너가 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0df8d5ed27d5e40fa6549bcb180c4ddde3c200ad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 인 경우에 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8b6a8e2068708c0a787cf9eb85cd09ef0a590d62" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;undefined&lt;/code&gt; 경우에 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e98bf54552be62359aaa6c0a4600d48c15165cbd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Boolean&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;Boolean&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5ee02b7f3f67da9ea4aab2d8f37774decdb82f02" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; A는 &lt;code&gt;Buffer&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7eb68872f279fb28b66c7311067cba32716303cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Date&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; A는 &lt;code&gt;Date&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="13b545705c012ef53a3f698e8724fa828f144ad0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Function&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; A는 &lt;code&gt;Function&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="786576f537835bb677a577429422eed9d2a0df86" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Number&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; A는 &lt;code&gt;Number&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5b704dd0e99f586eb7e183844e4ba75b2a2f5b80" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;RegExp&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;RegExp&lt;/code&gt; 인 경우에 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="407e623414879e14451f183b09bc8d24ea9ee4c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Symbol&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; A는 &lt;code&gt;Symbol&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe70afc521e84ff7ddccb86dbd1572568e6ec1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;string&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f81985b1de8afa8aa39b9fe0be8326fc5d80ea9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a primitive type. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;object&lt;/code&gt; 가 기본 유형 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f0068d56a7c46ebed38480ad97024f96da835a3e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; 입니다 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d13abc8b8314332f3313e017433598383f9e16c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is an &lt;code&gt;Array&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; 입니다 &lt;code&gt;Array&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5184cf2fc4889b4b3db75643697a5afcb8744203" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is strictly &lt;code&gt;null&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; 엄격 &lt;code&gt;null&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="194f3efb259177bb08cf8915711756496b2d3a54" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is strictly an &lt;code&gt;Object&lt;/code&gt;&lt;strong&gt;and&lt;/strong&gt; not a &lt;code&gt;Function&lt;/code&gt; (even though functions are objects in JavaScript). Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지정된 경우 &lt;code&gt;object&lt;/code&gt; 엄격하다 &lt;code&gt;Object&lt;/code&gt; &lt;strong&gt;와&lt;/strong&gt; 하지 않는 &lt;code&gt;Function&lt;/code&gt; (기능 객체가 자바 스크립트에도 불구하고). 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="14894e7ab47bf2f6ade6f9ef401fc1f28dece1bc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;oject&lt;/code&gt; object has been &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; using &lt;a href=&quot;#vm_vm_createcontext_contextobject_options&quot;&gt;&lt;code&gt;vm.createContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 주어진 경우 &lt;code&gt;oject&lt;/code&gt; 객체가되었습니다 &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; 사용 &lt;a href=&quot;#vm_vm_createcontext_contextobject_options&quot;&gt; &lt;code&gt;vm.createContext()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bfab5141fb6d9533fb194f62952086c49e46eeb3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;sandbox&lt;/code&gt; object has been &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; using &lt;a href=&quot;#vm_vm_createcontext_sandbox_options&quot;&gt;&lt;code&gt;vm.createContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 주어진 경우 &lt;code&gt;sandbox&lt;/code&gt; 객체가 된 &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; 사용 &lt;a href=&quot;#vm_vm_createcontext_sandbox_options&quot;&gt; &lt;code&gt;vm.createContext()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e442fed8858ab3568a2f501205a99e6557f747a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the header identified by &lt;code&gt;name&lt;/code&gt; is currently set in the outgoing headers. The header name matching is case-insensitive.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 으로 식별 된 헤더 가 현재 발신 헤더에 설정된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 헤더 이름 일치는 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8676260fe2a524103344cf76bf9692cd06df9462" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the path exists, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경로가 존재하는 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="b10e09e916d9e5d7423d4a9a04d037e6c6e3b14f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the peer certificate was signed by one of the CAs specified when creating the &lt;code&gt;tls.TLSSocket&lt;/code&gt; instance, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tls.TLSSocket&lt;/code&gt; 인스턴스를 작성할 때 지정된 CA 중 하나가 피어 인증서에 서명 한 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d979ce67fa8fc912118de321a335e72e91785756" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="7e2218d28bfc20ce7c16027ba849da041614969d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;code&gt;BigInt64Array&lt;/code&gt; instance.</source>
          <target state="translated">값이 &lt;code&gt;BigInt64Array&lt;/code&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="9a71b8bf4466e8da20235d42bee1074b60bc3667" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;code&gt;BigUint64Array&lt;/code&gt; instance.</source>
          <target state="translated">값이 &lt;code&gt;BigUint64Array&lt;/code&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="785a8decd76012464a77c6ff201ef68f1e442d68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a boolean object, e.g. created by &lt;code&gt;new Boolean()&lt;/code&gt;.</source>
          <target state="translated">값이 부울 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 ( 예 : &lt;code&gt;new Boolean()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e9d777564e8280dd92fe7bf879c1493c358437b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; instance. This does &lt;em&gt;not&lt;/em&gt; include &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instances. Usually, it is desirable to test for both; See &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt;&lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 는 포함 되지 &lt;em&gt;않습니다&lt;/em&gt; . 일반적으로 두 가지 모두를 테스트하는 것이 바람직합니다. &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt; &lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46a4a458ef06f69a52e4d467b655f17d4b91321a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="95a8829b37cc62df639f4cad050338a64cc7aa03" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d0beb0a41140a866fd845948a45a7fdad21eaf7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="a0853dc1e92d1be28c9b762a713fa968b1ae8dc6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0a2d9fc4e538fef1607eac08da400ea6bab78fa5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array&quot;&gt;&lt;code&gt;Float64Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array&quot;&gt; &lt;code&gt;Float64Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="381685b0086a635e974585de21b006fe9ba072a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array&quot;&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array&quot;&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="9c6039e3f7a5dafea69bb0fa22e6fe541270f088" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="8f5ade9e8bde9b6721d22e9c3351910696aa3e1f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array&quot;&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="1d02d0201b201f4f6285e2a30d4744fac035db06" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="2db25b1d49660162babe876e0be3068615ee807b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 인&lt;/a&gt; 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="af5361daba0540c3983283ca384636daa9203016" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6ab7ec82b84a92ac78c41795a8660fbc762c13ec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instance. This does &lt;em&gt;not&lt;/em&gt; include &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; instances. Usually, it is desirable to test for both; See &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt;&lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 인스턴스 는 포함 되지 &lt;em&gt;않습니다&lt;/em&gt; . 일반적으로 두 가지 모두를 테스트하는 것이 바람직합니다. &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt; &lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf667220ccedd11a105679db49bde30d96cb98e7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="57f86e99feca19e77059f26340ae09817ab29891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array&quot;&gt;&lt;code&gt;Uint16Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array&quot;&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="4866de8dbd9aee00ebab0b66968aff8eca72fa5c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array&quot;&gt;&lt;code&gt;Uint32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array&quot;&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="52128487d75957d98ccd96e1acd89159dafc07fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="4639c621526db92c2b5f776eebd50368dede70ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray&quot;&gt;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray&quot;&gt; &lt;code&gt;Uint8ClampedArray&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="43869c58a969fb26c2f6a81142b88851e1d3ecc4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="564226bfb0fc0f9f2b322b6d0d250a68617bee4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0cb7d867d2930d648f0bbf9f34e6a8000d345e83" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="3191f19eb059f70378a32281476692e94760a755" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a generator function. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">값이 생성기 함수 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . JavaScript 엔진이보고있는 내용 만보고합니다. 특히 트랜스 필 레이션 도구를 사용한 경우 반환 값이 원본 소스 코드와 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b101301698d2fbd006f1e5232d0b5ab65343c235" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a generator object as returned from a built-in generator function. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">내장 생성기 함수에서 반환 된 값이 생성기 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . JavaScript 엔진이보고있는 내용 만보고합니다. 특히 트랜스 필 레이션 도구를 사용한 경우 반환 값이 원본 소스 코드와 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a60e78d28d6919c6def76200b18070989f9aa410" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a native &lt;code&gt;External&lt;/code&gt; value.</source>
          <target state="translated">값이 기본 &lt;code&gt;External&lt;/code&gt; 값 &lt;code&gt;true&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="a86428fe19e2818340020c32c786bceb6c15bcdd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a number object, e.g. created by &lt;code&gt;new Number()&lt;/code&gt;.</source>
          <target state="translated">값이 숫자 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 ( 예 : &lt;code&gt;new Number()&lt;/code&gt; 작성 ) .</target>
        </trans-unit>
        <trans-unit id="d078b558fe9990a23e8bd4e04cc229cfd3e87353" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a regular expression object.</source>
          <target state="translated">값이 정규식 객체 &lt;code&gt;true&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="04820d210aee11f78d8f6ebd4f4369c4c9878dcb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a string object, e.g. created by &lt;code&gt;new String()&lt;/code&gt;.</source>
          <target state="translated">값이 문자열 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 ( 예 : &lt;code&gt;new String()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7fddb44ac889e46814e6a47a68fcab54ec0f747" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a symbol object, created by calling &lt;code&gt;Object()&lt;/code&gt; on a &lt;code&gt;Symbol&lt;/code&gt; primitive.</source>
          <target state="translated">값이 &lt;code&gt;Symbol&lt;/code&gt; 기본 요소 에서 &lt;code&gt;Object()&lt;/code&gt; 를 호출하여 작성된 기호 오브젝트 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="ae2d046d6307eeecfad15dbe0ce2387449ca0c3a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async function&lt;/a&gt;. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">값이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;비동기 함수 인&lt;/a&gt; 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . JavaScript 엔진이보고있는 내용 만보고합니다. 특히 트랜스 필 레이션 도구를 사용한 경우 반환 값이 원본 소스 코드와 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdfb29a07e3feb600ab95eed3f4c5465b3d4556e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an &lt;code&gt;arguments&lt;/code&gt; object.</source>
          <target state="translated">값이 &lt;code&gt;arguments&lt;/code&gt; 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="421220f1caa6bcf5d09904118d19904eba29f7de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of a &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;Module Namespace Object&lt;/a&gt;.</source>
          <target state="translated">값이 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;Module Namespace Object&lt;/a&gt; 의 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="06f92ac6dd6d93eeddd1e952804fbef3b74e556f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of a built-in &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 유형 의 인스턴스 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="adc10d62fefab2383e2e8c1fdba42db604befcf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; views, such as typed array objects or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;. Equivalent to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/isView&quot;&gt;&lt;code&gt;ArrayBuffer.isView()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 형식화 된 배열 개체 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 뷰 중 하나의 인스턴스 &lt;code&gt;true&lt;/code&gt; 반환 합니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/isView&quot;&gt; &lt;code&gt;ArrayBuffer.isView()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ca44b39caa3bacec6113495d3298ae10fc0e3c36" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an iterator returned for a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 인스턴스 에 대해 리턴 된 반복자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="4753788dd1d8c9b62099f552212bfb4d7642670b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an iterator returned for a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">값이 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 인스턴스 에 대해 리턴 된 반복자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0f4fb1e79ea81956c2b50639b3cc851585b90546" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is any boxed primitive object, e.g. created by &lt;code&gt;new Boolean()&lt;/code&gt;, &lt;code&gt;new String()&lt;/code&gt; or &lt;code&gt;Object(Symbol())&lt;/code&gt;.</source>
          <target state="translated">값이 boxed 기본 객체 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 ( 예 : &lt;code&gt;new Boolean()&lt;/code&gt; , &lt;code&gt;new String()&lt;/code&gt; 또는 &lt;code&gt;Object(Symbol())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="302b39171b929e5c6ddf8ea831569128861c8a14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is at least one name-value pair whose name is &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">name이 &lt;code&gt;name&lt;/code&gt; 인 이름-값 쌍이 하나 이상 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="08d0c2f34b1e650fe6a3e93fa011df3d9d222b22" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is deep strict equality between &lt;code&gt;val1&lt;/code&gt; and &lt;code&gt;val2&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val1&lt;/code&gt; 과 &lt;code&gt;val2&lt;/code&gt; 사이에 깊은 엄격 성이있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c5da7ae7d9cba5e1321061ca1271e2b2b012333" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="8cd10fd9bdaf7de603a180069f8fcd41f44537bf" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#http2_settings_object&quot;&gt;HTTP/2 Settings Object&lt;/a&gt; containing the deserialized settings from the given &lt;code&gt;Buffer&lt;/code&gt; as generated by &lt;code&gt;http2.getPackedSettings()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;http2.getPackedSettings()&lt;/code&gt; 의해 생성 된 지정된 &lt;code&gt;Buffer&lt;/code&gt; 에서 직렬화 해제 된 설정을 포함 하는 &lt;a href=&quot;#http2_settings_object&quot;&gt;HTTP / 2 설정 오브젝트&lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2cf79f58f261d9563b0bb87a960f2a4fb191efeb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Buffer&lt;/code&gt; instance containing serialized representation of the given HTTP/2 settings as specified in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP/2&lt;/a&gt; specification. This is intended for use with the &lt;code&gt;HTTP2-Settings&lt;/code&gt; header field.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP / 2&lt;/a&gt; 스펙에 지정된 지정된 HTTP / 2 설정의 직렬화 된 표현을 포함 하는 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 리턴합니다 . 이것은 &lt;code&gt;HTTP2-Settings&lt;/code&gt; 헤더 필드 와 함께 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="d3e2a617166322b6cc4d00d24f8a35085a2c120b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;ClientHttp2Session&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;ClientHttp2Session&lt;/code&gt; 인스턴스를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6198af787c0e22e468f07e42308242edaf843ade" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Map&lt;/code&gt; object detailing the accumulated percentile distribution.</source>
          <target state="translated">누적 백분위 분포를 자세히 설명 하는 &lt;code&gt;Map&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="06e17f8cb8bafe3a65a4eed325f4f81206edea4c" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Proxy&lt;/code&gt; object that acts as a &lt;code&gt;net.Socket&lt;/code&gt; (or &lt;code&gt;tls.TLSSocket&lt;/code&gt;) but applies getters, setters, and methods based on HTTP/2 logic.</source>
          <target state="translated">&lt;code&gt;net.Socket&lt;/code&gt; (또는 &lt;code&gt;tls.TLSSocket&lt;/code&gt; )으로 작동하지만 HTTP / 2 논리를 기반으로 getter, setter 및 메소드를 적용 하는 &lt;code&gt;Proxy&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ef2783dbbcdbce6612d524e1a6dff27404b17f41" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Proxy&lt;/code&gt; object that acts as a &lt;code&gt;net.Socket&lt;/code&gt; (or &lt;code&gt;tls.TLSSocket&lt;/code&gt;) but limits available methods to ones safe to use with HTTP/2.</source>
          <target state="translated">&lt;code&gt;net.Socket&lt;/code&gt; (또는 &lt;code&gt;tls.TLSSocket&lt;/code&gt; )으로 작동하지만 사용 가능한 메소드를 HTTP / 2에서 사용하기에 안전한 메소드로 제한 하는 &lt;code&gt;Proxy&lt;/code&gt; 오브젝트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a9f259b4b73b05a85b76cb1f0780607ba2f51b08" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;net.Server&lt;/code&gt; instance that creates and manages &lt;code&gt;Http2Session&lt;/code&gt; instances.</source>
          <target state="translated">반환 &lt;code&gt;net.Server&lt;/code&gt; 의 생성 및 관리 예를 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="04d228587f4430bd40ebc764f057dbf38931561e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;tls.Server&lt;/code&gt; instance that creates and manages &lt;code&gt;Http2Session&lt;/code&gt; instances.</source>
          <target state="translated">반환 &lt;code&gt;tls.Server&lt;/code&gt; 의 생성 및 관리 예를 &lt;code&gt;Http2Session&lt;/code&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="22e9b7d263dcf296973d738cd61d1abcbeee8b0f" translate="yes" xml:space="preserve">
          <source>Returns a JSON representation of &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; implicitly calls this function when stringifying a &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 의 JSON 표현을 리턴합니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 문자열화할 때이 함수를 암시 적으로 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="1bf67c6959afd59239c42b866dae376572d88073" translate="yes" xml:space="preserve">
          <source>Returns a JavaScript Object representation of a diagnostic report for the running process. The report's JavaScript stack trace is taken from &lt;code&gt;err&lt;/code&gt;, if present.</source>
          <target state="translated">실행중인 프로세스에 대한 진단 보고서의 JavaScript 오브젝트 표시를 리턴합니다. 보고서의 JavaScript 스택 추적은 &lt;code&gt;err&lt;/code&gt; 에서 가져옵니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="4bd1198eccb6fd1eeec688bf52bc50f2f8a8ef2c" translate="yes" xml:space="preserve">
          <source>Returns a comma-separated list of all currently-enabled trace event categories. The current set of enabled trace event categories is determined by the &lt;em&gt;union&lt;/em&gt; of all currently-enabled &lt;code&gt;Tracing&lt;/code&gt; objects and any categories enabled using the &lt;code&gt;--trace-event-categories&lt;/code&gt; flag.</source>
          <target state="translated">현재 활성화 된 모든 추적 이벤트 범주의 쉼표로 구분 된 목록을 반환합니다. 현재 사용 가능한 추적 이벤트 범주 세트는 현재 사용 가능한 모든 &lt;code&gt;Tracing&lt;/code&gt; 오브젝트와 &lt;code&gt;--trace-event-categories&lt;/code&gt; 플래그를 사용하여 사용 가능한 모든 범주를 &lt;em&gt;결합&lt;/em&gt; 하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc9bf0e51d33d4623a8d79de12c3e7e1595b9fb4" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array of listeners for the event named &lt;code&gt;eventName&lt;/code&gt;, including any wrappers (such as those created by &lt;code&gt;.once()&lt;/code&gt;).</source>
          <target state="translated">래퍼 (예 : &lt;code&gt;.once()&lt;/code&gt; 의해 작성된 것)를 포함하여 &lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 리스너 배열의 복사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="561819be046868a5ca91844a64c9020453c9aeb3" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array of listeners for the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트에 대한 리스너 배열의 복사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d0b998461932078601bb6ac86686584b61de78b" translate="yes" xml:space="preserve">
          <source>Returns a customizable serialization of a URL &lt;code&gt;String&lt;/code&gt; representation of a &lt;a href=&quot;#url_the_whatwg_url_api&quot;&gt;WHATWG URL&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#url_the_whatwg_url_api&quot;&gt;WHATWG URL&lt;/a&gt; 객체 의 URL &lt;code&gt;String&lt;/code&gt; 표현을 사용자 정의 할 수있는 직렬화를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e4857cf64255db0b704173d9734cd3e3b581c2ea" translate="yes" xml:space="preserve">
          <source>Returns a decoded string, ensuring that any incomplete multibyte characters at the end of the &lt;code&gt;Buffer&lt;/code&gt;, or &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; are omitted from the returned string and stored in an internal buffer for the next call to &lt;code&gt;stringDecoder.write()&lt;/code&gt; or &lt;code&gt;stringDecoder.end()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; , &lt;code&gt;TypedArray&lt;/code&gt; 또는 &lt;code&gt;DataView&lt;/code&gt; 끝에있는 불완전한 멀티 바이트 문자 가 반환 된 문자열에서 생략되고 다음에 &lt;code&gt;stringDecoder.write()&lt;/code&gt; 또는 &lt;code&gt;stringDecoder.end()&lt;/code&gt; )를 호출하기 위해 내부 버퍼에 저장 되도록 디코딩 된 문자열을 반환합니다. ) .</target>
        </trans-unit>
        <trans-unit id="7fba362afeb49d4190078c47c49a5c6efdef37d0" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">반환 목록 &lt;code&gt;PerformanceEntry&lt;/code&gt; 는 에 대해 시간순 개체 &lt;code&gt;performanceEntry.startTime&lt;/code&gt; &lt;code&gt;performanceEntry.entryType&lt;/code&gt; 같음 &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc020e28fd54d781f26128ae61c68e8b316b94af" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt; whose &lt;code&gt;performanceEntry.name&lt;/code&gt; is equal to &lt;code&gt;name&lt;/code&gt;, and optionally, whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">반환 목록 &lt;code&gt;PerformanceEntry&lt;/code&gt; 는 에 대해 시간순 개체 &lt;code&gt;performanceEntry.startTime&lt;/code&gt; &lt;code&gt;performanceEntry.name&lt;/code&gt; 같다 &lt;code&gt;name&lt;/code&gt; , 그 임의로 및 &lt;code&gt;performanceEntry.entryType&lt;/code&gt; 가 같은지 &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="902f165f855c55df84bc96cfdf2001130c464832" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;performanceEntry.startTime&lt;/code&gt; 과 관련하여 &lt;code&gt;PerformanceEntry&lt;/code&gt; 객체 목록을 시간순으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="74472aebff535334dadb398c3110fe6551d8c39e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Buffer&lt;/code&gt; that references the same memory as the original, but offset and cropped by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; indices.</source>
          <target state="translated">원본과 동일한 메모리를 참조하지만 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 인덱스에 의해 오프셋되고 잘린 새 &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0811cb7de5a492d0366c29eab2286ed5937a1371" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Buffer&lt;/code&gt; which is the result of concatenating all the &lt;code&gt;Buffer&lt;/code&gt; instances in the &lt;code&gt;list&lt;/code&gt; together.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 내의 모든 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스 를 연결 한 새로운 &lt;code&gt;Buffer&lt;/code&gt; 를 돌려 줍니다.</target>
        </trans-unit>
        <trans-unit id="e62382e933431fd6a4460e4dc99f09dbd42a2f8b" translate="yes" xml:space="preserve">
          <source>Returns a new instance of &lt;a href=&quot;#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt; 의 새 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="61af73ef1319d23e3ea8ccec936c0e689dc3594d" translate="yes" xml:space="preserve">
          <source>Returns a readable stream for a V8 snapshot of the current state of the Worker. See &lt;a href=&quot;v8#v8_v8_getheapsnapshot&quot;&gt;&lt;code&gt;v8.getHeapSnapshot()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Worker의 현재 상태에 대한 V8 스냅 샷에 대해 읽을 수있는 스트림을 반환합니다. 자세한 내용은 &lt;a href=&quot;v8#v8_v8_getheapsnapshot&quot;&gt; &lt;code&gt;v8.getHeapSnapshot()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="91cef74dac3bad7cb671c8d3b6aa495a757054a0" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;EventEmitter&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">호출을 연결할 수 있도록 &lt;code&gt;EventEmitter&lt;/code&gt; 에 대한 참조를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ac1587ed14e45504cd58f731e7734854c2de4ca8" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;Http2ServerResponse&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">&lt;code&gt;Http2ServerResponse&lt;/code&gt; 에 대한 참조를 리턴하여 호출을 체인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07ee2fe786b45ed6c10ed6a3b125a63c301b0b67" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;ServerResponse&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">호출을 연결할 수 있도록 &lt;code&gt;ServerResponse&lt;/code&gt; 에 대한 참조를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="fe8bd3a155addbecddaa417c2cc184546bee6ff7" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of the current outgoing headers. Since a shallow copy is used, array values may be mutated without additional calls to various header-related http module methods. The keys of the returned object are the header names and the values are the respective header values. All header names are lowercase.</source>
          <target state="translated">현재 발신 헤더의 단순 복사본을 반환합니다. 얕은 사본이 사용되므로 다양한 헤더 관련 http 모듈 메소드에 대한 추가 호출없이 배열 값이 변경 될 수 있습니다. 반환 된 객체의 키는 헤더 이름이고 값은 해당 헤더 값입니다. 모든 헤더 이름은 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="b28dfb562525c1018427ed741596cec3c8a62565" translate="yes" xml:space="preserve">
          <source>Returns a string containing the negotiated SSL/TLS protocol version of the current connection. The value &lt;code&gt;'unknown'&lt;/code&gt; will be returned for connected sockets that have not completed the handshaking process. The value &lt;code&gt;null&lt;/code&gt; will be returned for server sockets or disconnected client sockets.</source>
          <target state="translated">협상 된 SSL / TLS 프로토콜 버전의 현재 연결이 포함 된 문자열을 반환합니다. 핸드 쉐이킹 프로세스를 완료하지 않은 연결된 소켓에 대해서는 &lt;code&gt;'unknown'&lt;/code&gt; 값 이 리턴됩니다. 서버 소켓 또는 연결이 끊어진 클라이언트 소켓에 대해서는 &lt;code&gt;null&lt;/code&gt; 값 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e1ac5be082fda93c073231aaf981056e948f3750" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the current &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;Punycode.js&lt;/a&gt; version number.</source>
          <target state="translated">현재 &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;Punycode.js&lt;/a&gt; 버전 번호를 식별하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="db4e785ebd5e486824f2256f59b97dc0e9bea7df" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the endianness of the CPU for which the Node.js binary was compiled.</source>
          <target state="translated">Node.js 바이너리가 컴파일 된 CPU의 엔디안을 식별하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1ead390c99e527f03619f732576a35ed206ac3d5" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the kernel version.</source>
          <target state="translated">커널 버전을 식별하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11de7b0768d4643ea18873fed8ca59b87ca9a8fe" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the operating system platform. The value is set at compile time. Possible values are &lt;code&gt;'aix'&lt;/code&gt;, &lt;code&gt;'darwin'&lt;/code&gt;, &lt;code&gt;'freebsd'&lt;/code&gt;, &lt;code&gt;'linux'&lt;/code&gt;, &lt;code&gt;'openbsd'&lt;/code&gt;, &lt;code&gt;'sunos'&lt;/code&gt;, and &lt;code&gt;'win32'&lt;/code&gt;.</source>
          <target state="translated">운영 체제 플랫폼을 식별하는 문자열을 반환합니다. 값은 컴파일 시간에 설정됩니다. 가능한 값은 &lt;code&gt;'aix'&lt;/code&gt; , &lt;code&gt;'darwin'&lt;/code&gt; , &lt;code&gt;'freebsd'&lt;/code&gt; , &lt;code&gt;'linux'&lt;/code&gt; , &lt;code&gt;'openbsd'&lt;/code&gt; , &lt;code&gt;'sunos'&lt;/code&gt; 및 &lt;code&gt;'win32'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66119e2b8c80566d77b06e6e2706a1c6b6b77a95" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AsyncIterator&lt;/code&gt; that iterates &lt;code&gt;eventName&lt;/code&gt; events. It will throw if the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt;. It removes all listeners when exiting the loop. The &lt;code&gt;value&lt;/code&gt; returned by each iteration is an array composed of the emitted event arguments.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이벤트 를 반복 하는 &lt;code&gt;AsyncIterator&lt;/code&gt; 를 반환 합니다. &lt;code&gt;EventEmitter&lt;/code&gt; 가 &lt;code&gt;'error'&lt;/code&gt; 를 방출 하면 발생 합니다. 루프를 종료 할 때 모든 리스너를 제거합니다. &lt;code&gt;value&lt;/code&gt; 각각의 반복에 의해 반환이 출사 이벤트 인수로 이루어지는 배열이다.</target>
        </trans-unit>
        <trans-unit id="1236c23dbd8e5c478f8383b1c11432ce57448ee1" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over each of the name-value pairs in the query string. Each item of the iterator is a JavaScript &lt;code&gt;Array&lt;/code&gt;. The first item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;name&lt;/code&gt;, the second item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">쿼리 문자열의 각 이름-값 쌍에 대해 ES6 &lt;code&gt;Iterator&lt;/code&gt; 를 반환 합니다. 반복자의 각 항목은 JavaScript &lt;code&gt;Array&lt;/code&gt; 입니다. 의 첫번째 항목 &lt;code&gt;Array&lt;/code&gt; 은 IS &lt;code&gt;name&lt;/code&gt; 의 두 번째 항목 &lt;code&gt;Array&lt;/code&gt; 는 IS &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfe2a7322bab735edd23097775de1c25db3eb319" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over each of the name-value pairs in the query. Each item of the iterator is a JavaScript &lt;code&gt;Array&lt;/code&gt;. The first item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;name&lt;/code&gt;, the second item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">쿼리의 각 이름-값 쌍에 대해 ES6 &lt;code&gt;Iterator&lt;/code&gt; 를 반환합니다 . 반복자의 각 항목은 JavaScript &lt;code&gt;Array&lt;/code&gt; 입니다. 의 첫번째 항목 &lt;code&gt;Array&lt;/code&gt; 은 IS &lt;code&gt;name&lt;/code&gt; 의 두 번째 항목 &lt;code&gt;Array&lt;/code&gt; 는 IS &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e337341122048affa51857fd79670f7b5062640" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over the names of each name-value pair.</source>
          <target state="translated">각 이름-값 쌍의 이름에 대해 ES6 &lt;code&gt;Iterator&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ebe6f9a33188642fe746f00bde8af994bbf8ed37" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over the values of each name-value pair.</source>
          <target state="translated">각 이름-값 쌍의 값에 대해 ES6 &lt;code&gt;Iterator&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a462fa6350d4732602d072a57657744880738c71" translate="yes" xml:space="preserve">
          <source>Returns an array containing the 1, 5, and 15 minute load averages.</source>
          <target state="translated">1, 5, 15 분로드 평균이 포함 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="123039f4e87b5ca30ab90bcb4e8b070180c85be8" translate="yes" xml:space="preserve">
          <source>Returns an array containing the current &lt;code&gt;EventTarget&lt;/code&gt; as the only entry or empty if the event is not being dispatched. This is not used in Node.js and is provided purely for completeness.</source>
          <target state="translated">현재 &lt;code&gt;EventTarget&lt;/code&gt; 을 유일한 항목으로 포함하거나 이벤트가 전달되지 않는 경우 비어 있는 배열을 반환합니다 . 이것은 Node.js에서 사용되지 않으며 순전히 완전성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3bb88c4b58e79ea0b0a4326f90077a48177a924b" translate="yes" xml:space="preserve">
          <source>Returns an array containing the paths searched during resolution of &lt;code&gt;request&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;request&lt;/code&gt; string references a core module, for example &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;fs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 해결하는 동안 검색된 경로가 포함 된 배열을 반환 하거나 &lt;code&gt;request&lt;/code&gt; 문자열이 핵심 모듈 (예 : &lt;code&gt;http&lt;/code&gt; 또는 &lt;code&gt;fs&lt;/code&gt; ) 을 참조하는 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d6e5e1037f722a6f0cb3b9503536eb54ca40f1a3" translate="yes" xml:space="preserve">
          <source>Returns an array containing the unique names of the current outgoing headers. All header names are lowercase.</source>
          <target state="translated">현재 발신 헤더의 고유 이름이 포함 된 배열을 반환합니다. 모든 헤더 이름은 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="e926b97e7d3a43fdc438eb706b5720705f93f9b3" translate="yes" xml:space="preserve">
          <source>Returns an array listing the events for which the emitter has registered listeners. The values in the array are strings or &lt;code&gt;Symbol&lt;/code&gt;s.</source>
          <target state="translated">이미 터가 리스너를 등록한 이벤트를 나열하는 배열을 반환합니다. 배열의 값은 문자열 또는 &lt;code&gt;Symbol&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a68ef3d0d9fccec086b9111913ffd95d29034dd7" translate="yes" xml:space="preserve">
          <source>Returns an array listing the events for which the emitter has registered listeners. The values in the array will be strings or &lt;code&gt;Symbol&lt;/code&gt;s.</source>
          <target state="translated">이미 터가 리스너를 등록한 이벤트를 나열하는 배열을 리턴합니다. 배열의 값은 문자열 또는 &lt;code&gt;Symbol&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="610ddb8e961538ad03654dde2b21839e8808b226" translate="yes" xml:space="preserve">
          <source>Returns an array of IP address strings, formatted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5952#section-6&quot;&gt;RFC 5952&lt;/a&gt;, that are currently configured for DNS resolution. A string will include a port section if a custom port is used.</source>
          <target state="translated">현재 DNS 확인을 위해 구성된 &lt;a href=&quot;https://tools.ietf.org/html/rfc5952#section-6&quot;&gt;RFC 5952&lt;/a&gt; 에 따라 형식화 된 IP 주소 문자열 배열을 반환합니다 . 사용자 정의 포트가 사용되면 문자열에 포트 섹션이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e8a122a0aff7510e87d2b9116049afacc2d1c2e9" translate="yes" xml:space="preserve">
          <source>Returns an array of objects containing information about each logical CPU core.</source>
          <target state="translated">각 논리적 CPU 코어에 대한 정보를 포함하는 객체 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1ebe410734a4b05055e09aa8191eb7f70359917" translate="yes" xml:space="preserve">
          <source>Returns an array with the names of the supported TLS ciphers. The names are lower-case for historical reasons, but must be uppercased to be used in the &lt;code&gt;ciphers&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지원되는 TLS 암호의 이름을 가진 배열을 반환합니다. 이름은 역사적 이유로 소문자이지만 &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;ciphers&lt;/code&gt; 옵션 에서 사용하려면 대문자 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="25947ce891e464a86af71ee6580ee05e3aba08f6" translate="yes" xml:space="preserve">
          <source>Returns an integer representing a &quot;version tag&quot; derived from the V8 version, command line flags and detected CPU features. This is useful for determining whether a &lt;a href=&quot;vm#vm_constructor_new_vm_script_code_options&quot;&gt;&lt;code&gt;vm.Script&lt;/code&gt;&lt;/a&gt;&lt;code&gt;cachedData&lt;/code&gt; buffer is compatible with this instance of V8.</source>
          <target state="translated">V8 버전, 명령 행 플래그 및 감지 된 CPU 기능에서 파생 된 &quot;버전 태그&quot;를 나타내는 정수를 리턴합니다. 이는 &lt;a href=&quot;vm#vm_constructor_new_vm_script_code_options&quot;&gt; &lt;code&gt;vm.Script&lt;/code&gt; &lt;/a&gt; &lt;code&gt;cachedData&lt;/code&gt; 버퍼가이 V8 인스턴스와 호환 되는지 여부를 판별하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="26cf7573bd22e44c59283ee695a853fa11beb926" translate="yes" xml:space="preserve">
          <source>Returns an integer representing a &quot;version tag&quot; derived from the V8 version, command-line flags and detected CPU features. This is useful for determining whether a &lt;a href=&quot;vm#vm_new_vm_script_code_options&quot;&gt;&lt;code&gt;vm.Script&lt;/code&gt;&lt;/a&gt;&lt;code&gt;cachedData&lt;/code&gt; buffer is compatible with this instance of V8.</source>
          <target state="translated">V8 버전, 명령 줄 플래그 및 감지 된 CPU 기능에서 파생 된 &quot;버전 태그&quot;를 나타내는 정수를 반환합니다. 이는 &lt;a href=&quot;vm#vm_new_vm_script_code_options&quot;&gt; &lt;code&gt;vm.Script&lt;/code&gt; &lt;/a&gt; &lt;code&gt;cachedData&lt;/code&gt; 버퍼가이 V8 인스턴스와 호환 되는지 여부를 판별하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="cf612284e77484bffbfe2d8234c0c3a88bb05e82" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the file descriptor.</source>
          <target state="translated">파일 기술자를 나타내는 정수를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="d456891518c2009e39374ef8bcf41f5ae84b4d1e" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used constants for file system operations. The specific constants currently defined are described in &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS Constants&lt;/a&gt;.</source>
          <target state="translated">파일 시스템 조작에 일반적으로 사용되는 상수를 포함하는 오브젝트를 리턴합니다. 현재 정의 된 특정 상수는 &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS 상수에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fc4429cedc17ba4b6f16260996593c97a18d5da" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used constants for file system operations. The specific constants currently defined are described in &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS constants&lt;/a&gt;.</source>
          <target state="translated">파일 시스템 작업에 일반적으로 사용되는 상수를 포함하는 객체를 반환합니다. 현재 정의 된 특정 상수는 &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS 상수에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e572bb804a1147bd064b30d81099aa7a3dc137f" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used operating system specific constants for error codes, process signals, and so on. The specific constants currently defined are described in &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS Constants&lt;/a&gt;.</source>
          <target state="translated">오류 코드, 프로세스 신호 등에 일반적으로 사용되는 운영 체제 특정 상수를 포함하는 개체를 반환합니다. 현재 정의 된 특정 상수는 &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS 상수에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="173effd1912d413c3c7d0e6a153f7bf24a5cc776" translate="yes" xml:space="preserve">
          <source>Returns an object containing information on the negotiated cipher suite.</source>
          <target state="translated">협상 된 암호 제품군에 대한 정보가 포함 된 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="748cdd242f7bb2d7b6df39aee0de1a0c4d6442a5" translate="yes" xml:space="preserve">
          <source>Returns an object containing network interfaces that have been assigned a network address.</source>
          <target state="translated">네트워크 주소가 할당 된 네트워크 인터페이스가 포함 된 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da8195a7211af5cae4886b2fed4d7f6905fa2cf0" translate="yes" xml:space="preserve">
          <source>Returns an object containing the &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, and &lt;code&gt;port&lt;/code&gt; of the remote endpoint. It throws an &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt;&lt;/a&gt; exception if the socket is not connected.</source>
          <target state="translated">원격 끝점 의 &lt;code&gt;address&lt;/code&gt; , &lt;code&gt;family&lt;/code&gt; 및 &lt;code&gt;port&lt;/code&gt; 가 포함 된 개체를 반환 합니다. 그것은 발생 &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt; 을&lt;/a&gt; 소켓이 접속되어 있지 않은 경우는 예외.</target>
        </trans-unit>
        <trans-unit id="2e39dd35f7e67f65dcecc7348c28e082d09f299b" translate="yes" xml:space="preserve">
          <source>Returns an object containing the &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, and &lt;code&gt;port&lt;/code&gt; of the remote endpoint. This method throws an &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt;&lt;/a&gt; exception if the socket is not connected.</source>
          <target state="translated">원격 엔드 포인트 의 &lt;code&gt;address&lt;/code&gt; , &lt;code&gt;family&lt;/code&gt; 및 &lt;code&gt;port&lt;/code&gt; 가 포함 된 객체를 반환 합니다. 이 메소드는 소켓이 연결되지 않은 경우 &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7ed293ba4253d486315065868e45cc74fab4cb64" translate="yes" xml:space="preserve">
          <source>Returns an object containing the address information for a socket. For UDP sockets, this object will contain &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; properties.</source>
          <target state="translated">소켓의 주소 정보가 포함 된 객체를 반환합니다. UDP 소켓의 경우이 객체에는 &lt;code&gt;address&lt;/code&gt; , &lt;code&gt;family&lt;/code&gt; 및 &lt;code&gt;port&lt;/code&gt; 속성 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="750fa8850c8540e221a90bc0891080e9adc18780" translate="yes" xml:space="preserve">
          <source>Returns an object containing the default settings for an &lt;code&gt;Http2Session&lt;/code&gt; instance. This method returns a new object instance every time it is called so instances returned may be safely modified for use.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; 에 대한 기본 설정을 포함하는 오브젝트를 리턴합니다. 인스턴스 합니다. 이 메소드는 호출 될 때마다 새 오브젝트 인스턴스를 리턴하므로 리턴 된 인스턴스를 안전하게 수정하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2820150cc3e1eaf834f7299a6835fc7f855875b4" translate="yes" xml:space="preserve">
          <source>Returns an object representing the local certificate. The returned object has some properties corresponding to the fields of the certificate.</source>
          <target state="translated">로컬 인증서를 나타내는 개체를 반환합니다. 리턴 된 오브젝트에는 인증서 필드에 해당하는 일부 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7531e2092f9bfbe2a3eaa62713494a2261e891e5" translate="yes" xml:space="preserve">
          <source>Returns an object representing the peer's certificate. If the peer does not provide a certificate, an empty object will be returned. If the socket has been destroyed, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">피어의 증명서를 나타내는 객체를 돌려줍니다. 피어가 인증서를 제공하지 않으면 빈 개체가 반환됩니다. 소켓이 파괴되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="995d65522c158e88648a08776250cd3d9e63dbf5" translate="yes" xml:space="preserve">
          <source>Returns an object representing the type, name, and size of parameter of an ephemeral key exchange in &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;Perfect Forward Secrecy&lt;/a&gt; on a client connection. It returns an empty object when the key exchange is not ephemeral. As this is only supported on a client socket; &lt;code&gt;null&lt;/code&gt; is returned if called on a server socket. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="translated">클라이언트 연결의 &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;Perfect Forward Secrecy&lt;/a&gt; 에서 임시 키 교환의 매개 변수 유형, 이름 및 크기를 나타내는 개체를 반환 합니다. 키 교환이 임시가 아닌 경우 빈 객체를 반환합니다. 이것은 클라이언트 소켓에서만 지원되므로; 서버 소켓에서 호출되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 지원되는 유형은 &lt;code&gt;'DH'&lt;/code&gt; 및 &lt;code&gt;'ECDH'&lt;/code&gt; 입니다. &lt;code&gt;name&lt;/code&gt; 유형 인 경우에만 속성을 볼 수 있습니다 &lt;code&gt;'ECDH'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3507c243576c93ffd0250b3494357ed54b67a93e" translate="yes" xml:space="preserve">
          <source>Returns an object representing the type, name, and size of parameter of an ephemeral key exchange in &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;perfect forward secrecy&lt;/a&gt; on a client connection. It returns an empty object when the key exchange is not ephemeral. As this is only supported on a client socket; &lt;code&gt;null&lt;/code&gt; is returned if called on a server socket. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="translated">클라이언트 연결 에서 &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;완전 순방향 보안&lt;/a&gt; 으로 임시 키 교환 매개 변수의 유형, 이름 및 크기를 나타내는 개체를 반환 합니다. 키 교환이 임시가 아닌 경우 빈 개체를 반환합니다. 이것은 클라이언트 소켓에서만 지원되므로; 서버 소켓에서 호출되면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 지원되는 유형은 &lt;code&gt;'DH'&lt;/code&gt; 및 &lt;code&gt;'ECDH'&lt;/code&gt; 입니다. &lt;code&gt;name&lt;/code&gt; 유형 인 경우에만 속성을 볼 수 있습니다 &lt;code&gt;'ECDH'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4aa378ad70b6c268d4283ae1d4f0b9e2cf709a82" translate="yes" xml:space="preserve">
          <source>Returns an object with the following properties:</source>
          <target state="translated">다음과 같은 속성을 가진 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c4d4a07a5fcbaacee5ee35f84b852f3b32d8425" translate="yes" xml:space="preserve">
          <source>Returns an un-pooled &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">풀링되지 않은 &lt;code&gt;Buffer&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3a9a91c3e09581ccb37580de798a48cf9803a5b8" translate="yes" xml:space="preserve">
          <source>Returns any remaining input stored in the internal buffer as a string. Bytes representing incomplete UTF-8 and UTF-16 characters will be replaced with substitution characters appropriate for the character encoding.</source>
          <target state="translated">내부 버퍼에 저장된 나머지 입력을 문자열로 반환합니다. 불완전한 UTF-8 및 UTF-16 문자를 나타내는 바이트는 문자 인코딩에 적합한 대체 문자로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="a9b1a82cf7c7d8bd2044be6f4234cba1d8644b00" translate="yes" xml:space="preserve">
          <source>Returns information about the currently effective user. On POSIX platforms, this is typically a subset of the password file. The returned object includes the &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;shell&lt;/code&gt;, and &lt;code&gt;homedir&lt;/code&gt;. On Windows, the &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; fields are &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;shell&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">현재 유효한 사용자에 대한 정보를 반환합니다. POSIX 플랫폼에서 이것은 일반적으로 암호 파일의 하위 집합입니다. 반환 된 객체에는 &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; , &lt;code&gt;gid&lt;/code&gt; , &lt;code&gt;shell&lt;/code&gt; 및 &lt;code&gt;homedir&lt;/code&gt; 이 포함 됩니다. Windows에서 &lt;code&gt;uid&lt;/code&gt; 및 &lt;code&gt;gid&lt;/code&gt; 필드는 &lt;code&gt;-1&lt;/code&gt; 이고 &lt;code&gt;shell&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b052bbeb43177eb562f5dcbb97ec364f16cf417" translate="yes" xml:space="preserve">
          <source>Returns statistics about the V8 heap spaces, i.e. the segments which make up the V8 heap. Neither the ordering of heap spaces, nor the availability of a heap space can be guaranteed as the statistics are provided via the V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-10.6/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt;&lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt;&lt;/a&gt; function and may change from one V8 version to the next.</source>
          <target state="translated">V8 힙 공간, 즉 V8 힙을 구성하는 세그먼트에 대한 통계를 리턴합니다. V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-10.6/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt; &lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt; &lt;/a&gt; 함수 를 통해 통계가 제공되므로 힙 공간의 순서 나 힙 공간의 가용성을 보장 할 수 없으며 V8 버전마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44ec07d74cc27b20f6c6074328c1e8ed3c1b476c" translate="yes" xml:space="preserve">
          <source>Returns statistics about the V8 heap spaces, i.e. the segments which make up the V8 heap. Neither the ordering of heap spaces, nor the availability of a heap space can be guaranteed as the statistics are provided via the V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-13.2/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt;&lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt;&lt;/a&gt; function and may change from one V8 version to the next.</source>
          <target state="translated">V8 힙 공간, 즉 V8 힙을 구성하는 세그먼트에 대한 통계를 리턴합니다. V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-13.2/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt; &lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt; &lt;/a&gt; 함수 를 통해 통계가 제공되며 한 V8 버전에서 다음 버전으로 변경 될 수 있으므로 힙 공간의 순서 나 힙 공간의 가용성을 보장 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="45db15db2dcfb072ce8605ea2bf68458199b15ef" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; ASCII serialization of the &lt;code&gt;domain&lt;/code&gt;. If &lt;code&gt;domain&lt;/code&gt; is an invalid domain, the empty string is returned.</source>
          <target state="translated">&lt;code&gt;domain&lt;/code&gt; 의 &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; ASCII 직렬화를 리턴 합니다 . 경우 &lt;code&gt;domain&lt;/code&gt; 잘못된 도메인입니다, 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="98898842cd6551d8800bdbfeebfc44ab04ab2665" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman generator in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">지정된 &lt;code&gt;encoding&lt;/code&gt; 로 Diffie-Hellman 생성기를 리턴합니다 . 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6a0a7927638c2649823b5cbac3a879f06a186a66" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman prime in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">지정된 &lt;code&gt;encoding&lt;/code&gt; 의 Diffie-Hellman 소수를 리턴합니다 . 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6627764123ab141ec400365e75bdf78a99dd4bdc" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman private key in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">지정된 &lt;code&gt;encoding&lt;/code&gt; 의 Diffie-Hellman 개인 키를 반환합니다 . 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9ef4010a3c1c90585980b5f9eb86b11fe7769642" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman public key in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">지정된 &lt;code&gt;encoding&lt;/code&gt; 의 Diffie-Hellman 공개 키를 리턴합니다 . 경우 &lt;code&gt;encoding&lt;/code&gt; 제공되는 문자열이 반환됩니다; 그렇지 않으면 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="edbef7b2c1ed2c9e7830fd035d00024de41a885b" translate="yes" xml:space="preserve">
          <source>Returns the TLS session data or &lt;code&gt;undefined&lt;/code&gt; if no session was negotiated. On the client, the data can be provided to the &lt;code&gt;session&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to resume the connection. On the server, it may be useful for debugging.</source>
          <target state="translated">TLS 세션 데이터를 반환하거나 세션이 협상 &lt;code&gt;undefined&lt;/code&gt; 경우 정의되지 않았습니다 . 클라이언트 에서 연결을 재개하기 위해 &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;session&lt;/code&gt; 옵션에 데이터를 제공 할 수 있습니다 . 서버에서는 디버깅에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57b27aa48986b75bb3551c198e16b773599b9b8c" translate="yes" xml:space="preserve">
          <source>Returns the Unicode serialization of the &lt;code&gt;domain&lt;/code&gt;. If &lt;code&gt;domain&lt;/code&gt; is an invalid domain, the empty string is returned.</source>
          <target state="translated">&lt;code&gt;domain&lt;/code&gt; 의 Unicode 직렬화를 돌려 줍니다. 경우 &lt;code&gt;domain&lt;/code&gt; 잘못된 도메인입니다, 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0068da462d18b054608370aac757b84d634716d4" translate="yes" xml:space="preserve">
          <source>Returns the actual byte length of a string. This is not the same as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;&lt;code&gt;String.prototype.length&lt;/code&gt;&lt;/a&gt; since that returns the number of &lt;em&gt;characters&lt;/em&gt; in a string.</source>
          <target state="translated">문자열의 실제 바이트 길이를 반환합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt; &lt;code&gt;String.prototype.length&lt;/code&gt; &lt;/a&gt; 와 동일하지 않으므로 문자열 의 &lt;em&gt;문자&lt;/em&gt; 수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ff03537cfe9bed4f0f672d2c3d8385deba2ad896" translate="yes" xml:space="preserve">
          <source>Returns the amount of free system memory in bytes as an integer.</source>
          <target state="translated">사용 가능한 시스템 메모리 양 (바이트)을 정수로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eff8baf78545477617253b6617803f45f21d82d4" translate="yes" xml:space="preserve">
          <source>Returns the amount of memory allocated for &lt;code&gt;buf&lt;/code&gt; in bytes. This does not necessarily reflect the amount of &quot;usable&quot; data within &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 에 할당 된 메모리 양을 바이트 단위로 반환합니다 . 이것은 &lt;code&gt;buf&lt;/code&gt; 내의 &quot;사용 가능한&quot;데이터의 양을 반드시 반영하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9adc1dc6b3119619aa6757948115b873a2cb7a0e" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name and &lt;code&gt;port&lt;/code&gt; of the socket as reported by the operating system: &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;</source>
          <target state="translated">운영 체제에서보고 한 바인드 &lt;code&gt;address&lt;/code&gt; , 주소 &lt;code&gt;family&lt;/code&gt; 이름 및 소켓 &lt;code&gt;port&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a395fa48acb9e3b01e1eb83c79ea596ddc0f42" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name, and &lt;code&gt;port&lt;/code&gt; of the server as reported by the operating system if listening on an IP socket (useful to find which port was assigned when getting an OS-assigned address): &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;.</source>
          <target state="translated">IP 소켓에서 수신 대기중인 경우 운영 체제에서보고 한 바인드 된 &lt;code&gt;address&lt;/code&gt; , 주소 &lt;code&gt;family&lt;/code&gt; 이름 및 서버 &lt;code&gt;port&lt;/code&gt; 를 리턴합니다 (OS 할당 주소를 가져올 때 할당 된 포트를 찾는 데 유용함) : &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="374ed6b9a5508a74572575b672e0d5c72a48b13c" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name, and &lt;code&gt;port&lt;/code&gt; of the underlying socket as reported by the operating system: &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;.</source>
          <target state="translated">운영 체제에서보고 한 바인드 된 &lt;code&gt;address&lt;/code&gt; , 주소 &lt;code&gt;family&lt;/code&gt; 이름 및 기본 소켓의 &lt;code&gt;port&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6082e6b174694a1a1eed3e9eddf7ccbf0829c911" translate="yes" xml:space="preserve">
          <source>Returns the bound address, the address family name, and port of the server as reported by the operating system. See &lt;a href=&quot;net#net_server_address&quot;&gt;&lt;code&gt;net.Server.address()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">운영 체제에서보고 한 바인드 주소, 주소 패밀리 이름 및 서버 포트를 리턴합니다. 자세한 내용은 &lt;a href=&quot;net#net_server_address&quot;&gt; &lt;code&gt;net.Server.address()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d902c811b6b56aec9ea9c49e5208a0b8d4200ef" translate="yes" xml:space="preserve">
          <source>Returns the byte length of a string when encoded using &lt;code&gt;encoding&lt;/code&gt;. This is not the same as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;&lt;code&gt;String.prototype.length&lt;/code&gt;&lt;/a&gt;, which does not account for the encoding that is used to convert the string into bytes.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; 을 사용하여 인코딩 된 경우 문자열의 바이트 길이를 반환합니다 . 이것은 문자열을 바이트로 변환하는 데 사용되는 인코딩을 고려하지 않는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt; &lt;code&gt;String.prototype.length&lt;/code&gt; &lt;/a&gt; 와 동일 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="071cebe2872a8ea37b4886d971ed479585e668bd" translate="yes" xml:space="preserve">
          <source>Returns the contents of the &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 의 내용을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ea5b212a444f0cb0505ba2ddb70a8efb8677b87e" translate="yes" xml:space="preserve">
          <source>Returns the created directory path.</source>
          <target state="translated">생성 된 디렉토리 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5836f2f216bdcc81566cb1f8c1b4f11262594afa" translate="yes" xml:space="preserve">
          <source>Returns the created folder path.</source>
          <target state="translated">생성 된 폴더 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb236989cd3f1b1bc41f2e815e115dc73f6e3727" translate="yes" xml:space="preserve">
          <source>Returns the current high resolution millisecond timestamp, where 0 represents the start of the current &lt;code&gt;node&lt;/code&gt; process.</source>
          <target state="translated">현재 고해상도 밀리 초 타임 스탬프를 반환합니다. 여기서 0은 현재 &lt;code&gt;node&lt;/code&gt; 프로세스 의 시작을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ec5241b9d16cda2178e57fa4c3714774bdf911c3" translate="yes" xml:space="preserve">
          <source>Returns the current max listener value for the &lt;code&gt;EventEmitter&lt;/code&gt; which is either set by &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; or defaults to &lt;a href=&quot;#events_eventemitter_defaultmaxlisteners&quot;&gt;&lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 현재 최대 값 리스너 &lt;code&gt;EventEmitter&lt;/code&gt; 중 하나에 의해 설정된다 &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt; 또는 디폴트 &lt;a href=&quot;#events_eventemitter_defaultmaxlisteners&quot;&gt; &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9145e2a409d9fdfbacefef665729af53fc3fad5a" translate="yes" xml:space="preserve">
          <source>Returns the current number of concurrent connections on the server.</source>
          <target state="translated">서버에서 현재 동시 연결 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6a9bdbfae31a8d0d931c3c82482340f061a5bb3f" translate="yes" xml:space="preserve">
          <source>Returns the host name of the operating system as a string.</source>
          <target state="translated">운영 체제의 호스트 이름을 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ef504216da3f0e4259ee7d9ff984238f04c7eaf8" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of bytes that will be returned when &lt;code&gt;buf.inspect()&lt;/code&gt; is called. This can be overridden by user modules. See &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; for more details on &lt;code&gt;buf.inspect()&lt;/code&gt; behavior.</source>
          <target state="translated">&lt;code&gt;buf.inspect()&lt;/code&gt; 가 호출 될 때 리턴 될 최대 바이트 수를 리턴합니다 . 사용자 모듈이이를 대체 할 수 있습니다. &lt;code&gt;buf.inspect()&lt;/code&gt; 동작 에 대한 자세한 내용 은 &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dd943f3f2b8d1e6152925a2e81b61fca45d16a6" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;code&gt;bytesRead&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bytesRead&lt;/code&gt; 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="69b7126e4358107d393e0aa002bcbe6ba9ee393a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; 의 바이트 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d58236714d6024bf32d6e0a028f2a5dbd354b9a5" translate="yes" xml:space="preserve">
          <source>Returns the number of listeners listening to the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; 이라는 이벤트를 수신하는 리스너 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="53492b1e727540b40dc4ecc74a016733338f873d" translate="yes" xml:space="preserve">
          <source>Returns the numeric representation of the local port.</source>
          <target state="translated">로컬 포트의 숫자 표현을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6982249d36f4d8f98edd319d6201ff42981dcde9" translate="yes" xml:space="preserve">
          <source>Returns the numeric representation of the remote port. For example, &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">원격 포트의 숫자 표현을 리턴합니다. 예를 들어, &lt;code&gt;443&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dee1377bd13b4f741a90953bedb6f28b9669a300" translate="yes" xml:space="preserve">
          <source>Returns the operating system CPU architecture for which the Node.js binary was compiled. Possible values are &lt;code&gt;'arm'&lt;/code&gt;, &lt;code&gt;'arm64'&lt;/code&gt;, &lt;code&gt;'ia32'&lt;/code&gt;, &lt;code&gt;'mips'&lt;/code&gt;, &lt;code&gt;'mipsel'&lt;/code&gt;, &lt;code&gt;'ppc'&lt;/code&gt;, &lt;code&gt;'ppc64'&lt;/code&gt;, &lt;code&gt;'s390'&lt;/code&gt;, &lt;code&gt;'s390x'&lt;/code&gt;, &lt;code&gt;'x32'&lt;/code&gt;, and &lt;code&gt;'x64'&lt;/code&gt;.</source>
          <target state="translated">Node.js 바이너리가 컴파일 된 운영 체제 CPU 아키텍처를 반환합니다. 가능한 값은 &lt;code&gt;'arm'&lt;/code&gt; , &lt;code&gt;'arm64'&lt;/code&gt; , &lt;code&gt;'ia32'&lt;/code&gt; , &lt;code&gt;'mips'&lt;/code&gt; , &lt;code&gt;'mipsel'&lt;/code&gt; , &lt;code&gt;'ppc'&lt;/code&gt; , &lt;code&gt;'ppc64'&lt;/code&gt; , &lt;code&gt;'s390'&lt;/code&gt; , &lt;code&gt;'s390x'&lt;/code&gt; , &lt;code&gt;'x32'&lt;/code&gt; 및 &lt;code&gt;'x64'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e50265dcfc76ffca7193349f579d08e2a4308cc5" translate="yes" xml:space="preserve">
          <source>Returns the operating system as a string.</source>
          <target state="translated">운영 체제를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6317e8c41a82b97dcd592f2ec7e42e4d01621826" translate="yes" xml:space="preserve">
          <source>Returns the operating system name as returned by &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt;. For example, it returns &lt;code&gt;'Linux'&lt;/code&gt; on Linux, &lt;code&gt;'Darwin'&lt;/code&gt; on macOS, and &lt;code&gt;'Windows_NT'&lt;/code&gt; on Windows.</source>
          <target state="translated">&lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; &lt;/a&gt; 반환 된 운영 체제 이름을 반환합니다 . 예를 들어 Linux에서는 &lt;code&gt;'Linux'&lt;/code&gt; , macOS에서는 &lt;code&gt;'Darwin'&lt;/code&gt; , Windows에서는 &lt;code&gt;'Windows_NT'&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="40cc7639f933dccb6b0f7ddff1c6a33c1816bd7e" translate="yes" xml:space="preserve">
          <source>Returns the operating system's default directory for temporary files as a string.</source>
          <target state="translated">임시 파일에 대한 운영 체제의 기본 디렉토리를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4d82fa58b1c14c3793098eb50b5d7e6983075073" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (PID) of the child process.</source>
          <target state="translated">자식 프로세스의 프로세스 식별자 (PID)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df0ebc3538d52e588049a38e4f32f5d69114bcfb" translate="yes" xml:space="preserve">
          <source>Returns the real position of the cursor in relation to the input prompt + string. Long input (wrapping) strings, as well as multiple line prompts are included in the calculations.</source>
          <target state="translated">입력 프롬프트 + 문자열과 관련하여 커서의 실제 위치를 반환합니다. 긴 입력 (래핑) 문자열과 여러 줄 프롬프트가 계산에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="db69158a96de834eafe2dff64fb97332c62b7f60" translate="yes" xml:space="preserve">
          <source>Returns the reason why the peer's certificate was not been verified. This property is set only when &lt;code&gt;tlsSocket.authorized === false&lt;/code&gt;.</source>
          <target state="translated">피어의 인증서가 확인되지 않은 이유를 반환합니다. 이 특성은 &lt;code&gt;tlsSocket.authorized === false&lt;/code&gt; 경우에만 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="04c70ec43b749ee998de7fb550ee6dead266c171" translate="yes" xml:space="preserve">
          <source>Returns the resolved pathname.</source>
          <target state="translated">해결 된 경로 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2355716360152b28c81b3a5297260607d51e4d7" translate="yes" xml:space="preserve">
          <source>Returns the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt;. If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt;, the priority of the current process is returned.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; 로 지정된 프로세스의 스케줄링 우선 순위를 리턴합니다 . 경우 &lt;code&gt;pid&lt;/code&gt; 제공되지 않았거나 &lt;code&gt;0&lt;/code&gt; , 현재 처리의 우선 순위가 반환된다.</target>
        </trans-unit>
        <trans-unit id="200273a822e3aaa1bc2bbb9d27ba8b6a35fa7abe" translate="yes" xml:space="preserve">
          <source>Returns the search parameters serialized as a string, with characters percent-encoded where necessary.</source>
          <target state="translated">필요한 경우 문자를 백분율로 인코딩하여 문자열로 직렬화 된 검색 매개 변수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e916ce1f1336be8da02872aa51272138e120c899" translate="yes" xml:space="preserve">
          <source>Returns the session ticket keys.</source>
          <target state="translated">세션 티켓 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf7d46cf475b05865b4c7cbeaf9171f009b1f150" translate="yes" xml:space="preserve">
          <source>Returns the stored internal buffer. This serializer should not be used once the buffer is released. Calling this method results in undefined behavior if a previous write has failed.</source>
          <target state="translated">저장된 내부 버퍼를 반환합니다. 버퍼가 해제되면이 시리얼 라이저를 사용해서는 안됩니다. 이전 쓰기가 실패한 경우이 메소드를 호출하면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e7819a63e0a625c45d827c29558e1c5508469ead" translate="yes" xml:space="preserve">
          <source>Returns the string name for a numeric error code that comes from a Node.js API. The mapping between error codes and error names is platform-dependent. See &lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;Common System Errors&lt;/a&gt; for the names of common errors.</source>
          <target state="translated">Node.js API에서 나오는 숫자 오류 코드의 문자열 이름을 리턴합니다. 오류 코드와 오류 이름 간의 매핑은 플랫폼에 따라 다릅니다. 일반적인 오류 이름은 일반적인 &lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;시스템 오류&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18f3b7b4a1306c8021422d2fb5b5972cf57054f8" translate="yes" xml:space="preserve">
          <source>Returns the string path of the current user's home directory.</source>
          <target state="translated">현재 사용자 홈 디렉토리의 문자열 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="759c0f0f1e622c8003e49a8fd92ad5175fce066b" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the local IP address.</source>
          <target state="translated">로컬 IP 주소의 문자열 표현을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d975c4d372aa6db34e85b9a72f9c40912341c3a7" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the remote IP address. For example, &lt;code&gt;'74.125.127.100'&lt;/code&gt; or &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt;.</source>
          <target state="translated">원격 IP 주소의 문자열 표현을 리턴합니다. 예를 들어, &lt;code&gt;'74.125.127.100'&lt;/code&gt; 또는 &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="31a0881e6c107c6cf8c4aa32244a29272114a296" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the remote IP family. &lt;code&gt;'IPv4'&lt;/code&gt; or &lt;code&gt;'IPv6'&lt;/code&gt;.</source>
          <target state="translated">원격 IP 제품군의 문자열 표현을 반환합니다. &lt;code&gt;'IPv4'&lt;/code&gt; 또는 &lt;code&gt;'IPv6'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="425b8f0997948d49962446dda105e9e704cde96c" translate="yes" xml:space="preserve">
          <source>Returns the system uptime in number of seconds.</source>
          <target state="translated">시스템 가동 시간을 초 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55aec27b031c7379c992a8a1228d22ec603c36bc" translate="yes" xml:space="preserve">
          <source>Returns the total amount of system memory in bytes as an integer.</source>
          <target state="translated">시스템 메모리의 총량 (바이트)을 정수로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe8ad9f0cbd6bd65ca0017f8fd6eee29f777b6e9" translate="yes" xml:space="preserve">
          <source>Returns the value at the given percentile.</source>
          <target state="translated">주어진 백분위 수에서 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aee11e2c3f5b7a58d5f35df7a8a6b19cdcd93e38" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;highWaterMark&lt;/code&gt; passed when constructing this &lt;code&gt;Readable&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Readable&lt;/code&gt; 를 구축 할 때 건네받은 &lt;code&gt;highWaterMark&lt;/code&gt; 값을 돌려 줍니다 .</target>
        </trans-unit>
        <trans-unit id="01c2d7f74a46b64ca833036aed85b7df17d0c19f" translate="yes" xml:space="preserve">
          <source>Returns the value of the first name-value pair whose name is &lt;code&gt;name&lt;/code&gt;. If there are no such pairs, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">name이 &lt;code&gt;name&lt;/code&gt; 인 첫 번째 이름-값 쌍의 값을 반환합니다 . 그러한 쌍이 없으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0cba16c334cb3a6e22542a99f3d4faba02875cbb" translate="yes" xml:space="preserve">
          <source>Returns the values of all name-value pairs whose name is &lt;code&gt;name&lt;/code&gt;. If there are no such pairs, an empty array is returned.</source>
          <target state="translated">name이 &lt;code&gt;name&lt;/code&gt; 인 모든 이름-값 쌍의 값을 반환합니다 . 그러한 쌍이 없으면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="b27809aa4afa35639351a1bde16f5f62e14cc743" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;asyncHook&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;asyncHook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53d4e51fba70a5949c3d8dfb7144610744be21a1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; Instance used for disabling and enabling hooks</source>
          <target state="translated">반환 값 : &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; 인스턴스 후크를 비활성화 및 활성화에 사용</target>
        </trans-unit>
        <trans-unit id="c49509a21fae79ba834bd46f4ba8decd2ca596a4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&amp;lt;AsyncResource&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;asyncResource&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&amp;lt;AsyncResource&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;asyncResource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d05f9960e9157089593dc608b33a44459d25bb26" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">보고: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &amp;lt;버퍼&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec8c25536a811e7f76c3455e5ac56cb802742d5b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A 48-byte buffer containing the session ticket keys.</source>
          <target state="translated">보고: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &amp;lt;Buffer&amp;gt;&lt;/a&gt; 세션 티켓 키를 포함하는 48 바이트 버퍼.</target>
        </trans-unit>
        <trans-unit id="7b4cfe33f12970cc8131188e9a6130c82dae1e3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A new &lt;code&gt;Buffer&lt;/code&gt; with the decrypted content.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 새로운 &lt;code&gt;Buffer&lt;/code&gt; 복호화 된 내용을 가지는 버퍼 .</target>
        </trans-unit>
        <trans-unit id="46d4e0041f35dbf70d0444719807fb3233f621b2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A new &lt;code&gt;Buffer&lt;/code&gt; with the encrypted content.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 새로운 &lt;code&gt;Buffer&lt;/code&gt; 암호화 된 내용.</target>
        </trans-unit>
        <trans-unit id="9e4ee4ea5a1b6ac2a523dc57bd880fe6589aab09" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33304fc5eedb1f580a95a9378c85e20c3538b602" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; The challenge component of the &lt;code&gt;spkac&lt;/code&gt; data structure, which includes a public key and a challenge.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 의 챌린지 구성 요소 &lt;code&gt;spkac&lt;/code&gt; 공개 키와 챌린지를 포함하는 spkac 데이터 구조 .</target>
        </trans-unit>
        <trans-unit id="f84a3873c93bc30081f41253fec83554c999b424" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; The public key component of the &lt;code&gt;spkac&lt;/code&gt; data structure, which includes a public key and a challenge.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 의 공개 키 구성 요소 &lt;code&gt;spkac&lt;/code&gt; 공개 키와 시도를 포함하는 spkac 데이터 구조 .</target>
        </trans-unit>
        <trans-unit id="dedfd48e9684624bb8788952dfa151bb36102b7e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; When using an authenticated encryption mode (&lt;code&gt;GCM&lt;/code&gt;, &lt;code&gt;CCM&lt;/code&gt; and &lt;code&gt;OCB&lt;/code&gt; are currently supported), the &lt;code&gt;cipher.getAuthTag()&lt;/code&gt; method returns a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; containing the &lt;em&gt;authentication tag&lt;/em&gt; that has been computed from the given data.</source>
          <target state="translated">결과 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 인증 된 암호화 모드 (사용 &lt;code&gt;GCM&lt;/code&gt; , &lt;code&gt;CCM&lt;/code&gt; 및 &lt;code&gt;OCB&lt;/code&gt; 는 현재 지원되는) 상기 &lt;code&gt;cipher.getAuthTag()&lt;/code&gt; 메소드 리턴 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 포함하는 &lt;em&gt;인증 태그&lt;/em&gt; 주어진 데이터로부터 계산되었다.</target>
        </trans-unit>
        <trans-unit id="6615bb33e455396904663d440a93a6a2649dfe38" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; if the &lt;code&gt;callback&lt;/code&gt; function is not provided.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; 경우 &lt;code&gt;callback&lt;/code&gt; 기능이 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="131fbe48df213189e8f6aabe058dc51ce9451ef0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; requested bytes of the keying material</source>
          <target state="translated">반환 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; 키 자료의 요청 된 바이트</target>
        </trans-unit>
        <trans-unit id="1f4d97a7b7cb99aa29253d49cb2663b09c4e366f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eefdd73a6dde53adc1879b745b0609f5274ab1b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Any remaining deciphered contents. If &lt;code&gt;outputEncoding&lt;/code&gt; is specified, a string is returned. If an &lt;code&gt;outputEncoding&lt;/code&gt; is not provided, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; 나머지 해독 된 내용. 경우 &lt;code&gt;outputEncoding&lt;/code&gt; 가 지정하는 문자열이 반환됩니다. 는 IF &lt;code&gt;outputEncoding&lt;/code&gt; 가 제공되지하는&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bf9d17e21edabb9d1092237e35808ff3bfe1a8bb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Any remaining enciphered contents. If &lt;code&gt;outputEncoding&lt;/code&gt; is specified, a string is returned. If an &lt;code&gt;outputEncoding&lt;/code&gt; is not provided, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; 남아있는 암호화 된 내용. 경우 &lt;code&gt;outputEncoding&lt;/code&gt; 가 지정하는 문자열이 반환됩니다. 는 IF &lt;code&gt;outputEncoding&lt;/code&gt; 는 , 제공된되지 않은 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="aab093f52a0732f9c15db6aa1a3efce668631c60" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The EC Diffie-Hellman in the specified &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; 지정된 &lt;code&gt;encoding&lt;/code&gt; 의 EC Diffie-Hellman .</target>
        </trans-unit>
        <trans-unit id="42da4f2825a94f86db69adc62b41419dd0fdc1bb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The EC Diffie-Hellman public key in the specified &lt;code&gt;encoding&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; 지정된 &lt;code&gt;encoding&lt;/code&gt; 및 &lt;code&gt;format&lt;/code&gt; 의 EC Diffie-Hellman 공개 키 .</target>
        </trans-unit>
        <trans-unit id="9c384ff9d0fb236f01573fa12242bf332e14fd76" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The stdout from the command.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 명령의 표준 출력입니다.</target>
        </trans-unit>
        <trans-unit id="b16bbcc7c16195d56c569dfb2ac8b7f75a895c6d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; The latest &lt;code&gt;Finished&lt;/code&gt; message that has been sent to the socket as part of a SSL/TLS handshake, or &lt;code&gt;undefined&lt;/code&gt; if no &lt;code&gt;Finished&lt;/code&gt; message has been sent yet.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;정의되지 않음&amp;gt;&lt;/a&gt; SSL / TLS 핸드 셰이크의 일부로 소켓에 전송 된 최신 &lt;code&gt;Finished&lt;/code&gt; 메시지 또는 &lt;code&gt;Finished&lt;/code&gt; &lt;code&gt;undefined&lt;/code&gt; 경우 정의되지 않음 아직 메시지가 전송 않았습니다.</target>
        </trans-unit>
        <trans-unit id="919563d4fe32b255579575f1dd72e0ade347f4d6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; The latest &lt;code&gt;Finished&lt;/code&gt; message that is expected or has actually been received from the socket as part of a SSL/TLS handshake, or &lt;code&gt;undefined&lt;/code&gt; if there is no &lt;code&gt;Finished&lt;/code&gt; message so far.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;정의되지 않음&amp;gt;&lt;/a&gt; SSL / TLS 핸드 셰이크의 일부로 소켓에서 수신되거나 실제로 수신 된 최신 &lt;code&gt;Finished&lt;/code&gt; 메시지 또는 지금까지 &lt;code&gt;Finished&lt;/code&gt; 메시지 가없는 경우 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fdc8347968db59589a896b56926b2ec37115b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; The object passed as &lt;code&gt;buffer&lt;/code&gt; argument.</source>
          <target state="translated">리턴 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; 객체가 &lt;code&gt;buffer&lt;/code&gt; 인수 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7e58472a49959e9ef61372bd3ed647fac0bc591e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; pre-shared key that must either be a buffer or &lt;code&gt;null&lt;/code&gt; to stop the negotiation process. Returned PSK must be compatible with the selected cipher's digest. When negotiating TLS-PSK (pre-shared keys), this function is called with the identity provided by the client. If the return value is &lt;code&gt;null&lt;/code&gt; the negotiation process will stop and an &quot;unknown_psk_identity&quot; alert message will be sent to the other party. If the server wishes to hide the fact that the PSK identity was not known, the callback must provide some random data as &lt;code&gt;psk&lt;/code&gt; to make the connection fail with &quot;decrypt_error&quot; before negotiation is finished. PSK ciphers are disabled by default, and using TLS-PSK thus requires explicitly specifying a cipher suite with the &lt;code&gt;ciphers&lt;/code&gt; option. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | 협상 프로세스를 중지하려면 버퍼 또는 &lt;code&gt;null&lt;/code&gt; 이어야하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; 사전 공유 키입니다 . 반환 된 PSK는 선택한 암호의 다이제스트와 호환되어야합니다. TLS-PSK (사전 공유 키)를 협상 할 때이 함수는 클라이언트가 제공 한 ID로 호출됩니다. 반환 값이 &lt;code&gt;null&lt;/code&gt; 이면 협상 프로세스가 중지되고 &quot;unknown_psk_identity&quot;경고 메시지가 상대방에게 전송됩니다. 서버가 PSK ID가 알려지지 않았다는 사실을 숨기려면 콜백이 임의의 데이터를 &lt;code&gt;psk&lt;/code&gt; 로 제공해야합니다.협상이 완료되기 전에 &quot;decrypt_error&quot;로 연결이 실패하도록합니다. PSK 암호는 기본적으로 비활성화되어 있으므로 TLS-PSK를 사용하려면 &lt;code&gt;ciphers&lt;/code&gt; 옵션으로 암호 제품군을 명시 적으로 지정해야합니다 . 자세한 내용은 &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae8bd2536722f6dc91ea8a2bd1eb877bd8dff7d7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt;&amp;lt;ChildProcess&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt;&amp;lt;ChildProcess&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a70949f769e4c258ef4cde31ef92ff5cdf06539e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="013aa47c912c8b453124ba61edbe830b0698c970" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;worker&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;worker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9040de9ef5512f559636043aa552677042fd03" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="444655b0f8c10bec5dd4612626ab1744193bdee4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt; for method chaining.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt; 방법 체인합니다.</target>
        </trans-unit>
        <trans-unit id="09e0a3fa63815e5f5b5bede1de4d166ac8c07178" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;Decipher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;Decipher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d89a7f918ef66a8d90fa89f295de2d17464028ec" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;Decipher&amp;gt;&lt;/a&gt; for method chaining.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;해독&amp;gt;&lt;/a&gt; 방법 체인합니다.</target>
        </trans-unit>
        <trans-unit id="f7124e4b9550e3a0669cbca29b5c01e0908bf1b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_diffiehellman&quot;&gt;&amp;lt;DiffieHellman&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;crypto#crypto_class_diffiehellman&quot;&gt;&amp;lt;DiffieHellman&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b20a9b59fa78a2b6517cd3d287921e684802625" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_diffiehellmangroup&quot;&gt;&amp;lt;DiffieHellmanGroup&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;crypto#crypto_class_diffiehellmangroup&quot;&gt;&amp;lt;DiffieHellmanGroup&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3643ce302dae7bc62c40ab665760c83d494ff887" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_ecdh&quot;&gt;&amp;lt;ECDH&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;crypto#crypto_class_ecdh&quot;&gt;&amp;lt;ECDH&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc7ef7d0f9b5668e54b0a487e9eb96ee469abbcb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_hash&quot;&gt;&amp;lt;Hash&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_hash&quot;&gt;&amp;lt;해시&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7a499a792b38bae69415172c35bd373823b75b1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_hmac&quot;&gt;&amp;lt;Hmac&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;crypto#crypto_class_hmac&quot;&gt;&amp;lt;Hmac&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ac38d34ef74ad34ae5646ffab58a9a945c93eef" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_keyobject&quot;&gt;&amp;lt;KeyObject&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;crypto#crypto_class_keyobject&quot;&gt;&amp;lt;KeyObject&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55b2c44c180c51b415214d56be1ce138ea523f7c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_sign&quot;&gt;&amp;lt;Sign&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;crypto#crypto_class_sign&quot;&gt;&amp;lt;Sign&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c76dee1275f5fddc33bd95b4901b7219f07e8e3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_verify&quot;&gt;&amp;lt;Verify&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;crypto#crypto_class_verify&quot;&gt;&amp;lt;확인&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="806ddf30a44642b3b5e9007d0b63b61c6dece4eb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;dgram#dgram_class_dgram_socket&quot;&gt;&amp;lt;dgram.Socket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;dgram#dgram_class_dgram_socket&quot;&gt;&amp;lt;dgram.Socket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f9a9aa05f61c3eee9bd8969f851cc1f48a08ed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;domain#domain_class_domain&quot;&gt;&amp;lt;Domain&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;domain#domain_class_domain&quot;&gt;&amp;lt;도메인&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="603810ed099ab0d6e6b376e9276c39d6b7f468a6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0708eede96e0d054f95c018aff1b12ed513831fc" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; this</source>
          <target state="translated">반환 : &lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; this</target>
        </trans-unit>
        <trans-unit id="c44b5e245f57cbddd91f5c3fb53284b610b92005" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f339c8d54099a976aa0f5a49f9dbfdd43ed8991" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b852ef9942796ccd878be5330b88ca957021e0c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_fswatcher&quot;&gt;&amp;lt;fs.FSWatcher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;fs#fs_class_fs_fswatcher&quot;&gt;&amp;lt;fs.FSWatcher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="876b2de43dfcec370aaaac3abc8f83910cf60914" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Stream&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt; &lt;/a&gt;&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Stream&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="fbcba3826687347ba7f3635d5bcfda33be4d5901" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Streams&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt; 참조 &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;읽을 수 스트림&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd9de61b11b75f0ca2ade1e2f56d986f68b48a78" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_stats&quot;&gt;&amp;lt;fs.Stats&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_stats&quot;&gt;&amp;lt;fs.Stats&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="577b10e2fee0ca00282e2d0483e3d40b753b44e8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_statwatcher&quot;&gt;&amp;lt;fs.StatWatcher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_statwatcher&quot;&gt;&amp;lt;fs.StatWatcher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05ee9d6836b2d12f5622eab42a605196e6f3b837" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_writestream&quot;&gt;&amp;lt;fs.WriteStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;Writable Stream&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;fs#fs_class_fs_writestream&quot;&gt;&amp;lt;fs.WriteStream&amp;gt;&lt;/a&gt; 참조 &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;쓰기 가능한 스트림&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dcd2f7f5415bbfbd9ee66c4abdbf189fe61822f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_clientrequest&quot;&gt;&amp;lt;http.ClientRequest&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http#http_class_http_clientrequest&quot;&gt;&amp;lt;http.ClientRequest&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e91638b42314999320ff415b27e7850c98b2efb6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;&amp;lt;http.IncomingMessage&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;&amp;lt;http.IncomingMessage&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0de24cb6de36c90c2e2cb2e979dcd1446aa86ab7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_server&quot;&gt;&amp;lt;http.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http#http_class_http_server&quot;&gt;&amp;lt;http. 서버&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16831f0203cedc1ff779fcd71e58a601dbb29bf3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_serverresponse&quot;&gt;&amp;lt;http.ServerResponse&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http#http_class_http_serverresponse&quot;&gt;&amp;lt;http.ServerResponse&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60d5dfae1f7988129b93e1efc189479a23104579" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_clienthttp2session&quot;&gt;&amp;lt;ClientHttp2Session&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http2#http2_class_clienthttp2session&quot;&gt;&amp;lt;ClientHttp2Session&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74997eb5feff1ee9eeaf260042b9fabb28c40f4d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_clienthttp2stream&quot;&gt;&amp;lt;ClientHttp2Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http2#http2_class_clienthttp2stream&quot;&gt;&amp;lt;ClientHttp2Stream&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7ed357eff2f567e229ba821ddbd619cd4851a98" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2_http2serverrequest&quot;&gt;&amp;lt;http2.Http2ServerRequest&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http2#http2_class_http2_http2serverrequest&quot;&gt;&amp;lt;http2.Http2ServerRequest&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c32e9fdba5e0fbe3ce6e16e2141fb8cc9f37f9ce" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2_http2serverresponse&quot;&gt;&amp;lt;http2.Http2ServerResponse&amp;gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http2#http2_class_http2_http2serverresponse&quot;&gt;&amp;lt;http2.Http2ServerResponse&amp;gt;를&lt;/a&gt; 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec5685de3b5da8e5e526e6bbf6c9acc01622d3d5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2secureserver&quot;&gt;&amp;lt;Http2SecureServer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http2#http2_class_http2secureserver&quot;&gt;&amp;lt;Http2SecureServer&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c3a94b4629469ac31d67ea00b3b12446b89d147" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2server&quot;&gt;&amp;lt;Http2Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;http2#http2_class_http2server&quot;&gt;&amp;lt;Http2Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc3ea905e606dc7f41fa0a0ca1e84c215b3f10e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_settings_object&quot;&gt;&amp;lt;HTTP/2 Settings Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;http2#http2_settings_object&quot;&gt;&amp;lt;HTTP / 2 설정 개체&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c635449bc566c397cf3930557d2784c55aa9267" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https#https_class_https_server&quot;&gt;&amp;lt;https.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https#https_class_https_server&quot;&gt;&amp;lt;https.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0df660f0f3da6b0bd0331a026f5dc103d64b900" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;</source>
          <target state="translated">보고: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt; &amp;lt;부울&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be063cd1414ba19767d534fa889c8717d2bd8734" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;false&lt;/code&gt; if &lt;code&gt;stream&lt;/code&gt; wishes for the calling code to wait for the &lt;code&gt;'drain'&lt;/code&gt; event to be emitted before continuing to write additional data; otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 경우 &lt;code&gt;stream&lt;/code&gt; 을 기다리는 호출 코드에 대한 소원 &lt;code&gt;'drain'&lt;/code&gt; 이벤트가 추가 데이터 쓰기를 계속하기 전에 방출 할; 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="86f12d85a752db253837e6d06dccae1f465417e7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;false&lt;/code&gt; if the stream wishes for the calling code to wait for the &lt;code&gt;'drain'&lt;/code&gt; event to be emitted before continuing to write additional data; otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;false&lt;/code&gt; 을 기다리는 호출 코드에 대한 스트림하고자하는 경우 &lt;code&gt;'drain'&lt;/code&gt; 이벤트가 추가 데이터 쓰기를 계속하기 전에 방출하는 단계; 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="44a8f2fedd54c0539cc41e4127ede7d69ce652ec" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; was found in &lt;code&gt;buf&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;value&lt;/code&gt; 발견되었다 &lt;code&gt;buf&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="26f63843b00321e1dae4809a4fbe82ef80dc91c5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if additional chunks of data may continue to be pushed; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 데이터의 추가 덩어리가 밀려을 계속할 수있는 경우; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e46d8ac578ec4f6c1ed98e13840b0b8ee6851d2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if and only if a FIPS compliant crypto provider is currently in use.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 경우와 FIPS 호환 암호화 공급자가 현재 사용중인 경우에만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="0d13f506670da01f186fb7a40480053756302d7a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if renegotiation was initiated, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 재협상이 시작되었을 경우, &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="41bb4c3501e619cd28dd7d6c3b1344e17b98eab3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;spkac&lt;/code&gt; data structure is valid, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 주어진 경우 &lt;code&gt;spkac&lt;/code&gt; 데이터 구조가 유효, &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="63cfeb13e95a7b0de5efc7609415bfc0abd591e1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if the session was reused, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 세션이 재사용 된 경우, &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="9893cb6f0236aa13e1278187a6ad41a3f0626804" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on the validity of the signature for the data and public key.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;부울&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 데이터와 공개 키 서명의 유효성에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="7aced3f1b9b95169067a601083de10c6ba6d8899" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dee1ce15736e6128f15bacaa30d9398f9fc3fed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt; exported module content</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;어떤&amp;gt;&lt;/a&gt; 수출 모듈 내용</target>
        </trans-unit>
        <trans-unit id="e2ebedba2d6a99928bd6f4822837a660adf31d4b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt; the result of the very last statement executed in the script.</source>
          <target state="translated">반환 값은 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;어떤&amp;gt;&lt;/a&gt; 맨 마지막 문장의 결과는 스크립트 실행.</target>
        </trans-unit>
        <trans-unit id="1db835a75081e96999ef6258a8f8705018933199" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c845b37cb885dd7e298babba5449181d2abe869e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; Either &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, depending on the result of the comparison. See &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf.compare()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">결과 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 어느 &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; , 비교 결과에 따라. 자세한 내용은 &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf.compare()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9807d8a0910e257f7a4817dcc026a2ae272579f0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; Number of bytes written.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 에 기록 된 바이트의 수.</target>
        </trans-unit>
        <trans-unit id="d433ad7ace687c1ab7f5516c08f7501b09befac0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The index of the first occurrence of &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;buf&lt;/code&gt; does not contain &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">결과 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 처음 나타나는 인덱스 &lt;code&gt;value&lt;/code&gt; 에 &lt;code&gt;buf&lt;/code&gt; 또는 &lt;code&gt;-1&lt;/code&gt; 경우 &lt;code&gt;buf&lt;/code&gt; 포함하지 않는 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0070595b48c68e41d9f2b595be1f943e8ceabee2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The index of the last occurrence of &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;buf&lt;/code&gt; does not contain &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 의 마지막에 나타나는 인덱스 &lt;code&gt;value&lt;/code&gt; 에 &lt;code&gt;buf&lt;/code&gt; , 또는 &lt;code&gt;-1&lt;/code&gt; 경우 &lt;code&gt;buf&lt;/code&gt; 포함되지 않은 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c292621cfaf1587833d2f46308a79f2c3b43c188" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The number of bytes contained within &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 바이트 수에 포함 된 &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f4d6e4a422e8739da1715a33be3a7cf83819023" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The number of bytes copied.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt;&lt;/a&gt; 복사 된 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="b221f5668324f459144fdb1e4a7aeffa035cb8d5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; a number that can be used to reference this &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; 이 &lt;code&gt;timeout&lt;/code&gt; 를 참조하는 데 사용할 수있는 숫자</target>
        </trans-unit>
        <trans-unit id="220a853613277d87ca92d1d4c67ed71fe4a598ae" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;&lt;code&gt;offset&lt;/code&gt; plus the number of bytes written.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수&amp;gt; &lt;/a&gt; &lt;code&gt;offset&lt;/code&gt; 을 더한 바이트 수를 기록.</target>
        </trans-unit>
        <trans-unit id="698165badce4f854d20df1a8d1eb9c251e1391c1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;정수 []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7acec063c5367a30f97cbe8185c80d5cd70931a3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;번호&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec5d51f3d0117e32847b63292b9fcb5bf7f1b6b1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The &lt;code&gt;asyncId&lt;/code&gt; of the current execution context. Useful to track when something calls.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;수&amp;gt; &lt;/a&gt; &lt;code&gt;asyncId&lt;/code&gt; 현재 실행 컨텍스트의. 전화를 걸 때 추적하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dda0e3ae8bd4f0948da8efa8db917afd92d6ba99" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The ID of the resource responsible for calling the callback that is currently being executed.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;번호&amp;gt;&lt;/a&gt; 현재 실행중인 콜백을 호출하기위한 책임이있는 자원의 ID.</target>
        </trans-unit>
        <trans-unit id="f97d784a4ed9b3bda3bca8bc3897113707d746fa" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The number of bytes read.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; 읽은 바이트 수.</target>
        </trans-unit>
        <trans-unit id="a05b53dad5773a1e948b97a82b24b8886d894d60" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The number of bytes written.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; 쓴 바이트 수.</target>
        </trans-unit>
        <trans-unit id="ef16715edcd255a48f108d33cb7c709a0575ace4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The same &lt;code&gt;triggerAsyncId&lt;/code&gt; that is passed to the &lt;code&gt;AsyncResource&lt;/code&gt; constructor.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt; &lt;/a&gt; &lt;code&gt;AsyncResource&lt;/code&gt; 생성자에 전달 된 것과 동일한 &lt;code&gt;triggerAsyncId&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e0c294a2932c44dca31b7a9a487cf71554ffcf4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The unique &lt;code&gt;asyncId&lt;/code&gt; assigned to the resource.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;수&amp;gt;&lt;/a&gt; 독특한 &lt;code&gt;asyncId&lt;/code&gt; 자원에 할당.</target>
        </trans-unit>
        <trans-unit id="bca9f554346a2ef07fbfadd229e0da434e43b0de" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; the &lt;code&gt;SO_RCVBUF&lt;/code&gt; socket receive buffer size in bytes.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;번호&amp;gt; &lt;/a&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; 의 소켓은 바이트 크기 수신 버퍼.</target>
        </trans-unit>
        <trans-unit id="cc358f178236186b63b19b32bcca1889cf06b2f6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; the &lt;code&gt;SO_SNDBUF&lt;/code&gt; socket send buffer size in bytes.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;번호&amp;gt; &lt;/a&gt; &lt;code&gt;SO_SNDBUF&lt;/code&gt; 의 바이트 소켓 전송 버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="5ba695e50b1de6cf8b0c963b1afbb98b8b0e9171" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;&lt;code&gt;1&lt;/code&gt; if and only if a FIPS compliant crypto provider is currently in use, &lt;code&gt;0&lt;/code&gt; otherwise. A future semver-major release may change the return type of this API to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; FIPS 호환 암호화 공급자가 현재 사용중인 경우에만 &lt;code&gt;1&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 향후 semver-major 릴리스에서는이 API의 반환 유형을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;으로&lt;/a&gt; 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a56d5f416057574bc59cec56d28335cd2c7c391" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;숫자 []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5b61aee0b6a004c75adfe899e769141af026a8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="052bfecc8ba7fbecd2068e5687ece13f0c603090" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Returns the filename of the generated report.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 생성 된 보고서의 파일 이름을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="4fe01dce7c3ea47f3b97d1e8831c6579e4d9000c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The filename where the snapshot was saved.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 스냅 샷이 저장된 파일 이름.</target>
        </trans-unit>
        <trans-unit id="4cded4a831f1ae88a97960ee3ac2a1b56ffc9252" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The formatted string</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 형식화 된 문자열</target>
        </trans-unit>
        <trans-unit id="37e0415d5373f4d4c80cbe709057edf2ff3569fe" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The fully-resolved platform-specific Node.js file path.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 완전-해결 플랫폼 별 Node.js를 파일 경로.</target>
        </trans-unit>
        <trans-unit id="9ff2c78c33df8cc30393d855e4d3fa9b9c890de9" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The representation of &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt; &lt;/a&gt; &lt;code&gt;object&lt;/code&gt; 표현 .</target>
        </trans-unit>
        <trans-unit id="173ebdea4fa3a2cf8ee229a684f3645aeb74989f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt; if there is no name-value pair with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; 또는 &lt;code&gt;null&lt;/code&gt; 주어진 아무 이름 - 값 쌍가없는 경우 &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9b3be7f76dcd1e66d64e7899564a2d3c6199cf1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5240485ade2ca9145cf0ae3afe5ab61a6cd68f63" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;널&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;임의&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d338a09656bfc230b080df56fee08298d881748d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;널&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb77ac8822475251a22488d9af0ab6270221c120" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;정의되지 않음&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9dcedab7624fe5c7df256f835ff1bb14b0a122f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21892d87f158d05937356a533310ba7d3fe3a6f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array of the names of the supported hash algorithms, such as &lt;code&gt;'RSA-SHA256'&lt;/code&gt;. Hash algorithms are also called &quot;digest&quot; algorithms.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; 지원되는 해시 알고리즘의 이름 배열 (예 : &lt;code&gt;'RSA-SHA256'&lt;/code&gt; ) . 해시 알고리즘은 &quot;다이제스트&quot;알고리즘이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="00a4cef14bdeadecaaaccf05705e128eb521f4c8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array with the names of the supported cipher algorithms.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; 지원되는 암호 알고리즘의 이름을 가지는 배열.</target>
        </trans-unit>
        <trans-unit id="032b3835c7cba9babb69ad1e26b5ff4fe37c28c0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array with the names of the supported elliptic curves.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; 지원되는 타원 곡선의 이름을 가진 배열.</target>
        </trans-unit>
        <trans-unit id="182a549d38a43e6af4e1239818a207a156549511" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;버퍼 []&amp;gt;&lt;/a&gt; | &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1b1c3fdc77f3fab3711a26ddaef33645970f665" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;널&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6b2cb499aa33750e7e22eacc59ec9bc0d3bf536" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f9796eb7f458587e2e7dd22aa2b85d2e0634296" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; List of signature algorithms shared between the server and the client in the order of decreasing preference.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; 선호도가 낮은 순서로 서버와 클라이언트간에 공유되는 서명 알고리즘 목록.</target>
        </trans-unit>
        <trans-unit id="e5beddf71818d553b6d3b2acbcb97cfa190f2690" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; of objects containing information about the wrapper functions returned by &lt;a href=&quot;#assert_tracker_calls_fn_exact&quot;&gt;&lt;code&gt;tracker.calls()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;#assert_tracker_calls_fn_exact&quot;&gt; &lt;code&gt;tracker.calls()&lt;/code&gt; &lt;/a&gt; 반환 한 래퍼 함수에 대한 정보를 포함하는 객체의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e5d02a55e1d2e8587cf57bf949dcaa20137bc33" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&quot;&gt;&amp;lt;bigint&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&quot;&gt;&amp;lt;bigint&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6122eb8066d40d230fdd9b25813fe3fbea8f1a6a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;오류&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;정의되지 않음&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fa872d2be269abb0435c9a5dec369029ddbb598" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;함수&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43bb2d68ae0f54d13e91a372814b667822886cdd" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; A cleanup function which removes all registered listeners.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; 등록 된 모든 리스너를 제거하는 정리 함수.</target>
        </trans-unit>
        <trans-unit id="c6a799aad0d88b403edc0f4bdc7a0908b7fb73c9" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The bound function</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;기능&amp;gt;&lt;/a&gt; 바운드 기능</target>
        </trans-unit>
        <trans-unit id="55d60e868a577809e7cbda600f07c4c077e132f4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The deprecated function wrapped to emit a warning.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;기능&amp;gt;&lt;/a&gt; 경고를 방출하는 포장 사용되지 않는 기능.</target>
        </trans-unit>
        <trans-unit id="9b4b73f14da2681ff6d6bf888ef1e476e3fd55e8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The intercepted function</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;기능&amp;gt;&lt;/a&gt; 가로 챈 기능</target>
        </trans-unit>
        <trans-unit id="eb02da3ec7cce1838d388478eae2325970a02ad8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The logging function</source>
          <target state="translated">결과 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;기능&amp;gt;&lt;/a&gt; 로깅 기능</target>
        </trans-unit>
        <trans-unit id="5f909cb2fcc0a70995cfa24603243c42a6a9be3c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; a callback style function</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;기능&amp;gt;&lt;/a&gt; 콜백 스타일 기능</target>
        </trans-unit>
        <trans-unit id="04f00d0d6717a07c4d72472c88d41e3d9302aec7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; that wraps &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">반환 값 : &lt;code&gt;fn&lt;/code&gt; 을 감싸는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b1adc4fd3300d3f9f27eda78beb4e2e4e6c3d3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;함수 []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fc38ac3ab2f807a75582ab6623eaa598816e6ee" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;객체&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e137fe41a661688463e10136dadbcf1015b0f54" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; A certificate object.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;개체&amp;gt;&lt;/a&gt; 증명서 1 부 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e2ba781e37e5711142ad8fcd4620c01c8bfe11cc" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; An object containing commonly used constants for crypto and security related operations. The specific constants currently defined are described in &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto Constants&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;개체&amp;gt;&lt;/a&gt; 암호 및 보안 관련 작업을 위해 일반적으로 사용되는 상수를 포함하는 객체입니다. 현재 정의 된 특정 상수는 &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto Constants에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb71ad01de36bb04a14cbe1bc6b5c0b4c464bdc0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; An object containing commonly used constants for crypto and security related operations. The specific constants currently defined are described in &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto constants&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 암호화 및 보안 관련 작업에 일반적으로 사용되는 상수를 포함하는 개체입니다. 현재 정의 된 특정 상수는 &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto 상수에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d90b0836e587ca41432b2105157b104c85d03c5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; The resource representing the current execution. Useful to store data within the resource.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 현재 실행을 나타내는 리소스입니다. 리소스 내에 데이터를 저장하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="11d37d1594181062de1e9e054ac8bc31dcceb7ab" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; contextified object.</source>
          <target state="translated">반환 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 컨텍스트 화 된 개체.</target>
        </trans-unit>
        <trans-unit id="0f3646d7ffee5336f4cda46cdeb050d8e0b1085b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; contextified sandbox.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;개체&amp;gt;&lt;/a&gt; contextified 샌드 박스.</target>
        </trans-unit>
        <trans-unit id="4743232a5f0c10b15624693eb5927f8c24dc03c3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; in the form &lt;code&gt;{ psk: &amp;lt;Buffer|TypedArray|DataView&amp;gt;, identity: &amp;lt;string&amp;gt; }&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; to stop the negotiation process. &lt;code&gt;psk&lt;/code&gt; must be compatible with the selected cipher's digest. &lt;code&gt;identity&lt;/code&gt; must use UTF-8 encoding. When negotiating TLS-PSK (pre-shared keys), this function is called with optional identity &lt;code&gt;hint&lt;/code&gt; provided by the server or &lt;code&gt;null&lt;/code&gt; in case of TLS 1.3 where &lt;code&gt;hint&lt;/code&gt; was removed. It will be necessary to provide a custom &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; for the connection as the default one will try to check host name/IP of the server against the certificate but that's not applicable for PSK because there won't be a certificate present. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="translated">반환 : &lt;code&gt;{ psk: &amp;lt;Buffer|TypedArray|DataView&amp;gt;, identity: &amp;lt;string&amp;gt; }&lt;/code&gt; 형식의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 또는 협상 프로세스를 중지하려면 &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;psk&lt;/code&gt; 는 선택한 암호의 다이제스트와 호환되어야합니다. &lt;code&gt;identity&lt;/code&gt; 는 UTF-8 인코딩을 사용해야합니다. TLS-PSK (사전 공유 키)를 협상 할 때이 함수는 서버에서 제공하는 선택적 ID &lt;code&gt;hint&lt;/code&gt; 또는 &lt;code&gt;hint&lt;/code&gt; 가 제거 된 TLS 1.3의 경우 &lt;code&gt;null&lt;/code&gt; 로 호출 됩니다. 사용자 지정 &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; 를 제공해야합니다.연결의 경우 기본적으로 서버의 호스트 이름 / IP를 인증서에 대해 확인하려고 시도하지만 인증서가 없기 때문에 PSK에는 적용되지 않습니다. 자세한 내용은 &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5709a79906fec79eacb57382aa81988e277c28b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; the resource usage for the current process. All of these values come from the &lt;code&gt;uv_getrusage&lt;/code&gt; call which returns a &lt;a href=&quot;http://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt;&lt;code&gt;uv_rusage_t&lt;/code&gt; struct&lt;/a&gt;.</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 현재 프로세스의 자원 사용량. 이러한 모든 값은에서 온 &lt;code&gt;uv_getrusage&lt;/code&gt; 의 반환 전화 &lt;a href=&quot;http://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt; &lt;code&gt;uv_rusage_t&lt;/code&gt; 의 구조체&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa478a897c2ce78ee6072ef0926026246389ece0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; the resource usage for the current process. All of these values come from the &lt;code&gt;uv_getrusage&lt;/code&gt; call which returns a &lt;a href=&quot;https://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt;&lt;code&gt;uv_rusage_t&lt;/code&gt; struct&lt;/a&gt;.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; 현재 프로세스에 대한 리소스 사용량. 이러한 모든 값은에서 온 &lt;code&gt;uv_getrusage&lt;/code&gt; 의 반환 전화 &lt;a href=&quot;https://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt; &lt;code&gt;uv_rusage_t&lt;/code&gt; 의 구조체&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d400f14998a97f6e042dcb73070824fad3dbaef4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a13e23c488aeb0e3cd142c726d47c4424cac482" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;문자열&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee8a44323a36269db138085e6105ee5f18e48ad6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;정의되지 않음&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46c96540a5664fa051f7fd4449fad8c60a81182b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b545f593f30cf43c7a4fa6376a66eaffeb943456" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;약속&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f674dc4112dbd6b41fb0c5dcf52a365fae622b93" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; A &lt;code&gt;Promise&lt;/code&gt; that will be resolved once the underlying file descriptor is closed, or will be rejected if an error occurs while closing.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;약속&amp;gt; &lt;/a&gt; &lt;code&gt;Promise&lt;/code&gt; 기본 파일 기술자가 닫혀 또는 오류가 닫는 동안 발생하는 경우 거부됩니다하면 해결 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="fdd2b9f62b0157017c86888a1d67cb874cf06b96" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; A promise for a Readable Stream containing a V8 heap snapshot</source>
          <target state="translated">반환 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; V8 힙 스냅 샷을 포함하는 읽기 가능한 스트림에 대한 약속</target>
        </trans-unit>
        <trans-unit id="685898aaa7fe63ccd2733ebfe574dd3a87c79d50" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; If the memory is successfully measured the promise will resolve with an object containing information about the memory usage.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; 메모리가 성공적으로 측정되면 promise는 메모리 사용량에 대한 정보를 포함하는 개체로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="d5531e1848e6298906ccc9c381c093d7799f47ad" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; containing &lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt; &lt;/a&gt;&lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;fs.Dir&amp;gt;을&lt;/a&gt; 포함하는 &amp;lt;Promise&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3b62ee219aaec1ccf0fda41eb0dba33b16b76f26" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; containing &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt; &lt;/a&gt;&lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;fs.Dirent&amp;gt;를&lt;/a&gt; 포함하는 &amp;lt;Promise&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0928543b59059522475dd3783daca8ef9721520" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&amp;lt;Uint8Array&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&amp;lt;Uint8Array&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="668d1eb3cf22c0db62c85399144fcf4745922453" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;&amp;lt;Iterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;&amp;lt;반복 가능&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39bdf2d740075981eb7df28b42f8086f8a234688" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol&quot;&gt;&amp;lt;Iterator&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol&quot;&gt;&amp;lt;반복자&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5e0d311361bd412c847519a646c796ecdd35aa5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbb5ea5f2e9255e7f38d1505b353caef362dad18" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; - the read stream instance.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;이&amp;gt;&lt;/a&gt; - 읽기 스트림 인스턴스.</target>
        </trans-unit>
        <trans-unit id="a923e36849c997bfbbbcce41ccb2b5a89726c2db" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; The read stream instance.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; 읽기 스트림 인스턴스.</target>
        </trans-unit>
        <trans-unit id="4a842b5c3dac441c131d71e9c1665770edab1d3d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a836135e467affca06757fa02f5d36173ac7403" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;약속&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5e5ba06a8af2157fbddc5f568d481f3109f926" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="942d0666f33b8236c5d1244548ca8f5d6e5180d3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; of &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; 의 &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d6b2b67c150fd7011173ce80ea64583b95639a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; that iterates &lt;code&gt;eventName&lt;/code&gt; events emitted by the &lt;code&gt;emitter&lt;/code&gt;</source>
          <target state="translated">반환 값 : &lt;code&gt;emitter&lt;/code&gt; &lt;code&gt;eventName&lt;/code&gt; 이벤트 를 반복하는 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aece63ac77c64422a00aea29bb3801618092c5af" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; to fully consume the stream.</source>
          <target state="translated">스트림을 완전히 소비하려면 &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5d005c40c9713aaf471a9b06fc538536b40808ff" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;Module Namespace Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; Returning a &lt;code&gt;vm.Module&lt;/code&gt; is recommended in order to take advantage of error tracking, and to avoid issues with namespaces that contain &lt;code&gt;then&lt;/code&gt; function exports.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;Module Namespace Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; 반환하는 &lt;code&gt;vm.Module&lt;/code&gt; 는 순서 오류 추적을 활용하고, 포함 된 네임 스페이스 문제 방지하기 위해 권장되는 &lt;code&gt;then&lt;/code&gt; 기능 수출.</target>
        </trans-unit>
        <trans-unit id="6bb26b201832e0fd13ad1b3d1d492d4d15f775ef" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;Module Namespace Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; Returning a &lt;code&gt;vm.SourceTextModule&lt;/code&gt; is recommended in order to take advantage of error tracking, and to avoid issues with namespaces that contain &lt;code&gt;then&lt;/code&gt; function exports.</source>
          <target state="translated">리턴 : &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;모듈 네임 스페이스 오브젝트&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; 반환하는 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; 는 순서 오류 추적을 활용하고, 포함 된 네임 스페이스 문제 방지하기 위해 권장되는 &lt;code&gt;then&lt;/code&gt; 기능 수출.</target>
        </trans-unit>
        <trans-unit id="b01186b15836286d67ad47df373ab2eadd982744" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;modules#modules_require_id&quot;&gt;&amp;lt;require&amp;gt;&lt;/a&gt; Require function</source>
          <target state="translated">리턴 : &lt;a href=&quot;modules#modules_require_id&quot;&gt;&amp;lt;필수&amp;gt;&lt;/a&gt; 함수 필요</target>
        </trans-unit>
        <trans-unit id="c28a4f7c953054030ec49bd2980f9bd792b6ef44" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b782bb17161ecea7c1fccf6597fca0aaef0dbc17" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e82507e4e4dc5596126b103814282208cdedc382" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; The newly created socket used to start the connection.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; 연결을 시작하는 데 사용되는 새로 생성 된 소켓.</target>
        </trans-unit>
        <trans-unit id="d75dad4059a808698b1fb2f2acdf658065b33b5a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; The socket itself.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; 소켓 자체.</target>
        </trans-unit>
        <trans-unit id="0adf285edfb79238d0d75e52fb7377e070708061" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;perf_hooks#perf_hooks_class_histogram&quot;&gt;&amp;lt;Histogram&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;perf_hooks#perf_hooks_class_histogram&quot;&gt;&amp;lt;히스토그램&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="717cfb6a5e93a80876de8e824aa2733bc3c8244c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;perf_hooks#perf_hooks_class_performanceentry&quot;&gt;&amp;lt;PerformanceEntry[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;perf_hooks#perf_hooks_class_performanceentry&quot;&gt;&amp;lt;PerformanceEntry []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee5d5a1f48c1e98a1870b93fe93a1f34ce9d1de4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;repl#repl_class_replserver&quot;&gt;&amp;lt;repl.REPLServer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;repl#repl_class_replserver&quot;&gt;&amp;lt;repl.REPLServer&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1a6882b8766eb3e7d188147b83c5d6270ee68cd" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a4534e620a1fe54b48dca1112014ee9d83ed7b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="790515494e14f552422f8ae89623c3c23fb59246" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt; A Readable Stream containing the V8 heap snapshot</source>
          <target state="translated">반환 값 : &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt; V8 엔진 힙의 스냅 샷을 포함 읽을 스트림</target>
        </trans-unit>
        <trans-unit id="807a31a190025b18cf7287ab6e303ba7c0ba6fed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&amp;lt;stream.Writable&amp;gt;&lt;/a&gt; The &lt;em&gt;destination&lt;/em&gt;, allowing for a chain of pipes if it is a &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; stream</source>
          <target state="translated">리턴 : &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&amp;lt;stream.Writable&amp;gt;&lt;/a&gt; 파이프 스트림 이 &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 스트림 인 경우 파이프 체인을 허용 하는 &lt;em&gt;대상&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd7830aff0f974c2d75baa6ae89954d8f1b744a0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 : &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;스트림&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db32e39fc5242787f44d532251a3c5acc3465bb0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;Immediate&amp;gt;&lt;/a&gt; a reference to &lt;code&gt;immediate&lt;/code&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;즉시&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;immediate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5c0a096fa1372ad2b0e30d52a56f7eb4e21843d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;Immediate&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt;&lt;code&gt;clearImmediate()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;즉시&amp;gt;&lt;/a&gt; 와 함께 사용 &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt; &lt;code&gt;clearImmediate()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbac0ed5392b72d10f878fa1fe487395ffefbf2c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; a reference to &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;타임 아웃&amp;gt;&lt;/a&gt; 에 대한 참조 &lt;code&gt;timeout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="408a4251f4f463c66110368d192b9fc180bfecc6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt;&lt;code&gt;clearInterval()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;타임 아웃&amp;gt;&lt;/a&gt; 와 함께 사용하기위한 &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt; &lt;code&gt;clearInterval()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b314795f032ac27b869e4a82e1e938ea99d11323" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;타임 아웃&amp;gt;&lt;/a&gt; 와 함께 사용하기위한 &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt; &lt;code&gt;clearTimeout()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b45c7b2923ec37df2675b27295e6ba08f05d6041" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49ac4e11a4bfd6bf374abb3dca8f918c8e76084" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt;&amp;lt;tls.TLSSocket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt;&amp;lt;tls.TLSSocket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7121e7c37ee8833ea4c359aa11062c97078ae40a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tracing#tracing_tracing_object&quot;&gt;&amp;lt;Tracing&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tracing#tracing_tracing_object&quot;&gt;&amp;lt;Tracing&amp;gt;을&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="de69ca5b881190be36f8166fb8b801ae4dfa2180" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&amp;lt;URL&amp;gt;&lt;/a&gt; The file URL object.</source>
          <target state="translated">반환 값 : &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&amp;lt;URL&amp;gt;&lt;/a&gt; 파일 URL 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4bc5f51b290715fdbb111c75b2f73fbc07cebaa6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">반환 값 : &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;약속&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0d3e4ab10e6282aa4de82cf03eee2ed4b9b779d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;약속&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d859542b4ea0aed70ef505dce7ba7cba5dc4b657" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;worker_threads#worker_threads_class_messageport&quot;&gt;&amp;lt;MessagePort&amp;gt;&lt;/a&gt;</source>
          <target state="translated">리턴 : &lt;a href=&quot;worker_threads#worker_threads_class_messageport&quot;&gt;&amp;lt;MessagePort&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82c3493e3899c65b5b90bb74c36b74d80fd327dc" translate="yes" xml:space="preserve">
          <source>Reverse-i-search</source>
          <target state="translated">Reverse-i-search</target>
        </trans-unit>
        <trans-unit id="81e14d508f4d4bf7b2d9867052e8da129ffce7e6" translate="yes" xml:space="preserve">
          <source>Revoking deprecations</source>
          <target state="translated">지원 중단 취소</target>
        </trans-unit>
        <trans-unit id="e36b8811144401b42950170dd3b3c10848f04aeb" translate="yes" xml:space="preserve">
          <source>Run the supplied function in the context of the domain, implicitly binding all event emitters, timers, and lowlevel requests that are created in that context. Optionally, arguments can be passed to the function.</source>
          <target state="translated">제공된 컨텍스트에서 도메인의 컨텍스트에서 제공된 함수를 실행하여 해당 컨텍스트에서 작성된 모든 이벤트 이미 터, 타이머 및 하위 레벨 요청을 내재적으로 바인딩하십시오. 선택적으로 인수를 함수에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4362c872f2a39ffb45795e69858910885462d41c" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;node example.js&lt;/code&gt; from &lt;code&gt;/Users/mjr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/Users/mjr&lt;/code&gt; 에서 &lt;code&gt;node example.js&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="775c52f3d5f45f9251b8f53ebfc7c7a0277c9fe7" translate="yes" xml:space="preserve">
          <source>Running Node.js will now share port 8000 between the workers:</source>
          <target state="translated">Node.js를 실행하면 작업자간에 포트 8000이 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="f7e7ff16843182fb2b49dcc678679cb6c5b82b5c" translate="yes" xml:space="preserve">
          <source>Running Node.js with tracing enabled will produce log files that can be opened in the &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;&lt;code&gt;chrome://tracing&lt;/code&gt;&lt;/a&gt; tab of Chrome.</source>
          <target state="translated">추적이 활성화 된 Node.js를 실행하면 &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt; &lt;code&gt;chrome://tracing&lt;/code&gt; &lt;/a&gt; 의 chrome : // tracing 탭 에서 열 수있는 로그 파일이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="31f1bb7e43a5ab501d44d5282989b57b1cd8bf56" translate="yes" xml:space="preserve">
          <source>Running this application from the command line will start a REPL on stdin. Other REPL clients may connect through the Unix socket or TCP socket. &lt;code&gt;telnet&lt;/code&gt;, for instance, is useful for connecting to TCP sockets, while &lt;code&gt;socat&lt;/code&gt; can be used to connect to both Unix and TCP sockets.</source>
          <target state="translated">명령 행에서이 애플리케이션을 실행하면 stdin에서 REPL이 시작됩니다. 다른 REPL 클라이언트는 Unix 소켓 또는 TCP 소켓을 통해 연결할 수 있습니다. 예를 들어, &lt;code&gt;telnet&lt;/code&gt; 은 TCP 소켓에 연결하는 데 유용하지만 &lt;code&gt;socat&lt;/code&gt; 은 Unix 및 TCP 소켓 모두에 연결하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93b2d80c204eeed2b43aa6d91f213ab7c7e2e2c" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; object within the given &lt;code&gt;contextifiedObject&lt;/code&gt; and returns the result. Running code does not have access to local scope.</source>
          <target state="translated">주어진 &lt;code&gt;contextifiedObject&lt;/code&gt; 내에서 &lt;code&gt;vm.Script&lt;/code&gt; 개체에 포함 된 컴파일 된 코드를 실행하고 결과를 반환합니다. 실행중인 코드는 로컬 범위에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8550387fd879ad30e46d60c0e02cf7e8a22f7c64" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; object within the given &lt;code&gt;contextifiedSandbox&lt;/code&gt; and returns the result. Running code does not have access to local scope.</source>
          <target state="translated">지정된 &lt;code&gt;contextifiedSandbox&lt;/code&gt; 내에서 &lt;code&gt;vm.Script&lt;/code&gt; 객체에 포함 된 컴파일 된 코드를 실행하고 결과를 반환합니다. 실행 코드는 로컬 범위에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="af9e6d425eb3048d66a3c5499e226d2304c83554" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; within the context of the current &lt;code&gt;global&lt;/code&gt; object. Running code does not have access to local scope, but &lt;em&gt;does&lt;/em&gt; have access to the current &lt;code&gt;global&lt;/code&gt; object.</source>
          <target state="translated">현재 &lt;code&gt;global&lt;/code&gt; 객체 의 컨텍스트 내에서 &lt;code&gt;vm.Script&lt;/code&gt; 에 포함 된 컴파일 된 코드를 실행 합니다. 코드를 실행하면 로컬 범위에 액세스 할 수 없습니다, 그러나 &lt;em&gt;않는&lt;/em&gt; 현재에 액세스 할 수있는 &lt;code&gt;global&lt;/code&gt; 개체를.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4740e4ca28c9c8d6a8447aef5c33425e6de4802" translate="yes" xml:space="preserve">
          <source>Runtime</source>
          <target state="translated">Runtime</target>
        </trans-unit>
        <trans-unit id="e350f56a93742f4a707fef2f8f281f16f290ccf4" translate="yes" xml:space="preserve">
          <source>Runtime deprecation (for &lt;code&gt;digest === null&lt;/code&gt;).</source>
          <target state="translated">런타임 지원 중단 ( &lt;code&gt;digest === null&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="744c1f31538bb4d9cdfa6b584ba679e6d5ae05f7" translate="yes" xml:space="preserve">
          <source>Runtime deprecation (for &lt;code&gt;digest === undefined&lt;/code&gt;).</source>
          <target state="translated">런타임 지원 중단 ( &lt;code&gt;digest === undefined&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dc60a5ccf15479aa34b7ed8ce88a7b16b3ba92c" translate="yes" xml:space="preserve">
          <source>Runtime deprecation.</source>
          <target state="translated">런타임 지원 중단.</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="a7790f6b0afe6cd43166c75446f3f8d3f299ee7e" translate="yes" xml:space="preserve">
          <source>SIGCONT event (Interface)</source>
          <target state="translated">SIGCONT 이벤트 (인터페이스)</target>
        </trans-unit>
        <trans-unit id="7fd52b90248d3570eac27355100ad36f765434a9" translate="yes" xml:space="preserve">
          <source>SIGINT event (Interface)</source>
          <target state="translated">SIGINT 이벤트 (인터페이스)</target>
        </trans-unit>
        <trans-unit id="c327fd3f159bff88ba42d591f4524fc32900c591" translate="yes" xml:space="preserve">
          <source>SIGTSTP event (Interface)</source>
          <target state="translated">SIGTSTP 이벤트 (인터페이스)</target>
        </trans-unit>
        <trans-unit id="d600c946b16aa2c17dbb1fb2205d305f7c1f84b4" translate="yes" xml:space="preserve">
          <source>SNI - Allows the use of one TLS server for multiple hostnames with different SSL certificates.</source>
          <target state="translated">SNI-SSL 인증서가 다른 여러 호스트 이름에 하나의 TLS 서버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7dee86678fbbb71bd9ab3a96e429efa4bd14896" translate="yes" xml:space="preserve">
          <source>SNI: Allows the use of one TLS server for multiple hostnames with different SSL certificates.</source>
          <target state="translated">SNI : SSL 인증서가 다른 여러 호스트 이름에 대해 하나의 TLS 서버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9ca099291b3b0906f90c443700ae0626d3e101c" translate="yes" xml:space="preserve">
          <source>SPKAC is a Certificate Signing Request mechanism originally implemented by Netscape and was specified formally as part of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen&quot;&gt;HTML5's &lt;code&gt;keygen&lt;/code&gt; element&lt;/a&gt;.</source>
          <target state="translated">SPKAC는 Netscape에서 원래 구현 한 인증서 서명 요청 메커니즘이며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen&quot;&gt;HTML5의 &lt;code&gt;keygen&lt;/code&gt; 요소 의&lt;/a&gt; 일부로 공식적으로 지정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3ecbea7b48f03d48c528834cb2789bf7e045753c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; except that &lt;code&gt;path&lt;/code&gt; can be provided as an argument instead of an option.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 를 옵션 대신 인수로 제공 할 수 있다는 점을 제외하면 &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="238580765ce69cb2b6a8ab97728bb27d2e7028c3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; except that &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;host&lt;/code&gt; can be provided as arguments instead of options.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 및 &lt;code&gt;host&lt;/code&gt; 를 옵션 대신 인수로 제공 할 수 있다는 점을 제외하고 &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="d9c25c977ea2b9270771555ea5c3d366ce4760c7" translate="yes" xml:space="preserve">
          <source>Schedules execution of a one-time &lt;code&gt;callback&lt;/code&gt; after &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; 밀리 초) 후 일회성 &lt;code&gt;callback&lt;/code&gt; 실행을 예약 합니다.</target>
        </trans-unit>
        <trans-unit id="00bb19f9f8d739a94c414945c7165f76a217535f" translate="yes" xml:space="preserve">
          <source>Schedules repeated execution of &lt;code&gt;callback&lt;/code&gt; every &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; 밀리 초) 마다 &lt;code&gt;callback&lt;/code&gt; 반복 실행을 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="7c326d2efa679e38a827aaa1a796290f511403d2" translate="yes" xml:space="preserve">
          <source>Schedules the &quot;immediate&quot; execution of the &lt;code&gt;callback&lt;/code&gt; after I/O events' callbacks.</source>
          <target state="translated">I / O 이벤트 &lt;code&gt;callback&lt;/code&gt; 후 콜백 의 &quot;즉시&quot;실행을 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="0a9ca121ecbd8ae1e654321b5bc8b74e2b97c930" translate="yes" xml:space="preserve">
          <source>Scheduling Timers</source>
          <target state="translated">예약 타이머</target>
        </trans-unit>
        <trans-unit id="bf864c4fbd6d45085e1433d86c5453f234de7f5c" translate="yes" xml:space="preserve">
          <source>Scheduling timers</source>
          <target state="translated">타이머 예약</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="b4dbbb0709b0c3a86fdb5edcad9cb0b6b324abd3" translate="yes" xml:space="preserve">
          <source>Script execution</source>
          <target state="translated">스크립트 실행</target>
        </trans-unit>
        <trans-unit id="2a4c554b1c30626d61e43047e9bc04e1f369919b" translate="yes" xml:space="preserve">
          <source>Script execution timed out, possibly due to bugs in the script being executed.</source>
          <target state="translated">스크립트의 버그로 인해 스크립트 실행 시간이 초과되었습니다.</target>
        </trans-unit>
        <trans-unit id="4b4248d454f623f4ee361f3fbb621f57bb1433c7" translate="yes" xml:space="preserve">
          <source>Script execution was interrupted by &lt;code&gt;SIGINT&lt;/code&gt; (For example,</source>
          <target state="translated">스크립트 실행이 &lt;code&gt;SIGINT&lt;/code&gt; 에 의해 중단되었습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="49e1ec145f3eac20c76b8b591356f3a119727b12" translate="yes" xml:space="preserve">
          <source>Script execution was interrupted by &lt;code&gt;SIGINT&lt;/code&gt; (For example, when Ctrl+C was pressed).</source>
          <target state="translated">&lt;code&gt;SIGINT&lt;/code&gt; 에 의해 스크립트 실행이 중단되었습니다 (예 : Ctrl + C를 눌렀을 때).</target>
        </trans-unit>
        <trans-unit id="f5e75a4eef42b2e082246fd524cbfd25b4149e99" translate="yes" xml:space="preserve">
          <source>SearchParams</source>
          <target state="translated">SearchParams</target>
        </trans-unit>
        <trans-unit id="ca7ca0f7f3fa047ca04c4a111524d86afd7c12d3" translate="yes" xml:space="preserve">
          <source>SecurePair</source>
          <target state="translated">SecurePair</target>
        </trans-unit>
        <trans-unit id="fca315334ff3b061a2d6e14dbdd1fcc7f6b8ae95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt;. This variant of the constructor is equivalent to &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 이 생성자의 변형은 &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="a09a22758a093c2499e87070df0da538f0053547" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b76b96d1413bd104e50bac29233121ca78df6931" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;. This was never a class in the sense that the constructor always returned a &lt;code&gt;Buffer&lt;/code&gt; instance, rather than a &lt;code&gt;SlowBuffer&lt;/code&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 생성자가 항상 &lt;code&gt;SlowBuffer&lt;/code&gt; 인스턴스가 아닌 &lt;code&gt;Buffer&lt;/code&gt; 인스턴스를 반환한다는 점에서 이것은 클래스가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="24e3b6551ceb147de0666fb318a16f939e80b36e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_array&quot;&gt;&lt;code&gt;Buffer.from(array)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_array&quot;&gt; &lt;code&gt;Buffer.from(array)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7762be8b35300dd7bc072f55b953fab21044162c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_arraybuffer_byteoffset_length&quot;&gt;&lt;code&gt;Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#buffer_static_method_buffer_from_arraybuffer_byteoffset_length&quot;&gt; &lt;code&gt;Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f25c2ea4bc5412440ba31ff2e5cfc8cd3c06dfd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_buffer&quot;&gt;&lt;code&gt;Buffer.from(buffer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_buffer&quot;&gt; &lt;code&gt;Buffer.from(buffer)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8415d9db0bd5edf7e3a0f28ccc0587cd8c93228" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_string_encoding&quot;&gt;&lt;code&gt;Buffer.from(string[, encoding])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_string_encoding&quot;&gt; &lt;code&gt;Buffer.from(string[, encoding])&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b14138eee605f5a71ebbb8222c4a111819a52b75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#crypto_class_sign&quot;&gt;&lt;code&gt;Sign&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">예를 보려면 &lt;a href=&quot;#crypto_class_sign&quot;&gt; &lt;code&gt;Sign&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5380a50e335bcbedbfc7463797f108b89f80a88c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#fs_class_fs_dir&quot;&gt;&lt;code&gt;fs.Dir&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">예제는 &lt;a href=&quot;#fs_class_fs_dir&quot;&gt; &lt;code&gt;fs.Dir&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9c0a6d655cc6e29e110402ea9fb62a9528d3a9e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_headers_object&quot;&gt;HTTP/2 Headers Object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_headers_object&quot;&gt;HTTP / 2 헤더 오브젝트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a205d305a5be99590d6c867ef63c9ca86e102d8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="358354022e09543b0010781dc086aedcc97c2881" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="141f1b05cc911409a6773dde0587abfda30e3a59" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_message_headers&quot;&gt;&lt;code&gt;message.headers&lt;/code&gt;&lt;/a&gt; for details on how duplicate headers are handled.</source>
          <target state="translated">중복 헤더를 처리하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;#http_message_headers&quot;&gt; &lt;code&gt;message.headers&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5b076f1ef7dbb3db9f712a7a18a8f570c210f83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ab78199777d44dd2ae84fb42ad1642003892b8e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7775e532310728adf19ab9bf24d48fa32be0da4b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt; for the directory name of the current module.</source>
          <target state="translated">현재 모듈의 디렉토리 이름은 &lt;a href=&quot;#modules_dirname&quot;&gt; &lt;code&gt;__dirname&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b53beecea8c43065d7ae497ad8724a8ab07633d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#tls_session_resumption&quot;&gt;Session Resumption&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#tls_session_resumption&quot;&gt;세션 재개&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ae2ff22ea902aa41ef0a485c7ab55ac4c3f840f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#tls_tlssocket_getpeercertificate_detailed&quot;&gt;&lt;code&gt;tls.TLSSocket.getPeerCertificate()&lt;/code&gt;&lt;/a&gt; for an example of the certificate structure.</source>
          <target state="translated">인증서 구조의 예는 &lt;a href=&quot;#tls_tlssocket_getpeercertificate_detailed&quot;&gt; &lt;code&gt;tls.TLSSocket.getPeerCertificate()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="317bc5a5ad778c05cdb5ed811f73dfb2d1711275" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#util_custom_inspection_functions_on_objects&quot;&gt;Custom inspection functions on Objects&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;#util_custom_inspection_functions_on_objects&quot;&gt;은 객체의 사용자 정의 검사 기능&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="41af94146d57ab10f20803c82a5ab5a3ef55fd51" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#worker_threads_port_postmessage_value_transferlist&quot;&gt;&lt;code&gt;port.postMessage()&lt;/code&gt;&lt;/a&gt; for more information on how messages are passed, and what kind of JavaScript values can be successfully transported through the thread barrier.</source>
          <target state="translated">메시지 전달 방법 및 스레드 장벽을 통해 어떤 종류의 JavaScript 값을 성공적으로 전송할 수 있는지에 대한 자세한 내용 은 &lt;a href=&quot;#worker_threads_port_postmessage_value_transferlist&quot;&gt; &lt;code&gt;port.postMessage()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="844ffc7de89eb55190d966dce8da5b5556eec2a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#zlib_brotli_constants&quot;&gt;below&lt;/a&gt; for more details on Brotli-specific options.</source>
          <target state="translated">Brotli 관련 옵션에 대한 자세한 내용 은 &lt;a href=&quot;#zlib_brotli_constants&quot;&gt;아래&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a55161c1f15cc33e2fca11926d7f876c51ee210" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assert#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt; for more information about deep strict equality.</source>
          <target state="translated">참조 &lt;a href=&quot;assert#assert_assert_deepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepStrictEqual()&lt;/code&gt; &lt;/a&gt; 깊이 엄격한 평등에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="9c74ca079f26427c19c2c4e40a6903f34a0e4507" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;buffer#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; for more details on &lt;code&gt;Buffer&lt;/code&gt; pooling.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; 풀링 에 대한 자세한 내용 은 &lt;a href=&quot;buffer#buffer_static_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2150dd24e2633b36d3b09f518539998c81f8bb81" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;child_process#child_process_event_exit&quot;&gt;&lt;code&gt;child_process&lt;/code&gt; event: &lt;code&gt;'exit'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;child_process#child_process_event_exit&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; 이벤트 : &lt;code&gt;'exit'&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14e8ca4700b6aac17aded2e20fdab465dceef9f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;child_process#child_process_event_message&quot;&gt;&lt;code&gt;child_process&lt;/code&gt; event: &lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;child_process#child_process_event_message&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; 이벤트 : &lt;code&gt;'message'&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="231f39f43bbdd49d0bccca7359a063eaf7e04b05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;customizing ESM specifier resolution&lt;/a&gt; for example usage.</source>
          <target state="translated">사용 예는 &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;ESM 지정자 확인 사용자 지정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd56af45a65d6d14c6b359c75c51d32da9ad8a7b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3b51922cd39978e91e621b1052e84099c0109cef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_close_callback&quot;&gt;&lt;code&gt;server.close()&lt;/code&gt;&lt;/a&gt; from the HTTP module for details.</source>
          <target state="translated">자세한 내용 은 HTTP 모듈에서 &lt;a href=&quot;http#http_server_close_callback&quot;&gt; &lt;code&gt;server.close()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="848963fefc2c0b43e5eed2ea4a5b06f45dd8f4d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_headerstimeout&quot;&gt;&lt;code&gt;http.Server#headersTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_headerstimeout&quot;&gt; &lt;code&gt;http.Server#headersTimeout&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49a9f424125db043691373d5611b0129e20c0317" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_keepalivetimeout&quot;&gt;&lt;code&gt;http.Server#keepAliveTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_keepalivetimeout&quot;&gt; &lt;code&gt;http.Server#keepAliveTimeout&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd8dabd77ad828d58e78821482f11065c4e744b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_maxheaderscount&quot;&gt;&lt;code&gt;http.Server#maxHeadersCount&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_maxheaderscount&quot;&gt; &lt;code&gt;http.Server#maxHeadersCount&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a17bedb869dd7072d33a54e649346ca34da43e25" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_requesttimeout&quot;&gt;&lt;code&gt;http.Server#requestTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_requesttimeout&quot;&gt; &lt;code&gt;http.Server#requestTimeout&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b957a30fb40f77bc6389b673974eb9de1fd5339" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_settimeout_msecs_callback&quot;&gt;&lt;code&gt;http.Server#setTimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_settimeout_msecs_callback&quot;&gt; &lt;code&gt;http.Server#setTimeout()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bb6915c092ff71c6e505b5637e2c56874c477d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_timeout&quot;&gt;&lt;code&gt;http.Server#timeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_timeout&quot;&gt; &lt;code&gt;http.Server#timeout&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8671de77f1e92b3287e370a8e050133a6f6bbffb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/kill.2.html&quot;&gt;&lt;code&gt;kill(2)&lt;/code&gt;&lt;/a&gt; for reference.</source>
          <target state="translated">참조는 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/kill.2.html&quot;&gt; &lt;code&gt;kill(2)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="51aa5321367589a2fdb3988773ce3c73ba01f5c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/waitpid.2.html&quot;&gt;&lt;code&gt;waitpid(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://man7.org/linux/man-pages/man2/waitpid.2.html&quot;&gt; &lt;code&gt;waitpid(2)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd7f5df44f32ad70b4bd716b72825ce6a2aa2916" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; for additional information about the output of running &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt; on various operating systems.</source>
          <target state="translated">다양한 운영 체제에서 &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; &lt;/a&gt; 을 실행 한 결과에 대한 추가 정보는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a33a2e12ed05d0cb5a4e16a527302d878789025e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;OpenSSL&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;OpenSSL&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8c66da93ae58591dbd6f7b182675d82bd51d84a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;SSL_CIPHER_get_name&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;SSL_CIPHER_get_name&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca87ae4dd2fdd09252bdd00672a1d95d54d38e88" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_get_shared_sigalgs.html&quot;&gt;SSL_get_shared_sigalgs&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_get_shared_sigalgs.html&quot;&gt;SSL_get_shared_sigalgs&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="99bbe7b815b5dfeeaa7f384772773cdb7a58a444" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;process#process_event_message&quot;&gt;&lt;code&gt;process&lt;/code&gt; event: &lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#process_event_message&quot;&gt; &lt;code&gt;process&lt;/code&gt; 이벤트 : &lt;code&gt;'message'&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c26f1da9a1d0ce33eb8230b21bfecdb88f3f918" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_cork&quot;&gt;&lt;code&gt;writable.cork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_writable_cork&quot;&gt; &lt;code&gt;writable.cork()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db495bc94c7a8b82b37b411eeaba06717babb61e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_destroy_error&quot;&gt;&lt;code&gt;writable.destroy()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;stream#stream_writable_destroy_error&quot;&gt; &lt;code&gt;writable.destroy()&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="280db6179ee945665779f144be6e189c5dc65ce2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_destroyed&quot;&gt;&lt;code&gt;writable.destroyed&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;stream#stream_writable_destroyed&quot;&gt; &lt;code&gt;writable.destroyed&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="dc32170b7b41017de6577360a918f33cb5676a14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;writable.end()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;stream#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;writable.end()&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4de81f844aacf48db1af5a6fe4a5daa173726664" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_uncork&quot;&gt;&lt;code&gt;writable.uncork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_writable_uncork&quot;&gt; &lt;code&gt;writable.uncork()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce46aa7f6b235c4b32463e04f5be9893ebb5aa05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tls#tls_session_resumption&quot;&gt;&lt;code&gt;Session Resumption&lt;/code&gt;&lt;/a&gt; for information about TLS session reuse.</source>
          <target state="translated">TLS 세션 재사용에 대한 정보는 &lt;a href=&quot;tls#tls_session_resumption&quot;&gt; &lt;code&gt;Session Resumption&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ea7bb3a392c8a98f431a5e4e937acacb8f20780" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
