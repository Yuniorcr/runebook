<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="27e7cca9674c69cbae553d2787cd0068cccf6b1d" translate="yes" xml:space="preserve">
          <source>This class is rarely used as emitting a warning about a possible upcoming deprecation is unusual, and &lt;a href=&quot;#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is preferred for already active deprecations.</source>
          <target state="translated">이 클래스는 앞으로의 지원 중단에 대한 경고를 표시하는 데 거의 사용되지 않으며, 이미 활성화 된 지원 중단에 대해 &lt;a href=&quot;#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt; 이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="d95705b4a873383b5806c6228d0f0b76c0192a86" translate="yes" xml:space="preserve">
          <source>This class is responsible for deciding whether each cookie should be accepted from / returned to the server.</source>
          <target state="translated">이 클래스는 각 쿠키가 서버에서 수락 / 서버로 반환되어야하는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="3fa43e85129f543fb2802d9d69d28e5ae356d069" translate="yes" xml:space="preserve">
          <source>This class is the low-level building block of the module. It uses &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for efficient, event-based parsing of XML. It can be fed XML data incrementally with the &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; method, and parsing events are translated to a push API - by invoking callbacks on the &lt;em&gt;target&lt;/em&gt; object. If &lt;em&gt;target&lt;/em&gt; is omitted, the standard &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; is used. If &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt; is given, the value overrides the encoding specified in the XML file.</source>
          <target state="translated">이 클래스는 모듈의 하위 레벨 빌딩 블록입니다. 효율적인 이벤트 기반 XML 구문 분석을 위해 &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt; 를 사용합니다 . &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 XML 데이터를 점진적으로 공급할 수 있으며 구문 분석 이벤트는 &lt;em&gt;대상&lt;/em&gt; 오브젝트 에서 콜백을 호출하여 푸시 API로 변환됩니다 . 경우 &lt;em&gt;타겟&lt;/em&gt; 생략 표준&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; 가&lt;/a&gt; 사용된다. 경우&lt;em&gt; 인코딩 &lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;한 것은&lt;/a&gt; 주어, 값은 XML 파일에 지정된 인코딩을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a8d4e4a2b443c0328627e07d8942450df6f9acd5" translate="yes" xml:space="preserve">
          <source>This class is used to compile information about which tests have succeeded and which have failed.</source>
          <target state="translated">이 클래스는 성공한 테스트와 실패한 테스트 정보를 컴파일하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="19c6d25e7d0520fa3fa0d6f7f3496202c2b9609d" translate="yes" xml:space="preserve">
          <source>This class is used to declare a new Context Variable, e.g.:</source>
          <target state="translated">이 클래스는 다음과 같은 새로운 컨텍스트 변수를 선언하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ea543c836937291f06020a0688e606be1c234c21" translate="yes" xml:space="preserve">
          <source>This class is used to handle the HTTP requests that arrive at the server. By itself, it cannot respond to any actual HTTP requests; it must be subclassed to handle each request method (e.g. GET or POST). &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; provides a number of class and instance variables, and methods for use by subclasses.</source>
          <target state="translated">이 클래스는 서버에 도착하는 HTTP 요청을 처리하는 데 사용됩니다. 그 자체로는 실제 HTTP 요청에 응답 할 수 없습니다. 각 요청 메소드 (예 : GET 또는 POST)를 처리하려면 서브 클래 싱되어야합니다.&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt; 는 많은 클래스 및 인스턴스 변수와 서브 클래스가 사용할 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6403a1c9fef53db5449f8e3ec933899d44b75e13" translate="yes" xml:space="preserve">
          <source>This class is used to manipulate the style database.</source>
          <target state="translated">이 클래스는 스타일 데이터베이스를 조작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ae41f6c700530ae3123c6899bdeb790bf978c70d" translate="yes" xml:space="preserve">
          <source>This class is used to serve either files or output of CGI scripts from the current directory and below. Note that mapping HTTP hierarchic structure to local directory structure is exactly as in &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 현재 디렉토리와 그 아래에서 CGI 스크립트의 파일 또는 출력을 제공하는 데 사용됩니다. HTTP 계층 구조를 로컬 디렉토리 구조에 맵핑하는 것은&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;합니다.</target>
        </trans-unit>
        <trans-unit id="d73a28b6898088641cae4d2fb4ef19cb14030dc9" translate="yes" xml:space="preserve">
          <source>This class may be initialized from bytes data (which may include NULs). The primary access to the content of a &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; object is provided by an attribute:</source>
          <target state="translated">이 클래스는 바이트 데이터 (NUL 포함)에서 초기화 될 수 있습니다. &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt; 객체 의 내용에 대한 기본 액세스 는 속성에 의해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e153045d5ef230e03be4d8fd269f06139bac488b" translate="yes" xml:space="preserve">
          <source>This class may be initialized with seconds since the epoch, a time tuple, an ISO 8601 time/date string, or a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; instance. It has the following methods, supported mainly for internal use by the marshalling/unmarshalling code:</source>
          <target state="translated">이 클래스는 에포크 이후의 초, 시간 튜플, ISO 8601 시간 / 날짜 문자열 또는 &lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt; 이후에 초기화 될 수 있습니다. 인스턴스 . 마샬링 / 비 정렬 화 코드에서 주로 내부 용으로 지원되는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e518e965c65cd6eb618dfd9b0ac0288dcc5ef8d9" translate="yes" xml:space="preserve">
          <source>This class may include information about the public identifier, system identifier, byte stream (possibly with character encoding information) and/or the character stream of an entity.</source>
          <target state="translated">이 클래스는 공개 식별자, 시스템 식별자, 바이트 스트림 (문자 인코딩 정보와 함께) 및 / 또는 엔티티의 문자 스트림에 대한 정보를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="274d480a865d7adb6c54dc75d212c4d48857918f" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;dec&lt;/em&gt;, which must be a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이 클래스의 방법은 구축 &lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt; 의 정확한 값을 나타내는 &lt;em&gt;십이&lt;/em&gt; 해야합니다, &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; 을&lt;/a&gt; 인스턴스 합니다.</target>
        </trans-unit>
        <trans-unit id="3fd368dae9da5194b728f020cb469d8249732946" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;flt&lt;/em&gt;, which must be a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Beware that &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; is not the same value as &lt;code&gt;Fraction(3, 10)&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 방법은 구축 &lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt; 의 정확한 값을 나타내는 &lt;em&gt;FLT&lt;/em&gt; 해야합니다, &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; . 그주의 &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; 같은 값이 아닌 &lt;code&gt;Fraction(3, 10)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c95eb91a808c54e72687a20b7b718fbb74eea5b6" translate="yes" xml:space="preserve">
          <source>This class method is not implemented for &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">이 클래스 메서드는 &lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt; 개체에 대해 구현되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="748288d24682412f0009c250de2e85bbeb99569b" translate="yes" xml:space="preserve">
          <source>This class provides &lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt;&lt;code&gt;run_script()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt;&lt;code&gt;report()&lt;/code&gt;&lt;/a&gt; methods to determine the set of modules imported by a script. &lt;em&gt;path&lt;/em&gt; can be a list of directories to search for modules; if not specified, &lt;code&gt;sys.path&lt;/code&gt; is used. &lt;em&gt;debug&lt;/em&gt; sets the debugging level; higher values make the class print debugging messages about what it&amp;rsquo;s doing. &lt;em&gt;excludes&lt;/em&gt; is a list of module names to exclude from the analysis. &lt;em&gt;replace_paths&lt;/em&gt; is a list of &lt;code&gt;(oldpath, newpath)&lt;/code&gt; tuples that will be replaced in module paths.</source>
          <target state="translated">이 클래스는 스크립트에서 가져온 모듈 세트를 판별하기 위한 &lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt; &lt;code&gt;run_script()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt; &lt;code&gt;report()&lt;/code&gt; &lt;/a&gt; 메소드를 제공합니다 . &lt;em&gt;path&lt;/em&gt; 는 모듈을 검색 할 디렉토리 목록 일 수 있습니다. 지정하지 않으면 &lt;code&gt;sys.path&lt;/code&gt; 가 사용됩니다. &lt;em&gt;디버그&lt;/em&gt; 는 디버깅 수준을 설정합니다. 값이 클수록 클래스는 수행중인 작업에 대한 디버깅 메시지를 인쇄합니다. &lt;em&gt;제외&lt;/em&gt; 는 분석에서 제외 할 모듈 이름 목록입니다. &lt;em&gt;replace_paths&lt;/em&gt; 는 모듈 경로에서 대체 될 &lt;code&gt;(oldpath, newpath)&lt;/code&gt; 튜플 의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="d834a754ee71425bdd757a24acd21616bac9cee6" translate="yes" xml:space="preserve">
          <source>This class provides a simple synchronization primitive for use by a fixed number of threads that need to wait for each other. Each of the threads tries to pass the barrier by calling the &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method and will block until all of the threads have made their &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; calls. At this point, the threads are released simultaneously.</source>
          <target state="translated">이 클래스는 서로를 기다려야하는 고정 된 수의 스레드에서 사용할 간단한 동기화 기본을 제공합니다. 각 스레드는 &lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 장벽을 통과하려고 시도하고 모든 스레드가 &lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; 호출을 수행 할 때까지 차단 합니다. 이 시점에서 스레드가 동시에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="08dad0580cbeaccad622fabb4161de4b7fe561bf" translate="yes" xml:space="preserve">
          <source>This class provides an API similar to &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and also accepts coroutines as test functions.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 와 유사한 API를 제공하며 코 루틴을 테스트 함수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c276e1c0e7d656e7cea1025636063d50ff0ad285" translate="yes" xml:space="preserve">
          <source>This class provides empty abstract implementations for many methods that derived classes can override selectively; the default implementations represent a file that cannot be read, written or seeked.</source>
          <target state="translated">이 클래스는 파생 클래스가 선택적으로 재정의 할 수있는 많은 메서드에 대해 빈 추상 구현을 제공합니다. 기본 구현은 읽거나 쓰거나 검색 할 수없는 파일을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d70311a21c8bcd74dcf12663d62377b18ed78824" translate="yes" xml:space="preserve">
          <source>This class provides information about the requirements imposed on email for a specific character set. It also provides convenience routines for converting between character sets, given the availability of the applicable codecs. Given a character set, it will do its best to provide information on how to use that character set in an email message in an RFC-compliant way.</source>
          <target state="translated">이 클래스는 특정 문자 집합에 대한 전자 메일에 요구되는 요구 사항에 대한 정보를 제공합니다. 또한 해당 코덱이 사용 가능한 경우 문자 세트 간 변환을위한 편리한 루틴을 제공합니다. 문자 집합이 주어지면 RFC 호환 방식으로 전자 메일 메시지에서 해당 문자 집합을 사용하는 방법에 대한 정보를 제공하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ea7cddb548da1e6410ebeae8791fca85fc47a9ba" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and returning &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instances and for creating a list-like object (&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt;) backed by shared memory.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt; 인스턴스 를 작성 및 리턴 하고 공유 메모리가 지원 하는 목록 유사 오브젝트 ( &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt; ) 를 작성하기위한 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="193f5372ace98009161fcd09d57d781b73d181ef" translate="yes" xml:space="preserve">
          <source>This class provides methods to read, parse and answer questions about the &lt;code&gt;robots.txt&lt;/code&gt; file at &lt;em&gt;url&lt;/em&gt;.</source>
          <target state="translated">이 클래스는 &lt;em&gt;url&lt;/em&gt; 의 &lt;code&gt;robots.txt&lt;/code&gt; 파일에 대한 질문을 읽고 구문 분석하고 답변하는 메소드를 제공합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6028a52d014cdefa926e7af0fc1f466c66ee3def" translate="yes" xml:space="preserve">
          <source>This class represents Netscape, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies. It is not expected that users of &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; construct their own &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instances. Instead, if necessary, call &lt;code&gt;make_cookies()&lt;/code&gt; on a &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이 클래스는 Netscape, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; 쿠키를 나타냅니다 . &lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt; 사용자가 자신의 &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스를 구성 하지는 않습니다 . 대신 필요한 경우 &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 &lt;code&gt;make_cookies()&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3fd2d200eb5006dc61a4b31bac6c557561c951b" translate="yes" xml:space="preserve">
          <source>This class represents a MIME-types database. By default, it provides access to the same database as the rest of this module. The initial database is a copy of that provided by the module, and may be extended by loading additional &lt;code&gt;mime.types&lt;/code&gt;-style files into the database using the &lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; methods. The mapping dictionaries may also be cleared before loading additional data if the default data is not desired.</source>
          <target state="translated">이 클래스는 MIME 유형 데이터베이스를 나타냅니다. 기본적으로이 모듈의 나머지와 동일한 데이터베이스에 대한 액세스를 제공합니다. 초기 데이터베이스는 모듈이 제공 한 것의 사본이며 &lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 데이터베이스에 추가 &lt;code&gt;mime.types&lt;/code&gt; 스타일 파일을 로드하여 확장 할 수 있습니다 . 기본 데이터가 바람직하지 않은 경우 추가 데이터를로드하기 전에 매핑 사전을 지울 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a16f2fa4e9ca1f4b04f678175a55e8942c49241a" translate="yes" xml:space="preserve">
          <source>This class represents a subpart of a MIME message. It is identical to &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, except that no &lt;em&gt;MIME-Version&lt;/em&gt; headers are added when &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; is called, since sub-parts do not need their own &lt;em&gt;MIME-Version&lt;/em&gt; headers.</source>
          <target state="translated">이 클래스는 MIME 메시지의 하위 부분을 나타냅니다. 그것은 동일 &lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 없는 것을 제외하고, &lt;em&gt;MIME-버전의&lt;/em&gt; 경우 헤더가 추가되지 않습니다 &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; 호출 하위 부분이 자신의 필요로하지 않기 때문에, &lt;em&gt;MIME-버전&lt;/em&gt; 헤더를.</target>
        </trans-unit>
        <trans-unit id="22f8e65bf7b5a8eada37fbd323ba83523d329661" translate="yes" xml:space="preserve">
          <source>This class represents an action that should be run only after a certain amount of time has passed &amp;mdash; a timer. &lt;a href=&quot;#threading.Timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; and as such also functions as an example of creating custom threads.</source>
          <target state="translated">이 클래스는 일정 시간이 지난 후에 만 ​​수행해야하는 작업 (타이머)을 나타냅니다. &lt;a href=&quot;#threading.Timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 의 서브 클래스이며 사용자 정의 스레드를 만드는 예제로도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="932c82e2e83abbd41e3929520e8f112fd5c73fbd" translate="yes" xml:space="preserve">
          <source>This class represents an aggregation of individual test cases and test suites. The class presents the interface needed by the test runner to allow it to be run as any other test case. Running a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instance is the same as iterating over the suite, running each test individually.</source>
          <target state="translated">이 클래스는 개별 테스트 사례 및 테스트 스위트의 집합을 나타냅니다. 이 클래스는 다른 테스트 사례로 실행할 수 있도록 테스트 러너에 필요한 인터페이스를 제공합니다. &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 인스턴스를 실행하는 것은 스위트를 반복하는 것과 동일하며 각 테스트를 개별적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="29e097cd340803b24a612fe148a5a39528edd250" translate="yes" xml:space="preserve">
          <source>This class represents tunable scheduling parameters used in &lt;a href=&quot;#os.sched_setparam&quot;&gt;&lt;code&gt;sched_setparam()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.sched_setscheduler&quot;&gt;&lt;code&gt;sched_setscheduler()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.sched_getparam&quot;&gt;&lt;code&gt;sched_getparam()&lt;/code&gt;&lt;/a&gt;. It is immutable.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;#os.sched_setparam&quot;&gt; &lt;code&gt;sched_setparam()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.sched_setscheduler&quot;&gt; &lt;code&gt;sched_setscheduler()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.sched_getparam&quot;&gt; &lt;code&gt;sched_getparam()&lt;/code&gt; &lt;/a&gt; 에서 사용되는 조정 가능한 스케줄링 매개 변수를 나타냅니다 . 불변입니다.</target>
        </trans-unit>
        <trans-unit id="73e7a16f5e1d0b8f46a771fc3488a73fef21a8e9" translate="yes" xml:space="preserve">
          <source>This class serves files from the current directory and below, directly mapping the directory structure to HTTP requests.</source>
          <target state="translated">이 클래스는 디렉토리 구조를 HTTP 요청에 직접 맵핑하여 현재 디렉토리 및 그 이하의 파일을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8f4d59250a2949ebcdb2c5415b61ebd0d2b8d4b7" translate="yes" xml:space="preserve">
          <source>This class takes care of the details of the trace facility; a derived class should implement user interaction. The standard debugger class (&lt;a href=&quot;pdb#pdb.Pdb&quot;&gt;&lt;code&gt;pdb.Pdb&lt;/code&gt;&lt;/a&gt;) is an example.</source>
          <target state="translated">이 클래스는 추적 기능의 세부 사항을 처리합니다. 파생 클래스는 사용자 상호 작용을 구현해야합니다. 표준 디버거 클래스 ( &lt;a href=&quot;pdb#pdb.Pdb&quot;&gt; &lt;code&gt;pdb.Pdb&lt;/code&gt; &lt;/a&gt; )가 예입니다.</target>
        </trans-unit>
        <trans-unit id="f37ba959190077672d1f15b3db66d2d7d1c6ff73" translate="yes" xml:space="preserve">
          <source>This class&amp;rsquo;s functionality requires a functioning shared semaphore implementation on the host operating system. Without one, the functionality in this class will be disabled, and attempts to instantiate a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; will result in an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt; for additional information. The same holds true for any of the specialized queue types listed below.</source>
          <target state="translated">이 클래스의 기능에는 호스트 운영 체제에서 작동하는 공유 세마포어 구현이 필요합니다. 하나가 없으면이 클래스의 기능이 비활성화되고 &lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 를 인스턴스화하려고 하면 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 . 추가 정보는 &lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt; 을 참조하십시오 . 아래 나열된 특수 대기열 유형에 대해서도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="a41d8654ea90612b336c64ac521c0b59963c7ad7" translate="yes" xml:space="preserve">
          <source>This client which interacts with the demo XMLRPC server can be invoked as:</source>
          <target state="translated">데모 XMLRPC 서버와 상호 작용하는이 클라이언트는 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d83a870c39ddf30740d2e358c4cdbc65c6a91d89" translate="yes" xml:space="preserve">
          <source>This closes the database connection. Note that this does not automatically call &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;. If you just close your database connection without calling &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; first, your changes will be lost!</source>
          <target state="translated">데이터베이스 연결이 닫힙니다. 이것은 &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt; 자동으로 호출하지 않습니다 . &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt; 먼저 호출하지 않고 데이터베이스 연결을 종료하면 변경 사항이 손실됩니다!</target>
        </trans-unit>
        <trans-unit id="b748ec83f84e7fc5c00bf2adb54dcda5003a9203" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">이 코드는 실제로 Python이 &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;대화식 모드&lt;/a&gt; 에서 실행될 때 자동으로 실행됩니다 ( &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f5c07d22b235c3ab30af3ac6e65afbc6f9fe2d6d" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">이 코드는 실제로 Python이 &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;대화 형 모드&lt;/a&gt; 에서 실행될 때 자동으로 실행됩니다 ( &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="translated">이 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="20b1f6a9a16308d3cf1b57b7bfba034f0203ec1e" translate="yes" xml:space="preserve">
          <source>This code is exactly equivalent to the first example. Be sure to give the additional functions the same name as the original property (&lt;code&gt;x&lt;/code&gt; in this case.)</source>
          <target state="translated">이 코드는 첫 번째 예제와 정확히 동일합니다. 추가 기능에 원래 속성과 동일한 이름을 지정하십시오 ( 이 경우 &lt;code&gt;x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7a72ea94a4bab4b14c20d25cdf441f6b5ef6aabf" translate="yes" xml:space="preserve">
          <source>This code pattern allows the testing suite to be run by &lt;code&gt;test.regrtest&lt;/code&gt;, on its own as a script that supports the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; CLI, or via the &lt;code&gt;python -m unittest&lt;/code&gt; CLI.</source>
          <target state="translated">이 코드 패턴을 사용하면 &lt;code&gt;test.regrtest&lt;/code&gt; 가 테스트 스위트를 단독으로 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; CLI 를 지원하는 스크립트로 또는 &lt;code&gt;python -m unittest&lt;/code&gt; CLI 를 통해 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="754e9cb8c3e6e8e331a6ffc92da78e28bd75069a" translate="yes" xml:space="preserve">
          <source>This code was contributed by Lance Ellinghouse, and modified by Jack Jansen.</source>
          <target state="translated">이 코드는 Lance Ellinghouse가 제공했으며 Jack Jansen이 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="7cc17a1a45954846e0e7ca436ab70cd34d59503c" translate="yes" xml:space="preserve">
          <source>This command can return very large results, especially if &lt;em&gt;group_pattern&lt;/em&gt; is not specified. It is best to cache the results offline unless you really need to refresh them.</source>
          <target state="translated">이 명령은 특히 &lt;em&gt;group_pattern을&lt;/em&gt; 지정하지 않은 경우 매우 큰 결과를 반환 할 수 있습니다 . 실제로 새로 고치지 않으면 결과를 오프라인으로 캐시하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0eb035f79d945c28dca579096d5869dcd935eb24" translate="yes" xml:space="preserve">
          <source>This command is frequently disabled by NNTP server administrators.</source>
          <target state="translated">이 명령은 NNTP 서버 관리자가 자주 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="5dbea069ae4115ecbc17706143c788302a103ca5" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">이 공통 제한 사항은 일반적으로 사용되는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문의 헤더에 컨텍스트 관리자를 직접 작성하는 것이 좋습니다 (위의 모든 사용 예제에 표시됨).</target>
        </trans-unit>
        <trans-unit id="7714c77ded18400f3429fbbd721ee6fd52039336" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">이러한 일반적인 제한은 일반적으로 사용되는 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문의 헤더에 컨텍스트 관리자를 직접 만드는 것이 좋습니다 (위의 모든 사용 예에 ​​나와 있음).</target>
        </trans-unit>
        <trans-unit id="61c2e658f60d1390cfe7ca8803a3ad8e80e90d95" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; is the backward compatibility policy. It replicates the behavior of the email package in Python 3.2. The &lt;a href=&quot;#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; module also defines an instance of this class, &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;, that is used as the default policy. Thus the default behavior of the email package is to maintain compatibility with Python 3.2.</source>
          <target state="translated">이 구체적인 &lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt; 은 이전 버전과의 호환성 정책입니다. Python 3.2에서 전자 메일 패키지의 동작을 복제합니다. &lt;a href=&quot;#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt; 모듈은이 클래스의 인스턴스를 정의 &lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt; 기본 정책으로 사용됩니다. 따라서 전자 메일 패키지의 기본 동작은 Python 3.2와의 호환성을 유지하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="92d19da16d5a8553c7cb7e0f68f04a827f9e7f61" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; provides behavior that is intended to be fully compliant with the current email RFCs. These include (but are not limited to) &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, and the current MIME RFCs.</source>
          <target state="translated">이 구체적인 &lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt; 은 현재 전자 메일 RFC를 완전히 준수하기위한 동작을 제공합니다. 여기에는 &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; 및 현재 MIME RFC 가 포함되지만 이에 국한되지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80e6fc8925c6c5e7eaca5a6ad0a4fd81fd994085" translate="yes" xml:space="preserve">
          <source>This constant contains a boolean value which indicates if IPv6 is supported on this platform.</source>
          <target state="translated">이 상수에는이 플랫폼에서 IPv6가 지원되는지 여부를 나타내는 부울 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3e2858f91cb9186fa1ca376fd637bf7c9e6e52d8" translate="yes" xml:space="preserve">
          <source>This constant is documented in the Linux documentation.</source>
          <target state="translated">이 상수는 Linux 설명서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe32614311b23ebbbdfc9132f699e5b6f9f4ab2e" translate="yes" xml:space="preserve">
          <source>This constant is meant to be used with the &lt;em&gt;detect_types&lt;/em&gt; parameter of the &lt;a href=&quot;#sqlite3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">이 상수는 &lt;a href=&quot;#sqlite3.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt; 함수 의 &lt;em&gt;detect_types&lt;/em&gt; 매개 변수 와 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="85870d23cfed7a7265f4ba24695196830564152b" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">이 상수는 Python이 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; 옵션으로 시작되지 않은 경우에 해당됩니다 . &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; 문도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d8b43bae2d97d139786cacb0a8c20081186d79f" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">이 상수는 Python이 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; 옵션으로 시작되지 않은 경우 참 입니다. &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; 문도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8db8774c7221bac7ad7292b78b6b055382d44cb4" translate="yes" xml:space="preserve">
          <source>This constraint can be eschewed if both the &lt;em&gt;provider&lt;/em&gt; (the implementation of the object types to be transferred) and the &lt;em&gt;consumer&lt;/em&gt; (the implementation of the communications system) support the out-of-band transfer facilities provided by pickle protocol 5 and higher.</source>
          <target state="translated">&lt;em&gt;공급자&lt;/em&gt; (전송 될 객체 유형의 구현)와 &lt;em&gt;소비자&lt;/em&gt; (통신 시스템의 구현)가 피클 프로토콜 5 이상에서 제공하는 대역 외 전송 기능을 지원하는 경우이 제약 조건을 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e50b3a4fe127122b1c1be9fb32f8d7c4e9891d68" translate="yes" xml:space="preserve">
          <source>This constructor should always be called with keyword arguments. Arguments are:</source>
          <target state="translated">이 생성자는 항상 키워드 인수와 함께 호출해야합니다. 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eee83f35dcf09cd6810b2ed6630fade00f668e02" translate="yes" xml:space="preserve">
          <source>This content manager provides only a minimum interface beyond that provided by &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; itself: it deals only with text, raw byte strings, and &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. Nevertheless, it provides significant advantages compared to the base API: &lt;code&gt;get_content&lt;/code&gt; on a text part will return a unicode string without the application needing to manually decode it, &lt;code&gt;set_content&lt;/code&gt; provides a rich set of options for controlling the headers added to a part and controlling the content transfer encoding, and it enables the use of the various &lt;code&gt;add_&lt;/code&gt; methods, thereby simplifying the creation of multipart messages.</source>
          <target state="translated">이 컨텐츠 관리자는 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 자체 가 제공하는 것 이상의 최소 인터페이스 만 제공 합니다. 텍스트, 원시 바이트 문자열 및 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 오브젝트 만 처리합니다. 그럼에도 불구하고 기본 API와 비교하여 상당한 이점을 제공합니다 . 텍스트 부분의 &lt;code&gt;get_content&lt;/code&gt; 는 응용 프로그램에서 수동으로 디코딩하지 않고도 유니 코드 문자열을 반환하며, &lt;code&gt;set_content&lt;/code&gt; 는 부분에 추가 된 헤더를 제어하고 내용을 제어하기위한 다양한 옵션을 제공합니다. 전송 인코딩을 통해 다양한 &lt;code&gt;add_&lt;/code&gt; 메소드를 사용할 수 있으므로 멀티 파트 메시지 작성이 단순 해집니다.</target>
        </trans-unit>
        <trans-unit id="e3f7dceef060c97974b4e4226c16041d9314af78" translate="yes" xml:space="preserve">
          <source>This context is most useful in multi-threaded environments. Changing one of the fields before threads are started has the effect of setting system-wide defaults. Changing the fields after threads have started is not recommended as it would require thread synchronization to prevent race conditions.</source>
          <target state="translated">이 컨텍스트는 다중 스레드 환경에서 가장 유용합니다. 스레드가 시작되기 전에 필드 중 하나를 변경하면 시스템 전체 기본값을 설정하는 효과가 있습니다. 스레드가 시작된 후 필드를 변경하는 것은 경쟁 조건을 방지하기 위해 스레드 동기화가 필요하므로 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="056192954bc171b8b9375158ba2f55065c788c8e" translate="yes" xml:space="preserve">
          <source>This context is used by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor as a prototype for new contexts. Changing a field (such a precision) has the effect of changing the default for new contexts created by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">이 컨텍스트는 &lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 생성자가 새 컨텍스트의 프로토 타입으로 사용합니다. 필드 (정밀도)를 변경하면 &lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 생성자가 만든 새 컨텍스트의 기본값을 변경하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="adfa9fe3b0226da7aaf4ee9312f722dce55e612a" translate="yes" xml:space="preserve">
          <source>This context manager is &lt;a href=&quot;#reentrant-cms&quot;&gt;reentrant&lt;/a&gt;.</source>
          <target state="translated">이 컨텍스트 관리자는 &lt;a href=&quot;#reentrant-cms&quot;&gt;재진입&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="587a63de629bfa8dd59dc368a12d35c0c91ebfc9" translate="yes" xml:space="preserve">
          <source>This convenience is provided to encourage &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; users to generate error messages in the standard, parseable format understood by Emacs and other Unix tools.</source>
          <target state="translated">이 편리함은 &lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt; 사용자가 Emacs 및 기타 Unix 도구가 이해하는 표준의 구문 분석 가능한 형식으로 오류 메시지를 생성 하도록 장려 합니다.</target>
        </trans-unit>
        <trans-unit id="812edcca58e65f791d72238eb59be8a7fc8c8bb3" translate="yes" xml:space="preserve">
          <source>This copy is done without the additional cost of transferring data from the kernel to user space and then back into the kernel. Additionally, some filesystems could implement extra optimizations. The copy is done as if both files are opened as binary.</source>
          <target state="translated">이 복사는 커널에서 사용자 공간으로 데이터를 전송 한 다음 다시 커널로 전송하는 추가 비용없이 수행됩니다. 또한 일부 파일 시스템은 추가 최적화를 구현할 수 있습니다. 복사는 두 파일이 모두 바이너리로 열린 것처럼 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fbdd11eca1826383b7073d5d09e2477fe27a9fdc" translate="yes" xml:space="preserve">
          <source>This coroutine function is primarily intended to be used for executing IO-bound functions/methods that would otherwise block the event loop if they were ran in the main thread. For example:</source>
          <target state="translated">이 코 루틴 함수는 주로 메인 스레드에서 실행 된 경우 이벤트 루프를 차단하는 IO 바인딩 함수 / 메소드를 실행하는 데 사용됩니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="951c20bdc9ca8ee62daa8ad49c6f7fb15c561414" translate="yes" xml:space="preserve">
          <source>This decorator enables legacy generator-based coroutines to be compatible with async/await code:</source>
          <target state="translated">이 데코레이터를 사용하면 레거시 생성기 기반 코 루틴이 비동기 / 대기 코드와 호환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9992dac3f3dff13b2f0ac6d879fbe3eae7add96f" translate="yes" xml:space="preserve">
          <source>This decorator is itself not available at runtime. It is mainly intended to mark classes that are defined in type stub files if an implementation returns an instance of a private class:</source>
          <target state="translated">이 데코레이터는 런타임에 사용할 수 없습니다. 구현이 개인 클래스의 인스턴스를 리턴하는 경우 유형 스텁 파일에 정의 된 클래스를 표시하는 데 주로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fc1ff93c67faa61e74eb3e2bda4297a01530896c" translate="yes" xml:space="preserve">
          <source>This decorator requires that the &lt;code&gt;__dict__&lt;/code&gt; attribute on each instance be a mutable mapping. This means it will not work with some types, such as metaclasses (since the &lt;code&gt;__dict__&lt;/code&gt; attributes on type instances are read-only proxies for the class namespace), and those that specify &lt;code&gt;__slots__&lt;/code&gt; without including &lt;code&gt;__dict__&lt;/code&gt; as one of the defined slots (as such classes don&amp;rsquo;t provide a &lt;code&gt;__dict__&lt;/code&gt; attribute at all).</source>
          <target state="translated">이 데코레이터는 각 인스턴스 의 &lt;code&gt;__dict__&lt;/code&gt; 속성이 변경 가능한 매핑이어야합니다. 이는 메타 클래스 ( 유형 인스턴스 의 &lt;code&gt;__dict__&lt;/code&gt; 속성이 클래스 네임 스페이스에 대한 읽기 전용 프록시이므로) 및 일부 정의 된 슬롯 중 하나로 &lt;code&gt;__dict__&lt;/code&gt; 를 포함하지 않고 &lt;code&gt;__slots__&lt;/code&gt; 를 지정하는 메타 클래스와 같은 일부 유형에서는 작동하지 않음을 의미합니다. &lt;code&gt;__dict__&lt;/code&gt; 속성을 전혀 제공하지 마십시오 ).</target>
        </trans-unit>
        <trans-unit id="c300d0d694010854de5f7492ad74271773977803" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">이 데코레이터는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt; 코 루틴에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="93cd9b064734dee81aa3a32c5926879d8b2b0c06" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">이 데코레이터는 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt; 코 루틴에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b7ac610500209606a0a0139f3b647a4e463cfcb" translate="yes" xml:space="preserve">
          <source>This default value for the &lt;em&gt;policy&lt;/em&gt; keyword to &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; policy, via its pre-defined instance &lt;a href=&quot;#email.policy.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 대한이 기본 값 &lt;em&gt;정책&lt;/em&gt; 에 키워드 &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; 이&lt;/a&gt; 는 IS &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; 의&lt;/a&gt; 의 미리 정의 된 인스턴스를 통해 정책 &lt;a href=&quot;#email.policy.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e21702e7206b1540ec13499c73a1d346fc076d6f" translate="yes" xml:space="preserve">
          <source>This defaults to &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; and describes directories to treat as containing CGI scripts.</source>
          <target state="translated">기본값은 &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; 이며 CGI 스크립트를 포함하는 것으로 취급 할 디렉토리를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b5df6ab6eb381dc8f1c26576661cf9cf458d811a" translate="yes" xml:space="preserve">
          <source>This demonstrates how similar derived enumerations can be defined; for example a &lt;code&gt;StrEnum&lt;/code&gt; that mixes in &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 유사한 파생 열거를 정의 할 수있는 방법을 보여줍니다. 예를 들어, &lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 에&lt;/a&gt; 혼합 되는 &lt;code&gt;StrEnum&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="85da0637f33c740513754e7c543cab4e3c5fd9df" translate="yes" xml:space="preserve">
          <source>This dictionary can be used as argument for a subsequent call to &lt;a href=&quot;#turtle.pen&quot;&gt;&lt;code&gt;pen()&lt;/code&gt;&lt;/a&gt; to restore the former pen-state. Moreover one or more of these attributes can be provided as keyword-arguments. This can be used to set several pen attributes in one statement.</source>
          <target state="translated">이 사전은 이전 펜 상태를 복원 하기 위해 &lt;a href=&quot;#turtle.pen&quot;&gt; &lt;code&gt;pen()&lt;/code&gt; &lt;/a&gt; 에 대한 후속 호출에 대한 인수로 사용될 수 있습니다 . 또한 이러한 속성 중 하나 이상을 키워드 인수로 제공 할 수 있습니다. 한 문장에서 여러 펜 속성을 설정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce89b5732743cb6bcf141dd8012b3ff6141f9e13" translate="yes" xml:space="preserve">
          <source>This dictionary maps the HTTP 1.1 status codes to the W3C names.</source>
          <target state="translated">이 사전은 HTTP 1.1 상태 코드를 W3C 이름에 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="9ddd1f324c17578c73e1a32273ebd7f0cdc6accd" translate="yes" xml:space="preserve">
          <source>This differs from the behaviour of &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; where SIGINT will be ignored while the equivalent blocking calls are in progress.</source>
          <target state="translated">이는 동등한 차단 호출이 진행되는 동안 SIGINT가 무시되는 &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 동작과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="3068ba406f985162f6ef582ac392d3ccc0bfca5a" translate="yes" xml:space="preserve">
          <source>This document describes the behavior under the default (for &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;) policy &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;. If you are going to use another policy, you should be using the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">이 문서는 기본 ( &lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; ) 정책 &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; 에&lt;/a&gt; 따른 동작을 설명합니다 . 다른 정책을 사용하려는 경우 &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 클래스를 대신 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32a3cafdce538e5b18df61742dfb8d4b171f69c3" translate="yes" xml:space="preserve">
          <source>This document explains how the theme engine works</source>
          <target state="translated">이 문서는 테마 엔진의 작동 방식을 설명합니다</target>
        </trans-unit>
        <trans-unit id="6ea1780a291c39bade61c609ec38121b00edd92b" translate="yes" xml:space="preserve">
          <source>This documentation page contains the following sections:</source>
          <target state="translated">이 설명서 페이지에는 다음 섹션이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f3cd91e868bb20379048d1e01a95c878e0816d7" translate="yes" xml:space="preserve">
          <source>This documentation page covers both &lt;a href=&quot;#transports&quot;&gt;Transports&lt;/a&gt; and &lt;a href=&quot;#protocols&quot;&gt;Protocols&lt;/a&gt;.</source>
          <target state="translated">이 문서 페이지는 &lt;a href=&quot;#transports&quot;&gt;전송&lt;/a&gt; 및 &lt;a href=&quot;#protocols&quot;&gt;프로토콜을&lt;/a&gt; 모두 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="92bab0d11dc1fe34db31a7fa119d6a0aad2dfb5b" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings - it is only intended as the inverse operation of &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;. A more full-featured ISO 8601 parser, &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; is available in the third-party package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutil&lt;/a&gt;.</source>
          <target state="translated">이것은 임의의 ISO 8601 문자열 구문 분석을 지원 하지 &lt;em&gt;않으며 &lt;/em&gt;&lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt; &lt;code&gt;datetime.isoformat()&lt;/code&gt; &lt;/a&gt; 의 역연 산만을 목적으로합니다 . 보다 완전한 기능을 갖춘 ISO 8601 파서 인 &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; 는 타사 패키지 &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutil&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d39cfcf67975976ed6d0852105f14c7bbd179606" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings. It is only intended as the inverse operation of &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">임의의 ISO 8601 문자열 구문 분석 은 지원 하지 &lt;em&gt;않습니다&lt;/em&gt; . &lt;a href=&quot;#datetime.time.isoformat&quot;&gt; &lt;code&gt;time.isoformat()&lt;/code&gt; &lt;/a&gt; 의 역연 산만을 목적으로합니다 .</target>
        </trans-unit>
        <trans-unit id="a8d96811345bfb9f1ce5d798a0568d8c1532106c" translate="yes" xml:space="preserve">
          <source>This does nothing; it doesn&amp;rsquo;t even set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header.</source>
          <target state="translated">이것은 아무것도하지 않습니다. 심지어 &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; 헤더를 설정하지도 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0f118286f16ac96c73365a27b4b2e8dc31597b52" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t actually modify the message&amp;rsquo;s payload, but it does set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to either &lt;code&gt;7bit&lt;/code&gt; or &lt;code&gt;8bit&lt;/code&gt; as appropriate, based on the payload data.</source>
          <target state="translated">이것은 실제로 메시지의 페이로드를 수정하지는 않지만 페이로드 데이터를 기반으로 &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; 헤더를 &lt;code&gt;7bit&lt;/code&gt; 또는 &lt;code&gt;8bit&lt;/code&gt; 비트로 적절하게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a82f68ab04c4d00089910c6eb4764da31cf6c7f8" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t include &lt;code&gt;not&lt;/code&gt;, which is a &lt;a href=&quot;#ast.UnaryOp&quot;&gt;&lt;code&gt;UnaryOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 포함되지 않습니다 &lt;code&gt;not&lt;/code&gt; 인 &lt;a href=&quot;#ast.UnaryOp&quot;&gt; &lt;code&gt;UnaryOp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc9c32bbd592532e00cbc38e674970da7b46499a" translate="yes" xml:space="preserve">
          <source>This elides the response code from the server. If the response code is needed, use &lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt;&lt;code&gt;descriptions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 서버에서 응답 코드를 제거합니다. 응답 코드가 필요한 경우 &lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt; &lt;code&gt;descriptions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b98cf0f954a93782cde0031b12229cb211f39e9" translate="yes" xml:space="preserve">
          <source>This encoding is always ASCII-compatible.</source>
          <target state="translated">이 인코딩은 항상 ASCII 호환입니다.</target>
        </trans-unit>
        <trans-unit id="b2e9101400ad7ee4e55ed42180277b67f8cf0f57" translate="yes" xml:space="preserve">
          <source>This ensures that your mocks will fail in the same way as your production code if they are used incorrectly:</source>
          <target state="translated">이렇게하면 모의 객체가 잘못 사용될 경우 프로덕션 코드와 같은 방식으로 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84405dc340963074580e6158c072ba0de9baaf30" translate="yes" xml:space="preserve">
          <source>This error is mapped to the exception &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류는 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="782f94ac91ca671c983c4102c829d80211c23fb1" translate="yes" xml:space="preserve">
          <source>This example calls both functions with a &lt;code&gt;NULL&lt;/code&gt; pointer (&lt;code&gt;None&lt;/code&gt; should be used as the &lt;code&gt;NULL&lt;/code&gt; pointer):</source>
          <target state="translated">이 예는와 두 함수 호출 &lt;code&gt;NULL&lt;/code&gt; 의 포인터 ( &lt;code&gt;None&lt;/code&gt; 으로 사용되어서는 안 &lt;code&gt;NULL&lt;/code&gt; 의 포인터를)</target>
        </trans-unit>
        <trans-unit id="a09c84b9d7833c97dd614df7daea0247b0acfc92" translate="yes" xml:space="preserve">
          <source>This example compares two strings, considering blanks to be &amp;ldquo;junk&amp;rdquo;:</source>
          <target state="translated">이 예는 공백을 &quot;정크&quot;로 간주하여 두 문자열을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="044525c1b0f02f0079887e5bc92a57b5bc8aee0f" translate="yes" xml:space="preserve">
          <source>This example compares two texts. First we set up the texts, sequences of individual single-line strings ending with newlines (such sequences can also be obtained from the &lt;code&gt;readlines()&lt;/code&gt; method of file-like objects):</source>
          <target state="translated">이 예제는 두 개의 텍스트를 비교합니다. 먼저 개행으로 끝나는 개별 단일 행 문자열의 시퀀스 인 텍스트를 설정합니다 (이러한 시퀀스는 파일과 같은 객체 의 &lt;code&gt;readlines()&lt;/code&gt; 메서드 에서 얻을 수도 있음 ).</target>
        </trans-unit>
        <trans-unit id="4b2905cb398396cba10263a63f13db7111f72408" translate="yes" xml:space="preserve">
          <source>This example creates a Future object, creates and schedules an asynchronous Task to set result for the Future, and waits until the Future has a result:</source>
          <target state="translated">이 예에서는 Future 개체를 만들고 비동기 작업을 만들어 예약하여 Future에 대한 결과를 설정하고 Future에 결과가 나타날 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="018978f4b59649c07ce86602d1484e00501f5987" translate="yes" xml:space="preserve">
          <source>This example creates a SSL context with the recommended security settings for client sockets, including automatic certificate verification:</source>
          <target state="translated">이 예제는 자동 인증서 확인을 포함하여 클라이언트 소켓에 권장되는 보안 설정으로 SSL 컨텍스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="39ba95039e07988bb739e58971213fbb994f0bcc" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to wrap the Windows &lt;code&gt;MessageBoxW&lt;/code&gt; function so that it supports default parameters and named arguments. The C declaration from the windows header file is this:</source>
          <target state="translated">이 예 는 기본 매개 변수와 명명 된 인수를 지원하도록 Windows &lt;code&gt;MessageBoxW&lt;/code&gt; 함수 를 래핑하는 방법을 보여줍니다 . Windows 헤더 파일의 C 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa58ef83147938371c0a379ed8dc30747eca3d72" translate="yes" xml:space="preserve">
          <source>This example displays the number of bytes taken by non-directory files in each directory under the starting directory, except that it doesn&amp;rsquo;t look under any CVS subdirectory:</source>
          <target state="translated">이 예제는 CVS 서브 디렉토리를 보지 않는 것을 제외하고 시작 디렉토리 아래의 각 디렉토리에서 비 디렉토리 파일이 차지하는 바이트 수를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="13a5a113117f57607a533f5a8bed89cd81731c96" translate="yes" xml:space="preserve">
          <source>This example gets the python.org main page and displays the first 300 bytes of it.</source>
          <target state="translated">이 예제는 python.org 메인 페이지를 가져 와서 첫 300 바이트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f0c973599ef6d6281b47995acbaf5fa790a8c858" translate="yes" xml:space="preserve">
          <source>This example illustrates how to open a URL using your Netscape, Mozilla, or Lynx cookies (assumes Unix/Netscape convention for location of the cookies file):</source>
          <target state="translated">이 예제는 Netscape, Mozilla 또는 Lynx 쿠키를 사용하여 URL을 여는 방법을 보여줍니다 (쿠키 파일의 위치는 Unix / Netscape 규칙으로 가정).</target>
        </trans-unit>
        <trans-unit id="beb0e848071a51f42c8de87c4c5b82271cd652b5" translate="yes" xml:space="preserve">
          <source>This example is limited by the fact that &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; allocates its own memory: you cannot create a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; instance that is backed by another object&amp;rsquo;s memory. However, third-party datatypes such as NumPy arrays do not have this limitation, and allow use of zero-copy pickling (or making as few copies as possible) when transferring between distinct processes or systems.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 가 자체 메모리를 할당 한다는 사실에 의해 제한됩니다 . 다른 객체의 메모리가 지원 하는 &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 인스턴스를 만들 수 없습니다 . 그러나 NumPy 어레이와 같은 타사 데이터 유형에는 이러한 제한이 없으며 별도의 프로세스 또는 시스템간에 전송할 때 무 복사 산세를 사용하거나 가능한 적은 사본을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="026ec75fb1b97ca54f747abca8eb5568018e6f79" translate="yes" xml:space="preserve">
          <source>This example is the implementation of the &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; function, described above, with the docstring omitted. It demonstrates many of the other functions provided by this module.</source>
          <target state="translated">이 예제는 docstring이 생략 된, 위에서 설명한 &lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt; 함수 의 구현입니다 . 이 모듈에서 제공하는 다른 많은 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="817efcdabbed81fd5a8d7128157922b1290e74ae" translate="yes" xml:space="preserve">
          <source>This example looks for a word following a hyphen:</source>
          <target state="translated">이 예는 하이픈 다음에 나오는 단어를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="bc8fd01e0952c36a02e5bec07eb86980d4050c06" translate="yes" xml:space="preserve">
          <source>This example program is a fairly realistic example of a simple program. In this particular case, we do not take much advantage of the flexibility of the DOM.</source>
          <target state="translated">이 예제 프로그램은 간단한 프로그램의 상당히 현실적인 예입니다. 이 특별한 경우에 우리는 DOM의 유연성을 크게 활용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="602035184a663fa6ac77e2c6161bb89ea08510cc" translate="yes" xml:space="preserve">
          <source>This example prompts the user for addresses needed in the message envelope (&amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses), and the message to be delivered. Note that the headers to be included with the message must be included in the message as entered; this example doesn&amp;rsquo;t do any processing of the &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers. In particular, the &amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses must be included in the message headers explicitly.</source>
          <target state="translated">이 예에서는 메시지 봉투에 필요한 주소 ( '받는 사람'및 '보낸 사람'주소)와 메시지를 전달하라는 메시지를 표시합니다. 메시지에 포함 할 헤더는 입력 한대로 메시지에 포함되어야합니다. 이 예제는 &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; 헤더를 처리하지 않습니다 . 특히 '받는 사람'및 '보낸 사람'주소는 메시지 헤더에 명시 적으로 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d372344db0a88b9a62331f1afecea14cbc5e21cd" translate="yes" xml:space="preserve">
          <source>This example replaces the default &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; with one that uses programmatically-supplied proxy URLs, and adds proxy authorization support with &lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt;&lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 예제는 기본 &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt; 를 프로그래밍 방식으로 제공되는 프록시 URL을 사용하는 것으로 &lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt; &lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt; &lt;/a&gt; 하여 프록시 권한 부여 지원을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="199f5f9a1a221f41ad61ef405ac46477978bb064" translate="yes" xml:space="preserve">
          <source>This example sets the date header to the current time and date using the current timezone offset.</source>
          <target state="translated">이 예에서는 현재 시간대 오프셋을 사용하여 날짜 헤더를 현재 시간 및 날짜로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="149d4f5895c99a4046ae6fe26db4a50dcbbe5da1" translate="yes" xml:space="preserve">
          <source>This example shows a simple way of using &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 예는 &lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt; 을 사용하는 간단한 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2c2e84d68d5adbd7f566f2d6ceb02815d482de30" translate="yes" xml:space="preserve">
          <source>This example shows how a subclass of &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; can be used to store additional information about an object and affect the value that&amp;rsquo;s returned when the referent is accessed:</source>
          <target state="translated">이 예제는 &lt;a href=&quot;#weakref.ref&quot;&gt; &lt;code&gt;ref&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가 오브젝트에 대한 추가 정보를 저장하고 참조에 액세스 할 때 리턴되는 값에 영향을주는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4877278717bc43a6502484400cc4fee0faeb0e64" translate="yes" xml:space="preserve">
          <source>This example shows how to get a (hex-encoded) 128-bit authentication code for message &lt;code&gt;b'message data'&lt;/code&gt; with key &lt;code&gt;b'pseudorandom key'&lt;/code&gt;:</source>
          <target state="translated">이 예제는 &lt;code&gt;b'pseudorandom key'&lt;/code&gt; 키를 사용 하여 메시지 &lt;code&gt;b'message data'&lt;/code&gt; 에 대한 (16 진 인코딩 된) 128 비트 인증 코드를 얻는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="60cba076ed0f689a795d5c4df38be8c57a334080" translate="yes" xml:space="preserve">
          <source>This example shows how to remove a directory tree on Windows where some of the files have their read-only bit set. It uses the onerror callback to clear the readonly bit and reattempt the remove. Any subsequent failure will propagate.</source>
          <target state="translated">이 예는 일부 파일에 읽기 전용 비트가 설정된 Windows에서 디렉토리 트리를 제거하는 방법을 보여줍니다. 읽기 전용 비트를 지우고 제거를 다시 시도하기 위해 onerror 콜백을 사용합니다. 후속 실패는 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="c874d767b57899eb18aae7c1b3e35304836e0ba1" translate="yes" xml:space="preserve">
          <source>This example shows how to use difflib to create a &lt;code&gt;diff&lt;/code&gt;-like utility. It is also contained in the Python source distribution, as &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt;.</source>
          <target state="translated">이 예는 difflib를 사용하여 &lt;code&gt;diff&lt;/code&gt; 유사 유틸리티 를 작성하는 방법을 보여줍니다 . 또한 Python 소스 배포에도 &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; 로 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="794f21932d1f601d70b331b1eb4caf3dbbb36379" translate="yes" xml:space="preserve">
          <source>This example sorts mail from several mailing lists into different mailboxes, being careful to avoid mail corruption due to concurrent modification by other programs, mail loss due to interruption of the program, or premature termination due to malformed messages in the mailbox:</source>
          <target state="translated">이 예에서는 여러 메일 그룹의 메일을 다른 사서함으로 분류하여 다른 프로그램에 의한 동시 수정, 프로그램 중단으로 인한 메일 손실 또는 메일 박스의 잘못된 메시지로 인한 조기 종료로 인한 메일 손상을 방지하기 위해주의를 기울입니다.</target>
        </trans-unit>
        <trans-unit id="ae1a261bc1a23bc317bfbe070ca5019f36eaaca8" translate="yes" xml:space="preserve">
          <source>This example uses 64-byte internal digests, and returns the 32-byte final digest:</source>
          <target state="translated">이 예는 64 바이트 내부 다이제스트를 사용하고 32 바이트 최종 다이제스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f178cedeeecdf46a16a56bca9ff1c21e113376f" translate="yes" xml:space="preserve">
          <source>This example uses the iterator form:</source>
          <target state="translated">이 예제는 반복자 양식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="756a7f6039de09d51d751e231a05b92875ae2f1b" translate="yes" xml:space="preserve">
          <source>This example will print all file names in the current directory with the extension &lt;code&gt;.txt&lt;/code&gt;:</source>
          <target state="translated">이 예제는 현재 디렉토리의 확장자가 &lt;code&gt;.txt&lt;/code&gt; 인 모든 파일 이름을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="cb5551e6bcc3809b3b5a499fdf51a6ac5f52fa14" translate="yes" xml:space="preserve">
          <source>This exception can be caught to perform custom operations when asyncio Tasks are cancelled. In almost all situations the exception must be re-raised.</source>
          <target state="translated">이 예외는 asyncio 작업이 취소 될 때 사용자 지정 작업을 수행하도록 잡힐 수 있습니다. 거의 모든 상황에서 예외를 다시 제기해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2245ad8aaf85394acf3919fb1083c95fc2c5f50" translate="yes" xml:space="preserve">
          <source>This exception collects exceptions that are raised during a multi-file operation. For &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, the exception argument is a list of 3-tuples (&lt;em&gt;srcname&lt;/em&gt;, &lt;em&gt;dstname&lt;/em&gt;, &lt;em&gt;exception&lt;/em&gt;).</source>
          <target state="translated">이 예외는 다중 파일 작업 중에 발생한 예외를 수집합니다. 들면 &lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt; , 예외 인수 3- 튜플 (목록이다 &lt;em&gt;srcname&lt;/em&gt; , &lt;em&gt;dstname&lt;/em&gt; , &lt;em&gt;예외&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="04ff319a12f67cfca8f5f539906ec49ee19dae8b" translate="yes" xml:space="preserve">
          <source>This exception is a subclass of &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 예외는 &lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e7736c85cc53a35d004f8b52b5afbc5eaaff8f8e" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. In user defined base classes, abstract methods should raise this exception when they require derived classes to override the method, or while the class is being developed to indicate that the real implementation still needs to be added.</source>
          <target state="translated">이 예외는 &lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 에서 파생됩니다 . 사용자 정의 기본 클래스에서 추상 메소드는 메소드를 대체하기 위해 파생 클래스가 필요할 때 또는 실제 구현을 계속 추가해야 함을 나타 내기 위해 클래스를 개발할 때이 예외를 발생시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="c66b9d77cb46fec7211670e8e7cd4edf77c01cb2" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. It is raised when the interpreter detects that the maximum recursion depth (see &lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt;&lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;&lt;/a&gt;) is exceeded.</source>
          <target state="translated">이 예외는 &lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 에서 파생됩니다 . 인터프리터가 최대 재귀 깊이 ( &lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt; &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt; &lt;/a&gt; 참조 )가 초과 되었음을 감지하면 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="3e9bf7a89c436eb9519f1ccd1f17934763da1eb1" translate="yes" xml:space="preserve">
          <source>This exception is different from the builtin &lt;a href=&quot;exceptions#TimeoutError&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">이 예외는 내장 &lt;a href=&quot;exceptions#TimeoutError&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt; 예외 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="5abfaa7cb1b6df31569bd73bec0753febb5ef38a" translate="yes" xml:space="preserve">
          <source>This exception is raised by the &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; function. It inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; so that it is not accidentally caught by code that catches &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;. This allows the exception to properly propagate up and cause the interpreter to exit. When it is not handled, the Python interpreter exits; no stack traceback is printed. The constructor accepts the same optional argument passed to &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;. If the value is an integer, it specifies the system exit status (passed to C&amp;rsquo;s &lt;code&gt;exit()&lt;/code&gt; function); if it is &lt;code&gt;None&lt;/code&gt;, the exit status is zero; if it has another type (such as a string), the object&amp;rsquo;s value is printed and the exit status is one.</source>
          <target state="translated">이 예외는 &lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt; 함수에 의해 발생 합니다. 그것은 상속 &lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 가 실수로 코드가 어획량에 의해 체포되지 않도록 &lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; . 이를 통해 예외가 제대로 전파되어 인터프리터가 종료됩니다. 처리되지 않으면 Python 인터프리터가 종료됩니다. 스택 트레이스 백이 인쇄되지 않습니다. 생성자는 &lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt; 전달 된 것과 동일한 선택적 인수를 허용합니다 . 값이 정수이면 시스템 종료 상태를 지정합니다 (C의 &lt;code&gt;exit()&lt;/code&gt; 함수로 전달됨 ). 이 없을 경우 &lt;code&gt;None&lt;/code&gt; , 종료 상태는 0이다; 다른 유형 (예 : 문자열)이있는 경우 객체 값이 인쇄되고 종료 상태는 1입니다.</target>
        </trans-unit>
        <trans-unit id="5d36d890204d231c3db5ed28f13b407944350b88" translate="yes" xml:space="preserve">
          <source>This exception is raised if source and destination in &lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;copyfile()&lt;/code&gt;&lt;/a&gt; are the same file.</source>
          <target state="translated">&lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;copyfile()&lt;/code&gt; &lt;/a&gt; 소스와 대상 이 동일한 파일 인 경우이 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="8566ba7bb494d8af7e0fe1d383f3ef91ec51f1bd" translate="yes" xml:space="preserve">
          <source>This exception is raised on all errors, such as unknown number of bytes per sample, etc.</source>
          <target state="translated">이 예외는 샘플 당 알 수없는 바이트 수와 같은 모든 오류에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b644672ef25e1f525a78a441c53893d63755b91a" translate="yes" xml:space="preserve">
          <source>This exception is raised on certain errors. The argument is a string describing what went wrong.</source>
          <target state="translated">이 예외는 특정 오류에서 발생합니다. 인수는 무엇이 잘못되었는지 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2cc85694ad091b3a955d9c3bd409e50ebf522e46" translate="yes" xml:space="preserve">
          <source>This exception is raised to skip a test.</source>
          <target state="translated">이 예외는 테스트를 건너 뛰기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="58cc721a5d45f6183858fe989cca9698e1cc1fbe" translate="yes" xml:space="preserve">
          <source>This exception is raised when a foreign function call cannot convert one of the passed arguments.</source>
          <target state="translated">외부 함수 호출이 전달 된 인수 중 하나를 변환 할 수없는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9404360bffa18ed1bd67ec88d6463042c13d79a5" translate="yes" xml:space="preserve">
          <source>This exception is raised when a string parameter contains a character that is not permitted in the context it&amp;rsquo;s being used in by the XML 1.0 recommendation. For example, attempting to create an &lt;code&gt;Element&lt;/code&gt; node with a space in the element type name will cause this error to be raised.</source>
          <target state="translated">이 예외는 문자열 매개 변수에 XML 1.0 권장 사항에서 사용중인 컨텍스트에서 허용되지 않는 문자가 포함 된 경우 발생합니다. 예를 들어, 요소 유형 이름에 공백이 있는 &lt;code&gt;Element&lt;/code&gt; 노드 를 작성하려고 하면이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ff9a579e9d83d01444b2f8d5100e032fc4e7952" translate="yes" xml:space="preserve">
          <source>This exception is raised when a system function returns a system-related error, including I/O failures such as &amp;ldquo;file not found&amp;rdquo; or &amp;ldquo;disk full&amp;rdquo; (not for illegal argument types or other incidental errors).</source>
          <target state="translated">이 예외는 시스템 함수가 &quot;파일을 찾을 수 없음&quot;또는 &quot;디스크가 가득 참&quot;과 같은 I / O 오류를 포함하여 시스템 관련 오류를 반환 할 때 발생합니다 (잘못된 인수 유형 또는 기타 부수적 인 오류는 해당되지 않음).</target>
        </trans-unit>
        <trans-unit id="1bc3c86de29d12b90a882aff98c2eec07bc27573" translate="yes" xml:space="preserve">
          <source>This exception is raised when a weak reference proxy, created by the &lt;a href=&quot;weakref#weakref.proxy&quot;&gt;&lt;code&gt;weakref.proxy()&lt;/code&gt;&lt;/a&gt; function, is used to access an attribute of the referent after it has been garbage collected. For more information on weak references, see the &lt;a href=&quot;weakref#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;weakref#weakref.proxy&quot;&gt; &lt;code&gt;weakref.proxy()&lt;/code&gt; &lt;/a&gt; 함수로 작성된 약한 참조 프록시를 사용하여 참조가 가비지 수집 된 후 참조의 속성에 액세스하는 경우이 예외가 발생 합니다. 약한 참조에 대한 자세한 내용은 &lt;a href=&quot;weakref#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fc1681a2f2c890252c17685b7d4e33e329d940d" translate="yes" xml:space="preserve">
          <source>This exception is raised when a writable mailbox has its status changed by the server. This is a sub-class of &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt;&lt;code&gt;IMAP4.error&lt;/code&gt;&lt;/a&gt;. Some other client now has write permission, and the mailbox will need to be re-opened to re-obtain write permission.</source>
          <target state="translated">쓰기 가능한 사서함의 상태가 서버에 의해 변경된 경우이 예외가 발생합니다. 이것은 &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt; &lt;code&gt;IMAP4.error&lt;/code&gt; &lt;/a&gt; 의 하위 클래스입니다 . 다른 클라이언트에는 쓰기 권한이 있으며 쓰기 권한을 다시 얻으려면 사서함을 다시 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="7d6ecff71782ef8d9e93a241e475f2b20a701dab" translate="yes" xml:space="preserve">
          <source>This exception is raised when an error occurs during compression or decompression, or while initializing the compressor/decompressor state.</source>
          <target state="translated">이 예외는 압축 또는 압축 해제 중 또는 압축기 / 압축 해제 기 상태를 초기화하는 동안 오류가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2409514ae954bb0af533c244afcfa71dbd523cc2" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; method is called on an empty queue.</source>
          <target state="translated">빈 큐 에서 &lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되면이 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="5102cc5a79e08a7c0452cc141b9537b61373b612" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; function detects that the amount of the downloaded data is less than the expected amount (given by the &lt;em&gt;Content-Length&lt;/em&gt; header). The &lt;code&gt;content&lt;/code&gt; attribute stores the downloaded (and supposedly truncated) data.</source>
          <target state="translated">이 예외는 &lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt; 함수가 다운로드 된 데이터의 양이 &lt;em&gt;Content-Length&lt;/em&gt; 헤더 에서 제공 한 예상 양보다 적은 것을 감지하면 발생합니다 . &lt;code&gt;content&lt;/code&gt; 속성을 저장하여 데이터를 다운로드 (및 아마도 절단).</target>
        </trans-unit>
        <trans-unit id="bdfe4875d5ba1070e830332816dd12241af8086e" translate="yes" xml:space="preserve">
          <source>This exception is raised when the server unexpectedly disconnects, or when an attempt is made to use the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance before connecting it to a server.</source>
          <target state="translated">이 예외는 서버 연결이 갑자기 끊어 지거나 서버에 연결하기 전에 &lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인스턴스 를 사용하려고 할 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="542841d41f063cbb018245ada2a57db1142f7ad3" translate="yes" xml:space="preserve">
          <source>This exception may be raised by user code to indicate that an attempted operation on an object is not supported, and is not meant to be. If an object is meant to support a given operation but has not yet provided an implementation, &lt;a href=&quot;#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is the proper exception to raise.</source>
          <target state="translated">이 예외는 사용자 코드에 의해 발생되어 개체에 대한 시도 된 작업이 지원되지 않으며 의도되지 않았 음을 나타냅니다. 개체가 지정된 작업을 지원하지만 아직 구현을 제공하지 않은 경우 &lt;a href=&quot;#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 가 발생하는 적절한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="7a08b02abca8718c7204bf9f673ee79551dbb60d" translate="yes" xml:space="preserve">
          <source>This exception, a subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, is raised when the &lt;a href=&quot;#threading.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt; object is reset or broken.</source>
          <target state="translated">&lt;a href=&quot;#threading.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt; 객체가 재설정되거나 깨질 때 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인이 예외 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="1c1aa14e9619480ad86d082fd229c59c6cd9c32c" translate="yes" xml:space="preserve">
          <source>This expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt; supports &lt;code&gt;effective_ids=True&lt;/code&gt; on the local platform:</source>
          <target state="translated">&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt; 가 로컬 플랫폼에서 &lt;code&gt;effective_ids=True&lt;/code&gt; 를 지원 하면 이 표현식은 &lt;code&gt;True&lt;/code&gt; 로 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="633ac41847f4e119da8fe6e2c132acd3ad7d6a6a" translate="yes" xml:space="preserve">
          <source>This factory function creates a function that can be used as a callable for &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;em&gt;ignore&lt;/em&gt; argument, ignoring files and directories that match one of the glob-style &lt;em&gt;patterns&lt;/em&gt; provided. See the example below.</source>
          <target state="translated">이 팩토리 함수는 제공된 glob 스타일 &lt;em&gt;패턴&lt;/em&gt; 중 하나와 일치하는 파일과 디렉토리를 무시하고 &lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;ignore&lt;/em&gt; 인수에 대한 호출 가능 함수로 사용할 수있는 함수를 작성합니다 . 아래 예를 참조하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8163d2b1312f6d8e2b608937718b193c1bd6dec6" translate="yes" xml:space="preserve">
          <source>This factory function creates and returns a new ctypes pointer type. Pointer types are cached and reused internally, so calling this function repeatedly is cheap. &lt;em&gt;type&lt;/em&gt; must be a ctypes type.</source>
          <target state="translated">이 팩토리 함수는 새 ctypes 포인터 유형을 작성하고 리턴합니다. 포인터 유형은 내부적으로 캐시되어 재사용되므로이 함수를 반복해서 호출하는 것이 저렴합니다. &lt;em&gt;type&lt;/em&gt; 은 ctypes &lt;em&gt;유형&lt;/em&gt; 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="91c8c475d8b0ce7014c0cef96a207a73500c7165" translate="yes" xml:space="preserve">
          <source>This feature can be disabled by setting &lt;code&gt;allow_abbrev&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;allow_abbrev&lt;/code&gt; 를 &lt;code&gt;False&lt;/code&gt; 로 설정 하여이 기능을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c7a0557b8a57ee027564f2bc023efbef1ba46a1" translate="yes" xml:space="preserve">
          <source>This feature is not available on Windows.</source>
          <target state="translated">이 기능은 Windows에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="88bd30c5ce87bf5e4843b4151adf98e7bf9c98c1" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 0.9.8f or newer.</source>
          <target state="translated">이 기능에는 OpenSSL 0.9.8f 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="140c6b2dbf9a419843c07939e4cad112713e18f4" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 1.1.1 or newer.</source>
          <target state="translated">이 기능에는 OpenSSL 1.1.1 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3a49f557a9e7cd87ce6aae19a5ed6c4bfa6e3ab7" translate="yes" xml:space="preserve">
          <source>This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class, or when preceded by an unescaped backslash, or within tokens like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;(?:&lt;/code&gt; or &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt;. When a line contains a &lt;code&gt;#&lt;/code&gt; that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such &lt;code&gt;#&lt;/code&gt; through the end of the line are ignored.</source>
          <target state="translated">이 플래그를 사용하면 패턴의 논리적 섹션을 시각적으로 분리하고 주석을 추가 할 수있어 더보기 좋고 읽기 쉬운 정규식을 작성할 수 있습니다. 문자 클래스에 있거나 이스케이프 처리되지 않은 백 슬래시가 앞에 있거나 &lt;code&gt;*?&lt;/code&gt; 와 같은 토큰 내에있는 경우를 제외하고 패턴 내의 공백은 무시됩니다 . , &lt;code&gt;(?:&lt;/code&gt; 또는 &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt; . 행 에 문자 클래스에없고 &lt;code&gt;#&lt;/code&gt; 이스케이프되지 않은 백 슬래시가없는 # 을 포함하는 경우 가장 왼쪽에서 &lt;code&gt;#&lt;/code&gt; 까지의 모든 문자 는 무시되었습니다.</target>
        </trans-unit>
        <trans-unit id="6776e1560b68f5240a1ba4435437a318443994f3" translate="yes" xml:space="preserve">
          <source>This flag can be OR&amp;rsquo;ed with any other scheduling policy. When a process with this flag set forks, its child&amp;rsquo;s scheduling policy and priority are reset to the default.</source>
          <target state="translated">이 플래그는 다른 스케줄링 정책과 함께 OR 될 수 있습니다. 이 플래그가 설정된 프로세스가 분기되면 하위의 스케줄링 정책 및 우선 순위가 기본값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4bb5e8bac1bee574b48e95ad1269a90a6d72a2ab" translate="yes" xml:space="preserve">
          <source>This flag is ignored if &lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt;&lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt;&lt;/a&gt; is specified.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt; &lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt; &lt;/a&gt; 이 지정된 경우이 플래그는 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a75f6aece8739456749d49d943dcd827dfddcd0" translate="yes" xml:space="preserve">
          <source>This flag is not supported on modern Windows platforms.</source>
          <target state="translated">이 플래그는 최신 Windows 플랫폼에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43e3d95482fafc51295e5f9b744822dacdde2901" translate="yes" xml:space="preserve">
          <source>This follows the US convention of &lt;code&gt;DAY_1&lt;/code&gt; being Sunday, not the international convention (ISO 8601) that Monday is the first day of the week.</source>
          <target state="translated">이는 월요일 &lt;code&gt;DAY_1&lt;/code&gt; 의 첫 번째 요일 인 국제 규칙 (ISO 8601)이 아니라 일요일 DAY_1 의 미국 규칙을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="b283665a2e4addf0f4b94b565264877c7b695f5f" translate="yes" xml:space="preserve">
          <source>This format is more limited than &lt;code&gt;.xz&lt;/code&gt; &amp;ndash; it does not support integrity checks or multiple filters.</source>
          <target state="translated">이 형식은 &lt;code&gt;.xz&lt;/code&gt; 보다 제한적이며 무결성 검사 또는 다중 필터를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="416c204cc1d425d9fead84292efcc4e9beda33c5" translate="yes" xml:space="preserve">
          <source>This format specifier does not support integrity checks, and requires that you always specify a custom filter chain (for both compression and decompression). Additionally, data compressed in this manner cannot be decompressed using &lt;code&gt;FORMAT_AUTO&lt;/code&gt; (see &lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt;&lt;code&gt;LZMADecompressor&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 형식 지정자는 무결성 검사를 지원하지 않으며 항상 사용자 지정 필터 체인 (압축 및 압축 해제 모두)을 지정해야합니다. 또한 이러한 방식으로 압축 된 데이터는 &lt;code&gt;FORMAT_AUTO&lt;/code&gt; 를 사용하여 압축 해제 할 수 없습니다 ( &lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt; &lt;code&gt;LZMADecompressor&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="989faedbf517851e250011a0c82fce8ac57f5b92" translate="yes" xml:space="preserve">
          <source>This function accepts a parse tree represented as a sequence and builds an internal representation if possible. If it can validate that the tree conforms to the Python grammar and all nodes are valid node types in the host version of Python, an ST object is created from the internal representation and returned to the called. If there is a problem creating the internal representation, or if the tree cannot be validated, a &lt;a href=&quot;#parser.ParserError&quot;&gt;&lt;code&gt;ParserError&lt;/code&gt;&lt;/a&gt; exception is raised. An ST object created this way should not be assumed to compile correctly; normal exceptions raised by compilation may still be initiated when the ST object is passed to &lt;a href=&quot;#parser.compilest&quot;&gt;&lt;code&gt;compilest()&lt;/code&gt;&lt;/a&gt;. This may indicate problems not related to syntax (such as a &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; exception), but may also be due to constructs such as the result of parsing &lt;code&gt;del f(0)&lt;/code&gt;, which escapes the Python parser but is checked by the bytecode compiler.</source>
          <target state="translated">이 함수는 시퀀스로 표시된 구문 분석 트리를 허용하고 가능한 경우 내부 표현을 작성합니다. 트리가 Python 문법을 준수하는지 검증 할 수 있고 모든 노드가 Python 호스트 버전에서 유효한 노드 유형 인 경우 ST 오브젝트가 내부 표현에서 작성되어 호출 된 것으로 리턴됩니다. 내부 표현을 작성하는 데 문제가 있거나 트리를 검증 할 수없는 경우 &lt;a href=&quot;#parser.ParserError&quot;&gt; &lt;code&gt;ParserError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 이 방법으로 작성된 ST 오브젝트는 올바르게 컴파일되는 것으로 가정해서는 안됩니다. ST 오브젝트가 &lt;a href=&quot;#parser.compilest&quot;&gt; &lt;code&gt;compilest()&lt;/code&gt; &lt;/a&gt; 전달 될 때 컴파일에 의해 발생 된 일반 예외는 여전히 시작될 수 있습니다 . 구문과 관련이없는 문제 (예 : &lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; )&lt;/a&gt; 를 나타낼 수 있습니다.예외)), 그러나 파싱 &lt;code&gt;del f(0)&lt;/code&gt; 의 결과와 같은 구문으로 인해 발생할 수 있습니다.이 구문 은 파이썬 파서를 이스케이프하지만 바이트 코드 컴파일러에서 확인합니다.</target>
        </trans-unit>
        <trans-unit id="67cbaeac62e982b846f73d97f9e9a2e46abe862c" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python list representing the equivalent parse tree. The resulting list representation can be used for inspection or the creation of a new parse tree in list form. This function does not fail so long as memory is available to build the list representation. If the parse tree will only be used for inspection, &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; should be used instead to reduce memory consumption and fragmentation. When the list representation is required, this function is significantly faster than retrieving a tuple representation and converting that to nested lists.</source>
          <target state="translated">이 함수는 &lt;em&gt;st&lt;/em&gt; 의 호출자로부터 ST 객체를 받아 동등한 구문 분석 트리를 나타내는 Python 목록을 반환합니다. 결과 목록 표현은 검사 또는 목록 형식으로 새 구문 분석 트리 작성에 사용할 수 있습니다. 메모리가 목록 표현을 빌드 할 수있는 한이 기능은 실패하지 않습니다. 구문 분석 트리가 검사에만 사용되는 경우 메모리 소비 및 조각화를 줄이기 위해 &lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt; 을 대신 사용해야합니다. 리스트 표현이 필요한 경우,이 함수는 튜플 표현을 검색하여 중첩 된리스트로 변환하는 것보다 훨씬 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="e9a7e450b07e96b8d37598fb40a161b3ec8ab42a" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python tuple representing the equivalent parse tree. Other than returning a tuple instead of a list, this function is identical to &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;em&gt;st&lt;/em&gt; 의 호출자로부터 ST 객체를 받아 동등한 구문 분석 트리를 나타내는 Python 튜플을 반환합니다. 리스트 대신 튜플을 반환하는 것 &lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt; 함수는 st2list ()와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="321d86afeb1999f005b4db61414e6c09451e8851" translate="yes" xml:space="preserve">
          <source>This function allows for partial sends, which can happen when the network is busy.</source>
          <target state="translated">이 기능은 네트워크가 바쁠 때 발생할 수있는 부분 전송을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="fe899672dab1e5e73d8fb72fca72c949a0360195" translate="yes" xml:space="preserve">
          <source>This function always creates a new event loop and closes it at the end. It should be used as a main entry point for asyncio programs, and should ideally only be called once.</source>
          <target state="translated">이 함수는 항상 새로운 이벤트 루프를 생성하고 마지막에 닫습니다. asyncio 프로그램의 기본 진입 점으로 사용해야하며 이상적으로 한 번만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="e046b276c5e0f6ce872efb15eac2bd1f19828574" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has methods such as</source>
          <target state="translated">이 기능은 항상 같이 작업 할 수있는 객체를 반환 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;컨텍스트 매니저를&lt;/a&gt; 하고 다음과 같은 방법이있다</target>
        </trans-unit>
        <trans-unit id="88ebf835d256e7d1650d9a8e9148ec994873a52c" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has the properties &lt;em&gt;url&lt;/em&gt;, &lt;em&gt;headers&lt;/em&gt;, and &lt;em&gt;status&lt;/em&gt;. See &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt;&lt;code&gt;urllib.response.addinfourl&lt;/code&gt;&lt;/a&gt; for more detail on these properties.</source>
          <target state="translated">이 함수는 항상 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 로 작동 할 수 있고 속성이 &lt;em&gt;url&lt;/em&gt; , &lt;em&gt;headers&lt;/em&gt; 및 &lt;em&gt;status&lt;/em&gt; 인 객체를 반환합니다 . 이러한 속성에 대한 자세한 내용은 &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt; &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="afd0d330dff663f3dc120c9eb1f87d37d23d40ac" translate="yes" xml:space="preserve">
          <source>This function always supports &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;. Note however that, unlike other functions, the &lt;a href=&quot;#os.fwalk&quot;&gt;&lt;code&gt;fwalk()&lt;/code&gt;&lt;/a&gt; default value for &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 함수는 항상 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를 따르지 않고 &lt;/a&gt;&lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터&lt;/a&gt; 와 관련된 경로를 지원 합니다 . 다른 기능과는 달리, 것을 그러나 참고 &lt;a href=&quot;#os.fwalk&quot;&gt; &lt;code&gt;fwalk()&lt;/code&gt; &lt;/a&gt; 에 대한 기본값 &lt;em&gt;follow_symlinks이&lt;/em&gt; 있다 &lt;code&gt;False&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed1efc12979920dcd6c776bcfcdcc27d24754b6f" translate="yes" xml:space="preserve">
          <source>This function attempts to guess which of the several simple database modules available &amp;mdash; &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; &amp;mdash; should be used to open a given file.</source>
          <target state="translated">이 함수 는 주어진 파일을 여는 데 사용할 수있는 몇 가지 간단한 데이터베이스 모듈 ( &lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; )&lt;/a&gt; 을 추측하려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="8ab5d1e1419c1e6e527c5b28e58d7f204d5d5901" translate="yes" xml:space="preserve">
          <source>This function calls &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; to do the actual work, see the documentation of &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;that function&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">이 함수 는 실제 작업을 수행하기 위해 &lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 키워드 인수에 대한 설명은 &lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;that function&lt;/code&gt; &lt;/a&gt; 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7643b642de54efb09acb94ff349ac141f3740543" translate="yes" xml:space="preserve">
          <source>This function can also be used to execute arbitrary code objects (such as those created by &lt;a href=&quot;#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;). In this case pass a code object instead of a string. If the code object has been compiled with &lt;code&gt;'exec'&lt;/code&gt; as the &lt;em&gt;mode&lt;/em&gt; argument, &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s return value will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이 함수는 또한 임의의 코드 객체 (예 : &lt;a href=&quot;#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; 생성 된 객체)를 실행하는 데 사용될 수 있습니다 . 이 경우 문자열 대신 코드 객체를 전달하십시오. 코드 오브젝트가 &lt;em&gt;모드&lt;/em&gt; 인수 로 &lt;code&gt;'exec'&lt;/code&gt; 를 사용하여 컴파일 된 경우 &lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 의 리턴 값은 &lt;code&gt;None&lt;/code&gt; 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c83a78a81f4633ef210bfad83d65ad3ed569eed4" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터와 관련된 경로&lt;/a&gt; 도 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="246288c265a4e1776c81f6798f272763d36779b3" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;; the file descriptor must refer to a directory.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#path-fd&quot;&gt;파일 디스크립터 지정&lt;/a&gt; 을 지원할 수도 있습니다 . 파일 디스크립터는 디렉토리를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb38baa42674aa3420a5ba84abf298951b8d79bb" translate="yes" xml:space="preserve">
          <source>This function can fail with the new directory structure made if you lack permissions needed to remove the leaf directory or file.</source>
          <target state="translated">리프 디렉토리 또는 파일을 제거하는 데 필요한 권한이없는 경우 작성된 ​​새 디렉토리 구조로 인해이 기능이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24201f2bcec067a0cadef86b16eb4b56ccf09408" translate="yes" xml:space="preserve">
          <source>This function can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; and subclasses such as &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt;&lt;code&gt;NotADirectoryError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능을 높일 수 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 과 같은 서브 &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt; &lt;code&gt;NotADirectoryError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84dc07fa2ed11ef2486edb31b54936913c119158" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; with the &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">이 함수는 &lt;em&gt;dir_fd&lt;/em&gt; 매개 변수를 사용하여 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터&lt;/a&gt; 와 관련된 경로 를 지원할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b68d682873763be0740e66ddb99f09801a4806ea" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터와 관련된 경로&lt;/a&gt; 를 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a372fc0e1775faa2f765a46dcfe627ccc5b0b02" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를&lt;/a&gt; 지원 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ba43daecc37b3b1b1aaa02be05b7cbcd978d90b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#path-fd&quot;&gt;파일 디스크립터 지정&lt;/a&gt; 을 지원 하고 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를 따르지 않을&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a1de8b6398b0c357406d8ca517cc6964f787838" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;, &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#path-fd&quot;&gt;파일 디스크립터&lt;/a&gt; , &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터&lt;/a&gt; 와 관련된 경로 및 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를 따르지 않는 &lt;/a&gt;경로 지정 을 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2d794dbe904f4089dea7a0681a102aab31ead7a" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#path-fd&quot;&gt;파일 디스크립터 지정&lt;/a&gt; 을 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="080173ce67b107ec521fc1ec6fed9977e31919b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;. The descriptor must refer to an opened directory, not an open file.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#path-fd&quot;&gt;파일 디스크립터 지정&lt;/a&gt; 을 지원할 수 있습니다 . 디스크립터는 열린 파일이 아니라 열린 디렉토리를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb5e909c57dce7b157370491ade31ffad496f482" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">이 기능은 지정 지원할 수있는 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 설명에 상대 경로&lt;/a&gt; 와 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를 따라하지&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b687afc2a9b6992774dda2ac6ff5383d0e794ce7" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;, and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">이 기능은 지정 지원할 수 &lt;em&gt;src_dir_fd&lt;/em&gt; 및 / 또는 &lt;em&gt;dst_dir_fd을&lt;/em&gt; 공급에 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 설명에 상대 경로&lt;/a&gt; 와 &lt;a href=&quot;#follow-symlinks&quot;&gt;심볼릭 링크를 따라하지&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f41ff7dbc91012c3c5b04b05b34a937ef7d76bc" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#dir-fd&quot;&gt;디렉토리 디스크립터에 상대적인 경로&lt;/a&gt; 를 제공하기 위해 &lt;em&gt;src_dir_fd&lt;/em&gt; 및 / 또는 &lt;em&gt;dst_dir_fd&lt;/em&gt; 지정을 지원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb07224e25025b731bf2f81e5c6d8118346c44be" translate="yes" xml:space="preserve">
          <source>This function cannot be called when another asyncio event loop is running in the same thread.</source>
          <target state="translated">다른 asyncio 이벤트 루프가 동일한 스레드에서 실행 중이면이 함수를 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a2b26c04e5c0956fc2606ac8c6a99fe5f3d8eb37" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module to take over the interpreter&amp;rsquo;s default handling for exceptions by setting the value of &lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt; 모듈이 &lt;a href=&quot;sys#sys.excepthook&quot;&gt; &lt;code&gt;sys.excepthook&lt;/code&gt; &lt;/a&gt; 값을 설정하여 예외에 대한 인터프리터의 기본 처리를 인계합니다 .</target>
        </trans-unit>
        <trans-unit id="c529d55efe484171205ace1eaae0be4ead749532" translate="yes" xml:space="preserve">
          <source>This function checks the environment variables &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt;, &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt;, &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; and &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt;, in order, and returns the value of the first one which is set to a non-empty string. If none are set, the login name from the password database is returned on systems which support the &lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt; module, otherwise, an exception is raised.</source>
          <target state="translated">이 함수는 환경 변수 &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt; , &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt; , &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; 및 &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt; 을 순서대로 확인하고 비어 있지 않은 문자열로 설정된 첫 번째 값을 리턴합니다. 설정하지 않으면 비밀번호 데이터베이스의 로그인 이름이 &lt;a href=&quot;pwd#module-pwd&quot;&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/a&gt; 모듈 을 지원하는 시스템에서 리턴됩니다 . 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c6efae03f969812467873fc7c658e4f8c65206e8" translate="yes" xml:space="preserve">
          <source>This function creates a mutable character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_char&quot;&gt;&lt;code&gt;c_char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 가변 문자 버퍼를 만듭니다. 반환 된 객체는 &lt;a href=&quot;#ctypes.c_char&quot;&gt; &lt;code&gt;c_char&lt;/code&gt; &lt;/a&gt; 의 ctypes 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="d85e1f7c1c7feb43831c932856b41d843b092294" translate="yes" xml:space="preserve">
          <source>This function creates a mutable unicode character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_wchar&quot;&gt;&lt;code&gt;c_wchar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 가변 유니 코드 문자 버퍼를 만듭니다. 반환 된 객체는 &lt;a href=&quot;#ctypes.c_wchar&quot;&gt; &lt;code&gt;c_wchar&lt;/code&gt; &lt;/a&gt; 의 ctypes 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="cc1bfdda8af45c4752ba7931dbfd50a06388950a" translate="yes" xml:space="preserve">
          <source>This function creates a new pointer instance, pointing to &lt;em&gt;obj&lt;/em&gt;. The returned object is of the type &lt;code&gt;POINTER(type(obj))&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;em&gt;obj를&lt;/em&gt; 가리키는 새 포인터 인스턴스를 만듭니다 . 리턴 된 오브젝트는 &lt;code&gt;POINTER(type(obj))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="660ffac77bae61fa75e6d1bc0e35c474820d48c8" translate="yes" xml:space="preserve">
          <source>This function does not attempt to verify that you have passed the actual mean as &lt;em&gt;xbar&lt;/em&gt;. Using arbitrary values for &lt;em&gt;xbar&lt;/em&gt; can lead to invalid or impossible results.</source>
          <target state="translated">이 함수는 실제 평균을 &lt;em&gt;xbar&lt;/em&gt; 로 전달했는지 확인하지 않습니다 . &lt;em&gt;xbar에&lt;/em&gt; 임의의 값을 사용하면 유효하지 않거나 불가능한 결과가 &lt;em&gt;발생할&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35888f80b9cb879ee93d24c03d6a6db8aa2d710a" translate="yes" xml:space="preserve">
          <source>This function does not check whether the data points are at least &lt;em&gt;interval&lt;/em&gt; apart.</source>
          <target state="translated">이 기능은 데이터 포인트가 최소한 &lt;em&gt;간격을두고&lt;/em&gt; 있는지 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2c86a6e9fac8ee8c7c704554bc8964eb5395d74d" translate="yes" xml:space="preserve">
          <source>This function does nothing if the root logger already has handlers configured, unless the keyword argument &lt;em&gt;force&lt;/em&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">키워드 인수 &lt;em&gt;force&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정되어 있지 않으면 루트 로거에 이미 핸들러가 구성된 경우이 함수는 아무 작업도 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="514c10027e6febd0ca9b4e0e8abae20168e49aa7" translate="yes" xml:space="preserve">
          <source>This function does the actual work of formatting. It is exposed as a separate function for cases where you want to pass in a predefined dictionary of arguments, rather than unpacking and repacking the dictionary as individual arguments using the &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; syntax. &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; does the work of breaking up the format string into character data and replacement fields. It calls the various methods described below.</source>
          <target state="translated">이 기능은 실제 서식 작업을 수행합니다. &lt;code&gt;*args&lt;/code&gt; 및 &lt;code&gt;**kwargs&lt;/code&gt; 구문을 사용하여 사전을 개별 인수로 풀고 다시 압축하는 대신 사전 정의 된 인수 사전을 전달하려는 경우 별도의 함수로 표시됩니다 . &lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt; 은 형식 문자열을 문자 데이터와 대체 필드로 분리하는 작업을 수행합니다. 아래에 설명 된 다양한 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1957f99cb00cac22539008ce3672f35c832dcd45" translate="yes" xml:space="preserve">
          <source>This function drops you into the debugger at the call site. Specifically, it calls &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt;, passing &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kws&lt;/code&gt; straight through. By default, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; calls &lt;a href=&quot;pdb#pdb.set_trace&quot;&gt;&lt;code&gt;pdb.set_trace()&lt;/code&gt;&lt;/a&gt; expecting no arguments. In this case, it is purely a convenience function so you don&amp;rsquo;t have to explicitly import &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; or type as much code to enter the debugger. However, &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt; can be set to some other function and &lt;a href=&quot;#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; will automatically call that, allowing you to drop into the debugger of choice.</source>
          <target state="translated">이 함수는 호출 사이트의 디버거로 이동합니다. 특히 &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; &lt;/a&gt; 호출 하여 &lt;code&gt;args&lt;/code&gt; 및 &lt;code&gt;kws&lt;/code&gt; 를 직접 전달합니다. 기본적으로 &lt;code&gt;sys.breakpointhook()&lt;/code&gt; 은 &lt;a href=&quot;pdb#pdb.set_trace&quot;&gt; &lt;code&gt;pdb.set_trace()&lt;/code&gt; &lt;/a&gt; 없는 pdb.set_trace ()를 호출합니다 . 이 경우 순전히 편의 기능이므로 디버거에 들어가기 위해 &lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 가져 오거나 많은 코드를 입력 할 필요가 없습니다 . 그러나 &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; &lt;/a&gt; 을 다른 함수로 설정할 수 있으며 &lt;a href=&quot;#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt; 가 자동으로이를 호출하여 선택한 디버거로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c27474e7234eb7c272689b2964d56cb90bf4a48b" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;base_url&lt;/em&gt; is base URL of the original file, to resolve relative include file references. &lt;em&gt;max_depth&lt;/em&gt; is the maximum number of recursive inclusions. Limited to reduce the risk of malicious content explosion. Pass a negative value to disable the limitation.</source>
          <target state="translated">이 함수는 XInclude 지시문을 확장합니다. &lt;em&gt;elem&lt;/em&gt; 은 루트 요소입니다. &lt;em&gt;loader&lt;/em&gt; 는 선택적 리소스 로더입니다. 생략하면 기본값은 &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt; 입니다. 주어진 경우 &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt; 와 동일한 인터페이스를 구현하는 콜 러블이어야합니다 . &lt;em&gt;base_url&lt;/em&gt; 은 상대 포함 파일 참조를 확인하기위한 원본 파일의 기본 URL입니다. &lt;em&gt;max_depth&lt;/em&gt; 는 최대 재귀 포함 수입니다. 악의적 인 콘텐츠 폭발 위험을 줄이기 위해 제한됩니다. 제한을 비활성화하려면 음수 값을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="10780002f9c2d93187c1df77ca7ace00a3742b52" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. Returns the expanded resource. If the parse mode is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, this is an ElementTree instance. If the parse mode is &amp;ldquo;text&amp;rdquo;, this is a Unicode string. If the loader fails, it can return None or raise an exception.</source>
          <target state="translated">이 함수는 XInclude 지시문을 확장합니다. &lt;em&gt;elem&lt;/em&gt; 은 루트 요소입니다. &lt;em&gt;로더&lt;/em&gt; 는 선택적 자원 로더입니다. 생략하면 기본값은 &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt; 입니다. 주어진 경우, &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt; 와 동일한 인터페이스를 구현하는 호출 가능해야합니다 . 확장 된 리소스를 반환합니다. 구문 분석 모드가 &lt;code&gt;&quot;xml&quot;&lt;/code&gt; 인 경우 ElementTree 인스턴스입니다. 구문 분석 모드가 &quot;텍스트&quot;인 경우 이것은 유니 코드 문자열입니다. 로더가 실패하면 None을 리턴하거나 예외를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d183e0b0a1996b7d266deb457bb1c39a308cf71" translate="yes" xml:space="preserve">
          <source>This function handles UNC paths correctly.</source>
          <target state="translated">이 기능은 UNC 경로를 올바르게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="39d613e79eca353689d0e33384eef7ca7c8b978f" translate="yes" xml:space="preserve">
          <source>This function handles an exception using the default settings (that is, show a report in the browser, but don&amp;rsquo;t log to a file). This can be used when you&amp;rsquo;ve caught an exception and want to report it using &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt;. The optional &lt;em&gt;info&lt;/em&gt; argument should be a 3-tuple containing an exception type, exception value, and traceback object, exactly like the tuple returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;info&lt;/em&gt; argument is not supplied, the current exception is obtained from &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능은 기본 설정을 사용하여 예외를 처리합니다 (즉, 브라우저에 보고서를 표시하지만 파일에 기록하지는 않음). 예외를 발견하고 &lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; 를&lt;/a&gt; 사용하여보고하려는 경우에 사용할 수 있습니다 . 선택적 &lt;em&gt;info&lt;/em&gt; 인수는 &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; 반환 한 튜플과 똑같이 예외 유형, 예외 값 및 트레이스 백 객체를 포함하는 3- 튜플이어야합니다 . 상기 중간 &lt;em&gt;정보&lt;/em&gt; 인수가 제공되지 않고, 현재의 예외로부터 얻어진다 &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95c638b427c88a31a4b477cb0d745500c128a308" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as HTML and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;em&gt;info&lt;/em&gt; ( &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; 의 결과를 포함하는 3 개의 튜플)에 의해 설명 된 예외를 처리하고 , 그 추적을 HTML로 형식화하고 결과를 문자열로 리턴합니다. 선택적 인수 &lt;em&gt;컨텍스트&lt;/em&gt; 는 트레이스 백에서 현재 소스 코드 행 주위에 표시 할 컨텍스트 행 수입니다. 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ecec700fa8113f48e6cc0d41277de9fd36d4792" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as text and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;em&gt;info&lt;/em&gt; ( &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; 의 결과를 포함하는 3 개의 튜플)에 의해 설명 된 예외를 처리하고 , 그 추적을 텍스트로 형식화하고 결과를 문자열로 리턴합니다. 선택적 인수 &lt;em&gt;컨텍스트&lt;/em&gt; 는 트레이스 백에서 현재 소스 코드 행 주위에 표시 할 컨텍스트 행 수입니다. 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e68a59cb55c5c08ef9ff6ef164187eb8c36720fa" translate="yes" xml:space="preserve">
          <source>This function has been &lt;strong&gt;added in Python 3.7&lt;/strong&gt;. Prior to Python 3.7, the low-level &lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt;&lt;code&gt;asyncio.ensure_future()&lt;/code&gt;&lt;/a&gt; function can be used instead:</source>
          <target state="translated">이 함수는 &lt;strong&gt;Python 3.7에서 추가되었습니다&lt;/strong&gt; . Python 3.7 이전에는 저수준 &lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt; &lt;code&gt;asyncio.ensure_future()&lt;/code&gt; &lt;/a&gt; 함수를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c966fb5bb08388dce4957a9885cbfef7ae831e47" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">이 기능은 임시로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="4989c8386f245adaba6aaa59654b9b058450c784" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">이 기능은 잠정적으로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="fc3352bd7899627742c5d818912f6834e1c6bd22" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">이 기능은 임시로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조 ). 디버깅 목적으로 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c694e13b17fe9b728776b26526d323d3236fee9a" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">이 기능은 잠정적으로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조 ). 디버깅 목적으로 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f611ccb8e78599647e771c2dd3f8be5177e91535" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">이 기능은 임시로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="d126d1a929fb38de978e3f8c18767068e6441258" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">이 기능은 잠정적으로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="ea1d284a0ca301e5f36ffb15fa62803f51745cd9" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">이 기능은 임시로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조 ). 디버깅 목적으로 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4f1cdae04c18641f66e088e05497aac72c454f82" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">이 기능은 잠정적으로 추가되었습니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; 참조 ). 디버깅 목적으로 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ef87984f54425c7e20ecc28f19c814ccf05ac527" translate="yes" xml:space="preserve">
          <source>This function implements the standard &lt;code&gt;.mo&lt;/code&gt; file search algorithm. It takes a &lt;em&gt;domain&lt;/em&gt;, identical to what &lt;a href=&quot;#gettext.textdomain&quot;&gt;&lt;code&gt;textdomain()&lt;/code&gt;&lt;/a&gt; takes. Optional &lt;em&gt;localedir&lt;/em&gt; is as in &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt;. Optional &lt;em&gt;languages&lt;/em&gt; is a list of strings, where each string is a language code.</source>
          <target state="translated">이 기능은 표준 &lt;code&gt;.mo&lt;/code&gt; 파일 검색 알고리즘을 구현합니다 . 그것은 소요 &lt;em&gt;도메인&lt;/em&gt; 무엇 동일을, &lt;a href=&quot;#gettext.textdomain&quot;&gt; &lt;code&gt;textdomain()&lt;/code&gt; &lt;/a&gt; 합니다. 선택적 &lt;em&gt;localedir&lt;/em&gt; 은 &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt; . 선택적 &lt;em&gt;언어&lt;/em&gt; 는 문자열 목록이며 각 문자열은 언어 코드입니다.</target>
        </trans-unit>
        <trans-unit id="172dadb9dc85c7a090d62a6f27fdb75709950244" translate="yes" xml:space="preserve">
          <source>This function imports and returns a fresh copy of the named Python module by removing the named module from &lt;code&gt;sys.modules&lt;/code&gt; before doing the import. Note that unlike &lt;code&gt;reload()&lt;/code&gt;, the original module is not affected by this operation.</source>
          <target state="translated">이 함수 는 가져 오기를 수행하기 전에 &lt;code&gt;sys.modules&lt;/code&gt; 에서 명명 된 모듈을 제거하여 명명 된 Python 모듈의 새로운 사본을 가져오고 리턴합니다 . &lt;code&gt;reload()&lt;/code&gt; 와 달리 원래 모듈은이 작업의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e85250eaece03f8dc4805c01a0978aa0691dd7c0" translate="yes" xml:space="preserve">
          <source>This function imports and returns the named module. Unlike a normal import, this function raises &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; if the module cannot be imported.</source>
          <target state="translated">이 함수는 명명 된 모듈을 가져오고 반환합니다. 일반 가져 오기와 달리이 함수 는 모듈을 가져올 수없는 경우 &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="fe663ee4d39048854bb84cb63b91ff780333b588" translate="yes" xml:space="preserve">
          <source>This function is Unix specific.</source>
          <target state="translated">이 기능은 유닉스 전용입니다.</target>
        </trans-unit>
        <trans-unit id="9e01cbde143f3e80838cbf4287afc5bd594fa7e9" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">이 함수는 클래스를 만들거나 별도의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt; 메서드 를 만들 필요없이 명령문 비동기 컨텍스트 관리자 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt; 대한 팩토리 함수를 정의하는 데 사용할 수 있는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;데코레이터&lt;/a&gt; 입니다 . &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;비동기 생성기&lt;/a&gt; 기능에 적용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="149b80885bdd0b63fad9b906d671077767527f43" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 함수는 클래스 또는 별도의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 메서드 를 만들 필요없이 명령문 컨텍스트 관리자 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 팩토리 함수를 정의하는 데 사용할 수 있는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;데코레이터&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="0c899e79e3c0eabc9cc8a8a015050464bb0041cf" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">이 함수는 아래와 같이 생성 된 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;특수 메소드&lt;/a&gt; 를 클래스 에 추가하는 데 사용되는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;데코레이터&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="2e3fe8c538289c53d72e2454563eb1a5fc63abdc" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">이 함수는, 인 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;장식&lt;/a&gt; 팩토리 함수를 정의 할 수 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt; 클래스 또는 별도 생성하지 않고, 문 비동기 콘텍스트 관리자 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt; 메소드. &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;비동기 생성기&lt;/a&gt; 함수에 적용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ca5630b6c336007b5871876d1ee539f6a42c7a2" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 함수는 클래스를 만들거나 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 메서드를 분리 할 필요없이 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 컨텍스트 관리자에 대한 팩토리 함수를 정의하는 데 사용할 수 있는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;데코레이터&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="e011a2dbce915f12a3fd370d4abddfb575b29929" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">이 함수는 생성 된 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;특수 메서드&lt;/a&gt; 를 클래스 에 추가하는 데 사용되는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;데코레이터&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="faffa47c08d7418284e943db0a2194e64073b3a1" translate="yes" xml:space="preserve">
          <source>This function is a small but complete WSGI application that returns a text page containing the message &amp;ldquo;Hello world!&amp;rdquo; and a list of the key/value pairs provided in the &lt;em&gt;environ&lt;/em&gt; parameter. It&amp;rsquo;s useful for verifying that a WSGI server (such as &lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt;&lt;code&gt;wsgiref.simple_server&lt;/code&gt;&lt;/a&gt;) is able to run a simple WSGI application correctly.</source>
          <target state="translated">이 함수는 작지만 완전한 WSGI 응용 프로그램으로 &quot;Hello world!&quot;메시지가 포함 된 텍스트 페이지를 반환합니다. 및 &lt;em&gt;environ&lt;/em&gt; 매개 변수에 제공된 키 / 값 쌍의 목록 . WSGI 서버 (예 : &lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt; &lt;code&gt;wsgiref.simple_server&lt;/code&gt; &lt;/a&gt; )가 간단한 WSGI 애플리케이션을 올바르게 실행할 수 있는지 확인하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="d515f195df4ddcf5d5033ae67b93ed67290c7488" translate="yes" xml:space="preserve">
          <source>This function is added to the built-in namespace by the &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt; 모듈에 의해 내장 네임 스페이스에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="64628f06fee9b7aeeaa8847c7406b08c68a6b088" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt; 함수로 작성된 코 루틴 오브젝트에 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="0ed125fdde6671777d61cc5fcfbfba3affe8b52e" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt; 함수로 만든 코 루틴 객체에 대해 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="03648b49b7e97f2705e79f86b31e7423f5f4b8ad" translate="yes" xml:space="preserve">
          <source>This function is called if the &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; instance raises an exception. The default action is to print the traceback to standard error and continue handling further requests.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt; 인스턴스 의 &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; 메소드 에서 예외가 발생 하면이 함수가 호출됩니다 . 기본 조치는 추적을 표준 오류로 인쇄하고 추가 요청을 계속 처리하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="25f184942d28c9f4cf30b9129690c3f39a8da58c" translate="yes" xml:space="preserve">
          <source>This function is called unconditionally after &lt;code&gt;tearDownModule()&lt;/code&gt;, or after &lt;code&gt;setUpModule()&lt;/code&gt; if &lt;code&gt;setUpModule()&lt;/code&gt; raises an exception.</source>
          <target state="translated">이 함수는 이후 무조건 호출 &lt;code&gt;tearDownModule()&lt;/code&gt; 또는 후 &lt;code&gt;setUpModule()&lt;/code&gt; 경우 &lt;code&gt;setUpModule()&lt;/code&gt; 예외를 제기한다.</target>
        </trans-unit>
        <trans-unit id="00dac4aa5f98112430b5f2dcd53d84ccb136fadf" translate="yes" xml:space="preserve">
          <source>This function is called when the &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; attribute has been set to a value other than &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and the timeout period has passed with no requests being received. The default action for forking servers is to collect the status of any child processes that have exited, while in threading servers this method does nothing.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt; 속성이 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이외의 값으로 설정 되고 요청이 수신되지 않고 제한 시간이 경과 한 경우이 함수가 호출됩니다 . 서버를 포크하기위한 기본 조치는 종료 된 모든 하위 프로세스의 상태를 수집하는 반면 서버 스레딩에서는이 방법으로 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ca63d1075eb1aceb700174dca580627844286b7" translate="yes" xml:space="preserve">
          <source>This function is identical to the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; function, except that the argument handling is even more complicated.</source>
          <target state="translated">이 함수는 인수 처리가 더 복잡하다는 점을 제외하고 &lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt; 함수와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="58ba7af41df3064b3d3f217ed825d3dd8ed01388" translate="yes" xml:space="preserve">
          <source>This function is implemented using a watchdog thread.</source>
          <target state="translated">이 기능은 워치 독 스레드를 사용하여 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="64cad07e3c93c343820394a2eee72ae7a507e0bd" translate="yes" xml:space="preserve">
          <source>This function is installed as the trace function of debugged frames. Its return value is the new trace function (in most cases, that is, itself).</source>
          <target state="translated">이 기능은 디버그 된 프레임의 추적 기능으로 설치됩니다. 리턴 값은 새로운 추적 기능 (대부분의 경우 자체)입니다.</target>
        </trans-unit>
        <trans-unit id="d0b78e0190c2580f2856b7455b5b0eafaf4ddb3d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To close a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 함수는 저수준 I / O를위한 것이며 &lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt; 반환 한 파일 설명자에 적용되어야합니다 . 상기 내장 함수에 의해 반환 된 &quot;파일 객체&quot;닫으려면 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 또는으로 &lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt; , 사용에 &lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메소드를.</target>
        </trans-unit>
        <trans-unit id="ade6f6e290e3dc96f0eb9460be14368d6afe280c" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To read a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;readline()&lt;/code&gt; methods.</source>
          <target state="translated">이 함수는 저수준 I / O를위한 것이며 &lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt; 반환 한 파일 설명자에 적용되어야합니다 . 상기 내장 함수에 의해 반환 된 &quot;파일 객체&quot;읽으려면 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 또는으로 &lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; 를&lt;/a&gt; 사용, &lt;code&gt;read()&lt;/code&gt; 또는 &lt;code&gt;readline()&lt;/code&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="2c704116a76ce54c12e05f3b6967028eb14b6cc5" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To write a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;write()&lt;/code&gt; method.</source>
          <target state="translated">이 함수는 저수준 I / O를위한 것이며 &lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt; 반환 한 파일 설명자에 적용되어야합니다 . 상기 내장 함수에 의해 반환 된 &quot;파일 객체&quot;작성하려면 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 또는로 &lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; 를을&lt;/a&gt; , 그것의 사용 &lt;code&gt;write()&lt;/code&gt; 메소드를.</target>
        </trans-unit>
        <trans-unit id="bacd28868867d67c5d6723d7c3178c25e186f11d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능은 저수준 I / O를위한 것입니다. 일반적인 사용의 경우, 내장 기능의 사용 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 반환, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체를&lt;/a&gt; 함께 &lt;code&gt;read()&lt;/code&gt; 와 &lt;code&gt;write()&lt;/code&gt; 메소드 (그리고 더 많은). 파일 디스크립터를 파일 오브젝트로 랩하려면 &lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="649aa99d11ac4fa14cd3cd72d6032323e479b243" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능은 저수준 I / O를위한 것입니다. 일반적인 사용을 위해 내장 함수 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 사용하십시오.이 함수 는 &lt;code&gt;read()&lt;/code&gt; 및 &lt;code&gt;write()&lt;/code&gt; 메서드 (및 더 많은 메서드 ) 가있는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 를 반환합니다 . 파일 객체에서 파일 설명자를 래핑하려면 &lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60efcb44e54e053b402648036b9dc38b2898562c" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문에 의해 호출됩니다 . (수입으로 대체 될 수 &lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt; 모듈에 할당 &lt;code&gt;builtins.__import__&lt;/code&gt; 의 변화를 의미하기 위해) &lt;code&gt;import&lt;/code&gt; 되는 문,하지만 그렇게 &lt;strong&gt;강력하게&lt;/strong&gt; 그것을 사용 가져 오기 후크 (참조 보통 간단로 낙담 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; )을 달성하기 위해 동일한 목표를 가지고 있으며 기본 가져 오기 구현이 사용 중이라고 가정하는 코드에 문제가 발생하지 않습니다. &lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt; 직접 사용 하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f7f0c76df06b8f2f73d67731eb7ed6c7ceae8224" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문에 의해 호출됩니다 . &lt;code&gt;import&lt;/code&gt; 문의 의미를 변경하기 위해 ( &lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt; 모듈 을 가져오고 &lt;code&gt;builtins.__import__&lt;/code&gt; 할당하여) 대체 할 수 있지만 일반적으로 가져 오기 후크 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; 참조)를 사용하는 것이 더 간단하기 때문에 그렇게하는 것은 &lt;strong&gt;권장되지&lt;/strong&gt; 않습니다 . 기본 가져 오기 구현이 사용 중이라고 가정하는 코드에 문제가 발생하지 않습니다. &lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt; 직접 사용하는 것도 &lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt; 을 선호하는 것입니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51460bb18486d76dae169e7512a607a5c185a142" translate="yes" xml:space="preserve">
          <source>This function is meant to be called from a different OS thread than the one where the event loop is running. Example:</source>
          <target state="translated">이 함수는 이벤트 루프가 실행되는 것과 다른 OS 스레드에서 호출되도록되어 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="6474c1567381e3873ebbeca05d51f7ab42d23453" translate="yes" xml:space="preserve">
          <source>This function is not available on MacOS.</source>
          <target state="translated">MacOS에서는이 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="62d7cf1ebeba361fc0a928442d4acc718cf42922" translate="yes" xml:space="preserve">
          <source>This function is not strictly required, because any Python mechanism for creating a new class with &lt;code&gt;__annotations__&lt;/code&gt; can then apply the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; function to convert that class to a dataclass. This function is provided as a convenience. For example:</source>
          <target state="translated">&lt;code&gt;__annotations__&lt;/code&gt; 로 새 클래스를 만드는 모든 Python 메커니즘 은 &lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; 함수를 적용하여 해당 클래스를 데이터 클래스로 변환 할 수 있으므로이 함수는 꼭 필요한 것은 아닙니다 . 이 기능은 편의상 제공됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8105687cf78676b920dca7d0135677e8cf83f7b7" translate="yes" xml:space="preserve">
          <source>This function is preferred over &lt;a href=&quot;#datetime.datetime.today&quot;&gt;&lt;code&gt;today()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt;&lt;code&gt;utcnow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#datetime.datetime.today&quot;&gt; &lt;code&gt;today()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt; &lt;code&gt;utcnow()&lt;/code&gt; &lt;/a&gt; 보다 선호 됩니다.</target>
        </trans-unit>
        <trans-unit id="2534bb784a341d57cb3cfff1ca73e4950b0ffd8e" translate="yes" xml:space="preserve">
          <source>This function is preferred over using &lt;a href=&quot;types#types.ModuleType&quot;&gt;&lt;code&gt;types.ModuleType&lt;/code&gt;&lt;/a&gt; to create a new module as &lt;strong&gt;spec&lt;/strong&gt; is used to set as many import-controlled attributes on the module as possible.</source>
          <target state="translated">이 기능을 이용하여 선호되는 &lt;a href=&quot;types#types.ModuleType&quot;&gt; &lt;code&gt;types.ModuleType&lt;/code&gt; 을&lt;/a&gt; 같은 새로운 모듈을 만들 &lt;strong&gt;스펙&lt;/strong&gt; 가능한 모듈 많은 수입 제어 특성으로서 설정하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="80d7cd1acc5c70b379682dbabb5d9e05ff3a4fdd" translate="yes" xml:space="preserve">
          <source>This function is roughly equivalent to the following code, except that the actual implementation does not build up intermediate results in memory:</source>
          <target state="translated">이 함수는 실제 구현이 메모리에 중간 결과를 작성하지 않는다는 점을 제외하고 다음 코드와 대략 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f913c0b361e7ba9728f0f9afaaf9d1c422afa44d" translate="yes" xml:space="preserve">
          <source>This function is semantically identical to &lt;a href=&quot;#os.unlink&quot;&gt;&lt;code&gt;unlink()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 의미 적으로 &lt;a href=&quot;#os.unlink&quot;&gt; &lt;code&gt;unlink()&lt;/code&gt; &lt;/a&gt; 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0d2662aab731484f469e5d0941ebd213855793da" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;, with added arguments to supply the globals and locals dictionaries for the &lt;em&gt;command&lt;/em&gt; string. This routine executes:</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 과 유사 하며 &lt;em&gt;명령&lt;/em&gt; 문자열에 대한 전역 및 지역 사전을 제공하기위한 인수가 추가되었습니다 . 이 루틴은 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fc117a48981b83bb2298193271331492a011693b" translate="yes" xml:space="preserve">
          <source>This function is similar to the cast operator in C. It returns a new instance of &lt;em&gt;type&lt;/em&gt; which points to the same memory block as &lt;em&gt;obj&lt;/em&gt;. &lt;em&gt;type&lt;/em&gt; must be a pointer type, and &lt;em&gt;obj&lt;/em&gt; must be an object that can be interpreted as a pointer.</source>
          <target state="translated">이 함수는 C의 캐스트 연산자와 유사합니다 . &lt;em&gt;obj&lt;/em&gt; 와 동일한 메모리 블록을 가리키는 새로운 &lt;em&gt;유형의&lt;/em&gt; 인스턴스를 반환합니다 . &lt;em&gt;type&lt;/em&gt; 은 포인터 유형 이어야 하고 &lt;em&gt;obj&lt;/em&gt; 는 포인터로 해석 될 수있는 객체 여야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29760dd338313a7538bf9a66508800e3e6ec0a67" translate="yes" xml:space="preserve">
          <source>This function is the original interface and is only kept for back compatibility. It returns a filtered version of the following.</source>
          <target state="translated">이 기능은 원래 인터페이스이며 이전 버전과의 호환성을 위해서만 유지됩니다. 다음의 필터링 된 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c21cc18b67d5b59058325f10549a9243c64acf72" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt; to process tokens generated by the &lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; &lt;/a&gt; 에서 토큰 &lt;a href=&quot;tokenize#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt; 모듈에 의해 생성 된 토큰을 처리 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f38d1e6f628d8e4e90ac779c811e7c28a0d89f12" translate="yes" xml:space="preserve">
          <source>This function is used internally by other functions (see below), but can also be useful when you want to transform an interactive Python session into a Python script.</source>
          <target state="translated">이 함수는 다른 함수에서 내부적으로 사용되지만 (아래 참조) 대화식 Python 세션을 Python 스크립트로 변환하려는 경우에도 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5f42493be0aa8250eeba0fe74603ddafd1c1e22" translate="yes" xml:space="preserve">
          <source>This function is used to turn the capture of warnings by logging on and off.</source>
          <target state="translated">이 기능은 로그온하여 로그 캡처를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0e291635b8b9e6f792c79b608f8ce39c024f95cf" translate="yes" xml:space="preserve">
          <source>This function is useful for programs that want to emulate Python&amp;rsquo;s interpreter main loop (a.k.a. the read-eval-print loop). The tricky part is to determine when the user has entered an incomplete command that can be completed by entering more text (as opposed to a complete command or a syntax error). This function &lt;em&gt;almost&lt;/em&gt; always makes the same decision as the real interpreter main loop.</source>
          <target state="translated">이 함수는 파이썬의 인터프리터 메인 루프 (일명 read-eval-print 루프)를 에뮬레이트하려는 프로그램에 유용합니다. 까다로운 부분은 사용자가 완료된 명령 또는 구문 오류와 달리 더 많은 텍스트를 입력하여 완료 할 수있는 불완전한 명령을 입력 한시기를 결정하는 것입니다. 이 함수는 &lt;em&gt;거의&lt;/em&gt; 항상 실제 인터프리터 메인 루프와 같은 결정을합니다.</target>
        </trans-unit>
        <trans-unit id="4346431163cf39d1256a2486c282563a29187752" translate="yes" xml:space="preserve">
          <source>This function is useful when creating a gateway that wraps CGI or a CGI-like protocol such as FastCGI. Typically, servers providing such protocols will include a &lt;code&gt;HTTPS&lt;/code&gt; variable with a value of &amp;ldquo;1&amp;rdquo;, &amp;ldquo;yes&amp;rdquo;, or &amp;ldquo;on&amp;rdquo; when a request is received via SSL. So, this function returns &amp;ldquo;https&amp;rdquo; if such a value is found, and &amp;ldquo;http&amp;rdquo; otherwise.</source>
          <target state="translated">이 기능은 CGI 또는 FastCGI와 같은 CGI 유사 프로토콜을 래핑하는 게이트웨이를 만들 때 유용합니다. 일반적으로 이러한 프로토콜을 제공하는 서버에는 SSL을 통해 요청이 수신 될 때 값이 &quot;1&quot;, &quot;yes&quot;또는 &quot;on&quot;인 &lt;code&gt;HTTPS&lt;/code&gt; 변수 가 포함됩니다 . 따라서이 함수는 값이 있으면 &quot;https&quot;를, 그렇지 않으면 &quot;http&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5407416b354a3a637ec255aca17cebdd4a5f0bcb" translate="yes" xml:space="preserve">
          <source>This function is useful when generating attribute values for HTML or any SGML using the reference concrete syntax.</source>
          <target state="translated">이 함수는 참조 구문을 사용하여 HTML 또는 SGML에 대한 속성 값을 생성 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="60d507fa2bc53284a2d250ec94185652719e0652" translate="yes" xml:space="preserve">
          <source>This function looks for items in &lt;em&gt;bases&lt;/em&gt; that are not instances of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, and returns a tuple where each such object that has an &lt;code&gt;__mro_entries__&lt;/code&gt; method is replaced with an unpacked result of calling this method. If a &lt;em&gt;bases&lt;/em&gt; item is an instance of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, or it doesn&amp;rsquo;t have an &lt;code&gt;__mro_entries__&lt;/code&gt; method, then it is included in the return tuple unchanged.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; 의&lt;/a&gt; 인스턴스가 아닌 &lt;em&gt;베이스&lt;/em&gt; 에서 항목을 찾고 &lt;code&gt;__mro_entries__&lt;/code&gt; 메소드가 있는 각 오브젝트 가이 메소드 호출의 압축되지 않은 결과로 대체 되는 튜플을 리턴합니다 . 경우 &lt;em&gt;염기&lt;/em&gt; 항목의 인스턴스 &lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; , 또는 그것은없는 &lt;code&gt;__mro_entries__&lt;/code&gt; 된 후는 그대로 리턴 터플에 포함되는, 방법.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1eb9e57decc223afc31c89f7e7f3597b5606d185" translate="yes" xml:space="preserve">
          <source>This function may open a large number of files, as the best way to determine if a file on the time zone path is a valid time zone is to read the &amp;ldquo;magic string&amp;rdquo; at the beginning.</source>
          <target state="translated">이 함수는 많은 수의 파일을 열 수 있습니다. 표준 시간대 경로에있는 파일이 유효한 표준 시간대인지 확인하는 가장 좋은 방법은 처음에 &quot;매직 문자열&quot;을 읽는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f333259d8228afee74ea63cb8cf96d3f815a21d2" translate="yes" xml:space="preserve">
          <source>This function may return invalid paths because it works a character at a time. To obtain a valid path, see &lt;a href=&quot;#os.path.commonpath&quot;&gt;&lt;code&gt;commonpath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 한 번에 한 문자 씩 작동하므로 유효하지 않은 경로를 반환 할 수 있습니다. 유효한 경로를 얻으려면 &lt;a href=&quot;#os.path.commonpath&quot;&gt; &lt;code&gt;commonpath()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a01d7176187eda18b9374489bf46391852e732ec" translate="yes" xml:space="preserve">
          <source>This function mirrors &lt;a href=&quot;#parser.isexpr&quot;&gt;&lt;code&gt;isexpr()&lt;/code&gt;&lt;/a&gt; in that it reports whether an ST object represents an &lt;code&gt;'exec'&lt;/code&gt; form, commonly known as a &amp;ldquo;suite.&amp;rdquo; It is not safe to assume that this function is equivalent to &lt;code&gt;not isexpr(st)&lt;/code&gt;, as additional syntactic fragments may be supported in the future.</source>
          <target state="translated">이 함수 는 ST 객체가 일반적으로 &quot;스위트&quot;라고 알려진 &lt;code&gt;'exec'&lt;/code&gt; 형식을 나타내는 지 여부를보고한다는 점에서 &lt;a href=&quot;#parser.isexpr&quot;&gt; &lt;code&gt;isexpr()&lt;/code&gt; &lt;/a&gt; 을 미러링 합니다 . 향후 추가적인 구문 조각이 지원 될 수 &lt;code&gt;not isexpr(st)&lt;/code&gt; 함수가 isexpr (st) 와 같지 않다고 가정하는 것은 안전 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c38aaa319da4fa690e529cb8f63297f25c44ad44" translate="yes" xml:space="preserve">
          <source>This function must do all the work required to service a request. The default implementation does nothing. Several instance attributes are available to it; the request is available as &lt;code&gt;self.request&lt;/code&gt;; the client address as &lt;code&gt;self.client_address&lt;/code&gt;; and the server instance as &lt;code&gt;self.server&lt;/code&gt;, in case it needs access to per-server information.</source>
          <target state="translated">이 기능은 요청을 처리하는 데 필요한 모든 작업을 수행해야합니다. 기본 구현은 아무 것도 수행하지 않습니다. 몇 가지 인스턴스 속성을 사용할 수 있습니다. 요청은 &lt;code&gt;self.request&lt;/code&gt; 로 가능합니다 . &lt;code&gt;self.client_address&lt;/code&gt; 와 같은 클라이언트 주소 ; 서버 별 정보에 액세스해야하는 경우 서버 인스턴스는 &lt;code&gt;self.server&lt;/code&gt; 로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1d0fe82f383fe8455cd84dddbd167e438d74db76" translate="yes" xml:space="preserve">
          <source>This function must not be used for the replacement string in &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.subn&quot;&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/a&gt;, only backslashes should be escaped. For example:</source>
          <target state="translated">&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#re.subn&quot;&gt; &lt;code&gt;subn()&lt;/code&gt; &lt;/a&gt; 의 대체 문자열에는이 함수를 사용 해서는 안되며 백 슬래시 만 이스케이프해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="50da3b2b1a3e4d5d04267b56a098ab7684af854a" translate="yes" xml:space="preserve">
          <source>This function normally follows symlinks; to stat a symlink add the argument &lt;code&gt;follow_symlinks=False&lt;/code&gt;, or use &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능은 일반적으로 심볼릭 링크를 따릅니다. 심볼릭 링크를 통계하려면 &lt;code&gt;follow_symlinks=False&lt;/code&gt; 인수를 추가 하거나 &lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21aa14b61079b0b0977f0bf126fc678541935681" translate="yes" xml:space="preserve">
          <source>This function only includes canonical zone names and does not include &amp;ldquo;special&amp;rdquo; zones such as those under the &lt;code&gt;posix/&lt;/code&gt; and &lt;code&gt;right/&lt;/code&gt; directories, or the &lt;code&gt;posixrules&lt;/code&gt; zone.</source>
          <target state="translated">이 기능은 표준 영역 이름 만 포함하며 &lt;code&gt;posix/&lt;/code&gt; 및 &lt;code&gt;right/&lt;/code&gt; 디렉토리 또는 &lt;code&gt;posixrules&lt;/code&gt; 영역 아래에있는 것과 같은 &quot;특수&quot;영역은 포함하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="61fc230cd44595c912517a969faf5b47d610995f" translate="yes" xml:space="preserve">
          <source>This function only modifies the recorded peak size, and does not modify or clear any traces, unlike &lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt;&lt;code&gt;clear_traces()&lt;/code&gt;&lt;/a&gt;. Snapshots taken with &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; before a call to &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt; can be meaningfully compared to snapshots taken after the call.</source>
          <target state="translated">이 함수는 기록 된 피크 크기 만 수정하고 &lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt; &lt;code&gt;clear_traces()&lt;/code&gt; &lt;/a&gt; 와 달리 추적을 수정하거나 지우지 않습니다 . 로 촬영 한 스냅 샷 &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; &lt;/a&gt; 의미 호출 후 촬영 스냅 샷을 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d52d4a6b72fa52058f61845c53226f55f2864d31" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that data is spooled in memory until the file size exceeds &lt;em&gt;max_size&lt;/em&gt;, or until the file&amp;rsquo;s &lt;code&gt;fileno()&lt;/code&gt; method is called, at which point the contents are written to disk and operation proceeds as with &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 파일 크기가 &lt;em&gt;max_size를&lt;/em&gt; 초과 할 때까지 또는 파일의 &lt;code&gt;fileno()&lt;/code&gt; 메소드가 호출 될 때까지 데이터가 메모리에 스풀링되는 것을 제외하고 &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt; 과 동일하게 작동합니다 .이 시점에서 컨텐츠는 디스크에 기록되고 &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt; 과 같이 작업이 진행됩니다 () .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b28cf0adbd47beaf5136380c661ee70913d0243" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">이 함수는 파일이 파일 시스템에서 보이는 이름을 가지고 있다는 것을 제외하고 &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt; 과 동일하게 작동 합니다 (UNIX에서는 디렉토리 항목이 링크되지 않음). 해당 이름은 리턴 된 파일 유사 오브젝트 의 &lt;code&gt;name&lt;/code&gt; 속성 에서 검색 할 수 있습니다 . 명명 된 임시 파일이 여전히 열려있는 동안 이름을 사용하여 파일을 두 번째로 열 수 있는지 여부는 플랫폼에 따라 다릅니다 (유닉스에서 사용할 수 있으며 Windows NT 이상에서는 사용할 수 없음). 경우 &lt;em&gt;삭제가&lt;/em&gt; true (디폴트), 파일은 즉시이 종료 될 때 삭제됩니다. 리턴 된 오브젝트는 항상 &lt;code&gt;file&lt;/code&gt; 속성이 기본 실제 파일 오브젝트 인 파일 과 유사한 오브젝트입니다 . 이 파일 - 류의 객체는 사용할 수 있습니다 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 일반 파일과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2f780a62bf02c136b6c254f307fd90d36186bafa" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt; 과 똑같이 작동합니다 . 단, 파일 시스템에서 파일 이름이 표시된다는 점을 제외하면 (Unix에서는 디렉토리 항목이 링크 해제되지 않습니다). 해당 이름은 반환 된 파일 류 객체 의 &lt;code&gt;name&lt;/code&gt; 속성 에서 검색 할 수 있습니다 . 이름을 사용하여 파일을 두 번째로 열 수 있는지 여부는 명명 된 임시 파일이 여전히 열려있는 동안 플랫폼에 따라 다릅니다 (유닉스에서 사용할 수 있으며 Windows NT 이상에서는 사용할 수 없음). 경우 &lt;em&gt;삭제가&lt;/em&gt; true (디폴트), 파일은 즉시이 종료 될 때 삭제됩니다. 반환 된 객체는 항상 &lt;code&gt;file&lt;/code&gt; 속성이 기본 실제 파일 객체 인 파일 류 객체입니다. 이 파일 류 객체는 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있습니다. 일반 파일처럼</target>
        </trans-unit>
        <trans-unit id="8a66c48b929d610e3db559cb30cbb31ccc42d7ac" translate="yes" xml:space="preserve">
          <source>This function passes &lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;security_attributes&lt;/em&gt; to the API.</source>
          <target state="translated">이 함수는 &lt;em&gt;security_attributes&lt;/em&gt; 에 대해 &lt;code&gt;NULL&lt;/code&gt; 을 API에 전달 합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fde6b92d954d144ab8d68479a8fd1eafae433701" translate="yes" xml:space="preserve">
          <source>This function performs a call to &lt;a href=&quot;#multiprocessing.get_logger&quot;&gt;&lt;code&gt;get_logger()&lt;/code&gt;&lt;/a&gt; but in addition to returning the logger created by get_logger, it adds a handler which sends output to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; using format &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#multiprocessing.get_logger&quot;&gt; &lt;code&gt;get_logger()&lt;/code&gt; &lt;/a&gt; 대한 호출을 수행 하지만 get_logger에 의해 작성된 로거를 리턴하는 것 외에도 &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt; 형식 (%)을 사용하여 출력을 &lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; 로&lt;/a&gt; 보내는 핸들러를 추가 합니다. ) 's .</target>
        </trans-unit>
        <trans-unit id="d8bfadefc08d236f47565d11a8850b9788ddd116" translate="yes" xml:space="preserve">
          <source>This function prints out a given traceback and exception to &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="translated">이 함수는 주어진 트레이스 &lt;code&gt;sys.stderr&lt;/code&gt; 예외를 sys.stderr에 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="ce4c56e9ebaef2be95f933821a82b6250096cf20" translate="yes" xml:space="preserve">
          <source>This function raises &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; if the compiled source is invalid, and &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the source contains null bytes.</source>
          <target state="translated">이 함수 는 컴파일 된 소스가 유효하지 않은 경우 &lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 를&lt;/a&gt; 발생시키고 소스에 널 바이트가 포함 된 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="8387f182301769ffb4d541325ec84e9397a2e7d8" translate="yes" xml:space="preserve">
          <source>This function raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt;. The &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; arguments may have been modified or inferred from the original call.</source>
          <target state="translated">이 함수 는 인수 &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;flags&lt;/code&gt; 로 &lt;code&gt;open&lt;/code&gt; &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트를 발생&lt;/a&gt; 시킵니다. &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;flags&lt;/code&gt; 인수를 수정하거나 원래 통화에서 추정되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78e94a989e8572d53e6ff1d156dde94e63d8cdf5" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects to decode. Therefore it does not support text-to-text encoders such as &lt;code&gt;rot_13&lt;/code&gt;, although &lt;code&gt;rot_13&lt;/code&gt; may be used equivalently with &lt;a href=&quot;#codecs.iterencode&quot;&gt;&lt;code&gt;iterencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 기능을 사용하려면 코덱 에서 디코딩 할 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체를 받아 들여야 합니다 . 따라서 같은 텍스트 - 텍스트 인코더 지원하지 않는 &lt;code&gt;rot_13&lt;/code&gt; 를 있지만 &lt;code&gt;rot_13&lt;/code&gt; 가 함께 동등하게 사용될 수있다 &lt;a href=&quot;#codecs.iterencode&quot;&gt; &lt;code&gt;iterencode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed7e6a53326800e0c99a24c7943af3979b042021" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept text &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects to encode. Therefore it does not support bytes-to-bytes encoders such as &lt;code&gt;base64_codec&lt;/code&gt;.</source>
          <target state="translated">이 기능을 사용하려면 코덱 에서 인코딩 할 텍스트 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 객체를 수락해야합니다 . 따라서 &lt;code&gt;base64_codec&lt;/code&gt; 와 같은 바이트 대 바이트 인코더는 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ca7b19d20b3fc70fd4a06f6eaf9f2609ffde0a21" translate="yes" xml:space="preserve">
          <source>This function resizes the internal memory buffer of &lt;em&gt;obj&lt;/em&gt;, which must be an instance of a ctypes type. It is not possible to make the buffer smaller than the native size of the objects type, as given by &lt;code&gt;sizeof(type(obj))&lt;/code&gt;, but it is possible to enlarge the buffer.</source>
          <target state="translated">이 함수 는 ctypes 유형의 인스턴스 여야하는 &lt;em&gt;obj&lt;/em&gt; 의 내부 메모리 버퍼 크기 를 조정합니다. &lt;code&gt;sizeof(type(obj))&lt;/code&gt; 의해 주어진 것처럼 객체 유형의 기본 크기보다 버퍼를 작게 만들 수는 없지만 버퍼를 확대 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7666a23252f123adf92ecbb5fd3b070801019d8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;em&gt;func&lt;/em&gt;, which makes it possible to use it as a decorator.</source>
          <target state="translated">이 함수는 &lt;em&gt;func를&lt;/em&gt; 반환 하여 데코레이터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7db7474465da4003217948e1553874c4a2c0f3b3" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;code&gt;typing.TextIO&lt;/code&gt; instance, a text I/O stream open for reading.</source>
          <target state="translated">이 함수는 &lt;code&gt;typing.TextIO&lt;/code&gt; 인스턴스, 읽기 위해 열린 텍스트 I / O 스트림을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="11586ef5462bc5cc9bafb350e47c109a73f45482" translate="yes" xml:space="preserve">
          <source>This function returns a list of &lt;code&gt;(decoded_string, charset)&lt;/code&gt; pairs containing each of the decoded parts of the header. &lt;em&gt;charset&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; for non-encoded parts of the header, otherwise a lower case string containing the name of the character set specified in the encoded string.</source>
          <target state="translated">이 함수는 헤더의 디코딩 된 각 부분을 포함하는 &lt;code&gt;(decoded_string, charset)&lt;/code&gt; 쌍 의 목록을 반환합니다 . &lt;em&gt;charset&lt;/em&gt; 은 헤더의 인코딩되지 않은 부분에 대해서는 &lt;code&gt;None&lt;/code&gt; 이며, 그렇지 않으면 인코딩 된 문자열에 지정된 문자 세트의 이름을 포함하는 소문자 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c6b5a760d5b2d7a0cdc6a46768cb3ddd798abf48" translate="yes" xml:space="preserve">
          <source>This function returns a tuple of three values that give information about the exception that is currently being handled. The information returned is specific both to the current thread and to the current stack frame. If the current stack frame is not handling an exception, the information is taken from the calling stack frame, or its caller, and so on until a stack frame is found that is handling an exception. Here, &amp;ldquo;handling an exception&amp;rdquo; is defined as &amp;ldquo;executing an except clause.&amp;rdquo; For any stack frame, only information about the exception being currently handled is accessible.</source>
          <target state="translated">이 함수는 현재 처리중인 예외에 대한 정보를 제공하는 세 가지 값의 튜플을 반환합니다. 반환 된 정보는 현재 스레드와 현재 스택 프레임에 모두 해당됩니다. 현재 스택 프레임이 예외를 처리하지 않는 경우 예외를 처리하는 스택 프레임이 발견 될 때까지 호출 스택 프레임 또는 해당 호출자 등에서 정보를 가져옵니다. 여기서 &quot;예외 처리&quot;는 &quot;예외 조항 실행&quot;으로 정의됩니다. 모든 스택 프레임의 경우 현재 처리중인 예외에 대한 정보 만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8119a5093d30b11cd9b05ae9690966f552c52002" translate="yes" xml:space="preserve">
          <source>This function returns an instance of &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; that holds the header fields, but no payload (the same as &lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt;&lt;code&gt;HTTPResponse.msg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt;&lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt;&lt;/a&gt;). After returning, the file pointer &lt;em&gt;fp&lt;/em&gt; is ready to read the HTTP body.</source>
          <target state="translated">이 함수는 &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; 헤더 필드를 보유하지만 페이로드는 포함하지 않는 http.client.HTTPMessage ( &lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt; &lt;code&gt;HTTPResponse.msg&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt; &lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt; &lt;/a&gt; 와 동일 ). 돌아온 후 파일 포인터 &lt;em&gt;fp&lt;/em&gt; 는 HTTP 본문을 읽을 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9310ca486b065ef93bb150015e5c6c85fc6241cc" translate="yes" xml:space="preserve">
          <source>This function returns an object that describes the resources consumed by either the current process or its children, as specified by the &lt;em&gt;who&lt;/em&gt; parameter. The &lt;em&gt;who&lt;/em&gt; parameter should be specified using one of the &lt;code&gt;RUSAGE_*&lt;/code&gt; constants described below.</source>
          <target state="translated">이 함수는 &lt;em&gt;who&lt;/em&gt; 매개 변수에 지정된대로 현재 프로세스 또는 해당 하위 프로세스가 소비 한 자원을 설명하는 오브젝트를 리턴합니다 . &lt;em&gt;사람&lt;/em&gt; 파라미터들 중 하나를 사용하여 지정한다 &lt;code&gt;RUSAGE_*&lt;/code&gt; 상수에 대하여 설명한다.</target>
        </trans-unit>
        <trans-unit id="3c98f1f0078fc7e488538849f2fe95f019b74e6e" translate="yes" xml:space="preserve">
          <source>This function returns names of the second form from the list, &lt;code&gt;ethernet_32770&lt;/code&gt; in this example case.</source>
          <target state="translated">이 함수는 목록에서 두 번째 형식의 이름을 반환합니다 ( 이 예제의 경우 &lt;code&gt;ethernet_32770&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="3389bceb4f4b217616df6b1450bc7411416e8c32" translate="yes" xml:space="preserve">
          <source>This function returns random bytes from an OS-specific randomness source. The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation.</source>
          <target state="translated">이 함수는 OS 별 임의 소스에서 임의 바이트를 반환합니다. 정확한 품질은 OS 구현에 따라 다르지만 반환 된 데이터는 암호화 응용 프로그램에 충분히 예측할 수 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="c1b5c9eb8a860c921596d08ec2b539e7ca036ef7" translate="yes" xml:space="preserve">
          <source>This function returns the C string starting at memory address &lt;em&gt;address&lt;/em&gt; as a bytes object. If size is specified, it is used as size, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">이 함수는 메모리 주소 &lt;em&gt;주소&lt;/em&gt; 에서 시작하는 C 문자열을 바이트 객체로 반환합니다. size가 지정되면 size로 사용되며, 그렇지 않으면 문자열이 0으로 끝나는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="0275e415bdf66c562ae0a9793115bf8d4692dd28" translate="yes" xml:space="preserve">
          <source>This function returns the wide character string starting at memory address &lt;em&gt;address&lt;/em&gt; as a string. If &lt;em&gt;size&lt;/em&gt; is specified, it is used as the number of characters of the string, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">이 함수는 메모리 주소에서 시작하는 넓은 문자열을 반환합니다 &lt;em&gt; 주소&lt;/em&gt; 합니다. 경우 &lt;em&gt;크기가&lt;/em&gt; 지정되어, 그렇지 않으면 문자열이 제로 종료로 가정, 문자열의 문자 수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c26b6d13d8eeee602e191f75458ddf599459f7ad" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop and &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;.</source>
          <target state="translated">이 함수는 전달 된 코 루틴을 실행하여 asyncio 이벤트 루프를 관리하고 &lt;em&gt;비동기 생성기를 마무리&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="41a0b48769cb7e209f89511c2f68696cadb787be" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop, &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;, and closing the threadpool.</source>
          <target state="translated">이 함수는 전달 된 코 루틴을 실행하여 asyncio 이벤트 루프 관리, &lt;em&gt;비동기 생성기 마무리&lt;/em&gt; 및 스레드 풀 닫기를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="4771703fc1ce559310da22e7cd6065d893c64e7e" translate="yes" xml:space="preserve">
          <source>This function securely creates a temporary directory using the same rules as &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt;. The resulting object can be used as a context manager (see &lt;a href=&quot;#tempfile-examples&quot;&gt;Examples&lt;/a&gt;). On completion of the context or destruction of the temporary directory object the newly created temporary directory and all its contents are removed from the filesystem.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt; 와 동일한 규칙을 사용하여 임시 디렉토리를 안전하게 만듭니다. . 결과 객체는 컨텍스트 관리자로 사용할 수 있습니다 ( &lt;a href=&quot;#tempfile-examples&quot;&gt;예&lt;/a&gt; 참조 ). 임시 디렉토리 오브젝트의 컨텍스트 또는 파괴가 완료되면 새로 작성된 임시 디렉토리 및 모든 컨텐츠가 파일 시스템에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="a3d02be868af88937c3058959c00f7f17a0f84b0" translate="yes" xml:space="preserve">
          <source>This function should be called from the main thread before other threads are started. In versions of Python prior to 2.7.1 and 3.2, if this function is called from multiple threads, it is possible (in rare circumstances) that a handler will be added to the root logger more than once, leading to unexpected results such as messages being duplicated in the log.</source>
          <target state="translated">다른 스레드가 시작되기 전에 기본 스레드에서이 함수를 호출해야합니다. 2.7.1 및 3.2 이전의 Python 버전에서이 함수가 여러 스레드에서 호출되는 경우 (드문 경우) 핸들러가 루트 로거에 두 번 이상 추가되어 메시지와 같은 예기치 않은 결과가 발생할 수 있습니다. 로그에 복제되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="30c97aeaa35ec532c2b20093c15a7ccbd689f6e4" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFEXITED&quot;&gt;&lt;code&gt;WIFEXITED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#os.WIFEXITED&quot;&gt; &lt;code&gt;WIFEXITED()&lt;/code&gt; &lt;/a&gt; 가 true 인 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d34602c9a05f6fd43a9c201f414237f00fe689fd" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt;&lt;code&gt;WIFSIGNALED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt; &lt;code&gt;WIFSIGNALED()&lt;/code&gt; &lt;/a&gt; 가 true 인 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="55eee6614b9261ec463003cc0cb6c34fd7aab34a" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt;&lt;code&gt;WIFSTOPPED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt; &lt;code&gt;WIFSTOPPED()&lt;/code&gt; &lt;/a&gt; 가 true 인 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="9d20e60dd1d63a521945c30323e6b6bf138f6832" translate="yes" xml:space="preserve">
          <source>This function should be used for internal and specialized purposes only.</source>
          <target state="translated">이 기능은 내부 및 특수 목적으로 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="749a08b5be8d75cfdf7f3f1e09a35adb78c01024" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이 함수는 Python 코드의 동적 실행을 지원합니다. &lt;em&gt;object&lt;/em&gt; 는 문자열 또는 코드 &lt;em&gt;개체&lt;/em&gt; 여야합니다. 문자열 인 경우 문자열은 Python 문으로 구문 분석되어 구문 오류가 발생하지 않는 한 실행됩니다. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 코드 객체 인 경우 간단히 실행됩니다. 모든 경우에 실행되는 코드는 파일 입력으로 유효합니다 (참조 매뉴얼의 &quot;파일 입력&quot;섹션 참조). 주의하십시오 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt; 문은 함수 정의의 사용 외부에도 전달 코드의 컨텍스트 내에서하지 않을 수 있습니다 &lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 함수입니다. 반환 값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b64e07fc9d486949c7572f80e56b02d2cf9c258e" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이 함수는 Python 코드의 동적 실행을 지원합니다. &lt;em&gt;object&lt;/em&gt; 는 문자열이거나 코드 &lt;em&gt;개체&lt;/em&gt; 여야합니다. 문자열 인 경우 해당 문자열은 Python 문 모음으로 구문 분석되어 실행됩니다 (구문 오류가 발생하지 않는 한). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 코드 객체이면 간단히 실행됩니다. 모든 경우에 실행되는 코드는 파일 입력으로 유효해야합니다 (참조 설명서의 &quot;파일 입력&quot;섹션 참조). 주의하십시오 &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt; 문은 함수 정의의 사용 외부에도 전달 코드의 컨텍스트 내에서하지 않을 수 있습니다 &lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 함수입니다. 반환 값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="086ca74667d6bc1899c60ca7f2435203fff0e70a" translate="yes" xml:space="preserve">
          <source>This function takes a single argument that can be passed to the &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function, and an optional file name. In all cases this routine executes:</source>
          <target state="translated">이 함수는 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 전달할 수있는 단일 인수를 사용합니다. 함수에 와 선택적 파일 이름을 사용합니다. 모든 경우에이 루틴은 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a8b457aa45063f9aaf0a8c9f77a5b594016e5868" translate="yes" xml:space="preserve">
          <source>This function takes an XML data string (&lt;em&gt;xml_data&lt;/em&gt;) or a file path or file-like object (&lt;em&gt;from_file&lt;/em&gt;) as input, converts it to the canonical form, and writes it out using the &lt;em&gt;out&lt;/em&gt; file(-like) object, if provided, or returns it as a text string if not. The output file receives text, not bytes. It should therefore be opened in text mode with &lt;code&gt;utf-8&lt;/code&gt; encoding.</source>
          <target state="translated">이 함수는 XML 데이터 문자열 ( &lt;em&gt;xml_data&lt;/em&gt; ) 또는 파일 경로 또는 파일과 유사한 객체 ( &lt;em&gt;from_file&lt;/em&gt; )를 입력으로 가져 와서 정식 형식으로 변환하고 제공된 경우 &lt;em&gt;출력&lt;/em&gt; 파일과 같은 객체를 사용하여 작성합니다. 그렇지 않으면 텍스트 문자열로 반환합니다. 출력 파일은 바이트가 아닌 텍스트를받습니다. 따라서 &lt;code&gt;utf-8&lt;/code&gt; 인코딩으로 텍스트 모드에서 열어야합니다 .</target>
        </trans-unit>
        <trans-unit id="00c9ccc2e6efc7cdd2787a047411daf9d2586338" translate="yes" xml:space="preserve">
          <source>This function takes an input source and an optional base URL and returns a fully resolved &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object ready for reading. The input source can be given as a string, a file-like object, or an &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object; parsers will use this function to implement the polymorphic &lt;em&gt;source&lt;/em&gt; argument to their &lt;code&gt;parse()&lt;/code&gt; method.</source>
          <target state="translated">이 함수는 입력 소스와 선택적 기본 URL을 가져 와서 해석 할 수있는 완전히 해결 된 &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; 객체를 반환합니다 . 입력 소스는 문자열, 파일과 같은 객체 또는 &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; 객체 로 제공 될 수 있습니다 . 파서는이 함수를 사용 하여 &lt;code&gt;parse()&lt;/code&gt; 메소드에 다형성 &lt;em&gt;소스&lt;/em&gt; 인수를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="ed291263129461634749d085a422476c646a04fe" translate="yes" xml:space="preserve">
          <source>This function takes one of those sequence of pairs and returns a &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instance. Optional &lt;em&gt;maxlinelen&lt;/em&gt;, &lt;em&gt;header_name&lt;/em&gt;, and &lt;em&gt;continuation_ws&lt;/em&gt; are as in the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">이 함수는 이러한 일련의 쌍 중 하나를 사용하여 &lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다. 선택적 &lt;em&gt;maxlinelen&lt;/em&gt; , &lt;em&gt;header_name&lt;/em&gt; 및 &lt;em&gt;continuation_ws&lt;/em&gt; 는 &lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt; 생성자와 같습니다.</target>
        </trans-unit>
        <trans-unit id="aaefda6e8f08981b1040b46ed1a5b3313e13419a" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 함수를 생성기 기반 코 루틴을 반환하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;코 루틴&lt;/a&gt; 함수로 변환합니다 . 제너레이터 기반 코 루틴은 여전히 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;제너레이터 이터레이터&lt;/a&gt; 이지만 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;코 루틴&lt;/a&gt; 객체로 간주되며 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;기다릴 수&lt;/a&gt; 있습니다. 그러나 반드시 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt; 구현할 필요는 없습니다. 메서드를 .</target>
        </trans-unit>
        <trans-unit id="44261da948aa68769f30a01b8aebf1bfc3369b14" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 함수를 생성기 기반 코 루틴을 반환하는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;코 루틴&lt;/a&gt; 함수로 변환합니다 . 제너레이터 기반 코 루틴은 여전히 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;제너레이터 반복자&lt;/a&gt; 이지만 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;코 루틴&lt;/a&gt; 객체로 간주되고 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;대기 가능&lt;/a&gt; 합니다. 그러나 반드시 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt; 메서드를 구현하는 것은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="dec68208c32ce4bef49692aaae7babc6b72520b3" translate="yes" xml:space="preserve">
          <source>This function uses a cache for past comparisons and the results, with cache entries invalidated if the &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; information for the file changes. The entire cache may be cleared using &lt;a href=&quot;#filecmp.clear_cache&quot;&gt;&lt;code&gt;clear_cache()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 파일 의 &lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt; 정보가 변경 되면 캐시 항목이 무효화 된 상태에서 과거 비교 및 ​​결과에 캐시를 사용합니다 . &lt;a href=&quot;#filecmp.clear_cache&quot;&gt; &lt;code&gt;clear_cache()&lt;/code&gt; &lt;/a&gt; 사용하여 전체 캐시를 지울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67621df8c29ab36ef48a10c6d3a54a11a295362f" translate="yes" xml:space="preserve">
          <source>This function uses a user-configurable function to convert the creation time to a tuple. By default, &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; is used; to change this for a particular formatter instance, set the &lt;code&gt;converter&lt;/code&gt; attribute to a function with the same signature as &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt;. To change it for all formatters, for example if you want all logging times to be shown in GMT, set the &lt;code&gt;converter&lt;/code&gt; attribute in the &lt;code&gt;Formatter&lt;/code&gt; class.</source>
          <target state="translated">이 기능은 사용자가 구성 할 수있는 기능을 사용하여 생성 시간을 튜플로 변환합니다. 기본적으로 &lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt; 이 사용됩니다. 특정 포맷터 인스턴스에 대해이를 변경하려면 &lt;code&gt;converter&lt;/code&gt; 속성을 &lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt; 과 동일한 서명을 가진 함수 로 설정하십시오 . 모든 로깅 시간은 GMT에 표시하려는 경우 예를 들어, 모든 포매터를 위해 그것을 변경하려면 설정 &lt;code&gt;converter&lt;/code&gt; 의 속성 &lt;code&gt;Formatter&lt;/code&gt; 클래스 .</target>
        </trans-unit>
        <trans-unit id="c7d4a1b7043855edd960d108a4b03c2c7f26f78e" translate="yes" xml:space="preserve">
          <source>This function uses the same search technique as &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt; 와 동일한 검색 기술을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="dcc0f796b37da4661e9e567b1d70beab1a789887" translate="yes" xml:space="preserve">
          <source>This function was inadvertently marked as deprecated in Python 3.5.</source>
          <target state="translated">이 함수는 실수로 Python 3.5에서 더 이상 사용되지 않는 것으로 표시되었습니다.</target>
        </trans-unit>
        <trans-unit id="fde76138b876f19a331c04c16e7173bc40335dae" translate="yes" xml:space="preserve">
          <source>This function will raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; if the named module cannot be imported.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다명명 된 모듈을 가져올 수없는 경우이 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="695e7aa3774a50e5d41215db0f861e34960b2541" translate="yes" xml:space="preserve">
          <source>This function will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid &lt;em&gt;who&lt;/em&gt; parameter is specified. It may also raise &lt;a href=&quot;#resource.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; exception in unusual circumstances.</source>
          <target state="translated">유효하지 않은 &lt;em&gt;who&lt;/em&gt; 매개 변수가 지정된 경우이 함수는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다. &lt;a href=&quot;#resource.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt; 수도 있습니다&lt;em&gt;&lt;/em&gt;비정상적인 상황에서 예외가 있습니다.</target>
        </trans-unit>
        <trans-unit id="45f82931ab2a0fc2142776ea98ebb1c0e233a5e9" translate="yes" xml:space="preserve">
          <source>This function will raise the first exception raised by any hook. In general, these errors should not be handled and should terminate the process as quickly as possible.</source>
          <target state="translated">이 함수는 모든 후크에서 발생한 첫 번째 예외를 발생시킵니다. 일반적으로 이러한 오류는 처리하지 않아야하며 가능한 빨리 프로세스를 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2f4a44ea4f4781c9ded6135bf54221ca4868d84" translate="yes" xml:space="preserve">
          <source>This function works best with Mark Hammond&amp;rsquo;s &lt;code&gt;win32all&lt;/code&gt; package installed, but also on Python 2.3 and later (support for this was added in Python 2.6). It obviously only runs on Win32 compatible platforms.</source>
          <target state="translated">이 함수는 Mark Hammond의 &lt;code&gt;win32all&lt;/code&gt; 패키지가 설치되어 있지만 Python 2.3 이상에서 가장 잘 작동합니다 (Python 2.6 에서 지원됨 ). 분명히 Win32 호환 플랫폼에서만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="cdfe78946dbc3eb876b9e7ddc8990bd5dab0055a" translate="yes" xml:space="preserve">
          <source>This function works for ranges spanning a century change.</source>
          <target state="translated">이 기능은 세기 변화에 걸친 범위에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6d4a6aeb5830677c42af3b67d316903d7b69a1cf" translate="yes" xml:space="preserve">
          <source>This function works like &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt;, except that GNU style scanning mode is used by default. This means that option and non-option arguments may be intermixed. The &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt; function stops processing options as soon as a non-option argument is encountered.</source>
          <target state="translated">이 함수는 GNU 스타일 스캐닝 모드가 기본적으로 사용된다는 점을 제외하고 &lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt; 와 같이 작동합니다 . 이것은 옵션 인수와 비 옵션 인수가 혼합 될 수 있음을 의미합니다. &lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt; 함수는 즉시 비 - 옵션 인수가 발생 될 때 옵션을 처리를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="c53c65a872781ee36da0b6344b195ca8579a2152" translate="yes" xml:space="preserve">
          <source>This function wraps the Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; function; see the Microsoft documentation on &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; for more information about these fields.</source>
          <target state="translated">이 함수는 Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; 함수를 래핑합니다 . 이러한 필드에 대한 자세한 내용은 &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; 대한 Microsoft 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fa1f0ee315ee71ef09519d3983d61008b818bf1" translate="yes" xml:space="preserve">
          <source>This functionality can be used to inject your own values into a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; at creation time. You can use the following pattern:</source>
          <target state="translated">이 기능은 생성시 고유 한 값을 &lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 에 주입하는 데 사용할 수 있습니다 . 다음 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0ca610375353cdc0d5c751741d7a392b2aded01" translate="yes" xml:space="preserve">
          <source>This functionality is provisional and may deviate from the usual version semantics of the standard library.</source>
          <target state="translated">이 기능은 잠정적이며 표준 라이브러리의 일반적인 버전 의미에서 벗어날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="014671f13f1d15f016c7f3185f6694055488cde2" translate="yes" xml:space="preserve">
          <source>This functionality is used in numerous places in the standard library (see &lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915&lt;/a&gt;) - and equivalent functionality is also in widely used third-party packages such as setuptools, Django and Pyramid.</source>
          <target state="translated">이 기능은 표준 라이브러리 ( &lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915&lt;/a&gt; 참조)의 여러 위치에서 사용되며 , 동등한 기능은 setuptools, Django 및 Pyramid와 같이 널리 사용되는 타사 패키지에도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f325c661123592c2ffbf04844b8b46e0e85687b6" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">이 생성기 함수는 코드 객체 &lt;em&gt;코드&lt;/em&gt; 의 &lt;code&gt;co_firstlineno&lt;/code&gt; 및 &lt;code&gt;co_lnotab&lt;/code&gt; 속성을 사용 하여 소스 코드에서 행의 시작 인 오프셋을 찾습니다. 그것들은 &lt;code&gt;(offset, lineno)&lt;/code&gt; 쌍 으로 생성됩니다 . &lt;code&gt;co_lnotab&lt;/code&gt; 형식 및 디코딩 방법 은 &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;Objects / lnotab_notes.txt&lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0be55414e275a4a1c5dd59a5735b9e7e483fc983" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">이 생성기 함수는 코드 개체 &lt;em&gt;코드&lt;/em&gt; 의 &lt;code&gt;co_firstlineno&lt;/code&gt; 및 &lt;code&gt;co_lnotab&lt;/code&gt; 속성을 사용 하여 소스 코드에서 줄의 시작 인 오프셋을 찾습니다. 이들은 &lt;code&gt;(offset, lineno)&lt;/code&gt; 쌍 으로 생성됩니다 . &lt;code&gt;co_lnotab&lt;/code&gt; 형식 및 디코딩 방법 은 &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;Objects / lnotab_notes.txt&lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31e7ec1a6118bb6f4c7d19cb31c4eb16dbcf0646" translate="yes" xml:space="preserve">
          <source>This gives the same ordering as a series of &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; calls starting with the last mapping:</source>
          <target state="translated">이것은 마지막 매핑으로 시작 하는 일련의 &lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt; 호출과 동일한 순서를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="358cfff4da4236e735a011c08d723d2e34737515" translate="yes" xml:space="preserve">
          <source>This handler is not appropriate for use under Windows, because under Windows open log files cannot be moved or renamed - logging opens the files with exclusive locks - and so there is no need for such a handler. Furthermore, &lt;em&gt;ST_INO&lt;/em&gt; is not supported under Windows; &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; always returns zero for this value.</source>
          <target state="translated">이 핸들러는 Windows에서 로그 파일을 이동하거나 이름을 바꿀 수 없기 때문에 Windows에서 사용하기에 적합하지 않습니다. 로깅은 독점 잠금으로 파일을 열므로 이러한 핸들러가 필요하지 않습니다. 또한 &lt;em&gt;ST_INO&lt;/em&gt; 는 Windows에서 지원되지 않습니다. &lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt; 는이 값에 대해 항상 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2e794ef0fce7d4a030d7833706ed98762c476d0" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. The situation is similar to that with &lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt;. The value is a string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이는 각 노드 유형마다 다른 의미를 갖습니다. 자세한 내용은 DOM 사양을 참조하십시오. 상황은 &lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt; &lt;code&gt;nodeName&lt;/code&gt; &lt;/a&gt; 과 유사합니다 . 값은 문자열 또는 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e7cbbcfa82c4924ad5e9ced671d2f1dd378b2b19" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. You can always get the information you would get here from another property such as the &lt;code&gt;tagName&lt;/code&gt; property for elements or the &lt;code&gt;name&lt;/code&gt; property for attributes. For all node types, the value of this attribute will be either a string or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">이는 각 노드 유형마다 다른 의미를 갖습니다. 자세한 내용은 DOM 사양을 참조하십시오. 요소 의 &lt;code&gt;tagName&lt;/code&gt; 속성 또는 속성 의 &lt;code&gt;name&lt;/code&gt; 속성 과 같은 다른 속성에서 항상 여기에있는 정보를 얻을 수 있습니다 . 모든 노드 유형에서이 속성의 값은 문자열 또는 &lt;code&gt;None&lt;/code&gt; 입니다. 이것은 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="d49f6a32c691ba4c1b6204e2157adf71d435017f" translate="yes" xml:space="preserve">
          <source>This has implications both for recursive objects and object sharing. Recursive objects are objects that contain references to themselves. These are not handled by marshal, and in fact, attempting to marshal recursive objects will crash your Python interpreter. Object sharing happens when there are multiple references to the same object in different places in the object hierarchy being serialized. &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; stores such objects only once, and ensures that all other references point to the master copy. Shared objects remain shared, which can be very important for mutable objects.</source>
          <target state="translated">이것은 재귀 객체와 객체 공유 모두에 영향을 미칩니다. 재귀 객체는 자신에 대한 참조를 포함하는 객체입니다. 이것은 마샬링에 의해 처리되지 않으며 실제로 재귀 객체를 마샬링하려고하면 Python 인터프리터가 충돌합니다. 객체 공유는 직렬화되는 객체 계층의 다른 위치에 동일한 객체에 대한 여러 참조가있을 때 발생합니다. &lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 은 이러한 오브젝트를 한 번만 저장하고 다른 모든 참조가 마스터 사본을 가리 키도록합니다. 공유 객체는 공유 상태를 유지하므로 변경 가능한 객체에 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="1399ebc54c4c88eebed882277416783d2785e8e3" translate="yes" xml:space="preserve">
          <source>This has the direct benefit of using the new widgets which gives a better look and feel across platforms; however, the replacement widgets are not completely compatible. The main difference is that widget options such as &amp;ldquo;fg&amp;rdquo;, &amp;ldquo;bg&amp;rdquo; and others related to widget styling are no longer present in Ttk widgets. Instead, use the &lt;code&gt;ttk.Style&lt;/code&gt; class for improved styling effects.</source>
          <target state="translated">이는 새로운 위젯을 사용하는 직접적인 이점을 제공하여 여러 플랫폼에서 더 나은 모양과 느낌을 제공합니다. 그러나 교체 위젯은 완전히 호환되지 않습니다. 주요 차이점은 &quot;fg&quot;, &quot;bg&quot;와 같은 위젯 옵션 및 위젯 스타일과 관련된 기타 옵션이 더 이상 Ttk 위젯에 존재하지 않는다는 것입니다. 대신 스타일링 효과를 개선 하려면 &lt;code&gt;ttk.Style&lt;/code&gt; 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e87d7da41d7ad71206613b0e5e393ce4a5a42bd" translate="yes" xml:space="preserve">
          <source>This has the same issue as the original example using class &lt;code&gt;C&lt;/code&gt;. That is, two instances of class &lt;code&gt;D&lt;/code&gt; that do not specify a value for &lt;code&gt;x&lt;/code&gt; when creating a class instance will share the same copy of &lt;code&gt;x&lt;/code&gt;. Because dataclasses just use normal Python class creation they also share this behavior. There is no general way for Data Classes to detect this condition. Instead, dataclasses will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if it detects a default parameter of type &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;. This is a partial solution, but it does protect against many common errors.</source>
          <target state="translated">이것은 클래스 &lt;code&gt;C&lt;/code&gt; 사용하는 원래 예제와 동일한 문제가 있습니다. 즉, 클래스 인스턴스를 만들 때 &lt;code&gt;x&lt;/code&gt; 값을 지정하지 않은 클래스 &lt;code&gt;D&lt;/code&gt; 의 두 인스턴스 는 동일한 &lt;code&gt;x&lt;/code&gt; 복사본을 공유합니다 . 데이터 클래스는 일반적인 Python 클래스 생성을 사용하기 때문에이 동작도 공유합니다. 데이터 클래스가이 조건을 감지하는 일반적인 방법은 없습니다. 대신, 데이터 클래스는 &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;dict&lt;/code&gt; 또는 &lt;code&gt;set&lt;/code&gt; 유형의 기본 매개 변수를 감지하면 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다. 이것은 부분적인 해결책이지만 많은 일반적인 오류로부터 보호합니다.</target>
        </trans-unit>
        <trans-unit id="15fd1d9b07f7514f7cf5eb3c49b420f63b3b5f83" translate="yes" xml:space="preserve">
          <source>This header type provides no additional attributes.</source>
          <target state="translated">이 헤더 유형은 추가 속성을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f8a8c30ab87345447e975d80dc8bc170b1bc77f0" translate="yes" xml:space="preserve">
          <source>This header type provides the following additional attributes:</source>
          <target state="translated">이 헤더 유형은 다음과 같은 추가 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f71ac2855dc5cb60a48f538bcab9c6cdf2af6c3" translate="yes" xml:space="preserve">
          <source>This helper function returns a dictionary of scheme to proxy server URL mappings. It scans the environment for variables named &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt;, in a case insensitive approach, for all operating systems first, and when it cannot find it, looks for proxy information from Mac OSX System Configuration for Mac OS X and Windows Systems Registry for Windows. If both lowercase and uppercase environment variables exist (and disagree), lowercase is preferred.</source>
          <target state="translated">이 헬퍼 함수는 스키마 사전을 프록시 서버 URL 맵핑으로 리턴합니다. 모든 운영 체제에 대해 대소 문자를 구분하지 않는 접근 &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt; 라는 변수를 환경에서 스캔하고 찾을 수없는 경우 Mac OS X 용 Mac OSX 시스템 구성 및 Windows 용 Windows 시스템 레지스트리에서 프록시 정보를 찾습니다. . 소문자 및 대문자 환경 변수가 모두 존재하고 동의하지 않는 경우 소문자가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="53a5ee201fe7aa42751eeb86e24842797e265154" translate="yes" xml:space="preserve">
          <source>This hook function is called by built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt;. By default, it drops you into the &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; debugger, but it can be set to any other function so that you can choose which debugger gets used.</source>
          <target state="translated">이 후크 함수는 내장 &lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 . 기본적으로 &lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt; 디버거로 이동하지만 다른 함수로 설정하여 사용할 디버거를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b43c40f486c2ec49629b4760fedb3dc28cd7fac" translate="yes" xml:space="preserve">
          <source>This hook is exposed so that you can use it to implement directory search paths, addition of file extensions, and other namespace hacks. There is no corresponding &amp;lsquo;close&amp;rsquo; hook, but a shlex instance will call the &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of the sourced input stream when it returns EOF.</source>
          <target state="translated">이 후크는 노출되어 디렉토리 검색 경로, 파일 확장자 추가 및 기타 네임 스페이스 해킹을 구현하는 데 사용할 수 있습니다. 해당 '닫기'후크는 없지만 소스 인스턴스 는 EOF를 반환 할 때 소스 입력 스트림 의 &lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="14a8a4310f49249faa0c97df760d4f86f9f20bfd" translate="yes" xml:space="preserve">
          <source>This idiom would be unsafe:</source>
          <target state="translated">이 관용구는 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3712ae89c928266d43f7b324f245cd2bd71916f9" translate="yes" xml:space="preserve">
          <source>This implementation just returns the passed-in record. You may want to override this method if you need to do any custom marshalling or manipulation of the record before passing it to the handlers.</source>
          <target state="translated">이 구현은 전달 된 레코드를 반환합니다. 레코드를 핸들러로 전달하기 전에 레코드를 사용자 정의 마샬링 또는 조작해야하는 경우이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="917e7805862587e91db53a744cdd1f1c98f6c549" translate="yes" xml:space="preserve">
          <source>This implementation polls process file descriptors (pidfds) to await child process termination. In some respects, &lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt;&lt;code&gt;PidfdChildWatcher&lt;/code&gt;&lt;/a&gt; is a &amp;ldquo;Goldilocks&amp;rdquo; child watcher implementation. It doesn&amp;rsquo;t require signals or threads, doesn&amp;rsquo;t interfere with any processes launched outside the event loop, and scales linearly with the number of subprocesses launched by the event loop. The main disadvantage is that pidfds are specific to Linux, and only work on recent (5.3+) kernels.</source>
          <target state="translated">이 구현은 프로세스 파일 설명자 (pidfds)를 폴링하여 자식 프로세스 종료를 기다립니다. 어떤면에서 &lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt; &lt;code&gt;PidfdChildWatcher&lt;/code&gt; &lt;/a&gt; 는 &quot;Goldilocks&quot;자식 감시자 구현입니다. 신호 나 스레드가 필요하지 않으며 이벤트 루프 외부에서 시작된 프로세스를 방해하지 않으며 이벤트 루프에서 시작된 하위 프로세스 수에 따라 선형 적으로 확장됩니다. 가장 큰 단점은 pidfd가 Linux에만 해당되며 최근 (5.3+) 커널에서만 작동한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="777834ae53352a725347928a6858bafea05f6ec0" translate="yes" xml:space="preserve">
          <source>This implementation reaps every terminated processes by calling &lt;code&gt;os.waitpid(-1)&lt;/code&gt; directly, possibly breaking other code spawning processes and waiting for their termination.</source>
          <target state="translated">이 구현은 &lt;code&gt;os.waitpid(-1)&lt;/code&gt; 직접 호출 하여 다른 코드 생성 프로세스를 중단하고 종료를 기다리는 방식으로 종료 된 모든 프로세스를 거칩니다 .</target>
        </trans-unit>
        <trans-unit id="d5fc161d4fd402329da4ef4c42d9348e3c0b7f9b" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt; signal.</source>
          <target state="translated">이 구현 은 인스턴스화시 &lt;code&gt;SIGCHLD&lt;/code&gt; 신호 핸들러를 등록합니다 . &lt;code&gt;SIGCHLD&lt;/code&gt; 신호에 대한 사용자 지정 처리기를 설치하는 타사 코드가 손상 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e66f626d3049620372cb155540f6631b45554cd8" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt;. signal).</source>
          <target state="translated">이 구현 은 인스턴스화시 &lt;code&gt;SIGCHLD&lt;/code&gt; 신호 핸들러를 등록합니다 . &lt;code&gt;SIGCHLD&lt;/code&gt; 에 대한 사용자 지정 처리기를 설치하는 타사 코드를 손상시킬 수 있습니다 . 신호).</target>
        </trans-unit>
        <trans-unit id="edd393e2fc27d7014d2911d6a54565f5099ffca5" translate="yes" xml:space="preserve">
          <source>This implementation starts a new waiting thread for every subprocess spawn.</source>
          <target state="translated">이 구현은 모든 서브 프로세스 스폰에 대해 새로운 대기 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ef609bd0f65de7996847176aad6c4872816f0096" translate="yes" xml:space="preserve">
          <source>This implementation uses active event loop from the main thread to handle &lt;code&gt;SIGCHLD&lt;/code&gt; signal. If the main thread has no running event loop another thread cannot spawn a subprocess (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">이 구현은 메인 스레드의 활성 이벤트 루프를 사용하여 &lt;code&gt;SIGCHLD&lt;/code&gt; 신호 를 처리 합니다. 메인 스레드에 실행중인 이벤트 루프가 없으면 다른 스레드가 하위 프로세스를 생성 할 수 없습니다 ( &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 발생).</target>
        </trans-unit>
        <trans-unit id="b9fd2d3b23621ed74495b3c520170639252c1cb8" translate="yes" xml:space="preserve">
          <source>This installs the function &lt;code&gt;_()&lt;/code&gt; in Python&amp;rsquo;s builtins namespace, based on &lt;em&gt;domain&lt;/em&gt;, &lt;em&gt;localedir&lt;/em&gt;, and &lt;em&gt;codeset&lt;/em&gt; which are passed to the function &lt;a href=&quot;#gettext.translation&quot;&gt;&lt;code&gt;translation()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수 는 &lt;em&gt;domain&lt;/em&gt; , &lt;em&gt;localedir&lt;/em&gt; 및 함수 &lt;a href=&quot;#gettext.translation&quot;&gt; &lt;code&gt;translation()&lt;/code&gt; &lt;/a&gt; 전달 된 &lt;em&gt;코드 세트&lt;/em&gt; 를 기반으로 Python의 내장 네임 스페이스에 &lt;code&gt;_()&lt;/code&gt; 함수를 설치합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c2e2c274c1f4f231ffb4b3c188adf438144d914" translate="yes" xml:space="preserve">
          <source>This interface is a subtype of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). All methods supported by that interface are also available on &lt;code&gt;AttributesNS&lt;/code&gt; objects.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;Attributes&lt;/code&gt; 인터페이스 의 하위 유형입니다 (섹션 &lt;a href=&quot;#attributes-objects&quot;&gt;속성 인터페이스&lt;/a&gt; 참조 ). 해당 인터페이스에서 지원하는 모든 메소드는 &lt;code&gt;AttributesNS&lt;/code&gt; 객체 에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69e1f3c707f5dccfcafc540b279aa49c7ac7c0b2" translate="yes" xml:space="preserve">
          <source>This interface specifies only those DTD events required for basic parsing (unparsed entities and attributes).</source>
          <target state="translated">이 인터페이스는 기본 구문 분석에 필요한 DTD 이벤트 (구문 분석되지 않은 엔티티 및 속성) 만 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4bfef769a5c6fd1c3d4f6d5ae1a3d088e11a2056" translate="yes" xml:space="preserve">
          <source>This invocation will install &lt;code&gt;pip&lt;/code&gt; if it is not already installed, but otherwise does nothing. To ensure the installed version of &lt;code&gt;pip&lt;/code&gt; is at least as recent as the one bundled with &lt;code&gt;ensurepip&lt;/code&gt;, pass the &lt;code&gt;--upgrade&lt;/code&gt; option:</source>
          <target state="translated">이 호출은 &lt;code&gt;pip&lt;/code&gt; 가 아직 설치되지 않은 경우 pip 를 설치 하지만 그렇지 않으면 아무것도 수행하지 않습니다. &lt;code&gt;pip&lt;/code&gt; 의 설치된 버전이 &lt;code&gt;ensurepip&lt;/code&gt; 와 함께 제공된 버전 보다 최신 버전인지 확인하려면 &lt;code&gt;--upgrade&lt;/code&gt; 옵션을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb20184489faa55d2426651ba4b6f1ea8d80ec92" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of external entities. For entity names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no entities are defined.</source>
          <target state="translated">이것은 &lt;code&gt;NamedNodeMap&lt;/code&gt; 입니다외부 엔티티의 정의를 제공 입니다. 엔티티 이름이 두 번 이상 정의 된 경우 첫 번째 정의 만 제공됩니다 (XML 권장 사항에 따라 다른 정의는 무시 됨). 파서가 정보를 제공하지 않거나 정의 된 엔터티가없는 경우 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ccd5839ee601e99f6f394c59c1c5d21a1f62f7d" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of notations. For notation names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no notations are defined.</source>
          <target state="translated">이것은 표기법의 정의를 제공 하는 &lt;code&gt;NamedNodeMap&lt;/code&gt; 입니다. 표기법 이름이 두 번 이상 정의 된 경우 첫 번째 정의 만 제공됩니다 (XML 권장 사항에 따라 다른 정의는 무시 됨). 이것은 아마도 &lt;code&gt;None&lt;/code&gt; 파서가 정보를 제공하지 않거나 표기법이 정의되지 않은 경우 None .</target>
        </trans-unit>
        <trans-unit id="5a0e8bb08b951bc0ca7e9c250421a010f6ad466d" translate="yes" xml:space="preserve">
          <source>This is a Linux-specific &lt;em&gt;idtype&lt;/em&gt; that indicates that &lt;em&gt;id&lt;/em&gt; is a file descriptor that refers to a process.</source>
          <target state="translated">이것은 &lt;em&gt;id&lt;/em&gt; 가 프로세스를 참조하는 파일 설명 &lt;em&gt;자임&lt;/em&gt; 을 나타내는 Linux 특정 &lt;em&gt;idtype&lt;/em&gt; 입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b5208e374d58ef0d15cd53fa00dca754440a5fc" translate="yes" xml:space="preserve">
          <source>This is a Python type object that represents the socket object type. It is the same as &lt;code&gt;type(socket(...))&lt;/code&gt;.</source>
          <target state="translated">소켓 객체 유형을 나타내는 Python 유형 객체입니다. &lt;code&gt;type(socket(...))&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="1dee36bf4f5451b3dde8adb8abdefc1876d4de9e" translate="yes" xml:space="preserve">
          <source>This is a backwards compatibility wrapper around &lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt;&lt;code&gt;importlib.util.find_spec()&lt;/code&gt;&lt;/a&gt; that converts most failures to &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; and only returns the loader rather than the full &lt;code&gt;ModuleSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt; &lt;code&gt;importlib.util.find_spec()&lt;/code&gt; &lt;/a&gt; 주위의 역 호환성 래퍼 로 대부분의 오류를 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 로 변환 하고 전체 로더가 아닌 로더 만 반환합니다. &lt;code&gt;ModuleSpec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4853227db3f995082df7ac50dcf7aaaf84b7041" translate="yes" xml:space="preserve">
          <source>This is a class for comparing sequences of lines of text, and producing human-readable differences or deltas. Differ uses &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; both to compare sequences of lines, and to compare sequences of characters within similar (near-matching) lines.</source>
          <target state="translated">텍스트 줄의 순서를 비교하고 사람이 읽을 수있는 차이나 델타를 생성하는 클래스입니다. 다른 용도&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; 를&lt;/a&gt;하여 줄 시퀀스를 비교하고 비슷한 (가까운) 줄 내의 문자 시퀀스를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="a8fa4665c3a9797ed6410afb94e30d45735e5a34" translate="yes" xml:space="preserve">
          <source>This is a compatibility alias for the builtin &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">이것은 내장의 호환성 별칭입니다 &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt; 예외에.</target>
        </trans-unit>
        <trans-unit id="37837f0ec1ef400d3ebf35665f34cf4e36eefe80" translate="yes" xml:space="preserve">
          <source>This is a convenience function for invoking &lt;a href=&quot;#functools.update_wrapper&quot;&gt;&lt;code&gt;update_wrapper()&lt;/code&gt;&lt;/a&gt; as a function decorator when defining a wrapper function. It is equivalent to &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt;. For example:</source>
          <target state="translated">랩퍼 함수를 ​​정의 할 때 &lt;a href=&quot;#functools.update_wrapper&quot;&gt; &lt;code&gt;update_wrapper()&lt;/code&gt; &lt;/a&gt; 를 함수 데코레이터로 호출하기위한 편리한 함수입니다 . 그것은 &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="67ef0177e990584ce72a8564cff23e66f1dd9f9a" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly so that the total time &amp;gt;= 0.2 second, returning the eventual (number of loops, time taken for that number of loops). It calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; with increasing numbers from the sequence 1, 2, 5, 10, 20, 50, &amp;hellip; until the time taken is at least 0.2 second.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 반복적으로 호출 하여 총 시간&amp;gt; = 0.2 초가되도록하여 최종 횟수 (루프 수, 해당 루프 수에 걸린 시간)를 반환합니다. &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 호출 걸리는 시간은 0.2 초 이상이 될 때까지, ... 순서 1, 2, 5, 10, 20, 50 참조 증가한다.</target>
        </trans-unit>
        <trans-unit id="938872e7160a22a30969daf820e4a0b8ebd24e14" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls the &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly, returning a list of results. The first argument specifies how many times to call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;. The second argument specifies the &lt;em&gt;number&lt;/em&gt; argument for &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 반복적으로 호출하여 결과 목록을 반환 하는 편리한 함수입니다 . 첫 번째 인수는 &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 호출 횟수를 지정합니다 . 두 번째 인수 는 &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;숫자&lt;/em&gt; 인수를 지정합니다. .</target>
        </trans-unit>
        <trans-unit id="cf3d30edfa064a563ec303c042f7eac8623ee99e" translate="yes" xml:space="preserve">
          <source>This is a convenience method for calling &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; with the message represented by an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; object. The arguments have the same meaning as for &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;msg&lt;/em&gt; is a &lt;code&gt;Message&lt;/code&gt; object.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt; 객체로 표시되는 메시지로 &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt; 을 호출하는 편리한 방법입니다 . 인수는 &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt; 과 동일한 의미 를 &lt;em&gt;갖지만 msg&lt;/em&gt; 는 &lt;code&gt;Message&lt;/code&gt; 입니다.&lt;em&gt;&lt;/em&gt; 객체 .</target>
        </trans-unit>
        <trans-unit id="980d084f94f1a1f05dbcfb9a33957714c6c2fb1a" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper around many of the functions listed below, most notably &lt;a href=&quot;#dis.get_instructions&quot;&gt;&lt;code&gt;get_instructions()&lt;/code&gt;&lt;/a&gt;, as iterating over a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; instance yields the bytecode operations as &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">이것은 &lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt; 인스턴스 를 반복 하여 바이트 코드 연산을 &lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt; 인스턴스 로 생성하므로 아래에 나열된 많은 함수, 특히 &lt;a href=&quot;#dis.get_instructions&quot;&gt; &lt;code&gt;get_instructions()&lt;/code&gt; &lt;/a&gt; 주위의 편리한 래퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="498284187cd398ea132a44f93919c4008100e92c" translate="yes" xml:space="preserve">
          <source>This is a convenient shorthand for &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt;, intended for interactive exploration at the interpreter prompt.</source>
          <target state="translated">인터프리터 프롬프트에서 대화식으로 탐색하기위한 &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt; 단축형입니다 .</target>
        </trans-unit>
        <trans-unit id="8edf4f348b71a4a03b0b1fe5e2efdd8e50b78e09" translate="yes" xml:space="preserve">
          <source>This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class&amp;rsquo;s __getattr__ method; this is done by raising AttributeError.</source>
          <target state="translated">설명자이며 인스턴스와 클래스를 통해 액세스 할 때 다르게 작동하는 속성을 정의하는 데 사용됩니다. 인스턴스 액세스는 정상적으로 유지되지만 클래스를 통한 속성 액세스는 클래스의 __getattr__ 메소드로 라우팅됩니다. 이는 AttributeError를 발생시켜 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="af3bb3689f2aed5ed632d859ff4360df92b4652f" translate="yes" xml:space="preserve">
          <source>This is a dictionary that maps module names to modules which have already been loaded. This can be manipulated to force reloading of modules and other tricks. However, replacing the dictionary will not necessarily work as expected and deleting essential items from the dictionary may cause Python to fail.</source>
          <target state="translated">이것은 이미로드 된 모듈에 모듈 이름을 매핑하는 사전입니다. 모듈 및 기타 트릭을 강제로 다시로드하도록 조작 할 수 있습니다. 그러나 사전을 바꾸는 것이 예상대로 작동하지는 않으며 사전에서 필수 항목을 삭제하면 Python이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a8e1dd0c6a91e83f3589db589be616dad107d0a" translate="yes" xml:space="preserve">
          <source>This is a factory method which allows subclasses to define the precise type of socket they want. The default implementation creates a TCP socket (&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;socket.SOCK_STREAM&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이것은 서브 클래스가 원하는 정확한 소켓 유형을 정의 할 수있게하는 팩토리 메소드입니다. 기본 구현은 TCP 소켓 ( &lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;socket.SOCK_STREAM&lt;/code&gt; &lt;/a&gt; )을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="b26ec592d29731c63ae2c68e17de8b091431aaea" translate="yes" xml:space="preserve">
          <source>This is a factory method which can be overridden in subclasses to create specialized &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">특수한 &lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 인스턴스 를 만들기 위해 서브 클래스에서 재정의 할 수있는 팩토리 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="5843574bbe9da7d6b6838eb28296d0456a38c5fb" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">시퀀스 요소가 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;해시&lt;/a&gt; 가능한 한 모든 유형의 시퀀스 쌍을 비교할 수있는 유연한 클래스입니다. . 기본 알고리즘은 1980 년대 후반 Ratcliff와 Obershelp가 하이퍼 볼릭 이름 인 &quot;gestalt pattern matching&quot;으로 발표 한 알고리즘보다 오래되었으며, 그보다 더 멋진 알고리즘입니다. 아이디어는 &quot;정크&quot;요소가 포함되지 않은 가장 긴 연속 일치 하위 시퀀스를 찾는 것입니다. 이러한 &quot;정크&quot;요소는 빈 줄이나 공백과 같이 어떤 의미에서는 흥미롭지 않은 요소입니다. 정크 처리는 Ratcliff 및 Obershelp 알고리즘의 확장입니다. 그런 다음 동일한 아이디어가 일치하는 하위 시퀀스의 왼쪽과 오른쪽에있는 시퀀스 조각에 재귀 적으로 적용됩니다. 이것은 최소한의 편집 시퀀스를 산출하지는 않지만 사람들에게&amp;ldquo;올바로 보이는&amp;rdquo;일치를 산출하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cad347fa9579dce44e440630ee250078fa104f6" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">이것은 시퀀스 요소가 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;해시&lt;/a&gt; 가능한 한 모든 유형의 시퀀스 쌍을 비교할 수있는 유연한 클래스입니다 . 기본 알고리즘은 1980 년대 후반 Ratcliff와 Obershelp가 쌍곡선 이름 인 &quot;gestalt pattern matching&quot;으로 발표 한 알고리즘보다 이전에 출시되었으며 약간 더 환상적입니다. 아이디어는 &quot;정크&quot;요소를 포함하지 않는 가장 긴 연속 일치하는 하위 시퀀스를 찾는 것입니다. 이러한 &quot;정크&quot;요소는 공백 줄이나 공백과 같이 어떤 의미에서는 흥미롭지 않은 요소입니다. (정크 처리는 Ratcliff 및 Obershelp 알고리즘의 확장입니다.) 동일한 아이디어가 일치하는 하위 시퀀스의 왼쪽과 오른쪽에있는 시퀀스 조각에 재귀 적으로 적용됩니다. 이것은 최소한의 편집 시퀀스를 생성하지는 않지만 사람들에게 &quot;올바르게 보이는&quot;매치를 생성하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="34e62d716ed9ec49d64591a2d7f599e917d029d8" translate="yes" xml:space="preserve">
          <source>This is a flow control method that interacts with the underlying IO write buffer. When the size of the buffer reaches the high watermark, &lt;em&gt;drain()&lt;/em&gt; blocks until the size of the buffer is drained down to the low watermark and writing can be resumed. When there is nothing to wait for, the &lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; returns immediately.</source>
          <target state="translated">기본 IO 쓰기 버퍼와 상호 작용하는 흐름 제어 방법입니다. 버퍼의 크기가 높은 워터 마크에 도달하면, 버퍼 크기가 낮은 워터 마크로 배수되고 쓰기가 재개 될 때까지 &lt;em&gt;drain ()이&lt;/em&gt; 차단됩니다. 기다릴 것이 없으면 &lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt; 이 즉시 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ee578e8a96ae7b79e56215ce0608af10bb1a6d51" translate="yes" xml:space="preserve">
          <source>This is a generic method; for specific types, specialized methods are provided.</source>
          <target state="translated">이것은 일반적인 방법입니다. 특정 유형의 경우 특수한 방법이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c70fb04836ec95e115ea761b0a42390505b21010" translate="yes" xml:space="preserve">
          <source>This is a good approach if you write the class yourself. Let&amp;rsquo;s suppose you have a class like this:</source>
          <target state="translated">수업을 직접 작성하는 경우 좋은 방법입니다. 다음과 같은 클래스가 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="3fd22d2ebc9d1630fe3251b581127c5fa25ec2ef" translate="yes" xml:space="preserve">
          <source>This is a legacy API retained for backwards compatibility. When possible, you should use &lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt;&lt;code&gt;sni_callback&lt;/code&gt;&lt;/a&gt; instead. The given &lt;em&gt;server_name_callback&lt;/em&gt; is similar to &lt;em&gt;sni_callback&lt;/em&gt;, except that when the server hostname is an IDN-encoded internationalized domain name, the &lt;em&gt;server_name_callback&lt;/em&gt; receives a decoded U-label (&lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt;).</source>
          <target state="translated">이전 버전과의 호환성을 위해 유지되는 레거시 API입니다. 가능하면 &lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt; &lt;code&gt;sni_callback&lt;/code&gt; 을&lt;/a&gt; 대신 사용해야 합니다. 지정된 &lt;em&gt;server_name_callback&lt;/em&gt; 은 서버 호스트 이름이 IDN으로 인코딩 된 국제화 된 도메인 이름 인 경우 &lt;em&gt;server_name_callback&lt;/em&gt; 이 디코딩 된 U- 라벨 ( &lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt; )을 수신 한다는 점을 제외하고는 &lt;em&gt;sni_callback&lt;/em&gt; 과 유사합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="928b464bfb8b1d3da5461ee431b2aebe894ae69d" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class it always returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 의 클래스는 항상 반환 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="560364aea437ea98e565fe17e2a387401b67f453" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 클래스의 기능에 의해 대체된다 &lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0adf6390e428a55bd96ef1ee56b56b179f8271a9" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and the related &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 의 클래스의 기능은로 대체 &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; 및 관련 &lt;code&gt;make&lt;/code&gt; 및 &lt;code&gt;add&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="63b9d63fb4198d07361b2b2c61a42bbefcb8d10e" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 클래스의 기능은로 대체 &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27a2aa515d5423d4affd0779521e3b5fafa11340" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;code&gt;make_&lt;/code&gt; and &lt;code&gt;add_&lt;/code&gt; methods.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 클래스의 기능에 의해 대체된다 &lt;code&gt;make_&lt;/code&gt; 와 &lt;code&gt;add_&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="dfc629871289e0e65b56c5cbfe2f4ace662c8ec2" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;charset&lt;/em&gt; parameter of the &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; method.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 의 클래스는 그 기능으로 대체 &lt;em&gt;캐릭터 세트&lt;/em&gt; 의 파라미터 &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a6fae13c077a979f25a3a7f031bc51558b673c47" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;params&lt;/em&gt; property of the individual header objects returned by the header access methods.</source>
          <target state="translated">이것은 레거시 방법입니다. 온 &lt;code&gt;EmailMessage&lt;/code&gt; 의 클래스의 기능은로 대체 &lt;em&gt;PARAMS의&lt;/em&gt; 헤더 접근 방법에 의해 반환 된 객체 개별 헤더의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="a99c5dcc9ab288704491edaec84b894542f3acf7" translate="yes" xml:space="preserve">
          <source>This is a list of all the awaits made to the mock object in sequence (so the length of the list is the number of times it has been awaited). Before any awaits have been made it is an empty list.</source>
          <target state="translated">이것은 모의 객체에 대한 모든 대기 목록을 순서대로 나열한 것입니다 (따라서 목록의 길이는 대기 한 횟수입니다). 기다리기 전에 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1b902cf8994e14c83ab2966f3101a37cf2ebc6f1" translate="yes" xml:space="preserve">
          <source>This is a list of all the calls made to the mock object in sequence (so the length of the list is the number of times it has been called). Before any calls have been made it is an empty list. The &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; object can be used for conveniently constructing lists of calls to compare with &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 모의 객체에 대한 모든 호출의 순서대로 나열됩니다 (따라서 목록의 길이는 호출 된 횟수입니다). 전화를 걸기 전에 빈 목록입니다. &lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 객체 편리하게 비교 대상 통화 목록 구성에 사용할 수 있습니다 &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc997d8da827766226a9a1b8cbef46aa4082f5c7" translate="yes" xml:space="preserve">
          <source>This is a low-level interface to the functionality of &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt;, passing in explicitly the message, category, filename and line number, and optionally the module name and the registry (which should be the &lt;code&gt;__warningregistry__&lt;/code&gt; dictionary of the module). The module name defaults to the filename with &lt;code&gt;.py&lt;/code&gt; stripped; if no registry is passed, the warning is never suppressed. &lt;em&gt;message&lt;/em&gt; must be a string and &lt;em&gt;category&lt;/em&gt; a subclass of &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; or &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; instance, in which case &lt;em&gt;category&lt;/em&gt; will be ignored.</source>
          <target state="translated">이것은 &lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt; 기능에 대한 저수준 인터페이스로, 메시지, 카테고리, 파일 이름 및 줄 번호 및 선택적으로 모듈 이름과 레지스트리 ( 모듈 의 &lt;code&gt;__warningregistry__&lt;/code&gt; 사전 이어야 함 )를 전달합니다. 모듈 이름의 기본값은 &lt;code&gt;.py&lt;/code&gt; 가 제거 된 파일 이름입니다 . 레지스트리가 전달되지 않으면 경고가 표시되지 않습니다. &lt;em&gt;메시지&lt;/em&gt; 는 문자열 및 &lt;em&gt;범주&lt;/em&gt; 여야하며 &lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; 의 하위 클래스 이거나 &lt;em&gt;메시지&lt;/em&gt; 는 &lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; 인스턴스 일 수 있으며이 경우 &lt;em&gt;범주&lt;/em&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a073c4a90d19a2d3d955e9d04e18a32015661680" translate="yes" xml:space="preserve">
          <source>This is a measure of the power in an audio signal.</source>
          <target state="translated">이것은 오디오 신호의 전력을 측정 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4320eee4f82e48a26f22142603adb9abf481fd04" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported.</source>
          <target state="translated">원격 호스트와 프록시 모두에서 HTTP 인증을 돕는 믹스 인 클래스입니다. &lt;em&gt;password_mgr&lt;/em&gt; 이 지정된 경우 &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt; 과 호환 가능한 것이어야합니다 . 지원해야하는 인터페이스에 대한 정보는 &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr 오브젝트&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94093b21ff1d5ab0d668c6a7f43229fb8ec28b23" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. If &lt;em&gt;passwd_mgr&lt;/em&gt; also provides &lt;code&gt;is_authenticated&lt;/code&gt; and &lt;code&gt;update_authenticated&lt;/code&gt; methods (see &lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth Objects&lt;/a&gt;), then the handler will use the &lt;code&gt;is_authenticated&lt;/code&gt; result for a given URI to determine whether or not to send authentication credentials with the request. If &lt;code&gt;is_authenticated&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; for the URI, credentials are sent. If &lt;code&gt;is_authenticated&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, credentials are not sent, and then if a &lt;code&gt;401&lt;/code&gt; response is received the request is re-sent with the authentication credentials. If authentication succeeds, &lt;code&gt;update_authenticated&lt;/code&gt; is called to set &lt;code&gt;is_authenticated&lt;/code&gt;&lt;code&gt;True&lt;/code&gt; for the URI, so that subsequent requests to the URI or any of its super-URIs will automatically include the authentication credentials.</source>
          <target state="translated">원격 호스트와 프록시 모두에서 HTTP 인증을 돕는 믹스 인 클래스입니다. &lt;em&gt;password_mgr&lt;/em&gt; 이 지정된 경우 &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt; 과 호환 가능한 것이어야합니다 . 지원해야하는 인터페이스에 대한 정보는 &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr 오브젝트&lt;/a&gt; 섹션을 참조하십시오 . &lt;em&gt;passwd_mgr이 &lt;/em&gt; &lt;code&gt;is_authenticated&lt;/code&gt; 및 &lt;code&gt;update_authenticated&lt;/code&gt; 메소드 도 제공하는 경우 ( &lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth 오브젝트&lt;/a&gt; 참조 ) 핸들러는 지정된 URI에 대해 &lt;code&gt;is_authenticated&lt;/code&gt; 결과를 사용하여 요청과 함께 인증 신임 정보를 보낼지 여부를 판별합니다. &lt;code&gt;is_authenticated&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 를 반환하는 경우URI의 경우 자격 증명이 전송됩니다. 경우 &lt;code&gt;is_authenticated&lt;/code&gt; 가 있다 &lt;code&gt;False&lt;/code&gt; , 인증 정보가 전송되지 않고, 그 후 경우에 &lt;code&gt;401&lt;/code&gt; 응답이 요청을 수신 재전송 인증 자격 증명이다. 인증에 성공하면 URI에 대해 &lt;code&gt;is_authenticated&lt;/code&gt; &lt;code&gt;True&lt;/code&gt; 를 설정하기 위해 &lt;code&gt;update_authenticated&lt;/code&gt; 가 호출 되므로 URI 또는 ​​해당 수퍼 URI에 대한 후속 요청에 인증 자격 증명이 자동으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="996f13e7670dd2a8817147764b715d5a9ebb7999" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">이것은 모듈 전역 설정이며, 모듈 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; 에&lt;/a&gt; 의해 실행되는 모든 향후 doctest에 영향을줍니다 . &lt;code&gt;DocTestCase&lt;/code&gt; 의 &lt;code&gt;runTest()&lt;/code&gt; 메소드 는 &lt;code&gt;DocTestCase&lt;/code&gt; 인스턴스가 생성 될 때 테스트 케이스에 지정된 옵션 플래그를 확인합니다 . 보고 플래그가 지정되지 않은 경우 (일반적이고 예상되는 경우), &lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt; 의 단위 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 보고 플래그는 옵션 플래그에 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;비트 OR&lt;/a&gt; 로 OR 되고, 이렇게 보강 된 옵션 플래그 는 doctest를 실행하기 위해 작성된 &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt; 인스턴스 로 전달됩니다 . 때 어떤보고 플래그가 지정된 경우 &lt;code&gt;DocTestCase&lt;/code&gt; 의 인스턴스가, 건설되었다 &lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; 가&lt;/a&gt; 의&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 보고 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="33e3135f5132e1fcfd517ce657e31b052e3db982" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">이것은 모듈 전역 설정이며, &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 모듈에 의해 실행되는 모든 향후 doctest에 영향을줍니다 . &lt;code&gt;DocTestCase&lt;/code&gt; 의 &lt;code&gt;runTest()&lt;/code&gt; 메서드 는 &lt;code&gt;DocTestCase&lt;/code&gt; 인스턴스가 생성 될 때 테스트 케이스에 지정된 옵션 플래그를 확인합니다 . 보고 플래그가 지정되지 않은 경우 (일반적이고 예상되는 경우), &lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 보고 플래그는 옵션 플래그에 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;비트 단위 OR&lt;/a&gt; 로 연결되고 이렇게 증가 된 옵션 플래그 는 doctest를 실행하기 위해 생성 된 &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt; 인스턴스 로 전달됩니다 . &lt;code&gt;DocTestCase&lt;/code&gt; 인스턴스가 생성 될 때보 고 플래그가 지정된 경우 &lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt; 의&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 보고 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bd579c90746112b0e9a715bf70500cdbf4cb8b4c" translate="yes" xml:space="preserve">
          <source>This is a nonstandard convenience method for executing multiple SQL statements at once. It issues a &lt;code&gt;COMMIT&lt;/code&gt; statement first, then executes the SQL script it gets as a parameter.</source>
          <target state="translated">이는 여러 SQL 문을 한 번에 실행하기위한 비표준 편의 방법입니다. 먼저 &lt;code&gt;COMMIT&lt;/code&gt; 문을 발행 한 다음 매개 변수로 가져 오는 SQL 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f25f408676466832f9ff8f647196311789c1a7ad" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">이것은 비표준 단축키로 &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 커서 객체를 만들고 지정된 &lt;em&gt;매개 변수를 사용&lt;/em&gt; 하여 커서의 &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 다음 커서 를 반환합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f026b3fde6844ad7ddf3c6cb9c30cb2c9296424" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">이것은 &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 커서 객체를 만들고 지정된 &lt;em&gt;매개 변수를 사용&lt;/em&gt; 하여 커서의 &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 다음 커서 를 반환 하는 비표준 바로 가기입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f07d18339dec09d14b91f6da8c999bb831d41d7" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt;&lt;code&gt;executescript()&lt;/code&gt;&lt;/a&gt; method with the given &lt;em&gt;sql_script&lt;/em&gt;, and returns the cursor.</source>
          <target state="translated">이것은 &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 커서 객체를 만들고 지정된 &lt;em&gt;sql_script로&lt;/em&gt; 커서의 &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt; &lt;code&gt;executescript()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 다음 커서 를 반환 하는 비표준 바로 가기입니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ac73b34e4853d2c7555adf61229da0b29863e37" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must create an attribute.</source>
          <target state="translated">이것은 &lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; &lt;/a&gt; 의 flags 인자에 가능한 값입니다 . 조작이 속성을 작성해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96540e48fc82860097be205c93b6abd3606e07c1" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must replace an existing attribute.</source>
          <target state="translated">이것은 &lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; &lt;/a&gt; 의 flags 인자에 가능한 값입니다 . 작업이 기존 속성을 대체해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f6e80deb781542d74711015086c8206e50356e00" translate="yes" xml:space="preserve">
          <source>This is a purely lexical operation, hence the following behaviour:</source>
          <target state="translated">이것은 순전히 어휘 연산이므로 다음과 같은 동작입니다.</target>
        </trans-unit>
        <trans-unit id="e43ca65c0fdbbd61accd8b6277bbb2c59aba9401" translate="yes" xml:space="preserve">
          <source>This is a read-only &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;attribute&lt;/a&gt; that returns the value of &lt;code&gt;key&lt;/code&gt; passed to the constructor, which should be a lookup key in the IANA time zone database (e.g. &lt;code&gt;America/New_York&lt;/code&gt;, &lt;code&gt;Europe/Paris&lt;/code&gt; or &lt;code&gt;Asia/Tokyo&lt;/code&gt;).</source>
          <target state="translated">생성자에 전달 된 &lt;code&gt;key&lt;/code&gt; 값을 반환 하는 읽기 전용 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;속성&lt;/a&gt; 으로, IANA 표준 시간대 데이터베이스 (예 : &lt;code&gt;America/New_York&lt;/code&gt; , &lt;code&gt;Europe/Paris&lt;/code&gt; 또는 &lt;code&gt;Asia/Tokyo&lt;/code&gt; ) 의 조회 키 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="79b9ada7f8d4fc3182b2d3f64af63694e2a47bf2" translate="yes" xml:space="preserve">
          <source>This is a relative of &lt;a href=&quot;#setattr&quot;&gt;&lt;code&gt;setattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object and a string. The string must be the name of one of the object&amp;rsquo;s attributes. The function deletes the named attribute, provided the object allows it. For example, &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; is equivalent to &lt;code&gt;del x.foobar&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#setattr&quot;&gt; &lt;code&gt;setattr()&lt;/code&gt; &lt;/a&gt; 의 친척입니다 . 인수는 객체와 문자열입니다. 문자열은 객체 속성 중 하나의 이름이어야합니다. 객체가 허용하는 경우 함수는 명명 된 속성을 삭제합니다. 예를 들어 &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; 는 &lt;code&gt;del x.foobar&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9715e416b1df859f446f99f56d2aa08145ae5cce" translate="yes" xml:space="preserve">
          <source>This is a relatively low level API that takes care of the details of correctly unwinding the stack of exit callbacks. It provides a suitable foundation for higher level context managers that manipulate the exit stack in application specific ways.</source>
          <target state="translated">엑시트 콜백 스택을 올바르게 해제하는 세부 정보를 처리하는 비교적 낮은 수준의 API입니다. 애플리케이션 특정 방식으로 엑시트 스택을 조작하는 상위 레벨 컨텍스트 관리자에게 적합한 기반을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2dbf3692d221f94721c68226699f011fa8c60193" translate="yes" xml:space="preserve">
          <source>This is a short tutorial for using &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;ET&lt;/code&gt; in short). The goal is to demonstrate some of the building blocks and basic concepts of the module.</source>
          <target state="translated">이것은 &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;ET&lt;/code&gt; ) 를 사용하기위한 간단한 자습서입니다 . 목표는 모듈의 일부 빌딩 블록과 기본 개념을 설명하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fa365b626b798e07b34b9f21c141cb183f10539a" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is false.</source>
          <target state="translated">이것은 단락 연산자이므로 첫 번째 인수가 false 인 경우 두 번째 인수 만 평가합니다.</target>
        </trans-unit>
        <trans-unit id="dc5e590500f62fbd4dc8ebdd79a793c1c71615c0" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is true.</source>
          <target state="translated">이것은 단락 연산자이므로 첫 번째 인수 만 참이면 두 번째 인수 만 평가합니다.</target>
        </trans-unit>
        <trans-unit id="9f41bbe9d27e4a677b830d37db3fb2b9e6f876eb" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(*sys.exc_info(), limit, file,
chain)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;print_exception(*sys.exc_info(), limit, file, chain)&lt;/code&gt; 의 약어입니다 .</target>
        </trans-unit>
        <trans-unit id="a9296be127dc4a3b4f48abe6df80c8c1d08c7d67" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(sys.last_type, sys.last_value,
sys.last_traceback, limit, file, chain)&lt;/code&gt;. In general it will work only after an exception has reached an interactive prompt (see &lt;a href=&quot;sys#sys.last_type&quot;&gt;&lt;code&gt;sys.last_type&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;print_exception(sys.last_type, sys.last_value, sys.last_traceback, limit, file, chain)&lt;/code&gt; 의 약어입니다 . 일반적으로 예외가 대화 형 프롬프트에 도달 한 후에 만 ​​작동합니다 ( &lt;a href=&quot;sys#sys.last_type&quot;&gt; &lt;code&gt;sys.last_type&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4e593684971c7ffd714930ffa9422d5c50b3b1cf" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;. All flags are cleared. No traps are enabled (so that exceptions are not raised during computations).</source>
          <target state="translated">이것은 일반 십진 산술 사양에 의해 정의 된 표준 컨텍스트입니다. 정밀도는 9로 설정됩니다. 반올림은 &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt; 으로 설정됩니다 . 모든 플래그가 지워집니다. 트랩이 활성화되어 있지 않으므로 계산 중에 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2da625cd53289b672f7014ba22ac20aee7685a56" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;. All flags are cleared. All traps are enabled (treated as exceptions) except &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 일반 십진 산술 사양에 의해 정의 된 표준 컨텍스트입니다. 정밀도는 9로 설정됩니다. 반올림이 &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt; 으로 설정되었습니다 . 모든 플래그가 지워집니다. &lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; 을&lt;/a&gt; 제외한 모든 트랩이 활성화됩니다 (예외로 처리됨) .</target>
        </trans-unit>
        <trans-unit id="a7930d7442fb88df54eb093e8c8ca59852bfaac7" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are iterables of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">이것은 Unix &lt;code&gt;select()&lt;/code&gt; 시스템 호출에 대한 간단한 인터페이스 입니다. 처음 세 개의 인수는 '대기 가능한 객체'의 이터 러블입니다. 파일 설명자를 나타내는 정수 또는 이러한 정수를 반환하는 &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt; 라는 매개 변수없는 메서드가있는 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="cd336ee085cbeef7c437546cd6c8582a726fd7e2" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are sequences of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">이것은 Unix &lt;code&gt;select()&lt;/code&gt; 시스템 호출에 대한 간단한 인터페이스 입니다. 처음 세 개의 인수는 '대기 가능한 객체'의 시퀀스입니다. 파일 디스크립터를 나타내는 정수 또는 &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt; 라는 매개 변수가없는 메소드를 가진 객체는 이러한 정수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a9653a53929c37a27ca2d3608cb98481b962cc2f" translate="yes" xml:space="preserve">
          <source>This is a string of the form &lt;code&gt;widthxheight&lt;/code&gt;, where width and height are measured in pixels for most widgets (in characters for widgets displaying text). For example: &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;widthxheight&lt;/code&gt; 형식의 문자열이며 너비와 높이는 대부분의 위젯에 대해 픽셀 단위로 측정됩니다 (텍스트를 표시하는 위젯의 문자). 예를 들어 : &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2d23b43b3d9f7e926c09069e36030aeb6308947" translate="yes" xml:space="preserve">
          <source>This is a string with four space-delimited elements, each of which is a legal distance (see above). For example: &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; and &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; and &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; are all legal regions.</source>
          <target state="translated">이것은 공백으로 구분 된 4 개의 요소가있는 문자열이며 각각은 법적인 거리입니다 (위 참조). 예 : &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; 는 모두 합법적 인 지역입니다.</target>
        </trans-unit>
        <trans-unit id="505a14132b19d890d214ba81ac33505c98cfb289" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects over an SSL encrypted socket (to use this class you need a socket module that was compiled with SSL support). If &lt;em&gt;host&lt;/em&gt; is not specified, &lt;code&gt;''&lt;/code&gt; (the local host) is used. If &lt;em&gt;port&lt;/em&gt; is omitted, the standard IMAP4-over-SSL port (993) is used. &lt;em&gt;ssl_context&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">이것은 SSL 암호화 소켓을 통해 연결 되는 &lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt; 에서 파생 된 서브 클래스입니다 (이 클래스를 사용하려면 SSL 지원으로 컴파일 된 소켓 모듈이 필요합니다). 경우 &lt;em&gt;호스트가&lt;/em&gt; 지정되지 않은, &lt;code&gt;''&lt;/code&gt; (로컬 호스트)가 사용됩니다. 경우 &lt;em&gt;포트가&lt;/em&gt; 생략 된 표준 IMAP4 - 이상 - SSL 포트 (993)가 사용됩니다. &lt;em&gt;ssl_context&lt;/em&gt; 는 SSL 구성 옵션, 인증서 및 개인 키를 단일 (잠재적으로 오래 지속되는) 구조로 묶을 수 있는 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt; 객체입니다. 모범 사례는 &lt;a href=&quot;ssl#ssl-security&quot;&gt;보안 고려 사항&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="764f94ad39faf8459a1f96a15f7dd2ebd680f57d" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects to the &lt;code&gt;stdin/stdout&lt;/code&gt; file descriptors created by passing &lt;em&gt;command&lt;/em&gt; to &lt;code&gt;subprocess.Popen()&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;subprocess.Popen()&lt;/code&gt; &lt;em&gt;명령&lt;/em&gt; 을 전달 하여 생성 된 &lt;code&gt;stdin/stdout&lt;/code&gt; 파일 디스크립터에 연결하는 &lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt; 에서 파생 된 서브 클래스 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7dccb247bf4ce42730d244a4bcedb9e3a1d6f4a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; that connects to the server over an SSL encrypted socket. If &lt;em&gt;port&lt;/em&gt; is not specified, 995, the standard POP3-over-SSL port is used. &lt;em&gt;timeout&lt;/em&gt; works as in the &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; constructor. &lt;em&gt;context&lt;/em&gt; is an optional &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">SSL 암호화 소켓을 통해 서버에 연결하는 &lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 . 경우 &lt;em&gt;포트가&lt;/em&gt; 지정되지 않은, 995, 표준 POP3 - 이상 - SSL 포트가 사용됩니다. &lt;em&gt;제한 시간&lt;/em&gt; 은 &lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 생성자 와 같이 작동합니다 . &lt;em&gt;context&lt;/em&gt; 는 선택적 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt; 객체로 SSL 구성 옵션, 인증서 및 개인 키를 단일 (잠재적으로 오래 지속되는) 구조로 번들링 할 수 있습니다. 모범 사례는 &lt;a href=&quot;ssl#ssl-security&quot;&gt;보안 고려 사항&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="ef9776734c2d67729c4aaf01a2cd2a9bbb54ab5e" translate="yes" xml:space="preserve">
          <source>This is a subclassable type rather than a factory function.</source>
          <target state="translated">이것은 팩토리 함수가 아닌 서브 클래스 가능 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9765ce9944ccb97a9358dad6c89e4504fdbd8f6e" translate="yes" xml:space="preserve">
          <source>This is a symbolic constant used for different values returned by &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt; 반환 한 다른 값에 사용되는 기호 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="cc8d2a984c67cda6fb3471c60192bee35875336f" translate="yes" xml:space="preserve">
          <source>This is a useful example for subclassing Enum to add or change other behaviors as well as disallowing aliases. If the only desired change is disallowing aliases, the &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt; decorator can be used instead.</source>
          <target state="translated">이것은 Enum을 서브 클래 싱하여 다른 동작을 추가하거나 변경하고 별칭을 허용하지 않는 유용한 예입니다. 원하는 변경 사항이 별칭을 허용하지 않는 경우 &lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt; 데코레이터를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f095373c041f749d13f3b152d79425bbe538a11" translate="yes" xml:space="preserve">
          <source>This is a working &amp;ldquo;Hello World&amp;rdquo; WSGI application:</source>
          <target state="translated">작동중인 &quot;Hello World&quot;WSGI 응용 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="ed30072f4605977c71fd7205e1fd018e0d972eea" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;로더 &lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; &lt;/a&gt; API 의 랩퍼입니다 . &lt;em&gt;패키지&lt;/em&gt; 인수는 표준 모듈 형식 (에, 패키지의 이름이어야합니다 &lt;code&gt;foo.bar&lt;/code&gt; ). &lt;em&gt;자원&lt;/em&gt; 인수하여, 상대의 이름 형식이어야 &lt;code&gt;/&lt;/code&gt; 를 경로 분리한다. 부모 디렉토리 이름 &lt;code&gt;..&lt;/code&gt; 은 허용되지 않으며 루트 이름도 아닙니다 ( &lt;code&gt;/&lt;/code&gt; 로 시작 ).</target>
        </trans-unit>
        <trans-unit id="892ee36af8eae80320a2354e62c1ef8a2a921aae" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">이것은 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;로더 &lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; &lt;/a&gt; API 의 래퍼입니다 . &lt;em&gt;패키지&lt;/em&gt; 인수는 표준 모듈 형식 (에, 패키지의 이름이어야합니다 &lt;code&gt;foo.bar&lt;/code&gt; ). &lt;em&gt;자원&lt;/em&gt; 인수하여, 상대의 이름 형식이어야 &lt;code&gt;/&lt;/code&gt; 를 경로 분리한다. 상위 디렉토리 이름 &lt;code&gt;..&lt;/code&gt; 은 허용되지 않으며 루트 이름 ( &lt;code&gt;/&lt;/code&gt; 로 시작)도 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fbe8df11a8943e8d9f9b85f47cfd605f5644d080" translate="yes" xml:space="preserve">
          <source>This is almost always the &lt;code&gt;set()&lt;/code&gt; method of some scrollbar widget, but can be any widget method that takes a single argument.</source>
          <target state="translated">거의 항상 일부 스크롤 막대 위젯 의 &lt;code&gt;set()&lt;/code&gt; 메소드이지만 단일 인수를 사용하는 모든 위젯 메소드 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2555e7bf342a503beae512a726ce26265cc5be14" translate="yes" xml:space="preserve">
          <source>This is also the value returned by &lt;code&gt;str(addr)&lt;/code&gt; for IPv6 addresses.</source>
          <target state="translated">이는 IPv6 주소에 대해 &lt;code&gt;str(addr)&lt;/code&gt; 리턴 한 값이기도 합니다.</target>
        </trans-unit>
        <trans-unit id="9ef1b8548cedff987ad30e8dfdd3712f04390089" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;-separated string containing the time zone search path to use. It must consist of only absolute rather than relative paths. Relative components specified in &lt;code&gt;PYTHONTZPATH&lt;/code&gt; will not be used, but otherwise the behavior when a relative path is specified is implementation-defined; CPython will raise &lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt;&lt;code&gt;InvalidTZPathWarning&lt;/code&gt;&lt;/a&gt;, but other implementations are free to silently ignore the erroneous component or raise an exception.</source>
          <target state="translated">사용할 시간대 검색 경로가 포함 된 &lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; 로 구분 된&lt;/a&gt; 문자열입니다. 상대 경로가 아닌 절대 경로로만 구성되어야합니다. &lt;code&gt;PYTHONTZPATH&lt;/code&gt; 에 지정된 상대 구성 요소 는 사용되지 않지만, 그렇지 않으면 상대 경로가 지정 될 때 동작이 구현에서 정의됩니다. CPython은 &lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt; &lt;code&gt;InvalidTZPathWarning&lt;/code&gt; &lt;/a&gt; 을 발생 시키지만 다른 구현은 오류가있는 구성 요소를 조용히 무시하거나 예외를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d5496a2a6eb94af65673cb0d50ad6bafe0ea28b" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;IMAP4rev1&lt;/code&gt; extension command.</source>
          <target state="translated">이것은 &lt;code&gt;IMAP4rev1&lt;/code&gt; 확장 명령입니다.</target>
        </trans-unit>
        <trans-unit id="7b34ee508bd103c5e0b8626cf2d804764b1677d4" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for running WSGI applications. Each instance will handle a single HTTP request, although in principle you could create a subclass that was reusable for multiple requests.</source>
          <target state="translated">이것은 WSGI 응용 프로그램을 실행하기위한 추상 기본 클래스입니다. 각 인스턴스는 단일 HTTP 요청을 처리하지만 원칙적으로 여러 요청에 재사용 가능한 서브 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7592b3f4af1c675ae0461bbd0cd882d434a1f23" translate="yes" xml:space="preserve">
          <source>This is an abstract base class, meaning that this class should not be instantiated directly. Define a subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; to capture information about a particular time zone.</source>
          <target state="translated">이것은 추상 기본 클래스이므로이 클래스를 직접 인스턴스화해서는 안됩니다. 특정 시간대에 대한 정보를 캡처하려면 &lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; 의 서브 클래스를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fe0477da04d468c9bd5e5b663db76e9e220f768" translate="yes" xml:space="preserve">
          <source>This is an advanced function that is not needed in everyday Python programming, unlike &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt; 과 달리 일상적인 Python 프로그래밍에는 필요하지 않은 고급 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="5d2b4b1396ba18b3d152dc46f2f7110e19305e7b" translate="yes" xml:space="preserve">
          <source>This is an alias for the builtin &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">이것은 내장 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 함수 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="2571e080d51d3b25b3470f01c190104b66dd3c80" translate="yes" xml:space="preserve">
          <source>This is an extension notation (a &lt;code&gt;'?'&lt;/code&gt; following a &lt;code&gt;'('&lt;/code&gt; is not meaningful otherwise). The first character after the &lt;code&gt;'?'&lt;/code&gt; determines what the meaning and further syntax of the construct is. Extensions usually do not create a new group; &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; is the only exception to this rule. Following are the currently supported extensions.</source>
          <target state="translated">이 확장 표기법 (인 &lt;code&gt;'?'&lt;/code&gt; 다음은 &lt;code&gt;'('&lt;/code&gt; ) 그렇지 않으면 이후 첫 번째 문자 의미가 없다. &lt;code&gt;'?'&lt;/code&gt; 구조물의 의미와 더 구문이 무엇인지를 결정 확장은 일반적으로 새로운 그룹을 생성하지 않습니다.; &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; 은이 규칙에 대한 유일한 예외입니다. 다음은 현재 지원되는 확장명입니다.</target>
        </trans-unit>
        <trans-unit id="8f2d1a3f7686213bcb3e68f37c26e08de32ed2cd" translate="yes" xml:space="preserve">
          <source>This is an implementation detail of the warnings framework; do not modify this value. Refer to the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module for more information on the warnings framework.</source>
          <target state="translated">이것은 경고 프레임 워크의 구현 세부 사항입니다. 이 값을 수정하지 마십시오. 경고 프레임 워크에 대한 자세한 정보 는 &lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8c538fda17e935aeeea92bf67a676d3e1bc51efb" translate="yes" xml:space="preserve">
          <source>This is an implementation of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). This is a dictionary-like object which represents the element attributes in a &lt;code&gt;startElement()&lt;/code&gt; call. In addition to the most useful dictionary operations, it supports a number of other methods as described by the interface. Objects of this class should be instantiated by readers; &lt;em&gt;attrs&lt;/em&gt; must be a dictionary-like object containing a mapping from attribute names to attribute values.</source>
          <target state="translated">이것은 &lt;code&gt;Attributes&lt;/code&gt; 인터페이스 의 구현입니다 (섹션 &lt;a href=&quot;#attributes-objects&quot;&gt;속성 인터페이스&lt;/a&gt; 참조 ). 이것은 &lt;code&gt;startElement()&lt;/code&gt; 호출 에서 요소 속성을 나타내는 사전과 유사한 객체입니다 . 가장 유용한 사전 작업 외에도 인터페이스에서 설명하는 여러 가지 다른 방법을 지원합니다. 이 클래스의 객체는 독자가 인스턴스화해야합니다. &lt;em&gt;attrs&lt;/em&gt; 는 속성 이름에서 속성 값으로의 맵핑을 포함하는 사전과 유사한 오브젝트 여야합니다.</target>
        </trans-unit>
        <trans-unit id="00330212cc541703cd5ff8aa5689877b2be61306" translate="yes" xml:space="preserve">
          <source>This is an instance of &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; which is used to provide the &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function described below. Changing the attributes of this object will affect the size limits used by &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; and the Python debugger.</source>
          <target state="translated">아래에 설명 된 &lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 함수 를 제공하는 데 사용되는 &lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 . 이 객체의 속성을 변경하면 &lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 및 Python 디버거에서 사용하는 크기 제한에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="bc9d7efe1e111f4a3038022efcda5621f6b2ed82" translate="yes" xml:space="preserve">
          <source>This is an object that has the same methods as the entire module, but uses the Unicode database version 3.2 instead, for applications that require this specific version of the Unicode database (such as IDNA).</source>
          <target state="translated">이는 전체 모듈과 동일한 방법을 사용하지만이 특정 버전의 유니 코드 데이터베이스 (예 : IDNA)가 필요한 응용 프로그램에는 대신 유니 코드 데이터베이스 버전 3.2를 사용하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="11c3ea74a96f83696c34a897e968eb0226a1d9a9" translate="yes" xml:space="preserve">
          <source>This is another standard signal handler, which will simply ignore the given signal.</source>
          <target state="translated">이것은 주어진 표준 신호를 무시하는 또 다른 표준 신호 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="28def8bed8d2bdaa1f2c7697b00c97beb3107dd0" translate="yes" xml:space="preserve">
          <source>This is any Python function that takes no arguments. For example:</source>
          <target state="translated">이것은 인수를 취하지 않는 파이썬 함수입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ffe483266124d79a1a3157bbb4f1955342c8c1af" translate="yes" xml:space="preserve">
          <source>This is based on a proposed DOM Level 3 API which is still in the &amp;ldquo;working draft&amp;rdquo; stage, but this particular interface appears uncontroversial. Changes from the W3C will not necessarily affect this method in the Python DOM interface (though any new W3C API for this would also be supported).</source>
          <target state="translated">이것은 여전히&amp;ldquo;작업 초안&amp;rdquo;단계에있는 제안 된 DOM 레벨 3 API를 기반으로하지만이 특정 인터페이스는 논란의 여지가없는 것으로 보입니다. W3C의 변경 사항이 Python DOM 인터페이스에서이 메소드에 반드시 영향을 미치는 것은 아닙니다 (이에 대한 새 W3C API도 지원됨).</target>
        </trans-unit>
        <trans-unit id="81372bd6ddf513a4aff4ec4908ff400e30f799f8" translate="yes" xml:space="preserve">
          <source>This is because the previous execution has left the socket in a &lt;code&gt;TIME_WAIT&lt;/code&gt; state, and can&amp;rsquo;t be immediately reused.</source>
          <target state="translated">이는 이전 실행에서 소켓을 &lt;code&gt;TIME_WAIT&lt;/code&gt; 상태로 두었 기 때문에 즉시 재사용 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="4147f1a73ee64438aeb3d78ac0d958d8e52248aa" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">내장 &lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt; 함수 에 전달한 결과로 볼 때 실제로 의미가 있기 때문에 &lt;code&gt;hexversion&lt;/code&gt; 이라고 합니다. &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;라는 튜플 &lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; 은&lt;/a&gt; 동일한 내용의 더욱 인간 친화적 인 인코딩을 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="d8cbab9ac810e4c25ca1ac03e26845a188132593" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">이것은 내장 &lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt; 함수 에 전달한 결과로 볼 때만 의미가 있기 때문에 &lt;code&gt;hexversion&lt;/code&gt; 이라고 합니다. &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;라는 튜플 &lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; 은&lt;/a&gt; 동일한 내용의 더욱 인간 친화적 인 인코딩을 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="7247eb7669c97fb110d163145704fe837c46400f" translate="yes" xml:space="preserve">
          <source>This is called automatically when the connection is garbage collected.</source>
          <target state="translated">연결이 가비지 수집 될 때 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5d3174cacbda7afe783d9c63633b1c116ccef9ac" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">반복자가 소진되거나 가비지 수집되거나 반복 중에 오류가 발생하면 자동으로 호출됩니다. 그러나 명시 적으로 호출하거나 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="59ac3e4b7b297c325ae39dbbc755025b5c7cea78" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">이터레이터가 고갈되거나 가비지 수집되거나 반복 중에 오류가 발생하면 자동으로 호출됩니다. 그러나 명시 적으로 호출하거나 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5999a3dc3b574752f1df7627f793ed276ddc5431" translate="yes" xml:space="preserve">
          <source>This is called from the default &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;datetime.astimezone()&lt;/code&gt;&lt;/a&gt; implementation. When called from that, &lt;code&gt;dt.tzinfo&lt;/code&gt; is &lt;em&gt;self&lt;/em&gt;, and &lt;em&gt;dt&lt;/em&gt;&amp;rsquo;s date and time data are to be viewed as expressing a UTC time. The purpose of &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; is to adjust the date and time data, returning an equivalent datetime in &lt;em&gt;self&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="translated">이것은 기본 &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;datetime.astimezone()&lt;/code&gt; &lt;/a&gt; 구현 에서 호출됩니다 . 그에서 호출 할 때, &lt;code&gt;dt.tzinfo&lt;/code&gt; 는 이다 &lt;em&gt;자체&lt;/em&gt; , 그리고 &lt;em&gt;DT&lt;/em&gt; 의 날짜 및 시간 데이터는 UTC 시간을 표현으로 볼 수 있습니다. &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt; 의 목적은 날짜 및 시간 데이터를 조정하여 해당 날짜 시간을 &lt;em&gt;자체&lt;/em&gt; 의 현지 시간으로 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f45a7baf47bfb2b113381808c519faae7853a34e" translate="yes" xml:space="preserve">
          <source>This is called in the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop. This method can be overridden by subclasses or mixin classes to perform actions specific to a given service, such as cleanup actions.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt; &lt;code&gt;serve_forever()&lt;/code&gt; &lt;/a&gt; 루프 에서 호출됩니다 . 이 메소드는 서브 클래스 또는 mixin 클래스로 대체되어 정리 조치와 같이 지정된 서비스에 특정한 조치를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5fc5d96310a3ced5b6cfd3ab67361662a6f8278" translate="yes" xml:space="preserve">
          <source>This is called when an exception occurs and no exception handler is set. This can be called by a custom exception handler that wants to defer to the default handler behavior.</source>
          <target state="translated">예외가 발생하고 예외 핸들러가 설정되지 않은 경우에 호출됩니다. 이것은 기본 핸들러 동작을 지연시키려는 사용자 정의 예외 핸들러에 의해 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0faadeef90e30191e68184d130440c2fd9562e5a" translate="yes" xml:space="preserve">
          <source>This is designed to be used with &lt;code&gt;@unittest.skipIf()&lt;/code&gt; to annotate tests that need to use an &lt;code&gt;assert_python*()&lt;/code&gt; function to launch an isolated mode (&lt;code&gt;-I&lt;/code&gt;) or no environment mode (&lt;code&gt;-E&lt;/code&gt;) sub-interpreter process.</source>
          <target state="translated">&lt;code&gt;@unittest.skipIf()&lt;/code&gt; 와 함께 &lt;code&gt;assert_python*()&lt;/code&gt; 함수를 사용하여 격리 모드 ( &lt;code&gt;-I&lt;/code&gt; ) 또는 환경 모드 없음 ( &lt;code&gt;-E&lt;/code&gt; ) 하위 인터프리터 프로세스 를 시작 해야하는 테스트에 주석을 달도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cd6da2b2fb65c65ba6fb4c1334c748833afa5902" translate="yes" xml:space="preserve">
          <source>This is due to the fact that &amp;ldquo;0&amp;rdquo; and &amp;ldquo;2&amp;rdquo; are in the same level in the graph (they would have been returned in the same call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt;) and the order between them is determined by the order of insertion.</source>
          <target state="translated">이는 &quot;0&quot;과 &quot;2&quot;가 그래프에서 동일한 수준에 있고 ( &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt; 에 대한 동일한 호출에서 반환되었을 것임) 그 사이의 순서는 삽입 순서에 따라 결정되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="bfa80b779a073dbddfb027c4551bacdf6e96317a" translate="yes" xml:space="preserve">
          <source>This is easy to use but not much good if you are expecting megabytes to be uploaded &amp;mdash; in that case, use the &lt;code&gt;FieldStorage&lt;/code&gt; class instead which is much more flexible.</source>
          <target state="translated">메가 바이트가 업로드 될 것으로 예상하는 경우 사용하기 &lt;code&gt;FieldStorage&lt;/code&gt; 는 않습니다.이 경우 훨씬 유연한 FieldStorage 클래스를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a46664cff1edb9374b98b2675a73183f1e05af0" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been awaited), or the arguments that the mock was last awaited with. Functions the same as &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 중 하나입니다 &lt;code&gt;None&lt;/code&gt; (모의가 기다려온되지 않은 경우), 또는 모의가 마지막으로 기다렸던 것을 인수. &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt; 와 동일하게 기능합니다 .</target>
        </trans-unit>
        <trans-unit id="8ee7c7bddc5bfce27b7479c43c2e7d01522714be" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been called), or the arguments that the mock was last called with. This will be in the form of a tuple: the first member, which can also be accessed through the &lt;code&gt;args&lt;/code&gt; property, is any ordered arguments the mock was called with (or an empty tuple) and the second member, which can also be accessed through the &lt;code&gt;kwargs&lt;/code&gt; property, is any keyword arguments (or an empty dictionary).</source>
          <target state="translated">이 중 하나입니다 &lt;code&gt;None&lt;/code&gt; (모의가 호출되지 않은 경우), 또는 모의가 마지막으로 호출 된 것을 인수. 이것은 튜플의 형태입니다 : &lt;code&gt;args&lt;/code&gt; 속성을 통해 액세스 할 수있는 첫 번째 멤버 는 mock이 호출 한 (또는 빈 튜플) 순서가 지정된 인수이며 두 번째 멤버는이를 통해 액세스 할 수 있습니다. &lt;code&gt;kwargs&lt;/code&gt; 로의 속성은 키워드 인수 (또는 빈 사전)이다.</target>
        </trans-unit>
        <trans-unit id="01e02c69372dc79d00a36b7f2f02229c79989833" translate="yes" xml:space="preserve">
          <source>This is either the string &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt; depending on the encoding used, or it is a function, in which case you should call the function with a single argument, the Message object being encoded. The function should then set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header itself to whatever is appropriate.</source>
          <target state="translated">이것은 사용 된 인코딩에 따라 &lt;code&gt;quoted-printable&lt;/code&gt; 거나 인쇄 할 수있는 문자열 이거나 &lt;code&gt;base64&lt;/code&gt; 이거나 함수입니다.이 경우 인코딩되는 Message 객체 인 단일 인수로 함수를 호출해야합니다. 그러면 함수는 &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; 헤더 자체를 적절한 것으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c6bb8e0c84066f126935cee989b98ba5d876c60f" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; followed by &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt;, except that it can be implemented more efficiently.</source>
          <target state="translated">이는 보다 효율적으로 구현할 수 있다는 점을 제외하고 &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; 뒤에 &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="3319b448c1c6cbefa269d764020c1e9cc96a2779" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa06639c9dada4d0f5953fda0a5c6997357afb40" translate="yes" xml:space="preserve">
          <source>This is equivalent to checking &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt; 확인과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f60b0b66a93a2faa96a56fea405d2e1c3db7f538" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">이는 Python을 시작하기 전에 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt; 환경 변수 를 정의하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2d56fbd1cf97be24fb774416157697042d6e0ca4" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">이것은 Python을 시작하기 전에 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt; 환경 변수 를 정의하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="dae21f956e04a558bc35743abc58b55502e439ff" translate="yes" xml:space="preserve">
          <source>This is equivalent to iterating over &lt;em&gt;tests&lt;/em&gt;, calling &lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt;&lt;code&gt;addTest()&lt;/code&gt;&lt;/a&gt; for each element.</source>
          <target state="translated">이것은 각 요소에 대해 &lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt; &lt;code&gt;addTest()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 &lt;em&gt;tests&lt;/em&gt; 반복 &lt;em&gt;테스트&lt;/em&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">이것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="46af01db1ebbcf9280ef7a5d2036bb35ee1e92bc" translate="yes" xml:space="preserve">
          <source>This is essentially a wrapper around the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; locking calls. &lt;em&gt;fd&lt;/em&gt; is the file descriptor (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well) of the file to lock or unlock, and &lt;em&gt;cmd&lt;/em&gt; is one of the following values:</source>
          <target state="translated">이것은 본질적으로 &lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt; 잠금 호출을 둘러싼 래퍼 입니다. &lt;em&gt;fd&lt;/em&gt; 는 잠금 또는 잠금 해제 할 파일의 파일 디스크립터 ( &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt; 메소드를 제공하는 파일 오브젝트 도 허용됨)이며 &lt;em&gt;cmd&lt;/em&gt; 는 다음 값 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="1262e4d29623b67080bb0c2cf94682b57cb12bfd" translate="yes" xml:space="preserve">
          <source>This is exact and cannot overflow.</source>
          <target state="translated">이것은 정확하며 넘칠 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc74c5855f1c0d1c6999828120e71dcfa9e0e308" translate="yes" xml:space="preserve">
          <source>This is exact but may overflow.</source>
          <target state="translated">이것은 정확하지만 넘칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6111a25eb387e271fc95a7e8286968c73da0202" translate="yes" xml:space="preserve">
          <source>This is exact, and cannot overflow. timedelta.seconds and timedelta.microseconds are 0, and date2 + timedelta == date1 after.</source>
          <target state="translated">이것은 정확하며 넘칠 수 없습니다. timedelta.seconds 및 timedelta.microseconds는 0이며 date2 + timedelta == date1 이후입니다.</target>
        </trans-unit>
        <trans-unit id="dcf5c506f0484cee378d4114bf8d9c3d093323cc" translate="yes" xml:space="preserve">
          <source>This is expensive to compute if &lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt;&lt;code&gt;get_matching_blocks()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt;&lt;code&gt;get_opcodes()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t already been called, in which case you may want to try &lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt;&lt;code&gt;quick_ratio()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt;&lt;code&gt;real_quick_ratio()&lt;/code&gt;&lt;/a&gt; first to get an upper bound.</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt; &lt;code&gt;get_matching_blocks()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt; &lt;code&gt;get_opcodes()&lt;/code&gt; &lt;/a&gt; 가 아직 호출되지 않은 경우 계산하는 데 비용이 많이 들며 ,이 경우 먼저 상한을 얻기 위해 &lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt; &lt;code&gt;quick_ratio()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt; &lt;code&gt;real_quick_ratio()&lt;/code&gt; &lt;/a&gt; 를 시도 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd9d6cb897df6f5b2d0449a69913f43eb00204ae" translate="yes" xml:space="preserve">
          <source>This is experimental and due to be deprecated when it is replaced with the Tk DND.</source>
          <target state="translated">이것은 실험적이며 Tk DND로 대체 될 때 더 이상 사용되지 않을 예정입니다.</target>
        </trans-unit>
        <trans-unit id="6a244913a01960d26b2ef91db13b57007d2d6acc" translate="yes" xml:space="preserve">
          <source>This is how SQLite types are converted to Python types by default:</source>
          <target state="translated">다음은 SQLite 유형이 기본적으로 Python 유형으로 변환되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1b3e8d5208ddfd0f7c07e80cfbdba372f7f6082f" translate="yes" xml:space="preserve">
          <source>This is identical to &lt;code&gt;m.group(g)&lt;/code&gt;. This allows easier access to an individual group from a match:</source>
          <target state="translated">이것은 &lt;code&gt;m.group(g)&lt;/code&gt; 동일합니다 . 이렇게하면 경기에서 개별 그룹에 쉽게 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e19e27afede528b8b1ac1b39ae6eb0b912701ac" translate="yes" xml:space="preserve">
          <source>This is identical to the creation of a normal socket, and will use the same options for creation. Refer to the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; documentation for information on creating sockets.</source>
          <target state="translated">이것은 일반 소켓 생성과 동일하며 생성시 동일한 옵션을 사용합니다. &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 작성에 대한 정보 는 소켓 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="318285d2e289fe33dad1c5808834712129e2974a" translate="yes" xml:space="preserve">
          <source>This is implemented using &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt;; see that class&amp;rsquo;s documentation for more powerful ways to manage and communicate with subprocesses.</source>
          <target state="translated">이것은 &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; 을&lt;/a&gt; 사용하여 구현됩니다 . 하위 프로세스를 관리하고 통신하는보다 강력한 방법은 해당 클래스의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e38dda8d9da39d64ec212271ef2e75c3501c8100" translate="yes" xml:space="preserve">
          <source>This is like &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but returns the current UTC date and time, as a naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. An aware current UTC datetime can be obtained by calling &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt;. See also &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt; 와 비슷하지만 현재 UTC 날짜 및 시간을 순진한 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 객체 로 반환 합니다. &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt; 호출하여 현재 UTC 날짜 시간을 알 수 있습니다 . &lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="169690a3743933d399ba7724490b8c5dc773a8be" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;print_exc(limit)&lt;/code&gt; but returns a string instead of printing to a file.</source>
          <target state="translated">이것은 &lt;code&gt;print_exc(limit)&lt;/code&gt; 와 비슷 하지만 파일로 인쇄하는 대신 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="16a6c6328d73a547359435cc278b71a11fcab094" translate="yes" xml:space="preserve">
          <source>This is like calling &lt;a href=&quot;#pathlib.Path.glob&quot;&gt;&lt;code&gt;Path.glob()&lt;/code&gt;&lt;/a&gt; with &amp;ldquo;&lt;code&gt;**/&lt;/code&gt;&amp;rdquo; added in front of the given relative &lt;em&gt;pattern&lt;/em&gt;:</source>
          <target state="translated">이것은 주어진 상대 &lt;em&gt;패턴&lt;/em&gt; 앞에 &amp;ldquo; &lt;code&gt;**/&lt;/code&gt; &amp;rdquo;를 추가 하여 &lt;a href=&quot;#pathlib.Path.glob&quot;&gt; &lt;code&gt;Path.glob()&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0036c10d923d16a01721d2b94dc096c0c58c8" translate="yes" xml:space="preserve">
          <source>This is like function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above, except that a string containing doctest examples is specified directly, via the &lt;em&gt;src&lt;/em&gt; argument.</source>
          <target state="translated">doctest 예제를 포함하는 문자열이 &lt;em&gt;src&lt;/em&gt; 인수 를 통해 직접 지정된다는 점을 제외하면 위의 함수 &lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0e58e2745c0e6f9d952d1bcb528a5a4aef91c49" translate="yes" xml:space="preserve">
          <source>This is most useful for debugging deadlock: this function does not require the deadlocked threads&amp;rsquo; cooperation, and such threads&amp;rsquo; call stacks are frozen for as long as they remain deadlocked. The frame returned for a non-deadlocked thread may bear no relationship to that thread&amp;rsquo;s current activity by the time calling code examines the frame.</source>
          <target state="translated">교착 상태 디버깅에 가장 유용합니다.이 함수는 교착 상태 스레드 협력을 필요로하지 않으며 이러한 스레드의 호출 스택은 교착 상태를 유지하는 한 정지됩니다. 교착 상태가 아닌 스레드에 대해 리턴 된 프레임은 호출 코드가 프레임을 검사 할 때까지 해당 스레드의 현재 활동과 관련이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78939d394c86630532b9214b845b5f630569e297" translate="yes" xml:space="preserve">
          <source>This is nice and fine, but how would one access the additional elements contained in this array? Since the type still only knows about 4 elements, we get errors accessing other elements:</source>
          <target state="translated">이것은 좋고 훌륭하지만 어떻게이 배열에 포함 된 추가 요소에 액세스합니까? 타입은 여전히 ​​4 가지 요소 만 알고 있기 때문에 다른 요소에 액세스하는 중에 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b1d69acd3115aceb80f8c64013384f31d9c19385" translate="yes" xml:space="preserve">
          <source>This is not a general &amp;ldquo;persistence&amp;rdquo; module. For general persistence and transfer of Python objects through RPC calls, see the modules &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module exists mainly to support reading and writing the &amp;ldquo;pseudo-compiled&amp;rdquo; code for Python modules of &lt;code&gt;.pyc&lt;/code&gt; files. Therefore, the Python maintainers reserve the right to modify the marshal format in backward incompatible ways should the need arise. If you&amp;rsquo;re serializing and de-serializing Python objects, use the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module instead &amp;ndash; the performance is comparable, version independence is guaranteed, and pickle supports a substantially wider range of objects than marshal.</source>
          <target state="translated">이것은 일반적인 &quot;지속성&quot;모듈이 아닙니다. RPC 호출을 통한 Python 객체의 일반적인 지속성 및 전송에 대해서는 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;shelve#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 . &lt;a href=&quot;#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 모듈은 읽기의 파이썬 모듈에 대한 &quot;의사 컴파일&quot;코드 작성 지원하기 위해 주로 존재 &lt;code&gt;.pyc&lt;/code&gt; 파일을. 따라서 파이썬 관리자는 필요에 따라 마샬 형식을 이전 버전과 호환되지 않는 방식으로 수정할 권리를 보유합니다. Python 객체를 직렬화 및 역 직렬화하는 경우 대신 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 모듈을 사용하십시오. 성능이 비슷하고 버전 독립성이 보장되며 pickle은 마샬보다 훨씬 넓은 범위의 객체를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="14c34954803449e8b6ca12236775c11a28756231" translate="yes" xml:space="preserve">
          <source>This is not really an opcode. It identifies the dividing line between opcodes which don&amp;rsquo;t use their argument and those that do (&lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; and &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt;, respectively).</source>
          <target state="translated">이것은 실제로 opcode가 아닙니다. 인수를 사용하지 않는 opcode와 사용하지 않는 opcode 사이의 구분선을 식별합니다 (각각 &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; 및 &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8311c7ab3b4f6d1243c8202d9f68fbbacfaddec8" translate="yes" xml:space="preserve">
          <source>This is often the same as &lt;code&gt;obj.__annotations__&lt;/code&gt;. In addition, forward references encoded as string literals are handled by evaluating them in &lt;code&gt;globals&lt;/code&gt; and &lt;code&gt;locals&lt;/code&gt; namespaces. If necessary, &lt;code&gt;Optional[t]&lt;/code&gt; is added for function and method annotations if a default value equal to &lt;code&gt;None&lt;/code&gt; is set. For a class &lt;code&gt;C&lt;/code&gt;, return a dictionary constructed by merging all the &lt;code&gt;__annotations__&lt;/code&gt; along &lt;code&gt;C.__mro__&lt;/code&gt; in reverse order.</source>
          <target state="translated">이것은 종종 &lt;code&gt;obj.__annotations__&lt;/code&gt; 와 동일 합니다. 또한 문자열 리터럴로 인코딩 된 정방향 참조는 &lt;code&gt;globals&lt;/code&gt; 및 &lt;code&gt;locals&lt;/code&gt; 네임 스페이스 에서이를 평가하여 처리됩니다 . 필요한 경우, 기본값이 &lt;code&gt;None&lt;/code&gt; 과 같은 경우 함수 및 메소드 어노테이션에 &lt;code&gt;Optional[t]&lt;/code&gt; 이 추가 됩니다. &lt;code&gt;C&lt;/code&gt; 클래스의 경우 모든 &lt;code&gt;__annotations__&lt;/code&gt; 와 &lt;code&gt;C.__mro__&lt;/code&gt; 을 역순 으로 병합하여 생성 된 사전을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="55f456f6150c016abb37654a92afed0dd5930c55" translate="yes" xml:space="preserve">
          <source>This is one of the oldest synchronization primitives in the history of computer science, invented by the early Dutch computer scientist Edsger W. Dijkstra (he used the names &lt;code&gt;P()&lt;/code&gt; and &lt;code&gt;V()&lt;/code&gt; instead of &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이것은 초기 네덜란드 컴퓨터 과학자 Edsger W. Dijkstra가 발명 한 컴퓨터 과학 역사상 가장 오래된 동기화 기본 요소 중 하나입니다 (그는 &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;P()&lt;/code&gt; 및 &lt;code&gt;V()&lt;/code&gt; 라는 이름을 사용했습니다 ).</target>
        </trans-unit>
        <trans-unit id="8ca326cbb935374f0ae3d5c7f95cf7afce128acc" translate="yes" xml:space="preserve">
          <source>This is one of the simplest mechanisms for communication between threads: one thread signals an event and other threads wait for it.</source>
          <target state="translated">이것은 스레드 간 통신을위한 가장 간단한 메커니즘 중 하나입니다. 하나의 스레드는 이벤트를 알리고 다른 스레드는이를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="85bc3018b9b177c10f39f4bc387ed18b0837940e" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;a href=&quot;#signal.SIGCHLD&quot;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/a&gt; is to simply ignore it.</source>
          <target state="translated">이것은 두 가지 표준 신호 처리 옵션 중 하나입니다. 단순히 신호에 대한 기본 기능을 수행합니다. 예를 들어, 대부분의 시스템에서 &lt;code&gt;SIGQUIT&lt;/code&gt; 의 기본 동작은 코어를 덤프하고 종료하는 반면 &lt;a href=&quot;#signal.SIGCHLD&quot;&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/a&gt; 의 기본 동작 은 단순히 무시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="86ba83444c95b331e504dbbe33363d01f2d21c52" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;code&gt;SIGCHLD&lt;/code&gt; is to simply ignore it.</source>
          <target state="translated">이것은 두 가지 표준 신호 처리 옵션 중 하나입니다. 단순히 신호의 기본 기능을 수행합니다. 예를 들어, 대부분의 시스템에서 &lt;code&gt;SIGQUIT&lt;/code&gt; 의 기본 조치 는 코어 덤프 및 종료이고 &lt;code&gt;SIGCHLD&lt;/code&gt; 의 기본 조치 는 단순히 무시합니다.</target>
        </trans-unit>
        <trans-unit id="0277b7fe4737cfb83edc05d2ac0b1e99b8eb5b48" translate="yes" xml:space="preserve">
          <source>This is provided so that a custom filename can be provided.</source>
          <target state="translated">사용자 정의 파일 이름을 제공 할 수 있도록 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="155e858c9f2971e28ff3407e7b9934beb0e04e92" translate="yes" xml:space="preserve">
          <source>This is raised if data is specified for a node which does not support data.</source>
          <target state="translated">데이터를 지원하지 않는 노드에 대해 데이터가 지정된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="51ba11e2172daf21cf5dc1ec1c1df58005922e37" translate="yes" xml:space="preserve">
          <source>This is raised when an unrecognized option is found in the argument list or when an option requiring an argument is given none. The argument to the exception is a string indicating the cause of the error. For long options, an argument given to an option which does not require one will also cause this exception to be raised. The attributes &lt;code&gt;msg&lt;/code&gt; and &lt;code&gt;opt&lt;/code&gt; give the error message and related option; if there is no specific option to which the exception relates, &lt;code&gt;opt&lt;/code&gt; is an empty string.</source>
          <target state="translated">인식 할 수없는 옵션이 인수 목록에 있거나 인수가 필요한 옵션이없는 경우에 발생합니다. 예외에 대한 인수는 오류의 원인을 나타내는 문자열입니다. 긴 옵션의 경우 옵션을 요구하지 않는 옵션에 대한 인수도이 예외를 발생시킵니다. &lt;code&gt;msg&lt;/code&gt; 및 &lt;code&gt;opt&lt;/code&gt; 속성 은 오류 메시지 및 관련 옵션을 제공합니다. 예외와 관련된 특정 옵션이 없으면 &lt;code&gt;opt&lt;/code&gt; 는 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="76312b639346c9f0ed81f7029a1eb2df8cf32e26" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt;&lt;code&gt;header_encode()&lt;/code&gt;&lt;/a&gt; except that the string is fit into maximum line lengths as given by the argument &lt;em&gt;maxlengths&lt;/em&gt;, which must be an iterator: each element returned from this iterator will provide the next maximum line length.</source>
          <target state="translated">문자열이 &lt;em&gt;maxlengths&lt;/em&gt; 인수에 의해 주어진 최대 행 길이에 맞는다는 점을 제외하고 &lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt; &lt;code&gt;header_encode()&lt;/code&gt; &lt;/a&gt; 와 유사합니다.이 길이 는 반복자 여야합니다.이 반복자에서 리턴 된 각 요소는 다음 최대 행 길이를 제공합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b615c7ad20b9138e70d1eb8b4dc44b2eb332b517" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt;&lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 2&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt; &lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; 호출 구문에 사용됩니다. 위치 &lt;code&gt;count + 2&lt;/code&gt; 의 스택 항목 은 해당 호출 가능 &lt;code&gt;f&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="520c63df4ff805ac58b532a712ba8836cd814f03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 1&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; 호출 구문에 사용됩니다. 위치 &lt;code&gt;count + 1&lt;/code&gt; 의 스택 항목 은 해당 호출 가능 &lt;code&gt;f&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0f001bdc4e257d8aab7e66c626f10b79ecf0cce" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a list instead of tuple. Implements iterable unpacking in list displays &lt;code&gt;[*x, *y, *z]&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 튜플 대신 목록을 푸시합니다. 목록 표시 &lt;code&gt;[*x, *y, *z]&lt;/code&gt; 에서 반복 가능한 압축 풀기를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="b3848d91dc2ff50aa1e4c02a35fac1c890e31626" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a set instead of tuple. Implements iterable unpacking in set displays &lt;code&gt;{*x, *y, *z}&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt; 과 비슷 하지만 튜플 대신 세트를 푸시합니다. 세트 디스플레이 &lt;code&gt;{*x, *y, *z}&lt;/code&gt; 에서 반복 가능한 언 패킹을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="8a5ede386bb9b2612cf30934e9da4810b0bc33ed" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">이것은 &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 매개 변수를 URL에서 분리하지 않습니다. URL의 &lt;em&gt;경로&lt;/em&gt; 부분 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; 참조)의 각 세그먼트에 매개 변수를 적용 할 수있는 최신 URL 구문 이 필요한 경우 일반적으로 &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt; 대신 사용해야합니다 . 경로 세그먼트와 매개 변수를 분리하려면 별도의 기능이 필요합니다. 이 함수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;tuple이라는 이름&lt;/a&gt; 의 5 개 항목을 반환합니다 .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="235443fe20c693b3738b90aee38788761d709674" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 URL에서 매개 변수를 분리하지 않습니다. URL &lt;em&gt;경로&lt;/em&gt; 부분의 각 세그먼트에 매개 변수를 적용 할 수있는 최신 URL 구문 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; 참조 &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt; 필요한 경우 일반적으로 urlparse () 대신 사용해야합니다 . 경로 세그먼트와 매개 변수를 분리하려면 별도의 기능이 필요합니다. 이 함수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;tuple이라는&lt;/a&gt; 5 개 항목을 반환합니다 .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155c14dfe42c8135f201e1eba12ead1b14a1d498" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;sorted(iterable)&lt;/code&gt;, but unlike &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, this implementation is not stable.</source>
          <target state="translated">이것은 &lt;code&gt;sorted(iterable)&lt;/code&gt; 과 비슷 하지만 &lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 와 달리이 구현은 안정적이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="812a1f27c6c6d735c8d382bf216664f1474b94fa" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=False&lt;/code&gt; and the list of strings passed as the first argument; however, where &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; takes a single argument which is list of strings, &lt;em&gt;subprocess_exec&lt;/em&gt; takes multiple string arguments.</source>
          <target state="translated">이것은 &lt;code&gt;shell=False&lt;/code&gt; 로 호출 된 표준 라이브러리 &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt; 클래스와 첫 번째 인수로 전달 된 문자열 목록과 유사합니다 . 그러나 &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt; 이 문자열 목록 인 단일 인수를 사용하는 경우 &lt;em&gt;subprocess_exec&lt;/em&gt; 는 여러 문자열 인수를 사용합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b7e21c8133751241f1c19a21ebb0193ee2ef677" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;shell=True&lt;/code&gt; 로 호출 된 표준 라이브러리 &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt; 클래스 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="cc5e49afeac866714bcab289ccdfaf9524cbc412" translate="yes" xml:space="preserve">
          <source>This is suited for when your data is discrete, and you don&amp;rsquo;t mind that the median may not be an actual data point.</source>
          <target state="translated">이것은 데이터가 분리 된 경우에 적합하며 중앙값이 실제 데이터 포인트가 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="86b3510355c1fe9570b7071cc51a3472da435031" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;aRepr&lt;/code&gt;. It returns a string similar to that returned by the built-in function of the same name, but with limits on most sizes.</source>
          <target state="translated">이것은 &lt;code&gt;aRepr&lt;/code&gt; 의 &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 메소드입니다 . 동일한 이름의 내장 함수가 리턴 한 문자열과 유사하지만 대부분의 크기에 제한이있는 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ddba4b7153571fdf5c33ce2d048ae2ec9e729ec1" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">모든 정책 클래스 의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; 입니다. 불변 속성, &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt; 메소드 및 생성자 시맨틱 의 구현뿐만 아니라 몇 가지 간단한 메소드에 대한 기본 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="103c4fa731bb79f76162f7afd5a51a6b2b64b808" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">이것은 모든 정책 클래스에 대한 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; 입니다. 불변 속성, &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt; 메서드 및 생성자 의미 의 구현뿐만 아니라 몇 가지 간단한 메서드에 대한 기본 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d1107a365663105be7dfc2b72bf4a3c2259c5eeb" translate="yes" xml:space="preserve">
          <source>This is the &lt;em&gt;output_charset&lt;/em&gt; attribute if that is not &lt;code&gt;None&lt;/code&gt;, otherwise it is &lt;em&gt;input_charset&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 이 아닌 경우 , &lt;em&gt;output_charset&lt;/em&gt; 속성이고 , 그렇지 않으면 &lt;em&gt;input_charset&lt;/em&gt; 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a564908887b5551964c19be7d4e0a0b8f3d1b0a1" translate="yes" xml:space="preserve">
          <source>This is the XML file that is going to be manipulated:</source>
          <target state="translated">이것은 조작 될 XML 파일입니다.</target>
        </trans-unit>
        <trans-unit id="7b01232b0fadd275694c8fe9a0cfcf63469b298d" translate="yes" xml:space="preserve">
          <source>This is the base class for all exceptions that the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package can raise. It is derived from the standard &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class and defines no additional methods.</source>
          <target state="translated">&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt; 패키지에서 발생할 수 있는 모든 예외의 기본 클래스입니다 . 표준 &lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 클래스 에서 파생되며 추가 메소드를 정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09a9c78f4b499866988037952e3b3e1103098b3f" translate="yes" xml:space="preserve">
          <source>This is the base class for all registered handlers &amp;mdash; and handles only the simple mechanics of registration.</source>
          <target state="translated">이것은 등록 된 모든 처리기의 기본 클래스이며 단순한 등록 메커니즘 만 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c702066b03625bc85fc0ff9e93c36c1a9f5f2451" translate="yes" xml:space="preserve">
          <source>This is the base class for all the MIME-specific subclasses of &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Ordinarily you won&amp;rsquo;t create instances specifically of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, although you could. &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; is provided primarily as a convenient base class for more specific MIME-aware subclasses.</source>
          <target state="translated">이것은 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; 의&lt;/a&gt; 모든 MIME 고유의 서브 클래스의 기본 클래스입니다 . 일반적으로 &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; 에&lt;/a&gt; 대한 인스턴스를 만들지는 않지만 일반적으로 만들 수는 없습니다 . &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt; 는 기본적으로보다 구체적인 MIME 인식 하위 클래스를위한 편리한 기본 클래스로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="63c3452ed9f479b409885d526d1d2f473fc0b1e6" translate="yes" xml:space="preserve">
          <source>This is the base class for exceptions raised by the &lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class. It is derived from &lt;a href=&quot;#email.errors.MessageError&quot;&gt;&lt;code&gt;MessageError&lt;/code&gt;&lt;/a&gt;. This class is also used internally by the parser used by &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 클래스에서 발생한 예외의 기본 클래스입니다 . &lt;a href=&quot;#email.errors.MessageError&quot;&gt; &lt;code&gt;MessageError&lt;/code&gt; &lt;/a&gt; 에서 파생됩니다 . 이 클래스는 &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; 가&lt;/a&gt; 사용하는 파서에서도 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="12d993cc451ecc15f464dda6a51ac3528a894f72" translate="yes" xml:space="preserve">
          <source>This is the base class for the other SAX exception classes.</source>
          <target state="translated">이것은 다른 SAX 예외 클래스의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="54578a7a3c812d9e6bd0a1b7b8c51329ad6f90a7" translate="yes" xml:space="preserve">
          <source>This is the base class of all warning category classes. It is a subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 모든 경고 범주 클래스의 기본 클래스입니다. &lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="63a93b41a0b6373507338eb5d949f5335b6b3ddd" translate="yes" xml:space="preserve">
          <source>This is the base of all AST node classes. The actual node classes are derived from the &lt;code&gt;Parser/Python.asdl&lt;/code&gt; file, which is reproduced &lt;a href=&quot;#abstract-grammar&quot;&gt;below&lt;/a&gt;. They are defined in the &lt;code&gt;_ast&lt;/code&gt; C module and re-exported in &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 모든 AST 노드 클래스의 기본입니다. 실제 노드 클래스는 &lt;code&gt;Parser/Python.asdl&lt;/code&gt; 파일 에서 파생되며 &lt;a href=&quot;#abstract-grammar&quot;&gt;아래에서&lt;/a&gt; 재현 됩니다 . 그것들은 &lt;code&gt;_ast&lt;/code&gt; C 모듈에 정의되어 있으며 &lt;a href=&quot;#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; 로&lt;/a&gt; 다시 내보내집니다 .</target>
        </trans-unit>
        <trans-unit id="8538deb00176d8d84916528140d7f030e4cc4f43" translate="yes" xml:space="preserve">
          <source>This is the client side:</source>
          <target state="translated">이것은 클라이언트 쪽입니다.</target>
        </trans-unit>
        <trans-unit id="0995326a8a1a9b41b5401cc1a2e33ab049dd8d3d" translate="yes" xml:space="preserve">
          <source>This is the counterpart of &lt;a href=&quot;#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object, a string and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; is equivalent to &lt;code&gt;x.foobar = 123&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt; 의 대응입니다 . 인수는 객체, 문자열 및 임의의 값입니다. 문자열은 기존 속성 또는 새 속성의 이름을 지정할 수 있습니다. 객체가 허용하는 경우 함수는 값을 속성에 할당합니다. 예를 들어 &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; 은 &lt;code&gt;x.foobar = 123&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a0dcb8d939a5adb04c7d789dbf2733cb3107c014" translate="yes" xml:space="preserve">
          <source>This is the current standard (STD66). Any changes to urllib.parse module should conform to this. Certain deviations could be observed, which are mostly for backward compatibility purposes and for certain de-facto parsing requirements as commonly observed in major browsers.</source>
          <target state="translated">이것이 현재 표준 (STD66)입니다. urllib.parse 모듈에 대한 모든 변경 사항은이를 준수해야합니다. 특정 편차는 관찰 될 수 있는데, 이는 대부분 이전 버전과의 호환성 목적과 주요 브라우저에서 일반적으로 관찰되는 사실상의 파싱 요구 사항에 대한 것입니다.</target>
        </trans-unit>
        <trans-unit id="66c8088759f9087b738e1b70d1cf37c8a1aae852" translate="yes" xml:space="preserve">
          <source>This is the default format.</source>
          <target state="translated">이것이 기본 형식입니다.</target>
        </trans-unit>
        <trans-unit id="38e2d748255fc3c02a104699832e8769048dc2cf" translate="yes" xml:space="preserve">
          <source>This is the entry point you will normally use. It accepts editing keystrokes until one of the termination keystrokes is entered. If &lt;em&gt;validator&lt;/em&gt; is supplied, it must be a function. It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the &lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt;&lt;code&gt;stripspaces&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">이것이 일반적으로 사용하는 진입 점입니다. 종료 키 입력 중 하나를 입력 할 때까지 키 입력 편집을 허용합니다. 경우 &lt;em&gt;유효성 검사기가&lt;/em&gt; 공급되고,이 함수해야합니다. 키 입력을 매개 변수로 입력 한 각 키 입력에 대해 호출됩니다. 명령 디스패치가 결과에서 수행됩니다. 이 메소드는 창 내용을 문자열로 리턴합니다. 창의 공백이 포함되는지 여부는 &lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt; &lt;code&gt;stripspaces&lt;/code&gt; &lt;/a&gt; 속성의 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="79959507c8268ef58c50a5dc61525d5211978203" translate="yes" xml:space="preserve">
          <source>This is the factory used by &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; by default. &lt;code&gt;HeaderRegistry&lt;/code&gt; builds the class used to create a header instance dynamically, using &lt;em&gt;base_class&lt;/em&gt; and a specialized class retrieved from a registry that it holds. When a given header name does not appear in the registry, the class specified by &lt;em&gt;default_class&lt;/em&gt; is used as the specialized class. When &lt;em&gt;use_default_map&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), the standard mapping of header names to classes is copied in to the registry during initialization. &lt;em&gt;base_class&lt;/em&gt; is always the last class in the generated class&amp;rsquo;s &lt;code&gt;__bases__&lt;/code&gt; list.</source>
          <target state="translated">이것은 기본적 으로 &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; 에서&lt;/a&gt; 사용되는 팩토리 입니다. &lt;code&gt;HeaderRegistry&lt;/code&gt; 는 &lt;em&gt;base_class&lt;/em&gt; 및 보유한 레지스트리에서 검색된 특수 클래스를 사용하여 헤더 인스턴스를 동적으로 작성하는 데 사용되는 클래스를 빌드합니다 . 지정된 헤더 이름이 레지스트리에 나타나지 않으면 &lt;em&gt;default_class&lt;/em&gt; 로 지정된 클래스가 특수 클래스로 사용됩니다. 때 &lt;em&gt;use_default_map가&lt;/em&gt; 있다 &lt;code&gt;True&lt;/code&gt; (기본값), 클래스 헤더 이름의 표준 매핑은 초기화하는 동안 레지스트리에 복사됩니다. &lt;em&gt;base_class&lt;/em&gt; 는 항상 생성 된 클래스의 &lt;code&gt;__bases__&lt;/code&gt; 목록 에서 마지막 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="051f8529efd087892a2a4ff0d6f02ba8048fe846" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">이것은 전체 모듈 API 참조입니다. 개요 및 소개 &lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;는 ipaddress 모듈 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24a3d0cb25dd9e84816e2611ba871f99d223fc47" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">전체 모듈 API 참조입니다. 개요 및 소개 &lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;는 ipaddress 모듈 소개를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="27cb2703cef928a010aa684a1cb6a3321bec9d97" translate="yes" xml:space="preserve">
          <source>This is the full set of data types supported by XML-RPC. Method calls may also raise a special &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; instance, used to signal XML-RPC server errors, or &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; used to signal an error in the HTTP/HTTPS transport layer. Both &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; derive from a base class called &lt;code&gt;Error&lt;/code&gt;. Note that the xmlrpc client module currently does not marshal instances of subclasses of built-in types.</source>
          <target state="translated">XML-RPC가 지원하는 전체 데이터 유형입니다. 또한 메소드 호출은 XML-RPC 서버 오류를 알리는 데 사용되는 특수 &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt; 인스턴스 또는 HTTP / HTTPS 전송 계층의 오류를 알리는 데 사용되는 &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt; 를 발생시킬 수 있습니다. &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; 는&lt;/a&gt; 모두 &lt;code&gt;Error&lt;/code&gt; 라는 기본 클래스에서 파생됩니다 . xmlrpc 클라이언트 모듈은 현재 내장 유형의 서브 클래스 인스턴스를 마샬링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d83bc29fd516747de82e555ef075ed666ec7ae21" translate="yes" xml:space="preserve">
          <source>This is the inverse function of &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;. Its argument is the &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; or full 9-tuple (since the dst flag is needed; use &lt;code&gt;-1&lt;/code&gt; as the dst flag if it is unknown) which expresses the time in &lt;em&gt;local&lt;/em&gt; time, not UTC. It returns a floating point number, for compatibility with &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt;. If the input value cannot be represented as a valid time, either &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised (which depends on whether the invalid value is caught by Python or the underlying C libraries). The earliest date for which it can generate a time is platform-dependent.</source>
          <target state="translated">이것은 &lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt; 의 역함수 입니다. 인수는 &lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt; 또는 전체 9- 튜플 (dst 플래그가 필요하기 때문에 알 수없는 경우 dst 플래그로 &lt;code&gt;-1&lt;/code&gt; 사용 )이므로 UTC가 아닌 &lt;em&gt;현지&lt;/em&gt; 시간으로 시간을 표시합니다 . &lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt; 과의 호환성을 위해 부동 소수점 숫자를 반환합니다 . 입력 값을 유효한 시간으로 표현할 수 없으면 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 (Python 또는 기본 C 라이브러리에서 유효하지 않은 값을 잡는 지 여부에 따라 다름). 시간을 생성 할 수있는 가장 빠른 날짜는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="25952ff7c192298062c7c94fb2fb49d4252ac899" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt;&lt;code&gt;date.fromisoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt; &lt;code&gt;date.fromisoformat()&lt;/code&gt; &lt;/a&gt; 의 역입니다 .</target>
        </trans-unit>
        <trans-unit id="45477d6b414816ee23b1e85292dcc9da8541a2e5" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt;. It only supports the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#datetime.date.isoformat&quot;&gt; &lt;code&gt;date.isoformat()&lt;/code&gt; &lt;/a&gt; 의 반대입니다 . &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 형식 만 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="cf97c2d88f89ba640b2d05161edb12e8643013b9" translate="yes" xml:space="preserve">
          <source>This is the main callback interface in SAX, and the one most important to applications. The order of events in this interface mirrors the order of the information in the document.</source>
          <target state="translated">이것은 SAX의 기본 콜백 인터페이스이며 응용 프로그램에 가장 중요한 인터페이스입니다. 이 인터페이스의 이벤트 순서는 문서의 정보 순서를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="25c2af90efa3d54dc8077cc4e5001b757ee862ce" translate="yes" xml:space="preserve">
          <source>This is the name that could be used for performing a PTR lookup, not the resolved hostname itself.</source>
          <target state="translated">이 이름은 확인 된 호스트 이름 자체가 아니라 PTR 조회를 수행하는 데 사용할 수있는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="387c82f524a84cb4d970741adb7a53c2b55ca754" translate="yes" xml:space="preserve">
          <source>This is the object passed to the constructor&amp;rsquo;s &lt;em&gt;template&lt;/em&gt; argument. In general, you shouldn&amp;rsquo;t change it, but read-only access is not enforced.</source>
          <target state="translated">생성자의 &lt;em&gt;템플릿&lt;/em&gt; 인수에 전달 된 객체 입니다. 일반적으로 변경해서는 안되지만 읽기 전용 액세스는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a34eed16713b941a849879c228a4e75507e8cee6" translate="yes" xml:space="preserve">
          <source>This is the original source for the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package. The version of the package available from this site is suitable for use with Python 1.5.2, 2.1.x and 2.2.x, which do not include the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package in the standard library.</source>
          <target state="translated">이것은 &lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt; 패키지 의 원래 소스입니다 . 이 사이트에서 사용 가능한 패키지 버전은 표준 라이브러리에 &lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt; 패키지를 포함하지 않는 Python 1.5.2, 2.1.x 및 2.2.x와 함께 사용하기에 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="9c552faf3f40f576d4d85d3d7d48ed4c15002db5" translate="yes" xml:space="preserve">
          <source>This is the output of running the example above in verbose mode:</source>
          <target state="translated">다음은 위의 예제를 상세 모드에서 실행 한 결과입니다.</target>
        </trans-unit>
        <trans-unit id="b14df329d9906c7fbcb90d2af4897d2c57320d08" translate="yes" xml:space="preserve">
          <source>This is the preferred way to create Futures in asyncio. This lets third-party event loops provide alternative implementations of the Future object (with better performance or instrumentation).</source>
          <target state="translated">이것은 asyncio에서 선물을 만드는 데 선호되는 방법입니다. 이를 통해 써드 파티 이벤트 루프는 Future 오브젝트의 대체 구현을 제공합니다 (성능 또는 계측 성능 향상).</target>
        </trans-unit>
        <trans-unit id="69cfcab3a14463c73c17e763b38b52cd2336ac31" translate="yes" xml:space="preserve">
          <source>This is the same as the &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt;&lt;code&gt;DefaultHandler()&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t inhibit expansion of internal entities. The entity reference will not be passed to the default handler.</source>
          <target state="translated">이것은 &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt; &lt;code&gt;DefaultHandler()&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 내부 엔티티의 확장을 방해하지는 않습니다. 엔티티 참조는 기본 핸들러로 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="389a68f916573ccba3b39324a1dc41b7986f9183" translate="yes" xml:space="preserve">
          <source>This is the same function as &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;. This entry point is maintained for backward compatibility.</source>
          <target state="translated">이것은 &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; 와 동일한 기능 입니다. 이 진입 점은 이전 버전과의 호환성을 위해 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="25f22dab61a8af25218df92e4e7d0064cce134f2" translate="yes" xml:space="preserve">
          <source>This is the sample variance s&amp;sup2; with Bessel&amp;rsquo;s correction, also known as variance with N-1 degrees of freedom. Provided that the data points are representative (e.g. independent and identically distributed), the result should be an unbiased estimate of the true population variance.</source>
          <target state="translated">이것은 Bessel 보정을 사용한 표본 분산 s&amp;sup2;이며 N-1 자유도를 갖는 분산이라고도합니다. 데이터 포인트가 대표적 (예를 들어 독립적이고 동일하게 분포 된)이라면, 결과는 실제 모집단 분산의 편견이 아닌 추정값이어야합니다.</target>
        </trans-unit>
        <trans-unit id="341ee391b304321c33512e1ca47d1b5d997e8b00" translate="yes" xml:space="preserve">
          <source>This is the server side:</source>
          <target state="translated">이것은 서버 측입니다.</target>
        </trans-unit>
        <trans-unit id="616ff54fb339d5dc77cc6896ef1a784fa36685c0" translate="yes" xml:space="preserve">
          <source>This is the standard MSI schema for MSI 2.0, with the &lt;em&gt;tables&lt;/em&gt; variable providing a list of table definitions, and &lt;em&gt;_Validation_records&lt;/em&gt; providing the data for MSI validation.</source>
          <target state="translated">이것은 테이블 정의 목록을 제공하는 &lt;em&gt;테이블&lt;/em&gt; 변수와 MSI 유효성 검사를위한 데이터를 제공하는 &lt;em&gt;_Validation_records&lt;/em&gt; 와 함께 MSI 2.0의 표준 MSI 스키마입니다 .</target>
        </trans-unit>
        <trans-unit id="ccc570aa2319eff4f6519d490d8b14417d6139c0" translate="yes" xml:space="preserve">
          <source>This is the state management specification implemented by this module.</source>
          <target state="translated">이것이이 모듈에 의해 구현 된 상태 관리 사양입니다.</target>
        </trans-unit>
        <trans-unit id="4323953ab6362c591027031f3f3ca25f400868fa" translate="yes" xml:space="preserve">
          <source>This is the superclass of all Server objects in the module. It defines the interface, given below, but does not implement most of the methods, which is done in subclasses. The two parameters are stored in the respective &lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt;&lt;code&gt;server_address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">이것은 모듈에있는 모든 서버 객체의 수퍼 클래스입니다. 아래에 주어진 인터페이스를 정의하지만 서브 클래스에서 수행되는 대부분의 메소드는 구현하지 않습니다. 두 개의 매개 변수는 각각의 &lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt; &lt;code&gt;server_address&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt; 속성에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="9237177cdeb23cc7d84e7c1ca93d900094955002" translate="yes" xml:space="preserve">
          <source>This is the superclass of all request handler objects. It defines the interface, given below. A concrete request handler subclass must define a new &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method, and can override any of the other methods. A new instance of the subclass is created for each request.</source>
          <target state="translated">이것은 모든 요청 핸들러 오브젝트의 수퍼 클래스입니다. 아래에 주어진 인터페이스를 정의합니다. 구체적 요청 핸들러 서브 클래스는 새 &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; 메소드를 정의해야 하며 다른 메소드를 대체 할 수 있습니다. 각 요청에 대해 서브 클래스의 새 인스턴스가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="fdc1ccdadc662cedd90516cae609f70b8ee431d2" translate="yes" xml:space="preserve">
          <source>This is the type of lock objects.</source>
          <target state="translated">이것은 잠금 객체의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="933248421ba03ff327c1ad6cab4bf70f50be04b0" translate="yes" xml:space="preserve">
          <source>This is typically used to install the sequence tables.</source>
          <target state="translated">일반적으로 시퀀스 테이블을 설치하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="046ceaf4727b6ee744292cb707aecb0851c71b11" translate="yes" xml:space="preserve">
          <source>This is used mainly to distinguish platform-specific build directories and platform-specific built distributions. Typically includes the OS name and version and the architecture (as supplied by &amp;lsquo;os.uname()&amp;rsquo;), although the exact information included depends on the OS; e.g., on Linux, the kernel version isn&amp;rsquo;t particularly important.</source>
          <target state="translated">주로 플랫폼 별 빌드 디렉토리와 플랫폼 별 빌드 배포판을 구별하는 데 사용됩니다. 포함 된 정확한 정보는 OS에 따라 다르지만 일반적으로 OS 이름과 버전 및 아키텍처 ( 'os.uname ()'에서 제공)가 포함됩니다. 예를 들어, Linux에서 커널 버전은 특별히 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec42fa287ba1b2be0931da3b49e8350f384882a4" translate="yes" xml:space="preserve">
          <source>This is useful because constants are often given to a greater precision than is needed by the application. Another benefit is that rounding immediately eliminates unintended effects from digits beyond the current precision. In the following example, using unrounded inputs means that adding zero to a sum can change the result:</source>
          <target state="translated">상수는 종종 응용 프로그램에 필요한 것보다 더 큰 정밀도로 주어지기 때문에 유용합니다. 또 다른 이점은 반올림은 현재 정밀도 이상의 자릿수에서 의도하지 않은 효과를 즉시 제거한다는 것입니다. 다음 예에서 반올림되지 않은 입력을 사용하면 합계에 0을 추가하면 결과가 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d66f84b77c15706a38e4c4ca53e6282aa811fcdf" translate="yes" xml:space="preserve">
          <source>This is usually a string explaining the reason for this error.</source>
          <target state="translated">일반적으로이 오류의 원인을 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2fcdb8b1d9772564fbf99b8c55ef224ea5312002" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt; 함수를 선택할 수없는 이유는 모든 &lt;code&gt;lambda&lt;/code&gt; 함수가 동일한 이름 인 &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 를 공유한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="639399fee0a2268eedbc899c19e64eaccd627380" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이것이 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt; 함수를 피클 할 수없는 이유입니다 . 모든 &lt;code&gt;lambda&lt;/code&gt; 함수는 동일한 이름을 공유합니다 : &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9229d39a2ae8521b2d3a535c1b9b07071a108294" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t without caveats and limitations however, which is why it is not the default behaviour. In order to know what attributes are available on the spec object, autospec has to introspect (access attributes) the spec. As you traverse attributes on the mock a corresponding traversal of the original object is happening under the hood. If any of your specced objects have properties or descriptors that can trigger code execution then you may not be able to use autospec. On the other hand it is much better to design your objects so that introspection is safe &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;.</source>
          <target state="translated">그러나 경고와 제한이없는 것은 아니기 때문에 기본 동작이 아닙니다. 스펙 오브젝트에서 사용 가능한 속성을 알기 위해 autospec은 스펙을 검사 (액세스 속성)해야합니다. 모의 속성을 통과 할 때 원래 오브젝트의 해당 순회가 후드 아래에서 발생합니다. 지정된 객체 중 하나에 코드 실행을 트리거 할 수있는 속성 또는 설명자가있는 경우 자동 사양을 사용하지 못할 수 있습니다. 반면에, 내부 검사가 안전하도록 객체를 디자인하는 것이 훨씬 좋습니다 &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d207f3e3c1fb67cb63728a3af6a4675ea6f3832d" translate="yes" xml:space="preserve">
          <source>This iterates over all the payloads in all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning the string payloads line-by-line. It skips over all the subpart headers, and it skips over any subpart with a payload that isn&amp;rsquo;t a Python string. This is somewhat equivalent to reading the flat text representation of the message from a file using &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, skipping over all the intervening headers.</source>
          <target state="translated">이것은 &lt;em&gt;msg의&lt;/em&gt; 모든 서브 파트에있는 모든 페이로드를 반복 하여 문자열 페이로드를 한 줄씩 반환합니다. 모든 하위 부분 헤더를 건너 뛰고 파이썬 문자열이 아닌 페이로드가있는 하위 부분을 건너 뜁니다. 이것은 &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt; 사용하여 파일에서 메시지의 플랫 텍스트 표현을 읽는 것과 다소 같 으며 모든 중간 헤더를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="eb7822f26a5a0f18f548778163ce86fd0343f5b1" translate="yes" xml:space="preserve">
          <source>This iterates over all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning only those subparts that match the MIME type specified by &lt;em&gt;maintype&lt;/em&gt; and &lt;em&gt;subtype&lt;/em&gt;.</source>
          <target state="translated">이것은 &lt;em&gt;msg의&lt;/em&gt; 모든 하위 부분을 반복 하여 &lt;em&gt;maintype&lt;/em&gt; 및 &lt;em&gt;subtype에&lt;/em&gt; 의해 지정된 MIME 유형과 일치하는 하위 부분 만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3317b48233efdbea05d2c0138533c7822a99222c" translate="yes" xml:space="preserve">
          <source>This iterates over the lines of all files listed in &lt;code&gt;sys.argv[1:]&lt;/code&gt;, defaulting to &lt;code&gt;sys.stdin&lt;/code&gt; if the list is empty. If a filename is &lt;code&gt;'-'&lt;/code&gt;, it is also replaced by &lt;code&gt;sys.stdin&lt;/code&gt; and the optional arguments &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are ignored. To specify an alternative list of filenames, pass it as the first argument to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;. A single file name is also allowed.</source>
          <target state="translated">&lt;code&gt;sys.argv[1:]&lt;/code&gt; 나열된 모든 파일의 행을 반복 하며 목록이 비어 있으면 기본값은 &lt;code&gt;sys.stdin&lt;/code&gt; 입니다. 파일 이름이 &lt;code&gt;'-'&lt;/code&gt; 이면 &lt;code&gt;sys.stdin&lt;/code&gt; 으로 바뀌고 선택적 인수 &lt;em&gt;mode&lt;/em&gt; 및 &lt;em&gt;openhook&lt;/em&gt; 은 무시됩니다. 대체 파일 이름 목록을 지정하려면이를 첫 번째 인수로 &lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt; . 단일 파일 이름도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac116f41d5b2fcd57891fc5192b5d3f2274dfd05" translate="yes" xml:space="preserve">
          <source>This itertool may require significant auxiliary storage (depending on how much temporary data needs to be stored). In general, if one iterator uses most or all of the data before another iterator starts, it is faster to use &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 itertool에는 상당한 임시 데이터가 필요할 수 있습니다 (일시적으로 저장해야하는 임시 데이터 양에 따라 다름). 일반적으로 한 반복자가 다른 반복자가 시작하기 전에 대부분 또는 모든 데이터를 사용하는 경우 &lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 더 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="2b78784d3778cf51f3cc37d1ca2c57415ae43db7" translate="yes" xml:space="preserve">
          <source>This just loops through the handlers offering them the record to handle. The actual object passed to the handlers is that which is returned from &lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 처리기를 반복하여 처리 할 레코드를 제공합니다. 핸들러로 전달 된 실제 객체는 &lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt; 에서 반환되는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="b297287359a92496a9e641ecaa5a2f4a199adf20" translate="yes" xml:space="preserve">
          <source>This key is not used in versions of Windows after 98.</source>
          <target state="translated">이 키는 98 이후의 Windows 버전에서는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="096ddddbe0447c0568cc1cc76f41f824414c52a4" translate="yes" xml:space="preserve">
          <source>This last example demonstrates the final few formatting functions:</source>
          <target state="translated">이 마지막 예는 마지막 몇 가지 형식 지정 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a0de209ab52fa2c28eaba734255b35873e7ad687" translate="yes" xml:space="preserve">
          <source>This last example might require special privileges:</source>
          <target state="translated">이 마지막 예에는 특별한 권한이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="264097c0f8c82e537b9bf5cf995ed38e88f6ce1f" translate="yes" xml:space="preserve">
          <source>This library does &lt;em&gt;not&lt;/em&gt; interpret or write the value-type prefixes used in the Windows Registry extended version of INI syntax.</source>
          <target state="translated">이 라이브러리는 Windows 레지스트리 확장 버전의 INI 구문에 사용 된 값 유형 접 두부를 해석하거나 쓰지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ddecb5d41f26429b00b306addcfa72c1c21b1705" translate="yes" xml:space="preserve">
          <source>This limit is used to control the size of object types for which no specific formatting method is available on the &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; object. It is applied in a similar manner as &lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt;&lt;code&gt;maxstring&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">이 제한은 &lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt; 객체 에서 특정 형식화 방법을 사용할 수없는 객체 유형의 크기를 제어하는 ​​데 사용됩니다 . &lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt; &lt;code&gt;maxstring&lt;/code&gt; &lt;/a&gt; 과 유사한 방식으로 적용됩니다 . 기본값은 &lt;code&gt;20&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6066e953f7076b88b95e2864a51729b2de6d74f8" translate="yes" xml:space="preserve">
          <source>This line sorts statistics with a primary key of time, and a secondary key of cumulative time, and then prints out some of the statistics. To be specific, the list is first culled down to 50% (re: &lt;code&gt;.5&lt;/code&gt;) of its original size, then only lines containing &lt;code&gt;init&lt;/code&gt; are maintained, and that sub-sub-list is printed.</source>
          <target state="translated">이 줄은 기본 시간 키와 누적 시간 보조 키로 통계를 정렬 한 다음 일부 통계를 인쇄합니다. 구체적으로, 목록은 먼저 원래 크기의 50 % (re : &lt;code&gt;.5&lt;/code&gt; )로 줄인 다음 &lt;code&gt;init&lt;/code&gt; 를 포함하는 행만 유지되고 해당 하위 하위 목록이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="48b3c8021c68eee9cdfb9dba7da21091a3af1ca6" translate="yes" xml:space="preserve">
          <source>This loses information about &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies, and also about newer or non-standard cookie-attributes such as &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">이로 인해 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; 쿠키 및 &lt;code&gt;port&lt;/code&gt; 와 같은 최신 또는 비표준 쿠키 속성 에 대한 정보가 손실 됩니다 .</target>
        </trans-unit>
        <trans-unit id="d0d6d6740f3cc6b70d34b0e15297fa6447937aa1" translate="yes" xml:space="preserve">
          <source>This makes a copy of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, appends any directories given as positional arguments, then reverts &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; to the copied settings when the context ends.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 사본이 만들어 지고 위치 인수로 지정된 디렉토리가 추가 된 다음 컨텍스트가 종료되면 &lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 가 복사 된 설정으로 되돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="2fec21315ec08b4fee9674feeb896233184a09bd" translate="yes" xml:space="preserve">
          <source>This makes it possible to distinguish between a properly-formed compressed stream, and an incomplete or truncated one.</source>
          <target state="translated">따라서 올바르게 구성된 압축 스트림과 불완전하거나 잘린 스트림을 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f54922022dd37999705ecf8e7311959f863f3c80" translate="yes" xml:space="preserve">
          <source>This makes the warning refer to &lt;code&gt;deprecation()&lt;/code&gt;&amp;rsquo;s caller, rather than to the source of &lt;code&gt;deprecation()&lt;/code&gt; itself (since the latter would defeat the purpose of the warning message).</source>
          <target state="translated">이로 인해 경고 는 &lt;code&gt;deprecation()&lt;/code&gt; 자체가 아닌 &lt;code&gt;deprecation()&lt;/code&gt; 호출자를 참조하게합니다 (후자는 경고 메시지의 목적을 무시하기 때문에).</target>
        </trans-unit>
        <trans-unit id="73d9e444a3a60233d585593bee38869776f0d900" translate="yes" xml:space="preserve">
          <source>This mapping is captured the first time the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module is imported, typically during Python startup as part of processing &lt;code&gt;site.py&lt;/code&gt;. Changes to the environment made after this time are not reflected in &lt;code&gt;os.environ&lt;/code&gt;, except for changes made by modifying &lt;code&gt;os.environ&lt;/code&gt; directly.</source>
          <target state="translated">이 매핑은 &lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 모듈을 처음 가져올 때, 일반적으로 &lt;code&gt;site.py&lt;/code&gt; 처리의 일부로 Python 시작 중에 캡처 됩니다. 이 시간 이후에 변경된 환경은 &lt;code&gt;os.environ&lt;/code&gt; 을 직접 수정하여 변경 한 경우를 제외하고 &lt;code&gt;os.environ&lt;/code&gt; 에 반영되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c90b598945883249d9e4304c638f9a4c5b6dbbe6" translate="yes" xml:space="preserve">
          <source>This mapping may be used to modify the environment as well as query the environment. &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; will be called automatically when the mapping is modified.</source>
          <target state="translated">이 매핑은 환경을 수정하고 환경을 쿼리하는 데 사용할 수 있습니다. &lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt; 는 매핑이 수정되면 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2f9802628cadfd6a5dfb046256f12e0170526e3f" translate="yes" xml:space="preserve">
          <source>This matches the definition of the &amp;ldquo;proleptic Gregorian&amp;rdquo; calendar in Dershowitz and Reingold&amp;rsquo;s book &lt;em&gt;Calendrical Calculations&lt;/em&gt;, where it&amp;rsquo;s the base calendar for all computations. See the book for algorithms for converting between proleptic Gregorian ordinals and many other calendar systems.</source>
          <target state="translated">이것은 Dershowitz와 Reingold의 책 &lt;em&gt;Calendrical Calculations&lt;/em&gt; 에있는&amp;ldquo;proleptic Gregorian&amp;rdquo;달력의 정의와 일치하며 , 여기서 모든 계산의 기본 달력입니다. 다발성 Gregorian 서수와 다른 많은 달력 시스템 사이의 변환 알고리즘에 대해서는 책을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="973b8e85a014b10c75403c7a74282293136436c1" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;gmtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038.</source>
          <target state="translated">이것은 올릴 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 타임 스탬프 플랫폼 C에 의해 지원되는 값의 범위를 벗어난 경우, &lt;code&gt;gmtime()&lt;/code&gt; 함수 및 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;gmtime()&lt;/code&gt; 실패. 이것을 1970 년에서 2038 년으로 제한하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="6b1f92125637bbc55cff09da5df4d2e2c83cd615" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years from 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 올릴 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 타임 스탬프 플랫폼 C에 의해 지원되는 값의 범위를 벗어나면 &lt;code&gt;localtime()&lt;/code&gt; 함수 및 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;localtime()&lt;/code&gt; 실패. 1970 ~ 2038 년으로 제한되는 것이 일반적입니다. 타임 스탬프 개념에 윤초가 포함 된 비 POSIX 시스템에서는 윤초가 &lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt; 로 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="61488cca0cc578bae3cc99b33d231e72befb7e97" translate="yes" xml:space="preserve">
          <source>This means that a point2D TypedDict can have any of the keys omitted. A type checker is only expected to support a literal False or True as the value of the total argument. True is the default, and makes all items defined in the class body be required.</source>
          <target state="translated">이는 point2D TypedDict가 키를 생략 할 수 있음을 의미합니다. 유형 검사기는 total 인수의 값으로 리터럴 False 또는 True 만 지원해야합니다. True가 기본값이며 클래스 본문에 정의 된 모든 항목을 필수로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4d37c0a7a6a3e6d70c0e783302ba789caf0c81d7" translate="yes" xml:space="preserve">
          <source>This means that if the remote listener starts up &lt;em&gt;after&lt;/em&gt; the handler has been used, you could lose messages (since the handler won&amp;rsquo;t even attempt a connection until the delay has elapsed, but just silently drop messages during the delay period).</source>
          <target state="translated">이는 핸들러가 사용 된 &lt;em&gt;후&lt;/em&gt; 원격 리스너가 시작되면 메시지가 유실 될 수 있음을 의미합니다 (지연 기가 경과 할 때까지 핸들러가 연결을 시도하지 않고 지연 기간 동안 메시지를 자동으로 삭제하기 때문에).</target>
        </trans-unit>
        <trans-unit id="293f66ad739726417a512fb32791664b3935c5f9" translate="yes" xml:space="preserve">
          <source>This means that if you try joining that process you may get a deadlock unless you are sure that all items which have been put on the queue have been consumed. Similarly, if the child process is non-daemonic then the parent process may hang on exit when it tries to join all its non-daemonic children.</source>
          <target state="translated">즉, 해당 프로세스에 참여하려고하면 큐에 배치 된 모든 항목이 소비되었는지 확실하지 않으면 교착 상태가 발생할 수 있습니다. 마찬가지로 하위 프로세스가 비 대조적이면 상위 프로세스가 모든 비 대조적 하위에 참여하려고 할 때 종료시 정지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="884bf5479c83d452b098a597edcf03db4dacf679" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">즉, &lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt; 유형의 값에 대해 모든 작업 또는 메서드 호출을 수행 하고 모든 변수에 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c2691ce7a2bb0ef524d6ac5d3f6a53e206d2c2d" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type on &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">즉, &lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt; 유형의 값에 대해 모든 조작 또는 메소드 호출을 수행 하고 변수에 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d454e9a9384d822a339503b805687181665a1335" translate="yes" xml:space="preserve">
          <source>This means that the two following regular expression objects that match a decimal number are functionally equal:</source>
          <target state="translated">이는 10 진수와 일치하는 다음 두 정규식 객체가 기능적으로 동일하다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="187d0bf1d6306583a1ebdb755911d7f2106320ea" translate="yes" xml:space="preserve">
          <source>This means that whenever you use a queue you need to make sure that all items which have been put on the queue will eventually be removed before the process is joined. Otherwise you cannot be sure that processes which have put items on the queue will terminate. Remember also that non-daemonic processes will be joined automatically.</source>
          <target state="translated">이것은 큐를 사용할 때마다 프로세스에 참여하기 전에 큐에 놓인 모든 항목이 제거되도록해야합니다. 그렇지 않으면 큐에 항목을 넣은 프로세스가 종료되는지 확신 할 수 없습니다. 비단 조적 프로세스는 자동으로 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="9817fb9c501a121ab442e1e4282e427fff6978b6" translate="yes" xml:space="preserve">
          <source>This member is either &lt;code&gt;None&lt;/code&gt; or a dictionary containing Python objects that need to be kept alive so that the memory block contents is kept valid. This object is only exposed for debugging; never modify the contents of this dictionary.</source>
          <target state="translated">이 멤버는 &lt;code&gt;None&lt;/code&gt; 이거나 메모리 블록 내용이 유효하게 유지되도록 살아 있어야하는 Python 객체를 포함하는 사전입니다. 이 객체는 디버깅을 위해서만 노출됩니다. 이 사전의 내용을 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="19498f3e018ff24394d0a46b95228fb1309cb56c" translate="yes" xml:space="preserve">
          <source>This method accepts a coroutine that can be used as a cleanup function.</source>
          <target state="translated">이 방법은 정리 기능으로 사용할 수있는 코 루틴을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="92793d8fcf27264fb4882603d3336c40c35a73a1" translate="yes" xml:space="preserve">
          <source>This method acts like &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt;, but wakes up all waiting tasks.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 대기중인 모든 작업을 깨 웁니다.</target>
        </trans-unit>
        <trans-unit id="83f0e2234ef971385137021b1ec6878c3710a2b1" translate="yes" xml:space="preserve">
          <source>This method adapts &lt;em&gt;obj&lt;/em&gt; to a ctypes type. It is called with the actual object used in a foreign function call when the type is present in the foreign function&amp;rsquo;s &lt;code&gt;argtypes&lt;/code&gt; tuple; it must return an object that can be used as a function call parameter.</source>
          <target state="translated">이 메소드는 &lt;em&gt;obj&lt;/em&gt; 를 ctypes 유형에 맞게 조정 합니다. 유형이 외부 함수의 &lt;code&gt;argtypes&lt;/code&gt; 튜플에 존재할 때 외부 함수 호출에 사용 된 실제 객체와 함께 호출됩니다 . 함수 호출 매개 변수로 사용할 수있는 오브젝트를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="de2226eb808a143726eafd45ebbb8317717428a5" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">이 방법을 사용하면 두 &lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스가 동일한 지 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b6dcc44c46e0069eff06e296235ec7e5da5bc2d" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">이 방법을 사용하면 두 &lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스의 불평등 을 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c994380cb521db6718872d973720d157f1919e6" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">이 방법을 사용하면 두 &lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt; 인스턴스가 동일한 지 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1202fad2523717e5ef623e502b8584b2963f5fc1" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">이 방법을 사용하면 두 &lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt; 인스턴스의 불평등 을 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8e548622fefef31da8300c3b5dbc9f09fa411e9" translate="yes" xml:space="preserve">
          <source>This method always quotes &lt;em&gt;fullurl&lt;/em&gt; using &lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 항상 &lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;em&gt;fullurl&lt;/em&gt; 을 인용 합니다.</target>
        </trans-unit>
        <trans-unit id="99aa254779e7ef574c52f729c661b871c547c933" translate="yes" xml:space="preserve">
          <source>This method always returns a list of values associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns an empty list if no such form field or value exists for &lt;em&gt;name&lt;/em&gt;. It returns a list consisting of one item if only one such value exists.</source>
          <target state="translated">이 메소드는 항상 양식 필드 &lt;em&gt;이름&lt;/em&gt; 과 연관된 값 목록을 리턴합니다.&lt;em&gt;&lt;/em&gt; . &lt;em&gt;name에 해당&lt;/em&gt; 하는 양식 필드 또는 값이 없으면 메소드는 빈 목록을 리턴합니다 . 그러한 값이 하나만 존재하면 하나의 항목으로 구성된 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c5df80f39d51ba66e8859be874c5de7d1b311c2" translate="yes" xml:space="preserve">
          <source>This method always returns only one value associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns only the first value in case that more values were posted under such name. Please note that the order in which the values are received may vary from browser to browser and should not be counted on. &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; If no such form field or value exists then the method returns the value specified by the optional parameter &lt;em&gt;default&lt;/em&gt;. This parameter defaults to &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">이 메소드는 항상 양식 필드 &lt;em&gt;name&lt;/em&gt; 과 연관된 하나의 값만 리턴합니다 . 이 이름으로 더 많은 값이 게시 된 경우이 메서드는 첫 번째 값만 반환합니다. 값이 수신되는 순서는 브라우저마다 다를 수 있으므로 계산하지 마십시오. &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1 해당&lt;/a&gt; 양식 필드 또는 값이 존재하지 않는 경우, 메소드는 선택적 매개 변수 &lt;em&gt;default로&lt;/em&gt; 지정된 값을 리턴합니다 . 이 매개 변수의 기본값은 &lt;code&gt;None&lt;/code&gt; 지정하지 않으면 None 입니다.</target>
        </trans-unit>
        <trans-unit id="ab00db9f3f1ac5923263017d6c47d4a368ab0db0" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt;&lt;code&gt;helo()&lt;/code&gt;&lt;/a&gt; if there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session. It tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first.</source>
          <target state="translated">이 세션에서 이전 &lt;code&gt;EHLO&lt;/code&gt; 또는 &lt;code&gt;HELO&lt;/code&gt; 명령이 없는 경우이 메소드는 &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt; &lt;code&gt;helo()&lt;/code&gt; &lt;/a&gt; 호출합니다 . ESMTP를 시도합니다 &lt;code&gt;EHLO&lt;/code&gt; 먼저 EHLO를 .</target>
        </trans-unit>
        <trans-unit id="f3d3c489ac6f9b1031182090b6d35d21fd51ab55" translate="yes" xml:space="preserve">
          <source>This method can access the current error information using &lt;code&gt;sys.exc_info()&lt;/code&gt;, and should pass that information to &lt;em&gt;start_response&lt;/em&gt; when calling it (as described in the &amp;ldquo;Error Handling&amp;rdquo; section of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메소드는 &lt;code&gt;sys.exc_info()&lt;/code&gt; 사용하여 현재 오류 정보에 액세스 할 수 있으며 해당 정보를 호출 할 때 &lt;em&gt;start_response에&lt;/em&gt; 해당 정보를 전달해야 합니다 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; 의 &quot;오류 처리&quot;섹션에 설명 된대로).&lt;strong&gt;&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="3fe72da74ea53d024f3c10009d6c535ecabca50f" translate="yes" xml:space="preserve">
          <source>This method can also be used as a decorator. When used as a decorator, &lt;em&gt;name&lt;/em&gt; can only be given as a keyword argument to register &lt;em&gt;function&lt;/em&gt; under &lt;em&gt;name&lt;/em&gt;. If no &lt;em&gt;name&lt;/em&gt; is given, &lt;code&gt;function.__name__&lt;/code&gt; will be used.</source>
          <target state="translated">이 방법은 데코레이터로도 사용할 수 있습니다. 데코레이터로 사용될 때 &lt;em&gt;name&lt;/em&gt; 은 &lt;em&gt;name&lt;/em&gt; 아래에 &lt;em&gt;함수&lt;/em&gt; 를 등록하기위한 키워드 인수로만 제공 될 수 있습니다 . &lt;em&gt;이름&lt;/em&gt; 이 없으면&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; &lt;code&gt;function.__name__&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="05ba3520afb6b8d1c2cc9f5025b6e01795641a6b" translate="yes" xml:space="preserve">
          <source>This method can also load certification revocation lists (CRLs) in PEM or DER format. In order to make use of CRLs, &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; must be configured properly.</source>
          <target state="translated">이 방법은 PEM 또는 DER 형식으로 CRL (인증 해지 목록)을로드 할 수도 있습니다. CRL을 사용하기 위해&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; &lt;/a&gt; 를 올바르게 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2cbf4b4a0062a4ab6d1ec363b05db41b262c8d75" translate="yes" xml:space="preserve">
          <source>This method can also set additional value and type information for the specified key. The key identified by the key parameter must have been opened with &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">이 방법은 지정된 키에 대한 추가 값 및 유형 정보를 설정할 수도 있습니다. 키 매개 변수로 식별 된 키는 &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt; 로 열어야합니다. 액세스 합니다.</target>
        </trans-unit>
        <trans-unit id="73a7fb88081ff7799c7aff867ccc6018119a704f" translate="yes" xml:space="preserve">
          <source>This method can be called if the server is already accepting connections. Only one &lt;code&gt;serve_forever&lt;/code&gt; task can exist per one &lt;em&gt;Server&lt;/em&gt; object.</source>
          <target state="translated">서버가 이미 연결을 수락중인 경우이 메소드를 호출 할 수 있습니다. 한 번에 하나의 &lt;code&gt;serve_forever&lt;/code&gt; 작업 만 존재할 수 있습니다&lt;em&gt; 서버&lt;/em&gt; 객체 .</target>
        </trans-unit>
        <trans-unit id="407438304b114d9ae1fc43a76729553a9b36a0e0" translate="yes" xml:space="preserve">
          <source>This method can be called to signal that the set of tests being run should be aborted by setting the &lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt;&lt;code&gt;shouldStop&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;True&lt;/code&gt;. &lt;code&gt;TestRunner&lt;/code&gt; objects should respect this flag and return without running any additional tests.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt; &lt;code&gt;shouldStop&lt;/code&gt; &lt;/a&gt; 속성을 &lt;code&gt;True&lt;/code&gt; 로 설정하여 실행중인 테스트 세트를 중단해야 함을 알리기 위해이 메소드를 호출 할 수 있습니다 . &lt;code&gt;TestRunner&lt;/code&gt; 오브젝트는이 플래그를 존중하고 추가 테스트를 실행하지 않고 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="10146130dff0e59381ebe13ea405d3f938543487" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a metaclass to customize the method resolution order for its instances. It is called at class instantiation, and its result is stored in &lt;a href=&quot;#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 메타 클래스로 대체되어 인스턴스의 메소드 분석 순서를 사용자 정의 할 수 있습니다. 클래스 인스턴스화에서 호출되며 결과는 &lt;a href=&quot;#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; 에&lt;/a&gt; 저장됩니다 . .</target>
        </trans-unit>
        <trans-unit id="55106137d8d33136ba4a5c819c765b0982b2c16a" translate="yes" xml:space="preserve">
          <source>This method can be used by servers that accept connections outside of asyncio but that use asyncio to handle them.</source>
          <target state="translated">이 방법은 asyncio 외부의 연결을 수락하지만 asyncio를 사용하여 처리하는 서버에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0983394646b4255b9f804c3f4789957dcd10013" translate="yes" xml:space="preserve">
          <source>This method can be used to copy state between parsers.</source>
          <target state="translated">이 방법을 사용하면 파서간에 상태를 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d5e0af7ffa6f4c1df88abb1f7b70552cbb5ba74" translate="yes" xml:space="preserve">
          <source>This method can deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates so much output that it blocks waiting for the OS pipe buffer to accept more data. Use the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; method when using pipes to avoid this condition.</source>
          <target state="translated">이 메소드는 &lt;code&gt;stdout=PIPE&lt;/code&gt; 또는 &lt;code&gt;stderr=PIPE&lt;/code&gt; 를 사용할 때 교착 상태가 될 수 있으며 하위 프로세스는 너무 많은 출력을 생성하여 OS 파이프 버퍼가 더 많은 데이터를 수신하기를 기다리는 것을 차단합니다. 사용&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt; 이 조건을 방지하기 위해 파이프를 사용하는 경우 방법.</target>
        </trans-unit>
        <trans-unit id="0b6651beb5c50a02eebbeaabab1f23c94c2bc904" translate="yes" xml:space="preserve">
          <source>This method can only be called before the &lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt;&lt;code&gt;Parse()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt;&lt;code&gt;ParseFile()&lt;/code&gt;&lt;/a&gt; methods are called; calling it after either of those have been called causes &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; to be raised with the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt; &lt;code&gt;Parse()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt; &lt;code&gt;ParseFile()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되기 전에 만 호출 할 수 있습니다 . 이들 중 하나가 호출 된 후 호출하면 &lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt; 속성이 &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt; 설정된 &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 . .</target>
        </trans-unit>
        <trans-unit id="2086b47fb4d10716127e87469a74bd3b1a4a8119" translate="yes" xml:space="preserve">
          <source>This method can only be called once and cannot be called after &lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt; have been called.</source>
          <target state="translated">이 메소드는 한 번만 호출 할 수 있으며 &lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt; &lt;code&gt;Future.set_result()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt; 이후 에는 호출 할 수 없습니다. 을 .</target>
        </trans-unit>
        <trans-unit id="2cbd7d58d617b5e047b52fdaa579cb87df6296d7" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the transport (e.g. SSL) doesn&amp;rsquo;t support half-closed connections.</source>
          <target state="translated">전송 (예 : SSL)이 반 폐쇄 연결을 지원하지 않는 경우이 메소드는 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 를&lt;/a&gt; 발생 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c195a6b614da560f82928764439dba94df4f8e23" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is caught and not raised.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 를 발생&lt;/a&gt; 시킬 수 있지만 &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt; 가 발생하여 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50c32059ccb282fc0aeaf5852f83c3180c54f927" translate="yes" xml:space="preserve">
          <source>This method can return before any file object becomes ready or the timeout has elapsed if the current process receives a signal: in this case, an empty list will be returned.</source>
          <target state="translated">현재 프로세스가 신호를받는 경우 파일 객체가 준비되거나 시간 초과가 경과하기 전에이 메서드가 반환 될 수 있습니다.이 경우 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="552a056410da16d9e30d35242f865544f5b3c970" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;em&gt;frame&lt;/em&gt; is somewhere below &lt;code&gt;botframe&lt;/code&gt; in the call stack. &lt;code&gt;botframe&lt;/code&gt; is the frame in which debugging started.</source>
          <target state="translated">이 메소드는 &lt;em&gt;프레임&lt;/em&gt; 이 콜 스택에서 &lt;code&gt;botframe&lt;/code&gt; &lt;em&gt;프레임&lt;/em&gt; 아래에 있는지 확인합니다 . &lt;code&gt;botframe&lt;/code&gt; 은 디버깅이 시작된 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="ec7dec729e2fd25621dc1130cbf525c748669b5c" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename and line belonging to &lt;em&gt;frame&lt;/em&gt; or, at least, in the current function. If the breakpoint is a temporary one, this method deletes it.</source>
          <target state="translated">이 메소드는 파일 이름과 줄에 &lt;em&gt;프레임&lt;/em&gt; 또는 적어도 현재 함수에 속하는 중단 점이 있는지 확인 합니다. 중단 점이 일시적인 경우이 방법으로 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="4783154b5e95272a1ed6bc7a0f70e86690e5ac92" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename of the current frame.</source>
          <target state="translated">이 방법은 현재 프레임의 파일 이름에 중단 점이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1e7363c3caa003283906714b3fc1e39f30b891d3" translate="yes" xml:space="preserve">
          <source>This method chops the iterable into a number of chunks which it submits to the process pool as separate tasks. The (approximate) size of these chunks can be specified by setting &lt;em&gt;chunksize&lt;/em&gt; to a positive integer.</source>
          <target state="translated">이 방법은 iterable을 여러 청크로 분할하여 별도의 작업으로 프로세스 풀에 제출합니다. 이 청크의 대략적인 크기는 &lt;em&gt;chunksize&lt;/em&gt; 를 설정하여 지정할 수 있습니다.&lt;em&gt;&lt;/em&gt; 를 양의 정수 .</target>
        </trans-unit>
        <trans-unit id="bd737781891d8c8772e3aff8b3ba708b987d4de2" translate="yes" xml:space="preserve">
          <source>This method clears all queues and shuts down the executor, but does not wait for the executor to finish.</source>
          <target state="translated">이 메소드는 모든 큐를 지우고 실행 프로그램을 종료하지만 실행 프로그램이 완료 될 때까지 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c76f659ef31aff87035b3704b8e27300ed051239" translate="yes" xml:space="preserve">
          <source>This method closes the open mixer device file. Any further attempts to use the mixer after this file is closed will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 열린 믹서 장치 파일을 닫습니다. 이 파일을 닫은 후 믹서를 사용하려고하면 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 가 발생합니다.&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="dea536dd7b820dc65ea547cc98bb34d86563082b" translate="yes" xml:space="preserve">
          <source>This method commits the current transaction. If you don&amp;rsquo;t call this method, anything you did since the last call to &lt;code&gt;commit()&lt;/code&gt; is not visible from other database connections. If you wonder why you don&amp;rsquo;t see the data you&amp;rsquo;ve written to the database, please check you didn&amp;rsquo;t forget to call this method.</source>
          <target state="translated">이 메소드는 현재 트랜잭션을 커밋합니다. 이 메소드를 호출하지 않으면 &lt;code&gt;commit()&lt;/code&gt; 대한 마지막 호출 이후에 수행 한 모든 작업이 다른 데이터베이스 연결에서 보이지 않습니다. 데이터베이스에 쓴 데이터가 보이지 않는 이유가 궁금하다면이 메서드를 호출하는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="38bab54e5484d9d6191a130b9832361ee4787af1" translate="yes" xml:space="preserve">
          <source>This method continues to send to the socket until either all data in &lt;em&gt;data&lt;/em&gt; has been sent or an error occurs. &lt;code&gt;None&lt;/code&gt; is returned on success. On error, an exception is raised. Additionally, there is no way to determine how much data, if any, was successfully processed by the receiving end of the connection.</source>
          <target state="translated">이 방법은 모든 데이터 할 때까지 소켓에 계속 전송 &lt;em&gt;데이터가&lt;/em&gt; 전송 된 또는 오류가 발생합니다. 성공하면 아무것도 반환 &lt;code&gt;None&lt;/code&gt; . 오류가 발생하면 예외가 발생합니다. 또한 연결 끝 부분에서 성공적으로 처리 된 데이터 양을 확인할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1fe15dbe299e6059c7cb4f652892203f2294ed3f" translate="yes" xml:space="preserve">
          <source>This method creates a ctypes instance, copying the buffer from the &lt;em&gt;source&lt;/em&gt; object buffer which must be readable. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">이 메소드는 ctypes 인스턴스를 작성하여 읽을 수 있어야 하는 &lt;em&gt;소스&lt;/em&gt; 오브젝트 버퍼 에서 버퍼를 복사합니다 . 선택적 &lt;em&gt;offset&lt;/em&gt; 매개 변수는 소스 버퍼에 대한 오프셋을 바이트 단위로 지정합니다. 기본값은 0입니다. 소스 버퍼가 충분히 크지 않은 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="79e2c7a916c893d0cae05eee7a9e693d20944423" translate="yes" xml:space="preserve">
          <source>This method does an &lt;a href=&quot;#select.devpoll.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; followed by a &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is (a bit) more efficient that doing the same explicitly.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#select.devpoll.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt; 다음에 &lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt; 합니다. 명시 적으로 동일한 작업을 수행하는 것이 조금 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="42dfa15b7a4aea5dabe3cc75fbe1eb5bf58cca52" translate="yes" xml:space="preserve">
          <source>This method does an implicit stream flush before setting the new parameters.</source>
          <target state="translated">이 메소드는 새 매개 변수를 설정하기 전에 내재적 스트림 플러시를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="6309e3677b4c32db7759a47b019d92bd0f697365" translate="yes" xml:space="preserve">
          <source>This method does not block; it buffers the data and arranges for it to be sent out asynchronously.</source>
          <target state="translated">이 방법은 차단하지 않습니다. 데이터를 버퍼링하고 비동기 적으로 전송되도록 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="39a877e637d53097551d0de19b8adfb6f42d8211" translate="yes" xml:space="preserve">
          <source>This method does nothing.</source>
          <target state="translated">이 방법은 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13c34741b5804dbdc5a7f011bfea01867ca0bbd5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all function that were called by the indicated function. Aside from this reversal of direction of calls (re: called vs was called by), the arguments and ordering are identical to the &lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt;&lt;code&gt;print_callers()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스에 대한이 메소드 는 표시된 함수에 의해 호출 된 모든 함수의 목록을 인쇄합니다. 이러한 호출 방향 반전 (re : called vs 호출)을 제외하고 인수 및 순서는 &lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt; &lt;code&gt;print_callers()&lt;/code&gt; &lt;/a&gt; 메소드 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d1b2e760f26585a985b75f4056f33711aaf0b4c5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all functions that called each function in the profiled database. The ordering is identical to that provided by &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt;, and the definition of the restricting argument is also identical. Each caller is reported on its own line. The format differs slightly depending on the profiler that produced the stats:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스에 대한이 메소드 는 프로파일 된 데이터베이스에서 각 함수를 호출 한 모든 함수 목록을 인쇄합니다. 순서는 &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt; 가 제공하는 순서와 동일 하며 제한 인수의 정의도 동일합니다. 각 발신자는 자신의 회선에보고됩니다. 통계를 생성 한 프로파일 러에 따라 형식이 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="91f040b4faec2d515745438e522e71fd3894c37d" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints out a report as described in the &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스에 대한이 메소드 는 &lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt; 정의에 설명 된대로 보고서를 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="46c2ee0829732fa2fde7eb2dae1e52cfee073229" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class removes all leading path information from file names. It is very useful in reducing the size of the printout to fit within (close to) 80 columns. This method modifies the object, and the stripped information is lost. After performing a strip operation, the object is considered to have its entries in a &amp;ldquo;random&amp;rdquo; order, as it was just after object initialization and loading. If &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; causes two function names to be indistinguishable (they are on the same line of the same filename, and have the same function name), then the statistics for these two entries are accumulated into a single entry.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스에 대한이 메소드 는 파일 이름에서 모든 선행 경로 정보를 제거합니다. 80 열 이내 (가까운)에 맞게 출력물의 크기를 줄이는 데 매우 유용합니다. 이 방법은 객체를 수정하고 제거 된 정보가 손실됩니다. 스트립 작업을 수행 한 후 객체는 객체 초기화 및로드 직후와 마찬가지로 &quot;랜덤&quot;순서로 항목이있는 것으로 간주됩니다. 경우 &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt; (가 같은 이름의 같은 줄에 있으며, 동일한 기능의 이름을) 구별로 두 함수 이름을 야기하고이 두 항목에 대한 통계는 단일 항목으로 축적된다.</target>
        </trans-unit>
        <trans-unit id="1409b161813035807a55bae77d9d7acbceace27b" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class reverses the ordering of the basic list within the object. Note that by default ascending vs descending order is properly selected based on the sort key of choice.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스에 대한이 메소드 는 오브젝트 내 기본 목록의 순서를 반대로 바꿉니다. 기본적으로 오름차순 대 내림차순은 선택한 정렬 키에 따라 올바르게 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="accee55957c312a1850cca5c1863fffc7c622366" translate="yes" xml:space="preserve">
          <source>This method generates an error message leader in the format of a Unix C compiler error label; the format is &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt;, where the &lt;code&gt;%s&lt;/code&gt; is replaced with the name of the current source file and the &lt;code&gt;%d&lt;/code&gt; with the current input line number (the optional arguments can be used to override these).</source>
          <target state="translated">이 메소드는 Unix C 컴파일러 오류 레이블 형식으로 오류 메시지 리더를 생성합니다. 형식은 &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt; . 여기서 &lt;code&gt;%s&lt;/code&gt; 는 현재 소스 파일의 이름으로 대체되고 &lt;code&gt;%d&lt;/code&gt; 는 현재 입력 행 번호로 대체됩니다 (선택적 인수를 사용하여이를 대체 할 수 있음) .</target>
        </trans-unit>
        <trans-unit id="ab5e0cb7aa04565d02104cf51103e0e449b87a97" translate="yes" xml:space="preserve">
          <source>This method has to be called to ensure that underlying resources are cleaned-up.</source>
          <target state="translated">기본 자원을 정리하려면이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="331fcb4951405022dc8158f5e6b8f3643d5dcac8" translate="yes" xml:space="preserve">
          <source>This method implements the to-number operation of the IBM specification. If the argument is a string, no leading or trailing whitespace or underscores are permitted.</source>
          <target state="translated">이 방법은 IBM 스펙의 총계 연산을 구현합니다. 인수가 문자열이면 선행 또는 후행 공백 또는 밑줄이 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea7bc1d92f04efbde59e80bcc1aa6987de53f1ed" translate="yes" xml:space="preserve">
          <source>This method installs &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; into the built-in namespace, binding it to &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 를 내장 네임 스페이스에 설치 하여 &lt;code&gt;_&lt;/code&gt; 에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="b650bd083066fb7b32ea3a59211f198619f61efc" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs with no specific registered handler to open it.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; ,하지만 그들은 그것을 열 수없는 특정 등록 핸들러 모든 URL을 잡을하려면 서브 클래스를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e0a5010ef1ad88b00b90339dfae674e6bb9136c" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; ,하지만 그들은 모든 URL을 잡을하려면 서브 클래스를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="774438cdf07e39e3e6c8d23d09c95f16acf3695e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to handle URLs with the given protocol.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 하지만, 주어진 프로토콜 URL을 처리하려면 서브 클래스를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a9cdb8234013d6e3c19e46c3246b2cc09d3442f" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to post-process responses of the given protocol.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 하지만 지정된 프로토콜의 사후 처리 응답하려는 경우 서브 클래스를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c75df0a7bff13cd0e3f5e4caa6aded657e9562e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to pre-process requests of the given protocol.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 하지만 지정된 프로토콜의 요청 프로세스 사전하려면 서브 클래스를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="3c7ad9f09ceaada2d47a78bd99c6bbb39e61d57e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should override it if they intend to provide a catch-all for otherwise unhandled HTTP errors. It will be called automatically by the &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; getting the error, and should not normally be called in other circumstances.</source>
          <target state="translated">이 방법은 &lt;em&gt;없습니다&lt;/em&gt; 에 정의 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 있지만, 그렇지 않으면 처리되지 않은 HTTP 오류에 대한 포괄를 제공하려는 경우 서브 클래스를 오버라이드 (override) 할 필요가 있습니다. 오류가 발생 하면 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 자동으로 호출되며 일반적으로 다른 상황에서는 호출되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="dfa69d3953d3eb2beb1c0eca7aee210715c53a6e" translate="yes" xml:space="preserve">
          <source>This method is a WSGI application to generate an error page for the user. It is only invoked if an error occurs before headers are sent to the client.</source>
          <target state="translated">이 메소드는 사용자에 대한 오류 페이지를 생성하는 WSGI 애플리케이션입니다. 헤더가 클라이언트로 전송되기 전에 오류가 발생하는 경우에만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6f12537a7fc1c2e7162c9359e9edb423ac1e11cb" translate="yes" xml:space="preserve">
          <source>This method is a convenient way of asserting that the last call has been made in a particular way:</source>
          <target state="translated">이 방법은 마지막 호출이 특정 방식으로 이루어 졌음을 확인하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="db33534558dd6010fe1a2ce1248cebf9374038a7" translate="yes" xml:space="preserve">
          <source>This method is a shorthand for certain &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">이 메소드는 특정 &lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt; 호출 의 약어입니다 .</target>
        </trans-unit>
        <trans-unit id="4c26f67a97d1ef429fc2262c07876bc620c73fa6" translate="yes" xml:space="preserve">
          <source>This method is an optimization. It removes the need for checking every cookie with a particular domain (which might involve reading many files). Returning true from &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; leaves all the work to &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 최적화입니다. 특정 도메인을 가진 모든 쿠키를 검사 할 필요가 없습니다 (많은 파일을 읽을 수 있음). &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt; 에서 true를 반환 하면 모든 작업이 &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt; 로 남습니다 .</target>
        </trans-unit>
        <trans-unit id="2f13e10218d52bc14c398580fbb5847c80ef680a" translate="yes" xml:space="preserve">
          <source>This method is called after close has been called to reset the parser so that it is ready to parse new documents. The results of calling parse or feed after close without calling reset are undefined.</source>
          <target state="translated">이 메소드는 구문 분석기를 재설정하여 새 문서를 구문 분석 할 수 있도록 닫기가 호출 된 후에 호출됩니다. 재설정을 호출하지 않고 닫은 후 구문 분석 또는 피드를 호출 한 결과는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f681be9592e79695afc941d306faad07ca7074f" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 요청 된 키를 찾을 수 없을 때 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 . &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; 의해 반환되거나 발생하는 것이 반환되거나 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="19a1c3fd2fc083c9f806fb14e71149f2e03d9489" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 요청 된 키를 찾을 수 없을 때 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 . 반환하거나 발생시키는 것은 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; 의해 반환되거나 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ca5cd597958a55feba59538cd823db6f1757425f" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt;&lt;code&gt;dispatch_call()&lt;/code&gt;&lt;/a&gt; when there is the possibility that a break might be necessary anywhere inside the called function.</source>
          <target state="translated">이 메소드는 호출 된 함수 내부 어디에서나 중단이 필요할 수있는 &lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt; &lt;code&gt;dispatch_call()&lt;/code&gt; &lt;/a&gt; 에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2a648f403a2f03bb18de23aaed8ae35a5ed0171d" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt;&lt;code&gt;dispatch_exception()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 일 때 &lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt; &lt;code&gt;dispatch_exception()&lt;/code&gt; &lt;/a&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="15dc6e44bad2f4483f0eb7df451d9c71e914b252" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt;&lt;code&gt;dispatch_line()&lt;/code&gt;&lt;/a&gt; when either &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt;&lt;code&gt;break_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt; &lt;code&gt;break_here()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 를 생성 할 때 &lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt; &lt;code&gt;dispatch_line()&lt;/code&gt; &lt;/a&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="98e84fb726ba7d465a759a50ecf0dc2de47d13ff" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt;&lt;code&gt;dispatch_return()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 일 때 &lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt; &lt;code&gt;dispatch_return()&lt;/code&gt; &lt;/a&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="0a02c40de1371e57d58beb2caa096cce464a3453" translate="yes" xml:space="preserve">
          <source>This method is called in rare conditions, when the transport (e.g. UDP) detects that a datagram could not be delivered to its recipient. In many conditions though, undeliverable datagrams will be silently dropped.</source>
          <target state="translated">전송 (예 : UDP)이 데이터 그램을 수신자에게 전달할 수 없음을 감지하면 드문 경우에이 메소드가 호출됩니다. 그러나 많은 조건에서 전달할 수없는 데이터 그램이 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="021d411ee8557a5431f25adec004b2c8f9a32dd5" translate="yes" xml:space="preserve">
          <source>This method is called to handle an HTML doctype declaration (e.g. &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 HTML doctype 선언을 처리하기 위해 호출됩니다 (예 : &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fd8d299a2cd0f21cfa448069764a167e9c313432" translate="yes" xml:space="preserve">
          <source>This method is called to handle the end tag of an element (e.g. &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 요소의 종료 태그를 처리하기 위해 호출됩니다 (예 : &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="60f522853fb2ae7781965ad938ace085974516d9" translate="yes" xml:space="preserve">
          <source>This method is called to handle the start of a tag (e.g. &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 태그의 시작을 처리하기 위해 호출됩니다 (예 : &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="78e8fd9b96db05d7a2b36f348576340eb21ea97e" translate="yes" xml:space="preserve">
          <source>This method is called to process a named character reference of the form &lt;code&gt;&amp;amp;name;&lt;/code&gt; (e.g. &lt;code&gt;&amp;amp;gt;&lt;/code&gt;), where &lt;em&gt;name&lt;/em&gt; is a general entity reference (e.g. &lt;code&gt;'gt'&lt;/code&gt;). This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;&amp;amp;name;&lt;/code&gt; 형식의 이름 지정된 문자 참조를 처리하기 위해 호출됩니다 . (예 : &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ), 여기서 &lt;em&gt;name&lt;/em&gt; 은 일반 엔티티 참조입니다 (예 : &lt;code&gt;'gt'&lt;/code&gt; ). &lt;em&gt;convert_charrefs&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우이 메소드는 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fb85f0254c8bad935b85ebf8734852604581fb1b" translate="yes" xml:space="preserve">
          <source>This method is called to process arbitrary data (e.g. text nodes and the content of &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 임의의 데이터 (예 : 텍스트 노드 및 &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; 의 내용)를 처리하기 위해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e9e01f728ac0f3b55f6b12a74a0191fb1f47305" translate="yes" xml:space="preserve">
          <source>This method is called to process decimal and hexadecimal numeric character references of the form &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; and &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt;. For example, the decimal equivalent for &lt;code&gt;&amp;amp;gt;&lt;/code&gt; is &lt;code&gt;&amp;amp;#62;&lt;/code&gt;, whereas the hexadecimal is &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt;; in this case the method will receive &lt;code&gt;'62'&lt;/code&gt; or &lt;code&gt;'x3E'&lt;/code&gt;. This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; 형식의 10 진수 및 16 진수 숫자 참조를 처리하기 위해 호출됩니다 . 및 &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt; . 예를 들어 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; 인 &lt;code&gt;&amp;amp;#62;&lt;/code&gt; 16 진수는 &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt; ; 이 경우 메소드는 &lt;code&gt;'62'&lt;/code&gt; 또는 &lt;code&gt;'x3E'&lt;/code&gt; 를 수신 합니다. &lt;em&gt;convert_charrefs&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우이 메소드는 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="780c3c6664f5680442ea9564301d3230a6f7d6e3" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">이 방법은 이후 무조건 호출 &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt; 또는 후에 &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt; 경우 &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt; 예외를 제기한다.</target>
        </trans-unit>
        <trans-unit id="6f7e5a7533d2f0589f3c906a5b3e37e2cdfcac0b" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">이 방법은 이후 무조건 호출 &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt; , 또는 후 &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt; 경우 &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt; 예외를 제기한다.</target>
        </trans-unit>
        <trans-unit id="6c401fde11b1d87c3294f0c6adb80e04c2f1324b" translate="yes" xml:space="preserve">
          <source>This method is called when a comment is encountered (e.g. &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 주석이있을 때 호출됩니다 (예 : &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="083f5bbf1b7fefcdcebe71d540d8eb6862687fcd" translate="yes" xml:space="preserve">
          <source>This method is called when an unrecognized declaration is read by the parser.</source>
          <target state="translated">파서가 인식 할 수없는 선언을 읽을 때이 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="48ae32338e51d99f49068d32f552aa62126cb367" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt;&lt;code&gt;inspect.iscoroutine()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutines.</source>
          <target state="translated">이 메소드는 생성기 기반 코 루틴에 대해 &lt;code&gt;True&lt;/code&gt; 를 리턴하므로 &lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt; &lt;code&gt;inspect.iscoroutine()&lt;/code&gt; &lt;/a&gt; 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="bc40e25a45ba1a58708d3089e289be86a7db029b" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt;&lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutine functions decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@coroutine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt; &lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@coroutine&lt;/code&gt; &lt;/a&gt; . @coroutine으로 장식 된 생성기 기반 코 루틴 함수에 대해서는 &lt;code&gt;True&lt;/code&gt; 를 반환하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="dddb9624f73389ca6bf646c24e53304c5b5057e6" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but without a &lt;code&gt;tz&lt;/code&gt; parameter.</source>
          <target state="translated">이 메소드는 기능적으로 &lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 &lt;code&gt;tz&lt;/code&gt; 매개 변수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b97d3051bc701554dcad211b236f67ff88970be3" translate="yes" xml:space="preserve">
          <source>This method is idempotent and irreversible. No other methods should be called after the event loop is closed.</source>
          <target state="translated">이 방법은 dem 등원이며 돌이킬 수 없습니다. 이벤트 루프가 닫힌 후에는 다른 메소드를 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7892f36db958bf60c1b533b160c0617375239772" translate="yes" xml:space="preserve">
          <source>This method is idempotent, so it can be called when the server is already being serving.</source>
          <target state="translated">이 메소드는 dem 등원이므로 서버가 이미 서비스중인 경우 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae00641b6d229770d0d819ba1e3ef91e3d7719d" translate="yes" xml:space="preserve">
          <source>This method is not available if &lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt;&lt;code&gt;HAS_ECDH&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt; &lt;code&gt;HAS_ECDH&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;False&lt;/code&gt; 인경우이 방법을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="57ee157b53728379894b4f3c33a03f1d7afbf61f" translate="yes" xml:space="preserve">
          <source>This method is not called directly by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, but it&amp;rsquo;s used to implement &lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt;&lt;code&gt;assertListEqual()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt;&lt;code&gt;assertTupleEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt; 의해 직접 호출되지는 않지만 &lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt; &lt;code&gt;assertListEqual()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt; &lt;code&gt;assertTupleEqual()&lt;/code&gt; &lt;/a&gt; 을 구현하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="96313c3d6a35f154b39764123b93a03916b5cfad" translate="yes" xml:space="preserve">
          <source>This method is not thread-safe.</source>
          <target state="translated">이 방법은 스레드로부터 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0b1b157e68e0328b341b72985baa5aa977263159" translate="yes" xml:space="preserve">
          <source>This method is provided as a hook to allow subclasses to modify the way objects are converted to strings. The default implementation uses the internals of the &lt;a href=&quot;#pprint.saferepr&quot;&gt;&lt;code&gt;saferepr()&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">이 메소드는 서브 클래스가 오브젝트가 문자열로 변환되는 방식을 수정할 수 있도록하는 후크로 제공됩니다. 기본 구현은 &lt;a href=&quot;#pprint.saferepr&quot;&gt; &lt;code&gt;saferepr()&lt;/code&gt; &lt;/a&gt; 구현 의 내부를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e4bdac2933048c44528e57a8429191db425bd284" translate="yes" xml:space="preserve">
          <source>This method is the main public interface to the &lt;code&gt;TextTestRunner&lt;/code&gt;. This method takes a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instance. A &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; is created by calling &lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt;&lt;code&gt;_makeResult()&lt;/code&gt;&lt;/a&gt; and the test(s) are run and the results printed to stdout.</source>
          <target state="translated">이 메소드는 &lt;code&gt;TextTestRunner&lt;/code&gt; 의 기본 공개 인터페이스 입니다. 이 메소드는 &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 인스턴스를 사용합니다. &lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; 를&lt;/a&gt; 호출하여 생성된다 &lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt; &lt;code&gt;_makeResult()&lt;/code&gt; &lt;/a&gt; 시험 (들)을 실행하고 결과를 표준 출력에 인쇄.</target>
        </trans-unit>
        <trans-unit id="9bd2fdab8cd5bcb3e3fbca53f4ef470344341c92" translate="yes" xml:space="preserve">
          <source>This method lets users assign non-string values to keys internally. This behaviour is unsupported and will cause errors when attempting to write to a file or get it in non-raw mode. &lt;strong&gt;Use the mapping protocol API&lt;/strong&gt; which does not allow such assignments to take place.</source>
          <target state="translated">이 방법을 사용하면 문자열이 아닌 값을 키에 내부적으로 할당 할 수 있습니다. 이 동작은 지원되지 않으며 파일에 쓰려고하거나 비원시 모드로 가져올 때 오류가 발생합니다. 이러한 할당을 허용하지 않는 &lt;strong&gt;매핑 프로토콜 API&lt;/strong&gt; 를 &lt;strong&gt;사용하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9e630d695c2a5ae538aa534d3f87ea68ff8127b6" translate="yes" xml:space="preserve">
          <source>This method makes a backup of a SQLite database even while it&amp;rsquo;s being accessed by other clients, or concurrently by the same connection. The copy will be written into the mandatory argument &lt;em&gt;target&lt;/em&gt;, that must be another &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이 방법은 다른 클라이언트에 의해 또는 동일한 연결로 동시에 액세스되는 동안에도 SQLite 데이터베이스의 백업을 만듭니다. 사본은 필수 인수 &lt;em&gt;target에&lt;/em&gt; 작성되며 다른 &lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 인스턴스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="8a02a1158ac4fe9ca33054075ba7d7b80db9ab50" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt; exception if the barrier is broken or reset while a thread is waiting.</source>
          <target state="translated">스레드가 대기하는 동안 배리어가 깨지거나 재설정되면 이 메소드는 &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5c3086f7c1e4aa9151125cf96d263eefadc9725" translate="yes" xml:space="preserve">
          <source>This method may raise the following exceptions:</source>
          <target state="translated">이 방법으로 다음과 같은 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8524f745e5bc38fb37ffab27510d6080ece56f38" translate="yes" xml:space="preserve">
          <source>This method may return a false value (including &lt;code&gt;None&lt;/code&gt;), in which case the transport will close itself. Conversely, if this method returns a true value, the protocol used determines whether to close the transport. Since the default implementation returns &lt;code&gt;None&lt;/code&gt;, it implicitly closes the connection.</source>
          <target state="translated">이 메소드는 잘못된 값 ( &lt;code&gt;None&lt;/code&gt; 포함 )을 리턴 할 수 있으며 ,이 경우 전송이 자체적으로 닫힙니다. 반대로,이 메소드가 true 값을 리턴하면 사용 된 프로토콜이 전송을 닫을 지 여부를 결정합니다. 기본 구현은 &lt;code&gt;None&lt;/code&gt; 을 반환 하므로 암시 적으로 연결을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="fea30f06bff8ed9f1510d9b11d7230de71e381c5" translate="yes" xml:space="preserve">
          <source>This method modifies the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object by sorting it according to the supplied criteria. The argument can be either a string or a SortKey enum identifying the basis of a sort (example: &lt;code&gt;'time'&lt;/code&gt;, &lt;code&gt;'name'&lt;/code&gt;, &lt;code&gt;SortKey.TIME&lt;/code&gt; or &lt;code&gt;SortKey.NAME&lt;/code&gt;). The SortKey enums argument have advantage over the string argument in that it is more robust and less error prone.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 오브젝트를 제공된 기준에 따라 정렬 하여 수정 합니다. 인수는 정렬 기준을 식별하는 문자열 또는 SortKey 열거 &lt;code&gt;SortKey.TIME&lt;/code&gt; (예 : &lt;code&gt;'time'&lt;/code&gt; , &lt;code&gt;'name'&lt;/code&gt; , SortKey.TIME 또는 &lt;code&gt;SortKey.NAME&lt;/code&gt; ). SortKey 열거 형 인수는 문자열 인수보다 강력하고 오류가 적다는 점에서 문자열 인수보다 유리합니다.</target>
        </trans-unit>
        <trans-unit id="4b67339d7ffa22b6989fc78c8f895cf57a483d57" translate="yes" xml:space="preserve">
          <source>This method modifies the sequence in place for economy of space when sorting a large sequence. To remind users that it operates by side effect, it does not return the sorted sequence (use &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; to explicitly request a new sorted list instance).</source>
          <target state="translated">이 방법은 큰 시퀀스를 정렬 할 때 공간 절약을 위해 시퀀스를 적절하게 수정합니다. 부작용으로 작동한다는 것을 사용자에게 상기시키기 위해 정렬 된 순서를 반환하지 않습니다 ( &lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 새로운 정렬 된 목록 인스턴스를 명시 적으로 요청하십시오).</target>
        </trans-unit>
        <trans-unit id="3d73c5e146a430709549e8f05dfe23e4b86723e9" translate="yes" xml:space="preserve">
          <source>This method must be implemented by derived classes.</source>
          <target state="translated">이 메소드는 파생 클래스로 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="6427204bbe134d960e66ca16b4637f20a99011bf" translate="yes" xml:space="preserve">
          <source>This method of serialization requires that the time zone data for the required key be available on both the serializing and deserializing side, similar to the way that references to classes and functions are expected to exist in both the serializing and deserializing environments. It also means that no guarantees are made about the consistency of results when unpickling a &lt;code&gt;ZoneInfo&lt;/code&gt; pickled in an environment with a different version of the time zone data.</source>
          <target state="translated">이 직렬화 방법을 사용하려면 직렬화 및 역 직렬화 환경에서 클래스 및 함수에 대한 참조가 존재할 것으로 예상되는 방식과 유사하게 직렬화 및 역 직렬화 측면에서 필요한 키에 대한 표준 시간대 데이터를 사용할 수 있어야합니다. 또한 다른 버전의 표준 시간대 데이터가있는 환경에서 피클 된 &lt;code&gt;ZoneInfo&lt;/code&gt; 를 언 피클 할 때 결과의 일관성에 대해 보장되지 않음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="ecb603ce556cad65f00fa7a55aabb53317aee850" translate="yes" xml:space="preserve">
          <source>This method of the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class accumulates additional profiling information into the current profiling object. Its arguments should refer to filenames created by the corresponding version of &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cProfile.run()&lt;/code&gt;. Statistics for identically named (re: file, line, name) functions are automatically accumulated into single function statistics.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 클래스 의이 메소드는 추가 프로파일 링 정보를 현재 프로파일 링 오브젝트에 축적합니다. 인수는 해당 버전의 &lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cProfile.run()&lt;/code&gt; 의해 작성된 파일 이름을 참조해야합니다 . 동일하게 명명 된 (re : file, line, name) 함수에 대한 통계는 자동으로 단일 함수 통계에 축적됩니다.</target>
        </trans-unit>
        <trans-unit id="d9898a7b816caca92a7ca2b0496401b9be9be437" translate="yes" xml:space="preserve">
          <source>This method prints a usage message including the &lt;em&gt;message&lt;/em&gt; to the standard error and terminates the program with a status code of 2.</source>
          <target state="translated">이 방법은 포함 사용법 메시지 인쇄 &lt;em&gt;메시지를&lt;/em&gt; 표준 오류 및 2의 상태 코드가 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="5e6533f5a1c6b28e058a5b665ce396bbe1c50304" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call. Once awakened, the Condition re-acquires its lock and this method returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기본 잠금을 해제 한 다음 &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt; 호출에 의해 깨어날 때까지 차단 합니다. 깨어 나면 Condition은 잠금을 다시 획득하고이 메서드는 &lt;code&gt;True&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b82153b14d869f12ca5d555943198e9ddc07c795" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call for the same condition variable in another thread, or until the optional timeout occurs. Once awakened or timed out, it re-acquires the lock and returns.</source>
          <target state="translated">이 메소드는 기본 잠금을 해제 한 다음 다른 스레드에서 동일한 조건 변수에 대한 &lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt; 호출에 의해 깨어날 때까지 또는 선택적 시간 종료가 발생할 때까지 차단 됩니다. 깨어나거나 시간이 초과되면 잠금을 다시 획득하고 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="944988049561328736ecf5958b62fc42047b6f2b" translate="yes" xml:space="preserve">
          <source>This method replaces the &lt;em&gt;Content-Type&lt;/em&gt; header, keeping all the parameters in place. If &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, this leaves the existing header&amp;rsquo;s quoting as is, otherwise the parameters will be quoted (the default).</source>
          <target state="translated">이 메소드는 모든 매개 변수를 그대로 유지하면서 &lt;em&gt;Content-Type&lt;/em&gt; 헤더를 대체합니다 . 경우 &lt;em&gt;requote이&lt;/em&gt; 있다 &lt;code&gt;False&lt;/code&gt; , 기존의 헤더로 인용 인 것이 잎, 그렇지 않으면 매개 변수 (기본값)을 인용한다.</target>
        </trans-unit>
        <trans-unit id="fa06c018512ee37e541d1e43b0f387b23671b215" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;None&lt;/code&gt; for the lock, since there is no underlying I/O to which access needs to be serialized.</source>
          <target state="translated">이 메소드는 액세스를 직렬화해야하는 기본 I / O가 없으므로 잠금에 대해 &lt;code&gt;None&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0a8c42b63ebbe3579b9c96c4e3249c2dcec50aba" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; if and only if the internal flag has been set to true, either before the wait call or after the wait starts, so it will always return &lt;code&gt;True&lt;/code&gt; except if a timeout is given and the operation times out.</source>
          <target state="translated">이 메소드는 대기 호출 전 또는 대기 시작 후 내부 플래그가 true로 설정된 경우에만 &lt;code&gt;True&lt;/code&gt; 를 리턴 하므로 시간 종료가 지정되고 조작이 시간 종료 된 경우를 제외하고 항상 &lt;code&gt;True&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="4ff21d78bbca2c17f4b0d82e526fde8ca8233fe2" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; just before the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method starts until just after the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates. The module function &lt;a href=&quot;#threading.enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; returns a list of all alive threads.</source>
          <target state="translated">이 방법은 반환 &lt;code&gt;True&lt;/code&gt; 바로 전에 &lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 바로 끝날 때까지 방법 시작 &lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 메소드 종료. 모듈 함수 &lt;a href=&quot;#threading.enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt; 는 모든 활성 스레드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a190b6d357c92f8c7b4a848b7c388e4f2261012" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="22aa37bf3e1d9f077cbe89f01a870cfdf0411629" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f9228a481dfb5811e50b295f775925c61552270a" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="342409adab7e89643138c3e03259c386365fe00e" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask indicating which control(s) are currently being used as a recording source.</source>
          <target state="translated">이 메소드는 현재 레코딩 소스로 사용중인 컨트롤을 나타내는 비트 마스크를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aabfc7d3078e2a06d6d9b67f429a304a5721d434" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask specifying the available mixer controls (&amp;ldquo;Control&amp;rdquo; being a specific mixable &amp;ldquo;channel&amp;rdquo;, such as &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; or &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt;). This bitmask indicates a subset of all available mixer controls&amp;mdash;the &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; constants defined at module level. To determine if, for example, the current mixer object supports a PCM mixer, use the following Python code:</source>
          <target state="translated">이 메소드는 사용 가능한 믹서 컨트롤 ( &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; 또는 &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt; 와 같은 특정 혼합 가능한 &quot;채널&quot;인 &quot;Control&quot;)을 지정하는 비트 마스크를 반환합니다 . 이 비트 마스크는 사용 가능한 모든 믹서 컨트롤의 서브 세트 ( 모듈 레벨에서 정의 된 &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; 상수)를 나타냅니다 . 예를 들어 현재 믹서 객체가 PCM 믹서를 지원하는지 확인하려면 다음 Python 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="df978a925585d3eadcceedc0ad64b9fab01f1e83" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes instance that shares the buffer of the &lt;em&gt;source&lt;/em&gt; object. The &lt;em&gt;source&lt;/em&gt; object must support the writeable buffer interface. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">이 메소드는 &lt;em&gt;소스&lt;/em&gt; 오브젝트 의 버퍼를 공유하는 ctypes 인스턴스를 리턴 합니다. &lt;em&gt;소스&lt;/em&gt; 객체는 쓰기 버퍼 인터페이스를 지원한다. 선택적 &lt;em&gt;offset&lt;/em&gt; 매개 변수는 소스 버퍼에 대한 오프셋을 바이트 단위로 지정합니다. 기본값은 0입니다. 소스 버퍼가 충분히 크지 않으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ac71e792e2a9c33ac33b83b3b71a840f15b878ae" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance exported by a shared library. &lt;em&gt;name&lt;/em&gt; is the name of the symbol that exports the data, &lt;em&gt;library&lt;/em&gt; is the loaded shared library.</source>
          <target state="translated">이 메소드는 공유 라이브러리에서 내 보낸 ctypes 유형 인스턴스를 리턴합니다. &lt;em&gt;name&lt;/em&gt; 은 데이터를 내보내는 심볼의 이름이고 &lt;em&gt;library&lt;/em&gt; 는로드 된 공유 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="bb20e4aecb1fc974d47968af508b600ed3725864" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance using the memory specified by &lt;em&gt;address&lt;/em&gt; which must be an integer.</source>
          <target state="translated">이 메소드는 정수로 지정된 &lt;em&gt;address&lt;/em&gt; 로 지정된 메모리를 사용하여 ctypes 유형 인스턴스를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ec26fdb2340b8677da60daf61e4675ffcd3eae50" translate="yes" xml:space="preserve">
          <source>This method returns a list of 2-tuples of the form returned by &lt;code&gt;parseaddr()&lt;/code&gt;. &lt;em&gt;fieldvalues&lt;/em&gt; is a sequence of header field values as might be returned by &lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt;&lt;code&gt;Message.get_all&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a simple example that gets all the recipients of a message:</source>
          <target state="translated">이 메소드는 &lt;code&gt;parseaddr()&lt;/code&gt; 의해 리턴 된 양식의 2- 튜플 목록을 리턴합니다 . &lt;em&gt;fieldvalues&lt;/em&gt; 는 &lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt; &lt;code&gt;Message.get_all&lt;/code&gt; 에&lt;/a&gt; 의해 리턴 될 수있는 일련의 헤더 필드 값 입니다. 다음은 메시지의 모든 수신자를 가져 오는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="73e29a95cda80e7acb29a92567265c1de92af438" translate="yes" xml:space="preserve">
          <source>This method returns a list of column names. Immediately after a query, it is the first member of each tuple in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 열 이름 목록을 리턴합니다. 쿼리 직후, &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; &lt;/a&gt; 의 각 튜플의 첫 번째 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="55bc27e05f930af9d7a7a49446bfdd2fb906a983" translate="yes" xml:space="preserve">
          <source>This method returns a list of strings, one for each (non-system) method supported by the XML-RPC server.</source>
          <target state="translated">이 메소드는 XML-RPC 서버가 지원하는 각 (시스템이 아닌) 메소드마다 하나씩 문자열 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bae21ab56be3b0ade0440fb014f62c8a8187470a" translate="yes" xml:space="preserve">
          <source>This method returns an instance of StatsProfile, which contains a mapping of function names to instances of FunctionProfile. Each FunctionProfile instance holds information related to the function&amp;rsquo;s profile such as how long the function took to run, how many times it was called, etc&amp;hellip;</source>
          <target state="translated">이 메서드는 함수 이름을 FunctionProfile 인스턴스에 매핑하는 StatsProfile 인스턴스를 반환합니다. 각 FunctionProfile 인스턴스는 함수 실행에 걸린 시간, 호출 횟수 등과 같은 함수의 프로필과 관련된 정보를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="8b8fb986af78dbe250cc8c1951c634409b1ff5a1" translate="yes" xml:space="preserve">
          <source>This method returns the instance of &lt;code&gt;TestResult&lt;/code&gt; used by &lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;. It is not intended to be called directly, but can be overridden in subclasses to provide a custom &lt;code&gt;TestResult&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 사용하는 &lt;code&gt;TestResult&lt;/code&gt; 인스턴스를 리턴합니다 . 직접 호출하지는 않지만 서브 클래스에서 재정 의하여 사용자 정의 &lt;code&gt;TestResult&lt;/code&gt; 를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="708531771914c1b22ac7adc98a0e783146aec79d" translate="yes" xml:space="preserve">
          <source>This method rolls back any changes to the database since the last call to &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 마지막 &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt; 호출 이후 데이터베이스에 대한 변경 사항을 롤백합니다 .</target>
        </trans-unit>
        <trans-unit id="14b5b4167215d3c5124bc8670df033b6ee05ce7b" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt; 와 비슷한 용도로 사용 되지만 위치 인수 만 지원합니다. 이 인수의 튜플 반환해야 &lt;code&gt;args&lt;/code&gt; 받는 전달됩니다 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; unpickling에 방법을.</target>
        </trans-unit>
        <trans-unit id="bb9f7630faa4ba584cc2fcc2a9528f2d918a8feb" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt; 와 비슷한 용도로 사용 되지만 위치 인수 만 지원합니다. 피클 링 해제시 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 메서드에 전달 될 인수 &lt;code&gt;args&lt;/code&gt; 의 튜플을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1ca39179fbf1b58e9b5132d398a4ae61933bd01d" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'HEAD'&lt;/code&gt; request type: it sends the headers it would send for the equivalent &lt;code&gt;GET&lt;/code&gt; request. See the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; method for a more complete explanation of the possible headers.</source>
          <target state="translated">이 메소드는 &lt;code&gt;'HEAD'&lt;/code&gt; 요청 유형을 제공합니다. 해당 &lt;code&gt;GET&lt;/code&gt; 요청에 대해 전송할 헤더를 전송합니다 . 가능한 헤더에 대한 자세한 설명은 &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7dbd08df48e0a9432fc27f2d1dc359d154264c6" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'POST'&lt;/code&gt; request type, only allowed for CGI scripts. Error 501, &amp;ldquo;Can only POST to CGI scripts&amp;rdquo;, is output when trying to POST to a non-CGI url.</source>
          <target state="translated">이 방법은 &lt;code&gt;'POST'&lt;/code&gt; 요청 유형을 제공하며 CGI 스크립트에만 허용됩니다. CGI 이외의 URL에 POST를 시도하면 오류 501,&amp;ldquo;CGI 스크립트에만 POST 가능&amp;rdquo;이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="d8c66f9b775088a9351abd971856f1005e64496a" translate="yes" xml:space="preserve">
          <source>This method sets &lt;em&gt;tb&lt;/em&gt; as the new traceback for the exception and returns the exception object. It is usually used in exception handling code like this:</source>
          <target state="translated">이 메소드는 &lt;em&gt;tb&lt;/em&gt; 를 예외에 대한 새 역 추적으로 설정 하고 예외 오브젝트를 리턴합니다. 일반적으로 다음과 같은 예외 처리 코드에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="39b545ecb6df97965a21adfe6fe3076dc16d39bf" translate="yes" xml:space="preserve">
          <source>This method should be called from &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; by a formatter which wants to make use of a formatted time. This method can be overridden in formatters to provide for any specific requirement, but the basic behavior is as follows: if &lt;em&gt;datefmt&lt;/em&gt; (a string) is specified, it is used with &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to format the creation time of the record. Otherwise, the format &amp;lsquo;%Y-%m-%d %H:%M:%S,uuu&amp;rsquo; is used, where the uuu part is a millisecond value and the other letters are as per the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; documentation. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;. The resulting string is returned.</source>
          <target state="translated">이 메소드는 형식화 된 시간을 사용하려는 형식기에 의해 &lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 에서 호출되어야합니다 . 이 메소드는 특정 요구 사항을 제공하기 위해 포맷터에서 대체 될 수 있지만 기본 동작은 다음과 같습니다. &lt;em&gt;datefmt&lt;/em&gt; (문자열)가 지정된 경우 &lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt; 과 함께 사용 하여 레코드 작성 시간을 형식화합니다. 그렇지 않으면 '% Y- % m- % d % H : % M : % S, uuu'형식이 사용됩니다. 여기서 uuu 부분은 밀리 초 값이고 다른 문자는 &lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt; 설명서에 따릅니다 . 이 형식의 예제 시간은 &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; 입니다. 결과 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="60a2e03ebc40f5256939419e575a070656ab940e" translate="yes" xml:space="preserve">
          <source>This method should be called from handlers when an exception is encountered during an &lt;a href=&quot;#logging.Handler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt; call. If the module-level attribute &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, exceptions get silently ignored. This is what is mostly wanted for a logging system - most users will not care about errors in the logging system, they are more interested in application errors. You could, however, replace this with a custom handler if you wish. The specified record is the one which was being processed when the exception occurred. (The default value of &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as that is more useful during development).</source>
          <target state="translated">&lt;a href=&quot;#logging.Handler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt; 호출 중에 예외가 발생하면 핸들러에서이 메소드를 호출해야합니다 . 모듈 레벨 속성 &lt;code&gt;raiseExceptions&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 예외는 자동으로 무시됩니다. 이것은 대부분 로깅 시스템에 필요한 것입니다. 대부분의 사용자는 로깅 시스템의 오류에 신경 쓰지 않고 응용 프로그램 오류에 더 관심이 있습니다. 그러나 원하는 경우이를 사용자 정의 핸들러로 바꿀 수 있습니다. 지정된 레코드는 예외가 발생했을 때 처리되고있는 레코드입니다. (기본값 &lt;code&gt;raiseExceptions&lt;/code&gt; 은 이다 &lt;code&gt;True&lt;/code&gt; 그 개발 과정에서 더 유용하기 때문에,).</target>
        </trans-unit>
        <trans-unit id="a9d5481f5b1f23faa3969748474f218efddfdcb0" translate="yes" xml:space="preserve">
          <source>This method should never return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;None&lt;/code&gt; 을 반환해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="51cd700cee747b5ceb2075f98fd1f7dedbab9ae0" translate="yes" xml:space="preserve">
          <source>This method should not be overloaded in subclassed event loops. For custom exception handling, use the &lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt;&lt;code&gt;set_exception_handler()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 서브 클래스 이벤트 루프에서 오버로드되지 않아야합니다. 사용자 정의 예외 처리의 경우 &lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt; &lt;code&gt;set_exception_handler()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3eda0b07f66336a00c76b0b8ce3859da0cb22cfe" translate="yes" xml:space="preserve">
          <source>This method should not be used for generating security tokens. Use &lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt;&lt;code&gt;secrets.token_bytes()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 방법은 보안 토큰을 생성하는 데 사용해서는 안됩니다. 대신 &lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt; &lt;code&gt;secrets.token_bytes()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a065c99a954c6fdd1c3f8befb55be10a4fe3a9e9" translate="yes" xml:space="preserve">
          <source>This method should only be called by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations before executing the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; and by unit tests.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 와 연관된 작업을 실행하기 전에 &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 구현 및 단위 테스트에 의해서만 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="86c36ea786adb5a31a67ae740b8c3850457fbdb7" translate="yes" xml:space="preserve">
          <source>This method should only be used by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations and unit tests.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 구현 및 단위 테스트 에서만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="99aa205c4cdbbfefed6ade284534cab4156444b9" translate="yes" xml:space="preserve">
          <source>This method should only be used in low-level callback-based code.</source>
          <target state="translated">이 메소드는 저수준 콜백 기반 코드에서만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c1813fe7424980ca70bdf5ec66a9e369a420208" translate="yes" xml:space="preserve">
          <source>This method should return &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;NotImplemented&lt;/code&gt;. If it returns &lt;code&gt;True&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. If it returns &lt;code&gt;False&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is not considered a subclass of this ABC, even if it would normally be one. If it returns &lt;code&gt;NotImplemented&lt;/code&gt;, the subclass check is continued with the usual mechanism.</source>
          <target state="translated">이 메소드는 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;False&lt;/code&gt; 또는 &lt;code&gt;NotImplemented&lt;/code&gt; 를 반환해야합니다 . 이 반환하는 경우 &lt;code&gt;True&lt;/code&gt; 의 &lt;em&gt;서브 클래스는&lt;/em&gt; 이 ABC의 서브 클래스로 간주됩니다. &lt;code&gt;False&lt;/code&gt; 를 돌려주는 경우 , &lt;em&gt;서브 클래스&lt;/em&gt; 는 보통이 클래스의 ABC 일지라도,이 ABC의 서브 클래스로 간주되지 않습니다. &lt;code&gt;NotImplemented&lt;/code&gt; 를 리턴 하면 일반적인 메커니즘으로 서브 클래스 점검이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="599855f85a3a01b3230b2de2277a7a28ed0b8262" translate="yes" xml:space="preserve">
          <source>This method simplifies subclassing of &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; 의&lt;/a&gt; 서브 클래 싱을 단순화합니다 .</target>
        </trans-unit>
        <trans-unit id="7e52a16096b5729df1d34566cf03f37c1f7b86c3" translate="yes" xml:space="preserve">
          <source>This method sorts the list in place, using only &lt;code&gt;&amp;lt;&lt;/code&gt; comparisons between items. Exceptions are not suppressed - if any comparison operations fail, the entire sort operation will fail (and the list will likely be left in a partially modified state).</source>
          <target state="translated">이 방법 은 항목 간의 &lt;code&gt;&amp;lt;&lt;/code&gt; 비교 만 사용하여 목록을 제자리에 정렬합니다 . 예외는 표시되지 않습니다. 비교 작업이 실패하면 전체 정렬 작업이 실패하고 목록이 부분적으로 수정 된 상태로 남아있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74613f7f1f1bca337b67bbd492f7c5eb7f319eab" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">이 방법은 다음과 같은 선 경계로 나뉩니다. 특히, 경계는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;보편적 개행&lt;/a&gt; 의 상위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="cc412fbe85cc5444d1336061a20d0efe52aa3575" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">이 방법은 다음 선 경계에서 분할됩니다. 특히 경계는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;보편적 인 줄 바꿈&lt;/a&gt; 의 상위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="58a68da18b44c96bba6604dc7f18a0823ef4fdfd" translate="yes" xml:space="preserve">
          <source>This method supports hostname checking via &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt; 및 &lt;em&gt;서버 이름 표시&lt;/em&gt; 를 통한 호스트 이름 확인을 지원합니다 ( &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cd8fdaf763e9fa8074cf2ca63bc90b4b3cda9085" translate="yes" xml:space="preserve">
          <source>This method takes a single argument &lt;em&gt;arg_line&lt;/em&gt; which is a string read from the argument file. It returns a list of arguments parsed from this string. The method is called once per line read from the argument file, in order.</source>
          <target state="translated">이 메소드는 인수 파일에서 읽은 문자열 인 단일 인수 &lt;em&gt;arg_line&lt;/em&gt; 을 사용합니다. 이 문자열에서 구문 분석 된 인수 목록을 리턴합니다. 이 메소드는 인수 파일에서 읽은 행당 한 번씩 순서대로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5c760fe49109a77818baccf2f47804b109f3c544" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns a documentation string describing the use of that method. If no such string is available, an empty string is returned. The documentation string may contain HTML markup.</source>
          <target state="translated">이 메소드는 XML-RPC 서버에 의해 구현 된 메소드의 이름 인 하나의 매개 변수를 사용합니다. 해당 메소드의 사용법을 설명하는 문서 문자열을 리턴합니다. 이러한 문자열을 사용할 수 없으면 빈 문자열이 반환됩니다. 설명서 문자열에 HTML 마크 업이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5893c1e14198034d5092ae81f02a960d68bc8da" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns an array of possible signatures for this method. A signature is an array of types. The first of these types is the return type of the method, the rest are parameters.</source>
          <target state="translated">이 메소드는 XML-RPC 서버에 의해 구현 된 메소드의 이름 인 하나의 매개 변수를 사용합니다. 이 메소드에 대해 가능한 서명 배열을 리턴합니다. 서명은 유형의 배열입니다. 이 유형 중 첫 번째는 메소드의 리턴 유형이고 나머지는 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="818723afff8c189eecbb4fe7facf10c8cc63fb17" translate="yes" xml:space="preserve">
          <source>This method terminates the program, exiting with the specified &lt;em&gt;status&lt;/em&gt; and, if given, it prints a &lt;em&gt;message&lt;/em&gt; before that. The user can override this method to handle these steps differently:</source>
          <target state="translated">이 메소드는 프로그램을 종료하고 지정된 &lt;em&gt;상태로&lt;/em&gt; 종료하며 주어진 경우 그 전에 &lt;em&gt;메시지&lt;/em&gt; 를 인쇄 합니다. 사용자는이 단계를 다르게 처리하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de6c72c35c2834f0369b1a4c798dc2bca2a384c4" translate="yes" xml:space="preserve">
          <source>This method transforms option names on every read, get, or set operation. The default converts the name to lowercase. This also means that when a configuration file gets written, all keys will be lowercase. Override this method if that&amp;rsquo;s unsuitable. For example:</source>
          <target state="translated">이 메소드는 모든 읽기, 가져 오기 또는 설정 조작에서 옵션 이름을 변환합니다. 기본값은 이름을 소문자로 변환합니다. 이는 또한 구성 파일을 작성할 때 모든 키가 소문자임을 의미합니다. 부적절한 경우이 방법을 재정의하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1974694405c4c9389267ffd50b26d56c3503926c" translate="yes" xml:space="preserve">
          <source>This method waits until the lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">잠금이 될 때까지이 방법은 대기 &lt;em&gt;잠금 해제&lt;/em&gt; ,로 설정 &lt;em&gt;잠겨&lt;/em&gt; 반환 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65f3add9f9cd63e05cc5f580948a304e6648c4a7" translate="yes" xml:space="preserve">
          <source>This method waits until the underlying lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">기본 잠금이 될 때까지이 방법은 대기 &lt;em&gt;잠금 해제&lt;/em&gt; ,로 설정 &lt;em&gt;잠겨&lt;/em&gt; 반환 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="454a025121549fe2bea2c118dd6191bd13eb086c" translate="yes" xml:space="preserve">
          <source>This method wakes up at most &lt;em&gt;n&lt;/em&gt; of the threads waiting for the condition variable; it is a no-op if no threads are waiting.</source>
          <target state="translated">이 메소드 는 조건 변수를 기다리는 최대 &lt;em&gt;n 개의&lt;/em&gt; 스레드를 깨 웁니다 . 대기중인 스레드가 없으면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c2a082dfc19e539c561f64a6a5f07e702f02adc" translate="yes" xml:space="preserve">
          <source>This method will be called before any protocol-specific open method.</source>
          <target state="translated">이 메소드는 프로토콜 별 공개 메소드보다 먼저 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6efbbee23467f399d8225dc8abd523590b461d19" translate="yes" xml:space="preserve">
          <source>This method will parse and dispatch the request to the appropriate &lt;code&gt;do_*()&lt;/code&gt; method. You should never need to override it.</source>
          <target state="translated">이 메소드는 요청을 구문 분석하여 적절한 &lt;code&gt;do_*()&lt;/code&gt; 메소드로 전달합니다. 이를 무시할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cce13a8e7f0704d679b6f2119c6dcb9637067db5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt;&lt;code&gt;HAS_ALPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 방법은 올릴 것이다 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 을&lt;/a&gt; 경우 &lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt; &lt;code&gt;HAS_ALPN&lt;/code&gt; 이&lt;/a&gt; 있다 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f46ac96b947124dc48db380e519a659d718834f5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_NPN&quot;&gt;&lt;code&gt;HAS_NPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 방법은 올릴 것이다 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 을&lt;/a&gt; 경우 &lt;a href=&quot;#ssl.HAS_NPN&quot;&gt; &lt;code&gt;HAS_NPN&lt;/code&gt; 이&lt;/a&gt; 있다 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2af3b76ebd9cb9d935d4351697b99510998fe707" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the OpenSSL library had OPENSSL_NO_TLSEXT defined when it was built.</source>
          <target state="translated">이 방법은 올릴 것이다 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 에는 OpenSSL 라이브러리가 있다면 그 때 만들어진 OPENSSL_NO_TLSEXT 정의.</target>
        </trans-unit>
        <trans-unit id="d4e07593c623f5c1c4618b8ae83e426642a79bb4" translate="yes" xml:space="preserve">
          <source>This method will raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if called more than once on the same thread object.</source>
          <target state="translated">이 메소드는 같은 스레드 객체에서 두 번 이상 호출되면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="cae724061ea4a293baa1b5febb7652b6d04b5e39" translate="yes" xml:space="preserve">
          <source>This method will return normally if the mail is accepted for at least one recipient. Otherwise it will raise an exception. That is, if this method does not raise an exception, then someone should get your mail. If this method does not raise an exception, it returns a dictionary, with one entry for each recipient that was refused. Each entry contains a tuple of the SMTP error code and the accompanying error message sent by the server.</source>
          <target state="translated">이 방법은 적어도 한 명의 수신자에게 메일이 수락되면 정상적으로 반환됩니다. 그렇지 않으면 예외가 발생합니다. 즉,이 방법으로 예외가 발생하지 않으면 누군가 메일을 받아야합니다. 이 메소드에서 예외가 발생하지 않으면 거부 된 각 수신자에 대해 하나의 항목이있는 사전을 리턴합니다. 각 항목에는 SMTP 오류 코드의 튜플과 서버에서 보낸 오류 메시지가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="74d1b69630acadad9b7316b4df18afcaf8f4226d" translate="yes" xml:space="preserve">
          <source>This method will return when the &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; method returns a true value. The &lt;em&gt;stop&lt;/em&gt; argument to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; is the return value from the command&amp;rsquo;s corresponding &lt;code&gt;do_*()&lt;/code&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt; 메소드가 true 값 을 리턴 할 때 리턴됩니다 . &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt; 대한 &lt;em&gt;stop&lt;/em&gt; 인수 는 명령의 해당 &lt;code&gt;do_*()&lt;/code&gt; 메소드 에서 리턴 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="69b9279828888f5b4b6bbb18c43609074bb5f6ee" translate="yes" xml:space="preserve">
          <source>This method will try to establish the connection in the background. When successful, it returns a &lt;code&gt;(transport, protocol)&lt;/code&gt; pair.</source>
          <target state="translated">이 방법은 백그라운드에서 연결을 시도합니다. 성공하면 &lt;code&gt;(transport, protocol)&lt;/code&gt; 쌍을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2662a58cbe744756d2713c9a530353fadec108dd" translate="yes" xml:space="preserve">
          <source>This method works regardless of the warning filters in place when it is called.</source>
          <target state="translated">이 메소드는 호출 될 때 경고 필터와 상관없이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7b56ad7816b033a457026b1ed0aa528822772c71" translate="yes" xml:space="preserve">
          <source>This method&amp;rsquo;s behavior is the same as &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;call_later()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드의 동작은 &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;call_later()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e306011db50281eb5bb9fe7c8f6f67913bf9062d" translate="yes" xml:space="preserve">
          <source>This method, and others that indirectly call this method, raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata&lt;/code&gt; with argument &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">이 메소드와이 메소드를 간접적으로 호출하는 다른 메소드 는 인수 &lt;code&gt;address&lt;/code&gt; 로&lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.cdata&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="11a5f76d1a1de12dfdacfbc20e9a68e9c9a3edcf" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;response&lt;/em&gt; will be an object implementing the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The return value should implement the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정의 된 경우이 메소드는 상위 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 . &lt;em&gt;req&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체입니다. &lt;em&gt;response&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt; 의 반환 값과 동일한 인터페이스를 구현하는 객체 입니다. 리턴 값은 &lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt; 의 리턴 값과 동일한 인터페이스를 구현해야합니다. .</target>
        </trans-unit>
        <trans-unit id="c12714c6416b6db1ab32f9c47808d5ed1c2f903a" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. The return value should be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">정의 된 경우이 메소드는 상위 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 . &lt;em&gt;req&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체입니다. 반환 값은 &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 이어야합니다 객체 합니다.</target>
        </trans-unit>
        <trans-unit id="c4c637f6f9eb7d72ffa0912f73fd5eb7c803c82b" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;code&gt;default_open()&lt;/code&gt;.</source>
          <target state="translated">정의 된 경우이 메소드는 상위 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 . 반환 값은 &lt;code&gt;default_open()&lt;/code&gt; 과 같아야합니다. .</target>
        </trans-unit>
        <trans-unit id="91c65ff111e1b6434d9b1648e2e33858b7b6ac47" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the &lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt;&lt;code&gt;default_open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구현 된 경우이 메소드는 &lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 . 반환 값은 &lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt; &lt;code&gt;default_open()&lt;/code&gt; &lt;/a&gt; 과 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="c5568e01d897e76cde8a8512a2cf117dff860535" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. It should return a file-like object as described in the return value of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. It should raise &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;, unless a truly exceptional thing happens (for example, &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; should not be mapped to &lt;code&gt;URLError&lt;/code&gt;).</source>
          <target state="translated">구현 된 경우이 메소드는 상위 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 . 의 리턴 값에 기재된는 파일과 같은 객체를 반환한다 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;None&lt;/code&gt; . 그것은 인상해야 &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; 을&lt;/a&gt; 진정으로 특별한 일이 발생하지 않는 한 (예를 들어, &lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; 의이&lt;/a&gt; 매핑되지 않아야 &lt;code&gt;URLError&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1cadef953272decef8c8b33d266fff351c8a60bd" translate="yes" xml:space="preserve">
          <source>This mimics the &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; which is used when displaying exception frames.</source>
          <target state="translated">이것은 예외 프레임을 표시 할 때 사용되는 &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; 모방합니다 .</target>
        </trans-unit>
        <trans-unit id="f27374d3cea4c4b16cf991cf67775d4e667a191c" translate="yes" xml:space="preserve">
          <source>This module &lt;em&gt;does not&lt;/em&gt; access the internet. All of the components needed to bootstrap &lt;code&gt;pip&lt;/code&gt; are included as internal parts of the package.</source>
          <target state="translated">이 모듈 &lt;em&gt;은&lt;/em&gt; 인터넷에 액세스 &lt;em&gt;하지 않습니다&lt;/em&gt; . &lt;code&gt;pip&lt;/code&gt; 부트 스트랩에 필요한 모든 구성 요소 는 패키지의 내부 부품으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c0e744d6e6221a3e7f181931436252486b1aba6e" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">이 모듈 은 ZIP 형식 아카이브에서 Python 모듈 ( &lt;code&gt;*.py&lt;/code&gt; , &lt;code&gt;*.pyc&lt;/code&gt; ) 및 패키지 를 가져 오는 기능을 추가합니다 . 일반적으로 &lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt; 모듈을 명시 적으로 사용할 필요는 없습니다 . ZIP 아카이브의 경로 인 &lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 항목 에 대한 내장 된 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 메커니즘 에서 자동으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d0045b1a71aeae376eb9db26e5ff98175be2978" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">이 모듈 은 ZIP 형식 아카이브에서 Python 모듈 ( &lt;code&gt;*.py&lt;/code&gt; , &lt;code&gt;*.pyc&lt;/code&gt; ) 및 패키지 를 가져 오는 기능을 추가합니다 . 일반적으로 &lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt; 모듈을 명시 적으로 사용할 필요는 없습니다 . ZIP 아카이브의 경로 인 &lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 항목 에 대해 내장 된 &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 메커니즘 에서 자동으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f143dd25b8da97a54f728f8c06662f767545245d" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 파이썬 프로그램이 문자열이 &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;키워드&lt;/a&gt; 인지를 결정할 수 있도록 합니다 .</target>
        </trans-unit>
        <trans-unit id="4b8b243423ae5bd9c91dd1e9a526289e44d74151" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a keyword.</source>
          <target state="translated">이 모듈은 파이썬 프로그램이 문자열이 키워드인지 판단 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="7a344df928c4cfb82fbfa17dc83438dd90f3e913" translate="yes" xml:space="preserve">
          <source>This module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use this module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; 기반한 높은 수준의 효율적인 I / O 멀티플렉싱을 허용합니다. 모듈 프리미티브에 . 사용 된 OS 레벨 프리미티브에 대한 정확한 제어를 원하지 않는 한이 모듈을 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2497fcaaad8ea0358d7a8a416fbf748a8e8d4ce1" translate="yes" xml:space="preserve">
          <source>This module allows you to access the OSS (Open Sound System) audio interface. OSS is available for a wide range of open-source and commercial Unices, and is the standard audio interface for Linux and recent versions of FreeBSD.</source>
          <target state="translated">이 모듈을 사용하면 OSS (Open Sound System) 오디오 인터페이스에 액세스 할 수 있습니다. OSS는 광범위한 오픈 소스 및 상업용 Unices에서 사용 가능하며 Linux 및 최신 버전의 FreeBSD 용 표준 오디오 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="3f201a3a0b0cb503f8a57a3dc19445c2c4016892" translate="yes" xml:space="preserve">
          <source>This module allows you to output calendars like the Unix &lt;strong&gt;cal&lt;/strong&gt; program, and provides additional useful functions related to the calendar. By default, these calendars have Monday as the first day of the week, and Sunday as the last (the European convention). Use &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; to set the first day of the week to Sunday (6) or to any other weekday. Parameters that specify dates are given as integers. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">이 모듈을 사용하면 Unix &lt;strong&gt;cal&lt;/strong&gt; 프로그램 과 같은 캘린더를 출력 할 수 있으며 캘린더와 관련된 추가 유용한 기능을 제공합니다. 기본적으로이 달력은 월요일을 요일의 첫 번째 날로, 일요일을 마지막 날 (유럽 컨벤션)로 사용합니다. &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt; &lt;code&gt;setfirstweekday()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 요일을 일요일 (6) 또는 다른 요일로 설정하십시오. 날짜를 지정하는 매개 변수는 정수로 제공됩니다. 관련 기능에 대해서는 &lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 모듈 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="debb877f25fbd139c21cf06dbc17a54349a6899d" translate="yes" xml:space="preserve">
          <source>This module also defines all the constants needed to work with the functions provided here; these have the same name as their counterparts in C. Please refer to your system documentation for more information on using these terminal control interfaces.</source>
          <target state="translated">이 모듈은 또한 여기에 제공된 기능으로 작업하는 데 필요한 모든 상수를 정의합니다. 이 이름은 C의 해당 이름과 동일합니다. 이러한 터미널 제어 인터페이스 사용에 대한 자세한 내용은 시스템 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5343f12ad5e1686e3ae53b2b2900840cf269d422" translate="yes" xml:space="preserve">
          <source>This module also defines the following constant:</source>
          <target state="translated">이 모듈은 또한 다음 상수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b40ece587755cd89be338849c6922046774089a9" translate="yes" xml:space="preserve">
          <source>This module also provides one additional data object:</source>
          <target state="translated">이 모듈은 하나의 추가 데이터 객체도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="23b455a7f66c43c727ec2c3899d0f41037a1b5dd" translate="yes" xml:space="preserve">
          <source>This module also provides the following helper function:</source>
          <target state="translated">이 모듈은 또한 다음과 같은 도우미 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="453b9e5ac31c8143201074542d26931d4cb7ac6a" translate="yes" xml:space="preserve">
          <source>This module also provides the following legacy functions from the 2.x &lt;code&gt;commands&lt;/code&gt; module. These operations implicitly invoke the system shell and none of the guarantees described above regarding security and exception handling consistency are valid for these functions.</source>
          <target state="translated">이 모듈은 2.x &lt;code&gt;commands&lt;/code&gt; 모듈 에서 다음과 같은 레거시 기능도 제공합니다 . 이러한 작업은 시스템 셸을 암시 적으로 호출하며 보안 및 예외 처리 일관성과 관련하여 위에서 설명한 보증 중 어느 것도 이러한 기능에 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67b52231769e79c56d292bad90dd4f9002d23b03" translate="yes" xml:space="preserve">
          <source>This module builds on the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; infrastructure, simplifying asynchronous clients and servers and making it easier to handle protocols whose elements are terminated by arbitrary strings, or are of variable length. &lt;a href=&quot;#module-asynchat&quot;&gt;&lt;code&gt;asynchat&lt;/code&gt;&lt;/a&gt; defines the abstract class &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; that you subclass, providing implementations of the &lt;code&gt;collect_incoming_data()&lt;/code&gt; and &lt;code&gt;found_terminator()&lt;/code&gt; methods. It uses the same asynchronous loop as &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt;, and the two types of channel, &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;, can freely be mixed in the channel map. Typically an &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; server channel generates new &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; channel objects as it receives incoming connection requests.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt; 인프라를 기반으로하며 비동기 클라이언트 및 서버를 단순화하고 임의의 문자열로 끝나거나 길이가 가변적 인 요소를 가진 프로토콜을보다 쉽게 ​​처리 할 수 ​​있습니다. &lt;a href=&quot;#module-asynchat&quot;&gt; &lt;code&gt;asynchat&lt;/code&gt; &lt;/a&gt; 은 서브 클래스 인 추상 클래스 &lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt; 을 정의하여 &lt;code&gt;collect_incoming_data()&lt;/code&gt; 및 &lt;code&gt;found_terminator()&lt;/code&gt; 메소드의 구현을 제공 합니다. &lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt; 와 동일한 비동기 루프를 사용하며 두 가지 유형의 채널 인 &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt; 은 채널 맵에서 자유롭게 혼합 될 수 있습니다. 일반적으로 &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt; 서버 채널은 새로운&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt; 채널 오브젝트는 들어오는 연결 요청을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="98f43e7da0a9f23b86507c38867da0294f836744" translate="yes" xml:space="preserve">
          <source>This module can be used with the &amp;ldquo;classic&amp;rdquo; ndbm interface or the GNU GDBM compatibility interface. On Unix, the &lt;strong&gt;configure&lt;/strong&gt; script will attempt to locate the appropriate header file to simplify building this module.</source>
          <target state="translated">이 모듈은 &quot;클래식&quot;ndbm 인터페이스 또는 GNU GDBM 호환성 인터페이스와 함께 사용할 수 있습니다. Unix에서 &lt;strong&gt;configure&lt;/strong&gt; 스크립트는이 모듈 빌드를 단순화하기 위해 적절한 헤더 파일을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="d879b78f431d58b588b47163f45ee538b41d3e4e" translate="yes" xml:space="preserve">
          <source>This module can work as a script (using &lt;strong&gt;python -m compileall&lt;/strong&gt;) to compile Python sources.</source>
          <target state="translated">이 모듈은 &lt;strong&gt;python -m compileall을&lt;/strong&gt; 사용하여 Python 소스를 컴파일 하는 스크립트로 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f19e9fa6736be7e193744521cb04edacae210533" translate="yes" xml:space="preserve">
          <source>This module constructs higher-level threading interfaces on top of the lower level &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. See also the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈은 하위 레벨 &lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt; 모듈 위에 상위 레벨 스레딩 인터페이스를 구성 합니다. &lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt; 모듈 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="861c68e15668a5b39d713349ea83ffbbd4181c50" translate="yes" xml:space="preserve">
          <source>This module contains definitions for the UIText and ActionText tables, for the standard installer actions.</source>
          <target state="translated">이 모듈에는 표준 설치 프로그램 조치에 대한 UIText 및 ActionText 테이블에 대한 정의가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3077916ec25e86b9e1f4841b136b1ecadd40c210" translate="yes" xml:space="preserve">
          <source>This module contains functions that can read and write Python values in a binary format. The format is specific to Python, but independent of machine architecture issues (e.g., you can write a Python value to a file on a PC, transport the file to a Sun, and read it back there). Details of the format are undocumented on purpose; it may change between Python versions (although it rarely does). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">이 모듈에는 이진 형식으로 Python 값을 읽고 쓸 수있는 함수가 포함되어 있습니다. 형식은 Python에만 적용되지만 머신 아키텍처 문제와는 무관합니다 (예 : PC의 파일에 Python 값을 쓰고 파일을 Sun으로 전송 한 다음 다시 읽을 수 있음). 형식의 세부 사항은 의도적으로 문서화되어 있지 않습니다. 파이썬 버전간에 변경 될 수 있습니다 (드물지만 거의 없습니다). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5039b7f4c8b295a097141026f69aa1f45aeae2f4" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">이 모듈에는 명시 적으로, 오류, 시간 초과 후 또는 사용자 신호에서 Python 추적을 덤프하는 기능이 포함되어 있습니다. &lt;code&gt;SIGSEGV&lt;/code&gt; , &lt;code&gt;SIGFPE&lt;/code&gt; , &lt;code&gt;SIGABRT&lt;/code&gt; , &lt;code&gt;SIGBUS&lt;/code&gt; 및 &lt;code&gt;SIGILL&lt;/code&gt; 신호에 대한 결함 핸들러를 설치하려면 &lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt; 환경 변수 를 설정 하거나 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; 명령 줄 옵션 을 사용하여 시작할 때 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b52a978975d71fcca58a0f40ff04d9cf68c4036e" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">이 모듈에는 오류, 시간 초과 또는 사용자 신호에 대해 명시 적으로 Python 트레이스 백을 덤프하는 함수가 포함되어 있습니다. &lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;code&gt;SIGSEGV&lt;/code&gt; , &lt;code&gt;SIGFPE&lt;/code&gt; , &lt;code&gt;SIGABRT&lt;/code&gt; , &lt;code&gt;SIGBUS&lt;/code&gt; 및 &lt;code&gt;SIGILL&lt;/code&gt; 신호에 대한 결함 처리기를 설치 합니다. &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt; 환경 변수 를 설정 하거나 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; 명령 줄 옵션 을 사용하여 시작시 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc8882528ecb71642481be204e6186fd1051ed37" translate="yes" xml:space="preserve">
          <source>This module contains table contents for the standard sequence tables: &lt;em&gt;AdminExecuteSequence&lt;/em&gt;, &lt;em&gt;AdminUISequence&lt;/em&gt;, &lt;em&gt;AdvtExecuteSequence&lt;/em&gt;, &lt;em&gt;InstallExecuteSequence&lt;/em&gt;, and &lt;em&gt;InstallUISequence&lt;/em&gt;.</source>
          <target state="translated">이 모듈에는 표준 시퀀스 테이블에 대한 테이블 내용 ( &lt;em&gt;AdminExecuteSequence&lt;/em&gt; , &lt;em&gt;AdminUISequence&lt;/em&gt; , &lt;em&gt;AdvtExecuteSequence&lt;/em&gt; , &lt;em&gt;InstallExecuteSequence&lt;/em&gt; 및 &lt;em&gt;InstallUISequence)이 포함&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="b9f903356d17a57da3cbd225b09902afef1cc9e4" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">이 모듈에는 모듈 찾기 및로드를 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 데 도움이되는 다양한 개체가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07eb4a6cd418f5286cb52fb731527861274ba7e6" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">이 모듈은 도움이 다양한 개체가 들어 &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 찾기 및로드 모듈을.</target>
        </trans-unit>
        <trans-unit id="42ecc856b406c93d72b3abcd42ac7453b164bdd7" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;임포터&lt;/a&gt; 구성에 도움이되는 다양한 개체가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="beb3ad2cbe52b6da763c19513f29af1ada22f232" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;임포터&lt;/a&gt; 구성에 도움이되는 다양한 개체가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04c30f14c660f82a69840aef1a06450c1039fd25" translate="yes" xml:space="preserve">
          <source>This module contains various constants relating to the intimate details of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, some lengthy comments about the implementation, and a few useful functions for analyzing pickled data. The contents of this module are useful for Python core developers who are working on the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;; ordinary users of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module probably won&amp;rsquo;t find the &lt;a href=&quot;#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; module relevant.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 모듈의 세부적인 내용 , 구현에 대한 자세한 설명 및 피클 링 된 데이터 분석을위한 몇 가지 유용한 기능과 관련된 다양한 상수가 포함되어 있습니다 . 이 모듈의 내용은 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 작업을하는 Python 핵심 개발자에게 유용합니다 . &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 모듈 의 일반 사용자 는 &lt;a href=&quot;#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt; 모듈과 관련 이 없을 것입니다 .</target>
        </trans-unit>
        <trans-unit id="f4495708855b5105fbffdba645bc8b7765dc4e32" translate="yes" xml:space="preserve">
          <source>This module creates temporary files and directories. It works on all supported platforms. &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt;&lt;code&gt;NamedTemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt;&lt;code&gt;TemporaryDirectory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt;&lt;code&gt;SpooledTemporaryFile&lt;/code&gt;&lt;/a&gt; are high-level interfaces which provide automatic cleanup and can be used as context managers. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; are lower-level functions which require manual cleanup.</source>
          <target state="translated">이 모듈은 임시 파일과 디렉토리를 만듭니다. 지원되는 모든 플랫폼에서 작동합니다. &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt; &lt;code&gt;NamedTemporaryFile&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt; &lt;code&gt;TemporaryDirectory&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt; &lt;code&gt;SpooledTemporaryFile&lt;/code&gt; &lt;/a&gt; 은 자동 정리를 제공하고 컨텍스트 관리자로 사용할 수있는 고급 인터페이스입니다. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt; 는 수동 정리가 필요한 하위 레벨 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1fb63ae15e15adc2fac701d486eb6ae65fd3a9db" translate="yes" xml:space="preserve">
          <source>This module defines a class &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; which serves as the basis for parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML.</source>
          <target state="translated">이 모듈은 HTML (HyperText Mark-up Language) 및 XHTML 형식의 텍스트 파일을 구문 분석하기위한 기초로 사용되는 &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt; 클래스를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="c5b51fe9b44470a4a81daa6484a674a50d74f512" translate="yes" xml:space="preserve">
          <source>This module defines a class, &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, which encapsulates a connection to a POP3 server and implements the protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class supports both the minimal and optional command sets from &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class also supports the &lt;code&gt;STLS&lt;/code&gt; command introduced in &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; to enable encrypted communication on an already established connection.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt; 클래스를 정의하고 POP3 서버에 대한 연결을 캡슐화하고 &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939에&lt;/strong&gt;&lt;/a&gt; 정의 된 프로토콜을 구현합니다 . &lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; 의&lt;/a&gt; 클래스를 모두 지원에서 최소 및 선택적 명령 세트 &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt; . &lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; 의&lt;/a&gt; 클래스는 지원 &lt;code&gt;STLS&lt;/code&gt; 의 도입 명령 &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; 이미 설정된 연결에 암호화 된 통신을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="1618ac7e65a20cb21e0876627584ef0952f4e004" translate="yes" xml:space="preserve">
          <source>This module defines a number of classes, which are detailed in the sections below.</source>
          <target state="translated">이 모듈은 여러 섹션을 정의하며 아래 섹션에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="11a2a01ddba0f2fb875e220a02c816a36dd3839e" translate="yes" xml:space="preserve">
          <source>This module defines a number of utilities for use by CGI scripts written in Python.</source>
          <target state="translated">이 모듈은 Python으로 작성된 CGI 스크립트에서 사용할 여러 유틸리티를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="48800cb2b61c0cb68840665bc7065117a5b5c588" translate="yes" xml:space="preserve">
          <source>This module defines a standard interface to break Uniform Resource Locator (URL) strings up in components (addressing scheme, network location, path etc.), to combine the components back into a URL string, and to convert a &amp;ldquo;relative URL&amp;rdquo; to an absolute URL given a &amp;ldquo;base URL.&amp;rdquo;</source>
          <target state="translated">이 모듈은 구성 요소 (주소 지정 체계, 네트워크 위치, 경로 등)에서 URL (Uniform Resource Locator) 문자열을 분리하고 구성 요소를 다시 URL 문자열로 결합하고 &quot;상대 URL&quot;을 '기본 URL'이 제공된 절대 URL</target>
        </trans-unit>
        <trans-unit id="cc5d1611a8f8acccc4d6cf1756c216896a066e42" translate="yes" xml:space="preserve">
          <source>This module defines an exception:</source>
          <target state="translated">이 모듈은 예외를 정의합니다 :</target>
        </trans-unit>
        <trans-unit id="872203bde3e3135352e338fe96a0f66f7787e1a6" translate="yes" xml:space="preserve">
          <source>This module defines an object type which can compactly represent an array of basic values: characters, integers, floating point numbers. Arrays are sequence types and behave very much like lists, except that the type of objects stored in them is constrained. The type is specified at object creation time by using a &lt;em&gt;type code&lt;/em&gt;, which is a single character. The following type codes are defined:</source>
          <target state="translated">이 모듈은 문자, 정수, 부동 소수점 숫자와 같은 기본 값의 배열을 간단하게 나타낼 수있는 객체 유형을 정의합니다. 배열은 시퀀스 유형이며 저장된 객체 유형이 제한된다는 점을 제외하면 목록과 매우 유사하게 작동합니다. 유형은 단일 문자 인 &lt;em&gt;유형 코드&lt;/em&gt; 를 사용하여 오브젝트 작성시 지정됩니다 . 다음 유형 코드가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b6850df64d4f421a1439f98e4bd7078f7c6cd6c4" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 표준 Python 코덱 (인코더 및 디코더)의 기본 클래스를 정의하고 코덱 및 오류 처리 조회 프로세스를 관리하는 내부 Python 코덱 레지스트리에 대한 액세스를 제공합니다. 대부분의 표준 코덱은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;텍스트 인코딩으로&lt;/a&gt; 텍스트를 바이트로 인코딩하지만 텍스트를 텍스트로 인코딩하고 바이트를 바이트로 인코딩하는 코덱도 제공됩니다. 사용자 정의 코덱은 임의의 유형간에 인코딩 및 디코딩 할 수 있지만 일부 모듈 기능은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;텍스트 인코딩&lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 인코딩 된 코덱 과 함께 사용하도록 특별히 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab7ad5c272bc9df1e33e06d24d65ae2e29bd9139" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 표준 Python 코덱 (인코더 및 디코더)에 대한 기본 클래스를 정의하고 코덱 및 오류 처리 조회 프로세스를 관리하는 내부 Python 코덱 레지스트리에 대한 액세스를 제공합니다. 대부분의 표준 코덱은 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;텍스트&lt;/a&gt; 를 바이트로 인코딩하는 텍스트 인코딩이지만 텍스트를 텍스트로, 바이트를 바이트로 인코딩하는 코덱도 제공됩니다. 사용자 정의 코덱은 임의의 유형간에 인코딩 및 디코딩 할 수 있지만 일부 모듈 기능은 특별히 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;텍스트 인코딩&lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 인코딩하는 코덱 과 함께 사용하도록 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="78eff0b82345640196ebee3d8065f4a5a2881ddd" translate="yes" xml:space="preserve">
          <source>This module defines classes for implementing HTTP servers (Web servers).</source>
          <target state="translated">이 모듈은 HTTP 서버 (웹 서버)를 구현하기위한 클래스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="de3d04d963619a18276579b0870d1fcddb37dadd" translate="yes" xml:space="preserve">
          <source>This module defines classes which implement the client side of the HTTP and HTTPS protocols. It is normally not used directly &amp;mdash; the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; uses it to handle URLs that use HTTP and HTTPS.</source>
          <target state="translated">이 모듈은 HTTP 및 HTTPS 프로토콜의 클라이언트 측을 구현하는 클래스를 정의합니다. 일반적으로 직접 사용되지는 않습니다. &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt; 모듈 은이를 사용하여 HTTP 및 HTTPS를 사용하는 URL을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="e8cdc9da4c49a5a72d18f9f680dbe51d429c4110" translate="yes" xml:space="preserve">
          <source>This module defines four dictionaries, &lt;a href=&quot;#html.entities.html5&quot;&gt;&lt;code&gt;html5&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.name2codepoint&quot;&gt;&lt;code&gt;name2codepoint&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.codepoint2name&quot;&gt;&lt;code&gt;codepoint2name&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#html.entities.entitydefs&quot;&gt;&lt;code&gt;entitydefs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 네 개의 사전 정의 &lt;a href=&quot;#html.entities.html5&quot;&gt; &lt;code&gt;html5&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#html.entities.name2codepoint&quot;&gt; &lt;code&gt;name2codepoint&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#html.entities.codepoint2name&quot;&gt; &lt;code&gt;codepoint2name&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#html.entities.entitydefs&quot;&gt; &lt;code&gt;entitydefs&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b3c1b33a5dc7198cf9a5077bb81a5d371ff01f8" translate="yes" xml:space="preserve">
          <source>This module defines four enumeration classes that can be used to define unique sets of names and values: &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;. It also defines one decorator, &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt;, and one helper, &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 고유 한 이름과 값 집합을 정의하는 데 사용할 수있는 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; 의&lt;/a&gt; 네 가지 열거 클래스를 정의합니다 . 또한 하나의 데코레이터, &lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt; 및 하나의 도우미 &lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; 를 정의&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a43956eb1cff944bb000135e22a68e274523884e" translate="yes" xml:space="preserve">
          <source>This module defines functions and classes which implement a flexible event logging system for applications and libraries.</source>
          <target state="translated">이 모듈은 응용 프로그램 및 라이브러리를위한 유연한 이벤트 로깅 시스템을 구현하는 기능 및 클래스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9a838d0810c484aa7da738cbc9408bd383a315fc" translate="yes" xml:space="preserve">
          <source>This module defines several types that are subclasses of pre-existing standard library classes which also extend &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; to support type variables inside &lt;code&gt;[]&lt;/code&gt;. These types became redundant in Python 3.9 when the corresponding pre-existing classes were enhanced to support &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt; 을 확장 하여 &lt;code&gt;[]&lt;/code&gt; 내부의 유형 변수를 지원 하는 기존 표준 라이브러리 클래스의 하위 클래스 인 여러 유형을 정의합니다 . 이러한 유형은 해당하는 기존 클래스가 &lt;code&gt;[]&lt;/code&gt; 를 지원하도록 향상되었을 때 Python 3.9에서 중복되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d12ae48143188d0297420fe3e3e8355fa72a4d12" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; and a few related items. The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class implements the client side of the FTP protocol. You can use this to write Python programs that perform a variety of automated FTP jobs, such as mirroring other FTP servers. It is also used by the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; to handle URLs that use FTP. For more information on FTP (File Transfer Protocol), see Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 클래스 &lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt; 와 몇 가지 관련 항목을 정의합니다 . &lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; 의&lt;/a&gt; 클래스가 구현하는 FTP 프로토콜의 클라이언트 측. 이것을 사용하여 다른 FTP 서버 미러링과 같은 다양한 자동화 된 FTP 작업을 수행하는 Python 프로그램을 작성할 수 있습니다. 또한 &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt; 모듈에서 FTP를 사용하는 URL을 처리 하는 데 사용됩니다 . FTP (File Transfer Protocol)에 대한 자세한 내용은 인터넷 &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959를&lt;/strong&gt;&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2f424d44b755936adbe2988818177e31ae44d19" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; which implements the client side of the Network News Transfer Protocol. It can be used to implement a news reader or poster, or automated news processors. It is compatible with &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; as well as the older &lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 네트워크 뉴스 전송 프로토콜의 클라이언트 쪽을 구현 하는 클래스 &lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt; 를 정의합니다 . 뉴스 리더 나 포스터 또는 자동화 된 뉴스 프로세서를 구현하는 데 사용할 수 있습니다. 이전 &lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt; 뿐만 아니라 &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; 과 호환됩니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6075209a511cab6004ad5174fb8118d5ccd054f2" translate="yes" xml:space="preserve">
          <source>This module defines the following constants and functions:</source>
          <target state="translated">이 모듈은 다음 상수 및 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="254e7f18807b69bc33340649efc7baade8104fad" translate="yes" xml:space="preserve">
          <source>This module defines the following exceptions:</source>
          <target state="translated">이 모듈은 다음 예외를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d27a1500cefa039de958d9245d5b0b141f00314e" translate="yes" xml:space="preserve">
          <source>This module defines the following functions:</source>
          <target state="translated">이 모듈은 다음 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="cbab75d4cc8fb1a71ebe6ad326eb328016713c4e" translate="yes" xml:space="preserve">
          <source>This module defines three classes, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt;&lt;code&gt;IMAP4_SSL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt;&lt;code&gt;IMAP4_stream&lt;/code&gt;&lt;/a&gt;, which encapsulate a connection to an IMAP4 server and implement a large subset of the IMAP4rev1 client protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt;. It is backward compatible with IMAP4 (&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;) servers, but note that the &lt;code&gt;STATUS&lt;/code&gt; command is not supported in IMAP4.</source>
          <target state="translated">이 모듈은 IMAP4 서버에 대한 연결을 캡슐화하고 &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060에&lt;/strong&gt;&lt;/a&gt; 정의 된 &lt;strong&gt;대로&lt;/strong&gt; IMAP4rev1 클라이언트 프로토콜의 큰 서브 세트를 구현하는 &lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt; &lt;code&gt;IMAP4_SSL&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt; &lt;code&gt;IMAP4_stream&lt;/code&gt; 의&lt;/a&gt; 세 가지 클래스 를 정의 합니다. IMAP4 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt; ) 서버 와 역 호환 되지만 &lt;code&gt;STATUS&lt;/code&gt; 명령은 IMAP4에서 지원되지 않습니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f29ba324535ab62c8f58447db607b753c98bae5" translate="yes" xml:space="preserve">
          <source>This module defines two classes, &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;, for accessing and manipulating on-disk mailboxes and the messages they contain. &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; offers a dictionary-like mapping from keys to messages. &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; extends the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class with format-specific state and behavior. Supported mailbox formats are Maildir, mbox, MH, Babyl, and MMDF.</source>
          <target state="translated">이 모듈은 디스크 내 사서함과 그 안에 포함 된 메시지에 액세스하고 조작하기 위해 &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; 의&lt;/a&gt; 두 클래스를 정의 합니다. &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 은 키에서 메시지로 사전과 유사한 매핑을 제공합니다. &lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 는 형식 별 상태 및 동작으로 &lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt; 모듈의 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 클래스를 확장합니다 . 지원되는 사서함 형식은 Maildir, mbox, MH, Babyl 및 MMDF입니다.</target>
        </trans-unit>
        <trans-unit id="d8a489c3d0c7610957d387ee3a2556662944d293" translate="yes" xml:space="preserve">
          <source>This module defines utilities to manipulate HTML.</source>
          <target state="translated">이 모듈은 HTML을 조작하는 유틸리티를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dfe22c236ca9d8a5b76832ead4539edc455e0a34" translate="yes" xml:space="preserve">
          <source>This module defines utility functions to assist in dynamic creation of new types.</source>
          <target state="translated">이 모듈은 새로운 유형의 동적 생성을 지원하는 유틸리티 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e942318520019f6f5189c26f40c04ee87a02680c" translate="yes" xml:space="preserve">
          <source>This module does not comply with the RFC in a strict fashion, implementing some extensions that are valid JavaScript but not valid JSON. In particular:</source>
          <target state="translated">이 모듈은 엄격한 방식으로 RFC를 준수하지 않으며 유효한 JavaScript이지만 유효하지 않은 일부 확장을 구현합니다. 특히:</target>
        </trans-unit>
        <trans-unit id="49e85895e7dc7efb294c76b52c1626af5e533a39" translate="yes" xml:space="preserve">
          <source>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types. It does &amp;ldquo;copy&amp;rdquo; functions and classes (shallow and deeply), by returning the original object unchanged; this is compatible with the way these are treated by the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈은 모듈, 메소드, 스택 추적, 스택 프레임, 파일, 소켓, 창, 배열 또는 이와 유사한 유형과 같은 유형을 복사하지 않습니다. 원래 객체를 변경하지 않고 반환하여 함수 및 클래스 (얕고 깊이)를 &quot;복사&quot;합니다. 이는 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 모듈에서 처리하는 방식과 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="17d030f61ef73253b8878c6ac00f0db6edfe90d3" translate="yes" xml:space="preserve">
          <source>This module does not currently handle multi-disk ZIP files. It can handle ZIP files that use the ZIP64 extensions (that is ZIP files that are more than 4 GiB in size). It supports decryption of encrypted files in ZIP archives, but it currently cannot create an encrypted file. Decryption is extremely slow as it is implemented in native Python rather than C.</source>
          <target state="translated">이 모듈은 현재 다중 디스크 ZIP 파일을 처리하지 않습니다. ZIP64 확장자를 사용하는 ZIP 파일 (즉, 크기가 4GiB 이상인 ZIP 파일)을 처리 할 수 ​​있습니다. ZIP 아카이브에서 암호화 된 파일의 암호 해독을 지원하지만 현재 암호화 된 파일을 작성할 수 없습니다. C가 아닌 네이티브 Python으로 구현되므로 해독 속도가 매우 느립니다.</target>
        </trans-unit>
        <trans-unit id="519d1b02a39806bc189ae28fe467295ef2dfa0a9" translate="yes" xml:space="preserve">
          <source>This module does not impose any such limits beyond those of the relevant Python datatypes themselves or the Python interpreter itself.</source>
          <target state="translated">이 모듈은 관련 Python 데이터 유형 자체 또는 Python 인터프리터 자체의 한계를 초과하여 그러한 제한을 부과하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f7b84f93b9e849cdae302062aae810414c34807" translate="yes" xml:space="preserve">
          <source>This module does not support playing from a memory image asynchronously, so a combination of this flag and &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 메모리 이미지에서 비동기 적으로 재생하는 것을 지원 &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; &lt;/a&gt; 플래그와 SND_ASYNC를 조합 하면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9b343817bb9b838e5415a508a84ece8dffe81d92" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in binhex4 format, a format allowing representation of Macintosh files in ASCII. Only the data fork is handled.</source>
          <target state="translated">이 모듈은 binhex4 형식의 파일을 ASCII 형식으로 Macintosh 파일을 표현할 수있는 형식으로 인코딩 및 디코딩합니다. 데이터 포크 만 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="dd03d811a7b08d214ea866929673d3a7471cc228" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in uuencode format, allowing arbitrary binary data to be transferred over ASCII-only connections. Wherever a file argument is expected, the methods accept a file-like object. For backwards compatibility, a string containing a pathname is also accepted, and the corresponding file will be opened for reading and writing; the pathname &lt;code&gt;'-'&lt;/code&gt; is understood to mean the standard input or output. However, this interface is deprecated; it&amp;rsquo;s better for the caller to open the file itself, and be sure that, when required, the mode is &lt;code&gt;'rb'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; on Windows.</source>
          <target state="translated">이 모듈은 파일을 uuencode 형식으로 인코딩 및 디코딩하여 ASCII 전용 연결을 통해 임의의 이진 데이터를 전송할 수 있습니다. 파일 인수가 필요한 경우, 메소드는 파일과 유사한 객체를 받아들입니다. 이전 버전과의 호환성을 위해 경로 이름이 포함 된 문자열도 허용되며 해당 파일이 읽고 쓰기 위해 열립니다. 경로 이름 &lt;code&gt;'-'&lt;/code&gt; 는 표준 입력 또는 출력을 의미하는 것으로 이해됩니다. 그러나이 인터페이스는 더 이상 사용되지 않습니다. 호출자가 파일 자체를 여는 것이 좋으며 필요한 경우 Windows 에서 모드가 &lt;code&gt;'rb'&lt;/code&gt; 또는 &lt;code&gt;'wb'&lt;/code&gt; 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f81a6cf8af5f605b58b6ac46efd33c502d783a0" translate="yes" xml:space="preserve">
          <source>This module exists for backwards compatibility only. For new code we recommend using &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 이전 버전과의 호환성을 위해서만 존재합니다. 새 코드의 경우 &lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; 를&lt;/a&gt; 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0db06efc0dbc72f83920d799f65e3722ebe14985" translate="yes" xml:space="preserve">
          <source>This module helps scripts to parse the command line arguments in &lt;code&gt;sys.argv&lt;/code&gt;. It supports the same conventions as the Unix &lt;code&gt;getopt()&lt;/code&gt; function (including the special meanings of arguments of the form &amp;lsquo;&lt;code&gt;-&lt;/code&gt;&amp;lsquo; and &amp;lsquo;&lt;code&gt;--&lt;/code&gt;&amp;lsquo;). Long options similar to those supported by GNU software may be used as well via an optional third argument.</source>
          <target state="translated">이 모듈은 스크립트가 &lt;code&gt;sys.argv&lt;/code&gt; 의 명령 행 인수를 구문 분석하는 데 도움이됩니다. . Unix &lt;code&gt;getopt()&lt;/code&gt; 함수 와 동일한 규칙을 지원합니다 ( ' &lt;code&gt;-&lt;/code&gt; '및 ' &lt;code&gt;--&lt;/code&gt; ' 형식의 인수에 대한 특수 의미 포함 ). GNU 소프트웨어가 지원하는 것과 유사한 긴 옵션도 옵션 인 세 번째 인수를 통해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="121aa50a9e3129147a9accceb01472d79e19ffe1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt; (Internationalized Domain Names in Applications) and &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt; (Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)). It builds upon the &lt;code&gt;punycode&lt;/code&gt; encoding and &lt;a href=&quot;stringprep#module-stringprep&quot;&gt;&lt;code&gt;stringprep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt; (응용 프로그램의 국제화 된 도메인 이름) 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492를 구현합니다.&lt;/strong&gt;&lt;/a&gt; (이름 준비 : IDN (Internationalized Domain Names)의 문자열 준비 프로파일)를 구현합니다. &lt;code&gt;punycode&lt;/code&gt; 인코딩과 &lt;a href=&quot;stringprep#module-stringprep&quot;&gt; &lt;code&gt;stringprep&lt;/code&gt; 를&lt;/a&gt; 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="8b93c605058d9ac4610c0f66fcfaf0e7cc0668f2" translate="yes" xml:space="preserve">
          <source>This module implements a common interface to many different secure hash and message digest algorithms. Included are the FIPS secure hash algorithms SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as RSA&amp;rsquo;s MD5 algorithm (defined in Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321&lt;/strong&gt;&lt;/a&gt;). The terms &amp;ldquo;secure hash&amp;rdquo; and &amp;ldquo;message digest&amp;rdquo; are interchangeable. Older algorithms were called message digests. The modern term is secure hash.</source>
          <target state="translated">이 모듈은 다양한 보안 해시 및 메시지 요약 알고리즘에 대한 공통 인터페이스를 구현합니다. FIPS 보안 해시 알고리즘 SHA1, SHA224, SHA256, SHA384 및 SHA512 (FIPS 180-2에 정의) 및 RSA의 MD5 알고리즘 (인터넷 &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321에&lt;/strong&gt;&lt;/a&gt; 정의 )이 포함됩니다. &quot;보안 해시&quot;와 &quot;메시지 요약&quot;이라는 용어는 서로 바꿔 사용할 수 있습니다. 오래된 알고리즘을 메시지 요약이라고합니다. 현대 용어는 안전한 해시입니다.</target>
        </trans-unit>
        <trans-unit id="9dc190db82f8040568b6d71e5d44f33a813a06d1" translate="yes" xml:space="preserve">
          <source>This module implements a helper class and functions to quickly write a loop over standard input or a list of files. If you just want to read or write one file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 표준 입력 또는 파일 목록에 대한 루프를 빠르게 작성하는 도우미 클래스 및 함수를 구현합니다. 하나의 파일을 읽거나 쓰려면&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ddbb83da8fffc29ce3e4bfee653fa7dd031640c8" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">이 모듈은 다양한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;&lt;/a&gt; 은 APL, Haskell 및 SML의 구성에서 영감을 얻은 반복기 블록을 . 각각은 파이썬에 적합한 형태로 개편되었습니다.</target>
        </trans-unit>
        <trans-unit id="cd6319d8a7feaaf5d7a525e6f80a3e1d715a2b85" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">이 모듈 은 APL, Haskell 및 SML의 구성에서 영감을받은 여러 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;반복기&lt;/a&gt; 빌딩 블록을 구현합니다 . 각각은 Python에 적합한 형태로 다시 캐스팅되었습니다.</target>
        </trans-unit>
        <trans-unit id="3cfc63fd063d2db5a956c67a2c60b1984b185b20" translate="yes" xml:space="preserve">
          <source>This module implements a simple HTTP server (based on &lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt;) that serves WSGI applications. Each server instance serves a single WSGI application on a given host and port. If you want to serve multiple applications on a single host and port, you should create a WSGI application that parses &lt;code&gt;PATH_INFO&lt;/code&gt; to select which application to invoke for each request. (E.g., using the &lt;code&gt;shift_path_info()&lt;/code&gt; function from &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">이 모듈 은 WSGI 애플리케이션을 제공 하는 간단한 HTTP 서버 ( &lt;a href=&quot;http.server#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt; 기반 )를 구현합니다 . 각 서버 인스턴스는 지정된 호스트 및 포트에서 단일 WSGI 응용 프로그램을 제공합니다. 단일 호스트 및 포트에서 여러 애플리케이션을 제공하려면 &lt;code&gt;PATH_INFO&lt;/code&gt; 를 구문 분석 하여 각 요청에 대해 호출 할 애플리케이션을 선택 하는 WSGI 애플리케이션을 작성해야합니다 . (예 : &lt;a href=&quot;#module-wsgiref.util&quot;&gt; &lt;code&gt;wsgiref.util&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;shift_path_info()&lt;/code&gt; 함수 사용 )</target>
        </trans-unit>
        <trans-unit id="5fd7dba47e22473c1f2a4635a0a3174c3d6c275b" translate="yes" xml:space="preserve">
          <source>This module implements a variant of the UTF-8 codec. On encoding, a UTF-8 encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful encoder this is only done once (on the first write to the byte stream). On decoding, an optional UTF-8 encoded BOM at the start of the data will be skipped.</source>
          <target state="translated">이 모듈은 UTF-8 코덱의 변형을 구현합니다. 인코딩시 UTF-8로 인코딩 된 BOM 앞에 UTF-8로 인코딩 된 바이트가 붙습니다. 상태 저장 엔코더의 경우이 작업은 한 번만 수행됩니다 (바이트 스트림에 대한 첫 번째 쓰기시). 디코딩시 데이터 시작시 선택적 UTF-8 인코딩 BOM을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="1d4a5b8472e44e8855f5d68c663b14c77b8bcf34" translate="yes" xml:space="preserve">
          <source>This module implements an interface to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine, which is a one-way hash function based upon a modified DES algorithm; see the Unix man page for further details. Possible uses include storing hashed passwords so you can check passwords without storing the actual password, or attempting to crack Unix passwords with a dictionary.</source>
          <target state="translated">이 모듈은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt (3)에&lt;/a&gt;&lt;/em&gt; 대한 인터페이스를 구현합니다.&lt;em&gt;&lt;/em&gt; 루틴에 루틴은 수정 된 DES 알고리즘을 기반으로하는 단방향 해시 함수입니다. 자세한 내용은 유닉스 매뉴얼 페이지를 참조하십시오. 해시 된 암호를 저장하여 실제 암호를 저장하지 않고 암호를 확인할 수도 있고 사전에서 Unix 암호를 해독하려고 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a2adf6a9a2bd23305d2c275bca19cae38c30374" translate="yes" xml:space="preserve">
          <source>This module implements pseudo-random number generators for various distributions.</source>
          <target state="translated">이 모듈은 다양한 분포에 대한 의사 난수 생성기를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="b0183d20598d8183a93f9529b78d2aebdeda8d60" translate="yes" xml:space="preserve">
          <source>This module implements some useful functions on pathnames. To read or write files see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, and for accessing the filesystem see the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module. The path parameters can be passed as either strings, or bytes. Applications are encouraged to represent file names as (Unicode) character strings. Unfortunately, some file names may not be representable as strings on Unix, so applications that need to support arbitrary file names on Unix should use bytes objects to represent path names. Vice versa, using bytes objects cannot represent all file names on Windows (in the standard &lt;code&gt;mbcs&lt;/code&gt; encoding), hence Windows applications should use string objects to access all files.</source>
          <target state="translated">이 모듈은 경로 이름에 유용한 기능을 구현합니다. 파일을 읽거나 쓰 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 참조하고 파일 시스템에 액세스하려면 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 . 경로 매개 변수는 문자열 또는 바이트로 전달 될 수 있습니다. 응용 프로그램은 파일 이름을 (유니 코드) 문자열로 나타내도록 권장됩니다. 불행히도 일부 파일 이름은 Unix에서 문자열로 표현할 수 없으므로 Unix에서 임의의 파일 이름을 지원해야하는 응용 프로그램은 바이트 이름을 사용하여 경로 이름을 나타내야합니다. 반대로 바이트 개체를 사용하면 Windows의 모든 파일 이름을 나타낼 수 없습니다 (표준 &lt;code&gt;mbcs&lt;/code&gt; 인코딩으로 Windows 응용 프로그램은 문자열 개체를 사용하여 모든 파일에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2192c961f0f178501bb93fed052cb49b0b99007" translate="yes" xml:space="preserve">
          <source>This module implements specialized container datatypes providing alternatives to Python&amp;rsquo;s general purpose built-in containers, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 파이썬의 범용 내장 컨테이너, &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; 에&lt;/a&gt; 대한 대안을 제공하는 특수 컨테이너 데이터 유형을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="4736824d97338b1fd5868abcd3d3b1ebff178aa8" translate="yes" xml:space="preserve">
          <source>This module implements the ANSI codepage (CP_ACP).</source>
          <target state="translated">이 모듈은 ANSI 코드 페이지 (CP_ACP)를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e68de6d1ff1f2163e087582161fc807dc52641fc" translate="yes" xml:space="preserve">
          <source>This module implements the HMAC algorithm as described by &lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104에&lt;/strong&gt;&lt;/a&gt; 설명 된 &lt;strong&gt;대로&lt;/strong&gt; HMAC 알고리즘을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e2d84704e96b7291c63c1ac3efbb5f6664c424ce" translate="yes" xml:space="preserve">
          <source>This module is based on the &lt;code&gt;paste.lint&lt;/code&gt; module from Ian Bicking&amp;rsquo;s &amp;ldquo;Python Paste&amp;rdquo; library.</source>
          <target state="translated">이 모듈은 Ian Bicking의 &quot;Python Paste&quot;라이브러리 에있는 &lt;code&gt;paste.lint&lt;/code&gt; 모듈을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="f013858815011cf856f770000ca4c7df309a157c" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instaniation of that class.</source>
          <target state="translated">이 모듈은 Python 3에서 더 이상 사용되지 않습니다. 여기에 제공된 함수는 &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt; 클래스 가 해당 클래스의 설치 중에 전달 된 &lt;em&gt;_subtype&lt;/em&gt; 및 &lt;em&gt;_charset&lt;/em&gt; 값을 사용하여 컨텐츠 유형 및 CTE 헤더를 설정 하므로 명시 적으로 호출 하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1597919b5189f5941c86c782d5458623193d7aff" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instantiation of that class.</source>
          <target state="translated">이 모듈은 Python 3에서 사용되지 않습니다. 여기에 제공된 함수는 &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt; 클래스 가 해당 클래스의 인스턴스화 중에 전달 된 &lt;em&gt;_subtype&lt;/em&gt; 및 &lt;em&gt;_charset&lt;/em&gt; 값을 사용하여 콘텐츠 유형 및 CTE 헤더를 설정 하므로 명시 적으로 호출해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="0429cbe9aa597c0b69111a1d41b8921cc161a566" translate="yes" xml:space="preserve">
          <source>This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed. For example, in a module that wants to implement an &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function that wraps the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, this module can be used directly:</source>
          <target state="translated">이 모듈은 일반적으로 대부분의 응용 프로그램에서 명시 적으로 액세스하지 않지만 내장 값과 동일한 이름을 가진 개체를 제공하지만 해당 이름의 내장 기능이 필요한 모듈에서 유용 할 수 있습니다. 예를 들어, 구현하고자하는 모듈에 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 랩 기능을 내장 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; ,이 모듈은 직접 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2e6ab9db141dd804d00e434d702dfeb4bcde0dd7" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the current API encoding and decoding of headers is handled transparently by the dictionary-like API of the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class. In addition to uses in legacy code, this module can be useful in applications that need to completely control the character sets used when encoding headers.</source>
          <target state="translated">이 모듈은 레거시 ( &lt;code&gt;Compat32&lt;/code&gt; ) 이메일 API의 일부입니다 . 현재 API에서 헤더의 인코딩 및 디코딩은 &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 클래스 의 사전과 유사한 API에 의해 투명하게 처리됩니다 . 레거시 코드에서 사용하는 것 외에도이 모듈은 헤더를 인코딩 할 때 사용되는 문자 집합을 완전히 제어해야하는 응용 프로그램에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="180f900cae8d922dd98bae601f15771a481ee0ce" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API only the aliases table is used.</source>
          <target state="translated">이 모듈은 레거시 ( &lt;code&gt;Compat32&lt;/code&gt; ) 이메일 API의 . 새 API에서는 aliases 테이블 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7cd2965c82b9a739b8830b1bfba981387bb8eef9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API the functionality is provided by the &lt;em&gt;cte&lt;/em&gt; parameter of the &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 모듈은 레거시 ( &lt;code&gt;Compat32&lt;/code&gt; ) 이메일 API의 일부입니다 . 새로운 API에서 기능은 &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; 메소드 의 &lt;em&gt;cte&lt;/em&gt; 매개 변수에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="27d84dff011c3a4e546bb4a84107261b06d95ee9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. Its functionality is partially replaced by the &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt;&lt;code&gt;contentmanager&lt;/code&gt;&lt;/a&gt; in the new API, but in certain applications these classes may still be useful, even in non-legacy code.</source>
          <target state="translated">이 모듈은 레거시 ( &lt;code&gt;Compat32&lt;/code&gt; ) 이메일 API의 일부입니다 . 그 기능은 &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt; &lt;code&gt;contentmanager&lt;/code&gt; 에&lt;/a&gt; 의해 부분적으로 대체됩니다 새로운 API에서 되었지만 특정 애플리케이션에서는 이러한 클래스가 여전히 레거시 코드가 아닌 경우에도 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfd1c33f39be668ad64a1446553d02f9a8cd6310" translate="yes" xml:space="preserve">
          <source>This module is quite similar to the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module, but uses the GNU library &lt;code&gt;gdbm&lt;/code&gt; instead to provide some additional functionality. Please note that the file formats created by &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; are incompatible.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt; 모듈 과 매우 유사 하지만 GNU 라이브러리 &lt;code&gt;gdbm&lt;/code&gt; 을 사용하여 몇 가지 추가 기능을 제공합니다. &lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 파일 형식 이 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b216268bb69c1fdf01b3213c4d03d0dea781f3b" translate="yes" xml:space="preserve">
          <source>This module leverages Python&amp;rsquo;s import system to provide access to &lt;em&gt;resources&lt;/em&gt; within &lt;em&gt;packages&lt;/em&gt;. If you can import a package, you can access resources within that package. Resources can be opened or read, in either binary or text mode.</source>
          <target state="translated">이 모듈은 Python의 가져 오기 시스템을 활용하여 &lt;em&gt;패키지&lt;/em&gt; 내의 &lt;em&gt;리소스&lt;/em&gt; 에 대한 액세스를 제공 &lt;em&gt;합니다&lt;/em&gt; . 패키지를 가져올 수 있으면 해당 패키지 내의 리소스에 액세스 할 수 있습니다. 바이너리 또는 텍스트 모드에서 리소스를 열거 나 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d567be3ffbb48af9ddd8e570ee9aca2bcd078e25" translate="yes" xml:space="preserve">
          <source>This module makes available standard &lt;code&gt;errno&lt;/code&gt; system symbols. The value of each symbol is the corresponding integer value. The names and descriptions are borrowed from &lt;code&gt;linux/include/errno.h&lt;/code&gt;, which should be pretty all-inclusive.</source>
          <target state="translated">이 모듈은 표준 &lt;code&gt;errno&lt;/code&gt; 시스템 심볼을 제공합니다. 각 기호의 값은 해당 정수 값입니다. 이름과 설명은 &lt;code&gt;linux/include/errno.h&lt;/code&gt; 에서 빌려 왔으며 , 이는 모두 포괄적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8177e37ca6fd47fc24221a5d337fc98fe8380b1b" translate="yes" xml:space="preserve">
          <source>This module offers classes representing filesystem paths with semantics appropriate for different operating systems. Path classes are divided between &lt;a href=&quot;#pure-paths&quot;&gt;pure paths&lt;/a&gt;, which provide purely computational operations without I/O, and &lt;a href=&quot;#concrete-paths&quot;&gt;concrete paths&lt;/a&gt;, which inherit from pure paths but also provide I/O operations.</source>
          <target state="translated">이 모듈은 다른 운영 체제에 적합한 의미 체계를 가진 파일 시스템 경로를 나타내는 클래스를 제공합니다. 경로 클래스는 &lt;a href=&quot;#pure-paths&quot;&gt;순수한 경로 (&lt;/a&gt; I / O없이 순수한 계산 연산을 제공함)와 순수한 경로에서 상속하지만 I / O 연산을 제공하는 &lt;a href=&quot;#concrete-paths&quot;&gt;콘크리트 경로&lt;/a&gt; 로 나뉩니다 .</target>
        </trans-unit>
        <trans-unit id="ed5c638dd819f880628830ab0ecc5d8641d533ba" translate="yes" xml:space="preserve">
          <source>This module offers several classes to implement SMTP (email) servers.</source>
          <target state="translated">이 모듈은 SMTP (이메일) 서버를 구현하기위한 여러 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ce552dbf20b8c159b70061696daa935deadc19d" translate="yes" xml:space="preserve">
          <source>This module offers the following functions:</source>
          <target state="translated">이 모듈은 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d8a6bfc993b9c245ec8eb2cc7787eb9de4ea8adc" translate="yes" xml:space="preserve">
          <source>This module performs conversions between Python values and C structs represented as Python &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. This can be used in handling binary data stored in files or from network connections, among other sources. It uses &lt;a href=&quot;#struct-format-strings&quot;&gt;Format Strings&lt;/a&gt; as compact descriptions of the layout of the C structs and the intended conversion to/from Python values.</source>
          <target state="translated">이 모듈은 Python 값과 Python &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체 로 표시되는 C 구조체 사이의 변환을 수행 합니다. 파일이나 네트워크 연결에 저장된 이진 데이터를 처리하는 데 사용할 수 있습니다. &lt;a href=&quot;#struct-format-strings&quot;&gt;형식 문자열을&lt;/a&gt; 사용합니다.C 구조체의 레이아웃과 파이썬 값으로의 변환에 대한 간단한 설명으로 을 합니다.</target>
        </trans-unit>
        <trans-unit id="b6eea1445534f2c5a7d57930c9064fef45e4cd14" translate="yes" xml:space="preserve">
          <source>This module performs file control and I/O control on file descriptors. It is an interface to the &lt;code&gt;fcntl()&lt;/code&gt; and &lt;code&gt;ioctl()&lt;/code&gt; Unix routines. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl(2)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl(2)&lt;/a&gt;&lt;/em&gt; Unix manual pages.</source>
          <target state="translated">이 모듈은 파일 디스크립터에서 파일 제어 및 I / O 제어를 수행합니다. &lt;code&gt;fcntl()&lt;/code&gt; 및 &lt;code&gt;ioctl()&lt;/code&gt; Unix 루틴에 대한 인터페이스 입니다. 이러한 호출에 대한 자세한 설명은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl (2)&lt;/a&gt;&lt;/em&gt; 및 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl (2)&lt;/a&gt;&lt;/em&gt; Unix 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="887984972a32db5e99731e161e576fbca9e2f8cf" translate="yes" xml:space="preserve">
          <source>This module performs quoted-printable transport encoding and decoding, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;: &amp;ldquo;MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies&amp;rdquo;. The quoted-printable encoding is designed for data where there are relatively few nonprintable characters; the base64 encoding scheme available via the &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt; module is more compact if there are many such characters, as when sending a graphics file.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt; :&amp;ldquo;MIME (Multipurpose Internet Mail Extensions) 1 부 : 인터넷 메시지 본문 형식 지정 및 설명을위한 메커니즘&amp;rdquo;에 정의 된 &lt;strong&gt;대로&lt;/strong&gt; 인용 인쇄 가능한 전송 인코딩 및 디코딩을 수행합니다 . 인용 인쇄 가능한 인코딩은 인쇄 할 수없는 문자가 상대적으로 적은 데이터를 위해 설계되었습니다. &lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt; 모듈을 통해 사용 가능한 base64 인코딩 체계 는 그래픽 파일을 보낼 때와 같이 이러한 문자가 많으면 더 간결합니다.</target>
        </trans-unit>
        <trans-unit id="30c72eae525b4703153ea587e7608baa95a20091" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">이 모듈은 클래스가 특정 인터페이스를 제공하는지 테스트하는 데 사용할 수있는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; 를 제공합니다. 예를 들어, 해시 가능한지 또는 매핑인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="ae244de3501dc65b5e91de812f723a2a68347184" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">이 모듈은 클래스가 특정 인터페이스를 제공하는지 여부를 테스트하는 데 사용할 수있는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; 를 제공합니다. 예를 들어, 해시 가능한지 또는 매핑인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="13eafc2a82baf557013b08017f80bf530e415d08" translate="yes" xml:space="preserve">
          <source>This module provides APIs to manage, store, and access context-local state. The &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; class is used to declare and work with &lt;em&gt;Context Variables&lt;/em&gt;. The &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class should be used to manage the current context in asynchronous frameworks.</source>
          <target state="translated">이 모듈은 컨텍스트 로컬 상태를 관리, 저장 및 액세스하기위한 API를 제공합니다. &lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt; 클래스로 선언하고 작업하는 데 사용되는 &lt;em&gt;컨텍스트 변수&lt;/em&gt; . &lt;a href=&quot;#contextvars.copy_context&quot;&gt; &lt;code&gt;copy_context()&lt;/code&gt; &lt;/a&gt; 함수와 &lt;a href=&quot;#contextvars.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 클래스는 비동기 프레임 워크의 현재 상황을 관리하는 데 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="703dfbdde3fe51b975924d146f5d433ed1e5cf30" translate="yes" xml:space="preserve">
          <source>This module provides a &lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; class that can be used to determine the set of modules imported by a script. &lt;code&gt;modulefinder.py&lt;/code&gt; can also be run as a script, giving the filename of a Python script as its argument, after which a report of the imported modules will be printed.</source>
          <target state="translated">이 모듈은 스크립트로 가져온 모듈 세트를 결정하는 데 사용할 수 있는 &lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt; 클래스를 제공합니다 . &lt;code&gt;modulefinder.py&lt;/code&gt; 를 스크립트로 실행하여 Python 스크립트의 파일 이름을 인수로 제공 한 후 가져온 모듈의 보고서가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb1a53a880fe52c91fddba4f125f09d0a187d0c" translate="yes" xml:space="preserve">
          <source>This module provides a class &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; for representing character sets and character set conversions in email messages, as well as a character set registry and several convenience methods for manipulating this registry. Instances of &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; are used in several other modules within the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">이 모듈은 클래스 제공 &lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 전자 메일 메시지에서 문자 집합 및 문자 집합 변환을 나타내는뿐만 아니라이 레지스트리를 조작하기위한 문자 집합 레지스트리와 여러 편의 메소드. &lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스 는 &lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt; 내의 다른 여러 모듈에서 사용됩니다. 패키지 됩니다.</target>
        </trans-unit>
        <trans-unit id="213bc85d22b8633001facc52a601116b11e0ec9e" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;, for the allocation and management of shared memory to be accessed by one or more processes on a multicore or symmetric multiprocessor (SMP) machine. To assist with the life-cycle management of shared memory especially across distinct processes, a &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; subclass, &lt;code&gt;SharedMemoryManager&lt;/code&gt;, is also provided in the &lt;code&gt;multiprocessing.managers&lt;/code&gt; module.</source>
          <target state="translated">이 모듈은 멀티 코어 또는 SMP (Symmetric Multiprocessor) 시스템에서 하나 이상의 프로세스가 액세스 할 공유 메모리의 할당 및 관리를 위해 &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt; 클래스를 제공합니다 . 특히 별개의 프로세스에서 공유 메모리의 수명주기 관리를 지원하기 위해, &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; 의&lt;/a&gt; 서브 클래스, &lt;code&gt;SharedMemoryManager&lt;/code&gt; 는 또한 제공됩니다 &lt;code&gt;multiprocessing.managers&lt;/code&gt; 의 모듈.</target>
        </trans-unit>
        <trans-unit id="e9c95f438e44fc345a6538a8c4a4f76ac8ff8317" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;, which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">이 모듈은 클래스, 제공 &lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt; 으로부터 유래, &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; 의&lt;/a&gt; 유형 및 소켓 같은 래퍼가도를 암호화를 제공하며, SSL과 소켓으로가는 데이터를 해독합니다. 그것은 다음과 같은 추가 방법 지원 &lt;code&gt;getpeercert()&lt;/code&gt; 접속의 다른 쪽의 증명서를 검색하고, &lt;code&gt;cipher()&lt;/code&gt; 보안 연결을 위해 사용되는 암호화 방식을 검색한다.</target>
        </trans-unit>
        <trans-unit id="90404141faf9f0c0e94247220f4a81789284c490" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;,which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">이 모듈은 클래스, 제공 &lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt; 으로부터 유래, &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; 의&lt;/a&gt; 유형 및 소켓 같은 래퍼가도를 암호화를 제공하며, SSL과 소켓으로가는 데이터를 해독합니다. 그것은 다음과 같은 추가 방법 지원 &lt;code&gt;getpeercert()&lt;/code&gt; 접속의 다른 쪽의 증명서를 검색하고, &lt;code&gt;cipher()&lt;/code&gt; 보안 연결을 위해 사용되는 암호화 방식을 검색한다.</target>
        </trans-unit>
        <trans-unit id="8f0ffcd572b3174eb3c8a270163a48792d8c1a64" translate="yes" xml:space="preserve">
          <source>This module provides a class, an instance, and a function:</source>
          <target state="translated">이 모듈은 클래스, 인스턴스 및 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7420a8c5a8b68bbee2a0537324852b74b6e93ea0" translate="yes" xml:space="preserve">
          <source>This module provides a comprehensive interface for compressing and decompressing data using the bzip2 compression algorithm.</source>
          <target state="translated">이 모듈은 bzip2 압축 알고리즘을 사용하여 데이터를 압축 및 압축 해제하기위한 포괄적 인 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="85cdc6759a6295c61c57d18349a77a0e70ad451c" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 과 같은 생성 된 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;특수 메소드&lt;/a&gt; 를 사용자 정의 클래스 에 자동으로 추가하기위한 데코레이터 및 함수를 제공합니다 . 원래 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557에&lt;/strong&gt;&lt;/a&gt; 설명되어 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="916908c6c673e5b4a27730bf1c8cc2e81ec3fee3" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 사용자 정의 클래스에 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 과 같이 생성 된 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;특수 메서드&lt;/a&gt; 를 자동으로 추가하는 데코레이터 및 함수를 제공합니다 . 원래 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557에&lt;/strong&gt;&lt;/a&gt; 설명되어 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cd4efd6ed76589f3eff9b3aada6dff77c95ad36" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt; 모듈에 대한 중복 인터페이스를 제공 합니다. &lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt; 모듈이 플랫폼에서 제공되지 않았을 때 가져 오기 위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3fef5cae12047ccc1374399baa4337c5fac7f2f3" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 모듈에 대한 중복 인터페이스를 제공 합니다. &lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt; 모듈이 플랫폼에서 제공되지 않았을 때 가져 오기 위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b8848396af147fc8383e103fb6d46929f1bef6b8" translate="yes" xml:space="preserve">
          <source>This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, if you want to manipulate paths, see the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module, and if you want to read all the lines in all the files on the command line see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module. For creating temporary files and directories see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module, and for high-level file and directory handling see the &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈은 운영 체제 종속 기능을 사용하는 이식 가능한 방법을 제공합니다. 파일을 읽거나 쓰 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 참조하십시오. 경로를 조작하려면 &lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오. 명령 행의 모든 ​​파일에서 모든 행을 읽으려면 &lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 . 임시 파일 및 디렉토리를 작성하려면 &lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt; 모듈을 참조하고 고급 파일 및 디렉토리 처리를 위해 &lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8f0c0c78932b5e209afaba9f5dcfdab7f59d3bd" translate="yes" xml:space="preserve">
          <source>This module provides a simple interface to compress and decompress files just like the GNU programs &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; would.</source>
          <target state="translated">이 모듈은 GNU 프로그램 &lt;strong&gt;gzip&lt;/strong&gt; 및 &lt;strong&gt;gunzip&lt;/strong&gt; 과 마찬가지로 파일을 압축 및 압축 해제 할 수있는 간단한 인터페이스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="72a987a70c302afe568cb8de1bfe5273c35907f2" translate="yes" xml:space="preserve">
          <source>This module provides a simple way to time small bits of Python code. It has both a &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; as well as a &lt;a href=&quot;#python-interface&quot;&gt;callable&lt;/a&gt; one. It avoids a number of common traps for measuring execution times. See also Tim Peters&amp;rsquo; introduction to the &amp;ldquo;Algorithms&amp;rdquo; chapter in the &lt;em&gt;Python Cookbook&lt;/em&gt;, published by O&amp;rsquo;Reilly.</source>
          <target state="translated">이 모듈은 작은 비트의 Python 코드를 간단하게 시간 측정 할 수있는 방법을 제공합니다. &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;명령 행 인터페이스&lt;/a&gt; 와 &lt;a href=&quot;#python-interface&quot;&gt;호출 가능한 &lt;/a&gt;인터페이스 가 모두 있습니다. 실행 시간을 측정하기위한 많은 일반적인 트랩을 피합니다. O'Reilly가 출판 한 &lt;em&gt;Python Cookbook&lt;/em&gt; 의 &quot;Algoithms&quot;장에 대한 Tim Peters의 소개도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac5624f85e8b62430d234b85484c3d823bb52291" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt;, which answers questions about whether or not a particular user agent can fetch a URL on the Web site that published the &lt;code&gt;robots.txt&lt;/code&gt; file. For more details on the structure of &lt;code&gt;robots.txt&lt;/code&gt; files, see &lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 단일 클래스 인 &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; 를&lt;/a&gt; 제공합니다.이 클래스 는 특정 사용자 에이전트가 &lt;code&gt;robots.txt&lt;/code&gt; 파일 을 게시 한 웹 사이트에서 URL을 가져올 수 있는지 여부에 대한 질문에 답변 합니다. &lt;code&gt;robots.txt&lt;/code&gt; 파일 의 구조에 대한 자세한 내용 은 &lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="62e4158ef196326ed71c06f9c8cc82d27d3fbbcf" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt;, for convenient manipulation of WSGI response headers using a mapping-like interface.</source>
          <target state="translated">이 모듈은 매핑 같은 인터페이스를 사용하여 WSGI 응답 헤더를 편리하게 조작 할 수 있도록 단일 클래스 인 &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; 를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6536d070903854775a48e95f262d42244862ad75" translate="yes" xml:space="preserve">
          <source>This module provides a standard interface to extract, format and print stack traces of Python programs. It exactly mimics the behavior of the Python interpreter when it prints a stack trace. This is useful when you want to print stack traces under program control, such as in a &amp;ldquo;wrapper&amp;rdquo; around the interpreter.</source>
          <target state="translated">이 모듈은 파이썬 프로그램의 스택 트레이스를 추출, 포맷 및 인쇄하기위한 표준 인터페이스를 제공합니다. 스택 추적을 인쇄 할 때 Python 인터프리터의 동작을 정확하게 모방합니다. 인터프리터의 &quot;래퍼&quot;와 같이 프로그램 제어 하에서 스택 추적을 인쇄하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="16801fcd2f87bd96df53f183ca91321a894b0cee" translate="yes" xml:space="preserve">
          <source>This module provides a variety of utility functions for working with WSGI environments. A WSGI environment is a dictionary containing HTTP request variables as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. All of the functions taking an &lt;em&gt;environ&lt;/em&gt; parameter expect a WSGI-compliant dictionary to be supplied; please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; for a detailed specification.</source>
          <target state="translated">이 모듈은 WSGI 환경 작업을위한 다양한 유틸리티 기능을 제공합니다. WSGI 환경은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333에&lt;/strong&gt;&lt;/a&gt; 설명 된 HTTP 요청 변수를 포함하는 사전 입니다. &lt;em&gt;environ&lt;/em&gt; 매개 변수 를 사용하는 모든 함수 는 WSGI 호환 사전이 제공 될 것으로 예상합니다. 자세한 사양 은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f47d51ea5443642e0cebe608bdfb649e783a95da" translate="yes" xml:space="preserve">
          <source>This module provides access to Transport Layer Security (often known as &amp;ldquo;Secure Sockets Layer&amp;rdquo;) encryption and peer authentication facilities for network sockets, both client-side and server-side. This module uses the OpenSSL library. It is available on all modern Unix systems, Windows, Mac OS X, and probably additional platforms, as long as OpenSSL is installed on that platform.</source>
          <target state="translated">이 모듈은 클라이언트 측 및 서버 측의 네트워크 소켓에 대한 전송 계층 보안 (종종 &quot;보안 소켓 계층&quot;) 암호화 및 피어 인증 기능에 대한 액세스를 제공합니다. 이 모듈은 OpenSSL 라이브러리를 사용합니다. OpenSSL이 해당 플랫폼에 설치되어있는 한 모든 최신 Unix 시스템, Windows, Mac OS X 및 추가 플랫폼에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb47dc23d4685117a20e275d440b82a71cb84040" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">이 모듈은 복소수에 대한 수학 함수에 대한 액세스를 제공합니다. 이 모듈의 함수는 정수, 부동 소수점 숫자 또는 복소수를 인수로 허용합니다. 또한 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt; 메서드 가있는 모든 Python 개체를 사용할 수 있습니다. 이러한 메서드는 개체를 각각 복소수 또는 부동 소수점 숫자로 변환하는 데 사용되며 함수는 결과에 적용됩니다. 전환.</target>
        </trans-unit>
        <trans-unit id="5ee5d6474fef056704addcd34d8bf10030130a4a" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">이 모듈은 복소수에 대한 수학 함수에 대한 액세스를 제공합니다. 이 모듈의 함수는 정수, 부동 소수점 숫자 또는 복소수를 인수로받습니다. 또한 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt; 메서드 가있는 모든 Python 객체를 허용합니다 .이 메서드는 객체를 각각 복소수 또는 부동 소수점 숫자로 변환하는 데 사용되며 그 함수는 다음 결과에 적용됩니다. 변환.</target>
        </trans-unit>
        <trans-unit id="96bd06b62c229263aee7d4b310478ba4038faf46" translate="yes" xml:space="preserve">
          <source>This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface).</source>
          <target state="translated">이 모듈은 C 표준 및 POSIX 표준 (얇게 위장한 Unix 인터페이스)에 의해 표준화 된 운영 체제 기능에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fc2f9ad21523dcef5a819d87ef202bea6b841856" translate="yes" xml:space="preserve">
          <source>This module provides access to some variables used or maintained by the interpreter and to functions that interact strongly with the interpreter. It is always available.</source>
          <target state="translated">이 모듈은 인터프리터에 의해 사용되거나 유지되는 일부 변수 및 인터프리터와 강력하게 상호 작용하는 기능에 대한 액세스를 제공합니다. 항상 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="2bc2d795b2f5d56c42bc1fcccb682e4b1315d9ca" translate="yes" xml:space="preserve">
          <source>This module provides access to the &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; functions available in most operating systems, &lt;code&gt;devpoll()&lt;/code&gt; available on Solaris and derivatives, &lt;code&gt;epoll()&lt;/code&gt; available on Linux 2.5+ and &lt;code&gt;kqueue()&lt;/code&gt; available on most BSD. Note that on Windows, it only works for sockets; on other operating systems, it also works for other file types (in particular, on Unix, it works on pipes). It cannot be used on regular files to determine whether a file has grown since it was last read.</source>
          <target state="translated">이 모듈은 대부분의 운영 체제에서 사용 가능한 &lt;code&gt;select()&lt;/code&gt; 및 &lt;code&gt;poll()&lt;/code&gt; 함수, Solaris 및 파생에서 사용 가능한 &lt;code&gt;devpoll()&lt;/code&gt; , Linux 2.5 이상에서 사용 가능한 &lt;code&gt;epoll()&lt;/code&gt; 및 대부분의 BSD에서 사용 가능한 &lt;code&gt;kqueue()&lt;/code&gt; 제공합니다. Windows에서는 소켓에서만 작동합니다. 다른 운영 체제에서는 다른 파일 형식 (특히 Unix에서는 파이프)에서도 작동합니다. 파일을 마지막으로 읽은 이후에 파일이 커 졌는지 여부를 판별하기 위해 일반 파일에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f5ea14577acc1b35986f36f159c2c78929863d41" translate="yes" xml:space="preserve">
          <source>This module provides access to the BSD &lt;em&gt;socket&lt;/em&gt; interface. It is available on all modern Unix systems, Windows, MacOS, and probably additional platforms.</source>
          <target state="translated">이 모듈은 BSD &lt;em&gt;소켓&lt;/em&gt; 인터페이스에 대한 액세스를 제공합니다 . 모든 최신 Unix 시스템, Windows, MacOS 및 추가 플랫폼에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4edada6edb283e968b93e64d3bef29ca69397245" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD version 12.1.0&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 모든 유니 코드 문자의 문자 속성을 정의하는 UCD (Unicode Character Database)에 대한 액세스를 제공합니다. 이 데이터베이스에 포함 된 데이터는 &lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD 버전 12.1.0&lt;/a&gt; 에서 컴파일됩니다 .</target>
        </trans-unit>
        <trans-unit id="1d725393b29ca98559a052531d2684647c496440" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCD version 13.0.0&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 모든 유니 코드 문자에 대한 문자 속성을 정의하는 유니 코드 문자 데이터베이스 (UCD)에 대한 액세스를 제공합니다. 이 데이터베이스에 포함 된 데이터는 &lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCD 버전 13.0.0&lt;/a&gt; 에서 컴파일됩니다 .</target>
        </trans-unit>
        <trans-unit id="30670ccef8e7fe81c71479df8b9249a53340baa3" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix group database. It is available on all Unix versions.</source>
          <target state="translated">이 모듈은 Unix 그룹 데이터베이스에 대한 액세스를 제공합니다. 모든 유닉스 버전에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="55f03ba226e0b0cb51540161e0864d43da374302" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix shadow password database. It is available on various Unix versions.</source>
          <target state="translated">이 모듈은 Unix 섀도우 비밀번호 데이터베이스에 대한 액세스를 제공합니다. 다양한 유닉스 버전에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="673e84aa5c6cb1086db76a154ca80c1cc47c2e40" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix user account and password database. It is available on all Unix versions.</source>
          <target state="translated">이 모듈은 Unix 사용자 계정 및 비밀번호 데이터베이스에 대한 액세스를 제공합니다. 모든 유닉스 버전에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="58e68fc7fd3b84061fa6b4f1dc9c8b600f222438" translate="yes" xml:space="preserve">
          <source>This module provides access to the mathematical functions defined by the C standard.</source>
          <target state="translated">이 모듈은 C 표준에 의해 정의 된 수학 함수에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="469fcb73e532c33fb0f828785ab9c89776d66732" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of the heap queue algorithm, also known as the priority queue algorithm.</source>
          <target state="translated">이 모듈은 우선 순위 대기열 알고리즘이라고도하는 힙 대기열 알고리즘의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7478b75b360305f4403684dd05c591302baf8208" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used by Apple, primarily on macOS and iOS. This module supports both binary and XML plist files.</source>
          <target state="translated">이 모듈은 주로 macOS 및 iOS에서 Apple이 사용하는 &quot;속성 목록&quot;파일을 읽고 쓰기위한 인터페이스를 제공합니다. 이 모듈은 바이너리 및 XML plist 파일을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="52af56f54da90f517f414639fe74fe94fa8a209d" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used mainly by Mac OS X and supports both binary and XML plist files.</source>
          <target state="translated">이 모듈은 주로 Mac OS X에서 사용되는 &quot;속성 목록&quot;파일을 읽고 쓰는 인터페이스를 제공하며 이진 및 XML plist 파일을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f7985b4122bdce70b370c7fd3cec918904d41ad1" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading files that use EA IFF 85 chunks. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; This format is used in at least the Audio Interchange File Format (AIFF/AIFF-C) and the Real Media File Format (RMFF). The WAVE audio file format is closely related and can also be read using this module.</source>
          <target state="translated">이 모듈은 EA IFF 85 청크를 사용하는 파일을 읽기위한 인터페이스를 제공합니다. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 이 형식은 최소한 AIFF / AIFF-C (Audio Interchange File Format) 및 RMFF (Real Media File Format)에서 사용됩니다. WAVE 오디오 파일 형식은 밀접한 관련이 있으며이 모듈을 사용하여 읽을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5235c064e0fb34f3d9063e171a6e6c64d56db25" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the POSIX calls for tty I/O control. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios(3)&lt;/a&gt;&lt;/em&gt; Unix manual page. It is only available for those Unix versions that support POSIX &lt;em&gt;termios&lt;/em&gt; style tty I/O control configured during installation.</source>
          <target state="translated">이 모듈은 tty I / O 제어를위한 POSIX 호출에 대한 인터페이스를 제공합니다. 이러한 호출에 대한 자세한 설명은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios (3)&lt;/a&gt;&lt;/em&gt; Unix 매뉴얼 페이지를 참조하십시오. 설치 중에 구성된 POSIX &lt;em&gt;termios&lt;/em&gt; 스타일 tty I / O 제어 를 지원하는 Unix 버전에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="086f3cc3f100e25677403b5b1acdc335886e31be" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the Unix &lt;code&gt;syslog&lt;/code&gt; library routines. Refer to the Unix manual pages for a detailed description of the &lt;code&gt;syslog&lt;/code&gt; facility.</source>
          <target state="translated">이 모듈은 Unix &lt;code&gt;syslog&lt;/code&gt; 라이브러리 루틴에 대한 인터페이스를 제공 합니다. &lt;code&gt;syslog&lt;/code&gt; 기능 에 대한 자세한 설명은 Unix 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5767581be7b98c856708e68e4887a01ee5ed3ca7" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the optional garbage collector. It provides the ability to disable the collector, tune the collection frequency, and set debugging options. It also provides access to unreachable objects that the collector found but cannot free. Since the collector supplements the reference counting already used in Python, you can disable the collector if you are sure your program does not create reference cycles. Automatic collection can be disabled by calling &lt;code&gt;gc.disable()&lt;/code&gt;. To debug a leaking program call &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt;. Notice that this includes &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt;, causing garbage-collected objects to be saved in gc.garbage for inspection.</source>
          <target state="translated">이 모듈은 선택적인 가비지 수집기에 대한 인터페이스를 제공합니다. 수집기를 비활성화하고 수집 빈도를 조정하며 디버깅 옵션을 설정하는 기능을 제공합니다. 또한 콜렉터가 발견했지만 해제 할 수없는 도달 불가능한 오브젝트에 대한 액세스를 제공합니다. 수집기는 Python에서 이미 사용 된 참조 횟수를 보충하기 때문에 프로그램이 참조주기를 생성하지 않는 경우 수집기를 비활성화 할 수 있습니다. &lt;code&gt;gc.disable()&lt;/code&gt; 을 호출하여 자동 수집을 비활성화 할 수 있습니다 . 누출 프로그램을 디버그하려면 &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt; 호출 하십시오 . 여기에는 &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt; 이 포함되어 있으므로 가비지 수집 된 개체가 검사를 위해 gc.garbage에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="32207cdf053d4b53a02fec90b3f2fe847d2a3f32" translate="yes" xml:space="preserve">
          <source>This module provides base handler classes for implementing WSGI servers and gateways. These base classes handle most of the work of communicating with a WSGI application, as long as they are given a CGI-like environment, along with input, output, and error streams.</source>
          <target state="translated">이 모듈은 WSGI 서버 및 게이트웨이를 구현하기위한 기본 핸들러 클래스를 제공합니다. 이러한 기본 클래스는 입력, 출력 및 오류 스트림과 함께 CGI와 유사한 환경이 제공되는 한 WSGI 응용 프로그램과 통신하는 대부분의 작업을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="3d2d65711f29707dcf3c68b47576e06b5bb25708" translate="yes" xml:space="preserve">
          <source>This module provides basic mechanisms for measuring and controlling system resources utilized by a program.</source>
          <target state="translated">이 모듈은 프로그램에서 사용하는 시스템 리소스를 측정하고 제어하기위한 기본 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2074e4ed5cae8e3c02c907a6fb87896ca374907a" translate="yes" xml:space="preserve">
          <source>This module provides classes and convenience functions for compressing and decompressing data using the LZMA compression algorithm. Also included is a file interface supporting the &lt;code&gt;.xz&lt;/code&gt; and legacy &lt;code&gt;.lzma&lt;/code&gt; file formats used by the &lt;strong&gt;xz&lt;/strong&gt; utility, as well as raw compressed streams.</source>
          <target state="translated">이 모듈은 LZMA 압축 알고리즘을 사용하여 데이터를 압축 및 압축 해제하기위한 클래스 및 편의 기능을 제공합니다. 또한 &lt;strong&gt;xz&lt;/strong&gt; 유틸리티에서 사용되는 &lt;code&gt;.xz&lt;/code&gt; 및 레거시 &lt;code&gt;.lzma&lt;/code&gt; 파일 형식 과 원시 압축 스트림을 지원하는 파일 인터페이스도 포함되어 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b41ff6259a2809c3c85cfcb2d023518394f66db" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce difference information in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈은 시퀀스를 비교하기위한 클래스와 함수를 제공합니다. 예를 들어 파일을 비교하는 데 사용할 수 있으며 HTML 및 컨텍스트 및 통합 된 diff를 포함하여 다양한 형식으로 차이 정보를 생성 할 수 있습니다. 디렉토리와 파일을 비교하려면 &lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt; 모듈 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d723d85d9302b6f49e467234d1b51bfae004c9ed" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce information about file differences in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 모듈은 시퀀스를 비교하기위한 클래스와 함수를 제공합니다. 예를 들어 파일을 비교하는 데 사용할 수 있으며 HTML 및 컨텍스트 및 통합 차이점을 포함하여 다양한 형식의 파일 차이점에 대한 정보를 생성 할 수 있습니다. 디렉토리와 파일을 비교하려면 &lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt; 모듈 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d3a75e4fdf67641ed01276bf79ceb985728ca3f" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of internal nodes of the parse tree. Unlike most Python constants, these use lower-case names. Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">이 모듈은 구문 분석 트리의 내부 노드의 숫자 값을 나타내는 상수를 제공합니다. 대부분의 Python 상수와 달리 소문자 이름을 사용합니다. 언어 문법의 맥락에서 이름의 정의는 Python 배포판의 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 파일을 참조하십시오 . 이름이 매핑되는 특정 숫자 값은 Python 버전간에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0db1c58e5713700f3d18b08e3440f3ac8160539e" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of leaf nodes of the parse tree (terminal tokens). Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">이 모듈은 구문 분석 트리의 리프 노드 (터미널 토큰)의 숫자 값을 나타내는 상수를 제공합니다. 언어 문법의 맥락에서 이름의 정의는 Python 배포판의 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 파일을 참조하십시오 . 이름이 매핑되는 특정 숫자 값은 Python 버전간에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc2f9c0b7237fe8976f75e5c839bcb70285d1a61" translate="yes" xml:space="preserve">
          <source>This module provides direct access to all &amp;lsquo;built-in&amp;rsquo; identifiers of Python; for example, &lt;code&gt;builtins.open&lt;/code&gt; is the full name for the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;functions#built-in-funcs&quot;&gt;Built-in Functions&lt;/a&gt; and &lt;a href=&quot;constants#built-in-consts&quot;&gt;Built-in Constants&lt;/a&gt; for documentation.</source>
          <target state="translated">이 모듈은 모든 '내장'파이썬 식별자에 직접 액세스 할 수 있습니다. 예를 들어 &lt;code&gt;builtins.open&lt;/code&gt; 은 내장 함수 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 의 전체 이름입니다 . &lt;a href=&quot;functions#built-in-funcs&quot;&gt;내장 함수&lt;/a&gt; 및 &lt;a href=&quot;constants#built-in-consts&quot;&gt;내장 상수&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e1adbb5fba8bcb0dd3c5d2f87875121ca620833" translate="yes" xml:space="preserve">
          <source>This module provides functionality similar to &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt; without the performance overhead of that package. This makes reading resources included in packages easier, with more stable and consistent semantics.</source>
          <target state="translated">이 모듈은 해당 패키지의 성능 오버 헤드없이 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources &lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;기본 자원 액세스&lt;/a&gt; 와 유사한 기능을 제공 합니다. 따라서 패키지에 포함 된 리소스를보다 안정적이고 일관된 의미로 쉽게 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b5ca63a2aecc796e502235c6d48c1ae2106dc46" translate="yes" xml:space="preserve">
          <source>This module provides functions for calculating mathematical statistics of numeric (&lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;-valued) data.</source>
          <target state="translated">이 모듈은 숫자 ( &lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt; 값) 데이터 의 수학적 통계를 계산하는 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="75398ee52262755abb3726df7ae90cc9e462672d" translate="yes" xml:space="preserve">
          <source>This module provides functions for encoding binary data to printable ASCII characters and decoding such encodings back to binary data. It provides encoding and decoding functions for the encodings specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;, which defines the Base16, Base32, and Base64 algorithms, and for the de-facto standard Ascii85 and Base85 encodings.</source>
          <target state="translated">이 모듈은 이진 데이터를 인쇄 가능한 ASCII 문자로 인코딩하고 이러한 인코딩을 이진 데이터로 다시 디코딩하는 기능을 제공합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548에&lt;/strong&gt;&lt;/a&gt; 지정된 인코딩 및 Base16, Base32 및 Base64 알고리즘을 정의하고 사실상 표준 Ascii85 및 Base85 인코딩을 위한 인코딩 및 디코딩 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f9ee787249598374b8b03ab5d0feb31c2f56e5d8" translate="yes" xml:space="preserve">
          <source>This module provides immutable &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; objects (the &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; class) and the functions &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt; for generating version 1, 3, 4, and 5 UUIDs as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 변경 불가능한 &lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt; 객체 ( &lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt; 클래스) 및 &lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt; 함수를 제공합니다.&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt; RFC 4122에&lt;/strong&gt;&lt;/a&gt; 지정된대로 버전 1, 3, 4 및 5 UUID를 생성하기 위해 , &lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt; 를 제공합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06c6eafc483d258beab85551b483806ae97c5c22" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude directives&lt;/a&gt;, via the &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; helper module. This module can be used to insert subtrees and text strings into element trees, based on information in the tree.</source>
          <target state="translated">이 모듈은 &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; 헬퍼 모듈을 통해 &lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude 지시문에&lt;/a&gt; 대한 제한된 지원을 제공 합니다. 이 모듈은 트리의 정보를 기반으로 하위 트리 및 텍스트 문자열을 요소 트리에 삽입하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2b5842f0ed4029e7a99dedd0e7121a9e735bad" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath expressions&lt;/a&gt; for locating elements in a tree. The goal is to support a small subset of the abbreviated syntax; a full XPath engine is outside the scope of the module.</source>
          <target state="translated">이 모듈은 트리에서 요소를 찾기 위해 &lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath 표현식&lt;/a&gt; 을 제한적으로 지원합니다 . 목표는 축약 된 구문의 작은 서브 세트를 지원하는 것입니다. 전체 XPath 엔진이 모듈 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="0bf7ba3f5539cc8e4d1e744ec755fce3ecc09d6b" translate="yes" xml:space="preserve">
          <source>This module provides low-level primitives for working with multiple threads (also called &lt;em&gt;light-weight processes&lt;/em&gt; or &lt;em&gt;tasks&lt;/em&gt;) &amp;mdash; multiple threads of control sharing their global data space. For synchronization, simple locks (also called &lt;em&gt;mutexes&lt;/em&gt; or &lt;em&gt;binary semaphores&lt;/em&gt;) are provided. The &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module provides an easier to use and higher-level threading API built on top of this module.</source>
          <target state="translated">이 모듈은 다중 스레드 ( &lt;em&gt;가벼운 프로세스&lt;/em&gt; 또는 &lt;em&gt;작업&lt;/em&gt; 이라고도 함 ) (글로벌 데이터 공간을 공유하는 다중 제어 스레드)로 &lt;em&gt;작업&lt;/em&gt; 하기위한 저수준 기본 요소를 제공 합니다. 동기화를 위해 간단한 잠금 ( &lt;em&gt;뮤텍스&lt;/em&gt; 라고도 함)&lt;em&gt;&lt;/em&gt; 또는 &lt;em&gt;이진 세마포&lt;/em&gt; )이 제공됩니다. &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 모듈은 사용하기 쉽고 높은 수준의 스레딩 API이 모듈의 상위에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d00695c8d8aaeb3205a3ed627d8ec50cee6867c5" translate="yes" xml:space="preserve">
          <source>This module provides mechanisms to use signal handlers in Python.</source>
          <target state="translated">이 모듈은 Python에서 신호 핸들러를 사용하는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f569226472a737263efed126429393dd8a849aa0" translate="yes" xml:space="preserve">
          <source>This module provides names for many of the types that are required to implement a Python interpreter. It deliberately avoids including some of the types that arise only incidentally during processing such as the &lt;code&gt;listiterator&lt;/code&gt; type.</source>
          <target state="translated">이 모듈은 Python 인터프리터를 구현하는 데 필요한 많은 유형의 이름을 제공합니다. 처리 중 우연히 발생하는 일부 유형 (예 : &lt;code&gt;listiterator&lt;/code&gt; 유형) 은 포함하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dd6ac6c47b580fce484cd078e849be51aa1988ef" translate="yes" xml:space="preserve">
          <source>This module provides one exception and one type object:</source>
          <target state="translated">이 모듈은 하나의 예외와 하나의 유형 객체를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9cf56c38d255b7eb6778dc5332911ee7531ebe53" translate="yes" xml:space="preserve">
          <source>This module provides regular expression matching operations similar to those found in Perl.</source>
          <target state="translated">이 모듈은 Perl에서 찾은 것과 유사한 정규식 일치 작업을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4b49c61f0886b25155c2b3daf9b55f7958df6ab6" translate="yes" xml:space="preserve">
          <source>This module provides runtime support for type hints as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;. The most fundamental support consists of the types &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt;. For full specification please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;. For a simplified introduction to type hints see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591에&lt;/strong&gt;&lt;/a&gt; 지정된 유형 힌트에 대한 런타임 지원을 제공합니다 . 가장 기본적인 지원은 &lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#typing.Callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt; 유형으로 구성됩니다 . 전체 사양은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; 를 참조하십시오 . 타입 힌트에 대한 간단한 소개는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483을&lt;/strong&gt;&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="532cca5468b0ad145e3eab39e13ea225f5dbce6f" translate="yes" xml:space="preserve">
          <source>This module provides some utility functions to support installing Python libraries. These functions compile Python source files in a directory tree. This module can be used to create the cached byte-code files at library installation time, which makes them available for use even by users who don&amp;rsquo;t have write permission to the library directories.</source>
          <target state="translated">이 모듈은 파이썬 라이브러리 설치를 지원하는 몇 가지 유틸리티 기능을 제공합니다. 이 함수는 디렉토리 트리에서 Python 소스 파일을 컴파일합니다. 이 모듈을 사용하면 라이브러리 설치시 캐시 된 바이트 코드 파일을 작성하여 라이브러리 디렉토리에 대한 쓰기 권한이없는 사용자도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81a0615691bbce1f954726677409cc9bb8dfb30a" translate="yes" xml:space="preserve">
          <source>This module provides support for Unix shell-style wildcards, which are &lt;em&gt;not&lt;/em&gt; the same as regular expressions (which are documented in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module). The special characters used in shell-style wildcards are:</source>
          <target state="translated">이 모듈은 유닉스 쉘 스타일의 와일드 카드에 대한 지원 제공 &lt;em&gt;하지&lt;/em&gt; 에서 설명하는 정규 표현식과 동일 ( &lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt; 모듈). 쉘 스타일 와일드 카드에 사용되는 특수 문자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ea0af12bd69eb91fa994fc1c788ed7bbb0a0fa5" translate="yes" xml:space="preserve">
          <source>This module provides support for a-LAW, u-LAW and Intel/DVI ADPCM encodings.</source>
          <target state="translated">이 모듈은 a-LAW, u-LAW 및 Intel / DVI ADPCM 인코딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="37579753c5f46d08ff6a65e6a62810dd661abff2" translate="yes" xml:space="preserve">
          <source>This module provides support for maintaining a list in sorted order without having to sort the list after each insertion. For long lists of items with expensive comparison operations, this can be an improvement over the more common approach. The module is called &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect&lt;/code&gt;&lt;/a&gt; because it uses a basic bisection algorithm to do its work. The source code may be most useful as a working example of the algorithm (the boundary conditions are already right!).</source>
          <target state="translated">이 모듈은 각 삽입 후에 목록을 정렬하지 않고도 목록을 정렬 된 순서로 유지 보수 할 수 있도록 지원합니다. 값 비싼 비교 연산이 포함 된 긴 항목 목록의 경우보다 일반적인 접근 방식보다 개선 될 수 있습니다. 이 모듈을 &lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect&lt;/code&gt; &lt;/a&gt; 이라고합니다 이 작업을 할 수있는 기본 이분 알고리즘을 사용하기 때문이다. 소스 코드는 알고리즘의 실제 예제로 가장 유용 할 수 있습니다 (경계 조건이 이미 옳습니다!).</target>
        </trans-unit>
        <trans-unit id="2ac8792580c07542d59388d307ee83f6895e01e4" translate="yes" xml:space="preserve">
          <source>This module provides support for reading and writing AIFF and AIFF-C files. AIFF is Audio Interchange File Format, a format for storing digital audio samples in a file. AIFF-C is a newer version of the format that includes the ability to compress the audio data.</source>
          <target state="translated">이 모듈은 AIFF 및 AIFF-C 파일 읽기 및 쓰기를 지원합니다. AIFF는 디지털 오디오 샘플을 파일로 저장하기위한 형식 인 오디오 교환 파일 형식입니다. AIFF-C는 오디오 데이터를 압축하는 기능이 포함 된 최신 버전의 형식입니다.</target>
        </trans-unit>
        <trans-unit id="f619454e0cd883753f5aa29d59051c7efdc95c1c" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; class which implements a basic configuration language which provides a structure similar to what&amp;rsquo;s found in Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; 를&lt;/a&gt; 제공합니다 Microsoft Windows INI 파일에서 발견되는 것과 유사한 구조를 제공하는 기본 구성 언어를 구현하는 클래스를 제공합니다. 이를 사용하여 최종 사용자가 쉽게 사용자 정의 할 수있는 Python 프로그램을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2196f022a345bbb2d0d9ec4089afe9f49eb7ee67" translate="yes" xml:space="preserve">
          <source>This module provides the basic infrastructure for writing asynchronous socket service clients and servers.</source>
          <target state="translated">이 모듈은 비동기 소켓 서비스 클라이언트 및 서버를 작성하기위한 기본 인프라를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5de5cc5107720c846f4c171dd1d059a801f1f751" translate="yes" xml:space="preserve">
          <source>This module provides the following function:</source>
          <target state="translated">이 모듈은 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0820fe444c091f886715862b85c51be5074c2d42" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119에&lt;/strong&gt;&lt;/a&gt; 요약 된대로 Python에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; (ABC) 를 정의하기위한 인프라를 제공합니다 . 이것이 왜 파이썬에 추가되었는지 PEP를 참조하십시오. ( ABC 기반 숫자의 유형 계층에 관한 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt; 모듈 도 참조하십시오 .)&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57af032eecf847e31b6d20be78ab2f19d6d82731" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119에&lt;/strong&gt;&lt;/a&gt; 설명 된대로 Python에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;추상 기본 클래스&lt;/a&gt; (ABC) 를 정의하기위한 인프라를 제공합니다 . 이것이 Python에 추가 된 이유는 PEP를 참조하십시오. ( ABC를 기반으로하는 숫자의 유형 계층에 대해서는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .)&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69215bf3ed347a2cba2f5ecd0a5495f835fbb5b" translate="yes" xml:space="preserve">
          <source>This module provides the metaclass &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; for defining ABCs and a helper class &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; to alternatively define ABCs through inheritance:</source>
          <target state="translated">이 모듈은 ABC 및 헬퍼 클래스 &lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt; 를 정의하기위한 메타 클래스 &lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt; 를 제공합니다. 상속을 통해 를 정의하기 를 .</target>
        </trans-unit>
        <trans-unit id="78b52d81ca4d921802dd5d8de6b28e9b2b042b84" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;Python 인터프리터가 직접 실행할&lt;/a&gt; 수있는 Python 코드가 포함 된 zip 파일 작성을 관리하는 도구를 제공합니다 . 이 모듈은 &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;명령 행 인터페이스&lt;/a&gt; 와 &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API를&lt;/a&gt; 모두 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="fbdfd5b2e7377c2332a86021c72d22630439b201" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;Python 인터프리터에서 직접 실행할&lt;/a&gt; 수있는 Python 코드가 포함 된 zip 파일 생성을 관리하는 도구를 제공합니다 . 이 모듈은 &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;명령 줄 인터페이스&lt;/a&gt; 와 &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API를&lt;/a&gt; 모두 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="53a874565a2be8671d555dddd96ba1951dc626bc" translate="yes" xml:space="preserve">
          <source>This module provides two functions and an exception:</source>
          <target state="translated">이 모듈은 두 가지 기능과 예외를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0c692d34344adf8940dacd20d0010b650d9e4c65" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문과 관련된 일반적인 작업을위한 유틸리티를 제공 합니다. 자세한 정보는 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;컨텍스트 관리자 유형&lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;명령문 컨텍스트 관리자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb5bfbe9a9c3613ce2efa4df6cc227770ea75a2b" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문과 관련된 일반적인 작업을위한 유틸리티를 제공 합니다. 자세한 내용은 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;컨텍스트 관리자 유형&lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;With 문 컨텍스트 관리자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="426dcc1cbaf25e58643c58a6a6297e1a618dac4e" translate="yes" xml:space="preserve">
          <source>This module provides utilities for the import system, in particular package support.</source>
          <target state="translated">이 모듈은 가져 오기 시스템, 특히 패키지 지원을위한 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="240bcd19bf3933f07143845b5b85dc5d035b4c64" translate="yes" xml:space="preserve">
          <source>This module provides various time-related functions. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">이 모듈은 다양한 시간 관련 기능을 제공합니다. 관련 기능에 대해서는 &lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 모듈 .</target>
        </trans-unit>
        <trans-unit id="ac4e99ea575234e3006a32d19f75118193efada6" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;code&gt;pyexpat&lt;/code&gt; module to provide access to the Expat parser. Direct use of the &lt;code&gt;pyexpat&lt;/code&gt; module is deprecated.</source>
          <target state="translated">이 모듈은 &lt;code&gt;pyexpat&lt;/code&gt; 모듈을 사용 하여 Expat 파서에 대한 액세스를 제공합니다. &lt;code&gt;pyexpat&lt;/code&gt; 모듈 의 직접적인 사용 은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31f73bbb9aa85c31966124e47f8da4d30bd39d6f" translate="yes" xml:space="preserve">
          <source>This module wraps the system &lt;code&gt;syslog&lt;/code&gt; family of routines. A pure Python library that can speak to a syslog server is available in the &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module as &lt;code&gt;SysLogHandler&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 시스템 &lt;code&gt;syslog&lt;/code&gt; 를 래핑합니다. 루틴 루틴을 . syslog 서버와 통신 할 수있는 순수 Python 라이브러리는 &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt; 모듈에서 &lt;code&gt;SysLogHandler&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="170f67191f0a6157cc696b7d62194d8e091d8fba" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s encoders and decoders preserve input and output order by default. Order is only lost if the underlying containers are unordered.</source>
          <target state="translated">이 모듈의 인코더와 디코더는 기본적으로 입력 및 출력 순서를 유지합니다. 기본 컨테이너가 정렬되지 않은 경우에만 주문이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="fe2fb497e72f94f41104bc9280245ecfb5cf62f7" translate="yes" xml:space="preserve">
          <source>This must be called at most once per process object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate process.</source>
          <target state="translated">프로세스 오브젝트 당 최대 한 번 호출해야합니다. 객체의 &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 정렬합니다. 메소드가 별도의 프로세스에서 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="34820797f6502a43638f2f7818d676aebe5d8e98" translate="yes" xml:space="preserve">
          <source>This must be called to make sure that any underlying resource is freed. The selector shall not be used once it has been closed.</source>
          <target state="translated">기본 자원이 해제되도록하려면 호출해야합니다. 선택기는 일단 닫은 후에는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="48f128b07ca17bd85e39bdec0199f67b2269762f" translate="yes" xml:space="preserve">
          <source>This mutates the function(s) in place.</source>
          <target state="translated">이 기능은 제자리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1dda5ba415b7dbd31f5962a5276f8c7e29e022d" translate="yes" xml:space="preserve">
          <source>This non-public class is the base class of all fundamental ctypes data types. It is mentioned here because it contains the common attributes of the fundamental ctypes data types. &lt;a href=&quot;#ctypes._SimpleCData&quot;&gt;&lt;code&gt;_SimpleCData&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ctypes._CData&quot;&gt;&lt;code&gt;_CData&lt;/code&gt;&lt;/a&gt;, so it inherits their methods and attributes. ctypes data types that are not and do not contain pointers can now be pickled.</source>
          <target state="translated">이 비공개 클래스는 모든 기본 ctypes 데이터 유형의 기본 클래스입니다. 여기에는 기본 ctypes 데이터 유형의 공통 속성이 포함되어 있으므로 여기에 언급되어 있습니다. &lt;a href=&quot;#ctypes._SimpleCData&quot;&gt; &lt;code&gt;_SimpleCData&lt;/code&gt; &lt;/a&gt; 는 _CData 의 서브 클래스입니다 &lt;a href=&quot;#ctypes._CData&quot;&gt; &lt;code&gt;_CData&lt;/code&gt; &lt;/a&gt; 그래서 자신의 방법과 속성을 상속합니다. 포인터가 포함되지 않은 ctypes 데이터 유형을 이제 피클 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c76670a6aef8581c98df691553b9d5b3bb79b20e" translate="yes" xml:space="preserve">
          <source>This non-public class is the common base class of all ctypes data types. Among other things, all ctypes type instances contain a memory block that hold C compatible data; the address of the memory block is returned by the &lt;a href=&quot;#ctypes.addressof&quot;&gt;&lt;code&gt;addressof()&lt;/code&gt;&lt;/a&gt; helper function. Another instance variable is exposed as &lt;a href=&quot;#ctypes._CData._objects&quot;&gt;&lt;code&gt;_objects&lt;/code&gt;&lt;/a&gt;; this contains other Python objects that need to be kept alive in case the memory block contains pointers.</source>
          <target state="translated">이 비공개 클래스는 모든 ctypes 데이터 유형의 공통 기본 클래스입니다. 무엇보다도 모든 ctypes 유형 인스턴스에는 C 호환 데이터를 보유하는 메모리 블록이 포함됩니다. 메모리 블록의 주소는 &lt;a href=&quot;#ctypes.addressof&quot;&gt; &lt;code&gt;addressof()&lt;/code&gt; &lt;/a&gt; 도우미 함수에 의해 반환됩니다 . 다른 인스턴스 변수는 &lt;a href=&quot;#ctypes._CData._objects&quot;&gt; &lt;code&gt;_objects&lt;/code&gt; &lt;/a&gt; 로 노출됩니다 . 여기에는 메모리 블록에 포인터가 포함 된 경우 살아 있어야하는 다른 Python 객체가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="740946fe8f7e39fc96693fd9ee1e22af0668e216" translate="yes" xml:space="preserve">
          <source>This number is not equivalent to the number of CPUs the current process can use. The number of usable CPUs can be obtained with &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt;</source>
          <target state="translated">이 수는 현재 프로세스가 사용할 수있는 CPU 수와 동일하지 않습니다. 사용 가능한 CPU 수는 &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt; 으로 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="963cb426c9fe5ee3c933f73bb84480436af3d679" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">이 개체는 일반적으로 슬라이스 (참조에 의해 사용되는 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;Slicings을&lt;/a&gt; ). 특별한 작업을 지원하지 않습니다. &lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt; (내장 이름) 라는 이름의 줄임표 개체가 정확히 하나 있습니다 . &lt;code&gt;type(Ellipsis)()&lt;/code&gt; 는 &lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt; 생성합니다 싱글 톤을 .</target>
        </trans-unit>
        <trans-unit id="ab4deaf35fc353a14e19626266588abfee71ef58" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">이 개체는 일반적으로 슬라이스 (참조에 의해 사용되는 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;Slicings을&lt;/a&gt; ). 특별한 작업을 지원하지 않습니다. &lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt; (내장 이름) 라는 이름의 생략 부호 오브젝트가 정확히 하나 있습니다 . &lt;code&gt;type(Ellipsis)()&lt;/code&gt; 는 &lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt; 싱글 톤을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="b844f2c0b6c0d04b3d9d3222fe2598ca13a1ddaf" translate="yes" xml:space="preserve">
          <source>This object is returned by functions that don&amp;rsquo;t explicitly return a value. It supports no special operations. There is exactly one null object, named &lt;code&gt;None&lt;/code&gt; (a built-in name). &lt;code&gt;type(None)()&lt;/code&gt; produces the same singleton.</source>
          <target state="translated">이 객체는 명시 적으로 값을 반환하지 않는 함수에 의해 반환됩니다. 특별한 작업을 지원하지 않습니다. &lt;code&gt;None&lt;/code&gt; 이라는 이름의 널 (null) 객체가 있습니다 (내장 이름). &lt;code&gt;type(None)()&lt;/code&gt; 은 동일한 싱글 톤을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="373dd28a7f907a4136a7383316dd88a1c0e4e77a" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">이 객체는 지원하지 않는 유형에서 작동하도록 요청 될 때 비교 및 ​​이진 연산에서 반환됩니다. 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;비교&lt;/a&gt; 를 참조하십시오. 정확히 하나의 &lt;code&gt;NotImplemented&lt;/code&gt; 객체가 있습니다. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; 은 싱글 톤 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4b8c490a5ffaf5c5a318b1ff98f7e2b634edc506" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">이 개체는 지원하지 않는 형식에 대해 작업하도록 요청 될 때 비교 및 ​​이진 작업에서 반환됩니다. 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;비교&lt;/a&gt; 를 참조하십시오. 정확히 하나의 &lt;code&gt;NotImplemented&lt;/code&gt; 객체가 있습니다. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; 는 싱글 톤 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="512161437251ac84d2bdd0e799c3a5434535b949" translate="yes" xml:space="preserve">
          <source>This object wraps a Windows HKEY object, automatically closing it when the object is destroyed. To guarantee cleanup, you can call either the &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;Close()&lt;/code&gt;&lt;/a&gt; method on the object, or the &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">이 객체는 Windows HKEY 객체를 감싸서 객체가 파괴 될 때 자동으로 닫힙니다. 정리를 보장하기 위해 개체 에서 &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;Close()&lt;/code&gt; &lt;/a&gt; 메서드 또는 &lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt; 함수를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f694a7e94fdd2625c9751da67b75e646e6e0eee" translate="yes" xml:space="preserve">
          <source>This one step operation is more efficient than a &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; and can be more appropriate when using a fixed-size heap. The pop/push combination always returns an element from the heap and replaces it with &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">이것은 단계 동작은보다 효율적이다 &lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; &lt;/a&gt; 다음 &lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt; 및 고정 된 크기의 힙을 사용할 때 더 적합 할 수있다. 팝 / 푸시 조합은 항상 힙에서 요소를 반환하고 &lt;em&gt;item으로&lt;/em&gt; 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="a823fede68f63279bdb3b91e0ab2e8b71d8e4b25" translate="yes" xml:space="preserve">
          <source>This only applies to classes or already instantiated objects. Calling a mocked class to create a mock instance &lt;em&gt;does not&lt;/em&gt; create a real instance. It is only attribute lookups - along with calls to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; - that are done.</source>
          <target state="translated">이것은 클래스 또는 이미 인스턴스화 된 객체에만 적용됩니다. 모형 클래스를 호출하여 모형 인스턴스를 작성해도 실제 인스턴스 &lt;em&gt;는&lt;/em&gt; 작성 &lt;em&gt;되지 않습니다&lt;/em&gt; . &lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt; 호출과 함께 속성 조회 만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7c1390712c98925d63c320a49629f3fecfdd36f9" translate="yes" xml:space="preserve">
          <source>This only works when native size and alignment are in effect; standard size and alignment does not enforce any alignment.</source>
          <target state="translated">이것은 기본 크기와 정렬이 유효한 경우에만 작동합니다. 표준 크기 및 정렬은 정렬을 강제하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8491f7168c80d0674be016b49eaa3606a3426c2f" translate="yes" xml:space="preserve">
          <source>This only works with functions that can be called without arguments.</source>
          <target state="translated">인수없이 호출 할 수있는 함수에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cac8febff77df306a94e5b6eb192f6b009ce3a64" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 opcode는 with 블록이 시작되기 전에 여러 작업을 수행합니다. 먼저 컨텍스트 관리자에서 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 을 로드 하고 나중에 &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; 에서&lt;/a&gt; 사용할 수 있도록 스택으로 푸시합니다 . 그런 다음 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 가 호출되고 &lt;em&gt;델타를&lt;/em&gt; 가리키는 finally 블록 이 푸시됩니다. 마지막으로 &lt;code&gt;__enter__()&lt;/code&gt; 메서드 를 호출 한 결과가 스택으로 푸시됩니다. 다음 opcode는이를 무시하거나 ( &lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt; ) (a) 변수 ( &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt; )에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0634c0718f8471af7f575c9f0bbf22c9be0c9321" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 opcode는 with 블록이 시작되기 전에 여러 작업을 수행합니다. 먼저 컨텍스트 관리자에서 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 를 로드 하고 나중에 &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; 에서 사용할 수 있도록 스택에 푸시합니다 . 그런 다음 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 가 호출되고 &lt;em&gt;delta를&lt;/em&gt; 가리키는 finally 블록 이 푸시됩니다. 마지막으로 &lt;code&gt;__enter__()&lt;/code&gt; 메서드 호출 결과가 스택으로 푸시됩니다. 다음 opcode는 그것을 무시하거나 ( &lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt; ) (a) 변수 ( &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt; )에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="313d9da8aace736fbdf7186c1695da7951657092" translate="yes" xml:space="preserve">
          <source>This operation is identical to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, except that all NaNs signal. That is, if neither operand is a signaling NaN then any quiet NaN operand is treated as though it were a signaling NaN.</source>
          <target state="translated">이 작업은 모든 NaN 신호를 제외하고 &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt; 메서드와 동일합니다. 즉, 피연산자가 신호 NaN이 아니면 조용한 NaN 피연산자가 신호 NaN 인 것처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="991deaeff8f34412ebcb4ce1e4126533013440db" translate="yes" xml:space="preserve">
          <source>This operation is not commutative; that is, the order in which the objects are added matters. To illustrate:</source>
          <target state="translated">이 작업은 정식이 아닙니다. 즉, 객체가 추가되는 순서가 중요합니다. 설명하기 위해 :</target>
        </trans-unit>
        <trans-unit id="aa630c07e9d7ab0e136db1e517de3ecc0ff9bd2c" translate="yes" xml:space="preserve">
          <source>This operation is unaffected by context and is quiet: no flags are changed and no rounding is performed. As an exception, the C version may raise InvalidOperation if the second operand cannot be converted exactly.</source>
          <target state="translated">이 작업은 컨텍스트의 영향을받지 않으며 조용합니다. 플래그가 변경되지 않고 반올림이 수행되지 않습니다. 예외적으로, 두 번째 피연산자를 정확하게 변환 할 수 없으면 C 버전에서 InvalidOperation이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="176ced1eb3f5bf8845c639dbb51a09e9508afa25" translate="yes" xml:space="preserve">
          <source>This option accepts a dictionary of key-value pairs which will be initially put in the &lt;code&gt;DEFAULT&lt;/code&gt; section. This makes for an elegant way to support concise configuration files that don&amp;rsquo;t specify values which are the same as the documented default.</source>
          <target state="translated">이 옵션은 초기에 &lt;code&gt;DEFAULT&lt;/code&gt; 섹션 에 놓일 키-값 쌍의 사전을 허용합니다 . 이것은 문서화 된 기본값과 동일한 값을 지정하지 않는 간결한 구성 파일을 지원하는 우아한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="f43ed818af4a0dd2fed506e4816b93171f3fb141" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported.</source>
          <target state="translated">이 옵션을 사용하면 하위 프로세스가 마지막으로보고 된 이후 작업 제어 중지에서 계속 된 경우 하위 프로세스가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="4c173be1061ff8f92789c6a05bd6547238cbee92" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped.</source>
          <target state="translated">이 옵션을 사용하면 하위 프로세스가 중지되었지만 현재 상태가 중지 된 후보고되지 않은 경우 하위 프로세스가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="bd25c253ae0fbe8dac6cdfa6da993ae2705ef862" translate="yes" xml:space="preserve">
          <source>This option has a major impact on how the mapping protocol will behave and how the written configuration files look. With the standard dictionary, every section is stored in the order they were added to the parser. Same goes for options within sections.</source>
          <target state="translated">이 옵션은 매핑 프로토콜의 작동 방식과 작성된 구성 파일의 모양에 큰 영향을줍니다. 표준 사전을 사용하면 모든 섹션이 파서에 추가 된 순서대로 저장됩니다. 섹션 내의 옵션도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="16c96f0e42e4f0bff3231f79690ddc19085854f5" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.0.0 and later.</source>
          <target state="translated">이 옵션은 OpenSSL 1.0.0 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72bc5dd56d04de1e5181cb11caa2002a31734fdb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.0h and later.</source>
          <target state="translated">이 옵션은 OpenSSL 1.1.0h 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bebfe076248522a6111b1310b00379d95c7a89fb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.1 and later.</source>
          <target state="translated">이 옵션은 OpenSSL 1.1.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c8bc57c8b0475c7eb59cb85bd797fcf73565e85" translate="yes" xml:space="preserve">
          <source>This option is useful when the &lt;code&gt;.pycs&lt;/code&gt; are kept up to date by some system external to Python like a build system.</source>
          <target state="translated">이 옵션은 빌드 시스템과 같이 Python 외부의 일부 시스템 에서 &lt;code&gt;.pycs&lt;/code&gt; 를 최신 상태로 유지할 때 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="4e1bd246b58f88c014640c5eb110fa16e17dbeb9" translate="yes" xml:space="preserve">
          <source>This package aims to provide complete access to all tables in an &lt;code&gt;.msi&lt;/code&gt; file, therefore, it is a fairly low-level API. Two primary applications of this package are the &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; command &lt;code&gt;bdist_msi&lt;/code&gt;, and the creation of Python installer package itself (although that currently uses a different version of &lt;code&gt;msilib&lt;/code&gt;).</source>
          <target state="translated">이 패키지는 &lt;code&gt;.msi&lt;/code&gt; 파일의 모든 테이블에 대한 완전한 액세스를 제공하는 것을 목표로 하므로 상당히 낮은 수준의 API입니다. 이 패키지의 두 가지 주요 응용 프로그램은 &lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt; 명령 &lt;code&gt;bdist_msi&lt;/code&gt; 및 Python 설치 프로그램 패키지 작성 (현재는 다른 버전의 &lt;code&gt;msilib&lt;/code&gt; 사용 )입니다.</target>
        </trans-unit>
        <trans-unit id="2f59df83b2650e44df89565daa6593f433915b0b" translate="yes" xml:space="preserve">
          <source>This package provides the following functionality via its public API.</source>
          <target state="translated">이 패키지는 공개 API를 통해 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a4dcd679549a3569e0d901cdbbb0b336792e6f5b" translate="yes" xml:space="preserve">
          <source>This page contains only reference information. For tutorials, please see</source>
          <target state="translated">이 페이지에는 참조 정보 만 포함되어 있습니다. 튜토리얼은 다음을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="99d5b0c64faa9b400278e91ba69343a0b5046a2b" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">이 페이지에는 API 참조 정보가 포함되어 있습니다. Python 명령 행 구문 분석에 대한보다 자세한 소개는 &lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse tutorial을&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="10edc2184324079f85e7a47bf8d611be4bbb02bb" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">이 페이지에는 API 참조 정보가 포함되어 있습니다. Python 명령 줄 구문 분석에 대한보다 부드러운 소개는 &lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparse 자습서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d57afe6c7c2f694060b1b6dc9dffd606c3e2bd5d" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For tutorial information and discussion of more advanced topics, see</source>
          <target state="translated">이 페이지에는 API 참조 정보가 포함되어 있습니다. 튜토리얼 정보 및 고급 주제에 대한 설명은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="abd99e93d1788287c10945f7bf1a3b651f0e4bbc" translate="yes" xml:space="preserve">
          <source>This page lists all high-level async/await enabled asyncio APIs.</source>
          <target state="translated">이 페이지에는 모든 고급 비동기 / 대기 가능 asyncio API가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="af36919b0eb5898742194c69e579c9121a244ce2" translate="yes" xml:space="preserve">
          <source>This page lists all low-level asyncio APIs.</source>
          <target state="translated">이 페이지에는 모든 저수준 asyncio API가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="c59bcfe5efc3f66dd12c6e8c605fc2ec05d0ca87" translate="yes" xml:space="preserve">
          <source>This page lists common mistakes and traps and explains how to avoid them.</source>
          <target state="translated">이 페이지는 일반적인 실수와 함정을 나열하고이를 피하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6a649998fc13cbb981eec7f1d51e9b5c806a8076" translate="yes" xml:space="preserve">
          <source>This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element.</source>
          <target state="translated">이 구문 분석기는 종료 태그가 시작 태그와 일치하는지 확인하거나 외부 요소를 닫아 내재적으로 닫힌 요소에 대해 종료 태그 핸들러를 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="251eac7a50085ef7a42d5d72edffe30c06f0d3d5" translate="yes" xml:space="preserve">
          <source>This password manager extends &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; to support tracking URIs for which authentication credentials should always be sent.</source>
          <target state="translated">이 비밀번호 관리자는 &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; &lt;/a&gt; 을 확장 하여 항상 인증 신임 정보를 전송해야하는 추적 URI를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="83824ec275a8bb0657762c62de305421c239b1c7" translate="yes" xml:space="preserve">
          <source>This pointer is initialized to point to an array of &lt;code&gt;struct _frozen&lt;/code&gt; records, terminated by one whose members are all &lt;code&gt;NULL&lt;/code&gt; or zero. When a frozen module is imported, it is searched in this table. Third-party code could play tricks with this to provide a dynamically created collection of frozen modules.</source>
          <target state="translated">이 포인터는 멤버가 모두 &lt;code&gt;NULL&lt;/code&gt; 또는 0 인 &lt;code&gt;struct _frozen&lt;/code&gt; 레코드 배열을 가리 키도록 초기화 됩니다. 고정 된 모듈을 가져 오면이 테이블에서 검색됩니다. 타사 코드는이 기능을 사용하여 동적으로 생성 된 고정 된 모듈 모음을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a179a8b88966d1778c24d39e80f26cc93c31609" translate="yes" xml:space="preserve">
          <source>This policy adds new header parsing and folding algorithms. Instead of simple strings, headers are &lt;code&gt;str&lt;/code&gt; subclasses with attributes that depend on the type of the field. The parsing and folding algorithm fully implement &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정책은 새로운 헤더 파싱 및 폴딩 알고리즘을 추가합니다. 헤더는 단순한 문자열 대신 필드의 유형에 따라 달라지는 속성을 가진 &lt;code&gt;str&lt;/code&gt; 서브 클래스입니다. 파싱 ​​및 폴딩 알고리즘은 &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322를&lt;/strong&gt;&lt;/a&gt; 완전히 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="6e3ec424cca6a1dcde14079306440b52ccfa4d39" translate="yes" xml:space="preserve">
          <source>This produces output similar to that of the traceback module for the frames retrieved by &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt; 의해 검색된 프레임에 대한 역 추적 모듈의 출력과 유사한 출력을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="c993a95e1beba698427bfb2774b0a105ae89b003" translate="yes" xml:space="preserve">
          <source>This protocol is not available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSL이 &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; 플래그로 컴파일 된 경우이 프로토콜을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="616b13c085995e597cd4f60e683f235ef1464679" translate="yes" xml:space="preserve">
          <source>This protocol is not be available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; flag.</source>
          <target state="translated">OpenSSL이 &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; 플래그로 컴파일 된 경우이 프로토콜을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d167c001e1794993e4c845fbc35891fc1ca3d578" translate="yes" xml:space="preserve">
          <source>This puts &lt;code&gt;_()&lt;/code&gt; only in the module&amp;rsquo;s global namespace and so only affects calls within this module.</source>
          <target state="translated">이것은 &lt;code&gt;_()&lt;/code&gt; 를 모듈의 전역 네임 스페이스에만 넣으므로이 모듈 내의 호출에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="cacca8764589cad4c523153eeccabc264b42124e" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the SQLite database &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object. A &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object created by calling &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;con.cursor()&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; attribute that refers to &lt;em&gt;con&lt;/em&gt;:</source>
          <target state="translated">이 읽기 전용 속성은 &lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt; 객체가 사용 하는 SQLite 데이터베이스 &lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 제공 합니다. &lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt; 호출하여 생성 된 객체 &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;con.cursor()&lt;/code&gt; &lt;/a&gt; 해야합니다 &lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt; 을 의미 속성 &lt;em&gt;사기꾼&lt;/em&gt; :&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="766c9f726ec4bbbc98ce6f105956610ea36d9b5f" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the column names of the last query. To remain compatible with the Python DB API, it returns a 7-tuple for each column where the last six items of each tuple are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 읽기 전용 특성은 마지막 쿼리의 열 이름을 제공합니다. Python DB API와의 호환성을 유지하기 위해 각 튜플의 마지막 6 개 항목이 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 인&lt;/a&gt; 각 열에 대해 7- 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="09fc30cd152b579e4003b8e0468f289306536886" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the rowid of the last modified row. It is only set if you issued an &lt;code&gt;INSERT&lt;/code&gt; or a &lt;code&gt;REPLACE&lt;/code&gt; statement using the &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. For operations other than &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;REPLACE&lt;/code&gt; or when &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; is called, &lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt;&lt;code&gt;lastrowid&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 읽기 전용 속성은 마지막으로 수정 된 행의 rowid를 제공합니다. &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &lt;code&gt;INSERT&lt;/code&gt; 또는 &lt;code&gt;REPLACE&lt;/code&gt; 문 을 발행 한 경우에만 설정됩니다 . &lt;code&gt;INSERT&lt;/code&gt; 또는 &lt;code&gt;REPLACE&lt;/code&gt; 이외의 조작 또는 &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 &lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt; &lt;code&gt;lastrowid&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="80fda9d9d63e8a7fa3866afb84364c7cd8db4b60" translate="yes" xml:space="preserve">
          <source>This read-only attribute returns the callback currently associated to the weakref. If there is no callback or if the referent of the weakref is no longer alive then this attribute will have value &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">이 읽기 전용 속성은 현재 weakref와 관련된 콜백을 반환합니다. 콜백이 없거나 weakref의 참조가 더 이상 존재하지 않으면이 속성의 값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48d8bbbbed6be36e2bb950ba0b30ddd5b2449618" translate="yes" xml:space="preserve">
          <source>This read-only variable is true when the ctypes data instance has allocated the memory block itself, false otherwise.</source>
          <target state="translated">이 읽기 전용 변수는 ctypes 데이터 인스턴스가 메모리 블록 자체를 할당 한 경우 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2d68cee5805da902a83d5bfa711dcff56eea7130" translate="yes" xml:space="preserve">
          <source>This relies on the Python interpreter to print the traceback. The content type of the output is set to plain text, which disables all HTML processing. If your script works, the raw HTML will be displayed by your client. If it raises an exception, most likely after the first two lines have been printed, a traceback will be displayed. Because no HTML interpretation is going on, the traceback will be readable.</source>
          <target state="translated">이것은 파이썬 인터프리터에 의존하여 역 추적을 인쇄합니다. 출력의 컨텐츠 유형이 일반 텍스트로 설정되어 모든 HTML 처리가 사용 불가능합니다. 스크립트가 작동하면 클라이언트가 원시 HTML을 표시합니다. 예외가 발생하면 처음 두 줄이 인쇄 된 후 트레이스 백이 표시됩니다. HTML 해석이 진행되지 않기 때문에 역 추적을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c21c6510876040958744e60b431038eb6290b8f1" translate="yes" xml:space="preserve">
          <source>This represents the &lt;em&gt;total&lt;/em&gt; offset from UTC; for example, if a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; object represents both time zone and DST adjustments, &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; should return their sum. If the UTC offset isn&amp;rsquo;t known, return &lt;code&gt;None&lt;/code&gt;. Else the value returned must be a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt; (the magnitude of the offset must be less than one day). Most implementations of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">UTC로부터 의 &lt;em&gt;총&lt;/em&gt; 오프셋을 나타냅니다 . 예를 들어, &lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; 객체가 시간대 및 DST 조정을 모두 나타내는 경우 utcoffset &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt; 은 해당 합계를 반환해야합니다. UTC 오프셋을 알 수 없으면 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다. 그 밖의 값이 있어야 리턴 &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; 의&lt;/a&gt; 사이 엄격 객체 &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; 및 &lt;code&gt;timedelta(hours=24)&lt;/code&gt; (덜 하루 이상이어야 오프셋의 크기). &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt; 의 대부분의 구현 은 아마도이 두 가지 중 하나와 비슷할 것입니다.</target>
        </trans-unit>
        <trans-unit id="ae2c026eab6c38212209d3da1f20eaeb88618525" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">이 요구 사항은 이전에 &lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt; 과 같은 추상 기본 클래스에도 적용되었습니다 . 이 접근법의 문제점은 클래스가 클래스를 지원하도록 명시 적으로 표시되어야한다는 것인데, 이는 비유 행적이며 관용적으로 동적으로 유형이 지정된 파이썬 코드에서 일반적으로하는 것과는 다릅니다. 예를 들어, 이것은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484를&lt;/strong&gt;&lt;/a&gt; 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="1db8b2b926d15fc9e5ff1b54f85ea91e17397161" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">이 요구 사항은 이전에 &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt; 과 같은 추상 기본 클래스에도 적용되었습니다 . 이 접근 방식의 문제점은 클래스를 지원하기 위해 명시 적으로 표시해야한다는 것입니다. 이는 비 파이썬적이고 관용적 동적 형식의 파이썬 코드에서 일반적으로 수행하는 것과는 다릅니다. 예를 들어, 이것은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484를&lt;/strong&gt;&lt;/a&gt; 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="60d45c7cbcfc14553d15cc0afc5a5f55832cec95" translate="yes" xml:space="preserve">
          <source>This returns a 2-tuple composed of a numeric response code and the actual response line (multiline responses are joined into one long line.)</source>
          <target state="translated">숫자 응답 코드와 실제 응답 행으로 구성된 2 개의 튜플을 리턴합니다 (여러 행 응답은 하나의 긴 행으로 결합 됨).</target>
        </trans-unit>
        <trans-unit id="ce494d42bf1945c6104888625a79831961bfb6b8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; instance mapping registered file objects to their associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">등록 된 파일 객체를 관련 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스에 매핑 하는 &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0ae1bfe78d9078946a543d2e004e8f2f33fc9494" translate="yes" xml:space="preserve">
          <source>This returns a list of &lt;code&gt;(key, events)&lt;/code&gt; tuples, one for each ready file object.</source>
          <target state="translated">준비된 파일 객체마다 하나씩 &lt;code&gt;(key, events)&lt;/code&gt; 튜플 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a2461b890b46eff3e71a389342294683221b3c10" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is already registered.</source>
          <target state="translated">새 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 하거나 잘못된 이벤트 마스크 나 파일 설명 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 를 발생 시키거나 파일 객체가 이미 등록 된 경우 KeyError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f0af5f9c7d1e79bede98658b4c1872446e368501" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">새 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 하거나 잘못된 이벤트 마스크 또는 파일 설명 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 를 발생 시키거나 파일 객체가 등록되지 않은 경우 KeyError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7ac3d8ec4193515be3bfc7e4584bb1a898663843" translate="yes" xml:space="preserve">
          <source>This returns the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance associated to this file object, or raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">이 파일 객체와 관련된 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 하거나 파일 객체가 등록되지 않은 경우 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9c8889dc6fd5ab529008f5a135efbc51515a1644" translate="yes" xml:space="preserve">
          <source>This returns the associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is not registered. It will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is invalid (e.g. it has no &lt;code&gt;fileno()&lt;/code&gt; method or its &lt;code&gt;fileno()&lt;/code&gt; method has an invalid return value).</source>
          <target state="translated">연결된 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 하거나 &lt;em&gt;fileobj&lt;/em&gt; 가 등록되지 않은 경우 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 를&lt;/a&gt; 발생 &lt;em&gt;시킵니다&lt;/em&gt; . 그것은 올릴 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 하는 경우 &lt;em&gt;fileobj이&lt;/em&gt; 유효하지 않습니다 (가 더이 없습니다 예를 들어, &lt;code&gt;fileno()&lt;/code&gt; 메서드 또는 &lt;code&gt;fileno()&lt;/code&gt; 메소드가 잘못된 반환 값이).</target>
        </trans-unit>
        <trans-unit id="890171d76d69be7da385c6150dad06c5b69eae30" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">기본 &lt;a href=&quot;select#select.devpoll&quot;&gt; &lt;code&gt;select.devpoll()&lt;/code&gt; &lt;/a&gt; 객체가 사용하는 파일 디스크립터를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="54137bf7adca252cdc57e4289272b49bb029a9a7" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">기본 &lt;a href=&quot;select#select.epoll&quot;&gt; &lt;code&gt;select.epoll()&lt;/code&gt; &lt;/a&gt; 객체가 사용하는 파일 디스크립터를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="51d90f09c2ffca4ed06478c9f1bdb12b3c85819c" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">기본 &lt;a href=&quot;select#select.kqueue&quot;&gt; &lt;code&gt;select.kqueue()&lt;/code&gt; &lt;/a&gt; 객체가 사용하는 파일 디스크립터를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="58106684b347e2251ea09e0272c882c066c7dccd" translate="yes" xml:space="preserve">
          <source>This returns the value unchanged. To the type checker this signals that the return value has the designated type, but at runtime we intentionally don&amp;rsquo;t check anything (we want this to be as fast as possible).</source>
          <target state="translated">변경되지 않은 값을 반환합니다. 타입 체커에게 이것은 반환 값이 지정된 타입을 가지고 있음을 알리지 만, 런타임에 의도적으로 아무것도 체크하지 않습니다 (가능한 한 빨리하기를 원합니다).</target>
        </trans-unit>
        <trans-unit id="dce193572792ff4f49cc2515deda79b3d1240361" translate="yes" xml:space="preserve">
          <source>This routine adds various parameters required for WSGI, including &lt;code&gt;HTTP_HOST&lt;/code&gt;, &lt;code&gt;SERVER_NAME&lt;/code&gt;, &lt;code&gt;SERVER_PORT&lt;/code&gt;, &lt;code&gt;REQUEST_METHOD&lt;/code&gt;, &lt;code&gt;SCRIPT_NAME&lt;/code&gt;, &lt;code&gt;PATH_INFO&lt;/code&gt;, and all of the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;-defined &lt;code&gt;wsgi.*&lt;/code&gt; variables. It only supplies default values, and does not replace any existing settings for these variables.</source>
          <target state="translated">이 루틴은 &lt;code&gt;HTTP_HOST&lt;/code&gt; , &lt;code&gt;SERVER_NAME&lt;/code&gt; , &lt;code&gt;SERVER_PORT&lt;/code&gt; , &lt;code&gt;REQUEST_METHOD&lt;/code&gt; , &lt;code&gt;SCRIPT_NAME&lt;/code&gt; , &lt;code&gt;PATH_INFO&lt;/code&gt; 및 모든 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; 정의 &lt;code&gt;wsgi.*&lt;/code&gt; 변수를 포함하여 WSGI에 필요한 다양한 매개 변수를 추가 합니다. 기본값 만 제공하며 이러한 변수에 대한 기존 설정을 대체하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8c17ece425d1c53c1e6d2e295e3ffa164046a05" translate="yes" xml:space="preserve">
          <source>This routine allows/disallows the SQLite engine to load SQLite extensions from shared libraries. SQLite extensions can define new functions, aggregates or whole new virtual table implementations. One well-known extension is the fulltext-search extension distributed with SQLite.</source>
          <target state="translated">이 루틴은 SQLite 엔진이 공유 라이브러리에서 SQLite 확장을로드하도록 허용 / 금지합니다. SQLite 확장은 새로운 함수, 집계 또는 완전히 새로운 가상 테이블 구현을 정의 할 수 있습니다. 잘 알려진 확장 중 하나는 SQLite와 함께 배포되는 전체 텍스트 검색 확장입니다.</target>
        </trans-unit>
        <trans-unit id="d1123f885c50d2316ac2017015f6afc8da26ba45" translate="yes" xml:space="preserve">
          <source>This routine is intended to make it easier for unit tests of WSGI servers and applications to set up dummy environments. It should NOT be used by actual WSGI servers or applications, since the data is fake!</source>
          <target state="translated">이 루틴은 WSGI 서버 및 애플리케이션의 단위 테스트가 더미 환경을보다 쉽게 ​​설정하도록하기위한 것입니다. 데이터가 가짜이기 때문에 실제 WSGI 서버 또는 응용 프로그램에서 사용해서는 안됩니다!</target>
        </trans-unit>
        <trans-unit id="378be7eabaecd105cf27a5a5348d58ac5d4009b6" translate="yes" xml:space="preserve">
          <source>This routine loads a SQLite extension from a shared library. You have to enable extension loading with &lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt;&lt;code&gt;enable_load_extension()&lt;/code&gt;&lt;/a&gt; before you can use this routine.</source>
          <target state="translated">이 루틴은 공유 라이브러리에서 SQLite 확장을로드합니다. 이 루틴을 사용하려면 &lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt; &lt;code&gt;enable_load_extension()&lt;/code&gt; &lt;/a&gt; 을 사용하여 확장 로딩을 활성화 해야합니다.</target>
        </trans-unit>
        <trans-unit id="d788abec338f0943063ad095afb2980ab498b313" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for each attempt to access a column of a table in the database. The callback should return &lt;code&gt;SQLITE_OK&lt;/code&gt; if access is allowed, &lt;code&gt;SQLITE_DENY&lt;/code&gt; if the entire SQL statement should be aborted with an error and &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; if the column should be treated as a NULL value. These constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 루틴은 콜백을 등록합니다. 콜백은 데이터베이스에서 테이블의 열에 액세스 할 때마다 호출됩니다. 콜백은 반환해야 &lt;code&gt;SQLITE_OK&lt;/code&gt; 를 액세스가 허용되는 경우, &lt;code&gt;SQLITE_DENY&lt;/code&gt; 을 전체 SQL 문이 오류와 함께 중단 할 필요가있는 경우 &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; 열이 NULL 값으로 처리 할 필요가있는 경우. 이 상수는 &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt; 모듈 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9474baef0d262e49cda55fd848e1f843ac1d207" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for every &lt;em&gt;n&lt;/em&gt; instructions of the SQLite virtual machine. This is useful if you want to get called from SQLite during long-running operations, for example to update a GUI.</source>
          <target state="translated">이 루틴은 콜백을 등록합니다. 콜백은 SQLite 가상 머신의 모든 &lt;em&gt;n&lt;/em&gt; 명령어에 대해 호출됩니다 . 이는 GUI를 업데이트하는 등 장기 실행 작업 중에 SQLite에서 호출하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="215de7d536e14c0ec534e867eb0bed570485a76d" translate="yes" xml:space="preserve">
          <source>This runs faster than the &lt;a href=&quot;#statistics.mean&quot;&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt; function and it always returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable. If the input dataset is empty, raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#statistics.mean&quot;&gt; &lt;code&gt;mean()&lt;/code&gt; &lt;/a&gt; 함수 보다 빠르게 실행되며 항상 &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . &lt;em&gt;데이터&lt;/em&gt; 시퀀스 또는 반복 가능한 수있다. 입력 데이터 세트가 비어 있으면 &lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="31740e1f356225e9527182782ab65f90aa3b3442" translate="yes" xml:space="preserve">
          <source>This script is also available for download &lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;online&lt;/a&gt;.</source>
          <target state="translated">이 스크립트는 &lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;온라인으로&lt;/a&gt; 다운로드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="362b81a476a7e91e404db2c61e0da0c0266fd8f5" translate="yes" xml:space="preserve">
          <source>This search path is used when resolving dependencies for imported extension modules (the module itself is resolved through sys.path), and also by &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 검색 경로는 가져온 확장 모듈 (sys.path를 통해 모듈 자체가 해결됨) 및 &lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; 의&lt;/a&gt; 종속성을 해석 할 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1987d966d658e949051757623c7980ace367f55" translate="yes" xml:space="preserve">
          <source>This section contains examples of the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; syntax and comparison with the old &lt;code&gt;%&lt;/code&gt;-formatting.</source>
          <target state="translated">이 섹션에는 &lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt; 구문 의 예 와 이전 &lt;code&gt;%&lt;/code&gt; 형식화 와의 비교가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caa21db1421dcf117cd37e0c3689b0534dd1eafd" translate="yes" xml:space="preserve">
          <source>This section describes high-level async/await asyncio APIs to create and manage subprocesses.</source>
          <target state="translated">이 섹션에서는 하위 프로세스를 작성하고 관리하기위한 고급 async / await asyncio API에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d7a523d820ebe70975810d89173fdd5eb434fe64" translate="yes" xml:space="preserve">
          <source>This section describes in depth the API of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; API에 대해 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="558b5a3c6d2df134347c7df16cc29ff8ad425934" translate="yes" xml:space="preserve">
          <source>This section describes some examples and recipes for making effective use of the tools provided by &lt;a href=&quot;#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 절에서는 &lt;a href=&quot;#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; 에서&lt;/a&gt; 제공하는 도구를 효과적으로 사용하기위한 몇 가지 예와 레시피에 대해 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="be3c37b9d39743f5da99e8a42612440f3ba28e7b" translate="yes" xml:space="preserve">
          <source>This section describes the API for configuring the logging module.</source>
          <target state="translated">이 섹션에서는 로깅 모듈 구성을위한 API에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="156a697bb0d3f10fd45e11f2465ce109feb52348" translate="yes" xml:space="preserve">
          <source>This section describes the conformance requirements and relationships between the Python DOM API, the W3C DOM recommendations, and the OMG IDL mapping for Python.</source>
          <target state="translated">이 섹션에서는 Python DOM API, W3C DOM 권장 사항 및 Python의 OMG IDL 맵핑 간의 준수 요구 사항 및 관계에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8eeef4df7928680ba8f67bceaa4a14542597b485" translate="yes" xml:space="preserve">
          <source>This section discusses the performance of the provided concrete I/O implementations.</source>
          <target state="translated">이 섹션에서는 제공된 구체적인 I / O 구현의 성능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="607b3cfb7c46b7d396eba60d31432af9f7d8f677" translate="yes" xml:space="preserve">
          <source>This section documents the objects and functions in the &lt;code&gt;ssl&lt;/code&gt; module; for more general information about TLS, SSL, and certificates, the reader is referred to the documents in the &amp;ldquo;See Also&amp;rdquo; section at the bottom.</source>
          <target state="translated">이 절에서는 &lt;code&gt;ssl&lt;/code&gt; 모듈 의 객체와 기능에 대해 설명 합니다 . TLS, SSL 및 인증서에 대한보다 일반적인 정보는 하단의 &quot;참조&quot;섹션에있는 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c30eb3669356c7ec4ccfc215134676b33af7b3b" translate="yes" xml:space="preserve">
          <source>This section examines in detail how doctest works: which docstrings it looks at, how it finds interactive examples, what execution context it uses, how it handles exceptions, and how option flags can be used to control its behavior. This is the information that you need to know to write doctest examples; for information about actually running doctest on these examples, see the following sections.</source>
          <target state="translated">이 섹션에서는 doctest가 작동하는 방식, 즉 어떤 docstring에서 보이는지, 대화 형 예제를 찾는 방법, 사용하는 실행 컨텍스트, 예외를 처리하는 방법 및 동작을 제어하기 위해 옵션 플래그를 사용하는 방법에 대해 자세히 설명합니다. 이것은 doctest 예제를 작성하기 위해 알아야 할 정보입니다. 이 예제에서 실제로 doctest를 실행하는 것에 대한 정보는 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70f26576b84f9e9c7ebedde34306a5ad087e6144" translate="yes" xml:space="preserve">
          <source>This section is designed in two parts: the first half (roughly) covers background material, while the second half can be taken to the keyboard as a handy reference.</source>
          <target state="translated">이 섹션은 두 부분으로 구성되어 있습니다. 전반부는 배경 자료를 다루고, 후반은 편리한 참고 자료로 키보드로 가져갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c854e243687db6fd2cf2c930ede6e8b64a9ed2f" translate="yes" xml:space="preserve">
          <source>This section is not designed to be an exhaustive tutorial on either Tk or Tkinter. Rather, it is intended as a stop gap, providing some introductory orientation on the system.</source>
          <target state="translated">이 섹션은 Tk 또는 Tkinter에 대한 포괄적 인 자습서가 아닙니다. 오히려, 시스템에 약간의 소개 방향을 제공하는 스톱 갭으로 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="0fbf10a91d27928b5c7b954152fd9b94bd39c230" translate="yes" xml:space="preserve">
          <source>This section is provided for users that &amp;ldquo;don&amp;rsquo;t want to read the manual.&amp;rdquo; It provides a very brief overview, and allows a user to rapidly perform profiling on an existing application.</source>
          <target state="translated">이 섹션은 &quot;설명서를 읽고 싶지 않은 사용자&quot;를 위해 제공됩니다. 매우 간단한 개요를 제공하며 사용자가 기존 애플리케이션에서 프로파일 링을 빠르게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c5cd0414177de92e7fbb94b4034b625efcfd646" translate="yes" xml:space="preserve">
          <source>This section outlines high-level asyncio APIs to work with coroutines and Tasks.</source>
          <target state="translated">이 섹션에서는 코 루틴 및 작업과 함께 작동하는 고급 asyncio API에 대해 간략하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="defa96b3e88910bfa50682641b6305dc34fca129" translate="yes" xml:space="preserve">
          <source>This section presents a simple example of how to build a shell around a few of the commands in the &lt;a href=&quot;turtle#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;turtle#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt; 모듈 의 몇 가지 명령 주위에 쉘을 작성하는 방법에 대한 간단한 예를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="b0f81d28be12207c741e0c33582bce94a49c9adc" translate="yes" xml:space="preserve">
          <source>This section shows recipes and best practices for using &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; to manage a basic level of security.</source>
          <target state="translated">이 섹션에서는 기본 보안 수준을 관리하기 위해 &lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt; 을 사용하는 방법과 모범 사례를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d526a5a648c94cb75fcf6517b2a94c66d6c77c00" translate="yes" xml:space="preserve">
          <source>This section shows recipes for creating an extended toolset using the existing itertools as building blocks.</source>
          <target state="translated">이 섹션에서는 기존 itertools를 빌딩 블록으로 사용하여 확장 도구 세트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1383ac76a2854ebc53757848481beccc1c9891e8" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with chained maps.</source>
          <target state="translated">이 섹션에서는 체인 맵 작업에 대한 다양한 접근 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="df040f46fd980279c14fec4cda4247fcf05f72ef" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with deques.</source>
          <target state="translated">이 섹션에서는 deques 작업에 대한 다양한 접근 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4dd9bc73a0d82a9e97e43369211ae46a3180915d" translate="yes" xml:space="preserve">
          <source>This sets the locale for all categories to the user&amp;rsquo;s default setting (typically specified in the &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; environment variable). If the locale is not changed thereafter, using multithreading should not cause problems.</source>
          <target state="translated">모든 범주의 로캘을 사용자의 기본 설정 (일반적으로 &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; 환경 변수에 지정)으로 설정합니다 . 그 후에 로케일을 변경하지 않으면 멀티 스레딩을 사용해도 문제가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c45721624d3fcb370f2be8569bbab61c3319b06b" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">이 설정은 클라이언트 소켓에는 적용되지 않습니다. &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 보안을 더욱 향상시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ce459a925e80a56c1e647868604b4bf0d8366d6" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">이 설정은 클라이언트 소켓에는 적용되지 않습니다. &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 보안을 더욱 향상시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6fed8d315800e6b3b887f29c56368c13c909c37" translate="yes" xml:space="preserve">
          <source>This setting is thread-specific.</source>
          <target state="translated">이 설정은 스레드마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="de8230cad107c382f2cb44a434b139507f3975fb" translate="yes" xml:space="preserve">
          <source>This should be the first call after the connection to the server has been made. It sends a line to the server consisting of the &lt;em&gt;method&lt;/em&gt; string, the &lt;em&gt;url&lt;/em&gt; string, and the HTTP version (&lt;code&gt;HTTP/1.1&lt;/code&gt;). To disable automatic sending of &lt;code&gt;Host:&lt;/code&gt; or &lt;code&gt;Accept-Encoding:&lt;/code&gt; headers (for example to accept additional content encodings), specify &lt;em&gt;skip_host&lt;/em&gt; or &lt;em&gt;skip_accept_encoding&lt;/em&gt; with non-False values.</source>
          <target state="translated">서버에 연결 한 후 첫 번째 호출이어야합니다. &lt;em&gt;메소드&lt;/em&gt; 문자열, &lt;em&gt;URL&lt;/em&gt; 문자열 및 HTTP 버전 ( &lt;code&gt;HTTP/1.1&lt;/code&gt; ) 으로 구성된 행을 서버로 보냅니다 . &lt;code&gt;Host:&lt;/code&gt; 또는 &lt;code&gt;Accept-Encoding:&lt;/code&gt; 헤더 의 자동 전송을 비활성화하려면 (예 : 추가 콘텐츠 인코딩 허용) false가 아닌 값으로 &lt;em&gt;skip_host&lt;/em&gt; 또는 &lt;em&gt;skip_accept_encoding&lt;/em&gt; 을 지정 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5f7c62680666d8d0354a70774b620f0cfc3a23c2" translate="yes" xml:space="preserve">
          <source>This should not be reported to Python applications.</source>
          <target state="translated">이것은 파이썬 애플리케이션에보고해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="bd3d85e3d37c9e73e52b13fff11ec91a95c5f8b7" translate="yes" xml:space="preserve">
          <source>This should produce the same results as those gotten from installing the &lt;code&gt;cgi.py&lt;/code&gt; file itself.</source>
          <target state="translated">&lt;code&gt;cgi.py&lt;/code&gt; 파일 자체 를 설치했을 때와 동일한 결과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="a2f5181e6bc07cf2a06e008b2962ada26e303b7c" translate="yes" xml:space="preserve">
          <source>This should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; representing all the tests from the package. (&lt;code&gt;standard_tests&lt;/code&gt; will only contain tests collected from &lt;code&gt;__init__.py&lt;/code&gt;.)</source>
          <target state="translated">패키지의 모든 테스트를 나타내는 &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; 를&lt;/a&gt; 반환해야 합니다. ( &lt;code&gt;standard_tests&lt;/code&gt; 는 &lt;code&gt;__init__.py&lt;/code&gt; 에서 수집 한 테스트 만 포함합니다 .)</target>
        </trans-unit>
        <trans-unit id="b617419bf001641a41f3ee636896b8e09558569d" translate="yes" xml:space="preserve">
          <source>This simple example implements a basic read-eval-print loop, similar to (but less useful than) the standard Python interactive interpreter loop. For a more complete implementation of the interpreter loop, refer to the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">이 간단한 예제는 표준 Python 대화식 인터프리터 루프와 비슷하지만 유용하지는 않은 기본 읽기-인쇄-프린트 루프를 구현합니다. 인터프리터 루프의보다 완전한 구현에 대해서는 &lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1fad110fec75f0f6958a041c1017071a503dd913" translate="yes" xml:space="preserve">
          <source>This simple example shows how an application can use object IDs to retrieve objects that it has seen before. The IDs of the objects can then be used in other data structures without forcing the objects to remain alive, but the objects can still be retrieved by ID if they do.</source>
          <target state="translated">이 간단한 예제는 애플리케이션이 오브젝트 ID를 사용하여 이전에 본 오브젝트를 검색하는 방법을 보여줍니다. 그런 다음 오브젝트의 ID를 오브젝트를 강제로 유지하지 않고 다른 데이터 구조에서 사용할 수 있지만 ID가 있으면 오브젝트를 여전히 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98547658e0e1aab7962e8a30c8538b1ef6afdfc8" translate="yes" xml:space="preserve">
          <source>This site is the focal point for the definition of the SAX API. It provides a Java implementation and online documentation. Links to implementations and historical information are also available.</source>
          <target state="translated">이 사이트는 SAX API 정의의 중심입니다. Java 구현 및 온라인 문서를 제공합니다. 구현 및 과거 정보에 대한 링크도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="401b694add20f94820e8cb3c498a29fb6a883ca9" translate="yes" xml:space="preserve">
          <source>This situation is common for example when a form contains a group of multiple checkboxes with the same name:</source>
          <target state="translated">이 상황은 예를 들어 양식에 동일한 이름의 여러 확인란 그룹이 포함 된 경우에 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="79ca8c995a5a4457b8793fa31ef3820b296c6a65" translate="yes" xml:space="preserve">
          <source>This solution is as safe as &lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt;&lt;code&gt;MultiLoopChildWatcher&lt;/code&gt;&lt;/a&gt; and has the same &lt;em&gt;O(N)&lt;/em&gt; complexity but requires a running event loop in the main thread to work.</source>
          <target state="translated">이 솔루션은 &lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt; &lt;code&gt;MultiLoopChildWatcher&lt;/code&gt; &lt;/a&gt; 만큼 안전하며 &lt;em&gt;O (N)&lt;/em&gt; 복잡도 는 동일 하지만 기본 스레드에서 실행중인 이벤트 루프가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d82fa37f6f5ce4f1b03930450505a16588bbb64a" translate="yes" xml:space="preserve">
          <source>This solution requires a running event loop in the main thread to work, as &lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt;&lt;code&gt;SafeChildWatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 솔루션을 사용하려면 기본 스레드에서 실행중인 이벤트 루프가 &lt;a href=&quot;#asyncio.SafeChildWatcher&quot;&gt; &lt;code&gt;SafeChildWatcher&lt;/code&gt; &lt;/a&gt; 로 작동 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0b1dd4e320021de44deafa76cdbbf7a1d713f5e8" translate="yes" xml:space="preserve">
          <source>This sorts the profile by cumulative time in a function, and then only prints the ten most significant lines. If you want to understand what algorithms are taking time, the above line is what you would use.</source>
          <target state="translated">함수에서 누적 시간을 기준으로 프로파일을 정렬 한 다음 가장 중요한 10 개의 행만 인쇄합니다. 시간이 걸리는 알고리즘을 이해하려면 위의 줄을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="87ad4d93ff10f22be77fdd674b33ad9054193f5c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt; 데코레이터가 이제 추상 메소드에 적용될 때 추상으로 올바르게 식별 되므로이 특별한 경우는 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8129c233d78f17359a870def3539e6e911d0906c" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">이 특별한 경우는 &lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt; 데코레이터가 이제 추상 메소드에 적용될 때 추상으로 올바르게 식별되므로 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="211e4437395fb7d3eacf45324b984e92d0566c05" translate="yes" xml:space="preserve">
          <source>This special case is deprecated, as the &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt; decorator is now correctly identified as abstract when applied to an abstract method:</source>
          <target state="translated">&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt; 데코레이터가 이제 추상 메소드에 적용될 때 추상으로 올바르게 식별 되므로이 특별한 경우는 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="279114bff60b44dfc0066ad46c397c25064a129c" translate="yes" xml:space="preserve">
          <source>This specification defines a Uniform Resource Name namespace for UUIDs, the internal format of UUIDs, and methods of generating UUIDs.</source>
          <target state="translated">이 사양은 UUID에 대한 Uniform Resource Name 네임 스페이스, UUID의 내부 형식 및 UUID 생성 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="874696978cd5bbb1087717ab3332b7f732497e0c" translate="yes" xml:space="preserve">
          <source>This specifies the HTTP protocol version used in responses. If set to &lt;code&gt;'HTTP/1.1'&lt;/code&gt;, the server will permit HTTP persistent connections; however, your server &lt;em&gt;must&lt;/em&gt; then include an accurate &lt;code&gt;Content-Length&lt;/code&gt; header (using &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt;&lt;code&gt;send_header()&lt;/code&gt;&lt;/a&gt;) in all of its responses to clients. For backwards compatibility, the setting defaults to &lt;code&gt;'HTTP/1.0'&lt;/code&gt;.</source>
          <target state="translated">응답에 사용되는 HTTP 프로토콜 버전을 지정합니다. 로 설정하면 &lt;code&gt;'HTTP/1.1'&lt;/code&gt; 는 , 서버는 HTTP 지속 연결을 허용한다; 그러나 서버 &lt;em&gt;는&lt;/em&gt; 클라이언트에 대한 모든 응답에 정확한 &lt;code&gt;Content-Length&lt;/code&gt; 헤더 ( &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.send_header&quot;&gt; &lt;code&gt;send_header()&lt;/code&gt; &lt;/a&gt; ) 를 포함 &lt;em&gt;해야합니다&lt;/em&gt; . 이전 버전과의 호환성을 위해 기본 설정은 &lt;code&gt;'HTTP/1.0'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4926906ff6c9d731dd2502d835a0c4a022613e00" translate="yes" xml:space="preserve">
          <source>This specifies the formal syntax and semantics of absolute URLs.</source>
          <target state="translated">절대 URL의 형식적 구문과 의미를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b12ecdf4a18691d61f1d7860cd0959f3b286fd24" translate="yes" xml:space="preserve">
          <source>This specifies the mapping from OMG IDL to Python.</source>
          <target state="translated">OMG IDL에서 Python으로의 맵핑을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8da551d8221388503358b7d9ca2bc9f174bf5895" translate="yes" xml:space="preserve">
          <source>This specifies the parsing requirements of IPv6 URLs.</source>
          <target state="translated">IPv6 URL의 구문 분석 요구 사항을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="93065c605eefe1a69ebb1b6bc29b80656e394208" translate="yes" xml:space="preserve">
          <source>This stack model is used so that context managers that acquire their resources in their &lt;code&gt;__init__&lt;/code&gt; method (such as file objects) can be handled correctly.</source>
          <target state="translated">이 스택 모델은 &lt;code&gt;__init__&lt;/code&gt; 메소드 (예 : 파일 객체) 에서 리소스를 얻는 컨텍스트 관리자를 올바르게 처리 할 수 ​​있도록 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="657b165eabad3ef2110a1d6933accdc767db077c" translate="yes" xml:space="preserve">
          <source>This starts up a background thread to monitor the queue for LogRecords to process.</source>
          <target state="translated">그러면 LogRecord가 처리 할 큐를 모니터하기 위해 백그라운드 스레드가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="cfff9554c5adbc575949e5e35567b44b13814573" translate="yes" xml:space="preserve">
          <source>This statement assumes that you use the appropriate setting for &lt;code&gt;unixfrom&lt;/code&gt;, and that there are no &lt;code&gt;policy&lt;/code&gt; settings calling for automatic adjustments (for example, &lt;code&gt;refold_source&lt;/code&gt; must be &lt;code&gt;none&lt;/code&gt;, which is &lt;em&gt;not&lt;/em&gt; the default). It is also not 100% true, since if the message does not conform to the RFC standards occasionally information about the exact original text is lost during parsing error recovery. It is a goal to fix these latter edge cases when possible.</source>
          <target state="translated">이 명령문은 &lt;code&gt;unixfrom&lt;/code&gt; 에 적절한 설정을 사용하고 자동 조정을 요구하는 &lt;code&gt;policy&lt;/code&gt; 설정 이 없다고 &lt;code&gt;refold_source&lt;/code&gt; 합니다 (예 : refold_source 는 &lt;code&gt;none&lt;/code&gt; 이어야 함 , 기본값 이 &lt;em&gt;아님&lt;/em&gt; ). 메시지가 RFC 표준을 준수하지 않는 경우 때때로 구문 분석 오류 복구 중에 정확한 원본 텍스트에 대한 정보가 손실되므로 100 % 사실이 아닙니다. 가능한 경우 후자의 경우를 해결하는 것이 목표입니다.</target>
        </trans-unit>
        <trans-unit id="5695000d7ff7e5630ab5bb3f278a09531558042e" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">이 정적 메소드는 &lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt; 사용할 수있는 변환 표를 반환합니다. bytes.translate () 는 각 문자를 &lt;em&gt;에서&lt;/em&gt; 같은 위치의 문자로 매핑 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;from&lt;/em&gt; 과 &lt;em&gt;to&lt;/em&gt; 는 모두 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​같은 객체&lt;/a&gt; 이고 길이가 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="806daec20accc2ba95a0d761aa1cdcf46a17a2f4" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#bytes.translate&quot;&gt;&lt;code&gt;bytes.translate()&lt;/code&gt;&lt;/a&gt; that will map each character in &lt;em&gt;from&lt;/em&gt; into the character at the same position in &lt;em&gt;to&lt;/em&gt;; &lt;em&gt;from&lt;/em&gt; and &lt;em&gt;to&lt;/em&gt; must both be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; and have the same length.</source>
          <target state="translated">이 정적 방법에 대한 번역 테이블 가능한 반환 &lt;a href=&quot;#bytes.translate&quot;&gt; &lt;code&gt;bytes.translate()&lt;/code&gt; &lt;/a&gt; 에서 각 문자를 매핑됩니다 &lt;em&gt;에서&lt;/em&gt; 의 같은 위치에있는 문자로 &lt;em&gt;에를&lt;/em&gt; ; &lt;em&gt;from&lt;/em&gt; 과 &lt;em&gt;to&lt;/em&gt; 는 모두 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 여야하며 길이가 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="fed93affb82c475aece27560d7f7449f85bbe008" translate="yes" xml:space="preserve">
          <source>This static method returns a translation table usable for &lt;a href=&quot;#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정적 메소드는 &lt;a href=&quot;#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; &lt;/a&gt; 사용 가능한 변환 표를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ee1038a57ec92220c32f002317d973e94a4e405f" translate="yes" xml:space="preserve">
          <source>This string contains a platform identifier that can be used to append platform-specific components to &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, for instance.</source>
          <target state="translated">이 문자열에는 플랫폼 별 구성 요소를 &lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 에 추가하는 데 사용할 수있는 플랫폼 식별자가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee8ef044d471590e32de3b3a685514869bb11594" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt;&lt;code&gt;HTMLCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.HTMLCalendar&quot;&gt; &lt;code&gt;HTMLCalendar&lt;/code&gt; &lt;/a&gt; 의이 서브 클래스는 생성자에서 로케일 이름을 전달할 수 있으며 지정된 로케일로 월 및 주중 이름을 리턴합니다. 이 로케일에 인코딩이 포함 된 경우 월 및 요일 이름을 포함하는 모든 문자열이 유니 코드로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="dbc4f4107eee8222a6f5a5aa58cd266674093796" translate="yes" xml:space="preserve">
          <source>This subclass of &lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; can be passed a locale name in the constructor and will return month and weekday names in the specified locale. If this locale includes an encoding all strings containing month and weekday names will be returned as unicode.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar&quot;&gt; &lt;code&gt;TextCalendar&lt;/code&gt; &lt;/a&gt; 의이 서브 클래스는 생성자에서 로케일 이름을 전달할 수 있으며 지정된 로케일로 월 및 주중 이름을 리턴합니다. 이 로케일에 인코딩이 포함 된 경우 월 및 요일 이름을 포함하는 모든 문자열이 유니 코드로 리턴됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
