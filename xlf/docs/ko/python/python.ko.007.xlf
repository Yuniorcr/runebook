<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="1d8e75405de8be939b05db3eef9ab4daa516674d" translate="yes" xml:space="preserve">
          <source>C-d</source>
          <target state="translated">C-d</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="aa3408adf600065cf33c17971e8cdd9f76e5d785" translate="yes" xml:space="preserve">
          <source>C-n</source>
          <target state="translated">C-n</target>
        </trans-unit>
        <trans-unit id="332268c029d8126391ff9151361238bdf44870d8" translate="yes" xml:space="preserve">
          <source>C-p</source>
          <target state="translated">C-p</target>
        </trans-unit>
        <trans-unit id="121c73e0febd3ed6eed71fa025798c8f1aacb9e1" translate="yes" xml:space="preserve">
          <source>C-space</source>
          <target state="translated">C-space</target>
        </trans-unit>
        <trans-unit id="0a23d9de112f4305bbf7d308788b4615cc11e2a2" translate="yes" xml:space="preserve">
          <source>C-v</source>
          <target state="translated">C-v</target>
        </trans-unit>
        <trans-unit id="06778eb851df0109025af462f33a15822a2c4acd" translate="yes" xml:space="preserve">
          <source>C:\&amp;gt; &amp;lt;venv&amp;gt;\Scripts\activate.bat</source>
          <target state="translated">C : \&amp;gt; &amp;lt;venv&amp;gt; \ Scripts \ activate.bat</target>
        </trans-unit>
        <trans-unit id="2a4d6cc3bfd116624ab6eab2afe4bf74100b9d76" translate="yes" xml:space="preserve">
          <source>CA certificates</source>
          <target state="translated">CA 인증서</target>
        </trans-unit>
        <trans-unit id="695e5aa14e6fe8e356628b82479477b0506f9c0b" translate="yes" xml:space="preserve">
          <source>CAB Objects</source>
          <target state="translated">CAB 개체</target>
        </trans-unit>
        <trans-unit id="da51553cdca6a389c76ebbb44f8f3db969bdf6f0" translate="yes" xml:space="preserve">
          <source>CAN_BCM, in the CAN protocol family, is the broadcast manager (BCM) protocol. Broadcast manager constants, documented in the Linux documentation, are also defined in the socket module.</source>
          <target state="translated">CAN 프로토콜 제품군에서 CAN_BCM은 브로드 캐스트 관리자 (BCM) 프로토콜입니다. Linux 문서에 문서화 된 브로드 캐스트 관리자 상수도 소켓 모듈에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5950e554ab73c5d2c3309f13271b96de1e6397c6" translate="yes" xml:space="preserve">
          <source>CAN_ISOTP, in the CAN protocol family, is the ISO-TP (ISO 15765-2) protocol. ISO-TP constants, documented in the Linux documentation.</source>
          <target state="translated">CAN 프로토콜 제품군의 CAN_ISOTP는 ISO-TP (ISO 15765-2) 프로토콜입니다. Linux 문서에 문서화 된 ISO-TP 상수.</target>
        </trans-unit>
        <trans-unit id="ebd215d16429fc50898dcfd11ce8500118c2846c" translate="yes" xml:space="preserve">
          <source>CAN_J1939, in the CAN protocol family, is the SAE J1939 protocol. J1939 constants, documented in the Linux documentation.</source>
          <target state="translated">CAN 프로토콜 제품군의 CAN_J1939는 SAE J1939 프로토콜입니다. Linux 문서에 문서화 된 J1939 상수.</target>
        </trans-unit>
        <trans-unit id="257278b28d7dc2b2ef4ebe950494d50618465456" translate="yes" xml:space="preserve">
          <source>CD quality audio (at 16 bits/sample and 2 channels)</source>
          <target state="translated">CD 품질 오디오 (16 비트 / 샘플 및 2 채널)</target>
        </trans-unit>
        <trans-unit id="40d04adc35660ba11ebba59e354ace6b0c068b64" translate="yes" xml:space="preserve">
          <source>CGI scripts run by the &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; class cannot execute redirects (HTTP code 302), because code 200 (script output follows) is sent prior to execution of the CGI script. This pre-empts the status code.</source>
          <target state="translated">CGI 스크립트를 실행 하기 전에 코드 200 (스크립트 출력 이 &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; &lt;/a&gt; )이 전송되므로 CGIHTTPRequestHandler 클래스가 실행하는 CGI 스크립트 는 리디렉션 (HTTP 코드 302)을 실행할 수 없습니다. 상태 코드가 선점됩니다.</target>
        </trans-unit>
        <trans-unit id="bb8a75cfae1ababa3149fa53c620dcd4835d2520" translate="yes" xml:space="preserve">
          <source>CGI-based invocation via &lt;code&gt;sys.stdin&lt;/code&gt;, &lt;code&gt;sys.stdout&lt;/code&gt;, &lt;code&gt;sys.stderr&lt;/code&gt; and &lt;code&gt;os.environ&lt;/code&gt;. This is useful when you have a WSGI application and want to run it as a CGI script. Simply invoke &lt;code&gt;CGIHandler().run(app)&lt;/code&gt;, where &lt;code&gt;app&lt;/code&gt; is the WSGI application object you wish to invoke.</source>
          <target state="translated">를 통해 CGI 기반의 호출 &lt;code&gt;sys.stdin&lt;/code&gt; , &lt;code&gt;sys.stdout&lt;/code&gt; , &lt;code&gt;sys.stderr&lt;/code&gt; 를 하고 &lt;code&gt;os.environ&lt;/code&gt; . 이는 WSGI 애플리케이션이 있고 CGI 스크립트로 실행하려는 경우에 유용합니다. 간단히 호출 &lt;code&gt;CGIHandler().run(app)&lt;/code&gt; , &lt;code&gt;app&lt;/code&gt; 당신이 호출 할 WSGI 응용 프로그램 개체입니다.</target>
        </trans-unit>
        <trans-unit id="e1db242ce7f53756a63c5ab80467f656202373c1" translate="yes" xml:space="preserve">
          <source>CGIXMLRPCRequestHandler</source>
          <target state="translated">CGIXMLRPCRequestHandler</target>
        </trans-unit>
        <trans-unit id="7b70381119b2200eb7425171b0121ee70c6bc114" translate="yes" xml:space="preserve">
          <source>COM methods use a special calling convention: They require a pointer to the COM interface as first argument, in addition to those parameters that are specified in the &lt;code&gt;argtypes&lt;/code&gt; tuple.</source>
          <target state="translated">COM 메서드는 특별한 호출 규칙을 사용합니다 . &lt;code&gt;argtypes&lt;/code&gt; 튜플에 지정된 매개 변수 외에도 COM 인터페이스에 대한 포인터가 첫 번째 인수로 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="46c49201af708ad6cef94b944f1641bb646aa409" translate="yes" xml:space="preserve">
          <source>CORO_CLOSED: Execution has completed.</source>
          <target state="translated">CORO_CLOSED : 실행이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="9f9a30b2eb91ba4138f5e271061570560833646d" translate="yes" xml:space="preserve">
          <source>CORO_CREATED: Waiting to start execution.</source>
          <target state="translated">CORO_CREATED : 실행을 기다리는 중입니다.</target>
        </trans-unit>
        <trans-unit id="31c41d8cf6e40d0532994f4856c83c21bbb1e8e1" translate="yes" xml:space="preserve">
          <source>CORO_RUNNING: Currently being executed by the interpreter.</source>
          <target state="translated">CORO_RUNNING : 현재 통역사에서 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="509ad5271c57dacc40d39e1ed75ef82d8114cd35" translate="yes" xml:space="preserve">
          <source>CORO_SUSPENDED: Currently suspended at an await expression.</source>
          <target state="translated">CORO_SUSPENDED : 현재 대기 식에서 일시 중지되었습니다.</target>
        </trans-unit>
        <trans-unit id="af2ed89a4fe79dba29dbaa99aebebf122da9ac3e" translate="yes" xml:space="preserve">
          <source>CPython implementation detail, the optimized C implementation is only used when &lt;em&gt;digest&lt;/em&gt; is a string and name of a digest algorithm, which is supported by OpenSSL.</source>
          <target state="translated">CPython 구현 세부 사항에서 최적화 된 C 구현은 &lt;em&gt;digest&lt;/em&gt; 가 OpenSSL에서 지원되는 요약 알고리즘의 문자열 및 이름 인 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="80ff1e2a5b02fb3d071d353e0f7ce3735a83e4d0" translate="yes" xml:space="preserve">
          <source>CRC-32 of the uncompressed file.</source>
          <target state="translated">압축되지 않은 파일의 CRC-32</target>
        </trans-unit>
        <trans-unit id="f89e0f610ee638c3646bd23391b25ceaead4ae94" translate="yes" xml:space="preserve">
          <source>CacheFTPHandler Objects</source>
          <target state="translated">CacheFTPHandler 객체</target>
        </trans-unit>
        <trans-unit id="2e38c0231e693ccfb11bc5fa1b2ff3ef6d1232cb" translate="yes" xml:space="preserve">
          <source>Calculate the product of all the elements in the input &lt;em&gt;iterable&lt;/em&gt;. The default &lt;em&gt;start&lt;/em&gt; value for the product is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">입력 &lt;em&gt;iterable&lt;/em&gt; 의 모든 요소의 곱을 계산하십시오 . 제품의 기본 &lt;em&gt;시작&lt;/em&gt; 값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f95d848e27a04164389116a53d8673594a434ca" translate="yes" xml:space="preserve">
          <source>Calculates the appropriate metaclass and creates the class namespace.</source>
          <target state="translated">적절한 메타 클래스를 계산하고 클래스 네임 스페이스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5f5d676056099e45734608d2eff8dbab45fd39b2" translate="yes" xml:space="preserve">
          <source>Calculation of the initial rollover time is done when the handler is initialised. Calculation of subsequent rollover times is done only when rollover occurs, and rollover occurs only when emitting output. If this is not kept in mind, it might lead to some confusion. For example, if an interval of &amp;ldquo;every minute&amp;rdquo; is set, that does not mean you will always see log files with times (in the filename) separated by a minute; if, during application execution, logging output is generated more frequently than once a minute, &lt;em&gt;then&lt;/em&gt; you can expect to see log files with times separated by a minute. If, on the other hand, logging messages are only output once every five minutes (say), then there will be gaps in the file times corresponding to the minutes where no output (and hence no rollover) occurred.</source>
          <target state="translated">초기 롤오버 시간의 계산은 핸들러가 초기화 될 때 수행됩니다. 후속 롤오버 시간의 계산은 롤오버가 발생할 때만 수행되며 출력을 방출 할 때만 롤오버가 발생합니다. 이 점을 명심하지 않으면 혼란이 생길 ​​수 있습니다. 예를 들어, &quot;매 순간&quot;간격이 설정되어 있어도 파일 이름으로 시간이 1 분으로 구분 된 로그 파일이 항상 표시되는 것은 아닙니다. 응용 프로그램 실행 중 로깅 출력이 1 분에 &lt;em&gt;한&lt;/em&gt; 번 이상 생성되는 경우 시간으로 분 단위로 로그 파일을 볼 수 있습니다. 반면, 로깅 메시지가 5 분마다 한 번 씩만 출력되는 경우 (예 : 출력이 발생하지 않은 (따라서 롤오버가 발생하지 않은) 분에 해당하는 파일 시간 간격이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5ed075f00edd0132316935e88c331ca039fab0d" translate="yes" xml:space="preserve">
          <source>Calibration</source>
          <target state="translated">Calibration</target>
        </trans-unit>
        <trans-unit id="e0d4d0ecc0f8cef020e03b1828edeb591fb6c026" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt; on the graph.</source>
          <target state="translated">그래프에서 &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="aadcf37f946caa06a6b21da9c6121f7161a3b776" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; a few times.</source>
          <target state="translated">&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt; 를 몇 번 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="c11ef00130172d0934549f735d63234d9404e14c" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; function to take a snapshot of traces before clearing them.</source>
          <target state="translated">추적을 지우기 전에 추적 스냅 샷을 작성하려면 &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt; 함수를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="67d39f3c272cb501b604aa5deb83d6c22e71b3ca" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;faulthandler#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; at Python startup to install handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt; and &lt;code&gt;SIGILL&lt;/code&gt; signals to dump the Python traceback on a crash.</source>
          <target state="translated">Python 시작시 &lt;a href=&quot;faulthandler#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;code&gt;SIGSEGV&lt;/code&gt; , &lt;code&gt;SIGFPE&lt;/code&gt; , &lt;code&gt;SIGABRT&lt;/code&gt; , &lt;code&gt;SIGBUS&lt;/code&gt; 및 &lt;code&gt;SIGILL&lt;/code&gt; 신호에 대한 핸들러를 설치 하여 충돌시 Python 트레이스 백을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="1b4768a13e018551f272730c6611d4c080e50a4b" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;keyword#keyword.iskeyword&quot;&gt;&lt;code&gt;keyword.iskeyword()&lt;/code&gt;&lt;/a&gt; to test whether string &lt;code&gt;s&lt;/code&gt; is a reserved identifier, such as &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#def&quot;&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">string &lt;code&gt;s&lt;/code&gt; 가 예약 된 식별자 (예 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#def&quot;&gt; &lt;code&gt;def&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;keyword#keyword.iskeyword&quot;&gt; &lt;code&gt;keyword.iskeyword()&lt;/code&gt; &lt;/a&gt; 인지 테스트하려면 keyword.iskeyword () 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="41f8c373af420d42fd35fcaf4864a02f35591254" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;keyword#keyword.iskeyword&quot;&gt;&lt;code&gt;keyword.iskeyword()&lt;/code&gt;&lt;/a&gt; to test whether string &lt;code&gt;s&lt;/code&gt; is a reserved identifier, such as &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#def&quot;&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;keyword#keyword.iskeyword&quot;&gt; &lt;code&gt;keyword.iskeyword()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 문자열 &lt;code&gt;s&lt;/code&gt; 가 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#def&quot;&gt; &lt;code&gt;def&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; 와 같은 예약 된 식별자 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="56e931d9872eb3cf90d27e13f71f652e4465e54c" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;os#os.rmdir&quot;&gt;&lt;code&gt;os.rmdir()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;filename&lt;/em&gt;. On Windows platforms, this is wrapped with a wait loop that checks for the existence of the file.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 에서 &lt;a href=&quot;os#os.rmdir&quot;&gt; &lt;code&gt;os.rmdir()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . Windows 플랫폼에서는 파일 존재 여부를 확인하는 대기 루프로 래핑됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29609bd887533f0dd3ff25aab5face44bff5f1b0" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;os#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;filename&lt;/em&gt;. On Windows platforms, this is wrapped with a wait loop that checks for the existence fo the file.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 에서 &lt;a href=&quot;os#os.unlink&quot;&gt; &lt;code&gt;os.unlink()&lt;/code&gt; &lt;/a&gt; 를 호출하십시오 . Windows 플랫폼에서는 파일의 존재 여부를 확인하는 대기 루프로 래핑됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6f97c3415bdff307399101a6db4b1f236970274" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt;&lt;code&gt;shutil.rmtree()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;path&lt;/em&gt; or call &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.rmdir&quot;&gt;&lt;code&gt;os.rmdir()&lt;/code&gt;&lt;/a&gt; to remove a path and its contents. On Windows platforms, this is wrapped with a wait loop that checks for the existence of the files.</source>
          <target state="translated">통화 &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt; &lt;code&gt;shutil.rmtree()&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;em&gt;경로&lt;/em&gt; 또는 전화 &lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;os#os.rmdir&quot;&gt; &lt;code&gt;os.rmdir()&lt;/code&gt; &lt;/a&gt; 경로와 그 내용을 제거합니다. Windows 플랫폼에서는 파일 존재 여부를 확인하는 대기 루프로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="27b75ea0be2f6061901183e40ec3ac73c03ac4f5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;func(*args)&lt;/code&gt;, while tracing is enabled. The tracing state is saved, and restored afterwards. This is intended to be called from a debugger from a checkpoint, to recursively debug some other code.</source>
          <target state="translated">추적이 사용 가능한 동안 &lt;code&gt;func(*args)&lt;/code&gt; 호출하십시오 . 추적 상태가 저장되고 나중에 복원됩니다. 이것은 체크 포인트의 디버거에서 호출되어 다른 코드를 재귀 적으로 디버깅하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="05ccf4c1c319609596c020e120cde4412c5e3e2d" translate="yes" xml:space="preserve">
          <source>Call &lt;em&gt;func&lt;/em&gt; with arguments &lt;em&gt;args&lt;/em&gt; and keyword arguments &lt;em&gt;kwds&lt;/em&gt;. It blocks until the result is ready. Given this blocks, &lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt;&lt;code&gt;apply_async()&lt;/code&gt;&lt;/a&gt; is better suited for performing work in parallel. Additionally, &lt;em&gt;func&lt;/em&gt; is only executed in one of the workers of the pool.</source>
          <target state="translated">인수 &lt;em&gt;args&lt;/em&gt; 및 키워드 인수 &lt;em&gt;kwds로 &lt;/em&gt;&lt;em&gt;func&lt;/em&gt; 을 호출 &lt;em&gt;하십시오&lt;/em&gt; . 결과가 준비 될 때까지 차단됩니다. 이 블록이 주어지면 &lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt; &lt;code&gt;apply_async()&lt;/code&gt; &lt;/a&gt; 가 병렬 작업을 수행하는 데 더 적합합니다. 또한 &lt;em&gt;func&lt;/em&gt; 은 풀의 작업자 중 하나에서만 실행됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc6e2c8e120683e16cf0ed4a4a301bba7d7eb747" translate="yes" xml:space="preserve">
          <source>Call &lt;em&gt;func&lt;/em&gt; with the given arguments under control of the &lt;a href=&quot;#trace.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; object with the current tracing parameters.</source>
          <target state="translated">현재 추적 매개 변수를 사용하여 &lt;a href=&quot;#trace.Trace&quot;&gt; &lt;code&gt;Trace&lt;/code&gt; &lt;/a&gt; 오브젝트를 제어하여 주어진 인수로 &lt;em&gt;func&lt;/em&gt; 을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ecbe6052c3e7d7fe54e0583c7e777cc334fae406" translate="yes" xml:space="preserve">
          <source>Call and return the result of a method of the proxy&amp;rsquo;s referent.</source>
          <target state="translated">프록시의 추천인의 메소드의 결과를 호출하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="a5924f5863dc387e6330c12726b4529aa4cc2f5c" translate="yes" xml:space="preserve">
          <source>Call count statistics can be used to identify bugs in code (surprising counts), and to identify possible inline-expansion points (high call counts). Internal time statistics can be used to identify &amp;ldquo;hot loops&amp;rdquo; that should be carefully optimized. Cumulative time statistics should be used to identify high level errors in the selection of algorithms. Note that the unusual handling of cumulative times in this profiler allows statistics for recursive implementations of algorithms to be directly compared to iterative implementations.</source>
          <target state="translated">호출 횟수 통계를 사용하여 코드의 버그 (놀람 횟수)를 식별하고 가능한 인라인 확장 지점 (높은 호출 횟수)을 식별 할 수 있습니다. 내부 시간 통계를 사용하여 신중하게 최적화해야하는 &quot;핫 루프&quot;를 식별 할 수 있습니다. 알고리즘 선택에서 높은 수준의 오류를 식별하려면 누적 시간 통계를 사용해야합니다. 이 프로파일 러에서 누적 시간을 비정상적으로 처리하면 알고리즘의 재귀 구현에 대한 통계를 반복 구현과 직접 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="896c3a3c821ad69cdeaac87e56dc4733d4c270ed" translate="yes" xml:space="preserve">
          <source>Call the &lt;a href=&quot;email.contentmanager#email.contentmanager.ContentManager.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;content_manager&lt;/em&gt;, passing self as the message object, and passing along any other arguments or keywords as additional arguments. If &lt;em&gt;content_manager&lt;/em&gt; is not specified, use the &lt;code&gt;content_manager&lt;/code&gt; specified by the current &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;content_manager&lt;/em&gt; 의 &lt;a href=&quot;email.contentmanager#email.contentmanager.ContentManager.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 self를 메시지 오브젝트로 전달하고 다른 인수 또는 키워드를 추가 인수로 전달하십시오. 경우 &lt;em&gt;CONTENT_MANAGER가&lt;/em&gt; 지정되지 않은, 사용 &lt;code&gt;content_manager&lt;/code&gt; 전류에 의해 지정된 &lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="214f6401d2ee9a7696a5fc8ca0ae9e0423122a8a" translate="yes" xml:space="preserve">
          <source>Call the &lt;a href=&quot;email.contentmanager#email.contentmanager.ContentManager.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;content_manager&lt;/em&gt;, passing self as the message object, and passing along any other arguments or keywords as additional arguments. If &lt;em&gt;content_manager&lt;/em&gt; is not specified, use the &lt;code&gt;content_manager&lt;/code&gt; specified by the current &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;content_manager&lt;/em&gt; 의 &lt;a href=&quot;email.contentmanager#email.contentmanager.ContentManager.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 self를 메시지 오브젝트로 전달하고 다른 인수 또는 키워드를 추가 인수로 전달하십시오. 경우 &lt;em&gt;CONTENT_MANAGER가&lt;/em&gt; 지정되지 않은, 사용 &lt;code&gt;content_manager&lt;/code&gt; 전류에 의해 지정된 &lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b729bac01ccf147b38d61abf339918f169a4e4c8" translate="yes" xml:space="preserve">
          <source>Call the &lt;em&gt;function&lt;/em&gt; (a function or method object, not a string) with the given arguments. When &lt;a href=&quot;#pdb.runcall&quot;&gt;&lt;code&gt;runcall()&lt;/code&gt;&lt;/a&gt; returns, it returns whatever the function call returned. The debugger prompt appears as soon as the function is entered.</source>
          <target state="translated">통화 &lt;em&gt;기능&lt;/em&gt; 지정된 인수와 (함수 또는 메소드 객체가 아닌 문자열). 때 &lt;a href=&quot;#pdb.runcall&quot;&gt; &lt;code&gt;runcall()&lt;/code&gt; &lt;/a&gt; 반환 함수 호출이 반환 무엇이든 그것을 돌아갑니다. 함수가 입력 되 자마자 디버거 프롬프트가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="025702ae6236841034249320d15712f1956b9fcc" translate="yes" xml:space="preserve">
          <source>Call the current event loop exception handler.</source>
          <target state="translated">현재 이벤트 루프 예외 핸들러를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="61df0c3829240e2b9d7460deb03b05e26ff34c69" translate="yes" xml:space="preserve">
          <source>Call the exception handler.</source>
          <target state="translated">예외 처리기를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="20301c340aa6e7e82cbba4889f397214b80ebce3" translate="yes" xml:space="preserve">
          <source>Call the system call &lt;code&gt;getsid()&lt;/code&gt;. See the Unix manual for the semantics.</source>
          <target state="translated">시스템 호출 &lt;code&gt;getsid()&lt;/code&gt; 호출하십시오 . 의미에 대해서는 Unix 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e936d4212ad93e1e57cbfdaccedac79661a3904" translate="yes" xml:space="preserve">
          <source>Call the system call &lt;code&gt;setpgid()&lt;/code&gt; to set the process group id of the process with id &lt;em&gt;pid&lt;/em&gt; to the process group with id &lt;em&gt;pgrp&lt;/em&gt;. See the Unix manual for the semantics.</source>
          <target state="translated">시스템 호출 &lt;code&gt;setpgid()&lt;/code&gt; 를 호출 하여 id가 &lt;em&gt;pid 인&lt;/em&gt; 프로세스의 프로세스 그룹 ID를 id가 &lt;em&gt;pgrp 인&lt;/em&gt; 프로세스 그룹으로 설정하십시오 . 의미에 대해서는 Unix 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7229279000f5d9adef8c815ab89f39aa93c00490" translate="yes" xml:space="preserve">
          <source>Call the system call &lt;code&gt;setpgrp()&lt;/code&gt; or &lt;code&gt;setpgrp(0, 0)&lt;/code&gt; depending on which version is implemented (if any). See the Unix manual for the semantics.</source>
          <target state="translated">구현 된 버전 (있는 경우 &lt;code&gt;setpgrp(0, 0)&lt;/code&gt; 에 따라 시스템 호출 &lt;code&gt;setpgrp()&lt;/code&gt; 또는 setpgrp (0, 0)을 호출하십시오 . 의미에 대해서는 Unix 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="334bddfc8498d45521f542c494365c39d8f85c76" translate="yes" xml:space="preserve">
          <source>Call the system call &lt;code&gt;setsid()&lt;/code&gt;. See the Unix manual for the semantics.</source>
          <target state="translated">시스템 호출 &lt;code&gt;setsid()&lt;/code&gt; 호출하십시오 . 의미에 대해서는 Unix 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="357cfe3414095f4b1221ab953069b4bd31357b6f" translate="yes" xml:space="preserve">
          <source>Call the system initgroups() to initialize the group access list with all of the groups of which the specified username is a member, plus the specified group id.</source>
          <target state="translated">시스템 initgroups ()를 호출하여 지정된 사용자 이름이 구성원 인 모든 그룹과 지정된 그룹 ID로 그룹 액세스 목록을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="f63f6fc3723b3c154d7df71f69a1d96b3b8852cd" translate="yes" xml:space="preserve">
          <source>Call the underlying &lt;code&gt;MessageBeep()&lt;/code&gt; function from the Platform API. This plays a sound as specified in the registry. The &lt;em&gt;type&lt;/em&gt; argument specifies which sound to play; possible values are &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;MB_ICONASTERISK&lt;/code&gt;, &lt;code&gt;MB_ICONEXCLAMATION&lt;/code&gt;, &lt;code&gt;MB_ICONHAND&lt;/code&gt;, &lt;code&gt;MB_ICONQUESTION&lt;/code&gt;, and &lt;code&gt;MB_OK&lt;/code&gt;, all described below. The value &lt;code&gt;-1&lt;/code&gt; produces a &amp;ldquo;simple beep&amp;rdquo;; this is the final fallback if a sound cannot be played otherwise. If the system indicates an error, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">플랫폼 API에서 기본 &lt;code&gt;MessageBeep()&lt;/code&gt; 함수를 호출하십시오 . 레지스트리에 지정된대로 사운드를 재생합니다. &lt;em&gt;형&lt;/em&gt; 플레이에 소리를 인수 지정; 가능한 값은 &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;MB_ICONASTERISK&lt;/code&gt; , &lt;code&gt;MB_ICONEXCLAMATION&lt;/code&gt; , &lt;code&gt;MB_ICONHAND&lt;/code&gt; , &lt;code&gt;MB_ICONQUESTION&lt;/code&gt; 및 &lt;code&gt;MB_OK&lt;/code&gt; 이며 모두 아래에 설명되어 있습니다. 값 &lt;code&gt;-1&lt;/code&gt; 은 &quot;간단한 경고음&quot;을 생성합니다. 사운드를 달리 재생할 수없는 경우 이것이 최종 폴백입니다. 시스템에 오류가 표시되면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4d3b80318020b568e71a46fcb6e3119618b228bc" translate="yes" xml:space="preserve">
          <source>Call the underlying &lt;code&gt;PlaySound()&lt;/code&gt; function from the Platform API. The &lt;em&gt;sound&lt;/em&gt; parameter may be a filename, a system sound alias, audio data as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. Its interpretation depends on the value of &lt;em&gt;flags&lt;/em&gt;, which can be a bitwise ORed combination of the constants described below. If the &lt;em&gt;sound&lt;/em&gt; parameter is &lt;code&gt;None&lt;/code&gt;, any currently playing waveform sound is stopped. If the system indicates an error, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">플랫폼 API에서 기본 &lt;code&gt;PlaySound()&lt;/code&gt; 함수를 호출하십시오 . &lt;em&gt;음향&lt;/em&gt; 파라미터는 같은 이름, 시스템 사운드 별명 오디오 데이터 일 수있다 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트 형상 물체&lt;/a&gt; 또는 &lt;code&gt;None&lt;/code&gt; . 해석은 &lt;em&gt;flags&lt;/em&gt; 의 값에 따라 달라지며 , 아래 설명 된 상수의 비트 단위 OR 조합 일 수 있습니다. 는 IF &lt;em&gt;사운드&lt;/em&gt; 매개 변수가없는 &lt;code&gt;None&lt;/code&gt; , 어느 현재 재생중인 파형 사운드가 중지됩니다. 시스템에 오류가 표시되면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d9bba2ecf3c73c0cc3223cde5894612fee326ff" translate="yes" xml:space="preserve">
          <source>Call the underlying &lt;code&gt;PlaySound()&lt;/code&gt; function from the Platform API. The &lt;em&gt;sound&lt;/em&gt; parameter may be a filename, a system sound alias, audio data as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. Its interpretation depends on the value of &lt;em&gt;flags&lt;/em&gt;, which can be a bitwise ORed combination of the constants described below. If the &lt;em&gt;sound&lt;/em&gt; parameter is &lt;code&gt;None&lt;/code&gt;, any currently playing waveform sound is stopped. If the system indicates an error, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">Platform API에서 기본 &lt;code&gt;PlaySound()&lt;/code&gt; 함수를 호출합니다 . &lt;em&gt;음향&lt;/em&gt; 파라미터는 같은 이름, 시스템 사운드 별명 오디오 데이터 일 수있다 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트 형상 물체&lt;/a&gt; 또는 &lt;code&gt;None&lt;/code&gt; . 그 해석은 아래 설명 된 상수의 비트 단위 OR 조합이 될 수있는 &lt;em&gt;flags&lt;/em&gt; 의 값에 따라 다릅니다 . 는 IF &lt;em&gt;사운드&lt;/em&gt; 매개 변수가없는 &lt;code&gt;None&lt;/code&gt; , 어느 현재 재생중인 파형 사운드가 중지됩니다. 시스템에 오류가 표시되면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b6bc544aaad9220f5dcb4037a85c3e70a21c3401" translate="yes" xml:space="preserve">
          <source>Call this function to specify a recording source. Returns a bitmask indicating the new recording source (or sources) if successful; raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if an invalid source was specified. To set the current recording source to the microphone input:</source>
          <target state="translated">녹음 소스를 지정하려면이 기능을 호출하십시오. 성공하면 새 기록 소스를 나타내는 비트 마스크를 반환합니다. 제기 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 를&lt;/a&gt; 잘못된 소스가 지정된 경우. 현재 녹음 소스를 마이크 입력으로 설정하려면 :</target>
        </trans-unit>
        <trans-unit id="ba2b407c36eb6cd5a8cda8ef91a18469664ecf2c" translate="yes" xml:space="preserve">
          <source>Call to &lt;em&gt;&amp;lt;new_target&amp;gt;.dnd_enter(source, event)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;new_target&amp;gt; .dnd_enter (source, event)&lt;/em&gt; 호출&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aeb1a61712c07bb001b5995a5d852429a644fbb8" translate="yes" xml:space="preserve">
          <source>Call to &lt;em&gt;&amp;lt;old_target&amp;gt;.dnd_leave(source, event)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;old_target&amp;gt; .dnd_leave (source, event)&lt;/em&gt; 호출&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1daa53164f164136a42b7462fc0ad405ccd82f9" translate="yes" xml:space="preserve">
          <source>Call to &lt;em&gt;&amp;lt;source&amp;gt;.dnd_end(target, event)&lt;/em&gt; to signal end of drag-and-drop</source>
          <target state="translated">&lt;em&gt;&amp;lt;source&amp;gt; .dnd_end (target, event)&lt;/em&gt; 를 호출하여 끌어서 놓기 종료를 &lt;em&gt;알립니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="996446f9d0c9353e34816edffc4e6b9d07cff6ec" translate="yes" xml:space="preserve">
          <source>Call to &lt;em&gt;&amp;lt;target&amp;gt;.dnd_commit(source, event)&lt;/em&gt; to notify of drop</source>
          <target state="translated">드롭 알림을 위해 &lt;em&gt;&amp;lt;target&amp;gt; .dnd_commit (source, event)&lt;/em&gt; 를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="128871044105014d5a62307b275a122d3b3e78fc" translate="yes" xml:space="preserve">
          <source>Call to set a new value for the context variable in the current context.</source>
          <target state="translated">현재 컨텍스트에서 컨텍스트 변수의 새 값을 설정하려면 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="3b55289fd0c473d42c2d6be6391e6a9f53a24056" translate="yes" xml:space="preserve">
          <source>Callable</source>
          <target state="translated">Callable</target>
        </trans-unit>
        <trans-unit id="8b20b70beb4a64c315031bb8bb78e087da52d53f" translate="yes" xml:space="preserve">
          <source>Callable object that constructs a test suite from a list of tests. No methods on the resulting object are needed. The default value is the &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">테스트 목록에서 테스트 스위트를 구성하는 호출 가능한 오브젝트입니다. 결과 객체에 대한 메소드가 필요하지 않습니다. 기본값은 &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9bc76aaa0fb105a3d567c6b50b1f0736290bd16e" translate="yes" xml:space="preserve">
          <source>Callable type; &lt;code&gt;Callable[[int], str]&lt;/code&gt; is a function of (int) -&amp;gt; str.</source>
          <target state="translated">호출 가능한 유형; &lt;code&gt;Callable[[int], str]&lt;/code&gt; 은 (int)-&amp;gt; str의 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1f5b0450323457809cb7416078a9c6b54c6e8c40" translate="yes" xml:space="preserve">
          <source>Callback Handles</source>
          <target state="translated">콜백 핸들</target>
        </trans-unit>
        <trans-unit id="04f9a377a5245adf1c0c727ef509b19ea04d764a" translate="yes" xml:space="preserve">
          <source>Callback functions</source>
          <target state="translated">콜백 함수</target>
        </trans-unit>
        <trans-unit id="8889c6972a5b2469ab9e81893d59faa1f3c65b7e" translate="yes" xml:space="preserve">
          <source>Callbacks are called in the order in which they are registered. Each callback will be called exactly once.</source>
          <target state="translated">콜백은 등록 된 순서대로 호출됩니다. 각 콜백은 정확히 한 번만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b8e22fb29e8e152e750614c8b3bc9be34b585202" translate="yes" xml:space="preserve">
          <source>Callbacks registered with &lt;a href=&quot;#asyncio.Future.add_done_callback&quot;&gt;&lt;code&gt;asyncio.Future.add_done_callback()&lt;/code&gt;&lt;/a&gt; are not called immediately. They are scheduled with &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Future.add_done_callback&quot;&gt; &lt;code&gt;asyncio.Future.add_done_callback()&lt;/code&gt; &lt;/a&gt; 등록 된 콜백 은 즉시 호출되지 않습니다. 대신 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt; 으로 예약 됩니다.</target>
        </trans-unit>
        <trans-unit id="ad0a4411519272abaad0d5e7e3113fe5f371db24" translate="yes" xml:space="preserve">
          <source>Callbacks should complete immediately since otherwise the thread which handles the results will get blocked.</source>
          <target state="translated">콜백은 즉시 완료되어야합니다. 그렇지 않으면 결과를 처리하는 스레드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="403e946147c23a181f1511885c98cc2805b30e14" translate="yes" xml:space="preserve">
          <source>Callbacks taking longer than 100ms are logged. The &lt;code&gt;loop.slow_callback_duration&lt;/code&gt; attribute can be used to set the minimum execution duration in seconds that is considered &amp;ldquo;slow&amp;rdquo;.</source>
          <target state="translated">100ms보다 긴 콜백이 기록됩니다. &lt;code&gt;loop.slow_callback_duration&lt;/code&gt; 의 속성은 &quot;느린&quot;고려 초에 최소 실행 시간을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fd73468e637a25aae99b12cfc723b07e5b72a4e" translate="yes" xml:space="preserve">
          <source>Callbacks to Python for the various steps of MSI creation are currently not exposed.</source>
          <target state="translated">MSI 생성의 다양한 단계에 대한 Python 콜백은 현재 노출되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4a1965f31efd22ed43a1ff8b9fd47be00549c25" translate="yes" xml:space="preserve">
          <source>Called after the &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method to perform any clean-up actions required. The default implementation does nothing. If &lt;a href=&quot;#socketserver.BaseRequestHandler.setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; raises an exception, this function will not be called.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; 메소드 다음에 호출되어 필요한 정리 조치를 수행합니다. 기본 구현은 아무 것도 수행하지 않습니다. 경우 &lt;a href=&quot;#socketserver.BaseRequestHandler.setup&quot;&gt; &lt;code&gt;setup()&lt;/code&gt; &lt;/a&gt; 예외가 발생,이 함수가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1362dc5d1e6bf75e0cc3251664dec655024b4702" translate="yes" xml:space="preserve">
          <source>Called after the test case &lt;em&gt;test&lt;/em&gt; has been executed, regardless of the outcome.</source>
          <target state="translated">결과에 관계없이 테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 실행 된 후 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf1ea40660aa308b2a80eb6ed925c83028b5285" translate="yes" xml:space="preserve">
          <source>Called at the end of a CDATA section.</source>
          <target state="translated">CDATA 섹션의 끝에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="29de25fc0a839a0eff2d7b9cb3fc5f0583cc7099" translate="yes" xml:space="preserve">
          <source>Called at the start of a CDATA section. This and &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndCdataSectionHandler&quot;&gt;&lt;code&gt;EndCdataSectionHandler&lt;/code&gt;&lt;/a&gt; are needed to be able to identify the syntactical start and end for CDATA sections.</source>
          <target state="translated">CDATA 섹션의 시작 부분에서 호출됩니다. 이 및 &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndCdataSectionHandler&quot;&gt; &lt;code&gt;EndCdataSectionHandler&lt;/code&gt; &lt;/a&gt; 는 CDATA 섹션의 구문 시작 및 종료를 식별 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="77c92e0ccaa38c90faa94b0fa33a5eccb775c601" translate="yes" xml:space="preserve">
          <source>Called before the &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method to perform any initialization actions required. The default implementation does nothing.</source>
          <target state="translated">필요한 초기화 조치를 수행 하기 위해 &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; 메소드 전에 호출 됩니다. 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb95815021a99d97e202ab300b0985a814991b7a" translate="yes" xml:space="preserve">
          <source>Called by the parser to give the application a locator for locating the origin of document events.</source>
          <target state="translated">응용 프로그램에 문서 이벤트의 출처를 찾기위한 로케이터를 제공하기 위해 구문 분석기가 호출합니다.</target>
        </trans-unit>
        <trans-unit id="be01e974e6d417e15234574f4368a9b6bc8a28af" translate="yes" xml:space="preserve">
          <source>Called by the server&amp;rsquo;s constructor to activate the server. The default behavior for a TCP server just invokes &lt;a href=&quot;socket#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; on the server&amp;rsquo;s socket. May be overridden.</source>
          <target state="translated">서버를 생성하기 위해 서버의 생성자에 의해 호출됩니다. TCP 서버의 기본 동작 은 서버 소켓에서 &lt;a href=&quot;socket#socket.socket.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt; 을 호출 합니다. 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e787c3c273aa363aff918a9d06907484b8d5d91" translate="yes" xml:space="preserve">
          <source>Called by the server&amp;rsquo;s constructor to bind the socket to the desired address. May be overridden.</source>
          <target state="translated">소켓을 원하는 주소에 바인딩하기 위해 서버의 생성자에 의해 호출됩니다. 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8ecb1f0ef62b2e83924331808e4e401b5daa58a" translate="yes" xml:space="preserve">
          <source>Called each time around the asynchronous loop to determine whether a channel&amp;rsquo;s socket should be added to the list on which read events can occur. The default method simply returns &lt;code&gt;True&lt;/code&gt;, indicating that by default, all channels will be interested in read events.</source>
          <target state="translated">읽기 루프가 발생할 수있는 목록에 채널 소켓을 추가해야하는지 여부를 결정하기 위해 비동기 루프 주위에서 매번 호출됩니다. 기본 메소드는 &lt;code&gt;True&lt;/code&gt; 를 리턴 하여 기본적으로 모든 채널이 읽기 이벤트에 관심이 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f58bd0b869a1d21a99b2c683b53040cd3d970fd6" translate="yes" xml:space="preserve">
          <source>Called each time around the asynchronous loop to determine whether a channel&amp;rsquo;s socket should be added to the list on which write events can occur. The default method simply returns &lt;code&gt;True&lt;/code&gt;, indicating that by default, all channels will be interested in write events.</source>
          <target state="translated">쓰기 이벤트가 발생할 수있는 목록에 채널의 소켓을 추가해야하는지 여부를 결정하기 위해 비동기 루프 주위에서 매번 호출됩니다. 기본 메소드는 &lt;code&gt;True&lt;/code&gt; 를 리턴 하여 기본적으로 모든 채널이 쓰기 이벤트에 관심이 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="39465ea3b515751242f0b2339a37f5bd19e9dd5b" translate="yes" xml:space="preserve">
          <source>Called for all entity declarations. For parameter and internal entities, &lt;em&gt;value&lt;/em&gt; will be a string giving the declared contents of the entity; this will be &lt;code&gt;None&lt;/code&gt; for external entities. The &lt;em&gt;notationName&lt;/em&gt; parameter will be &lt;code&gt;None&lt;/code&gt; for parsed entities, and the name of the notation for unparsed entities. &lt;em&gt;is_parameter_entity&lt;/em&gt; will be true if the entity is a parameter entity or false for general entities (most applications only need to be concerned with general entities). This is only available starting with version 1.95.0 of the Expat library.</source>
          <target state="translated">모든 엔터티 선언을 호출했습니다. 매개 변수 및 내부 엔티티의 경우 &lt;em&gt;value&lt;/em&gt; 는 엔티티 의 선언 된 컨텐츠를 제공하는 문자열입니다. 외부 엔터티의 경우 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;em&gt;notationName의의&lt;/em&gt; 매개 변수는 없을 것 &lt;code&gt;None&lt;/code&gt; 구문 분석 엔티티 및 해석 대상 외 엔티티의 표기법의 이름. 엔터티가 매개 변수 엔터티 인 경우 &lt;em&gt;is_parameter_entity&lt;/em&gt; 는 true이거나 일반 엔터티의 경우 false입니다 (대부분의 응용 프로그램은 일반 엔터티 만 관련되어야 함). 이것은 Expat 라이브러리 버전 1.95.0부터 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d614becb7000a1bb805517aa8d3765a41ede38de" translate="yes" xml:space="preserve">
          <source>Called for any characters in the XML document for which no applicable handler has been specified. This means characters that are part of a construct which could be reported, but for which no handler has been supplied.</source>
          <target state="translated">적용 가능한 핸들러가 지정되지 않은 XML 문서의 모든 문자를 호출합니다. 이는보고 될 수 있지만 핸들러가 제공되지 않은 구성의 일부인 문자를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="65104a0a441fac3b68b4f415ba2cdf55b05bdb64" translate="yes" xml:space="preserve">
          <source>Called for character data. This will be called for normal character data, CDATA marked content, and ignorable whitespace. Applications which must distinguish these cases can use the &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartCdataSectionHandler&quot;&gt;&lt;code&gt;StartCdataSectionHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndCdataSectionHandler&quot;&gt;&lt;code&gt;EndCdataSectionHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#xml.parsers.expat.xmlparser.ElementDeclHandler&quot;&gt;&lt;code&gt;ElementDeclHandler&lt;/code&gt;&lt;/a&gt; callbacks to collect the required information.</source>
          <target state="translated">문자 데이터를 호출합니다. 일반 문자 데이터, CDATA 표시 내용 및 무시할 수있는 공백이 필요합니다. 이러한 경우를 구별해야하는 애플리케이션은 &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartCdataSectionHandler&quot;&gt; &lt;code&gt;StartCdataSectionHandler&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndCdataSectionHandler&quot;&gt; &lt;code&gt;EndCdataSectionHandler&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#xml.parsers.expat.xmlparser.ElementDeclHandler&quot;&gt; &lt;code&gt;ElementDeclHandler&lt;/code&gt; &lt;/a&gt; 콜백을 사용하여 필요한 정보를 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="351051ff1c33be49862a2797c6123d5fa7394782" translate="yes" xml:space="preserve">
          <source>Called for comments. &lt;em&gt;data&lt;/em&gt; is the text of the comment, excluding the leading &lt;code&gt;'&amp;lt;!-&lt;/code&gt;&lt;code&gt;-'&lt;/code&gt; and trailing &lt;code&gt;'-&lt;/code&gt;&lt;code&gt;-&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">의견을 요청했다. &lt;em&gt;data&lt;/em&gt; 는 주석의 텍스트이며 앞의 &lt;code&gt;'&amp;lt;!-&lt;/code&gt; &lt;code&gt;-'&lt;/code&gt; 및 후행 &lt;code&gt;'-&lt;/code&gt; &lt;code&gt;-&amp;gt;'&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3da84a39794c83e95aea42a553e2c15a43b19b7c" translate="yes" xml:space="preserve">
          <source>Called for each declared attribute for an element type. If an attribute list declaration declares three attributes, this handler is called three times, once for each attribute. &lt;em&gt;elname&lt;/em&gt; is the name of the element to which the declaration applies and &lt;em&gt;attname&lt;/em&gt; is the name of the attribute declared. The attribute type is a string passed as &lt;em&gt;type&lt;/em&gt;; the possible values are &lt;code&gt;'CDATA'&lt;/code&gt;, &lt;code&gt;'ID'&lt;/code&gt;, &lt;code&gt;'IDREF'&lt;/code&gt;, &amp;hellip; &lt;em&gt;default&lt;/em&gt; gives the default value for the attribute used when the attribute is not specified by the document instance, or &lt;code&gt;None&lt;/code&gt; if there is no default value (&lt;code&gt;#IMPLIED&lt;/code&gt; values). If the attribute is required to be given in the document instance, &lt;em&gt;required&lt;/em&gt; will be true. This requires Expat version 1.95.0 or newer.</source>
          <target state="translated">요소 유형에 대해 선언 된 각 속성을 호출합니다. 속성리스트 선언이 세 개의 속성을 선언하면이 핸들러는 각 속성에 대해 세 번 호출됩니다. &lt;em&gt;elname&lt;/em&gt; 은 선언이 적용되는 요소의 이름이고 &lt;em&gt;attname&lt;/em&gt; 은 선언 된 속성의 이름입니다. 속성 유형으로 전달 된 문자열 &lt;em&gt;유형&lt;/em&gt; ; 가능한 값은 &lt;code&gt;'CDATA'&lt;/code&gt; , &lt;code&gt;'ID'&lt;/code&gt; , &lt;code&gt;'IDREF'&lt;/code&gt; 입니다 . &lt;em&gt;기본값&lt;/em&gt; 은 문서 인스턴스에서 속성을 지정하지 않은 경우 사용되는 속성의 &lt;em&gt;기본값을&lt;/em&gt; 제공하거나 기본값이없는 경우 &lt;code&gt;None&lt;/code&gt; 합니다 ( &lt;code&gt;#IMPLIED&lt;/code&gt; 값). 문서 인스턴스에서 속성을 제공해야하는 경우 &lt;em&gt;required&lt;/em&gt; 가 true입니다. Expat 버전 1.95.0 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2da069c998b581663a5c7cca6e3b4d6abde5056a" translate="yes" xml:space="preserve">
          <source>Called for every processing instruction.</source>
          <target state="translated">모든 처리 명령이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3bd8719a321134b502f88d1bcdde6054d154c2a5" translate="yes" xml:space="preserve">
          <source>Called for notation declarations. &lt;em&gt;notationName&lt;/em&gt;, &lt;em&gt;base&lt;/em&gt;, and &lt;em&gt;systemId&lt;/em&gt;, and &lt;em&gt;publicId&lt;/em&gt; are strings if given. If the public identifier is omitted, &lt;em&gt;publicId&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">표기법 선언이 필요합니다. &lt;em&gt;notationName&lt;/em&gt; , &lt;em&gt;base&lt;/em&gt; 및 &lt;em&gt;systemId&lt;/em&gt; 및 &lt;em&gt;publicId&lt;/em&gt; 는 지정된 경우 문자열입니다. 공개 식별자를 생략하면 &lt;em&gt;publicId&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0120d7d44d9dafd4e24a71d36f3590d5701cfffc" translate="yes" xml:space="preserve">
          <source>Called for references to external entities. &lt;em&gt;base&lt;/em&gt; is the current base, as set by a previous call to &lt;a href=&quot;#xml.parsers.expat.xmlparser.SetBase&quot;&gt;&lt;code&gt;SetBase()&lt;/code&gt;&lt;/a&gt;. The public and system identifiers, &lt;em&gt;systemId&lt;/em&gt; and &lt;em&gt;publicId&lt;/em&gt;, are strings if given; if the public identifier is not given, &lt;em&gt;publicId&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt;. The &lt;em&gt;context&lt;/em&gt; value is opaque and should only be used as described below.</source>
          <target state="translated">외부 엔터티에 대한 참조를 호출했습니다. &lt;em&gt;base&lt;/em&gt; 는 &lt;a href=&quot;#xml.parsers.expat.xmlparser.SetBase&quot;&gt; &lt;code&gt;SetBase()&lt;/code&gt; &lt;/a&gt; 에 대한 이전 호출에 의해 설정된 현재 기준 입니다. 공개 및 시스템 식별자 &lt;em&gt;systemId&lt;/em&gt; 및 &lt;em&gt;publicId&lt;/em&gt; 는 지정된 경우 문자열입니다. 공개 식별자가 제공되지 않으면 &lt;em&gt;publicId&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;em&gt;컨텍스트&lt;/em&gt; 값은 불투명 및 후술 만 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="d63a76f0bc6dffffa93ff65ecb72fb2a176eaad7" translate="yes" xml:space="preserve">
          <source>Called for the end of every element.</source>
          <target state="translated">모든 요소의 끝을 요구했습니다.</target>
        </trans-unit>
        <trans-unit id="22c0081cf331d749adba48c6dfc5bea84d876ac4" translate="yes" xml:space="preserve">
          <source>Called for the start of every element. &lt;em&gt;name&lt;/em&gt; is a string containing the element name, and &lt;em&gt;attributes&lt;/em&gt; is the element attributes. If &lt;a href=&quot;#xml.parsers.expat.xmlparser.ordered_attributes&quot;&gt;&lt;code&gt;ordered_attributes&lt;/code&gt;&lt;/a&gt; is true, this is a list (see &lt;a href=&quot;#xml.parsers.expat.xmlparser.ordered_attributes&quot;&gt;&lt;code&gt;ordered_attributes&lt;/code&gt;&lt;/a&gt; for a full description). Otherwise it&amp;rsquo;s a dictionary mapping names to values.</source>
          <target state="translated">모든 요소의 시작을 요구했습니다. &lt;em&gt;name&lt;/em&gt; 은 요소 이름이 포함 된 문자열이고 &lt;em&gt;attributes&lt;/em&gt; 는 요소 속성입니다. &lt;a href=&quot;#xml.parsers.expat.xmlparser.ordered_attributes&quot;&gt; &lt;code&gt;ordered_attributes&lt;/code&gt; &lt;/a&gt; 가 true 인 경우 목록입니다 (자세한 설명 은 &lt;a href=&quot;#xml.parsers.expat.xmlparser.ordered_attributes&quot;&gt; &lt;code&gt;ordered_attributes&lt;/code&gt; &lt;/a&gt; 참조 ). 그렇지 않으면 이름에 값을 매핑하는 사전입니다.</target>
        </trans-unit>
        <trans-unit id="c0203abda3fe131b18ed78f796cbf6a741ee9708" translate="yes" xml:space="preserve">
          <source>Called for unparsed (NDATA) entity declarations. This is only present for version 1.2 of the Expat library; for more recent versions, use &lt;a href=&quot;#xml.parsers.expat.xmlparser.EntityDeclHandler&quot;&gt;&lt;code&gt;EntityDeclHandler&lt;/code&gt;&lt;/a&gt; instead. (The underlying function in the Expat library has been declared obsolete.)</source>
          <target state="translated">구문 분석되지 않은 (NDATA) 엔티티 선언을 호출했습니다. 이는 Expat 라이브러리 버전 1.2에만 해당됩니다. 최신 버전의 경우 &lt;a href=&quot;#xml.parsers.expat.xmlparser.EntityDeclHandler&quot;&gt; &lt;code&gt;EntityDeclHandler&lt;/code&gt; 를&lt;/a&gt; 대신 사용 하십시오 . Expat 라이브러리의 기본 기능은 더 이상 사용되지 않는 것으로 선언되었습니다.</target>
        </trans-unit>
        <trans-unit id="5e2b4db57a4a964b6e5ec2da7ad036f7149b4e6d" translate="yes" xml:space="preserve">
          <source>Called if the XML document hasn&amp;rsquo;t been declared as being a standalone document. This happens when there is an external subset or a reference to a parameter entity, but the XML declaration does not set standalone to &lt;code&gt;yes&lt;/code&gt; in an XML declaration. If this handler returns &lt;code&gt;0&lt;/code&gt;, then the parser will raise an &lt;code&gt;XML_ERROR_NOT_STANDALONE&lt;/code&gt; error. If this handler is not set, no exception is raised by the parser for this condition.</source>
          <target state="translated">XML 문서가 독립형 문서로 선언되지 않은 경우 호출됩니다. 거기에 외부 부분 집합 또는 매개 변수 엔티티에 대한 참조이지만, XML 선언을하지 세트 독립을 수행 할 때 발생 &lt;code&gt;yes&lt;/code&gt; XML 선언에. 이 핸들러가 &lt;code&gt;0&lt;/code&gt; 을 반환 하면 파서는 &lt;code&gt;XML_ERROR_NOT_STANDALONE&lt;/code&gt; 오류를 발생시킵니다. 이 핸들러가 설정되지 않으면이 조건에 대한 구문 분석기가 예외를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="801c462bf8afe04b4c72101c72079853f7d04683" translate="yes" xml:space="preserve">
          <source>Called on listening channels (passive openers) when a connection can be established with a new remote endpoint that has issued a &lt;a href=&quot;#asyncore.dispatcher.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; call for the local endpoint. Deprecated in version 3.2; use &lt;a href=&quot;#asyncore.dispatcher.handle_accepted&quot;&gt;&lt;code&gt;handle_accepted()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">로컬 엔드 포인트에 대해 &lt;a href=&quot;#asyncore.dispatcher.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt; 호출을 발행 한 새 원격 엔드 포인트로 연결을 설정할 수있는 경우 청취 채널 (패시브 오프너 )에서 호출됩니다. 버전 3.2에서 사용되지 않습니다. 사용 &lt;a href=&quot;#asyncore.dispatcher.handle_accepted&quot;&gt; &lt;code&gt;handle_accepted()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="fd7cf28533b52eaa266a093228069b68199a5fea" translate="yes" xml:space="preserve">
          <source>Called on listening channels (passive openers) when a connection has been established with a new remote endpoint that has issued a &lt;a href=&quot;#asyncore.dispatcher.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; call for the local endpoint. &lt;em&gt;sock&lt;/em&gt; is a &lt;em&gt;new&lt;/em&gt; socket object usable to send and receive data on the connection, and &lt;em&gt;addr&lt;/em&gt; is the address bound to the socket on the other end of the connection.</source>
          <target state="translated">로컬 엔드 포인트에 대해 &lt;a href=&quot;#asyncore.dispatcher.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt; 호출을 발행 한 새 원격 엔드 포인트와 연결되면 청취 채널 (패시브 오프너 )에서 호출됩니다. &lt;em&gt;sock&lt;/em&gt; 는 연결에서 데이터를 보내고받을 수 있는 &lt;em&gt;새로운&lt;/em&gt; 소켓 객체이며 &lt;em&gt;addr&lt;/em&gt; 은 연결 의 다른 쪽 끝에서 소켓에 바인딩 된 주소입니다.</target>
        </trans-unit>
        <trans-unit id="b9c67282703698d858525bac6d78cc5bb4989fe8" translate="yes" xml:space="preserve">
          <source>Called once after all tests are executed.</source>
          <target state="translated">모든 테스트가 실행 된 후 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a74a05f7d7947e682973dd1f19b882d09b4329a5" translate="yes" xml:space="preserve">
          <source>Called once before any tests are executed.</source>
          <target state="translated">테스트가 실행되기 전에 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e35b66cd6779c0829508f7b48a7c4fdfc2b4a8b1" translate="yes" xml:space="preserve">
          <source>Called once for each element type declaration. &lt;em&gt;name&lt;/em&gt; is the name of the element type, and &lt;em&gt;model&lt;/em&gt; is a representation of the content model.</source>
          <target state="translated">각 요소 유형 선언마다 한 번씩 호출됩니다. &lt;em&gt;name&lt;/em&gt; 은 요소 유형의 이름이고 &lt;em&gt;model&lt;/em&gt; 은 컨텐츠 모델의 표현입니다.</target>
        </trans-unit>
        <trans-unit id="99180e6e064ef2e1830ee080f5f17fb849c73d41" translate="yes" xml:space="preserve">
          <source>Called to allocate a new receive buffer.</source>
          <target state="translated">새로운 수신 버퍼를 할당하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f36d0aaf4ae2f0e89cb6e1a5cc810871d238565a" translate="yes" xml:space="preserve">
          <source>Called when Expat begins parsing the document type declaration (&lt;code&gt;&amp;lt;!DOCTYPE
...&lt;/code&gt;). The &lt;em&gt;doctypeName&lt;/em&gt; is provided exactly as presented. The &lt;em&gt;systemId&lt;/em&gt; and &lt;em&gt;publicId&lt;/em&gt; parameters give the system and public identifiers if specified, or &lt;code&gt;None&lt;/code&gt; if omitted. &lt;em&gt;has_internal_subset&lt;/em&gt; will be true if the document contains and internal document declaration subset. This requires Expat version 1.2 or newer.</source>
          <target state="translated">Expat가 문서 유형 선언 ( &lt;code&gt;&amp;lt;!DOCTYPE ...&lt;/code&gt; )을 구문 분석하기 시작할 때 호출됩니다 . &lt;em&gt;doctypeName는&lt;/em&gt; 정확히로 표시되어있다. &lt;em&gt;시스템 ID&lt;/em&gt; 와 &lt;em&gt;주어, publicId&lt;/em&gt; 파라미터는 시스템 및 공용 식별자 지정한 경우, 또는 부여 &lt;code&gt;None&lt;/code&gt; 생략합니다. &lt;em&gt;has_internal_subset&lt;/em&gt; 은 문서에 내부 문서 선언 서브 세트가 포함되어 있으면 true입니다. Expat 버전 1.2 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ae0ea24c7f1016a8815afdfabf7bf52f1032bc2a" translate="yes" xml:space="preserve">
          <source>Called when Expat is done parsing the document type declaration. This requires Expat version 1.2 or newer.</source>
          <target state="translated">Expat가 문서 유형 선언을 구문 분석 할 때 호출됩니다. Expat 버전 1.2 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="00da34713091416f249b29a3e0e2a884fef5439b" translate="yes" xml:space="preserve">
          <source>Called when a connection is made.</source>
          <target state="translated">연결되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="741d85fe818b7c6722691252d741e01026dc63d9" translate="yes" xml:space="preserve">
          <source>Called when a datagram is received.</source>
          <target state="translated">데이터 그램이 수신되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ed7a2a610a007eb5620d97017bd585811b8fb138" translate="yes" xml:space="preserve">
          <source>Called when a datagram is received. &lt;em&gt;data&lt;/em&gt; is a bytes object containing the incoming data. &lt;em&gt;addr&lt;/em&gt; is the address of the peer sending the data; the exact format depends on the transport.</source>
          <target state="translated">데이터 그램이 수신되면 호출됩니다. &lt;em&gt;data&lt;/em&gt; 는 들어오는 데이터를 포함하는 bytes 객체입니다. &lt;em&gt;addr&lt;/em&gt; 은 데이터를 보내는 피어의 주소입니다. 정확한 형식은 운송 수단에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c89041e063612781bc79fd90b882ce6363d749a9" translate="yes" xml:space="preserve">
          <source>Called when a header is added to an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object. If the returned value is not &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt;, and there are already a number of headers with the name &lt;em&gt;name&lt;/em&gt; greater than or equal to the value returned, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 객체에 헤더가 추가 될 때 호출됩니다 . 반환 된 값이 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;None&lt;/code&gt; 이 아니며 이름 &lt;em&gt;이름이&lt;/em&gt; 반환 된 값보다 크거나 같은 헤더가 이미 있으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="441a5c99fdf19bde8078414cfda746533c1653c3" translate="yes" xml:space="preserve">
          <source>Called when a previous send or receive operation raises an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이전 보내기 또는 받기 작업에서 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생하면 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f4505983f471951335f7e31e8370e2c3e1eef2d" translate="yes" xml:space="preserve">
          <source>Called when a previous send or receive operation raises an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;exc&lt;/em&gt; is the &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이전 보내기 또는 받기 작업에서 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생하면 호출됩니다 . &lt;em&gt;exc&lt;/em&gt; 는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="cec60647698fb6d07c4d99119e7c1c797af31359" translate="yes" xml:space="preserve">
          <source>Called when a subtest finishes. &lt;em&gt;test&lt;/em&gt; is the test case corresponding to the test method. &lt;em&gt;subtest&lt;/em&gt; is a custom &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instance describing the subtest.</source>
          <target state="translated">하위 테스트가 완료되면 호출됩니다. &lt;em&gt;테스트&lt;/em&gt; 는 테스트 방법에 해당하는 테스트 케이스입니다. &lt;em&gt;subtest&lt;/em&gt; 는 &lt;em&gt;하위 테스트&lt;/em&gt; 를 설명 하는 사용자 정의 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="f4255302d67790092ae3618fe040548705ab7253" translate="yes" xml:space="preserve">
          <source>Called when an EOF is received.</source>
          <target state="translated">EOF가 수신되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="47163a325e380e3b03b46ed04459bfa4ee2e8228" translate="yes" xml:space="preserve">
          <source>Called when an element contains a namespace declaration. Namespace declarations are processed before the &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartElementHandler&quot;&gt;&lt;code&gt;StartElementHandler&lt;/code&gt;&lt;/a&gt; is called for the element on which declarations are placed.</source>
          <target state="translated">요소에 네임 스페이스 선언이 포함되어 있으면 호출됩니다. 네임 스페이스 선언은 선언이 배치 된 요소에 대해 &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartElementHandler&quot;&gt; &lt;code&gt;StartElementHandler&lt;/code&gt; &lt;/a&gt; 가 호출 되기 전에 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="b2c94edfe84e7229cf18a7a214117aee9eed9dc7" translate="yes" xml:space="preserve">
          <source>Called when an exception has occurred but there is no way for Python to handle it. For example, when a destructor raises an exception or during garbage collection (&lt;a href=&quot;gc#gc.collect&quot;&gt;&lt;code&gt;gc.collect()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">예외가 발생했을 때 호출되지만 파이썬이 예외를 처리 할 방법이 없습니다. 예를 들어 소멸자가 예외를 발생시키는 경우 또는 가비지 수집 중에 ( &lt;a href=&quot;gc#gc.collect&quot;&gt; &lt;code&gt;gc.collect()&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="decbf1665099d80c2457790e7b6f7145eae20cca" translate="yes" xml:space="preserve">
          <source>Called when an exception is raised and not otherwise handled. The default version prints a condensed traceback.</source>
          <target state="translated">예외가 발생하고 달리 처리되지 않으면 호출됩니다. 기본 버전은 요약 된 역 추적을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="00f56e20a5f519f2df2677ed26f8bbdfc4194b95" translate="yes" xml:space="preserve">
          <source>Called when one of the pipes communicating with the child process is closed.</source>
          <target state="translated">하위 프로세스와 통신하는 파이프 중 하나가 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d3b78dd745e04601bc99bad202195cb9c98fe85a" translate="yes" xml:space="preserve">
          <source>Called when some data is received.</source>
          <target state="translated">일부 데이터가 수신되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="217344b70c9efea012a06dc52d9ac41b017812ed" translate="yes" xml:space="preserve">
          <source>Called when some data is received. &lt;em&gt;data&lt;/em&gt; is a non-empty bytes object containing the incoming data.</source>
          <target state="translated">일부 데이터가 수신되면 호출됩니다. &lt;em&gt;data&lt;/em&gt; 는 들어오는 데이터를 포함하는 비어 있지 않은 바이트 개체입니다.</target>
        </trans-unit>
        <trans-unit id="ff5adab8eb2686ba2906090a9199bb5cdb69d605" translate="yes" xml:space="preserve">
          <source>Called when the XML declaration is parsed. The XML declaration is the (optional) declaration of the applicable version of the XML recommendation, the encoding of the document text, and an optional &amp;ldquo;standalone&amp;rdquo; declaration. &lt;em&gt;version&lt;/em&gt; and &lt;em&gt;encoding&lt;/em&gt; will be strings, and &lt;em&gt;standalone&lt;/em&gt; will be &lt;code&gt;1&lt;/code&gt; if the document is declared standalone, &lt;code&gt;0&lt;/code&gt; if it is declared not to be standalone, or &lt;code&gt;-1&lt;/code&gt; if the standalone clause was omitted. This is only available with Expat version 1.95.0 or newer.</source>
          <target state="translated">XML 선언이 구문 분석 될 때 호출됩니다. XML 선언은 적용 가능한 버전의 XML 권장 사항에 대한 (선택적) 선언, 문서 텍스트의 인코딩 및 선택적 &quot;독립형&quot;선언입니다. &lt;em&gt;버전&lt;/em&gt; 및 &lt;em&gt;인코딩&lt;/em&gt; 은 문자열이며 문서가 독립형으로 선언 된 경우 &lt;em&gt;독립형&lt;/em&gt; 은 &lt;code&gt;1&lt;/code&gt; 이고 &lt;em&gt;독립형&lt;/em&gt; 으로 선언되지 않은 경우 &lt;code&gt;0&lt;/code&gt; , 독립형 절이 생략 된 경우 &lt;code&gt;-1&lt;/code&gt; 입니다. 이것은 Expat 버전 1.95.0 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5766546dd2741e6e89fd53d02804d20e27709e2" translate="yes" xml:space="preserve">
          <source>Called when the active opener&amp;rsquo;s socket actually makes a connection. Might send a &amp;ldquo;welcome&amp;rdquo; banner, or initiate a protocol negotiation with the remote endpoint, for example.</source>
          <target state="translated">활성 오프너의 소켓이 실제로 연결될 때 호출됩니다. 예를 들어 &quot;환영&quot;배너를 보내거나 원격 엔드 포인트와 프로토콜 협상을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9af5edeb8bc5f7967f0e571ce0a3a075f8fd9e8a" translate="yes" xml:space="preserve">
          <source>Called when the asynchronous loop detects that a &lt;code&gt;read()&lt;/code&gt; call on the channel&amp;rsquo;s socket will succeed.</source>
          <target state="translated">비동기 루프 가 채널 소켓의 &lt;code&gt;read()&lt;/code&gt; 호출이 성공한 것을 감지하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dc3738bfd6a9cf8bf34f1ac672ffbd485175ed82" translate="yes" xml:space="preserve">
          <source>Called when the asynchronous loop detects that a writable socket can be written. Often this method will implement the necessary buffering for performance. For example:</source>
          <target state="translated">비동기 루프가 쓰기 가능한 소켓을 쓸 수 있음을 감지하면 호출됩니다. 종종이 방법은 성능에 필요한 버퍼링을 구현합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="33318d6af2ebe985c2637e467125192cbc339cd8" translate="yes" xml:space="preserve">
          <source>Called when the buffer was updated with the received data.</source>
          <target state="translated">수신 된 데이터로 버퍼가 업데이트 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ab708144e4a924706380437c0bb8e5327c6947eb" translate="yes" xml:space="preserve">
          <source>Called when the child process has exited.</source>
          <target state="translated">자식 프로세스가 종료 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4bbfaa09ac05c5e53f9ef4d80b462f8d81592e3e" translate="yes" xml:space="preserve">
          <source>Called when the child process writes data into its &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; pipe.</source>
          <target state="translated">자식 프로세스가 &lt;em&gt;stdout&lt;/em&gt; 또는 &lt;em&gt;stderr&lt;/em&gt; 파이프에 데이터를 쓸 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="1686e3fdec5180bf19f3cb72d575edd1dbb61a00" translate="yes" xml:space="preserve">
          <source>Called when the child process writes data into its stdout or stderr pipe.</source>
          <target state="translated">자식 프로세스가 stdout 또는 stderr 파이프에 데이터를 쓸 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6cf89c3402691b9fff6df51c9daaeebdfe6a4405" translate="yes" xml:space="preserve">
          <source>Called when the closing tag is reached for an element that contained a namespace declaration. This is called once for each namespace declaration on the element in the reverse of the order for which the &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler&quot;&gt;&lt;code&gt;StartNamespaceDeclHandler&lt;/code&gt;&lt;/a&gt; was called to indicate the start of each namespace declaration&amp;rsquo;s scope. Calls to this handler are made after the corresponding &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndElementHandler&quot;&gt;&lt;code&gt;EndElementHandler&lt;/code&gt;&lt;/a&gt; for the end of the element.</source>
          <target state="translated">네임 스페이스 선언이 포함 된 요소에 대해 닫기 태그에 도달하면 호출됩니다. 각 네임 스페이스 선언 범위의 시작을 나타 내기 위해 &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler&quot;&gt; &lt;code&gt;StartNamespaceDeclHandler&lt;/code&gt; &lt;/a&gt; 가 호출 된 순서와 반대로 요소의 각 네임 스페이스 선언에 대해 한 번 호출됩니다. 이 핸들러에 대한 호출은 해당 &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndElementHandler&quot;&gt; &lt;code&gt;EndElementHandler&lt;/code&gt; &lt;/a&gt; 다음에 요소 끝에 대해 ​​수행됩니다.</target>
        </trans-unit>
        <trans-unit id="de2b9ca8645846a4d95bf9e4c667f941ca95e222" translate="yes" xml:space="preserve">
          <source>Called when the connection is lost or closed.</source>
          <target state="translated">연결이 끊어 지거나 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c28a8d4d7a87754487f88f39c810f03649a21a58" translate="yes" xml:space="preserve">
          <source>Called when the incoming data stream matches the termination condition set by &lt;a href=&quot;#asynchat.async_chat.set_terminator&quot;&gt;&lt;code&gt;set_terminator()&lt;/code&gt;&lt;/a&gt;. The default method, which must be overridden, raises a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception. The buffered input data should be available via an instance attribute.</source>
          <target state="translated">수신 데이터 스트림이 &lt;a href=&quot;#asynchat.async_chat.set_terminator&quot;&gt; &lt;code&gt;set_terminator()&lt;/code&gt; &lt;/a&gt; 에 의해 설정된 종료 조건과 일치 할 때 호출됩니다 . 재정의해야하는 기본 메서드는 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다. 버퍼링 된 입력 데이터는 인스턴스 속성을 통해 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="d24725944aa6176d132adcaebbb36c1ac3216a80" translate="yes" xml:space="preserve">
          <source>Called when the other end signals it won&amp;rsquo;t send any more data (for example by calling &lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt;&lt;code&gt;transport.write_eof()&lt;/code&gt;&lt;/a&gt;, if the other end also uses asyncio).</source>
          <target state="translated">다른 쪽 끝이 더 이상 데이터를 보내지 않을 때 호출됩니다 (예 : 다른 쪽 끝이 asyncio를 사용하는 경우 &lt;a href=&quot;#asyncio.WriteTransport.write_eof&quot;&gt; &lt;code&gt;transport.write_eof()&lt;/code&gt; &lt;/a&gt; 호출 ).</target>
        </trans-unit>
        <trans-unit id="a5d3e1abf1d11f3b9d7a488f3431793eac7214f5" translate="yes" xml:space="preserve">
          <source>Called when the parser encounters a recoverable error. If this method does not raise an exception, parsing may continue, but further document information should not be expected by the application. Allowing the parser to continue may allow additional errors to be discovered in the input document.</source>
          <target state="translated">파서에 복구 가능한 오류가 발생하면 호출됩니다. 이 방법으로 예외가 발생하지 않으면 구문 분석이 계속 될 수 있지만 응용 프로그램에서 추가 문서 정보를 기대하지 않아야합니다. 구문 분석기가 계속되도록 허용하면 입력 문서에서 추가 오류가 발견 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a62d16cb22215bf3b54762151690d3ecc53cad75" translate="yes" xml:space="preserve">
          <source>Called when the parser encounters an error it cannot recover from; parsing is expected to terminate when this method returns.</source>
          <target state="translated">구문 분석기가 복구 할 수없는 오류가 발생하면 호출됩니다. 이 메소드가 리턴되면 구문 분석이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="e6264ba30b36eafdf4baf216460a08047c4851de" translate="yes" xml:space="preserve">
          <source>Called when the parser presents minor warning information to the application. Parsing is expected to continue when this method returns, and document information will continue to be passed to the application. Raising an exception in this method will cause parsing to end.</source>
          <target state="translated">파서가 응용 프로그램에 사소한 경고 정보를 제공 할 때 호출됩니다. 이 메소드가 리턴 될 때 구문 분석이 계속 될 것으로 예상되며 문서 정보는 계속 응용 프로그램으로 전달됩니다. 이 메소드에서 예외를 발생 시키면 구문 분석이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="0970e02d9cddb591bda4674612ee5443cfa2c8ce" translate="yes" xml:space="preserve">
          <source>Called when the socket is closed.</source>
          <target state="translated">소켓이 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b9e2a9b663e100b719f6e5a0e4ab0f562c5a4596" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; fails, but was marked with the &lt;a href=&quot;#unittest.expectedFailure&quot;&gt;&lt;code&gt;expectedFailure()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 실패했지만 &lt;a href=&quot;#unittest.expectedFailure&quot;&gt; &lt;code&gt;expectedFailure()&lt;/code&gt; &lt;/a&gt; 데코레이터 로 표시된 경우에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f3969e6db8fa4f1fa14bbbd6ec0bfecc01de4e7" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; is about to be run.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 실행 되려고 할 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="bca7207440759b2e171906cb5da70bee86eb49dd" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; is skipped. &lt;em&gt;reason&lt;/em&gt; is the reason the test gave for skipping.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 를 건너 뛰면 호출됩니다 . &lt;em&gt;reason&lt;/em&gt; 은 테스트에서 건너 뛴 이유입니다.</target>
        </trans-unit>
        <trans-unit id="7792b25bb80d9fc1481932f914cc3076c1a0edae" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; raises an unexpected exception. &lt;em&gt;err&lt;/em&gt; is a tuple of the form returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;(type, value,
traceback)&lt;/code&gt;.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 에서 예기치 않은 예외가 발생하면 호출됩니다 . &lt;em&gt;err&lt;/em&gt; 은 &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;(type, value, traceback)&lt;/code&gt; 반환 한 형식의 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="bbc5c4bec80f4d248644d9d310ffed0fe88dd5a9" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; signals a failure. &lt;em&gt;err&lt;/em&gt; is a tuple of the form returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;(type, value, traceback)&lt;/code&gt;.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 실패를 알리면 호출됩니다 . &lt;em&gt;err&lt;/em&gt; 은 &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;(type, value, traceback)&lt;/code&gt; 반환 한 형식의 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="35b7e26d8a3f934c9efa4654a919c2f1f7206b0f" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; succeeds.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 성공하면 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a5700f77862534b91aa33efd9ced9dd36c831e9" translate="yes" xml:space="preserve">
          <source>Called when the test case &lt;em&gt;test&lt;/em&gt; was marked with the &lt;a href=&quot;#unittest.expectedFailure&quot;&gt;&lt;code&gt;expectedFailure()&lt;/code&gt;&lt;/a&gt; decorator, but succeeded.</source>
          <target state="translated">테스트 케이스 &lt;em&gt;테스트&lt;/em&gt; 가 expectFailure &lt;a href=&quot;#unittest.expectedFailure&quot;&gt; &lt;code&gt;expectedFailure()&lt;/code&gt; &lt;/a&gt; 데코레이터 로 표시 되었지만 성공 했을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="335a8d2c36029276f348c7d71a0dff500bddd0fa" translate="yes" xml:space="preserve">
          <source>Called when the transport&amp;rsquo;s buffer drains below the low water mark.</source>
          <target state="translated">트랜스 포트 버퍼가 로우 워터 마크 아래로 배수 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a5eb66717be824c508e56c27e35477c9e0358d90" translate="yes" xml:space="preserve">
          <source>Called when the transport&amp;rsquo;s buffer drains below the low watermark.</source>
          <target state="translated">전송 버퍼가 낮은 워터 마크 아래로 배수 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f77e65961b22377db69c25dfb4af7c7d875153a0" translate="yes" xml:space="preserve">
          <source>Called when the transport&amp;rsquo;s buffer goes over the high water mark.</source>
          <target state="translated">전송 버퍼가 높은 워터 마크를 넘을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a28c5e7c0ef64102b186d5d206a6f283c697c4aa" translate="yes" xml:space="preserve">
          <source>Called when the transport&amp;rsquo;s buffer goes over the high watermark.</source>
          <target state="translated">전송 버퍼가 높은 워터 마크를 넘을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fbfb1d9c7d0ef0efa9c5a37e71ccc5ce31643ace" translate="yes" xml:space="preserve">
          <source>Called when there is out of band (OOB) data for a socket connection. This will almost never happen, as OOB is tenuously supported and rarely used.</source>
          <target state="translated">소켓 연결에 대한 대역 외 (OOB) 데이터가있을 때 호출됩니다. OOB는 지원이 거의없고 거의 사용되지 않기 때문에 거의 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="560f42342f7c53c6ccd34f45c7b1575469d33ce3" translate="yes" xml:space="preserve">
          <source>Called with &lt;em&gt;data&lt;/em&gt; holding an arbitrary amount of received data. The default method, which must be overridden, raises a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">임의의 양의 수신 데이터를 보유한 &lt;em&gt;데이터로&lt;/em&gt; 호출됩니다 . 재정의해야하는 기본 메서드는 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="91f63fb778fbf778d23c69d5a31e985a9cacf308" translate="yes" xml:space="preserve">
          <source>Calling</source>
          <target state="translated">Calling</target>
        </trans-unit>
        <trans-unit id="3d8468dadcc6dc3c3c75017a499b07b830ae67a0" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; methods from a callable submitted to a &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; will result in deadlock.</source>
          <target state="translated">호출 &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; A를 제출 한 호출의 방법 &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; 은&lt;/a&gt; 교착 상태가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d69aeba19e5cb43b48a5d360b7df2ecdb98d992b" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; directly does not change &lt;code&gt;os.environ&lt;/code&gt;, so it&amp;rsquo;s better to modify &lt;code&gt;os.environ&lt;/code&gt;.</source>
          <target state="translated">호출 &lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt; 직접 변경하지 않습니다 &lt;code&gt;os.environ&lt;/code&gt; 그것을 수정하는 것이 좋습니다 그래서 &lt;code&gt;os.environ&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7adf0fa3899a1b8a4e6950cced506fab1a4eae1" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#sys.addaudithook&quot;&gt;&lt;code&gt;sys.addaudithook()&lt;/code&gt;&lt;/a&gt; will itself raise an auditing event named &lt;code&gt;sys.addaudithook&lt;/code&gt; with no arguments. If any existing hooks raise an exception derived from &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, the new hook will not be added and the exception suppressed. As a result, callers cannot assume that their hook has been added unless they control all existing hooks.</source>
          <target state="translated">&lt;a href=&quot;#sys.addaudithook&quot;&gt; &lt;code&gt;sys.addaudithook()&lt;/code&gt; &lt;/a&gt; 을 호출 하면 자체적으로 인수없이 &lt;code&gt;sys.addaudithook&lt;/code&gt; 이라는 감사 이벤트가 발생 합니다. 기존 후크가 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 에서 파생 된 예외를 발생 시키면 새 후크가 추가되지 않고 예외가 억제됩니다. 결과적으로 호출자는 기존의 모든 후크를 제어하지 않는 한 후크가 추가되었다고 가정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2eee933557219c597f6fed04dbb90ef4dcec434a" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;asyncio-eventloop#asyncio.loop.set_debug&quot;&gt;&lt;code&gt;loop.set_debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호출 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.set_debug&quot;&gt; &lt;code&gt;loop.set_debug()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9670a395b19eecaf88c4a04d6298d90c49dbf1ba" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; on methods or functions displays the docstrings:</source>
          <target state="translated">메소드 또는 함수에서 &lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 docstring이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="807e8e74272214ca156d185a69ffb3ba16bdfe40" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on a generic shows the parameterized type:</source>
          <target state="translated">제네릭에서 &lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 을 호출 하면 매개 변수화 된 유형이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a19a87775f3eaa51a81e61cfba22856699ecdc80" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; tells you that the OS-level socket can be read from (or written to), but it does not imply that there is sufficient data at the upper SSL layer. For example, only part of an SSL frame might have arrived. Therefore, you must be ready to handle &lt;code&gt;SSLSocket.recv()&lt;/code&gt; and &lt;code&gt;SSLSocket.send()&lt;/code&gt; failures, and retry after another call to &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; 호출 하면 OS 레벨 소켓을 읽거나 쓸 수 있지만 상위 SSL 계층에 충분한 데이터가 있음을 의미하지는 않습니다. 예를 들어 SSL 프레임의 일부만 도착했을 수 있습니다. 따라서 &lt;code&gt;SSLSocket.recv()&lt;/code&gt; 및 &lt;code&gt;SSLSocket.send()&lt;/code&gt; 실패 를 처리 할 준비가되어 있어야하며 &lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; 를 다시 호출 한 후 다시 시도하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0952eada586a42848fba2a672aedee433860e7c" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; is only recommended under Unix. Under Windows, the unicode form is the canonical representation of filesystem paths.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 호출 은 Unix에서만 권장됩니다. Windows에서 유니 코드 형식은 파일 시스템 경로의 표준 표현입니다.</target>
        </trans-unit>
        <trans-unit id="03276456844659492ffc75282aa43e3258748763" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; or raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception is equivalent to calling &lt;a href=&quot;#_thread.exit&quot;&gt;&lt;code&gt;_thread.exit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt; 호출 또는 &lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt; 예외 발생은 &lt;a href=&quot;#_thread.exit&quot;&gt; &lt;code&gt;_thread.exit()&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="de19e8ff0314711e715ff2ee16e7a125cb8ae825" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;bytes()&lt;/code&gt; on a &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object returns a formatted bytestring suitable for transmission as HTTP response headers. Each header is placed on a line with its value, separated by a colon and a space. Each line is terminated by a carriage return and line feed, and the bytestring is terminated with a blank line.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; 객체 에서 &lt;code&gt;bytes()&lt;/code&gt; 를 호출 하면 HTTP 응답 헤더로 전송하기에 적합한 형식화 된 바이트 문자열이 반환됩니다. 각 헤더는 콜론과 공백으로 구분 된 값을 가진 행에 배치됩니다. 각 줄은 캐리지 리턴과 줄 바꿈으로 끝나고 바이트 열은 빈 줄로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="19822677dc19f67d189d9173d5c1e5f48450f08a" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;freeze_support()&lt;/code&gt; has no effect when invoked on any operating system other than Windows. In addition, if the module is being run normally by the Python interpreter on Windows (the program has not been frozen), then &lt;code&gt;freeze_support()&lt;/code&gt; has no effect.</source>
          <target state="translated">호출 &lt;code&gt;freeze_support()&lt;/code&gt; 윈도우 이외의 운영체제에서 호출 할 때 영향을주지 않습니다. 또한 Windows에서 Python 인터프리터가 모듈을 정상적으로 실행중인 경우 (프로그램이 정지되지 않은 경우) &lt;code&gt;freeze_support()&lt;/code&gt; 는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eae69e48b97900fa2c5282fbb5099b96c35e0eb3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;main&lt;/code&gt; actually returns an instance of the &lt;code&gt;TestProgram&lt;/code&gt; class. This stores the result of the tests run as the &lt;code&gt;result&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; 을 호출 하면 실제로 &lt;code&gt;TestProgram&lt;/code&gt; 클래스 의 인스턴스가 반환 됩니다. 테스트 실행 &lt;code&gt;result&lt;/code&gt; 속성 으로 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="dc79149c5abebc86caaaa4f13f4397d732bb4287" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;reset_tzpath&lt;/code&gt; will not invalidate the &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; cache, and so calls to the primary &lt;code&gt;ZoneInfo&lt;/code&gt; constructor will only use the new &lt;code&gt;TZPATH&lt;/code&gt; in the case of a cache miss.</source>
          <target state="translated">&lt;code&gt;reset_tzpath&lt;/code&gt; 를 호출 하면 &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt; &lt;code&gt;ZoneInfo&lt;/code&gt; &lt;/a&gt; 캐시가 무효화되지 않으므로 기본 &lt;code&gt;ZoneInfo&lt;/code&gt; 생성자 에 대한 호출 은 캐시가 누락 된 경우 에만 새 &lt;code&gt;TZPATH&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c64f483b0e216b7f12d66ec62bdce71a6172c93f" translate="yes" xml:space="preserve">
          <source>Calling a &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;close()&lt;/code&gt; method does not close &lt;em&gt;fileobj&lt;/em&gt;, since you might wish to append more material after the compressed data. This also allows you to pass an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; object opened for writing as &lt;em&gt;fileobj&lt;/em&gt;, and retrieve the resulting memory buffer using the &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s &lt;a href=&quot;io#io.BytesIO.getvalue&quot;&gt;&lt;code&gt;getvalue()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt; 객체의 &lt;code&gt;close()&lt;/code&gt; 메서드를 호출하면 &lt;em&gt;fileobj&lt;/em&gt; 가 닫히지 않습니다 . 압축 된 데이터 뒤에 더 많은 자료를 추가 할 수 있기 때문입니다. 또한이 단계 전달할 수 &lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; 용&lt;/a&gt; 으로 기록하기위한 개방 객체 &lt;em&gt;fileobj을&lt;/em&gt; 하고 사용 얻어진 메모리 버퍼를 검색 &lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; 의&lt;/a&gt; 오브젝트의 &lt;a href=&quot;io#io.BytesIO.getvalue&quot;&gt; &lt;code&gt;getvalue()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="b42370b8643158e19be412878ef354db7c54e6e7" translate="yes" xml:space="preserve">
          <source>Calling functions</source>
          <target state="translated">함수 호출</target>
        </trans-unit>
        <trans-unit id="918b0be50125b304219dc1e7ea36008d58e2aece" translate="yes" xml:space="preserve">
          <source>Calling functions with your own custom data types</source>
          <target state="translated">고유 한 사용자 정의 데이터 유형으로 함수 호출</target>
        </trans-unit>
        <trans-unit id="481ad1a5c8b7b8212a0cabfbd85c9e84e9f49eab" translate="yes" xml:space="preserve">
          <source>Calling functions, continued</source>
          <target state="translated">함수 호출, 계속</target>
        </trans-unit>
        <trans-unit id="9551807be144bc49e3fb05e792f394fc2c904216" translate="yes" xml:space="preserve">
          <source>Calling the pointer type without an argument creates a &lt;code&gt;NULL&lt;/code&gt; pointer. &lt;code&gt;NULL&lt;/code&gt; pointers have a &lt;code&gt;False&lt;/code&gt; boolean value:</source>
          <target state="translated">인수없이 포인터 유형을 호출하면 &lt;code&gt;NULL&lt;/code&gt; 포인터 가 작성 됩니다 . &lt;code&gt;NULL&lt;/code&gt; 포인터에는 &lt;code&gt;False&lt;/code&gt; 부울 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="806b766686c40042b74cb0441a76e8486f4bcede" translate="yes" xml:space="preserve">
          <source>Calling the program through the shell is usually not required.</source>
          <target state="translated">쉘을 통해 프로그램을 호출 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="aee1763c0b60db5a3fe5b7f25e6dee1315f7450b" translate="yes" xml:space="preserve">
          <source>Calling this during a test method or &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; skips the current test. See &lt;a href=&quot;#unittest-skipping&quot;&gt;Skipping tests and expected failures&lt;/a&gt; for more information.</source>
          <target state="translated">테스트 메소드 또는 &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt; 중에 이것을 호출 하면 현재 테스트를 건너 뜁니다. 자세한 내용은 &lt;a href=&quot;#unittest-skipping&quot;&gt;테스트 건너 뛰기와 예상 실패&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="152ea819a2598a98a6695c6405e218396c4c9c81" translate="yes" xml:space="preserve">
          <source>Calling this has the side effect of &amp;ldquo;joining&amp;rdquo; any processes which have already finished.</source>
          <target state="translated">이것을 호출하면 이미 완료된 프로세스를 &quot;결합&quot;하는 부작용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="58199a1a305a1f0aca5e3081bb547455d0d3bbe8" translate="yes" xml:space="preserve">
          <source>Calling this method is equivalent to combining the path with each of the &lt;em&gt;other&lt;/em&gt; arguments in turn:</source>
          <target state="translated">이 메소드를 호출하는 것은 경로를 &lt;em&gt;다른&lt;/em&gt; 각 인수와 차례로 결합하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4464ef39f90ba51711b7c49c234fc763b53db5d2" translate="yes" xml:space="preserve">
          <source>Calling this method should ensure that the data on the output is put into a clean state that allows appending of new fresh data without having to rescan the whole stream to recover state.</source>
          <target state="translated">이 메소드를 호출하면 출력의 데이터가 깨끗한 상태가되어 상태를 복구하기 위해 전체 스트림을 다시 스캔하지 않고도 새로운 최신 데이터를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53de036be65b154c48f391b0361b66610d4e7772" translate="yes" xml:space="preserve">
          <source>Calling this with a true value for &lt;em&gt;flag&lt;/em&gt; (the default) will cause Expat to call the &lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt;&lt;code&gt;ExternalEntityRefHandler&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; for all arguments to allow an alternate DTD to be loaded. If the document does not contain a document type declaration, the &lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt;&lt;code&gt;ExternalEntityRefHandler&lt;/code&gt;&lt;/a&gt; will still be called, but the &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartDoctypeDeclHandler&quot;&gt;&lt;code&gt;StartDoctypeDeclHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndDoctypeDeclHandler&quot;&gt;&lt;code&gt;EndDoctypeDeclHandler&lt;/code&gt;&lt;/a&gt; will not be called.</source>
          <target state="translated">이 값을 &lt;em&gt;플래그&lt;/em&gt; (기본값) 로 true 로 호출하면 Expat에서 대체 DTD를로드 할 수 있도록 모든 인수에 대해 &lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt; &lt;code&gt;ExternalEntityRefHandler&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 으로 호출합니다 . 문서에 문서 유형 선언이 포함되어 있지 않은 경우 &lt;a href=&quot;#xml.parsers.expat.xmlparser.ExternalEntityRefHandler&quot;&gt; &lt;code&gt;ExternalEntityRefHandler&lt;/code&gt; &lt;/a&gt; 는 계속 호출되지만 &lt;a href=&quot;#xml.parsers.expat.xmlparser.StartDoctypeDeclHandler&quot;&gt; &lt;code&gt;StartDoctypeDeclHandler&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#xml.parsers.expat.xmlparser.EndDoctypeDeclHandler&quot;&gt; &lt;code&gt;EndDoctypeDeclHandler&lt;/code&gt; &lt;/a&gt; 는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="660f2f1f422830bf3130b53dae9a654c10bad506" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.handle_one_request&quot;&gt;&lt;code&gt;handle_one_request()&lt;/code&gt;&lt;/a&gt; once (or, if persistent connections are enabled, multiple times) to handle incoming HTTP requests. You should never need to override it; instead, implement appropriate &lt;code&gt;do_*()&lt;/code&gt; methods.</source>
          <target state="translated">들어오는 HTTP 요청을 처리하기 위해 &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.handle_one_request&quot;&gt; &lt;code&gt;handle_one_request()&lt;/code&gt; &lt;/a&gt; 한 번 (또는 지속적 연결이 활성화 된 경우 여러 번) 호출 합니다. 재정의 할 필요는 없습니다. 대신 적절한 &lt;code&gt;do_*()&lt;/code&gt; 메소드를 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="3366a95a2015f49377a8674a42cb6074bdff908f" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#importlib.abc.PathEntryFinder.invalidate_caches&quot;&gt;&lt;code&gt;importlib.abc.PathEntryFinder.invalidate_caches()&lt;/code&gt;&lt;/a&gt; on all finders stored in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; that define the method. Otherwise entries in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;None&lt;/code&gt; are deleted.</source>
          <target state="translated">메소드를 정의하는 &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 에&lt;/a&gt; 저장된 모든 파인더에서 &lt;a href=&quot;#importlib.abc.PathEntryFinder.invalidate_caches&quot;&gt; &lt;code&gt;importlib.abc.PathEntryFinder.invalidate_caches()&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 그렇지 않으면 &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 의&lt;/a&gt; 항목 이 &lt;code&gt;None&lt;/code&gt; 으로 설정된 항목 이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="5ed6ed6a9a91795ad695fdf0c9cddbad3a8f4520" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#logging.handlers.MemoryHandler.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;, sets the target to &lt;code&gt;None&lt;/code&gt; and clears the buffer.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.MemoryHandler.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 호출 하고 대상을 &lt;code&gt;None&lt;/code&gt; 으로 설정 하고 버퍼를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="1f089a197ae0c1f886a720ee5edffdbc231438b5" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#socketserver.BaseServer.finish_request&quot;&gt;&lt;code&gt;finish_request()&lt;/code&gt;&lt;/a&gt; to create an instance of the &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt;. If desired, this function can create a new process or thread to handle the request; the &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt;&lt;code&gt;ThreadingMixIn&lt;/code&gt;&lt;/a&gt; classes do this.</source>
          <target state="translated">전화 &lt;a href=&quot;#socketserver.BaseServer.finish_request&quot;&gt; &lt;code&gt;finish_request()&lt;/code&gt; &lt;/a&gt; 의 인스턴스를 만들 수 있습니다 &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; 을&lt;/a&gt; . 원하는 경우이 함수는 요청을 처리하기 위해 새 프로세스 또는 스레드를 작성할 수 있습니다. &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#socketserver.ThreadingMixIn&quot;&gt; &lt;code&gt;ThreadingMixIn&lt;/code&gt; &lt;/a&gt; 클래스는이 작업을 수행.</target>
        </trans-unit>
        <trans-unit id="fd9fc56c6af9f934102a6baff8962985ad8335f0" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;dict.__setitem__(TOS1[-i], TOS1, TOS)&lt;/code&gt;. Used to implement dict comprehensions.</source>
          <target state="translated">통화 &lt;code&gt;dict.__setitem__(TOS1[-i], TOS1, TOS)&lt;/code&gt; . 독해 이해를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0aad44be1a1c283c578e0f57cfb9d4f680ecaebd" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;dict.update(TOS1[-i], TOS)&lt;/code&gt;. Used to build dicts.</source>
          <target state="translated">&lt;code&gt;dict.update(TOS1[-i], TOS)&lt;/code&gt; 호출 합니다. 사전을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1f44fad7b185153e86b42ffa9fd3b168b3366f00" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;list.append(TOS1[-i], TOS)&lt;/code&gt;. Used to implement list comprehensions.</source>
          <target state="translated">&lt;code&gt;list.append(TOS1[-i], TOS)&lt;/code&gt; 호출 합니다. 목록 이해를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="432193830ac0a6453e2593d41fc80f41606cd798" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;list.append(TOS[-i], TOS)&lt;/code&gt;. Used to implement list comprehensions.</source>
          <target state="translated">&lt;code&gt;list.append(TOS[-i], TOS)&lt;/code&gt; 호출 합니다. 목록 이해를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7a102a97774359f6c14db375e0a2610c206ac37a" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;list.extend(TOS1[-i], TOS)&lt;/code&gt;. Used to build lists.</source>
          <target state="translated">&lt;code&gt;list.extend(TOS1[-i], TOS)&lt;/code&gt; 호출 합니다. 목록을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="87a290bfd0c5783e4f772da748152bee0dce4438" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;set.add(TOS1[-i], TOS)&lt;/code&gt;. Used to implement set comprehensions.</source>
          <target state="translated">&lt;code&gt;set.add(TOS1[-i], TOS)&lt;/code&gt; 호출 합니다. 이해력을 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d4d7f4a93804dd6aa998c004102f7650eb767d20" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;set.update(TOS1[-i], TOS)&lt;/code&gt;. Used to build sets.</source>
          <target state="translated">&lt;code&gt;set.update(TOS1[-i], TOS)&lt;/code&gt; 호출 합니다. 세트를 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f3c80151afdc1dc4f1f15ac92a73268592889d32" translate="yes" xml:space="preserve">
          <source>Calls a callable object with positional (if any) and keyword arguments. &lt;em&gt;argc&lt;/em&gt; indicates the total number of positional and keyword arguments. The top element on the stack contains a tuple of keyword argument names. Below that are keyword arguments in the order corresponding to the tuple. Below that are positional arguments, with the right-most parameter on top. Below the arguments is a callable object to call. &lt;code&gt;CALL_FUNCTION_KW&lt;/code&gt; pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</source>
          <target state="translated">위치 (있는 경우) 및 키워드 인수를 사용하여 호출 가능 객체를 호출합니다. &lt;em&gt;argc&lt;/em&gt; 는 위치 및 키워드 인수의 총 수를 나타냅니다. 스택의 최상위 요소는 키워드 인수 이름의 튜플을 포함합니다. 아래는 튜플에 해당하는 순서로 키워드 인수입니다. 아래는 가장 오른쪽에있는 매개 변수가있는 위치 인수입니다. 인수 아래에는 호출 할 호출 가능한 객체가 있습니다. &lt;code&gt;CALL_FUNCTION_KW&lt;/code&gt; 는 모든 인수와 호출 가능한 객체를 스택에서 꺼내고 해당 인수로 호출 가능한 객체를 호출 한 다음 호출 가능한 객체가 반환 한 반환 값을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="4fc08a6006aece1a61b5797b4ad312485360e6ff" translate="yes" xml:space="preserve">
          <source>Calls a callable object with positional (if any) and keyword arguments. &lt;em&gt;argc&lt;/em&gt; indicates the total number of positional and keyword arguments. The top element on the stack contains a tuple with the names of the keyword arguments, which must be strings. Below that are the values for the keyword arguments, in the order corresponding to the tuple. Below that are positional arguments, with the right-most parameter on top. Below the arguments is a callable object to call. &lt;code&gt;CALL_FUNCTION_KW&lt;/code&gt; pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</source>
          <target state="translated">위치 (있는 경우) 및 키워드 인수를 사용하여 호출 가능한 개체를 호출합니다. &lt;em&gt;argc&lt;/em&gt; 는 위치 및 키워드 인수의 총 수를 나타냅니다. 스택의 최상위 요소에는 문자열이어야하는 키워드 인수의 이름이있는 튜플이 포함됩니다. 그 아래에는 튜플에 해당하는 순서대로 키워드 인수에 대한 값이 있습니다. 그 아래에는 맨 오른쪽 매개 변수가 맨 위에있는 위치 인수가 있습니다. 인수 아래에는 호출 할 호출 가능한 개체가 있습니다. &lt;code&gt;CALL_FUNCTION_KW&lt;/code&gt; 는 스택에서 모든 인수와 호출 가능한 개체를 팝하고, 해당 인수를 사용하여 호출 가능한 개체를 호출하고, 호출 가능한 개체가 반환 한 반환 값을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="9bcfedcebd017c91ce1d8f3ed2136bb744e4e7e3" translate="yes" xml:space="preserve">
          <source>Calls a callable object with positional arguments. &lt;em&gt;argc&lt;/em&gt; indicates the number of positional arguments. The top of the stack contains positional arguments, with the right-most argument on top. Below the arguments is a callable object to call. &lt;code&gt;CALL_FUNCTION&lt;/code&gt; pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</source>
          <target state="translated">위치 인수를 사용하여 호출 가능 객체를 호출합니다. &lt;em&gt;argc&lt;/em&gt; 는 위치 인수의 수를 나타냅니다. 스택의 맨 위에는 가장 오른쪽에있는 인수와 함께 위치 인수가 포함됩니다. 인수 아래에는 호출 할 호출 가능한 객체가 있습니다. &lt;code&gt;CALL_FUNCTION&lt;/code&gt; 은 모든 인수와 호출 가능한 객체를 스택에서 꺼내고 해당 인수로 호출 가능한 객체를 호출 한 다음 호출 가능한 객체가 반환 한 반환 값을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="19113f0039709ee0a52a8414afe975955bec9d0a" translate="yes" xml:space="preserve">
          <source>Calls a callable object with variable set of positional and keyword arguments. If the lowest bit of &lt;em&gt;flags&lt;/em&gt; is set, the top of the stack contains a mapping object containing additional keyword arguments. Before the callable is called, the mapping object and iterable object are each &amp;ldquo;unpacked&amp;rdquo; and their contents passed in as keyword and positional arguments respectively. &lt;code&gt;CALL_FUNCTION_EX&lt;/code&gt; pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</source>
          <target state="translated">위치 및 키워드 인수의 변수 집합을 사용하여 호출 가능한 개체를 호출합니다. &lt;em&gt;플래그&lt;/em&gt; 의 가장 낮은 비트 가 설정되면 스택의 맨 위에 추가 키워드 인수가 포함 된 매핑 개체가 포함됩니다. 콜 러블이 호출되기 전에 매핑 객체와 이터 러블 객체는 각각 &quot;압축 해제&quot;되고 그 내용은 각각 키워드 및 위치 인수로 전달됩니다. &lt;code&gt;CALL_FUNCTION_EX&lt;/code&gt; 는 스택에서 모든 인수와 호출 가능한 개체를 팝하고, 해당 인수로 호출 가능한 개체를 호출하고, 호출 가능한 개체가 반환 한 반환 값을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="e3d1c503fdcaa6e6166bf0cc776fada9edcae78d" translate="yes" xml:space="preserve">
          <source>Calls a callable object with variable set of positional and keyword arguments. If the lowest bit of &lt;em&gt;flags&lt;/em&gt; is set, the top of the stack contains a mapping object containing additional keyword arguments. Below that is an iterable object containing positional arguments and a callable object to call. &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK_WITH_CALL&quot;&gt;&lt;code&gt;BUILD_MAP_UNPACK_WITH_CALL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK_WITH_CALL&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK_WITH_CALL&lt;/code&gt;&lt;/a&gt; can be used for merging multiple mapping objects and iterables containing arguments. Before the callable is called, the mapping object and iterable object are each &amp;ldquo;unpacked&amp;rdquo; and their contents passed in as keyword and positional arguments respectively. &lt;code&gt;CALL_FUNCTION_EX&lt;/code&gt; pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</source>
          <target state="translated">위치 및 키워드 인수의 변수 세트로 호출 가능한 객체를 호출합니다. 가장 낮은 비트의 &lt;em&gt;플래그&lt;/em&gt; 가 설정되면 스택의 맨 위에 추가 키워드 인수가 포함 된 매핑 개체가 포함됩니다. 그 아래에는 위치 인수와 호출 할 호출 가능한 객체가 포함 된 반복 가능한 객체가 있습니다. &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK_WITH_CALL&quot;&gt; &lt;code&gt;BUILD_MAP_UNPACK_WITH_CALL&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK_WITH_CALL&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK_WITH_CALL&lt;/code&gt; &lt;/a&gt; 은 인수를 포함하는 여러 맵핑 오브젝트 및 반복 가능 항목을 병합하는 데 사용할 수 있습니다. 콜 러블이 호출되기 전에 맵핑 오브젝트 및 반복 가능 오브젝트는 각각 &quot;포장 해제&quot;되며 해당 컨텐츠는 각각 키워드 및 위치 인수로 전달됩니다. &lt;code&gt;CALL_FUNCTION_EX&lt;/code&gt; 모든 인수와 호출 가능한 객체를 스택에서 꺼내고 해당 인수로 호출 가능한 객체를 호출 한 다음 호출 가능한 객체가 반환 한 반환 값을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="14d090b39c19089e4c0079421e067e1a44a78f9d" translate="yes" xml:space="preserve">
          <source>Calls a method. &lt;em&gt;argc&lt;/em&gt; is number of positional arguments. Keyword arguments are not supported. This opcode is designed to be used with &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt;&lt;code&gt;LOAD_METHOD&lt;/code&gt;&lt;/a&gt;. Positional arguments are on top of the stack. Below them, two items described in &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt;&lt;code&gt;LOAD_METHOD&lt;/code&gt;&lt;/a&gt; on the stack. All of them are popped and return value is pushed.</source>
          <target state="translated">메소드를 호출합니다. &lt;em&gt;argc&lt;/em&gt; 는 위치 인수의 수입니다. 키워드 인수는 지원되지 않습니다. 이 opcode는 &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt; &lt;code&gt;LOAD_METHOD&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 . 위치 인수는 스택 맨 위에 있습니다. 그 아래 에는 스택의 &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt; &lt;code&gt;LOAD_METHOD&lt;/code&gt; &lt;/a&gt; 에 설명 된 두 항목이 있습니다 . 모두 터지고 반환 값이 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="65b4f35e1f15991d978375a52b2a5e3d9eb60aac" translate="yes" xml:space="preserve">
          <source>Calls a method. &lt;em&gt;argc&lt;/em&gt; is the number of positional arguments. Keyword arguments are not supported. This opcode is designed to be used with &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt;&lt;code&gt;LOAD_METHOD&lt;/code&gt;&lt;/a&gt;. Positional arguments are on top of the stack. Below them, the two items described in &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt;&lt;code&gt;LOAD_METHOD&lt;/code&gt;&lt;/a&gt; are on the stack (either &lt;code&gt;self&lt;/code&gt; and an unbound method object or &lt;code&gt;NULL&lt;/code&gt; and an arbitrary callable). All of them are popped and the return value is pushed.</source>
          <target state="translated">메서드를 호출합니다. &lt;em&gt;argc&lt;/em&gt; 는 위치 인수의 수입니다. 키워드 인수는 지원되지 않습니다. 이 opcode는 &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt; &lt;code&gt;LOAD_METHOD&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 . 위치 인수는 스택 맨 위에 있습니다. 그 아래에는 &lt;a href=&quot;#opcode-LOAD_METHOD&quot;&gt; &lt;code&gt;LOAD_METHOD&lt;/code&gt; 에&lt;/a&gt; 설명 된 두 항목 이 스택에 있습니다 ( &lt;code&gt;self&lt;/code&gt; 및 바인딩되지 않은 메서드 개체 또는 &lt;code&gt;NULL&lt;/code&gt; 및 임의 호출 가능). 그들 모두가 팝되고 반환 값이 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="21c4bdb16701951fa99b7d99067407eb76c29edd" translate="yes" xml:space="preserve">
          <source>Calls made to the object will be recorded in the attributes like &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">객체에 대한 호출은 &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;call_args&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; &lt;/a&gt; 와 같은 속성에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec11af0584a15d4c48eb151351a55a5d8097f844" translate="yes" xml:space="preserve">
          <source>Calls super&amp;rsquo;s &lt;code&gt;load_module()&lt;/code&gt;.</source>
          <target state="translated">super의 &lt;code&gt;load_module()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ae0f62b07ab022f6a81a9104be338910c02544df" translate="yes" xml:space="preserve">
          <source>Calls the function in position 7 on the stack with the top three items on the stack as arguments. Used to implement the call &lt;code&gt;context_manager.__exit__(*exc_info())&lt;/code&gt; when an exception has occurred in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">스택의 상위 3 개 항목을 인수로 사용하여 스택의 위치 7에서 함수를 호출합니다. &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 예외가 발생했을 때 &lt;code&gt;context_manager.__exit__(*exc_info())&lt;/code&gt; 호출을 구현하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="451d57cc69a8939faa69090b9b01bc1692745d9a" translate="yes" xml:space="preserve">
          <source>Calls to magic methods do not appear in &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt;, but they are recorded in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">magic 메소드에 대한 호출은 &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; 에&lt;/a&gt; 나타나지 않지만 &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; 에&lt;/a&gt; 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="478693ac496b905aca50729a82969165632e4d05" translate="yes" xml:space="preserve">
          <source>Calltips</source>
          <target state="translated">Calltips</target>
        </trans-unit>
        <trans-unit id="561e85d0b0568a50f3de1a1e5711714b9c8953ae" translate="yes" xml:space="preserve">
          <source>Can also be used to distinguish generator-based coroutines from regular generators:</source>
          <target state="translated">발전기 기반 코 루틴을 일반 발전기와 구별하는 데에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9df6f72ec4df7b0e71a09b1ebf6b53e528ee1af" translate="yes" xml:space="preserve">
          <source>Can be passed to the &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; parameters.</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt; , &lt;em&gt;stdout&lt;/em&gt; 또는 &lt;em&gt;stderr&lt;/em&gt; 매개 변수 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c4b8cae3b6474adb23f9cc0e55a8ccddd1ab035" translate="yes" xml:space="preserve">
          <source>Can be raised in situations like setting a result value for a &lt;em&gt;Future&lt;/em&gt; object that already has a result value set.</source>
          <target state="translated">이미 결과 값이 설정되어있는 &lt;em&gt;Future&lt;/em&gt; 개체에 대한 결과 값 설정과 같은 상황에서 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14e2f126cf41bb106a52d147735548c428c60e37" translate="yes" xml:space="preserve">
          <source>Can not access a needed shared library</source>
          <target state="translated">필요한 공유 라이브러리에 액세스 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="7e7112996c0bc37c1eee9583cf6ce310abd859a7" translate="yes" xml:space="preserve">
          <source>Can occur with division, modulo division, or when raising a number to a negative power. If this signal is not trapped, returns &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt; with the sign determined by the inputs to the calculation.</source>
          <target state="translated">나누기, 모듈로 나누기 또는 음수로 숫자를 올릴 때 발생할 수 있습니다. 이 신호가 포착되지 않으면 계산 입력에 의해 결정된 부호와 함께 &lt;code&gt;Infinity&lt;/code&gt; 또는 &lt;code&gt;-Infinity&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5672ecfe65e7cc180ace87905559dcc51add70d8" translate="yes" xml:space="preserve">
          <source>Canadian</source>
          <target state="translated">Canadian</target>
        </trans-unit>
        <trans-unit id="77dfd2135f4db726c47299bb55be26f7f4525a46" translate="yes" xml:space="preserve">
          <source>Cancel</source>
          <target state="translated">Cancel</target>
        </trans-unit>
        <trans-unit id="dd262b10cc08ccc611018e48c5e1f5adbfe13ab1" translate="yes" xml:space="preserve">
          <source>Cancel the Future and schedule callbacks.</source>
          <target state="translated">미래를 취소하고 콜백을 예약하십시오.</target>
        </trans-unit>
        <trans-unit id="e6645dd31307260ea7a6d4c6bdcdbce033c1f082" translate="yes" xml:space="preserve">
          <source>Cancel the callback. If the callback has already been canceled or executed, this method has no effect.</source>
          <target state="translated">콜백을 취소하십시오. 콜백이 이미 취소되었거나 실행 된 경우이 방법은 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31b220d753487c896edeadaaa11519a005dedf94" translate="yes" xml:space="preserve">
          <source>Cancel the drag-and-drop process.</source>
          <target state="translated">끌어서 놓기 프로세스를 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="0852b16275ba8ddb4435db48a211abb9fa8adb7d" translate="yes" xml:space="preserve">
          <source>Cancel the last call to &lt;a href=&quot;#faulthandler.dump_traceback_later&quot;&gt;&lt;code&gt;dump_traceback_later()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#faulthandler.dump_traceback_later&quot;&gt; &lt;code&gt;dump_traceback_later()&lt;/code&gt; &lt;/a&gt; 대한 마지막 호출을 취소하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bf5b2d860f0b8549b244b878f13b62ffd5669f8" translate="yes" xml:space="preserve">
          <source>Cannot assign requested address</source>
          <target state="translated">요청한 주소를 할당 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="577bf7f510eba351fd7cb5c994415680c2b49b26" translate="yes" xml:space="preserve">
          <source>Cannot exec a shared library directly</source>
          <target state="translated">공유 라이브러리를 직접 실행할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="6fc3a76733eb2dd9f75a45feee42b1fad853ee11" translate="yes" xml:space="preserve">
          <source>Cannot send after transport endpoint shutdown</source>
          <target state="translated">전송 끝점 종료 후 보낼 수 없습니다</target>
        </trans-unit>
        <trans-unit id="e5b5bacc03e5aad79cf2f41574bbe9e41b9756ab" translate="yes" xml:space="preserve">
          <source>Canonicalization is a way to normalise XML output in a way that allows byte-by-byte comparisons and digital signatures. It reduced the freedom that XML serializers have and instead generates a more constrained XML representation. The main restrictions regard the placement of namespace declarations, the ordering of attributes, and ignorable whitespace.</source>
          <target state="translated">정규화는 바이트 단위 비교 및 ​​디지털 서명을 허용하는 방식으로 XML 출력을 정규화하는 방법입니다. 이는 XML 시리얼 라이저가 갖는 자유를 줄이고 대신보다 제한된 XML 표현을 생성합니다. 주요 제한 사항은 네임 스페이스 선언의 배치, 속성의 순서 및 무시할 수있는 공백입니다.</target>
        </trans-unit>
        <trans-unit id="8da51ecda68389485ea70d137e71241be83c9f80" translate="yes" xml:space="preserve">
          <source>Capture an exception for later rendering. &lt;em&gt;limit&lt;/em&gt;, &lt;em&gt;lookup_lines&lt;/em&gt; and &lt;em&gt;capture_locals&lt;/em&gt; are as for the &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">나중에 렌더링하기 위해 예외를 캡처합니다. &lt;em&gt;limit&lt;/em&gt; , &lt;em&gt;lookup_lines&lt;/em&gt; 및 &lt;em&gt;capture_locals&lt;/em&gt; 는 &lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; &lt;/a&gt; 클래스와 같습니다.</target>
        </trans-unit>
        <trans-unit id="423688cc4e45ae73b2f610db15f924e06ee4e746" translate="yes" xml:space="preserve">
          <source>Capture enough detail about a non-file-based module to permit getting its lines later via &lt;a href=&quot;#linecache.getline&quot;&gt;&lt;code&gt;getline()&lt;/code&gt;&lt;/a&gt; even if &lt;em&gt;module_globals&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; in the later call. This avoids doing I/O until a line is actually needed, without having to carry the module globals around indefinitely.</source>
          <target state="translated">나중에 호출 할 때 &lt;em&gt;module_globals&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 이더라도 &lt;a href=&quot;#linecache.getline&quot;&gt; &lt;code&gt;getline()&lt;/code&gt; &lt;/a&gt; 통해 나중에 라인을 &lt;em&gt;가져올&lt;/em&gt; 수 있도록 파일 기반이 아닌 모듈에 대한 충분한 세부 사항을 캡처 하십시오. 이렇게하면 모듈 전역을 무기한으로 운반 할 필요없이 실제로 회선이 필요할 때까지 I / O를 수행하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="73ebe9a50fd6ca2d3324832fad422470c3355c9f" translate="yes" xml:space="preserve">
          <source>Captured stderr from the child process. A bytes sequence, or a string if &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; was called with an encoding, errors, or text=True. &lt;code&gt;None&lt;/code&gt; if stderr was not captured.</source>
          <target state="translated">하위 프로세스에서 stderr를 캡처했습니다. 인코딩, 오류 또는 text = True와 함께 &lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 을 호출 한 경우 바이트 시퀀스 또는 문자열 입니다. stderr이 캡처되지 않은 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4547994cede5f7462e17ce8f34c7d4e9e18a3c76" translate="yes" xml:space="preserve">
          <source>Captured stdout from the child process. A bytes sequence, or a string if &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; was called with an encoding, errors, or text=True. &lt;code&gt;None&lt;/code&gt; if stdout was not captured.</source>
          <target state="translated">하위 프로세스에서 stdout을 캡처했습니다. 인코딩, 오류 또는 text = True와 함께 &lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 을 호출 한 경우 바이트 시퀀스 또는 문자열 입니다. stdout이 캡처되지 않은 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4ff11a778be6ea97e8e96bf8ca5e46cb1aad1e" translate="yes" xml:space="preserve">
          <source>Care must be taken when using objects returned by &lt;a href=&quot;#gc.get_referrers&quot;&gt;&lt;code&gt;get_referrers()&lt;/code&gt;&lt;/a&gt; because some of them could still be under construction and hence in a temporarily invalid state. Avoid using &lt;a href=&quot;#gc.get_referrers&quot;&gt;&lt;code&gt;get_referrers()&lt;/code&gt;&lt;/a&gt; for any purpose other than debugging.</source>
          <target state="translated">&lt;a href=&quot;#gc.get_referrers&quot;&gt; &lt;code&gt;get_referrers()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 오브젝트를 사용할 때는주의해야합니다. 그 중 일부는 여전히 구성 중이므로 일시적으로 유효하지 않은 상태이기 때문입니다. 디버깅 이외의 목적으로 &lt;a href=&quot;#gc.get_referrers&quot;&gt; &lt;code&gt;get_referrers()&lt;/code&gt; &lt;/a&gt; 를 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="8093a543e2b7a34f5543b74befc660a7463f92a1" translate="yes" xml:space="preserve">
          <source>Caring about security</source>
          <target state="translated">보안 관리</target>
        </trans-unit>
        <trans-unit id="159392d633c2cffbc6a491daf2bedda249a234bf" translate="yes" xml:space="preserve">
          <source>Carriage Return</source>
          <target state="translated">캐리지 리턴</target>
        </trans-unit>
        <trans-unit id="19df561b969d0d35d2780bcfc8bbd19894e60070" translate="yes" xml:space="preserve">
          <source>Carriage Return + Line Feed</source>
          <target state="translated">캐리지 리턴 + 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="df10067f5a8780a3c7f1ce6b060b8d78df100b22" translate="yes" xml:space="preserve">
          <source>Carriage return</source>
          <target state="translated">캐리지 리턴</target>
        </trans-unit>
        <trans-unit id="6d154d3695a2abeb95c90dda3cfea6a363d6009b" translate="yes" xml:space="preserve">
          <source>Cartesian product of input iterables.</source>
          <target state="translated">입력 이터 러블의 데카르트 곱.</target>
        </trans-unit>
        <trans-unit id="147906f3d927007174415de828af6f9d64261b2a" translate="yes" xml:space="preserve">
          <source>Case of Enum Members</source>
          <target state="translated">Enum 멤버의 경우</target>
        </trans-unit>
        <trans-unit id="9a3f1fd2b6898c4c599e5bcaae645ca75232a29c" translate="yes" xml:space="preserve">
          <source>Cased characters are those with general category property being one of &amp;ldquo;Lu&amp;rdquo; (Letter, uppercase), &amp;ldquo;Ll&amp;rdquo; (Letter, lowercase), or &amp;ldquo;Lt&amp;rdquo; (Letter, titlecase).</source>
          <target state="translated">대소 문자 구분 문자는 일반 범주 속성이 &quot;Lu&quot;(Letter, 대문자), &quot;Ll&quot;(Letter, 소문자) 또는 &quot;Lt&quot;(Letter, Titlecase) 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="9a710c6a25471525747a94389b0048e0c220a994" translate="yes" xml:space="preserve">
          <source>Casefolding is similar to lowercasing but more aggressive because it is intended to remove all case distinctions in a string. For example, the German lowercase letter &lt;code&gt;'&amp;szlig;'&lt;/code&gt; is equivalent to &lt;code&gt;&quot;ss&quot;&lt;/code&gt;. Since it is already lowercase, &lt;a href=&quot;#str.lower&quot;&gt;&lt;code&gt;lower()&lt;/code&gt;&lt;/a&gt; would do nothing to &lt;code&gt;'&amp;szlig;'&lt;/code&gt;; &lt;a href=&quot;#str.casefold&quot;&gt;&lt;code&gt;casefold()&lt;/code&gt;&lt;/a&gt; converts it to &lt;code&gt;&quot;ss&quot;&lt;/code&gt;.</source>
          <target state="translated">케이스 폴딩은 소문자와 비슷하지만 문자열에서 모든 케이스 구별을 제거하기 때문에 더 공격적입니다. 예를 들어 독일어 소문자 &lt;code&gt;'&amp;szlig;'&lt;/code&gt; 는 &lt;code&gt;&quot;ss&quot;&lt;/code&gt; 와 같습니다 . 이미 소문자이므로 &lt;a href=&quot;#str.lower&quot;&gt; &lt;code&gt;lower()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;'&amp;szlig;'&lt;/code&gt; 에 아무런 영향을 미치지 않습니다 . &lt;a href=&quot;#str.casefold&quot;&gt; &lt;code&gt;casefold()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&quot;ss&quot;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="efd1ea7c76bf8f999ebd22019e740747b2a456ca" translate="yes" xml:space="preserve">
          <source>Cast 1D/bytes to 3D/ints to 1D/signed char:</source>
          <target state="translated">1D / 바이트를 3D로 / INT를 1D / 서명 된 문자로 캐스트 :</target>
        </trans-unit>
        <trans-unit id="b51303cb67a2430f894ecc8bed9ea9c39292982e" translate="yes" xml:space="preserve">
          <source>Cast 1D/long to 1D/unsigned bytes:</source>
          <target state="translated">1D / long을 1D / unsigned bytes로 캐스트 :</target>
        </trans-unit>
        <trans-unit id="da1e76d74512fdad1c361ba7d43170cf78f598c5" translate="yes" xml:space="preserve">
          <source>Cast 1D/unsigned bytes to 1D/char:</source>
          <target state="translated">1D / 부호없는 바이트를 1D / char로 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="244de116d5421438d25f58d35698849ba6bc478b" translate="yes" xml:space="preserve">
          <source>Cast 1D/unsigned long to 2D/unsigned long:</source>
          <target state="translated">1D / 부호없는 long을 2D / 부호없는 long으로 캐스트 :</target>
        </trans-unit>
        <trans-unit id="44236da31f0c60b653269335136ce18d60761f8a" translate="yes" xml:space="preserve">
          <source>Cast a memoryview to a new format or shape. &lt;em&gt;shape&lt;/em&gt; defaults to &lt;code&gt;[byte_length//new_itemsize]&lt;/code&gt;, which means that the result view will be one-dimensional. The return value is a new memoryview, but the buffer itself is not copied. Supported casts are 1D -&amp;gt; C-&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt; and C-contiguous -&amp;gt; 1D.</source>
          <target state="translated">메모 리뷰를 새로운 형식이나 모양으로 캐스트하십시오. &lt;em&gt;shape의&lt;/em&gt; 기본값은 &lt;code&gt;[byte_length//new_itemsize]&lt;/code&gt; 이며 결과보기는 1 차원입니다. 리턴 값은 새로운 메모 리뷰이지만 버퍼 자체는 복사되지 않습니다. 지원되는 캐스트는 1D-&amp;gt; C- &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-contiguous&quot;&gt;연속&lt;/a&gt; 및 C- 연속-&amp;gt; 1D입니다.</target>
        </trans-unit>
        <trans-unit id="4b03df18dac8d7168f3f138e5ad3a74a633bd8cf" translate="yes" xml:space="preserve">
          <source>Cast a memoryview to a new format or shape. &lt;em&gt;shape&lt;/em&gt; defaults to &lt;code&gt;[byte_length//new_itemsize]&lt;/code&gt;, which means that the result view will be one-dimensional. The return value is a new memoryview, but the buffer itself is not copied. Supported casts are 1D -&amp;gt; C-&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-contiguous&quot;&gt;contiguous&lt;/a&gt; and C-contiguous -&amp;gt; 1D.</source>
          <target state="translated">메모리 뷰를 새로운 형식이나 모양으로 캐스팅합니다. &lt;em&gt;shape&lt;/em&gt; 기본값은 &lt;code&gt;[byte_length//new_itemsize]&lt;/code&gt; 이며 결과보기가 1 차원이됨을 의미합니다. 반환 값은 새로운 메모리 뷰이지만 버퍼 자체는 복사되지 않습니다. 지원되는 캐스트는 1D-&amp;gt; C- &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-contiguous&quot;&gt;연속&lt;/a&gt; 및 C- 연속-&amp;gt; 1D입니다.</target>
        </trans-unit>
        <trans-unit id="3f805f9f5e840b86ca6f017c55f16e1c067e2770" translate="yes" xml:space="preserve">
          <source>Cast a value to a type.</source>
          <target state="translated">값을 유형으로 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="26fcb69697dc56f3f70bef9888d5cb1a7998908d" translate="yes" xml:space="preserve">
          <source>Catching exceptions from &lt;code&gt;__enter__&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;__enter__&lt;/code&gt; 메서드 에서 예외 잡기</target>
        </trans-unit>
        <trans-unit id="d705192e4aa89da0d6179e32948da3e1643a4de1" translate="yes" xml:space="preserve">
          <source>Categories of information that can be queried on some transports:</source>
          <target state="translated">일부 전송에서 쿼리 할 수있는 정보 범주 :</target>
        </trans-unit>
        <trans-unit id="a3c686e711e4720f99b4562bb3dbaae7ab658cf2" translate="yes" xml:space="preserve">
          <source>Category</source>
          <target state="translated">Category</target>
        </trans-unit>
        <trans-unit id="dbdfb8cc570311bf0ba41bc653280f8a44570d62" translate="yes" xml:space="preserve">
          <source>Cause requests to go through a proxy. If &lt;em&gt;proxies&lt;/em&gt; is given, it must be a dictionary mapping protocol names to URLs of proxies. The default is to read the list of proxies from the environment variables &lt;code&gt;&amp;lt;protocol&amp;gt;_proxy&lt;/code&gt;. If no proxy environment variables are set, then in a Windows environment proxy settings are obtained from the registry&amp;rsquo;s Internet Settings section, and in a Mac OS X environment proxy information is retrieved from the OS X System Configuration Framework.</source>
          <target state="translated">요청이 프록시를 통과하게합니다. &lt;em&gt;프록시&lt;/em&gt; 가 제공 되면 &lt;em&gt;프록시&lt;/em&gt; 이름을 프록시의 URL에 사전 맵핑 프로토콜이어야합니다. 기본값은 환경 변수 &lt;code&gt;&amp;lt;protocol&amp;gt;_proxy&lt;/code&gt; 에서 프록시 목록을 읽는 것 입니다. 프록시 환경 변수가 설정되어 있지 않으면 Windows 환경에서 레지스트리의 인터넷 설정 섹션에서 프록시 설정을 가져오고 Mac OS X 환경에서 프록시 정보는 OS X 시스템 구성 프레임 워크에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="d597e2852df34bd068582e30fe2fba007c79c0c6" translate="yes" xml:space="preserve">
          <source>Cause the byte string &lt;em&gt;char&lt;/em&gt; to be &amp;ldquo;pushed back&amp;rdquo; into the console buffer; it will be the next character read by &lt;a href=&quot;#msvcrt.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#msvcrt.getche&quot;&gt;&lt;code&gt;getche()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">바이트 문자열 &lt;em&gt;char&lt;/em&gt; 이 콘솔 버퍼로&amp;ldquo;밀려 나오게&amp;rdquo;합니다. &lt;a href=&quot;#msvcrt.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#msvcrt.getche&quot;&gt; &lt;code&gt;getche()&lt;/code&gt; &lt;/a&gt; 읽는 다음 문자가됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6a4d81194f5c12bc93ce83e8500eacd138a85fc" translate="yes" xml:space="preserve">
          <source>Cause the process to sleep until a signal is received; the appropriate handler will then be called. Returns nothing.</source>
          <target state="translated">신호가 수신 될 때까지 프로세스를 휴면 상태로 만듭니다. 그런 다음 적절한 핸들러가 호출됩니다. 아무것도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4238ac8dfef54eb6b06e859f54e8c262bf5d1dd0" translate="yes" xml:space="preserve">
          <source>Causes the resulting RE to match 0 or 1 repetitions of the preceding RE. &lt;code&gt;ab?&lt;/code&gt; will match either &amp;lsquo;a&amp;rsquo; or &amp;lsquo;ab&amp;rsquo;.</source>
          <target state="translated">결과 RE가 이전 RE의 0 또는 1 회 반복과 일치하게합니다. &lt;code&gt;ab?&lt;/code&gt; 'a'또는 'ab'과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c6521ef76f5eec86f28e2c3b8bb2db9feebf89b5" translate="yes" xml:space="preserve">
          <source>Causes the resulting RE to match 0 or more repetitions of the preceding RE, as many repetitions as are possible. &lt;code&gt;ab*&lt;/code&gt; will match &amp;lsquo;a&amp;rsquo;, &amp;lsquo;ab&amp;rsquo;, or &amp;lsquo;a&amp;rsquo; followed by any number of &amp;lsquo;b&amp;rsquo;s.</source>
          <target state="translated">결과 RE가 가능한 한 많은 반복을 선행 RE의 0 번 이상의 반복과 일치시킵니다. &lt;code&gt;ab*&lt;/code&gt; 는 'a', 'ab'또는 'a'다음에 임의 개수의 'b'와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d769faa26c26a2d62b38a56f95c30aaa3f2dcc80" translate="yes" xml:space="preserve">
          <source>Causes the resulting RE to match 1 or more repetitions of the preceding RE. &lt;code&gt;ab+&lt;/code&gt; will match &amp;lsquo;a&amp;rsquo; followed by any non-zero number of &amp;lsquo;b&amp;rsquo;s; it will not match just &amp;lsquo;a&amp;rsquo;.</source>
          <target state="translated">결과 RE가 이전 RE의 1 회 이상의 반복과 일치하게합니다. &lt;code&gt;ab+&lt;/code&gt; 는 'a'다음에 0이 아닌 숫자 'b'와 일치합니다. 단지 'a'와 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9554ee678b921d16d58debb386c31c95e42bd638" translate="yes" xml:space="preserve">
          <source>Causes the resulting RE to match from &lt;em&gt;m&lt;/em&gt; to &lt;em&gt;n&lt;/em&gt; repetitions of the preceding RE, attempting to match as &lt;em&gt;few&lt;/em&gt; repetitions as possible. This is the non-greedy version of the previous qualifier. For example, on the 6-character string &lt;code&gt;'aaaaaa'&lt;/code&gt;, &lt;code&gt;a{3,5}&lt;/code&gt; will match 5 &lt;code&gt;'a'&lt;/code&gt; characters, while &lt;code&gt;a{3,5}?&lt;/code&gt; will only match 3 characters.</source>
          <target state="translated">결과 RE가 선행 RE의 &lt;em&gt;m&lt;/em&gt; 에서 &lt;em&gt;n&lt;/em&gt; 반복까지 일치하도록 하여 가능한 한 &lt;em&gt;적은&lt;/em&gt; 반복 을 일치 시키려고 합니다. 이전 한정자의 욕심없는 버전입니다. 예를 들어, 6 자 문자열 &lt;code&gt;'aaaaaa'&lt;/code&gt; 에서 &lt;code&gt;a{3,5}&lt;/code&gt; 는 5 개의 &lt;code&gt;'a'&lt;/code&gt; 문자 와 일치 하지만 &lt;code&gt;a{3,5}?&lt;/code&gt; 3 자만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="795e6286cf43bfb04649942f83459b1c010275e9" translate="yes" xml:space="preserve">
          <source>Causes the resulting RE to match from &lt;em&gt;m&lt;/em&gt; to &lt;em&gt;n&lt;/em&gt; repetitions of the preceding RE, attempting to match as many repetitions as possible. For example, &lt;code&gt;a{3,5}&lt;/code&gt; will match from 3 to 5 &lt;code&gt;'a'&lt;/code&gt; characters. Omitting &lt;em&gt;m&lt;/em&gt; specifies a lower bound of zero, and omitting &lt;em&gt;n&lt;/em&gt; specifies an infinite upper bound. As an example, &lt;code&gt;a{4,}b&lt;/code&gt; will match &lt;code&gt;'aaaab'&lt;/code&gt; or a thousand &lt;code&gt;'a'&lt;/code&gt; characters followed by a &lt;code&gt;'b'&lt;/code&gt;, but not &lt;code&gt;'aaab'&lt;/code&gt;. The comma may not be omitted or the modifier would be confused with the previously described form.</source>
          <target state="translated">결과 RE가 선행 RE의 &lt;em&gt;m&lt;/em&gt; 에서 &lt;em&gt;n&lt;/em&gt; 반복까지 일치하도록하여 가능한 한 많은 반복을 일치 시키려고합니다. 예를 들어, &lt;code&gt;a{3,5}&lt;/code&gt; 는 3 ~ 5 개의 &lt;code&gt;'a'&lt;/code&gt; 문자 와 일치 합니다. &lt;em&gt;m을&lt;/em&gt; 생략 하면 하한을 0으로 지정하고, &lt;em&gt;n을&lt;/em&gt; 생략 하면 무한한 상한을 지정합니다. 예를 들어, &lt;code&gt;a{4,}b&lt;/code&gt; 는 &lt;code&gt;'aaaab'&lt;/code&gt; 또는 &lt;code&gt;'a'&lt;/code&gt; 문자 다음에 &lt;code&gt;'b'&lt;/code&gt; 가 있지만 &lt;code&gt;'aaab'&lt;/code&gt; 와는 일치 하지 않습니다 . 쉼표를 생략하거나 수정자를 이전에 설명한 형식과 혼동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="4fd03d227374b3a76ae481c4b37cb9b5ca6de82e" translate="yes" xml:space="preserve">
          <source>Caution: Because a &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; is built on top of a Python dictionary, it must not change size when iterating over it. This can be difficult to ensure for a &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; because actions performed by the program during iteration may cause items in the dictionary to vanish &amp;ldquo;by magic&amp;rdquo; (as a side effect of garbage collection).</source>
          <target state="translated">주의 : &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 는 Python 사전을 기반으로 하기 때문에 반복 할 때 크기를 변경해서는 안됩니다. 반복하는 동안 프로그램이 수행하는 조치로 인해 사전의 항목이 &quot;마법에 의해&quot;(가비지 콜렉션의 부작용으로) 사라질 수 있으므로 &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 를 보장하기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98b54726ce69023dd84eefe17eb5ba78df2551c7" translate="yes" xml:space="preserve">
          <source>Caution: Because a &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; is built on top of a Python dictionary, it must not change size when iterating over it. This can be difficult to ensure for a &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; because actions performed by the program during iteration may cause items in the dictionary to vanish &amp;ldquo;by magic&amp;rdquo; (as a side effect of garbage collection).</source>
          <target state="translated">주의 : &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; &lt;/a&gt; 는 Python 사전을 기반으로하므로 반복 할 때 크기를 변경해서는 안됩니다. 반복 중에 프로그램이 수행하는 조치로 인해 사전의 항목이 &quot;마법에 의해&quot;(가비지 콜렉션의 부작용으로) 사라질 수 있으므로 &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; &lt;/a&gt; 를 보장하기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28d65d06b54089952f2efa68f4246e1755f3ffb2" translate="yes" xml:space="preserve">
          <source>Caution: Elements with no subelements will test as &lt;code&gt;False&lt;/code&gt;. This behavior will change in future versions. Use specific &lt;code&gt;len(elem)&lt;/code&gt; or &lt;code&gt;elem is
None&lt;/code&gt; test instead.</source>
          <target state="translated">주의 : 하위 요소가없는 요소는 &lt;code&gt;False&lt;/code&gt; 로 테스트됩니다 . 이 동작은 이후 버전에서 변경 될 것입니다. 대신 특정 &lt;code&gt;len(elem)&lt;/code&gt; 또는 &lt;code&gt;elem is None&lt;/code&gt; 테스트를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4f3877b3dced4906601a483e6cc1de8779bebdad" translate="yes" xml:space="preserve">
          <source>Caution: The result of a &lt;a href=&quot;#difflib.SequenceMatcher.ratio&quot;&gt;&lt;code&gt;ratio()&lt;/code&gt;&lt;/a&gt; call may depend on the order of the arguments. For instance:</source>
          <target state="translated">주의 : &lt;a href=&quot;#difflib.SequenceMatcher.ratio&quot;&gt; &lt;code&gt;ratio()&lt;/code&gt; &lt;/a&gt; 호출 의 결과 는 인수의 순서에 따라 달라질 수 있습니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="63266e7267914b07fbf4b164dcc1d84189c65a4c" translate="yes" xml:space="preserve">
          <source>Celtic languages</source>
          <target state="translated">셀틱 언어</target>
        </trans-unit>
        <trans-unit id="28b768f0ecfec65d6b6c9d702997b9cead7dfc46" translate="yes" xml:space="preserve">
          <source>Center of keypad</source>
          <target state="translated">키패드 중심</target>
        </trans-unit>
        <trans-unit id="171300a9ac9c7382753e5909b51b4d79fa63ad59" translate="yes" xml:space="preserve">
          <source>Central and Eastern Europe</source>
          <target state="translated">중부 및 동유럽</target>
        </trans-unit>
        <trans-unit id="3ce5a81ce01e50b47239445ead0f60c140cd8a07" translate="yes" xml:space="preserve">
          <source>Certain character sets must be encoded with quoted-printable or base64 when used in email headers or bodies. Certain character sets must be converted outright, and are not allowed in email.</source>
          <target state="translated">이메일 헤더 또는 본문에 사용되는 경우 특정 문자 세트는 따옴표로 묶거나 인쇄 가능한 base64로 인코딩해야합니다. 특정 문자 세트는 완전히 변환해야하며 이메일에서는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="593eb89de1ddc271f51c530034469e3085c08768" translate="yes" xml:space="preserve">
          <source>Certain message labels, called &lt;em&gt;attributes&lt;/em&gt;, are defined by convention to have special meanings. The attributes are as follows:</source>
          <target state="translated">&lt;em&gt;attributes&lt;/em&gt; 라는 특정 메시지 레이블 은 특별한 의미를 갖도록 규칙에 의해 정의됩니다. 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="96f371107c946e6bdcff1f60dfcae4d5e63ab940" translate="yes" xml:space="preserve">
          <source>Certificate chains</source>
          <target state="translated">인증서 체인</target>
        </trans-unit>
        <trans-unit id="af04086d676f475531671840b684b45828ef8454" translate="yes" xml:space="preserve">
          <source>Certificate handling</source>
          <target state="translated">인증서 처리</target>
        </trans-unit>
        <trans-unit id="b3e4eb01f159b35b99f9fe62dc4d20f8175f1cc1" translate="yes" xml:space="preserve">
          <source>Certificates</source>
          <target state="translated">Certificates</target>
        </trans-unit>
        <trans-unit id="b31fec0e4996c70c92887575b6c842980880122b" translate="yes" xml:space="preserve">
          <source>Certificates in a capath directory aren&amp;rsquo;t loaded unless they have been used at least once.</source>
          <target state="translated">capath 디렉토리의 인증서는 한 번 이상 사용하지 않으면로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f44bf6e31a60aac9e6c0f3359a8b6bc414ff4210" translate="yes" xml:space="preserve">
          <source>Certificates in general are part of a public-key / private-key system. In this system, each &lt;em&gt;principal&lt;/em&gt;, (which may be a machine, or a person, or an organization) is assigned a unique two-part encryption key. One part of the key is public, and is called the &lt;em&gt;public key&lt;/em&gt;; the other part is kept secret, and is called the &lt;em&gt;private key&lt;/em&gt;. The two parts are related, in that if you encrypt a message with one of the parts, you can decrypt it with the other part, and &lt;strong&gt;only&lt;/strong&gt; with the other part.</source>
          <target state="translated">인증서는 일반적으로 공개 키 / 개인 키 시스템의 일부입니다. 이 시스템에서 각 보안 &lt;em&gt;주체&lt;/em&gt; (시스템, 개인 또는 조직 일 수 있음)에는 고유 한 두 부분으로 된 암호화 키가 할당됩니다. 키의 한 부분은 공개이며 &lt;em&gt;공개 키&lt;/em&gt; 라고합니다 . 다른 부분은 비밀로 유지되며 &lt;em&gt;개인 키&lt;/em&gt; 라고합니다 . 두 부분은 서로 관련되어 있습니다. 한 부분으로 메시지를 암호화하면 다른 부분으로 &lt;strong&gt;만&lt;/strong&gt; 해독 할 수 있고 다른 부분으로 &lt;strong&gt;만&lt;/strong&gt; 해독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44b29218c73d6ea8a23ce3115ef57628d41c7a15" translate="yes" xml:space="preserve">
          <source>ChainMap objects</source>
          <target state="translated">ChainMap 객체</target>
        </trans-unit>
        <trans-unit id="ad8fbb20f7c181ff05b9615555748be64e9a304f" translate="yes" xml:space="preserve">
          <source>Change a registered file object&amp;rsquo;s monitored events or attached data.</source>
          <target state="translated">등록 된 파일 객체의 모니터링 된 이벤트 또는 첨부 된 데이터를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="720fee3a19af7ced65149e4a22e579762b9389a4" translate="yes" xml:space="preserve">
          <source>Change or query the current global domain. If &lt;em&gt;domain&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then the current global domain is returned, otherwise the global domain is set to &lt;em&gt;domain&lt;/em&gt;, which is returned.</source>
          <target state="translated">현재 글로벌 도메인을 변경하거나 쿼리하십시오. 경우 &lt;em&gt;도메인이&lt;/em&gt; 없는 &lt;code&gt;None&lt;/code&gt; , 현재 글로벌 도메인 그렇지 않으면 글로벌 도메인으로 설정되어, 반환되는 &lt;em&gt;도메인&lt;/em&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e3a6429f7e6579fa0309e08bdc5f6c3693b41f95" translate="yes" xml:space="preserve">
          <source>Change owner &lt;em&gt;user&lt;/em&gt; and/or &lt;em&gt;group&lt;/em&gt; of the given &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">소유자 변경의 &lt;em&gt;사용자&lt;/em&gt; 및 / 또는 &lt;em&gt;그룹&lt;/em&gt; 주어진의 &lt;em&gt;경로&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09d8ae26d89f2e248ecad1dd21602fb29686a880" translate="yes" xml:space="preserve">
          <source>Change system call restart behaviour: if &lt;em&gt;flag&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, system calls will be restarted when interrupted by signal &lt;em&gt;signalnum&lt;/em&gt;, otherwise system calls will be interrupted. Returns nothing.</source>
          <target state="translated">시스템 호출 재시작 동작 변경 : &lt;em&gt;flag&lt;/em&gt; 가 &lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; 이면 signal &lt;em&gt;signalnum에&lt;/em&gt; 의해 인터럽트 될 때 시스템 호출이 재시작 &lt;em&gt;되고&lt;/em&gt; , 그렇지 않으면 시스템 호출이 중단됩니다. 아무것도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ca2b292f4c9a625946f55ff3c28a36f19ed515f" translate="yes" xml:space="preserve">
          <source>Change the current working directory to &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">현재 작업 디렉토리를 &lt;em&gt;path로&lt;/em&gt; 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf70a04b333f0d38b491b7a16cb497d498023d97" translate="yes" xml:space="preserve">
          <source>Change the current working directory to the directory represented by the file descriptor &lt;em&gt;fd&lt;/em&gt;. The descriptor must refer to an opened directory, not an open file. As of Python 3.3, this is equivalent to &lt;code&gt;os.chdir(fd)&lt;/code&gt;.</source>
          <target state="translated">현재 작업 디렉토리를 파일 디스크립터 &lt;em&gt;fd로&lt;/em&gt; 표시되는 디렉토리로 변경하십시오 . 디스크립터는 열린 파일이 아니라 열린 디렉토리를 참조해야합니다. Python 3.3 &lt;code&gt;os.chdir(fd)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8145354c4ed04786c9a7472ae8fc8c08f7017a36" translate="yes" xml:space="preserve">
          <source>Change the definition of a color, taking the number of the color to be changed followed by three RGB values (for the amounts of red, green, and blue components). The value of &lt;em&gt;color_number&lt;/em&gt; must be between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;COLORS&lt;/code&gt;. Each of &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, must be a value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1000&lt;/code&gt;. When &lt;a href=&quot;#curses.init_color&quot;&gt;&lt;code&gt;init_color()&lt;/code&gt;&lt;/a&gt; is used, all occurrences of that color on the screen immediately change to the new definition. This function is a no-op on most terminals; it is active only if &lt;a href=&quot;#curses.can_change_color&quot;&gt;&lt;code&gt;can_change_color()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">색상의 정의를 변경하고 변경할 색상 수와 3 개의 RGB 값 (빨강, 녹색 및 파랑 성분의 양)을 따릅니다. &lt;em&gt;color_number&lt;/em&gt; 값은 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;COLORS&lt;/code&gt; 사이 여야합니다 . 각 &lt;em&gt;r&lt;/em&gt; , &lt;em&gt;g&lt;/em&gt; , &lt;em&gt;b&lt;/em&gt; 는 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;1000&lt;/code&gt; 사이의 값이어야합니다 . 때 &lt;a href=&quot;#curses.init_color&quot;&gt; &lt;code&gt;init_color()&lt;/code&gt; &lt;/a&gt; 사용하는 경우, 화면에 해당 색상의 모든 항목은 즉시 새로운 정의로 변경합니다. 이 기능은 대부분의 터미널에서 작동하지 않습니다. &lt;a href=&quot;#curses.can_change_color&quot;&gt; &lt;code&gt;can_change_color()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 를 반환하는 경우에만 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f821e2b635ee244bfcd104b3ba7e7f0b6bd58dd6" translate="yes" xml:space="preserve">
          <source>Change the definition of a color-pair. It takes three arguments: the number of the color-pair to be changed, the foreground color number, and the background color number. The value of &lt;em&gt;pair_number&lt;/em&gt; must be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;COLOR_PAIRS - 1&lt;/code&gt; (the &lt;code&gt;0&lt;/code&gt; color pair is wired to white on black and cannot be changed). The value of &lt;em&gt;fg&lt;/em&gt; and &lt;em&gt;bg&lt;/em&gt; arguments must be between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;COLORS&lt;/code&gt;. If the color-pair was previously initialized, the screen is refreshed and all occurrences of that color-pair are changed to the new definition.</source>
          <target state="translated">색상 쌍의 정의를 변경하십시오. 변경할 색 쌍 수, 전경색 번호 및 배경색 번호의 세 가지 인수가 필요합니다. &lt;em&gt;pair_number&lt;/em&gt; 의 값은 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;COLOR_PAIRS - 1&lt;/code&gt; 사이 여야합니다 ( &lt;code&gt;0&lt;/code&gt; 개의 색상 쌍은 검은 색으로 흰색으로 연결되어 있으며 변경할 수 없음). &lt;em&gt;fg&lt;/em&gt; 및 &lt;em&gt;bg&lt;/em&gt; 인수 의 값은 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;COLORS&lt;/code&gt; 사이 여야합니다 . 색상 쌍이 이전에 초기화 된 경우 화면이 새로 고쳐지고 해당 색상 쌍의 모든 항목이 새 정의로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="3b5d5e0b32ce8c95402eb88a7a7b5dccea7a3ea9" translate="yes" xml:space="preserve">
          <source>Change the encoding used to return translated messages.</source>
          <target state="translated">번역 된 메시지를 반환하는 데 사용되는 인코딩을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="d813d2b0c8655445b9bdee3148830836fbd7c1ba" translate="yes" xml:space="preserve">
          <source>Change the file mode and permissions, like &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;os#os.chmod&quot;&gt; &lt;code&gt;os.chmod()&lt;/code&gt; &lt;/a&gt; 와 같은 파일 모드 및 권한을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="68384080fd64e6315b2be960052dc10ac16429df" translate="yes" xml:space="preserve">
          <source>Change the mode of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;mode&lt;/em&gt;. &lt;em&gt;mode&lt;/em&gt; may take one of the following values (as defined in the &lt;a href=&quot;stat#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module) or bitwise ORed combinations of them:</source>
          <target state="translated">&lt;em&gt;경로&lt;/em&gt; 모드를 숫자 &lt;em&gt;모드 &lt;/em&gt;&lt;em&gt;로&lt;/em&gt; 변경하십시오 . &lt;em&gt;mode&lt;/em&gt; 는 다음 값 중 하나 ( &lt;a href=&quot;stat#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt; 모듈에 정의 된대로 ) 또는 비트 단위 OR 조합을 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af5c714b67933437a9225d675e7562cfea02ccfe" translate="yes" xml:space="preserve">
          <source>Change the mode of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;mode&lt;/em&gt;. If path is a symlink, this affects the symlink rather than the target. See the docs for &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt; for possible values of &lt;em&gt;mode&lt;/em&gt;. As of Python 3.3, this is equivalent to &lt;code&gt;os.chmod(path, mode, follow_symlinks=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;경로&lt;/em&gt; 모드를 숫자 &lt;em&gt;모드 &lt;/em&gt;&lt;em&gt;로&lt;/em&gt; 변경하십시오 . 경로가 심볼릭 링크 인 경우 대상이 아닌 심볼릭 링크에 영향을줍니다. &lt;em&gt;mode의&lt;/em&gt; 가능한 값은 &lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 . Python 3.3 &lt;code&gt;os.chmod(path, mode, follow_symlinks=False)&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e7345c82847185620cc38ebe06addd033602411" translate="yes" xml:space="preserve">
          <source>Change the mode of file descriptor &lt;em&gt;fd&lt;/em&gt; to cbreak. If &lt;em&gt;when&lt;/em&gt; is omitted, it defaults to &lt;code&gt;termios.TCSAFLUSH&lt;/code&gt;, and is passed to &lt;a href=&quot;termios#termios.tcsetattr&quot;&gt;&lt;code&gt;termios.tcsetattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 의 모드 를 cbreak로 변경하십시오 . 경우 &lt;em&gt;경우&lt;/em&gt; 에, 디폴트 생략 &lt;code&gt;termios.TCSAFLUSH&lt;/code&gt; 하고에 전달 &lt;a href=&quot;termios#termios.tcsetattr&quot;&gt; &lt;code&gt;termios.tcsetattr()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5db458a46551c5ecac55206b3bbf06290c21a2" translate="yes" xml:space="preserve">
          <source>Change the mode of the file descriptor &lt;em&gt;fd&lt;/em&gt; to raw. If &lt;em&gt;when&lt;/em&gt; is omitted, it defaults to &lt;code&gt;termios.TCSAFLUSH&lt;/code&gt;, and is passed to &lt;a href=&quot;termios#termios.tcsetattr&quot;&gt;&lt;code&gt;termios.tcsetattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 의 모드 를 raw로 변경하십시오 . 경우 &lt;em&gt;경우&lt;/em&gt; 에, 디폴트 생략 &lt;code&gt;termios.TCSAFLUSH&lt;/code&gt; 하고에 전달 &lt;a href=&quot;termios#termios.tcsetattr&quot;&gt; &lt;code&gt;termios.tcsetattr()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df529e83cc35551c127351a817d58aacc06e2dc6" translate="yes" xml:space="preserve">
          <source>Change the mode of the file given by &lt;em&gt;fd&lt;/em&gt; to the numeric &lt;em&gt;mode&lt;/em&gt;. See the docs for &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt; for possible values of &lt;em&gt;mode&lt;/em&gt;. As of Python 3.3, this is equivalent to &lt;code&gt;os.chmod(fd, mode)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt; 가 제공 한 파일의 모드를 숫자 &lt;em&gt;모드로 변경하십시오&lt;/em&gt; . &lt;em&gt;mode의&lt;/em&gt; 가능한 값은 &lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 . Python 3.3 &lt;code&gt;os.chmod(fd, mode)&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c65ef473b406e7a78a2438b2eac9ebbd360c5139" translate="yes" xml:space="preserve">
          <source>Change the owner and group id of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;uid&lt;/em&gt; and &lt;em&gt;gid&lt;/em&gt;. This function will not follow symbolic links. As of Python 3.3, this is equivalent to &lt;code&gt;os.chown(path, uid, gid, follow_symlinks=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;경로&lt;/em&gt; 의 소유자 및 그룹 ID를 숫자 &lt;em&gt;uid&lt;/em&gt; 및 &lt;em&gt;gid로 변경하십시오&lt;/em&gt; . 이 기능은 심볼릭 링크를 따르지 않습니다. Python 3.3 &lt;code&gt;os.chown(path, uid, gid, follow_symlinks=False)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53894f22457d3df831a1c43a42294a0ef3b2fb59" translate="yes" xml:space="preserve">
          <source>Change the owner and group id of &lt;em&gt;path&lt;/em&gt; to the numeric &lt;em&gt;uid&lt;/em&gt; and &lt;em&gt;gid&lt;/em&gt;. To leave one of the ids unchanged, set it to -1.</source>
          <target state="translated">&lt;em&gt;경로&lt;/em&gt; 의 소유자 및 그룹 ID를 숫자 &lt;em&gt;uid&lt;/em&gt; 및 &lt;em&gt;gid로 변경하십시오&lt;/em&gt; . ID 중 하나를 변경하지 않으려면 -1로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3aaf122e7b3c8a3c54989cd0e607442620ec1bc9" translate="yes" xml:space="preserve">
          <source>Change the owner and group id of the file given by &lt;em&gt;fd&lt;/em&gt; to the numeric &lt;em&gt;uid&lt;/em&gt; and &lt;em&gt;gid&lt;/em&gt;. To leave one of the ids unchanged, set it to -1. See &lt;a href=&quot;#os.chown&quot;&gt;&lt;code&gt;chown()&lt;/code&gt;&lt;/a&gt;. As of Python 3.3, this is equivalent to &lt;code&gt;os.chown(fd, uid,
gid)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt; 가 제공 한 파일의 소유자 및 그룹 ID를 숫자 &lt;em&gt;uid&lt;/em&gt; 및 &lt;em&gt;gid로 변경하십시오&lt;/em&gt; . ID 중 하나를 변경하지 않으려면 -1로 설정하십시오. &lt;a href=&quot;#os.chown&quot;&gt; &lt;code&gt;chown()&lt;/code&gt; &lt;/a&gt; 참조하십시오 . Python 3.3 &lt;code&gt;os.chown(fd, uid, gid)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f96743593cb1166cb78e769c4514c65ee913d6fa" translate="yes" xml:space="preserve">
          <source>Change the root directory of the current process to &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">현재 프로세스의 루트 디렉토리를 &lt;em&gt;path로&lt;/em&gt; 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dbec226ba1ea5a114d1a674323a81c92420418e" translate="yes" xml:space="preserve">
          <source>Change the stream position to the given &lt;em&gt;offset&lt;/em&gt;. Behaviour depends on the &lt;em&gt;whence&lt;/em&gt; parameter. The default value for &lt;em&gt;whence&lt;/em&gt; is &lt;code&gt;SEEK_SET&lt;/code&gt;.</source>
          <target state="translated">스트림 위치를 지정된 &lt;em&gt;오프셋으로&lt;/em&gt; 변경하십시오 . 동작은 &lt;em&gt;whence&lt;/em&gt; 매개 변수 에 따라 다릅니다 . &lt;em&gt;whence&lt;/em&gt; 의 기본값 은 &lt;code&gt;SEEK_SET&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c17be4282df288dbb931de7338a89692f2dc6186" translate="yes" xml:space="preserve">
          <source>Change the stream position to the given byte &lt;em&gt;offset&lt;/em&gt;. &lt;em&gt;offset&lt;/em&gt; is interpreted relative to the position indicated by &lt;em&gt;whence&lt;/em&gt;. The default value for &lt;em&gt;whence&lt;/em&gt; is &lt;code&gt;SEEK_SET&lt;/code&gt;. Values for &lt;em&gt;whence&lt;/em&gt; are:</source>
          <target state="translated">스트림 위치를 지정된 바이트 &lt;em&gt;오프셋으로&lt;/em&gt; 변경합니다 . &lt;em&gt;오프셋&lt;/em&gt; 은 &lt;em&gt;whence로&lt;/em&gt; 표시된 위치를 기준으로 해석됩니다 . &lt;em&gt;whence&lt;/em&gt; 의 기본값 은 &lt;code&gt;SEEK_SET&lt;/code&gt; 입니다. &lt;em&gt;whence&lt;/em&gt; 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e2b45f97c3816b692c7c6ebac63371564ba94541" translate="yes" xml:space="preserve">
          <source>Change the window associated with the panel to the window &lt;em&gt;win&lt;/em&gt;.</source>
          <target state="translated">패널과 연관된 창을 창 &lt;em&gt;win으로&lt;/em&gt; 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b9a4f44f13c67b53c0c39dc7ad38c6964f33b26" translate="yes" xml:space="preserve">
          <source>Change what&amp;rsquo;s displayed on the screen to reflect the current contents of the line buffer. This calls &lt;code&gt;rl_redisplay()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">라인 버퍼의 현재 내용을 반영하도록 화면에 표시되는 내용을 변경하십시오. 기본 라이브러리에서 &lt;code&gt;rl_redisplay()&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="c732229eb2217bd97c6bd80a55ad6f97228dff7a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.0: Always returns an unsigned value. To generate the same numeric value across all Python versions and platforms, use &lt;code&gt;adler32(data) &amp;amp; 0xffffffff&lt;/code&gt;.</source>
          <target state="translated">버전 3.0으로 변경 : 항상 부호없는 값을 반환합니다. 모든 Python 버전 및 플랫폼에서 동일한 숫자 값을 생성하려면 &lt;code&gt;adler32(data) &amp;amp; 0xffffffff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af9cfb7d30fb25ce18cb797168a3c1e9efef7530" translate="yes" xml:space="preserve">
          <source>Changed in version 3.0: Always returns an unsigned value. To generate the same numeric value across all Python versions and platforms, use &lt;code&gt;crc32(data) &amp;amp; 0xffffffff&lt;/code&gt;.</source>
          <target state="translated">버전 3.0으로 변경 : 항상 부호없는 값을 반환합니다. 모든 Python 버전 및 플랫폼에서 동일한 숫자 값을 생성하려면 &lt;code&gt;crc32(data) &amp;amp; 0xffffffff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6ac82e23a0e683e2884b82b1078851acda1268d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.0: The default protocol is 3.</source>
          <target state="translated">버전 3.0으로 변경 : 기본 프로토콜은 3입니다.</target>
        </trans-unit>
        <trans-unit id="537cdf8485e4b74a48de09b94e218b3fbaa6a3a0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.0: The result is always unsigned. To generate the same numeric value across all Python versions and platforms, use &lt;code&gt;crc32(data) &amp;amp; 0xffffffff&lt;/code&gt;.</source>
          <target state="translated">버전 3.0으로 변경 : 결과는 항상 부호가 없습니다. 모든 Python 버전 및 플랫폼에서 동일한 숫자 값을 생성하려면 &lt;code&gt;crc32(data) &amp;amp; 0xffffffff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca60d28ccc4a7e66ce5bc6b399015fa8167505ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: &lt;code&gt;%f&lt;/code&gt; conversions for numbers whose absolute value is over 1e50 are no longer replaced by &lt;code&gt;%g&lt;/code&gt; conversions.</source>
          <target state="translated">버전 3.1에서 변경 : 절대 값이 1e50을 초과하는 숫자에 대한 &lt;code&gt;%f&lt;/code&gt; 변환은 더 이상 &lt;code&gt;%g&lt;/code&gt; 변환으로 대체되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1173409e497ba0f89793fec2308d3254cabb00d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: &lt;em&gt;parse_constant&lt;/em&gt; doesn&amp;rsquo;t get called on &amp;lsquo;null&amp;rsquo;, &amp;lsquo;true&amp;rsquo;, &amp;lsquo;false&amp;rsquo; anymore.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;parse_constant&lt;/em&gt; 가 더 이상 'null', 'true', 'false'에서 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98f8f18853a8b4317612d7c8d8eb2cc038e404e8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: &lt;em&gt;processName&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;processName&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="519e56ce3db5b6a8b5e1c5a832ab37d71bc7122a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added &lt;em&gt;step&lt;/em&gt; argument and allowed non-integer arguments.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;단계&lt;/em&gt; 인수를 추가 하고 정수가 아닌 인수를 허용했습니다.</target>
        </trans-unit>
        <trans-unit id="18771a790afbfdddac37407e4815957052f7e408" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added ability to execute packages by looking for a &lt;code&gt;__main__&lt;/code&gt; submodule.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;code&gt;__main__&lt;/code&gt; 하위 모듈 을 찾아 패키지를 실행하는 기능이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="142d8fecd4e04596e1fae7705ec9ee9d81d4a35a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added dictionary interface.</source>
          <target state="translated">버전 3.1으로 변경 : 사전 인터페이스가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c90ad976d4a85ce730b40e8e0eeb478580b3770c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added named component attributes.</source>
          <target state="translated">버전 3.1으로 변경 : 명명 된 구성 요소 속성이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9931f13212eb404b313097ca72242e0f021f85a3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added support for &lt;em&gt;object_pairs_hook&lt;/em&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;object_pairs_hook&lt;/em&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="da787e41d3ea18a184ea8dc78391eea722e041f8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added support for &lt;em&gt;rename&lt;/em&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;rename&lt;/em&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="76189e970a56ec69292d860a438d7884fd0dcf9b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added support for keyword arguments.</source>
          <target state="translated">버전 3.1으로 변경 : 키워드 인수에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="ab7a9e70170f3b6797e31ed22603f88f6edc0f30" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added support for named tuples.</source>
          <target state="translated">버전 3.1으로 변경 : 명명 된 튜플에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="06093f314fffd9ea0f6ab2afb1c9ccc74a0b1bb5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added the &lt;code&gt;','&lt;/code&gt; option (see also &lt;a href=&quot;https://www.python.org/dev/peps/pep-0378&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 378&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">버전 3.1으로 변경 : &lt;code&gt;','&lt;/code&gt; 옵션 추가 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-0378&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 378&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ae999bfe2033504c97db0921b7b1bb40df869bcc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added the ability to use &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; as a context manager.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt; 를 컨텍스트 관리자로 사용하는 기능이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e98cbd97169623f07073269d171b8ded92167da8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added the automatic calling of type-specific equality function.</source>
          <target state="translated">버전 3.1으로 변경 : 유형별 동등 함수의 자동 호출을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="a479c7ad525f3b08fd169b58a9cb8db33d5f6243" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Added the optional flags argument.</source>
          <target state="translated">버전 3.1으로 변경 : 선택적 flags 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="554b1b2304c0d90d9b2b907e595d0a78f8d4455d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: In 3.0, some of the integer formats wrapped out-of-range values and raised &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#struct.error&quot;&gt;&lt;code&gt;struct.error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : 3.0에서 일부 정수 형식은 범위를 벗어난 값을 래핑하고 &lt;a href=&quot;#struct.error&quot;&gt; &lt;code&gt;struct.error&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt; 을 발생 시켰습니다 .</target>
        </trans-unit>
        <trans-unit id="7e3417ca9b87c5d6447c9359dc309580cc761cf6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: In 3.1 this was changed to add the test name to the short description even in the presence of a docstring. This caused compatibility issues with unittest extensions and adding the test name was moved to the &lt;a href=&quot;#unittest.TextTestResult&quot;&gt;&lt;code&gt;TextTestResult&lt;/code&gt;&lt;/a&gt; in Python 3.2.</source>
          <target state="translated">버전 3.1으로 변경 : 3.1에서는 문서 문자열이있는 경우에도 간단한 설명에 테스트 이름을 추가하도록 변경되었습니다. 이로 인해 unittest 확장과의 호환성 문제가 발생했으며 테스트 이름 추가 가 Python 3.2 의 &lt;a href=&quot;#unittest.TextTestResult&quot;&gt; &lt;code&gt;TextTestResult&lt;/code&gt; &lt;/a&gt; 로 이동되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cccb32a71e28853fea0261c4d14121efb0ea169b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: On some systems, conversion using the file system encoding may fail. In this case, Python uses the &lt;a href=&quot;codecs#surrogateescape&quot;&gt;surrogateescape encoding error handler&lt;/a&gt;, which means that undecodable bytes are replaced by a Unicode character U+DCxx on decoding, and these are again translated to the original byte on encoding.</source>
          <target state="translated">버전 3.1으로 변경 : 일부 시스템에서 파일 시스템 인코딩을 사용한 변환이 실패 할 수 있습니다. 이 경우 Python은 &lt;a href=&quot;codecs#surrogateescape&quot;&gt;surrogateescape encoding error handler&lt;/a&gt; 를 사용합니다. 즉 디코딩 할 수없는 바이트는 디코딩시 유니 코드 문자 U + DCxx로 바뀌고 인코딩시 원래 바이트로 다시 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="299eca6035e1b8fc838c645ab32a9527778a8d59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Previously, some of the integer formats wrapped out-of-range values and raised &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#struct.error&quot;&gt;&lt;code&gt;struct.error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.1에서 변경 : 이전에는 일부 정수 형식이 범위를 벗어난 값을 래핑하고 &lt;a href=&quot;#struct.error&quot;&gt; &lt;code&gt;struct.error&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt; 을 발생 시켰습니다 .</target>
        </trans-unit>
        <trans-unit id="2bd78f8dbabc55380af14f3be182d4724bfe458f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Previously, the method always returned &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : 이전에는 메소드가 항상 &lt;code&gt;None&lt;/code&gt; 을 리턴했습니다 .</target>
        </trans-unit>
        <trans-unit id="f7c3b3eb4eb12d37f5604d4759015f3dd08a8783" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Returns an &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; instead of a regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : 일반 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e00980a47ec6bb0dc861a5371f679640ca93ca22" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for file and file-like objects.</source>
          <target state="translated">버전 3.1으로 변경 : 파일 및 파일과 유사한 객체 지원.</target>
        </trans-unit>
        <trans-unit id="8675c984e7a97790076cdc19f4bbc5d455db908c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for keyword arguments added.</source>
          <target state="translated">버전 3.1으로 변경 : 키워드 인수 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="bfd57caaab5e32d8413393d8341c30bdbd6beb46" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added, along with the &lt;em&gt;mtime&lt;/em&gt; constructor argument and &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 &lt;em&gt;mtime&lt;/em&gt; 생성자 인수 및 &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt; 속성 과 함께 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="68cbcfa945c3ab476d29bf74cebbf18903fca840" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1038c2b9780ab821d8cf55ef0212bbc60a9f41c6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added, along with the &lt;em&gt;mtime&lt;/em&gt; constructor argument and &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">버전 3.1에서 변경 : &lt;em&gt;mtime&lt;/em&gt; 생성자 인수 및 &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt; 속성 과 함께 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ee70f3317db87d625887dbae9a08fa8ac7e1ee5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.1에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="16ec7d22d5a19e1a65d9de3f92edc97be9b828a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: The &lt;em&gt;exit&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;em&gt;exit&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="85c9028d3e54d7442ac2c89adce91dccb81cc825" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: The Python GIL is released to allow other threads to run while hash updates on data larger than 2047 bytes is taking place when using hash algorithms supplied by OpenSSL.</source>
          <target state="translated">버전 3.1으로 변경 : OpenSSL에서 제공하는 해시 알고리즘을 사용할 때 2047 바이트보다 큰 데이터에서 해시 업데이트가 수행되는 동안 다른 스레드를 실행할 수 있도록 Python GIL이 릴리스되었습니다.</target>
        </trans-unit>
        <trans-unit id="8e57d384dfe6f8503f30b9002a3f912771e2280f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: The default &lt;em&gt;dict_type&lt;/em&gt; is &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : 기본 &lt;em&gt;dict_type&lt;/em&gt; 은 &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="166fdb71d51607a94eaefa24aa94facef19086e4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.1: The positional argument specifiers can be omitted for &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;, so &lt;code&gt;'{} {}'.format(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;'{0} {1}'.format(a, b)&lt;/code&gt;.</source>
          <target state="translated">버전 3.1으로 변경 : &lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt; 의 경우 위치 인수 지정자를 생략 할 수 있으므로 &lt;code&gt;'{} {}'.format(a, b)&lt;/code&gt; 는 &lt;code&gt;'{0} {1}'.format(a, b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af94eafce482ef601e340833d27776b69c7d138c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2.1: (See: &lt;a href=&quot;https://bugs.python.org/issue12168&quot;&gt;bpo-12168&lt;/a&gt;.) In earlier versions, the message sent to the syslog daemons was always terminated with a NUL byte, because early versions of these daemons expected a NUL terminated message - even though it&amp;rsquo;s not in the relevant specification (&lt;a href=&quot;https://tools.ietf.org/html/rfc5424.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5424&lt;/strong&gt;&lt;/a&gt;). More recent versions of these daemons don&amp;rsquo;t expect the NUL byte but strip it off if it&amp;rsquo;s there, and even more recent daemons (which adhere more closely to RFC 5424) pass the NUL byte on as part of the message.</source>
          <target state="translated">버전 3.2.1에서 변경됨 : ( &lt;a href=&quot;https://bugs.python.org/issue12168&quot;&gt;bpo-12168&lt;/a&gt; 참조 ) 이전 버전에서는 syslog 데몬으로 전송 된 메시지가 항상 NUL 바이트로 종료되었습니다.이 데몬의 초기 버전은 NUL 종료 메시지를 예상했기 때문입니다. 관련 사양 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc5424.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5424&lt;/strong&gt;&lt;/a&gt; )에서. 이 데몬의 최신 버전은 NUL 바이트를 예상하지 않지만, 존재하는 경우이를 제거하고 RFC 5424에 더 가까운 최신 데몬은 메시지의 일부로 NUL 바이트를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0afed93b0d4eeb509a03bbaeb5f09426e0cb4f5e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; now iterates on &lt;em&gt;fp&lt;/em&gt; instead of calling &lt;code&gt;fp.readline()&lt;/code&gt;.</source>
          <target state="translated">버전 3.2에서 변경 : &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt; 현재에 반복 처리 &lt;em&gt;FP&lt;/em&gt; 를 호출하는 대신 &lt;code&gt;fp.readline()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc88da30808c82c1293400c16a27a8c2cc56c0bc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt;&lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt;&lt;/a&gt; now also ignores any information relating to the module containing the exception under test.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt; &lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt; 은&lt;/a&gt; 이제 테스트중인 예외를 포함하는 모듈과 관련된 정보도 무시합니다.</target>
        </trans-unit>
        <trans-unit id="5749096281f219a4f7f01001ef8349b74685730f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#random.randrange&quot;&gt;&lt;code&gt;randrange()&lt;/code&gt;&lt;/a&gt; is more sophisticated about producing equally distributed values. Formerly it used a style like &lt;code&gt;int(random()*n)&lt;/code&gt; which could produce slightly uneven distributions.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#random.randrange&quot;&gt; &lt;code&gt;randrange()&lt;/code&gt; &lt;/a&gt; 는 동일하게 분포 된 값을 생성하는 데있어보다 정교합니다. 이전에는 &lt;code&gt;int(random()*n)&lt;/code&gt; 과 같은 스타일을 사용 하여 약간 고르지 않은 분포를 만들 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="e1a03e3a0b540c3e0799128fcb0c81c27ad48daf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; result cannot be &lt;code&gt;None&lt;/code&gt; anymore.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;getfilesystemencoding()&lt;/code&gt; &lt;/a&gt; 결과는 더 이상 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a1fe0ed8d5f6cf5c86138332c63f8876ecd77f3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; can be instantiated successfully without providing a &lt;em&gt;methodName&lt;/em&gt;. This makes it easier to experiment with &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; from the interactive interpreter.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;methodName&lt;/em&gt; 을 제공하지 않고 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 를 인스턴스화 할 수 있습니다 . 이를 통해 대화식 인터프리터에서 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 를 쉽게 실험 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11e46f9e4172df72572f9d6819077089c579a690" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#unittest.TestCase.assertAlmostEqual&quot;&gt;&lt;code&gt;assertAlmostEqual()&lt;/code&gt;&lt;/a&gt; automatically considers almost equal objects that compare equal. &lt;a href=&quot;#unittest.TestCase.assertNotAlmostEqual&quot;&gt;&lt;code&gt;assertNotAlmostEqual()&lt;/code&gt;&lt;/a&gt; automatically fails if the objects compare equal. Added the &lt;em&gt;delta&lt;/em&gt; keyword argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#unittest.TestCase.assertAlmostEqual&quot;&gt; &lt;code&gt;assertAlmostEqual()&lt;/code&gt; &lt;/a&gt; 자동으로 거의 동일한 객체를 동일하게 고려합니다. 객체가 동일하게 비교되면 &lt;a href=&quot;#unittest.TestCase.assertNotAlmostEqual&quot;&gt; &lt;code&gt;assertNotAlmostEqual()&lt;/code&gt; &lt;/a&gt; 자동으로 실패합니다. &lt;em&gt;델타&lt;/em&gt; 키워드 인수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="1440ccb5c6457c67fd2eaef179f83349fe55195f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;#unittest.TestCase.assertMultiLineEqual&quot;&gt;&lt;code&gt;assertMultiLineEqual()&lt;/code&gt;&lt;/a&gt; added as the default type equality function for comparing strings.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#unittest.TestCase.assertMultiLineEqual&quot;&gt; &lt;code&gt;assertMultiLineEqual()&lt;/code&gt; &lt;/a&gt; 은 문자열 비교를위한 기본 유형 동등 함수로 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b18478e566722631d21aa1bace3810cb3eb58b72" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is now ignored by default in addition to &lt;a href=&quot;exceptions#PendingDeprecationWarning&quot;&gt;&lt;code&gt;PendingDeprecationWarning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;exceptions#PendingDeprecationWarning&quot;&gt; &lt;code&gt;PendingDeprecationWarning&lt;/code&gt; &lt;/a&gt; 외에도 &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt; 이 기본적으로 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b513252ea03b9cf35084f00ed4e34bbd1cc20e9c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;code&gt;.pdbrc&lt;/code&gt; can now contain commands that continue debugging, such as &lt;a href=&quot;#pdbcommand-continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;. Previously, these commands had no effect.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;.pdbrc&lt;/code&gt; 는 &lt;a href=&quot;#pdbcommand-continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; 와 같이 디버깅을 계속하는 명령을 포함 할 수 있습니다 . 이전에는 이러한 명령이 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="aa43f0f89cbecd00094a85fb4045a869f7281905" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;code&gt;\v&lt;/code&gt; and &lt;code&gt;\f&lt;/code&gt; added to list of line boundaries.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;\v&lt;/code&gt; 및 &lt;code&gt;\f&lt;/code&gt; 경계선 목록에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b7e75fb78cd26379d954e12ef5234de7a52c6b62" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;setdefault()&lt;/code&gt; are now available in all database modules.</source>
          <target state="translated">버전 3.2으로 변경 : 이제 모든 데이터베이스 모듈에서 &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;setdefault()&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a75d96e8964b95835e6a5e529fe78ac0f23d39de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;allow_no_value&lt;/em&gt;, &lt;em&gt;delimiters&lt;/em&gt;, &lt;em&gt;comment_prefixes&lt;/em&gt;, &lt;em&gt;strict&lt;/em&gt;, &lt;em&gt;empty_lines_in_values&lt;/em&gt;, &lt;em&gt;default_section&lt;/em&gt; and &lt;em&gt;interpolation&lt;/em&gt; were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;allow_no_value&lt;/em&gt; , &lt;em&gt;delimiters&lt;/em&gt; , &lt;em&gt;comment_prefixes&lt;/em&gt; , &lt;em&gt;strict&lt;/em&gt; , &lt;em&gt;empty_lines_in_values&lt;/em&gt; , &lt;em&gt;default_section&lt;/em&gt; 및 &lt;em&gt;interpolation&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e594a4ee16262a6e7522482f009a5ec444f09452" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;cafile&lt;/em&gt; and &lt;em&gt;capath&lt;/em&gt; were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;cafile&lt;/em&gt; 및 &lt;em&gt;capath&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f2ec6e2fdb50647cf66302dc95dbff5617b96801" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;check_hostname&lt;/em&gt; were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;context&lt;/em&gt; 및 &lt;em&gt;check_hostname&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b5a0d479fa6487dad7c15e153649c02b213272aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;context&lt;/em&gt; parameter added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;컨텍스트&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="2f8b1f0a75e484a9e3da3c653455fa8d265d59eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;group_pattern&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;group_pattern&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d177c10f7ae05b83a95f60175c6c95933ca55d16" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;msg&lt;/em&gt; may be a byte string.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;msg&lt;/em&gt; 는 바이트 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29d8c0e6b5361a5b642287515553e6c3c651c181" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;query&lt;/em&gt; supports bytes and string objects.</source>
          <target state="translated">버전 3.2에서 변경 : &lt;em&gt;쿼리&lt;/em&gt; 는 바이트와 문자열 객체를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c18b19d6a3a1ad22a8592b55eaed6c35d7116886" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;rest&lt;/em&gt; parameter added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;나머지&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e4d4044434743f26e635d36dedee7e5da7432978" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;restore_signals&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;restore_signals&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e7ceed06f63f522a2c6c89c405613683d83c004b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;socktype&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;socktype&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="74c3419027915a376860800bf38f30017740fe7c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;source_address&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;source_address&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="7df77fa9670053bba47d3f6222e1b1217fbd68d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;source_address&lt;/em&gt;, &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;check_hostname&lt;/em&gt; were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;source_address&lt;/em&gt; , &lt;em&gt;context&lt;/em&gt; 및 &lt;em&gt;check_hostname&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="865e3b43949c5287decaadb22d5be7bc611fbd8a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;start_new_session&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;start_new_session&lt;/em&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="89bf6cd3c4a8cc51ae68f7bf85567b3d7fd617de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: &lt;em&gt;usenetrc&lt;/em&gt; is now &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;usenetrc&lt;/em&gt; 는 기본적으로 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8a24a8f5bf7489afacc0ce16caa9c66433cf199" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: A non-integral input to this method is rounded to the nearest integer.</source>
          <target state="translated">버전 3.2으로 변경 :이 방법에 대한 비 적분 입력은 가장 가까운 정수로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="f8001c2d7dff5693f988f217294c8b124912fb37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Accept only bytestring or bytearray objects as input.</source>
          <target state="translated">버전 3.2으로 변경 : bytestring 또는 bytearray 객체 만 입력으로 수락하십시오.</target>
        </trans-unit>
        <trans-unit id="c4c69f6f5a6a3551d477ed0665bf350dad82cdbd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Add &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;인코딩&lt;/em&gt; 및 &lt;em&gt;오류&lt;/em&gt; 매개 변수 추가</target>
        </trans-unit>
        <trans-unit id="95146296986280f06bd7941d66bbacce0695fe8e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added &lt;code&gt;__cached__&lt;/code&gt; global variable (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;__cached__&lt;/code&gt; 전역 변수가 추가되었습니다 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="07fae133f75001a2a732672901971c94a1f4061a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added &lt;code&gt;quiet&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-q&quot;&gt;&lt;code&gt;-q&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">추가 : 버전 3.2에서 변경 &lt;code&gt;quiet&lt;/code&gt; 새로운에 대한 속성 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-q&quot;&gt; &lt;code&gt;-q&lt;/code&gt; &lt;/a&gt; 플래그.</target>
        </trans-unit>
        <trans-unit id="e891d266d025d037367a1c6091e876672d260ae6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added &lt;code&gt;quiet&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-q&quot;&gt;&lt;code&gt;-q&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">버전 3.2에서 변경 : 새로운 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-q&quot;&gt; &lt;code&gt;-q&lt;/code&gt; &lt;/a&gt; 플래그에 대한 &lt;code&gt;quiet&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7c9512db24aec78fc6542ff47cf959a2f83c0d7a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added IPv6 URL parsing capabilities.</source>
          <target state="translated">버전 3.2으로 변경 : IPv6 URL 구문 분석 기능이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="79094348357033d5e927f23c98241c49d111ed87" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added Windows support.</source>
          <target state="translated">버전 3.2으로 변경 : Windows 지원 추가.</target>
        </trans-unit>
        <trans-unit id="480acc287e38687f3ef5650c7eccb818a3e21c2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added context manager support.</source>
          <target state="translated">버전 3.2으로 변경 : 컨텍스트 관리자 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="fc9ba3341a1b901857e585af842c2b08364073a0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added handling for the &lt;code&gt;'unknown-8bit'&lt;/code&gt; charset.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;'unknown-8bit'&lt;/code&gt; 문자 집합에 대한 처리가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="549354cce4521a9c4bf7a7245a5483449a24ad2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added support for &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;'-'&lt;/code&gt; 에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9180901b20f11c3133e92f9dacae7935f2711dcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added support for Windows 6.0 (Vista) symbolic links.</source>
          <target state="translated">버전 3.2으로 변경 : Windows 6.0 (Vista) 심볼릭 링크 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5c366fa5ade51e32fea64adcc3b1f6f1e81df0c9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added support for Windows.</source>
          <target state="translated">버전 3.2으로 변경 : Windows 지원 추가.</target>
        </trans-unit>
        <trans-unit id="469d75436829af56018ceef670537dd9044a9872" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added support for re-encoding &lt;code&gt;8bit&lt;/code&gt; message bodies, and the &lt;em&gt;linesep&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;8bit&lt;/code&gt; 메시지 본문 을 다시 인코딩 하고 &lt;em&gt;linesep&lt;/em&gt; 인수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5dca06c6c2149e6f07668eb8f164761284614298" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added support for thread.lock, threading.Lock, and code objects.</source>
          <target state="translated">버전 3.2으로 변경 : thread.lock, threading.Lock 및 코드 객체에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4bd1166778c87aaab7fde797e17d4fb99046f320" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;code&gt;-b&lt;/code&gt; option.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;-b&lt;/code&gt; 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7a1c01f7c9ee395a389a87156c2f80a73fe112fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;-b&lt;/code&gt; and &lt;code&gt;-h&lt;/code&gt; options.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;-i&lt;/code&gt; , &lt;code&gt;-b&lt;/code&gt; 및 &lt;code&gt;-h&lt;/code&gt; 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="45a9131a48eacb60df6688ff99f9470b1394bf10" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;code&gt;exception&lt;/code&gt; attribute.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;exception&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2b3a01e20bc80c50227b9a340b5f4656bee1bb29" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;code&gt;warnings&lt;/code&gt; argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;warnings&lt;/code&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="81442b4926b1035ffeaccc10c8f658f3d59c4232" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;copy_function&lt;/em&gt; argument to be able to provide a custom copy function. Added the &lt;em&gt;ignore_dangling_symlinks&lt;/em&gt; argument to silent dangling symlinks errors when &lt;em&gt;symlinks&lt;/em&gt; is false.</source>
          <target state="translated">버전 3.2으로 변경 : 사용자 정의 복사 기능을 제공 할 수 있도록 &lt;em&gt;copy_function&lt;/em&gt; 인수가 추가되었습니다 . &lt;em&gt;symlinks&lt;/em&gt; 가 false 일 때 자동 매달린 symlinks 오류에 &lt;em&gt;ignore_dangling_symlinks&lt;/em&gt; 인수를 추가했습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4221ca1f11c112f09e5e2b91693db1fc3776f479" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;domain&lt;/em&gt; keyword.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;도메인&lt;/em&gt; 키워드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ecae6c9f77c99d62ef971607bff6d981b4fe9e2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;filter&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;필터&lt;/em&gt; 매개 변수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="ff6c6c7f2630c352c419994e02f9ee70a0816de8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;keyencoding&lt;/em&gt; parameter; previously, keys were always encoded in UTF-8.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;keyencoding&lt;/em&gt; 매개 변수가 추가되었습니다 . 이전에는 키가 항상 UTF-8로 인코딩되었습니다.</target>
        </trans-unit>
        <trans-unit id="4f8bdf084b8f5707f13645513600a38d1043cf77" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;legacy&lt;/em&gt; and &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;레거시&lt;/em&gt; 및 &lt;em&gt;최적화&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67eded9a162e2bc2873e2f53db81e167b6cb466a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;linesep&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;linesep&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5678c03072e837c04923b69de2361551c6247532" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added the &lt;em&gt;set_attrs&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;set_attrs&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2d1c74ff4275f11d5b87247da14184db0e1932d8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Added use of the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; method for non-integers.</source>
          <target state="translated">버전 3.2에서 변경 : 정수가 아닌 사용자를위한 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt; 메서드 사용이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b2f72be3f9a65dff6184ff6e47c9ca263c92e02e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Allow giving an explicit line number.</source>
          <target state="translated">버전 3.2으로 변경 : 명시적인 줄 번호 부여.</target>
        </trans-unit>
        <trans-unit id="cf5de0213714792b3246865cac5703fb306b66cc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Allow strings for &lt;em&gt;indent&lt;/em&gt; in addition to integers.</source>
          <target state="translated">버전 3.2으로 변경 : 정수 외에 문자열에 &lt;em&gt;들여 쓰기&lt;/em&gt; 를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="1a7944d5ce300c7fefb8f768051ece16ac2d7ada" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Allow the use of named arguments.</source>
          <target state="translated">버전 3.2으로 변경 : 명명 된 인수 사용을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a5f5a817cb4deb5ccd507b97d769d0e714778cdb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Allowed use of Windows and Mac newlines. Also input in &lt;code&gt;'exec'&lt;/code&gt; mode does not have to end in a newline anymore. Added the &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2으로 변경 : Windows 및 Mac 줄 바꿈 사용 가능. 또한 &lt;code&gt;'exec'&lt;/code&gt; 모드의 입력은 더 이상 줄 바꿈으로 끝나지 않아도됩니다. &lt;em&gt;최적화&lt;/em&gt; 매개 변수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="3496fec5acfb82776a9952b9af315ad6b3ba0d9c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Also print the contents of the &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt; list at &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;, if it isn&amp;rsquo;t empty.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt; 목록 의 내용이 비어 있지 않으면 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;인터프리터 종료시&lt;/a&gt; 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="cc578ed2bffd9c2cfd0f58f6e56c216b08b0b2c8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Also print the contents of the &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt; list at &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;, if it isn&amp;rsquo;t empty.</source>
          <target state="translated">버전 3.2에서 변경 : 비어 있지 않은 경우 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;인터프리터 종료시 &lt;/a&gt;&lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt; 목록 의 내용도 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="082f1488f814f78ee7963e385f5470bfa4093668" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Arguments &lt;em&gt;raw&lt;/em&gt;, &lt;em&gt;vars&lt;/em&gt; and &lt;em&gt;fallback&lt;/em&gt; are keyword only to protect users from trying to use the third argument as the &lt;em&gt;fallback&lt;/em&gt; fallback (especially when using the mapping protocol).</source>
          <target state="translated">버전 3.2으로 변경 : 인수 &lt;em&gt;raw&lt;/em&gt; , &lt;em&gt;vars&lt;/em&gt; 및 &lt;em&gt;fallback&lt;/em&gt; 은 사용자가 세 번째 인수를 &lt;em&gt;폴백&lt;/em&gt; 폴백 (특히 매핑 프로토콜을 사용하는 경우)으로 사용하지 못하도록하는 키워드 입니다.</target>
        </trans-unit>
        <trans-unit id="d0d8cda96d1da943a01d314969b0a311aa34d00b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Audio device objects also support the context management protocol, i.e. they can be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">버전 3.2으로 변경 : 오디오 장치 객체는 컨텍스트 관리 프로토콜도 지원합니다. 즉, &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e36ae5477d3fec978b8b25e100badb1d52e1ad7d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Audio device objects also support the context management protocol, i.e. they can be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">버전 3.2에서 변경 : 오디오 장치 개체는 컨텍스트 관리 프로토콜도 지원합니다. 즉, &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d987439a5207e099ba743bd71e847e2de6871ed1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Before 3.2, the &lt;em&gt;errors&lt;/em&gt; argument was ignored; &lt;code&gt;'replace'&lt;/code&gt; was always used to encode, and &lt;code&gt;'ignore'&lt;/code&gt; to decode.</source>
          <target state="translated">버전 3.2으로 변경 : 3.2 이전에는 &lt;em&gt;errors&lt;/em&gt; 인수가 무시되었습니다. &lt;code&gt;'replace'&lt;/code&gt; 는 항상 인코딩하는 데 사용되었으며 &lt;code&gt;'ignore'&lt;/code&gt; 디코딩에는 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="bce632982ec84e304a30210dfa7bfcf510ecbe67" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Can be used as a context manager.</source>
          <target state="translated">버전 3.2으로 변경 : 컨텍스트 관리자로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06eaefb51ca841a37adf6964acaca16bb31f3436" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Changed default value of &lt;em&gt;cfile&lt;/em&gt; to be &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;-compliant. Previous default was &lt;em&gt;file&lt;/em&gt; + &lt;code&gt;'c'&lt;/code&gt; (&lt;code&gt;'o'&lt;/code&gt; if optimization was enabled). Also added the &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;cfile의&lt;/em&gt; 기본값 을 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; 호환으로 변경했습니다. 이전 기본값은 &lt;em&gt;파일&lt;/em&gt; + &lt;code&gt;'c'&lt;/code&gt; ( 최적화가 활성화 된 경우 &lt;code&gt;'o'&lt;/code&gt; )입니다. 또한 &lt;em&gt;최적화&lt;/em&gt; 매개 변수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="91bbf6bb7557737c6535e849923476920591ca35" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Changed to a named tuple and added &lt;em&gt;service_pack_minor&lt;/em&gt;, &lt;em&gt;service_pack_major&lt;/em&gt;, &lt;em&gt;suite_mask&lt;/em&gt;, and &lt;em&gt;product_type&lt;/em&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 명명 된 튜플로 변경되고 &lt;em&gt;service_pack_minor&lt;/em&gt; , &lt;em&gt;service_pack_major&lt;/em&gt; , &lt;em&gt;suite_mask&lt;/em&gt; 및 &lt;em&gt;product_type이&lt;/em&gt; 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a1b301b4e24498ff77a90a9f9ea22308220fcaf9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Floor division and true division of a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object by another &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object are now supported, as are remainder operations and the &lt;a href=&quot;functions#divmod&quot;&gt;&lt;code&gt;divmod()&lt;/code&gt;&lt;/a&gt; function. True division and multiplication of a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object by a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; object are now supported.</source>
          <target state="translated">3.2 버전 변경 : (A)의 층 분할 진정한 분할 &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; 의&lt;/a&gt; 다른 개체에 의해 &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; 의&lt;/a&gt; 목적은 이제 잉여 연산하고 있으며, 지원 &lt;a href=&quot;functions#divmod&quot;&gt; &lt;code&gt;divmod()&lt;/code&gt; &lt;/a&gt; 함수. &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 객체에 의한 &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 객체 의 진정한 나눗셈과 곱셈이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="48008acfcb7672e1030900f7a5fa36487b3652fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: HTTPS virtual hosts are now supported if possible (that is, if &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt; is true).</source>
          <target state="translated">버전 3.2으로 변경 : 가능한 경우 HTTPS 가상 호스트가 지원됩니다 (즉, &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt; 가 true 인 경우).</target>
        </trans-unit>
        <trans-unit id="6c4b663f1d51707ae57f011c2fc308f36f6354b4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Headers are stored in an internal buffer.</source>
          <target state="translated">버전 3.2으로 변경 : 헤더는 내부 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e5412a97c69b590b4082d1955349638a9a099943" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: If this list is non-empty at &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;, a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; is emitted, which is silent by default. If &lt;a href=&quot;#gc.DEBUG_UNCOLLECTABLE&quot;&gt;&lt;code&gt;DEBUG_UNCOLLECTABLE&lt;/code&gt;&lt;/a&gt; is set, in addition all uncollectable objects are printed.</source>
          <target state="translated">버전 3.2에서 변경 :이 목록에서 비어 있지 않은 경우 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-interpreter-shutdown&quot;&gt;통역 종료&lt;/a&gt; 하는 &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt; 기본적으로 침묵하는 방출된다. 경우 &lt;a href=&quot;#gc.DEBUG_UNCOLLECTABLE&quot;&gt; &lt;code&gt;DEBUG_UNCOLLECTABLE&lt;/code&gt; 가&lt;/a&gt; 설정되고, 또한 모든 회수 불가 개체가 인쇄되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a484b23baf977779daa6b1beac67326e321fa32f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: If this list is non-empty at &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;interpreter shutdown&lt;/a&gt;, a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; is emitted, which is silent by default. If &lt;a href=&quot;#gc.DEBUG_UNCOLLECTABLE&quot;&gt;&lt;code&gt;DEBUG_UNCOLLECTABLE&lt;/code&gt;&lt;/a&gt; is set, in addition all uncollectable objects are printed.</source>
          <target state="translated">버전 3.2에서 변경 :이 목록에서 비어 있지 않은 경우 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-interpreter-shutdown&quot;&gt;통역 종료&lt;/a&gt; 하는 &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt; 기본적으로 침묵하는 방출된다. 경우 &lt;a href=&quot;#gc.DEBUG_UNCOLLECTABLE&quot;&gt; &lt;code&gt;DEBUG_UNCOLLECTABLE&lt;/code&gt; 가&lt;/a&gt; 설정되고, 또한 모든 회수 불가 개체가 인쇄되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2187166ae4a844c4fbf025da86ec409be76e1ed9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Implement the Sequence ABC. Support slicing and negative indices. Test &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; objects for membership in constant time instead of iterating through all items.</source>
          <target state="translated">버전 3.2으로 변경 : 시퀀스 ABC를 구현하십시오. 슬라이싱 및 음수 인덱스를 지원합니다. 모든 항목을 반복하는 대신 일정한 시간에 멤버십에 대한 &lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 오브젝트를 테스트하십시오 .</target>
        </trans-unit>
        <trans-unit id="b01a529c0e91c8bdc96c7a0fe5f4d9282828ffd0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In earlier versions it was only possible to run individual test methods and not modules or classes.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전에서는 모듈이나 클래스가 아닌 개별 테스트 방법 만 실행할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="c679604d3f4a5f2ea2808564626ca197506a4747" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In earlier versions the &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; accessed tests directly rather than through iteration, so overriding &lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; wasn&amp;rsquo;t sufficient for providing tests.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전에서는 &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; 가&lt;/a&gt; 반복을 통하지 않고 직접 테스트에 액세스 &lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; 재정의 하는 것만으로는 테스트를 제공 할 수 없었습니다.</target>
        </trans-unit>
        <trans-unit id="2e06b4da7d821464da127e9dff4b0695d9f584a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In previous versions of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; behaviour matched &lt;code&gt;comment_prefixes=('#',';')&lt;/code&gt; and &lt;code&gt;inline_comment_prefixes=(';',)&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전의 &lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt; 동작에서 &lt;code&gt;comment_prefixes=('#',';')&lt;/code&gt; 및 &lt;code&gt;inline_comment_prefixes=(';',)&lt;/code&gt; 와 일치했습니다 .</target>
        </trans-unit>
        <trans-unit id="e65a3a5f905e29a5e1efa59f5a50b1b1070c7564" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In previous versions of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; behaviour matched &lt;code&gt;strict=False&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전의 &lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt; 동작에서 &lt;code&gt;strict=False&lt;/code&gt; 와 일치 합니다 .</target>
        </trans-unit>
        <trans-unit id="9a3903be0c9a2428fbbf132cc5dc080f206385f1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In previous versions, &lt;code&gt;strftime()&lt;/code&gt; method was restricted to years &amp;gt;= 1900.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전에서 &lt;code&gt;strftime()&lt;/code&gt; 메소드는 연도&amp;gt; = 1900으로 제한되었습니다.</target>
        </trans-unit>
        <trans-unit id="426cd001c712ea4d25033939aa93bca1d5e9396b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: In previous versions, keyword arguments were not allowed, and &lt;em&gt;ident&lt;/em&gt; was required. The default for &lt;em&gt;ident&lt;/em&gt; was dependent on the system libraries, and often was &lt;code&gt;python&lt;/code&gt; instead of the name of the Python program file.</source>
          <target state="translated">버전 3.2으로 변경 : 이전 버전에서는 키워드 인수가 허용되지 않았으며 &lt;em&gt;ident&lt;/em&gt; 가 필요했습니다. &lt;em&gt;ident&lt;/em&gt; 의 기본값 은 시스템 라이브러리에 따라 다르며 종종 Python 프로그램 파일 이름 대신 &lt;code&gt;python&lt;/code&gt; 이었습니다 .</target>
        </trans-unit>
        <trans-unit id="514d373f8db984e9d8a9cfa034390d4569e5d97e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Lock acquires can now be interrupted by signals on POSIX.</source>
          <target state="translated">버전 3.2으로 변경 : POSIX의 신호로 잠금 획득을 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="260a5484e295b0a8a411195c0e7ed247487ba6c9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Lock acquisition can now be interrupted by signals on POSIX if the underlying threading implementation supports it.</source>
          <target state="translated">버전 3.2으로 변경 : 기본 스레딩 구현이 지원하는 경우 POSIX의 신호로 잠금 획득을 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73a8834cb33b90ddc72bafe63ac0cd014f324f80" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Many of the following methods have been reworked and fixed, which makes them incompatible with their 3.1 counterparts.</source>
          <target state="translated">버전 3.2으로 변경 : 다음 방법 중 많은 부분이 재 작업 및 수정되어 3.1 버전과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80914831c8c876414979ed5a17b1ecac84bf0beb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Missing attributes no longer trigger an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 누락 된 속성이 더 이상 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 를&lt;/a&gt; 트리거하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5e906fa70135479b900c049ca5b2b7325d88b34b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Mixed-type comparisons between &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instances and other numeric types are now fully supported.</source>
          <target state="translated">버전 3.2으로 변경 : 이제 &lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 인스턴스와 다른 숫자 유형 간의 혼합 유형 비교가 완전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="344fc1c93edef2918356a487d8e7f6c10370bf98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Mixer objects also support the context management protocol.</source>
          <target state="translated">버전 3.2으로 변경 : Mixer 객체는 컨텍스트 관리 프로토콜도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4e63a2481f0bb3c20efd1c4c5707d3bc530d3f05" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Moved to the version 2 scheme which uses all of the bits in a string seed.</source>
          <target state="translated">버전 3.2으로 변경 : 문자열 시드의 모든 비트를 사용하는 버전 2 체계로 이동했습니다.</target>
        </trans-unit>
        <trans-unit id="bacb802d11c3941ef5337c0c0adcda227900c940" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: NetBSD and DragonFlyBSD support added.</source>
          <target state="translated">버전 3.2으로 변경 : NetBSD 및 DragonFlyBSD 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="da2c556fcda902ef2f7f11664ea16d758192c3c7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: New optional arguments &lt;em&gt;filters&lt;/em&gt; and &lt;em&gt;quiet&lt;/em&gt;.</source>
          <target state="translated">새로운 선택적 인수 : 버전 3.2에서 변경된 &lt;em&gt;필터&lt;/em&gt; 와 &lt;em&gt;조용&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d34719b4cb072e9694ccd8ad2aec00916b626eb2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Non-string section names raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 문자열이 아닌 섹션 이름은 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="24ba9b7cdb45eadf74a01028f28e107f5a9cd0f8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Now allows bytes and set literals.</source>
          <target state="translated">버전 3.2으로 변경 : 이제 바이트를 허용하고 리터럴을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aae05129cbe571df19f8e1cc5ca944abc4be0047" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: On Unix, keys and values are bytes.</source>
          <target state="translated">버전 3.2으로 변경 : Unix에서 키와 값은 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="7ca7ec51f96ec3c5b6eb9ee49b1e95699d985bed" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Previously, Windows registry settings were ignored.</source>
          <target state="translated">버전 3.2으로 변경 : 이전에는 Windows 레지스트리 설정이 무시되었습니다.</target>
        </trans-unit>
        <trans-unit id="2247d320b943c5cdf34c67d7e6f0cc0ba062c0a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Previously, the method always returned &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 이전에는 메소드가 항상 &lt;code&gt;None&lt;/code&gt; 을 리턴했습니다 .</target>
        </trans-unit>
        <trans-unit id="cf515833f315d71fbba59347219b1b477c0d1ca8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Query parameter supports bytes and string objects.</source>
          <target state="translated">버전 3.2으로 변경 : 쿼리 매개 변수는 바이트 및 문자열 개체를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b1b0c897b099fdbe4a1aa45f40bf3077a985c559" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Renamed to &lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt;&lt;code&gt;assertRaisesRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#unittest.TestCase.assertRaisesRegex&quot;&gt; &lt;code&gt;assertRaisesRegex()&lt;/code&gt; &lt;/a&gt; 로 이름이 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6e53faa183a9cfae37b8fbe8e1f41ee6693848a0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Result is a structured object rather than a simple 2-tuple.</source>
          <target state="translated">버전 3.2으로 변경 : 결과는 단순한 2- 튜플이 아닌 구조화 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="6697529eef880c398a98085c5cbf3c7b69126b0a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for &lt;code&gt;load_tests&lt;/code&gt; added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;load_tests&lt;/code&gt; 에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="280d81cdfc99b4afaff4e4cdee97b2ca85b2ad82" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for binary input was added.</source>
          <target state="translated">버전 3.2으로 변경 : 이진 입력 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="0a45ec181452190330caf36e750398207ca02ff4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol was added. Exiting the context manager is equivalent to calling &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜에 대한 지원 이 추가되었습니다. 컨텍스트 관리자를 종료하는 것은 &lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56e0e01f6cbf490e10cc0ba88a686bddb6323b08" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="19a6fb5832cef39bba5aa8f337decf97c83a4119" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol was added. Exiting the context manager is equivalent to calling &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜에 대한 지원 이 추가되었습니다. 컨텍스트 관리자를 종료하는 것은 &lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="568ba79c4c8fcc9a8376e3405066dad0492d3a6b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.2에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e36025a675382f360658d973b76e045c075fc0cc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Support for zero-padded and unseekable files was added.</source>
          <target state="translated">버전 3.2으로 변경 : 패딩이없고 검색 할 수없는 파일에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cf176d77cfe5e4c5ff5f74a843c9941676a11c8a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; constructor now accepts &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt; 생성자는 이제 &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt; 인스턴스를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="5c263bea410599d3c096b63bf68d6edbcd32ad5e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt;&lt;code&gt;isEnabledFor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt;&lt;code&gt;getEffectiveLevel()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.setLevel&quot;&gt;&lt;code&gt;setLevel()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.Logger.hasHandlers&quot;&gt;&lt;code&gt;hasHandlers()&lt;/code&gt;&lt;/a&gt; methods were added to &lt;a href=&quot;#logging.LoggerAdapter&quot;&gt;&lt;code&gt;LoggerAdapter&lt;/code&gt;&lt;/a&gt;. These methods delegate to the underlying logger.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt; &lt;code&gt;isEnabledFor()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt; &lt;code&gt;getEffectiveLevel()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#logging.Logger.setLevel&quot;&gt; &lt;code&gt;setLevel()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#logging.Logger.hasHandlers&quot;&gt; &lt;code&gt;hasHandlers()&lt;/code&gt; &lt;/a&gt; 메소드가 &lt;a href=&quot;#logging.LoggerAdapter&quot;&gt; &lt;code&gt;LoggerAdapter&lt;/code&gt; &lt;/a&gt; 에 추가되었습니다 . 이 메소드는 기본 로거에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="821c98de5aa5e1367c5a0912cdab39a3348de78a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;code&gt;ST_RDONLY&lt;/code&gt; and &lt;code&gt;ST_NOSUID&lt;/code&gt; constants were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;ST_RDONLY&lt;/code&gt; 및 &lt;code&gt;ST_NOSUID&lt;/code&gt; 상수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="410b32ea408f72235962fe8ee07bcc13f80e270a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;code&gt;StreamHandler&lt;/code&gt; class now has a &lt;code&gt;terminator&lt;/code&gt; attribute, default value &lt;code&gt;'\n'&lt;/code&gt;, which is used as the terminator when writing a formatted record to a stream. If you don&amp;rsquo;t want this newline termination, you can set the handler instance&amp;rsquo;s &lt;code&gt;terminator&lt;/code&gt; attribute to the empty string. In earlier versions, the terminator was hardcoded as &lt;code&gt;'\n'&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;StreamHandler&lt;/code&gt; 클래스에는 이제 &lt;code&gt;terminator&lt;/code&gt; 속성 (기본값 : &lt;code&gt;'\n'&lt;/code&gt; )이 있으며 이는 형식화 된 레코드를 스트림에 쓸 때 종결 자로 사용됩니다. 이 줄 바꿈 종료를 원하지 않으면 핸들러 인스턴스의 &lt;code&gt;terminator&lt;/code&gt; 속성을 빈 문자열로 설정할 수 있습니다 . 이전 버전에서는 터미네이터가 &lt;code&gt;'\n'&lt;/code&gt; 으로 하드 코딩되었습니다 .</target>
        </trans-unit>
        <trans-unit id="72c2c94192fa10b872808954f3d1ff1f97b6f8e1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;code&gt;filename&lt;/code&gt; attribute and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; argument were renamed to &lt;code&gt;source&lt;/code&gt; for consistency.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;filename&lt;/code&gt; 속성 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 인수가 일관성 을 위해 &lt;code&gt;source&lt;/code&gt; 로 이름이 변경 되었습니다.</target>
        </trans-unit>
        <trans-unit id="dc36984fae31a19745a2139f1d56b771af87cb4b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;code&gt;filename&lt;/code&gt; attribute and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; argument were renamed to &lt;code&gt;source&lt;/code&gt; for consistency.</source>
          <target state="translated">버전 3.2에서 변경 : &lt;code&gt;filename&lt;/code&gt; 속성과 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 인수는 일관성 을 위해 &lt;code&gt;source&lt;/code&gt; 로 이름이 변경 되었습니다.</target>
        </trans-unit>
        <trans-unit id="2cef6597e8ab6923cefbf16e03239ee94b125bf5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;compress_type&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;compress_type&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="d85e436ba5584921f5cd44287fd50d97b0ca32ca" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;level&lt;/em&gt; parameter now accepts a string representation of the level such as &amp;lsquo;INFO&amp;rsquo; as an alternative to the integer constants such as &lt;code&gt;INFO&lt;/code&gt;.</source>
          <target state="translated">버전 3.2에서 변경된 다음 &lt;em&gt;레벨&lt;/em&gt; 파라미터는 현재와 같은 정수 상수 대안 같은 &quot;정보&quot;와 같은 레벨의 스트링 표현 수락 &lt;code&gt;INFO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04b23a70f35eccca14f9e49a512c0d6df5b07dba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;level&lt;/em&gt; parameter now accepts a string representation of the level such as &amp;lsquo;INFO&amp;rsquo; as an alternative to the integer constants such as &lt;code&gt;INFO&lt;/code&gt;. Note, however, that levels are internally stored as integers, and methods such as e.g. &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt;&lt;code&gt;getEffectiveLevel()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt;&lt;code&gt;isEnabledFor()&lt;/code&gt;&lt;/a&gt; will return/expect to be passed integers.</source>
          <target state="translated">버전 3.2에서 변경된 다음 &lt;em&gt;레벨&lt;/em&gt; 파라미터는 현재와 같은 정수 상수 대안 같은 &quot;정보&quot;와 같은 레벨의 스트링 표현 수락 &lt;code&gt;INFO&lt;/code&gt; . 그러나 레벨은 내부적으로 정수로 저장되며 &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt; &lt;code&gt;getEffectiveLevel()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt; &lt;code&gt;isEnabledFor()&lt;/code&gt; &lt;/a&gt; 와 같은 메소드 는 정수가 전달 될 것으로 리턴 / 예상합니다.</target>
        </trans-unit>
        <trans-unit id="e4a83589980dcac997cc66caa4064cb244aaa7c3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;pass_fds&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;pass_fds&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5a7e51a2bdaa60d4f178447115479071f535d6e1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;path&lt;/em&gt; parameter became optional.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;path&lt;/em&gt; 매개 변수가 선택 사항이되었습니다.</target>
        </trans-unit>
        <trans-unit id="a716734e0933b0762aff8d4fd5e75d383df64f5d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;stack_info&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;stack_info&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e2a14a99cad50573d58016217c8f9c15c295bf0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;style&lt;/em&gt; argument was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;스타일&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f04eebe3baca25e6d1280ffb41a3f3b9803c9c31" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;style&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;스타일&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="08e4d030bb20c6827465fb995c09d09c1759338d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;timeout&lt;/em&gt; parameter is new.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;timeout&lt;/em&gt; 매개 변수가 새로워졌습니다.</target>
        </trans-unit>
        <trans-unit id="fc7d57006e2f4a53cb9bc28c0bc128f66054ff81" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The &lt;em&gt;verbosity&lt;/em&gt;, &lt;em&gt;failfast&lt;/em&gt;, &lt;em&gt;catchbreak&lt;/em&gt;, &lt;em&gt;buffer&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; parameters were added.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;verbosity&lt;/em&gt; , &lt;em&gt;failfast&lt;/em&gt; , &lt;em&gt;catchbreak&lt;/em&gt; , &lt;em&gt;buffer&lt;/em&gt; 및 &lt;em&gt;warnings&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4154b321663f905e6d9a5f18ff35b462814e5c3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The argument to the constructor is now permitted to be a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">버전 3.2으로 변경 : 생성자에 대한 인수는 이제 &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 인스턴스 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2fca0472a1f56de5a733716fba2853d97f96699" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The buffered headers are written to the output stream.</source>
          <target state="translated">버전 3.2으로 변경 : 버퍼링 된 헤더가 출력 스트림에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="1384575d0c2f2a4cf7f50c85a9443ab1a9b72c69" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The creation of a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; has been made more configurable by providing a factory which is used to create the record. The factory can be set using &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt;&lt;code&gt;getLogRecordFactory()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt;&lt;code&gt;setLogRecordFactory()&lt;/code&gt;&lt;/a&gt; (see this for the factory&amp;rsquo;s signature).</source>
          <target state="translated">버전 3.2으로 변경 : 레코드를 작성하는 데 사용되는 팩토리를 제공하여 &lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 작성을 보다 구성 할 수있게되었습니다. 팩토리는 &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt; &lt;code&gt;getLogRecordFactory()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt; &lt;code&gt;setLogRecordFactory()&lt;/code&gt; &lt;/a&gt; 사용하여 설정할 수 있습니다 (공장 서명은 이 참조).</target>
        </trans-unit>
        <trans-unit id="1cd17855ab6f9241ec652999c3948d766b8fd5cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The default for &lt;em&gt;close_fds&lt;/em&gt; was changed from &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; to what is described above.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;close_fds&lt;/em&gt; 의 기본값이 &lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; 에서 위에서 설명한 내용 으로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c285606014635e5c94356ec6031a333a7e1132b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The default stream is set to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; at instantiation time rather than import time.</source>
          <target state="translated">버전 3.2으로 변경 : 기본 스트림은 가져 오기 시간이 아닌 인스턴스화 시간 에 &lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c646a74444be20bed70ff1ca5cb407caf5c3ab3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The file object really is a binary file; previously it was incorrectly returned in text mode. Also, the file-like object now supports the context management protocol: you can use a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to automatically close it.</source>
          <target state="translated">버전 3.2으로 변경 : 파일 객체는 실제로 이진 파일입니다. 이전에는 텍스트 모드에서 잘못 반환되었습니다. 또한 파일 유사 객체는 이제 컨텍스트 관리 프로토콜을 지원합니다. &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 사용 하여 자동으로 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d64130bf7aa6711fd6afa526c1f40a73dfc592bf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The file object really is a binary file; previously it was incorrectly returned in text mode. Also, the file-like object now supports the context management protocol: you can use a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to automatically close it.</source>
          <target state="translated">버전 3.2에서 변경 : 파일 객체는 실제로 바이너리 파일입니다. 이전에는 텍스트 모드에서 잘못 반환되었습니다. 또한 파일 류 객체는 이제 컨텍스트 관리 프로토콜을 지원합니다. &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 사용 하여 자동으로 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e754e99512162722bf322ab3f968d97e61c866" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The method &lt;code&gt;assertRegexpMatches()&lt;/code&gt; has been renamed to &lt;a href=&quot;#unittest.TestCase.assertRegex&quot;&gt;&lt;code&gt;assertRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;assertRegexpMatches()&lt;/code&gt; 메소드의 이름이 &lt;a href=&quot;#unittest.TestCase.assertRegex&quot;&gt; &lt;code&gt;assertRegex()&lt;/code&gt; &lt;/a&gt; 로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2c4f59aa7c7cab7bc1520f28770c96e0920935a2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The returned dictionary includes additional items such as &lt;code&gt;issuer&lt;/code&gt; and &lt;code&gt;notBefore&lt;/code&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 반환 된 사전에는 &lt;code&gt;issuer&lt;/code&gt; 및 &lt;code&gt;notBefore&lt;/code&gt; 와 같은 추가 항목이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="06842c7aaafec60796e6dcbf1c267d287a5971a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: The returned socket objects now support the whole socket API, rather than a subset.</source>
          <target state="translated">버전 3.2으로 변경 : 반환 된 소켓 객체는 이제 서브셋이 아닌 전체 소켓 API를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="929b3dc2fc49d281530d8c7176324f391781f311" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: This class now supports HTTPS virtual hosts if possible (that is, if &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt; is true).</source>
          <target state="translated">버전 3.2으로 변경 :이 클래스는 가능하면 HTTPS 가상 호스트를 지원합니다 (즉, &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt; 가 true 인 경우).</target>
        </trans-unit>
        <trans-unit id="c19345738626405132916ba5b9242721c2001603" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: This method is applicable only for local hostnames. When a remote hostname is given, an &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">버전 3.2으로 변경 :이 방법은 로컬 호스트 이름에만 적용됩니다. 원격 호스트 이름이 제공되면 &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3aeb7b4d9e29b10e5a14e3f61a2cb4a16c56bf8d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: URL parsing functions now accept ASCII encoded byte sequences</source>
          <target state="translated">버전 3.2으로 변경 : URL 구문 분석 기능은 이제 ASCII 인코딩 된 바이트 시퀀스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="69da1bcb321345e640a1b58b0475f66d0334fa9b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Use &lt;code&gt;'backslashreplace'&lt;/code&gt; error handler on &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt;&lt;code&gt;UnicodeEncodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt; &lt;code&gt;UnicodeEncodeError&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;'backslashreplace'&lt;/code&gt; 오류 처리기를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d05dfe376589c7336a4741545895bc4f9bc354d1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Use &lt;code&gt;'surrogateescape'&lt;/code&gt; as the default for the &lt;em&gt;errors&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;em&gt;errors&lt;/em&gt; 인수 의 기본값으로 &lt;code&gt;'surrogateescape'&lt;/code&gt; 를 사용하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5c46c69b070c78909c1f170b9fb5f695fc1e05c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Use of &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;ContextDecorator&lt;/code&gt; &lt;/a&gt; 사용 .</target>
        </trans-unit>
        <trans-unit id="408dbe21c768435c6bd7001104b4d3ab9343a691" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: Use of the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; method for non-integers is new in 3.2.</source>
          <target state="translated">버전 3.2으로 변경 : 정수가 아닌 경우 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt; 메소드 사용은 3.2에서 새로 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d7264002029d43964adbb07f9ec5408ddc13a180" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: When the &lt;code&gt;%z&lt;/code&gt; directive is provided to the &lt;code&gt;strptime()&lt;/code&gt; method, an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object will be produced. The &lt;code&gt;tzinfo&lt;/code&gt; of the result will be set to a &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">버전 3.2으로 변경 : &lt;code&gt;%z&lt;/code&gt; 지시문이 &lt;code&gt;strptime()&lt;/code&gt; 메소드에 제공되면 인식하는 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 오브젝트가 생성됩니다. 결과 의 &lt;code&gt;tzinfo&lt;/code&gt; 는 &lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt; 인스턴스 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8577c39dd4f6e48cb5e9c26f22db43ead817e7c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: You don&amp;rsquo;t need to create specialized &lt;code&gt;Filter&lt;/code&gt; classes, or use other classes with a &lt;code&gt;filter&lt;/code&gt; method: you can use a function (or other callable) as a filter. The filtering logic will check to see if the filter object has a &lt;code&gt;filter&lt;/code&gt; attribute: if it does, it&amp;rsquo;s assumed to be a &lt;code&gt;Filter&lt;/code&gt; and its &lt;a href=&quot;#logging.Filter.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; method is called. Otherwise, it&amp;rsquo;s assumed to be a callable and called with the record as the single parameter. The returned value should conform to that returned by &lt;a href=&quot;#logging.Filter.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2으로 변경 : 특수한 &lt;code&gt;Filter&lt;/code&gt; 클래스 를 만들 거나 &lt;code&gt;filter&lt;/code&gt; 메서드 와 함께 다른 클래스를 사용할 필요가 없습니다 . 함수 (또는 다른 호출 가능)를 필터로 사용할 수 있습니다. 필터링 로직은 필터 오브젝트가되지 않았는지 확인한다 &lt;code&gt;filter&lt;/code&gt; 는 않는 경우는 것으로 가정한다 : 속성 &lt;code&gt;Filter&lt;/code&gt; 와 &lt;a href=&quot;#logging.Filter.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 메소드가 호출된다. 그렇지 않으면 호출 가능하고 레코드를 단일 매개 변수로 사용하여 호출 된 것으로 가정합니다. 반환 값은 &lt;a href=&quot;#logging.Filter.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 값과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="16ce1c1a5ab4d3e3203b76558502a5b224354e3a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.2: parameters can now be passed using keyword arguments.</source>
          <target state="translated">버전 3.2으로 변경 : 키워드 인수를 사용하여 매개 변수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd8a733f8f073799e3ab11493a393cd9275fbaeb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3.</source>
          <target state="translated">버전 3.3으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="ec97a8ccaabc5ecae61f05a8386d9d35f6d8abbb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3.1: &lt;em&gt;bufsize&lt;/em&gt; now defaults to -1 to enable buffering by default to match the behavior that most code expects. In versions prior to Python 3.2.4 and 3.3.1 it incorrectly defaulted to &lt;code&gt;0&lt;/code&gt; which was unbuffered and allowed short reads. This was unintentional and did not match the behavior of Python 2 as most code expected.</source>
          <target state="translated">버전 3.3.1에서 변경 : &lt;em&gt;bufsize&lt;/em&gt; 는 기본적으로 대부분의 코드에서 예상되는 동작과 일치하도록 기본적으로 버퍼링을 활성화하기 위해 -1로 기본 설정됩니다. Python 3.2.4 및 3.3.1 이전 버전에서는 버퍼링되지 않고 짧은 읽기를 허용 하는 &lt;code&gt;0&lt;/code&gt; 으로 잘못 기본값이 설정되었습니다 . 이것은 의도하지 않았으며 대부분의 코드가 예상 한대로 Python 2의 동작과 일치하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d3db174c4eba34a4bad975a4a4018721c1023468" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3.3: The function now follows &lt;a href=&quot;https://tools.ietf.org/html/rfc6125.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6125&lt;/strong&gt;&lt;/a&gt;, section 6.4.3 and does neither match multiple wildcards (e.g. &lt;code&gt;*.*.com&lt;/code&gt; or &lt;code&gt;*a*.example.org&lt;/code&gt;) nor a wildcard inside an internationalized domain names (IDN) fragment. IDN A-labels such as &lt;code&gt;www*.xn--pthon-kva.org&lt;/code&gt; are still supported, but &lt;code&gt;x*.python.org&lt;/code&gt; no longer matches &lt;code&gt;xn--tda.python.org&lt;/code&gt;.</source>
          <target state="translated">버전 3.3.3으로 변경 :이 기능은 이제 &lt;a href=&quot;https://tools.ietf.org/html/rfc6125.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 6125&lt;/strong&gt;&lt;/a&gt; 섹션 6.4.3을 따르며 여러 와일드 카드 (예 : &lt;code&gt;*.*.com&lt;/code&gt; 또는 &lt;code&gt;*a*.example.org&lt;/code&gt; ) 또는 국제화 된 도메인 이름 (IDN) 내의 와일드 카드와 일치하지 않습니다 . ) 조각. &lt;code&gt;www*.xn--pthon-kva.org&lt;/code&gt; 와 같은 IDN A 레이블 은 계속 지원되지만 &lt;code&gt;x*.python.org&lt;/code&gt; 는 더 이상 &lt;code&gt;xn--tda.python.org&lt;/code&gt; 와 일치하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ac2f4a6e025ed215a843bfd93910ffd8d22b5801" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3.4: Windows support added</source>
          <target state="translated">버전 3.3.4으로 변경 : Windows 지원 추가</target>
        </trans-unit>
        <trans-unit id="67482adc55dcb5bc047a12052ec29177466c05c9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3.4: Windows support was added.</source>
          <target state="translated">버전 3.3.4으로 변경 : Windows 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="aa11fe5b00e5e286c6f903a36b4d033af51c2218" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3:</source>
          <target state="translated">버전 3.3으로 변경 :</target>
        </trans-unit>
        <trans-unit id="893604c0b92c9b86be59ad46833a38f609ecb0e5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: (See: &lt;a href=&quot;https://bugs.python.org/issue12419&quot;&gt;bpo-12419&lt;/a&gt;.) In earlier versions, there was no facility for an &amp;ldquo;ident&amp;rdquo; or &amp;ldquo;tag&amp;rdquo; prefix to identify the source of the message. This can now be specified using a class-level attribute, defaulting to &lt;code&gt;&quot;&quot;&lt;/code&gt; to preserve existing behaviour, but which can be overridden on a &lt;code&gt;SysLogHandler&lt;/code&gt; instance in order for that instance to prepend the ident to every message handled. Note that the provided ident must be text, not bytes, and is prepended to the message exactly as is.</source>
          <target state="translated">버전 3.3으로 변경 : ( &lt;a href=&quot;https://bugs.python.org/issue12419&quot;&gt;bpo-12419&lt;/a&gt; 참조 ) 이전 버전에서는 메시지의 소스를 식별하는 &quot;ident&quot;또는 &quot;tag&quot;접두어 기능이 없었습니다. 기존의 동작을 유지하기 위해 기본적으로 &lt;code&gt;&quot;&quot;&lt;/code&gt; 로 기본 클래스 수준 속성을 사용하여 지정할 수 있지만 &lt;code&gt;SysLogHandler&lt;/code&gt; 인스턴스에서 재정의되어 해당 인스턴스가 처리 된 모든 메시지에 ID를 추가 할 수 있습니다 . 제공된 ID는 바이트가 아닌 텍스트 여야하며 메시지 앞에 정확하게 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d6316bda42eda47a27c9b0b5e4b6e5ca29c4afdf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#EnvironmentError&quot;&gt;&lt;code&gt;EnvironmentError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#WindowsError&quot;&gt;&lt;code&gt;WindowsError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.error&quot;&gt;&lt;code&gt;socket.error&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;select#select.error&quot;&gt;&lt;code&gt;select.error&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;mmap.error&lt;/code&gt; have been merged into &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, and the constructor may return a subclass.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#EnvironmentError&quot;&gt; &lt;code&gt;EnvironmentError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#WindowsError&quot;&gt; &lt;code&gt;WindowsError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;socket#socket.error&quot;&gt; &lt;code&gt;socket.error&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;select#select.error&quot;&gt; &lt;code&gt;select.error&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;mmap.error&lt;/code&gt; 가 &lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 로 병합되어 생성자가 서브 클래스를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf50c6f40c428aba321a7b58b6e0725e5da7bbb6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist()&lt;/code&gt;&lt;/a&gt; now supports all single character native formats in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module syntax as well as multi-dimensional representations.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist()&lt;/code&gt; &lt;/a&gt; 이제 &lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt; 모듈 구문의 모든 단일 문자 기본 형식 과 다차원 표현을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b97de7299996ecf1f7d5478f9f301ccc525cd003" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#sched.scheduler&quot;&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/a&gt; class can be safely used in multi-threaded environments.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#sched.scheduler&quot;&gt; &lt;code&gt;scheduler&lt;/code&gt; &lt;/a&gt; 클래스는 다중 스레드 환경에서 안전하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a9bab1336059667028f34b7e8be99c5bef0614" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; used to be a subtype of &lt;a href=&quot;socket#socket.error&quot;&gt;&lt;code&gt;socket.error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;socket#socket.error&quot;&gt; &lt;code&gt;socket.error&lt;/code&gt; &lt;/a&gt; 의 하위 유형 이었습니다 .</target>
        </trans-unit>
        <trans-unit id="090ad76a24ef2ed25f5a026588274e6e38181ef1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; has been made a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7efaab12d1aa53bb781ad3f2b0dfc5228d184f6c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;Request.method&lt;/code&gt;&lt;/a&gt; argument is added to the Request class.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#urllib.request.Request.method&quot;&gt; &lt;code&gt;Request.method&lt;/code&gt; &lt;/a&gt; 인수가 Request 클래스에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="ed729b24caab7d8686b995cadf0af1fe54970425" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised instead of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="d106a47813e9fa73519f79288d75473b243da19f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised instead of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. Added &lt;em&gt;follow_symlinks&lt;/em&gt; argument. Now returns &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생했습니다 . &lt;em&gt;follow_symlinks&lt;/em&gt; 인수가 추가되었습니다 . 이제 &lt;em&gt;dst를&lt;/em&gt; 반환합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78ea587098b5f303b745b2b096d2cd642f1be2bf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised, it is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생했지만 이제는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="086f8a08b3a2c8a3d9cb428439401d6f2622f46d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised; it is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 발생; 이제는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="b9bd0f6f1fccb8e163d926a471a0a43b3ab8ad70" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, now an alias of the former.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생 하여 이전의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="3ffe1b35780cc268428697df5e944c5953acb63c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;exceptions#WindowsError&quot;&gt;&lt;code&gt;WindowsError&lt;/code&gt;&lt;/a&gt; used to be raised.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#WindowsError&quot;&gt; &lt;code&gt;WindowsError&lt;/code&gt; &lt;/a&gt; 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="122a84c8a5833660f94ab7a301dd1475fabc3fc8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; arguments raise an exception if the &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt; trap is set. By default the trap is off.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; &lt;/a&gt; 트랩이 설정된 경우 &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 인수는 예외를 발생시킵니다 . 트랩은 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4d127aa8068e6c450f136ec1b57b82080968ba4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; are automatically set (when possible).</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt; 가 자동으로 설정됩니다 (가능한 경우).</target>
        </trans-unit>
        <trans-unit id="f1115cf112efaf45cf793d92a7c0d172e6b2db1f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; are automatically set (when possible).</source>
          <target state="translated">버전 3.3에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt; 가 자동으로 설정됩니다 (가능한 경우).</target>
        </trans-unit>
        <trans-unit id="dc107a0de04c5d944fa6f6cd506949c300963d5b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt; is now the default timer.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt; 가 이제 기본 타이머입니다.</target>
        </trans-unit>
        <trans-unit id="0439774f6afd3a900f407a93010065d79db3358e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;code&gt;None&lt;/code&gt; is stored instead of &lt;a href=&quot;imp#imp.NullImporter&quot;&gt;&lt;code&gt;imp.NullImporter&lt;/code&gt;&lt;/a&gt; when no finder is found.</source>
          <target state="translated">버전 3.3으로 변경 : 파인더가 없으면 &lt;a href=&quot;imp#imp.NullImporter&quot;&gt; &lt;code&gt;imp.NullImporter&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;None&lt;/code&gt; 이 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="cfd700325c3fe8d73d16c409f0b4a3f3963d8638" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;argument&lt;/em&gt; parameter is optional.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;인수&lt;/em&gt; 매개 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="6a247e06bdf3a6612f6671b3f21a04fc2942d850" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;blocking&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;차단&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="877715ae100b4211101f58d766ee29a4e0b89176" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;cadefault&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;cadefault&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="aaac4ff3beb47da35e06b63bf7edd751a8e95735" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;context&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;컨텍스트&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="80083a2b3a36e87903e5406aa660cf10de02aa7b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;family&lt;/em&gt; and &lt;em&gt;type&lt;/em&gt; arguments can be omitted.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;family&lt;/em&gt; 및 &lt;em&gt;type&lt;/em&gt; 인수는 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8e1549db2743c22bba9b42df0e11a7bf8ca6fb2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;kwargs&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;kwargs&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f1f1beee8e64a981d4865c37e91fe06d21b1dfa8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;path&lt;/em&gt; can now be an integer: &lt;code&gt;True&lt;/code&gt; is returned if it is an open file descriptor, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;path&lt;/em&gt; 는 이제 정수가 될 수 있습니다 . 열린 파일 디스크립터이면 &lt;code&gt;True&lt;/code&gt; 가 반환되고, &lt;code&gt;False&lt;/code&gt; 않으면 False가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d6efe462a308326127d3555cc6c8fc24312157dc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;request&lt;/em&gt; object needs &lt;code&gt;origin_req_host&lt;/code&gt; attribute. Dependency on a deprecated method &lt;code&gt;get_origin_req_host()&lt;/code&gt; has been removed.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;요청&lt;/em&gt; 오브젝트에 &lt;code&gt;origin_req_host&lt;/code&gt; 속성이 필요 합니다. 더 이상 사용되지 않는 메소드 &lt;code&gt;get_origin_req_host()&lt;/code&gt; 에 대한 종속성 이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="a4f2630bfcfc775ed130096dcab5293614ab394a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;source_address&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;source_address&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f7434f71ecb6e3ffc9d718e587687f84ca13af9d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;ssl_context&lt;/em&gt; parameter added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;ssl_context&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5ad774db50997dc4c9a9480ced04c1b5f4932fe4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;ssl_context&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.3에서 변경 : &lt;em&gt;ssl_context&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="238c536cbe5418bcbe1273ad9890c968fce4db15" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;timefunc&lt;/em&gt; and &lt;em&gt;delayfunc&lt;/em&gt; parameters are optional.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;timefunc&lt;/em&gt; 및 &lt;em&gt;delayfunc&lt;/em&gt; 매개 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="baf1367099df683f87d9e6edc6ef975a71663609" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;timeout&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;시간 초과&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d514cd15298020c57de282533e882f1fb54d6f89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: &lt;em&gt;tz&lt;/em&gt; now can be omitted.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;tz를&lt;/em&gt; 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9b41489db38c0bfa38afc3d21f2854f41629b84" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: ASCII-only Unicode strings are now accepted by the decoding functions of the modern interface.</source>
          <target state="translated">버전 3.3으로 변경 : ASCII 전용 유니 코드 문자열은 이제 최신 인터페이스의 디코딩 기능에 의해 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="51962002f2d6d087d310adaf4db2499bddeceefe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: ASCII-only unicode strings are now accepted by the &lt;code&gt;a2b_*&lt;/code&gt; functions.</source>
          <target state="translated">버전 3.3으로 변경 : ASCII 전용 유니 코드 문자열은 이제 &lt;code&gt;a2b_*&lt;/code&gt; 함수 에서 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9997eb8291b58b70af4b946c6f07b5f9c373ea54" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Accept &lt;code&gt;crypt.METHOD_*&lt;/code&gt; values in addition to strings for &lt;em&gt;salt&lt;/em&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;salt&lt;/em&gt; 문자열 외에도 &lt;code&gt;crypt.METHOD_*&lt;/code&gt; 값을 승인하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9a29377a67d24797c49af25022fdf05cdfdc80e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Add &lt;a href=&quot;#os.O_CLOEXEC&quot;&gt;&lt;code&gt;O_CLOEXEC&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#os.O_CLOEXEC&quot;&gt; &lt;code&gt;O_CLOEXEC&lt;/code&gt; &lt;/a&gt; 상수 추가 .</target>
        </trans-unit>
        <trans-unit id="c3763d79287f56b61e5eeb5569eedeafb1d85bc9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;code&gt;service_actions&lt;/code&gt; call to the &lt;code&gt;serve_forever&lt;/code&gt; method.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;serve_forever&lt;/code&gt; 메소드에 &lt;code&gt;service_actions&lt;/code&gt; 호출이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d3da22b7997cbffaa9e5f84804b1b415ec889030" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;code&gt;value&lt;/code&gt; attribute and the ability for generator functions to use it to return a value.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;value&lt;/code&gt; 속성 추가 및 생성기 함수가이를 사용하여 값을 리턴하는 기능.</target>
        </trans-unit>
        <trans-unit id="11a95e4248e5e31987d00e36ecdf1b0c19fde0ba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;em&gt;follow_symlinks&lt;/em&gt; argument and support for Linux extended attributes.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;follow_symlinks&lt;/em&gt; 인수 추가 및 Linux 확장 속성 지원.</target>
        </trans-unit>
        <trans-unit id="66ab5794d3e4f4d2ce750a3224154cdef2338495" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;em&gt;follow_symlinks&lt;/em&gt; argument, try to copy extended file system attributes too (currently Linux only). Now returns path to the newly created file.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;follow_symlinks&lt;/em&gt; 인수 추가 , 확장 파일 시스템 속성도 복사하십시오 (현재 Linux 만 해당). 이제 새로 만든 파일의 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b84923598bf50e962cb202276ede98bd83d0b4a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;em&gt;follow_symlinks&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;follow_symlinks&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6ca5466c03c3ff27bd23306a613b5d77d385e35f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added &lt;em&gt;follow_symlinks&lt;/em&gt; argument. Now returns path to the newly created file.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;follow_symlinks&lt;/em&gt; 인수가 추가되었습니다 . 이제 새로 만든 파일의 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae6dc08fdd44eb3c0e404fb37abede09d66bd18a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added a symlink attack resistant version that is used automatically if platform supports fd-based functions.</source>
          <target state="translated">버전 3.3으로 변경 : 플랫폼이 fd 기반 기능을 지원하는 경우 자동으로 사용되는 symlink 공격 방지 버전이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d90bf572cbba885bfcfb51d57150e5fa5ba041ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added explicit symlink handling for foreign filesystems, thus adapting it to the behavior of GNU&amp;rsquo;s &lt;strong&gt;mv&lt;/strong&gt;. Now returns &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 외부 파일 시스템에 대한 명시 적 심볼릭 링크 처리를 추가하여 GNU &lt;strong&gt;mv&lt;/strong&gt; 동작에 맞게 조정했습니다 . 이제 &lt;em&gt;dst를&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e298240287f830d38f514585862251c133eec58" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added support for &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bzip2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; compression.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bzip2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt; 압축 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e89eb844373690c5aed379abc7f9c6efd76730b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added support for &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; compression.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt; 압축 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e8d1a74ebcaffc711cf13a5e6ee25e332ae5875a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added support for &lt;code&gt;exact_type&lt;/code&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;exact_type&lt;/code&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a398acd4aebfd572f75e04b3812c3eb1de182c3f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added support for &lt;em&gt;filename&lt;/em&gt; being a file object, support for text mode, and the &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; arguments.</source>
          <target state="translated">버전 3.3으로 변경 : 파일 객체 인 파일 &lt;em&gt;이름&lt;/em&gt; 지원, 텍스트 모드 지원, &lt;em&gt;인코딩&lt;/em&gt; , &lt;em&gt;오류&lt;/em&gt; 및 &lt;em&gt;줄 바꿈&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="24b5b0ae54d48200647cf57b7ec4399afea0c28a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added support for the &lt;code&gt;'n'&lt;/code&gt; and &lt;code&gt;'N'&lt;/code&gt; formats.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;'n'&lt;/code&gt; 및 &lt;code&gt;'N'&lt;/code&gt; 형식에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="db24845dd928094b00a8504e7caa83e3e84749cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; attributes.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d07c918623551a114a19686a1502f6b300527140" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;charset&lt;/em&gt; option.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;charset&lt;/em&gt; 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3a42423c10c38f65da04a6d1f6387d8e5dc31063" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;daemon&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;데몬&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="eea501c79389a11d737b546a52df4007bee170ad" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;dir_fd&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f507b581c556679380dd248afb80d1d599b1317f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt;, &lt;em&gt;effective_ids&lt;/em&gt;, and &lt;em&gt;follow_symlinks&lt;/em&gt; parameters.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;dir_fd&lt;/em&gt; , &lt;em&gt;effective_ids&lt;/em&gt; 및 &lt;em&gt;follow_symlinks&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="aebc74f16f563fa10ce5fdbbd9f380509b6268f0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;flags&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;flags&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5ba1716f48ee774462534453d5dd0680704c8367" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;flush&lt;/em&gt; keyword argument.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;flush&lt;/em&gt; 키워드 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5b3ee43b08c4f5fadd0e9ea16e57e6e93938bc9a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;msg&lt;/em&gt; keyword argument when used as a context manager.</source>
          <target state="translated">버전 3.3으로 변경 : 컨텍스트 관리자로 사용될 때 &lt;em&gt;msg&lt;/em&gt; 키워드 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7e77b20ebe3cdd0a5397655084c12413947e8a8c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;policy&lt;/em&gt; keyword.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;정책&lt;/em&gt; 키워드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b268345974b985fd902fc97cc3b5320884938378" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;typed&lt;/em&gt; option.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;유형&lt;/em&gt; 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b482d401c1ff6e1380527c5dab872a8f388abf36" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;zdict&lt;/em&gt; parameter and keyword argument support.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;zdict&lt;/em&gt; 매개 변수 및 키워드 인수 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="491a642b9734a2a05d11cf5f1f650fe19de243e6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the &lt;em&gt;zdict&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;zdict&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="332aaa280396e36b8552748f402c0cc02e466306" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Added the optional &lt;em&gt;func&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.3으로 변경 : 옵션 &lt;em&gt;func&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="92a13bc458871a7d55caea5a1a8de0d19d8323e1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Allowed &amp;lsquo;:&amp;rsquo; as a valid Cookie name character.</source>
          <target state="translated">버전 3.3으로 변경 : 유효한 쿠키 이름 문자로 ':'이 허용되었습니다.</target>
        </trans-unit>
        <trans-unit id="f73575f0f6bc17345081d629618469bd3a5dbb8c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Also accept an integer in the range 0 to 255 as the subsequence.</source>
          <target state="translated">버전 3.3으로 변경 : 하위 시퀀스로 0에서 255 사이의 정수도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="39e059543e2f9bb79d0d272b48a27be2a3385690" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: An empty tuple instead of &lt;code&gt;None&lt;/code&gt; when ndim = 0.</source>
          <target state="translated">버전 3.3으로 변경 : ndim = 0 인 경우 &lt;code&gt;None&lt;/code&gt; 대신 빈 튜플 .</target>
        </trans-unit>
        <trans-unit id="b26c487ca02878bb2f65e200f5c3e2e808cd36a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: An instance of &lt;a href=&quot;exceptions#WindowsError&quot;&gt;&lt;code&gt;WindowsError&lt;/code&gt;&lt;/a&gt; used to be created.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;exceptions#WindowsError&quot;&gt; &lt;code&gt;WindowsError&lt;/code&gt; &lt;/a&gt; 인스턴스를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="6caef24342743466df5b85c3af01f11fc9bb93da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Argument can be omitted or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 인수는 생략하거나 &lt;code&gt;None&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90fb247a83a1886bf4926b496ec977a28298caaa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Before &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt;, &lt;code&gt;sys.maxunicode&lt;/code&gt; used to be either &lt;code&gt;0xFFFF&lt;/code&gt; or &lt;code&gt;0x10FFFF&lt;/code&gt;, depending on the configuration option that specified whether Unicode characters were stored as UCS-2 or UCS-4.</source>
          <target state="translated">버전 3.3에서 변경 : 전에 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt; , &lt;code&gt;sys.maxunicode&lt;/code&gt; 이 될하는 데 사용 &lt;code&gt;0xFFFF&lt;/code&gt; 의 또는 &lt;code&gt;0x10FFFF&lt;/code&gt; 유니 코드 문자가 UCS-2, UCS-4로 저장되었는지 지정한 구성 옵션에 따라.</target>
        </trans-unit>
        <trans-unit id="036578da3a5029f6f48da99f80529b40022de9f5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Before &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt;, &lt;code&gt;sys.maxunicode&lt;/code&gt; used to be either &lt;code&gt;0xFFFF&lt;/code&gt; or &lt;code&gt;0x10FFFF&lt;/code&gt;, depending on the configuration option that specified whether Unicode characters were stored as UCS-2 or UCS-4.</source>
          <target state="translated">버전 3.3에서 변경 : 전에 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt; , &lt;code&gt;sys.maxunicode&lt;/code&gt; 이 될하는 데 사용 &lt;code&gt;0xFFFF&lt;/code&gt; 의 또는 &lt;code&gt;0x10FFFF&lt;/code&gt; 유니 코드 문자가 UCS-2, UCS-4로 저장되었는지 지정한 구성 옵션에 따라.</target>
        </trans-unit>
        <trans-unit id="46f4b6cad6afcf3422953cc52bd66988573f2b75" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Connection objects themselves can now be transferred between processes using &lt;a href=&quot;#multiprocessing.connection.Connection.send&quot;&gt;&lt;code&gt;Connection.send()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt;&lt;code&gt;Connection.recv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#multiprocessing.connection.Connection.send&quot;&gt; &lt;code&gt;Connection.send()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt; &lt;code&gt;Connection.recv()&lt;/code&gt; &lt;/a&gt; 사용하여 프로세스간에 연결 오브젝트 자체를 전송할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b0e51d2da3b46e93c65547ec39954ec9e870ea4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Copy metadata when &lt;em&gt;symlinks&lt;/em&gt; is false. Now returns &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;심볼릭 링크&lt;/em&gt; 가 거짓 일 때 메타 데이터 복사 이제 &lt;em&gt;dst를&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="77bac2c37e0416eb04abb46a7193467c5f599463" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Define &amp;lsquo;==&amp;rsquo; and &amp;lsquo;!=&amp;rsquo; to compare range objects based on the sequence of values they define (instead of comparing based on object identity).</source>
          <target state="translated">버전 3.3으로 변경 : '=='및 '! ='을 정의하여 정의한 값 순서에 따라 범위 개체를 비교합니다 (개체 ID를 기준으로 비교하는 대신).</target>
        </trans-unit>
        <trans-unit id="6398282600819d93b2f6cdea42f83c7bb6cbe33b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Equality comparisons between aware and naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances don&amp;rsquo;t raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 인식 및 순진 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 인스턴스 간의 동일성 비교시 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5bd4b66f5142412248268d498445cbeff30cdf3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Equality comparisons between aware and naive &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; instances don&amp;rsquo;t raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 인식 &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 인스턴스 와 순진 시간 인스턴스 간의 동일성 비교 시 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c8e04ab06f3e9536fc5abc127f8a75d6919a2eb0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Following &lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt;, this class was made an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt; 에 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 클래스는 OSError 의 별칭이되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e545596e8b9f8784254f890ca7530c4e6b9d0078" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Following &lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt;, this class was made an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt; 에 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 클래스는 OSError 의 별칭이되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9cc3c3fea1f3a16e3b9b3b05f5a7dedbcc1dda80" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: For backwards compatibility with the Python 2 series, the &lt;code&gt;u&lt;/code&gt; prefix is once again permitted on string literals. It has no effect on the meaning of string literals and cannot be combined with the &lt;code&gt;r&lt;/code&gt; prefix.</source>
          <target state="translated">버전 3.3으로 변경 : Python 2 시리즈와의 호환성을 위해 문자열 리터럴 에서 &lt;code&gt;u&lt;/code&gt; 접두사가 다시 허용됩니다. 문자열 리터럴의 의미에는 영향을 미치지 않으며 &lt;code&gt;r&lt;/code&gt; 접두사 와 결합 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5a4099cef39c5afbe5ae0990dd03bd91d22ecd61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Headers are stored to an internal buffer and &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt;&lt;code&gt;end_headers()&lt;/code&gt;&lt;/a&gt; needs to be called explicitly.</source>
          <target state="translated">버전 3.3으로 변경 : 헤더는 내부 버퍼에 저장되며 &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.end_headers&quot;&gt; &lt;code&gt;end_headers()&lt;/code&gt; &lt;/a&gt; 를 명시 적으로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f830572c33b4daf3eed2baa953fe642f7977b9d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Importing the module used to trigger paths manipulation even when using &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3 변화 : 사용하는 경우에도 경로 트리거 조작에 사용되는 모듈 오기 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e664efa7aff9527603a4a36be080f63bc677e683" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Importing the module used to trigger paths manipulation even when using &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; 를&lt;/a&gt; 사용하는 경우에도 경로 조작을 트리거하는 데 사용되는 모듈을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="896ddba2fca4eaa0516e89ee6e9cb4a5d68532a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: In version 3.2, &lt;code&gt;strftime()&lt;/code&gt; method was restricted to years &amp;gt;= 1000.</source>
          <target state="translated">버전 3.3으로 변경 : 버전 3.2에서 &lt;code&gt;strftime()&lt;/code&gt; 메소드는 연도&amp;gt; = 1000으로 제한되었습니다.</target>
        </trans-unit>
        <trans-unit id="90ade5e607d33bb4e835e47e9802a395dfb17c12" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: LoadError was made a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : LoadError는 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="08991b3a6904be4c40e9bf3ef4024703023d5dd9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Manager objects support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; starts the server process (if it has not already started) and then returns the manager object. &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.managers.BaseManager.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : Manager 객체는 컨텍스트 관리 프로토콜을 지원합니다 (컨텍스트 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;관리자 유형&lt;/a&gt; 참조) . &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 는 서버 프로세스를 시작하고 (아직 시작하지 않은 경우) 관리자 개체를 반환합니다. &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#multiprocessing.managers.BaseManager.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cebf47e4ddd6598694cc673f73f1adc6e3815105" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Negative values for &lt;em&gt;level&lt;/em&gt; are no longer supported (which also changes the default value to 0).</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;레벨의&lt;/em&gt; 음수 값 이 더 이상 지원되지 않습니다 (이 또한 기본값을 0으로 변경 함).</target>
        </trans-unit>
        <trans-unit id="dc0d387fe3b436b214dcb650a502438346bf6f26" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: New optional argument &lt;em&gt;password&lt;/em&gt;.</source>
          <target state="translated">새로운 선택적 인수 : 버전 3.3에서 변경된 &lt;em&gt;암호&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0c1559ee234cbeb8f9cde131f27f6ccc057b5bbe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: On Linux, &lt;a href=&quot;#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t contain the major version anymore. It is always &lt;code&gt;'linux'&lt;/code&gt;, instead of &lt;code&gt;'linux2'&lt;/code&gt; or &lt;code&gt;'linux3'&lt;/code&gt;. Since older Python versions include the version number, it is recommended to always use the &lt;code&gt;startswith&lt;/code&gt; idiom presented above.</source>
          <target state="translated">버전 3.3으로 변경 : Linux에서 &lt;a href=&quot;#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt; 은 더 이상 주 버전을 포함하지 않습니다. &lt;code&gt;'linux2'&lt;/code&gt; 또는 &lt;code&gt;'linux3'&lt;/code&gt; 대신 항상 &lt;code&gt;'linux'&lt;/code&gt; ' 입니다. 이전 Python 버전에는 버전 번호가 포함되어 있으므로 항상 위에 제시된 &lt;code&gt;startswith&lt;/code&gt; 관용구를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c7abec4553f62164142ebb011b237e4e1327acfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: One-dimensional memoryviews can now be sliced. One-dimensional memoryviews with formats &amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo; are now hashable.</source>
          <target state="translated">버전 3.3으로 변경 : 이제 1 차원 메모리 뷰를 슬라이스 할 수 있습니다. 'B', 'b'또는 'c'형식의 1 차원 메모리 뷰는 이제 해시 가능합니다.</target>
        </trans-unit>
        <trans-unit id="7d988ad3d76f454249e4c75bb621fe3079cf9ccd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Operations in this module now raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; where &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">버전 3.3으로 변경 : 이제이 모듈의 작업에서 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생한 곳에서 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="840bf011d357e25ba695a2b73ce3e87fe222d8ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Operations in this module used to raise an &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; where they now raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 모듈의 작업은 이제 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 를&lt;/a&gt;&lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 시키는 IOError를 발생 시키는 데 사용됩니다. .</target>
        </trans-unit>
        <trans-unit id="00f38a0a7bdb8f47d9d5d71f4ef4ef12db382548" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Operations that used to raise &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; now raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, since &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">발생하는 데 사용 운영 : 버전 3.3에서 변경 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 지금 제기 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 을&lt;/a&gt; 하기 때문에, &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 지금의 별칭입니다 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e19927359f3b9b2678e53d2328e133b11e626c1d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Parent packages are automatically imported.</source>
          <target state="translated">버전 3.3으로 변경 : 상위 패키지를 자동으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="22ad590bad024a1ad953c00706d662cd71696efe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Previous versions compared the raw memory disregarding the item format and the logical array structure.</source>
          <target state="translated">버전 3.3으로 변경 : 이전 버전은 항목 형식과 논리 배열 구조를 무시하고 원시 메모리를 비교했습니다.</target>
        </trans-unit>
        <trans-unit id="937ab1caaa11b389be853b3f20ddb84717a22add" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Previous versions of &lt;code&gt;run&lt;/code&gt; did not return the result. Neither did calling an instance.</source>
          <target state="translated">버전 3.3으로 변경 : 이전 버전의 &lt;code&gt;run&lt;/code&gt; 에서 결과가 반환되지 않았습니다. 인스턴스를 호출하지도 않았습니다.</target>
        </trans-unit>
        <trans-unit id="36a29837ff5a8749049764868f12f1b75a768382" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Previously, &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket paths were assumed to use UTF-8 encoding.</source>
          <target state="translated">버전 3.3으로 변경 : 이전에는 &lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt; 소켓 경로가 UTF-8 인코딩을 사용하는 것으로 가정되었습니다.</target>
        </trans-unit>
        <trans-unit id="c058edbf457a69e8aa977763286f72651a69419a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Previously, a name lookup was performed. To avoid name resolution delays, it now always returns the IP address.</source>
          <target state="translated">버전 3.3으로 변경 : 이전에는 이름 조회가 수행되었습니다. 이름 확인 지연을 피하기 위해 이제 항상 IP 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de9eea4ba089c04d51e58f49a23b69c53705e6ed" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Previously, the default format was hard-coded as in this example: &lt;code&gt;2010-09-06 22:38:15,292&lt;/code&gt; where the part before the comma is handled by a strptime format string (&lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt;), and the part after the comma is a millisecond value. Because strptime does not have a format placeholder for milliseconds, the millisecond value is appended using another format string, &lt;code&gt;'%s,%03d'&lt;/code&gt; &amp;mdash; and both of these format strings have been hardcoded into this method. With the change, these strings are defined as class-level attributes which can be overridden at the instance level when desired. The names of the attributes are &lt;code&gt;default_time_format&lt;/code&gt; (for the strptime format string) and &lt;code&gt;default_msec_format&lt;/code&gt; (for appending the millisecond value).</source>
          <target state="translated">버전 3.3으로 변경 : 이전에는 기본 형식이 다음 예와 같이 하드 코딩되었습니다. &lt;code&gt;2010-09-06 22:38:15,292&lt;/code&gt; 여기서 쉼표 앞의 부분은 strptime 형식 문자열 ( &lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt; )이며 쉼표 뒤의 부분은 밀리 초 값입니다. strptime에는 밀리 초의 형식 자리 표시자가 없으므로 밀리 초 값은 다른 형식 문자열 &lt;code&gt;'%s,%03d'&lt;/code&gt; 사용하여 추가 되며이 형식 문자열은 모두이 방법으로 하드 코딩되었습니다. 변경에 따라 이러한 문자열은 클래스 수준 속성으로 정의되며 원하는 경우 인스턴스 수준에서 재정의 할 수 있습니다. 속성 이름은 &lt;code&gt;default_time_format&lt;/code&gt; (strptime 형식 문자열의 경우) 및 &lt;code&gt;default_msec_format&lt;/code&gt; 입니다. (밀리 초 값을 추가하기 위해).</target>
        </trans-unit>
        <trans-unit id="a9903516770eea69151ebb967556727a74104946" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the timestamp is out of the range of values supported by the platform C &lt;code&gt;gmtime()&lt;/code&gt; function. Raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;gmtime()&lt;/code&gt; failure.</source>
          <target state="translated">버전 3.3으로 변경 : 타임 스탬프가 플랫폼 C &lt;code&gt;gmtime()&lt;/code&gt; 함수 에서 지원하는 값 범위를 벗어나면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 가 발생 합니다. 올려 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;gmtime()&lt;/code&gt; 실패.</target>
        </trans-unit>
        <trans-unit id="6721ed874957a99d85058625f923e255c2f32bcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; function. Raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; failure.</source>
          <target state="translated">버전 3.3으로 변경 : 타임 스탬프가 플랫폼 C &lt;code&gt;localtime()&lt;/code&gt; 함수가 지원하는 값 범위를 벗어나면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다 . 올려 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;localtime()&lt;/code&gt; 실패.</target>
        </trans-unit>
        <trans-unit id="aede22ce238476ed68552a051a715b8937992cf1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; functions. Raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; failure.</source>
          <target state="translated">버전 3.3으로 변경 : 타임 스탬프가 플랫폼 C &lt;code&gt;localtime()&lt;/code&gt; 또는 &lt;code&gt;gmtime()&lt;/code&gt; 함수에서 지원하는 값 범위를 벗어나면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 가 발생 합니다. 올려 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;localtime()&lt;/code&gt; 또는 &lt;code&gt;gmtime()&lt;/code&gt; 실패.</target>
        </trans-unit>
        <trans-unit id="283162dba9dc1507d00958e646bbc50355a26e1f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; on unsupported Authentication Scheme.</source>
          <target state="translated">버전 3.3으로 변경 : 지원되지 않는 인증 체계에서 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 발생&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62cbf46a05f6cebf0bc77b8742797bb7c9a40901" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Removed obsolete &lt;code&gt;division_warning&lt;/code&gt; attribute.</source>
          <target state="translated">버전 3.3으로 변경 : 더 이상 사용되지 않는 &lt;code&gt;division_warning&lt;/code&gt; 속성이 제거되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6003ba40916e765275d2a4ce97ca3eef65f55478" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Removed the &lt;em&gt;strict&lt;/em&gt; argument that was deprecated in 2.4. Added the &lt;em&gt;policy&lt;/em&gt; keyword.</source>
          <target state="translated">버전 3.3으로 변경 : 2.4에서 더 이상 사용되지 않는 &lt;em&gt;엄격한&lt;/em&gt; 인수가 제거 되었습니다. &lt;em&gt;정책&lt;/em&gt; 키워드를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="82364970aee353dc61f1c7299e9f62c0ea15c012" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Removed the &lt;em&gt;strict&lt;/em&gt; argument. Added the &lt;em&gt;policy&lt;/em&gt; keyword.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;엄격한&lt;/em&gt; 인수를 제거했습니다 . &lt;em&gt;정책&lt;/em&gt; 키워드를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="488c3e02d2783912b025e8a4243520b38e1e58ce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Result changed from a tuple to a namedtuple.</source>
          <target state="translated">버전 3.3으로 변경 : 결과가 튜플에서 명명 된 튜플로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="4b1682e7fff1fa39b2ee451f71d70c62ea7ce51c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Return an &lt;a href=&quot;io#io.BufferedReader&quot;&gt;&lt;code&gt;io.BufferedReader&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;io#io.BufferedReader&quot;&gt; &lt;code&gt;io.BufferedReader&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="566a178d7b935b1d3a5ee1e338a3cd0ea760a579" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Return type changed from a tuple to a tuple-like object with named attributes.</source>
          <target state="translated">버전 3.3으로 변경 : 반환 유형이 튜플에서 이름이 지정된 튜플과 유사한 객체로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="dbd3c865415b995e391f0bf929078d2703038ee0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Returns the registered subclass, to allow usage as a class decorator.</source>
          <target state="translated">버전 3.3으로 변경 : 클래스 데코레이터로 사용할 수 있도록 등록 된 서브 클래스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4bd3e9a65797c0b6e01dd1d6f29102c2ff122a6a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: See &lt;a href=&quot;#exception-changed&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;#exception-changed&quot;&gt;위&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="0c1a2cf87674da4baa9e5f571b9060b738f7a5e6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Several functions in this module used to raise a &lt;a href=&quot;exceptions#WindowsError&quot;&gt;&lt;code&gt;WindowsError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 모듈의 여러 함수가 &lt;a href=&quot;exceptions#WindowsError&quot;&gt; &lt;code&gt;WindowsError&lt;/code&gt; &lt;/a&gt; 를 발생 시키는 데 사용되었으며 현재 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="e03fa29f1e627103ff6810a4d6e0f4983af4615f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support any error handler.</source>
          <target state="translated">버전 3.3으로 변경 : 모든 오류 처리기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="87de0a0cf13f8964e1b55851645b0d476b712251" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support for multi-stream inputs was added.</source>
          <target state="translated">버전 3.3으로 변경 : 멀티 스트림 입력 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b29728d76d6bebd5fcf75b45c6bc02f84c81c210" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support for name aliases &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; and named sequences &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; has been added.</source>
          <target state="translated">버전 3.3으로 변경 : 이름 별명 &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 및 명명 된 시퀀스 &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;2에&lt;/a&gt; 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3e051a97cbf47c53950a5e78e019c1ccf8e01765" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="56a3718f5f70aa4e0923889f74511d935a686943" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.3에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="128d3b69dea76494c98804d921cc21474f1319b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support was added for &lt;em&gt;filename&lt;/em&gt; being a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; instead of an actual filename.</source>
          <target state="translated">버전 3.3으로 변경 : 실제 파일 이름 대신 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체 인 파일 &lt;/a&gt;&lt;em&gt;이름&lt;/em&gt; 에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e653d071565c010ca49bbeac8eaf6d0713c1c149" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Support was added for &lt;em&gt;filename&lt;/em&gt; being a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; instead of an actual filename.</source>
          <target state="translated">버전 3.3에서 변경 : &lt;em&gt;파일 이름&lt;/em&gt; 이 실제 파일 이름 대신 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;파일 개체 인&lt;/a&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="edc192130a8cea77b3c04d9510c3b7a62a8d92cc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Tab-completion via the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module is available for commands and command arguments, e.g. the current global and local names are offered as arguments of the &lt;code&gt;p&lt;/code&gt; command.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt; 모듈을 통한 탭 완성 은 명령 및 명령 인수에 사용할 수 있습니다. 예를 들어 현재 전역 및 로컬 이름은 &lt;code&gt;p&lt;/code&gt; 명령의 인수로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="41b3c436a74ddf0f8788d2f9df29df59802e592b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; type was extended to provide the &lt;code&gt;tm_gmtoff&lt;/code&gt; and &lt;code&gt;tm_zone&lt;/code&gt; attributes when platform supports corresponding &lt;code&gt;struct tm&lt;/code&gt; members.</source>
          <target state="translated">버전 3.3으로 변경 : 플랫폼이 해당 &lt;code&gt;struct tm&lt;/code&gt; 멤버를 지원할 때 &lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt; 유형이 &lt;code&gt;tm_gmtoff&lt;/code&gt; 및 &lt;code&gt;tm_zone&lt;/code&gt; 속성 을 제공하도록 확장되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e6018812f8a81d8273123472cc14d86fd2053408" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;a href=&quot;io#io.BufferedIOBase.read1&quot;&gt;&lt;code&gt;io.BufferedIOBase.read1()&lt;/code&gt;&lt;/a&gt; method is now implemented.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;io#io.BufferedIOBase.read1&quot;&gt; &lt;code&gt;io.BufferedIOBase.read1()&lt;/code&gt; &lt;/a&gt; 메소드가 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="da3bef4f1409ae766e4b24171bb1043e1d03f2da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;a href=&quot;threading#threading.Condition.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt; method was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;threading#threading.Condition.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; &lt;/a&gt; 메소드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3fea5c111b95f1f394e3a620ec0c5bc085f60e65" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;code&gt;'\u'&lt;/code&gt; and &lt;code&gt;'\U'&lt;/code&gt; escape sequences have been added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;'\u'&lt;/code&gt; 및 &lt;code&gt;'\U'&lt;/code&gt; 이스케이프 시퀀스가 ​​추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b2c8d24a4576f821464364c188f3d5573043f6b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;code&gt;'_'&lt;/code&gt; character is no longer escaped.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;'_'&lt;/code&gt; 문자가 더 이상 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bd204f46cb00cec6ce62673ab117094efd78f2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;code&gt;'a'&lt;/code&gt; (append) mode was added, along with support for reading multi-stream files.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;'a'&lt;/code&gt; (추가) 모드가 추가되어 멀티 스트림 파일 읽기 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f5c4271d2ac1ee43dd84c56e9a420494d3223172" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;code&gt;-g&lt;/code&gt; command line option was removed.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;code&gt;-g&lt;/code&gt; 명령 행 옵션이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="84abcb87ffb2f340518ac165b7634cbc3c2828e8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;code&gt;fileno()&lt;/code&gt;, &lt;code&gt;readable()&lt;/code&gt;, &lt;code&gt;seekable()&lt;/code&gt;, &lt;code&gt;writable()&lt;/code&gt;, &lt;code&gt;read1()&lt;/code&gt; and &lt;code&gt;readinto()&lt;/code&gt; methods were added.</source>
          <target state="translated">버전 3.3에서 변경된 다음 &lt;code&gt;fileno()&lt;/code&gt; , &lt;code&gt;readable()&lt;/code&gt; , &lt;code&gt;seekable()&lt;/code&gt; , &lt;code&gt;writable()&lt;/code&gt; , &lt;code&gt;read1()&lt;/code&gt; 및 &lt;code&gt;readinto()&lt;/code&gt; 메소드를 첨가 하였다.</target>
        </trans-unit>
        <trans-unit id="84fa4908aae22abc200eff9662b1e21e3a28cb87" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;em&gt;handlers&lt;/em&gt; argument was added. Additional checks were added to catch situations where incompatible arguments are specified (e.g. &lt;em&gt;handlers&lt;/em&gt; together with &lt;em&gt;stream&lt;/em&gt; or &lt;em&gt;filename&lt;/em&gt;, or &lt;em&gt;stream&lt;/em&gt; together with &lt;em&gt;filename&lt;/em&gt;).</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;handlers&lt;/em&gt; 인수가 추가되었습니다. 추가 검사 (예 : 호환되지 않는 인수가 지정 캐치 상황에 추가 된 &lt;em&gt;핸들러&lt;/em&gt; 와 함께 &lt;em&gt;스트림&lt;/em&gt; 또는 &lt;em&gt;파일 이름&lt;/em&gt; , 또는 &lt;em&gt;스트림&lt;/em&gt; 과 함께 &lt;em&gt;파일 이름&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="864dd4223a923d43120fbebea62d1eed39962d92" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;em&gt;opener&lt;/em&gt; parameter was added. The &lt;code&gt;'x'&lt;/code&gt; mode was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;오프너&lt;/em&gt; 매개 변수가 추가되었습니다. &lt;code&gt;'x'&lt;/code&gt; 모드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="71970c098147cbc669f2c1453831b523748d00d7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;em&gt;policy&lt;/em&gt; keyword argument was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;정책&lt;/em&gt; 키워드 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="754e25a626bce333641fe20ae1fc978e5122c8ec" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;em&gt;use_builtin_types&lt;/em&gt; flag was added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;use_builtin_types&lt;/em&gt; 플래그가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="fb9b2876700e1de602153b679fa7b24d1edb36aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The &lt;em&gt;write_through&lt;/em&gt; argument has been added.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;em&gt;write_through&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="749331bd3ae29f46f8c529a1e13512e9b8147c20" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The AF_CAN family was added. The AF_RDS family was added.</source>
          <target state="translated">버전 3.3으로 변경 : AF_CAN 제품군이 추가되었습니다. AF_RDS 제품군이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="edbde8ed1af170a05791dbc6fb850f46045911bf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The C module computes &lt;a href=&quot;#decimal.Context.power&quot;&gt;&lt;code&gt;power()&lt;/code&gt;&lt;/a&gt; in terms of the correctly-rounded &lt;a href=&quot;#decimal.Context.exp&quot;&gt;&lt;code&gt;exp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.Context.ln&quot;&gt;&lt;code&gt;ln()&lt;/code&gt;&lt;/a&gt; functions. The result is well-defined but only &amp;ldquo;almost always correctly-rounded&amp;rdquo;.</source>
          <target state="translated">버전 3.3으로 변경 : C 모듈은 올바르게 반올림 된 &lt;a href=&quot;#decimal.Context.exp&quot;&gt; &lt;code&gt;exp()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#decimal.Context.ln&quot;&gt; &lt;code&gt;ln()&lt;/code&gt; &lt;/a&gt; 함수로 &lt;a href=&quot;#decimal.Context.power&quot;&gt; &lt;code&gt;power()&lt;/code&gt; &lt;/a&gt; 를 계산 합니다. 결과는 잘 정의되어 있지만 &quot;거의 항상 올바르게 반올림&quot;됩니다.</target>
        </trans-unit>
        <trans-unit id="df01c7d62072728d140e97aab7166fa1a88049d6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The default &lt;em&gt;encoding&lt;/em&gt; is now &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; instead of &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;. Don&amp;rsquo;t change temporary the locale encoding using &lt;a href=&quot;locale#locale.setlocale&quot;&gt;&lt;code&gt;locale.setlocale()&lt;/code&gt;&lt;/a&gt;, use the current locale encoding instead of the user preferred encoding.</source>
          <target state="translated">버전 3.3으로 변경 : 기본 &lt;em&gt;인코딩&lt;/em&gt; 은 이제 &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; 대신 locale.getpreferredencoding (False &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; 입니다. &lt;a href=&quot;locale#locale.setlocale&quot;&gt; &lt;code&gt;locale.setlocale()&lt;/code&gt; &lt;/a&gt; 을 사용 하여 임시 로케일 인코딩을 변경하지 말고 사용자 선호 인코딩 대신 현재 로케일 인코딩을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7f7517e571260e5e5ce4b5bf08a3553139883a83" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The fragment is now parsed for all URL schemes (unless &lt;em&gt;allow_fragment&lt;/em&gt; is false), in accordance with &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt;. Previously, a whitelist of schemes that support fragments existed.</source>
          <target state="translated">버전 3.3으로 변경 : &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt; 에 따라 조각이 이제 모든 URL 체계에 대해 구문 분석됩니다 ( &lt;em&gt;allow_fragment&lt;/em&gt; 가 false가 아닌 경우 ) . 이전에는 조각을 지원하는 체계의 화이트리스트가있었습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb32d53d36a936bbe07b2dd89df0443ef4cb4fef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The function is based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 함수는 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; 에&lt;/a&gt; 직접 기반합니다 .</target>
        </trans-unit>
        <trans-unit id="757d11dcb56b8617750b43ac8b543297e90eab0e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: The term &amp;ldquo;Python&amp;rdquo; is replaced with implementation specific term like &amp;ldquo;CPython&amp;rdquo;, &amp;ldquo;Jython&amp;rdquo; etc.</source>
          <target state="translated">버전 3.3으로 변경 : &quot;Python&quot;이라는 용어는 &quot;CPython&quot;, &quot;Jython&quot;등과 같은 구현 관련 용어로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="156131e91a9c094f1cc30cd828b1404d5c72b8ce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This class was made a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 클래스는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="336239ceb888ed4ad1109ce4ff02af56bd6e3248" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This function is now IPv6-compatible.</source>
          <target state="translated">버전 3.3으로 변경 :이 기능은 이제 IPv6 호환입니다.</target>
        </trans-unit>
        <trans-unit id="70a92158ffee050f192fc93cddce4f291cf217f3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This function used to be called unconditionally.</source>
          <target state="translated">버전 3.3으로 변경 :이 함수는 무조건 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="03e1ec6c8e0c7e73547c862c4bc53f3959ce219e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This function used to raise &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 함수 는 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; 를 발생&lt;/a&gt; 시키는 데 사용되었으며 현재 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="2dea196089a9105263428b2bcbe32f20011e5242" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This is now a synonym of the built-in &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 이것은 이제 내장 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="a5b6cdb51aa3be9be8b51fdd9a0601d4b91643ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This method used to raise &lt;a href=&quot;socket#socket.error&quot;&gt;&lt;code&gt;socket.error&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 :이 메소드 는 &lt;a href=&quot;socket#socket.error&quot;&gt; &lt;code&gt;socket.error&lt;/code&gt; &lt;/a&gt; 를 발생 시키는 데 사용 되었으며 , 이는 이제 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="151a3a69c64d539223af8946a1fee10e9491d742" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This module will use a fast implementation whenever available.</source>
          <target state="translated">버전 3.3에서 변경 :이 모듈은 가능할 때마다 빠른 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="23872637ea6b978ceb83b8e9713c8bb5636485e5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: This module will use a fast implementation whenever available. The &lt;code&gt;xml.etree.cElementTree&lt;/code&gt; module is deprecated.</source>
          <target state="translated">버전 3.3으로 변경 :이 모듈은 가능할 때마다 빠른 구현을 사용합니다. &lt;code&gt;xml.etree.cElementTree&lt;/code&gt; 의 모듈이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f07c10707dc4517691a2bbd4c447ffb4243f732" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 내부 패키지에 의존하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로 업데이트&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt; PEP 302&lt;/strong&gt;&lt;/a&gt; 가져 오기 에뮬레이션.</target>
        </trans-unit>
        <trans-unit id="0f721b03e7052755159a78f623e788b6116148cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 패키지 내부 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 302를 사용&lt;/strong&gt;&lt;/a&gt; 하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로하도록 업데이트&lt;strong&gt;&lt;/strong&gt; 가져 오기 에뮬레이션 .</target>
        </trans-unit>
        <trans-unit id="5643c9abd989a6886249f1bf67229cdfedc5b400" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 패키지 내부 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 302를 사용&lt;/strong&gt;&lt;/a&gt; 하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로하도록 업데이트&lt;strong&gt;&lt;/strong&gt; 가져 오기 에뮬레이션 .</target>
        </trans-unit>
        <trans-unit id="949f7e4dd81c73dcf6fedb4c4bd51511b5d0e576" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 패키지 내부 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 302를 사용&lt;/strong&gt;&lt;/a&gt; 하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로하도록 업데이트&lt;strong&gt;&lt;/strong&gt; 가져 오기 에뮬레이션 .</target>
        </trans-unit>
        <trans-unit id="cb79999d305d58f44c64f9762299d9e691263768" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 패키지 내부 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 302를 사용&lt;/strong&gt;&lt;/a&gt; 하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로하도록 업데이트&lt;strong&gt;&lt;/strong&gt; 가져 오기 에뮬레이션 .</target>
        </trans-unit>
        <trans-unit id="587803df1a21999310a3c3cdb653f605fe057352" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Updated to be based directly on &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; rather than relying on the package internal &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; import emulation.</source>
          <target state="translated">버전 3.3으로 변경 : 패키지 내부 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 302를 사용&lt;/strong&gt;&lt;/a&gt; 하지 않고 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 직접 기반으로하도록 업데이트&lt;strong&gt;&lt;/strong&gt; 가져 오기 에뮬레이션 .</target>
        </trans-unit>
        <trans-unit id="78ec30e96ff42f0970f886a732a78b11103ad254" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: When &lt;em&gt;universal_newlines&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the class uses the encoding &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;. See the &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; class for more information on this change.</source>
          <target state="translated">버전 3.3에서 변경 : 때 &lt;em&gt;universal_newlines이&lt;/em&gt; 있다 &lt;code&gt;True&lt;/code&gt; , 클래스가 인코딩 사용 &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; . &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; 를&lt;/a&gt; 참조하십시오.이 변경에 대한 자세한 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b7bb012ec7246baa0ce838675c3e622a42f645ea" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: When one of the worker processes terminates abruptly, a &lt;code&gt;BrokenProcessPool&lt;/code&gt; error is now raised. Previously, behaviour was undefined but operations on the executor or its futures would often freeze or deadlock.</source>
          <target state="translated">버전 3.3으로 변경 : 작업자 프로세스 중 하나가 갑자기 종료되면 &lt;code&gt;BrokenProcessPool&lt;/code&gt; 오류가 발생합니다. 이전에는 동작이 정의되지 않았지만 실행기 또는 해당 미래의 작업이 종종 정지되거나 교착 상태에 빠졌습니다.</target>
        </trans-unit>
        <trans-unit id="06d3713ab79fffe023c72889d8e41a398bff4060" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: Windows errors used to raise &lt;a href=&quot;exceptions#WindowsError&quot;&gt;&lt;code&gt;WindowsError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.3 버전에서 변경 사항 : Windows 오류가 발생하는 데 사용 &lt;a href=&quot;exceptions#WindowsError&quot;&gt; &lt;code&gt;WindowsError&lt;/code&gt; &lt;/a&gt; 지금의 별칭, &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9837efc7d4d55cfba7e486263f87ad736c84c57a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: changed from a factory function to a class.</source>
          <target state="translated">버전 3.3으로 변경 : 팩토리 함수에서 클래스로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="2e239c631f45240a4a34faa83d895f57c6248232" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: format &lt;code&gt;'B'&lt;/code&gt; is now handled according to the struct module syntax. This means that &lt;code&gt;memoryview(b'abc')[0] == b'abc'[0] == 97&lt;/code&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : 이제 &lt;code&gt;'B'&lt;/code&gt; 형식 이 struct 모듈 구문에 따라 처리됩니다. 이것은 &lt;code&gt;memoryview(b'abc')[0] == b'abc'[0] == 97&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="44c54361765c0e4ae45d43c8f941cfc756a89a4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: get_method now looks at the value of &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;Request.method&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3으로 변경 : get_method는 이제 &lt;a href=&quot;#urllib.request.Request.method&quot;&gt; &lt;code&gt;Request.method&lt;/code&gt; &lt;/a&gt; 값을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="fa92dbd4ff44cdb6103171e2d22b2aef2420bf61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: source_address argument was added.</source>
          <target state="translated">버전 3.3으로 변경 : source_address 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a42a45107c87d4dac88da16ee4145ce7f54e97a6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.3: the truncate method now accepts a &lt;code&gt;size&lt;/code&gt; argument.</source>
          <target state="translated">버전 3.3으로 변경 : 이제 truncate 메소드가 &lt;code&gt;size&lt;/code&gt; 인수를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="395bcffe514fa2d94f4b7a3150e3afa731be90e1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.</source>
          <target state="translated">버전 3.4에서 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="5f38e5a0f06ff44ce0db5bea0845d36859021c13" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.1: Before Python 3.4.1, if &lt;em&gt;exist_ok&lt;/em&gt; was &lt;code&gt;True&lt;/code&gt; and the directory existed, &lt;a href=&quot;#os.makedirs&quot;&gt;&lt;code&gt;makedirs()&lt;/code&gt;&lt;/a&gt; would still raise an error if &lt;em&gt;mode&lt;/em&gt; did not match the mode of the existing directory. Since this behavior was impossible to implement safely, it was removed in Python 3.4.1. See &lt;a href=&quot;https://bugs.python.org/issue21082&quot;&gt;bpo-21082&lt;/a&gt;.</source>
          <target state="translated">버전 3.4.1에서 변경 : Python 3.4.1 이전에 &lt;em&gt;exist_ok&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 이고 디렉토리가 존재 하는 경우, &lt;em&gt;모드&lt;/em&gt; 가 기존 디렉토리의 모드와 일치하지 않으면 &lt;a href=&quot;#os.makedirs&quot;&gt; &lt;code&gt;makedirs()&lt;/code&gt; &lt;/a&gt; 는 여전히 오류를 발생시킵니다 . 이 동작은 안전하게 구현할 수 없으므로 Python 3.4.1에서 제거되었습니다. &lt;a href=&quot;https://bugs.python.org/issue21082&quot;&gt;bpo-21082를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc59941a11994983f6222659d719d911d0121180" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.2: is_attachment is now a method instead of a property, for consistency with &lt;a href=&quot;email.compat32-message#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4.2에서 변경 : is_attachment는 이제 &lt;a href=&quot;email.compat32-message#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 와의 일관성을 위해 속성 대신 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="c30629967e45db7c2f4064628e68baf4c1416665" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.3: &lt;em&gt;context&lt;/em&gt; was added.</source>
          <target state="translated">버전 3.4.3으로 변경 : &lt;em&gt;컨텍스트&lt;/em&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="2ffd7d0da3915d9cd7972713e2b6d4df0f9a01d2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.3: This class now performs all the necessary certificate and hostname checks by default. To revert to the previous, unverified, behavior &lt;code&gt;ssl._create_unverified_context()&lt;/code&gt; can be passed to the &lt;em&gt;context&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.4.3으로 변경 :이 클래스는 이제 필요한 모든 인증서 및 호스트 이름 확인을 기본적으로 수행합니다. 확인되지 않은 이전 동작으로 &lt;code&gt;ssl._create_unverified_context()&lt;/code&gt; 를 &lt;em&gt;컨텍스트&lt;/em&gt; 로 전달할 수 있습니다.&lt;em&gt;&lt;/em&gt; 매개 변수 .</target>
        </trans-unit>
        <trans-unit id="0f5118775d166c0cfff4d4910031ce3bf447779b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.4: RC4 was dropped from the default cipher string.</source>
          <target state="translated">버전 3.4.4에서 변경 : RC4가 기본 암호 문자열에서 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="a140d62f80072759bd32e3f6b9ade383a61f400a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4.4: The &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;reuse_address&lt;/em&gt;, &lt;em&gt;reuse_port, *allow_broadcast&lt;/em&gt;, and &lt;em&gt;sock&lt;/em&gt; parameters were added.</source>
          <target state="translated">버전 3.4.4에서 변경 : &lt;em&gt;family&lt;/em&gt; , &lt;em&gt;proto&lt;/em&gt; , &lt;em&gt;flags&lt;/em&gt; , &lt;em&gt;reuse_address&lt;/em&gt; , &lt;em&gt;reuse_port, * allow_broadcast&lt;/em&gt; 및 &lt;em&gt;sock&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c7ab44936d40c41eedf93182b834f58358f9412e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4:</source>
          <target state="translated">버전 3.4으로 변경 :</target>
        </trans-unit>
        <trans-unit id="cfd827ec3898feda669dcd2d5b7d1e8a49429023" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; now uses &lt;a href=&quot;inspect#inspect.signature&quot;&gt;&lt;code&gt;inspect.signature()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;inspect#inspect.getfullargspec&quot;&gt;&lt;code&gt;inspect.getfullargspec()&lt;/code&gt;&lt;/a&gt; to extract signature information from callables.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; 은&lt;/a&gt; 이제 &lt;a href=&quot;inspect#inspect.signature&quot;&gt; &lt;code&gt;inspect.signature()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;inspect#inspect.getfullargspec&quot;&gt; &lt;code&gt;inspect.getfullargspec()&lt;/code&gt; &lt;/a&gt; 를 사용하여 호출 가능 파일에서 서명 정보를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="8099d9be509a1d7cf9205db0b7544b3df794c0f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;a href=&quot;#pty.spawn&quot;&gt;&lt;code&gt;spawn()&lt;/code&gt;&lt;/a&gt; now returns the status value from &lt;a href=&quot;os#os.waitpid&quot;&gt;&lt;code&gt;os.waitpid()&lt;/code&gt;&lt;/a&gt; on the child process.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;#pty.spawn&quot;&gt; &lt;code&gt;spawn()&lt;/code&gt; &lt;/a&gt; 이제 자식 프로세스의 &lt;a href=&quot;os#os.waitpid&quot;&gt; &lt;code&gt;os.waitpid()&lt;/code&gt; &lt;/a&gt; 에서 상태 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e6171c1370057c3ea38cb58b0beb916f35c2682d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised when the handshake isn&amp;rsquo;t done. The returned dictionary includes additional X509v3 extension items such as &lt;code&gt;crlDistributionPoints&lt;/code&gt;, &lt;code&gt;caIssuers&lt;/code&gt; and &lt;code&gt;OCSP&lt;/code&gt; URIs.</source>
          <target state="translated">버전 3.4으로 변경 : 핸드 쉐이크가 완료되지 않으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 리턴 된 사전에는 &lt;code&gt;crlDistributionPoints&lt;/code&gt; , &lt;code&gt;caIssuers&lt;/code&gt; 및 &lt;code&gt;OCSP&lt;/code&gt; URI 와 같은 추가 X509v3 확장 항목이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5ba273c4f668a577dc57c00d8dd5f50da67de5b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;Module specs&lt;/a&gt; were introduced in Python 3.4, by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;. Earlier versions of Python looked for a method called &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_module&quot;&gt;&lt;code&gt;find_module()&lt;/code&gt;&lt;/a&gt;. This is still called as a fallback if a &lt;a href=&quot;#sys.meta_path&quot;&gt;&lt;code&gt;meta_path&lt;/code&gt;&lt;/a&gt; entry doesn&amp;rsquo;t have a &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 451에&lt;/strong&gt;&lt;/a&gt; 의해 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;모듈 사양&lt;/a&gt; 이 Python 3.4에 도입되었습니다 . 이전 버전의 Python은 &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_module&quot;&gt; &lt;code&gt;find_module()&lt;/code&gt; &lt;/a&gt; 이라는 메소드를 찾았습니다 . &lt;a href=&quot;#sys.meta_path&quot;&gt; &lt;code&gt;meta_path&lt;/code&gt; &lt;/a&gt; 항목에 &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt; 메소드 가없는 경우이를 대체로 호출 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acd87538aae82c2ab890e4b8798824510854da81" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;Module specs&lt;/a&gt; were introduced in Python 3.4, by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;. Earlier versions of Python looked for a method called &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_module&quot;&gt;&lt;code&gt;find_module()&lt;/code&gt;&lt;/a&gt;. This is still called as a fallback if a &lt;a href=&quot;#sys.meta_path&quot;&gt;&lt;code&gt;meta_path&lt;/code&gt;&lt;/a&gt; entry doesn&amp;rsquo;t have a &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;모듈 사양&lt;/a&gt; 은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 451에&lt;/strong&gt;&lt;/a&gt; 의해 Python 3.4에서 도입되었습니다 . 이전 버전의 Python은 &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_module&quot;&gt; &lt;code&gt;find_module()&lt;/code&gt; &lt;/a&gt; 이라는 메서드를 찾았습니다 . &lt;a href=&quot;#sys.meta_path&quot;&gt; &lt;code&gt;meta_path&lt;/code&gt; &lt;/a&gt; 항목에 &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt; 메서드 가없는 경우에도 여전히 폴백으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a26d01dbc58b9dacc8ed4b84d0af68f3c9045e6b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;code&gt;object().__format__(format_spec)&lt;/code&gt; raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;format_spec&lt;/em&gt; is not an empty string.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;code&gt;object().__format__(format_spec)&lt;/code&gt; 은 &lt;em&gt;format_spec&lt;/em&gt; 이 빈 문자열이 아닌 경우 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4026f66743a12f74d0573c5ed037e6e36de6c8e7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;code&gt;replace&lt;/code&gt; keyword was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;replace&lt;/code&gt; 키워드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="2b6ed44ee019da69bd2b411a0bf8154817470dca" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;em&gt;atTime&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;atTime&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c1b526295e7900da9be0744a7be7d2aa96444856" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;em&gt;convert_charrefs&lt;/em&gt; keyword argument added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;convert_charrefs&lt;/em&gt; 키워드 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="98081d0f9a0ff4080c02b5129def1aaa36bf8257" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: &lt;em&gt;spawn&lt;/em&gt; added on all unix platforms, and &lt;em&gt;forkserver&lt;/em&gt; added for some unix platforms. Child processes no longer inherit all of the parents inheritable handles on Windows.</source>
          <target state="translated">버전 3.4으로 변경 : 모든 유닉스 플랫폼 및 &lt;em&gt;포크 서버&lt;/em&gt; 에 &lt;em&gt;스폰이&lt;/em&gt; 추가되었습니다.&lt;em&gt;&lt;/em&gt; 추가되었습니다. 자식 프로세스는 더 이상 Windows의 부모 상속 가능한 모든 핸들을 상속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6d04307a782375731bd641d8eb9da0a054d6025" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: A default value can now be set in subclasses; previously it could only be set via the constructor argument.</source>
          <target state="translated">버전 3.4으로 변경 : 이제 서브 클래스에서 기본값을 설정할 수 있습니다. 이전에는 생성자 인수를 통해서만 설정할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="2a02cf8797f7d0cd51db56dfd39e3c0c369e913f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Activation of rlcompleter and history was made automatic.</source>
          <target state="translated">버전 3.4으로 변경 : rlcompleter 활성화 및 히스토리가 자동으로 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="2cc1def8050bf639dc57de7e6271ab7d4a7583ec" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Add &lt;a href=&quot;#os.O_PATH&quot;&gt;&lt;code&gt;O_PATH&lt;/code&gt;&lt;/a&gt; on systems that support it. Add &lt;a href=&quot;#os.O_TMPFILE&quot;&gt;&lt;code&gt;O_TMPFILE&lt;/code&gt;&lt;/a&gt;, only available on Linux Kernel 3.11 or newer.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#os.O_PATH&quot;&gt; &lt;code&gt;O_PATH&lt;/code&gt; &lt;/a&gt; 를 지원하는 시스템에서 O_PATH 를 추가 하십시오. Linux Kernel 3.11 이상에서만 사용 가능한 &lt;a href=&quot;#os.O_TMPFILE&quot;&gt; &lt;code&gt;O_TMPFILE&lt;/code&gt; 을&lt;/a&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="5978254599ae66154d67048f3d38d3103c725e78" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Add the optional &lt;em&gt;inheritable&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;상속 가능한&lt;/em&gt; 선택적 매개 변수를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="40c410c6ace65293887bf46580d4d4e1f59b9963" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt;&lt;code&gt;readlines()&lt;/code&gt;&lt;/a&gt; support. The mock of &lt;code&gt;read()&lt;/code&gt; changed to consume &lt;em&gt;read_data&lt;/em&gt; rather than returning it on each call.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt; &lt;code&gt;readlines()&lt;/code&gt; &lt;/a&gt; 지원이 추가되었습니다 . &lt;code&gt;read()&lt;/code&gt; 의 모의는 각 호출에서 그것을 반환하지 않고 &lt;em&gt;read_data&lt;/em&gt; 를 소비하도록 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="03d34635bde702641e5fe04f660e8d31a31cd6d1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added &lt;code&gt;isolated&lt;/code&gt; attribute for &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id2&quot;&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/a&gt;&lt;code&gt;isolated&lt;/code&gt; flag.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id2&quot;&gt; &lt;code&gt;-I&lt;/code&gt; &lt;/a&gt; &lt;code&gt;isolated&lt;/code&gt; 플래그에 대한 &lt;code&gt;isolated&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="191a99ea63def6a407c2b1a7aa693cfc8065e7b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added &lt;code&gt;isolated&lt;/code&gt; attribute for &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id2&quot;&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/a&gt;&lt;code&gt;isolated&lt;/code&gt; flag.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id2&quot;&gt; &lt;code&gt;-I&lt;/code&gt; &lt;/a&gt; &lt;code&gt;isolated&lt;/code&gt; 플래그에 &lt;code&gt;isolated&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ddbc1738db84bb887e526156e50969e6f1ae8423" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added &lt;em&gt;algorithm&lt;/em&gt;, &lt;em&gt;hash_bits&lt;/em&gt; and &lt;em&gt;seed_bits&lt;/em&gt;</source>
          <target state="translated">버전 3.4으로 변경 : 추가 된 &lt;em&gt;알고리즘&lt;/em&gt; , &lt;em&gt;hash_bits&lt;/em&gt; 및 &lt;em&gt;seed_bits&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cd49cb681d6851e8d0cd011990436d8b9c6679b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added &lt;em&gt;file&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;파일&lt;/em&gt; 매개 변수 추가 .</target>
        </trans-unit>
        <trans-unit id="0c854f2bcb52cad647c480dcbb24cad8906ec6d5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added Windows support.</source>
          <target state="translated">버전 3.4으로 변경 : Windows 지원 추가.</target>
        </trans-unit>
        <trans-unit id="29e18949dee71c5fbb54587b651d26250e3c56c1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added context manager support.</source>
          <target state="translated">버전 3.4으로 변경 : 컨텍스트 관리자 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5475d23a05e41960dc8ea1697f3be29e40b52f38" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added native support for the context management protocol to the objects returned by &lt;a href=&quot;#dbm.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#dbm.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 반환 한 객체에 컨텍스트 관리 프로토콜에 대한 기본 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="78f93c6a6c62dc0065dfbf11e79df09adced7421" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added signature introspection on specced and autospecced mock objects.</source>
          <target state="translated">버전 3.4으로 변경 : Specced 및 Autospecced 모의 객체에 서명 내성을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="1109c41b946e0113c0b9f85e899f6539ffb0ee36" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for data URLs.</source>
          <target state="translated">버전 3.4으로 변경 : 데이터 URL에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="526372381dc98e96560bf12c713e6db740023adf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for int- and float-derived Enum classes.</source>
          <target state="translated">버전 3.4으로 변경 : int 및 float 파생 Enum 클래스에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="571d09d5619200fab43512dc5f2c9599cb13fa73" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for the &lt;code&gt;&quot;x&quot;&lt;/code&gt; and &lt;code&gt;&quot;xb&quot;&lt;/code&gt; modes.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;&quot;x&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;xb&quot;&lt;/code&gt; 모드에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f90339ca71fa907f10decb12dbc43084d801d4b7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for the &lt;code&gt;&quot;x&quot;&lt;/code&gt;, &lt;code&gt;&quot;xb&quot;&lt;/code&gt; and &lt;code&gt;&quot;xt&quot;&lt;/code&gt; modes.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;&quot;x&quot;&lt;/code&gt; , &lt;code&gt;&quot;xb&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;xt&quot;&lt;/code&gt; 모드에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a50f63b20804683db81da97d1eb2b59d826128df" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for the &lt;code&gt;'x'&lt;/code&gt; and &lt;code&gt;'xb'&lt;/code&gt; modes.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;'x'&lt;/code&gt; 및 &lt;code&gt;'xb'&lt;/code&gt; 모드에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6ce1c4fad339a7dd252b5262cee9706df7c74600" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for the &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'xb'&lt;/code&gt; and &lt;code&gt;'xt'&lt;/code&gt; modes.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;'x'&lt;/code&gt; , &lt;code&gt;'xb'&lt;/code&gt; 및 &lt;code&gt;'xt'&lt;/code&gt; 모드에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1bbaee557807e9060a8c696e88dd2d82d36bb705" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added support for unseekable files.</source>
          <target state="translated">버전 3.4으로 변경 : 보이지 않는 파일에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4b0f79c0104ad00869bcd21bc995b1c280408619" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added the &lt;a href=&quot;#weakref.ref.__callback__&quot;&gt;&lt;code&gt;__callback__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#weakref.ref.__callback__&quot;&gt; &lt;code&gt;__callback__&lt;/code&gt; &lt;/a&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4135932f343ee84f9211f35833dbfea4d4c31749" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added the &lt;code&gt;with_pip&lt;/code&gt; parameter</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;with_pip&lt;/code&gt; 매개 변수 추가</target>
        </trans-unit>
        <trans-unit id="b56a1789988430ab454180c3c31c037c03c3688e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added the &lt;em&gt;compact&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;컴팩트&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="47a23f52dceaa9e85c84092319a8e70d89a328fa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added the &lt;em&gt;uri&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;uri&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="25736294f42a79674ab81892c16785516fa601d4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Added the POSIX permission check.</source>
          <target state="translated">버전 3.4으로 변경 : POSIX 권한 검사가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1dec8ee069c3f97bea30b817a63adf3ae4e0da16" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: An instance of a subclass of &lt;a href=&quot;configparser#configparser.RawConfigParser&quot;&gt;&lt;code&gt;RawConfigParser&lt;/code&gt;&lt;/a&gt; is now accepted as a value for &lt;code&gt;fname&lt;/code&gt;. This facilitates:</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;configparser#configparser.RawConfigParser&quot;&gt; &lt;code&gt;RawConfigParser&lt;/code&gt; &lt;/a&gt; 서브 클래스의 인스턴스 가 이제 &lt;code&gt;fname&lt;/code&gt; 의 값으로 승인됩니다 . 이것은 다음을 촉진합니다.</target>
        </trans-unit>
        <trans-unit id="d445304e6c9c42ce2d024598f3da3a5504325d08" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is now accepted.</source>
          <target state="translated">버전 3.4으로 변경 : 모든 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 가 이제 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="07f6b793cdc3b490b5e787cc64437f15fca08826" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; are now accepted by all encoding and decoding functions in this module. Ascii85/Base85 support added.</source>
          <target state="translated">버전 3.4으로 변경 : 이 모듈의 모든 인코딩 및 디코딩 기능은 모든 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 를 수용합니다. Ascii85 / Base85 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cef4072f295b63f39a221241e209fa98d210762a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is now accepted.</source>
          <target state="translated">버전 3.4에서 변경 : 이제 모든 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트&lt;/a&gt; 열류 객체 가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f0c18e14d14bab4c99015def509f9a9b51e2dd3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; are now accepted by all encoding and decoding functions in this module. Ascii85/Base85 support added.</source>
          <target state="translated">버전 3.4에서 변경 : 이제 모든 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트 형 객체&lt;/a&gt; 가이 모듈의 모든 인코딩 및 디코딩 기능에서 허용됩니다. Ascii85 / Base85 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="34ad5355e0b443969aa4c5f9b071aa80a93dcf89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Calls objects in &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; with the current working directory for &lt;code&gt;''&lt;/code&gt; (i.e. the empty string).</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;''&lt;/code&gt; 에 대한 현재 작업 디렉토리 (예 : 빈 문자열) 로 &lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; 의&lt;/a&gt; 객체를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="90851c1fa0579ab96e63f7f5a0c85139bf96b445" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Changed code to use &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; for the byte-code cache file writing. This means file creation/writing semantics now match what &lt;a href=&quot;importlib#module-importlib&quot;&gt;&lt;code&gt;importlib&lt;/code&gt;&lt;/a&gt; does, e.g. permissions, write-and-move semantics, etc. Also added the caveat that &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;cfile&lt;/em&gt; is a symlink or non-regular file.</source>
          <target state="translated">버전 3.4으로 변경 : 바이트 코드 캐시 파일 쓰기에 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; &lt;/a&gt; 를 사용하도록 코드가 변경되었습니다 . 즉, 파일 작성 / 작성 시맨틱은 이제 &lt;a href=&quot;importlib#module-importlib&quot;&gt; &lt;code&gt;importlib&lt;/code&gt; 의&lt;/a&gt; 사용 권한 (예 : 권한, 쓰기 및 이동 시맨틱)과 일치합니다 . 또한 &lt;em&gt;cfile&lt;/em&gt; 이 symlink 또는 비정규 파일 인 경우 &lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt; 가 발생 한다는 경고를 추가했습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15f62ee25d999c03892974e4b445ab6ffe42cfe0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Changes to &lt;a href=&quot;pydoc#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;inspect#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; mean that the reported signatures for callables are now more comprehensive and consistent.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;pydoc#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;inspect#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt; 변경으로 인해 콜 러블에 대해보고 된 서명이 더 포괄적이고 일관성이 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="16f858fa18a0f630b6ed044142ea89d9b478a85b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Changing value of &lt;a href=&quot;#urllib.request.Request.data&quot;&gt;&lt;code&gt;Request.data&lt;/code&gt;&lt;/a&gt; now deletes &amp;ldquo;Content-Length&amp;rdquo; header if it was previously set or calculated.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#urllib.request.Request.data&quot;&gt; &lt;code&gt;Request.data&lt;/code&gt; 의&lt;/a&gt; 값을 변경 하면 &quot;Content-Length&quot;헤더가 이전에 설정되거나 계산 된 경우 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="44d5f160fac2cdd8c00d8b0797f155b4791799d8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Default &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;Request.method&lt;/code&gt;&lt;/a&gt; may be indicated at the class level.</source>
          <target state="translated">버전 3.4으로 변경 : 기본 &lt;a href=&quot;#urllib.request.Request.method&quot;&gt; &lt;code&gt;Request.method&lt;/code&gt; &lt;/a&gt; 가 클래스 레벨에서 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a2bca8cc5f845e17bc4c0e5a3e5ad08a0c7290f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Defaults to &lt;code&gt;None&lt;/code&gt;. Previously the attribute was optional.</source>
          <target state="translated">버전 3.4으로 변경 : 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 이전에는 속성이 선택적이었습니다.</target>
        </trans-unit>
        <trans-unit id="cd9af8a5a1ead9aa86d5deac76392d72c3f65d6a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Following &lt;a href=&quot;https://www.python.org/dev/peps/pep-0442&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 442&lt;/strong&gt;&lt;/a&gt;, objects with a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method don&amp;rsquo;t end up in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;gc.garbage&lt;/code&gt;&lt;/a&gt; anymore.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0442&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 442&lt;/strong&gt;&lt;/a&gt; 다음 에 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; 메서드가있는 &lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;gc.garbage&lt;/code&gt; &lt;/a&gt; 더 이상 gc.garbage로 끝나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f40814599356e90dae440898f1996c72b52f669" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Following &lt;a href=&quot;https://www.python.org/dev/peps/pep-0442&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 442&lt;/strong&gt;&lt;/a&gt;, objects with a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method don&amp;rsquo;t end up in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;gc.garbage&lt;/code&gt;&lt;/a&gt; anymore.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0442&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 442&lt;/strong&gt;&lt;/a&gt; 이후 , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; 메서드를 가진 객체는 더 이상 &lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;gc.garbage&lt;/code&gt; 로 끝나지&lt;/a&gt; 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a9b1b8d61f74a9110108e435e37197e7a3ea30c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Gained &lt;code&gt;create_module()&lt;/code&gt; and &lt;code&gt;exec_module()&lt;/code&gt; methods.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;code&gt;create_module()&lt;/code&gt; 및 &lt;code&gt;exec_module()&lt;/code&gt; 메서드를 얻었 습니다 .</target>
        </trans-unit>
        <trans-unit id="547cf2b670b5087751f804bbc8d353da1247be08" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: If &lt;code&gt;__loader__&lt;/code&gt; is not set, raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;, just like when the attribute is set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;__loader__&lt;/code&gt; 가 설정되지 않은 경우 속성이 &lt;code&gt;None&lt;/code&gt; 으로 설정된 경우와 같이 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="c9cc166a4a4488471a5a970c014c2676723745f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: If &lt;code&gt;port&lt;/code&gt; is specified as &lt;code&gt;None&lt;/code&gt;, a Unix domain socket is created using the value in &lt;code&gt;host&lt;/code&gt; - otherwise, a TCP socket is created.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;port&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 으로 지정 되면 &lt;code&gt;host&lt;/code&gt; 의 값을 사용하여 Unix 도메인 소켓이 작성되고 그렇지 않으면 TCP 소켓이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="3b4201d821fcf51ca7e570776a3cb908e0f29773" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: If &lt;code&gt;port&lt;/code&gt; is specified as &lt;code&gt;None&lt;/code&gt;, a Unix domain socket is created using the value in &lt;code&gt;host&lt;/code&gt; - otherwise, a UDP socket is created.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;port&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 으로 지정 되면 &lt;code&gt;host&lt;/code&gt; 의 값을 사용하여 Unix 도메인 소켓이 작성되고 그렇지 않으면 UDP 소켓이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="abd146ec82e9dd5cb9c0a4d9ef0f66fc246622f8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: If &lt;em&gt;base&lt;/em&gt; is not an instance of &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;base&lt;/em&gt; object has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;base.__index__&lt;/code&gt;&lt;/a&gt; method, that method is called to obtain an integer for the base. Previous versions used &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;base.__int__&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;base.__index__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4 변경 : 경우 &lt;em&gt;염기&lt;/em&gt; 의 인스턴스가 아닌 &lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 상기 &lt;em&gt;베이스&lt;/em&gt; 객체가 갖는 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;base.__index__&lt;/code&gt; &lt;/a&gt; 방법, 그 방법은 기재에 대한 정수를 얻기 위해 호출된다. 이전 버전은 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt; &lt;code&gt;base.__int__&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;base.__index__&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dd842473251a73c4ed73c9335b6ac1eaaf259a2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: If &lt;em&gt;base&lt;/em&gt; is not an instance of &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and the &lt;em&gt;base&lt;/em&gt; object has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;base.__index__&lt;/code&gt;&lt;/a&gt; method, that method is called to obtain an integer for the base. Previous versions used &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;base.__int__&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;base.__index__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4 변경 : 경우 &lt;em&gt;염기&lt;/em&gt; 의 인스턴스가 아닌 &lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 상기 &lt;em&gt;베이스&lt;/em&gt; 객체가 갖는 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;base.__index__&lt;/code&gt; &lt;/a&gt; 방법, 그 방법은 기재에 대한 정수를 얻기 위해 호출된다. 이전 버전에서는 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__int__&quot;&gt; &lt;code&gt;base.__int__&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;base.__index__&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a1b89a264f6b7a4a7914a9d7c7f3eed02c97c37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: In Python 3.3 Parameter objects were allowed to have &lt;code&gt;name&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt; if their &lt;code&gt;kind&lt;/code&gt; was set to &lt;code&gt;POSITIONAL_ONLY&lt;/code&gt;. This is no longer permitted.</source>
          <target state="translated">버전 3.4으로 변경 : Python 3.3 에서 &lt;code&gt;kind&lt;/code&gt; 가 &lt;code&gt;POSITIONAL_ONLY&lt;/code&gt; 로 설정된 경우 Parameter 객체의 &lt;code&gt;name&lt;/code&gt; 이 &lt;code&gt;None&lt;/code&gt; 으로 설정되었습니다 . 더 이상 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0eb94ddce2a2b70c80baf5015bc88b951da8f4e5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: In Python versions earlier than 3.4, this function could also be passed a text level, and would return the corresponding numeric value of the level. This undocumented behaviour was considered a mistake, and was removed in Python 3.4, but reinstated in 3.4.2 due to retain backward compatibility.</source>
          <target state="translated">버전 3.4으로 변경 : 3.4 이전의 Python 버전에서이 함수는 텍스트 레벨로 전달 될 수 있으며 레벨의 해당 숫자 값을 리턴합니다. 이 문서화되지 않은 동작은 실수로 간주되어 Python 3.4에서 제거되었지만 이전 버전과의 호환성을 유지하기 위해 3.4.2에서 복원되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d908f177fb0fa9ccb214dc09fb99718daeafc98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: In earlier versions the &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; held references to each &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;TestSuite.run()&lt;/code&gt;&lt;/a&gt;. Subclasses can restore that behavior by overriding &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : 이전 버전에서 &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;TestSuite.run()&lt;/code&gt; &lt;/a&gt; 다음 에 각 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; 에&lt;/a&gt; 대한 참조를 보유했습니다 . 서브 클래스는 &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt; 를 재정 의하여 해당 동작을 복원 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0bc3e69263470dedfe9997af46d61ac16b2f926" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: In earlier versions, if the target directory already existed, an error was raised, unless the &lt;code&gt;--clear&lt;/code&gt; or &lt;code&gt;--upgrade&lt;/code&gt; option was provided.</source>
          <target state="translated">버전 3.4으로 변경 : 이전 버전에서 대상 디렉토리가 이미 존재하면 &lt;code&gt;--clear&lt;/code&gt; 또는 &lt;code&gt;--upgrade&lt;/code&gt; 옵션을 제공 하지 않으면 오류가 발생 했습니다.</target>
        </trans-unit>
        <trans-unit id="c86338fd0b00bc560e3f0a638fb60d062c1d3ea7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Installs pip by default, added the &lt;code&gt;--without-pip&lt;/code&gt; and &lt;code&gt;--copies&lt;/code&gt; options</source>
          <target state="translated">버전 3.4으로 변경 : 기본적으로 pip를 설치하고 &lt;code&gt;--without-pip&lt;/code&gt; 및 &lt;code&gt;--copies&lt;/code&gt; 옵션을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="fe32c3e42db7b425227e1221f5b509b1889cb005" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Made optional instead of an abstractmethod.</source>
          <target state="translated">버전 3.4으로 변경 : abstractmethod 대신 선택적으로 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="ad7002330735555358c2725a8906c97ef9adcc2f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Modules that raise &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; on import are recorded as skips, not errors. Discovery works for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;. Paths are sorted before being imported so that execution order is the same even if the underlying file system&amp;rsquo;s ordering is not dependent on file name.</source>
          <target state="translated">버전 3.4으로 변경 : 가져올 때 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 를 발생 시키는 모듈은 오류가 아니라 건너 뛰기로 기록됩니다. 발견은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;네임 스페이스 패키지에&lt;/a&gt; 대해 작동 합니다 . 기본 파일 시스템의 순서가 파일 이름에 의존하지 않더라도 실행 순서가 동일하도록 가져 오기 전에 경로가 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="22bc6de6054cb77632e3b7c42fefff8160655257" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Modules that raise &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt; on import are recorded as skips, not errors. Discovery works for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;. Paths are sorted before being imported so that execution order is the same even if the underlying file system&amp;rsquo;s ordering is not dependent on file name.</source>
          <target state="translated">버전 3.4에서 변경 : 가져올 때 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 를 발생 시키는 모듈은 오류가 아니라 건너 뛰기로 기록됩니다. 검색은 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;네임 스페이스 패키지에&lt;/a&gt; 대해 작동 합니다 . 기본 파일 시스템의 순서가 파일 이름에 종속되지 않더라도 실행 순서가 동일하도록 가져 오기 전에 경로가 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="f36f170dd5c2e2b197775ec7ceaa6711602fade0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: New API, old API deprecated. Support for binary format plists added.</source>
          <target state="translated">버전 3.4으로 변경 : 새 API, 더 이상 사용되지 않는 API. 이진 형식 plist에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="7c31411fdd8d9dbbb4eb43dff4ced02079abdaa2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: New optional argument &lt;em&gt;cadata&lt;/em&gt;</source>
          <target state="translated">버전 3.4으로 변경 : 새로운 선택적 인수 &lt;em&gt;cadata&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd1eb972a72b47de6f93331e4945058dc23a975b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: No longer abstract and a concrete implementation is provided.</source>
          <target state="translated">버전 3.4으로 변경 : 더 이상 추상적이지 않으며 구체적인 구현이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="debcc86ab4f4fb10ac757de15d5c07180d4e694a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: No longer raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; when called.</source>
          <target state="translated">버전 3.4으로 변경 : 더 이상 호출 될 때 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 가&lt;/a&gt; 발생 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="27bfa4204ea6c9bcbb6425624adbd8df86de7a4f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Now supported on Unix when the &lt;code&gt;'spawn'&lt;/code&gt; start method is used.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;'spawn'&lt;/code&gt; 시작 방법을 사용할 때 Unix에서 지원 됩니다.</target>
        </trans-unit>
        <trans-unit id="467051e7fb6d03c391fae3c8489aff2376a143db" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Parameter &lt;em&gt;key&lt;/em&gt; can be a bytes or bytearray object. Parameter &lt;em&gt;msg&lt;/em&gt; can be of any type supported by &lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;. Parameter &lt;em&gt;digestmod&lt;/em&gt; can be the name of a hash algorithm.</source>
          <target state="translated">버전 3.4으로 변경 : 매개 변수 &lt;em&gt;키&lt;/em&gt; 는 바이트 또는 바이트 배열 객체 일 수 있습니다. 매개 변수 &lt;em&gt;msg&lt;/em&gt; 는 &lt;a href=&quot;hashlib#module-hashlib&quot;&gt; &lt;code&gt;hashlib&lt;/code&gt; 가&lt;/a&gt; 지원하는 모든 유형이 될 수 있습니다 . 매개 변수 &lt;em&gt;digestmod&lt;/em&gt; 는 해시 알고리즘의 이름 &lt;em&gt;일&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79d643e40c80217000c5c3ae86d2aee85d4a3123" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Parameter &lt;em&gt;msg&lt;/em&gt; can be of any type supported by &lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : 매개 변수 &lt;em&gt;msg&lt;/em&gt; 는 &lt;a href=&quot;hashlib#module-hashlib&quot;&gt; &lt;code&gt;hashlib&lt;/code&gt; 가&lt;/a&gt; 지원하는 모든 유형일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2987a7f5b79bd5b384b2283f0c8e1ee7a020b260" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Raise &lt;a href=&quot;#shutil.SameFileError&quot;&gt;&lt;code&gt;SameFileError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#shutil.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. Since the former is a subclass of the latter, this change is backward compatible.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#shutil.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#shutil.SameFileError&quot;&gt; &lt;code&gt;SameFileError&lt;/code&gt; 발생&lt;/a&gt; . 전자는 후자의 서브 클래스이므로이 변경 사항은 이전 버전과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="7f1443d8e0ea3988ac2fd822449e2b21114f3834" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; when called instead of &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. Functionality provided when &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt;&lt;code&gt;exec_module()&lt;/code&gt;&lt;/a&gt; is available.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 대신 호출 될 때 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 발생 . &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt; &lt;code&gt;exec_module()&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있을 때 제공되는 기능 .</target>
        </trans-unit>
        <trans-unit id="a790480f9c688dbb42991686467d06bbb1ec7f3d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 OSError &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29f6f64efd83eceff97497a0065b956904b9839b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Raises &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 대신 ImportError 가 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f7b1849049a9f4ef1fa0e6adaec33c7b57aa4023" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 대신 OSError &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd2debda84dbafc528845a8a5b0621620958fa37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Restoration of the &lt;code&gt;rot13&lt;/code&gt; alias.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;rot13&lt;/code&gt; 별칭의 복원 .</target>
        </trans-unit>
        <trans-unit id="c04b0364fcb059a7cb84c1e4f213d9e01eee741b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Restoration of the aliases for the binary transforms.</source>
          <target state="translated">버전 3.4으로 변경 : 이진 변환에 대한 별칭의 복원.</target>
        </trans-unit>
        <trans-unit id="f187c26cd8b21bef0bac395512a2a5b23c3c1f5c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returning NotImplemented from the underlying comparison function for unrecognised types is now supported.</source>
          <target state="translated">버전 3.4으로 변경 : 인식 할 수없는 유형의 기본 비교 함수에서 NotImplemented를 반환하는 기능이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8f41a828d79435b6ab92d1af9504085545ab2c67" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returns &lt;code&gt;(None, [])&lt;/code&gt; instead of raising &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. Uses &lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; when available to provide functionality.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 대신 &lt;code&gt;(None, [])&lt;/code&gt; 반환 합니다. 용도는 &lt;a href=&quot;#importlib.abc.PathEntryFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt; 사용할 수 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6d952c0ebc1d5df5ba1e6a5aa894da4845dbde8a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returns &lt;code&gt;False&lt;/code&gt; if there were any &lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt;&lt;code&gt;unexpectedSuccesses&lt;/code&gt;&lt;/a&gt; from tests marked with the &lt;a href=&quot;#unittest.expectedFailure&quot;&gt;&lt;code&gt;expectedFailure()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#unittest.expectedFailure&quot;&gt; &lt;code&gt;expectedFailure()&lt;/code&gt; &lt;/a&gt; 데코레이터 로 표시된 테스트에서 &lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt; &lt;code&gt;unexpectedSuccesses&lt;/code&gt; &lt;/a&gt; &lt;code&gt;False&lt;/code&gt; 있으면 False를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5bff63aa286374c7c1b24af1e59040c5f3c8d871" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returns &lt;code&gt;None&lt;/code&gt; when called instead of &lt;code&gt;NotImplemented&lt;/code&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;NotImplemented&lt;/code&gt; 대신 호출하면 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3afd017dbcb784877342e6dae03c8efa3fcc7b6a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returns &lt;code&gt;None&lt;/code&gt; when called instead of raising &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 대신 호출하면 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3f2161d9c0a8364c2f9af9c590df8eed0c9a24d8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Returns &lt;code&gt;None&lt;/code&gt; when called instead of raising &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. Can use &lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; to provide functionality.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 대신 호출하면 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다. 사용할 수 &lt;a href=&quot;#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt; 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5cf35a6f0a5e015eb1a94d255b121d8bbe30b843" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: SMTPException became subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">버전 3.4으로 변경 : SMTPException이 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 의&lt;/a&gt; 서브 클래스가되었습니다.</target>
        </trans-unit>
        <trans-unit id="775ce8cb8144e0f24ad9c9d70e71eeaac13dc758" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Set &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; unconditionally to support reloading.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; 를&lt;/a&gt; 무조건 재로드를 지원하도록 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2b4673c5a407365ac2f83532bf1773740e35afa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Set &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; unconditionally to support reloading.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; 를&lt;/a&gt; 무조건 리로딩을 지원하도록 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="7b5fc5dcf3b71f3fdf03471e15d08040d35c8f60" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Set &lt;code&gt;__loader__&lt;/code&gt; if set to &lt;code&gt;None&lt;/code&gt;, as if the attribute does not exist.</source>
          <target state="translated">버전 3.4으로 변경 : 속성이 존재하지 않는 것처럼 &lt;code&gt;None&lt;/code&gt; 으로 설정된 경우 &lt;code&gt;__loader__&lt;/code&gt; 를 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b49a155d5942450cda9e71ed9c5285f7ece9125" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for 24-bit samples was added. All functions now accept any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. String input now results in an immediate error.</source>
          <target state="translated">버전 3.4으로 변경 : 24 비트 샘플에 대한 지원이 추가되었습니다. 모든 함수는 이제 모든 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​같은 객체를&lt;/a&gt; 허용 합니다 . 문자열 입력으로 인해 즉시 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="57f8f348c076b10d754390ebf1c4949240b7ddf3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for 24-bit samples was added. All functions now accept any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. String input now results in an immediate error.</source>
          <target state="translated">버전 3.4에서 변경 : 24 비트 샘플에 대한 지원이 추가되었습니다. 모든 함수는 이제 모든 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트 열류 객체를&lt;/a&gt; 받습니다. 이제 문자열 입력으로 인해 즉각적인 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="04716b7ca636d60051f842d727a4cf568489b516" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="281b3984a9843d1b3f79a3a55f6a9cb7e2baa9ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added. The new file descriptor is now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다. 새로운 파일 디스크립터는 이제 상속 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="e8b98e3286559b747b7c430beee6f75021f2664c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="39c25ae46dba9bbbf7fe0df4ade48bae6ee1995c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added. The new file descriptor is now non-inheritable.</source>
          <target state="translated">버전 3.4에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다. 이제 새 파일 설명자는 상속 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d271640fd718b970379480ae12d403d633a4dd54" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Support for the &lt;em&gt;input&lt;/em&gt; keyword argument was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;입력&lt;/em&gt; 키워드 인수에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="2a07e20e374c469f8c336659f7dd5865b14ce6a2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Test discovery supports &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : 테스트 감지는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-namespace-package&quot;&gt;네임 스페이스 패키지를&lt;/a&gt; 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="e68322c8c36c3d03cb8fccfd235a9994c9073785" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Test discovery supports &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;namespace packages&lt;/a&gt;.</source>
          <target state="translated">버전 3.4에서 변경 : 테스트 검색은 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-namespace-package&quot;&gt;네임 스페이스 패키지를&lt;/a&gt; 지원 합니다 .</target>
        </trans-unit>
        <trans-unit id="f7fc3490bfc67290951e29ee803970bdf738fa9b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;a href=&quot;#OSError.filename&quot;&gt;&lt;code&gt;filename&lt;/code&gt;&lt;/a&gt; attribute is now the original file name passed to the function, instead of the name encoded to or decoded from the filesystem encoding. Also, the &lt;em&gt;filename2&lt;/em&gt; constructor argument and attribute was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#OSError.filename&quot;&gt; &lt;code&gt;filename&lt;/code&gt; &lt;/a&gt; 속성은 이제 파일 시스템 인코딩으로 인코딩되거나 디코딩 된 이름 대신 함수에 전달 된 원래 파일 이름입니다. 또한 &lt;em&gt;filename2&lt;/em&gt; 생성자 인수 및 속성이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e6b7728ab161788cdcfdabee630268fda9ced93e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;'surrogatepass'&lt;/code&gt; error handlers now works with utf-16* and utf-32* codecs.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;'surrogatepass'&lt;/code&gt; 오류 처리기는 이제 utf-16 * 및 utf-32 * 코덱에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b012f8bfb01a7c7b8b398a744b6d06d628f2da20" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;'x'&lt;/code&gt; (exclusive creation) mode was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;'x'&lt;/code&gt; (독점 생성) 모드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1bbbe4636cf2cacbdeab7e19b9cbff7eed060f34" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;ST_NODEV&lt;/code&gt;, &lt;code&gt;ST_NOEXEC&lt;/code&gt;, &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt;, &lt;code&gt;ST_MANDLOCK&lt;/code&gt;, &lt;code&gt;ST_WRITE&lt;/code&gt;, &lt;code&gt;ST_APPEND&lt;/code&gt;, &lt;code&gt;ST_IMMUTABLE&lt;/code&gt;, &lt;code&gt;ST_NOATIME&lt;/code&gt;, &lt;code&gt;ST_NODIRATIME&lt;/code&gt;, and &lt;code&gt;ST_RELATIME&lt;/code&gt; constants were added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;ST_NODEV&lt;/code&gt; , &lt;code&gt;ST_NOEXEC&lt;/code&gt; , &lt;code&gt;ST_SYNCHRONOUS&lt;/code&gt; , &lt;code&gt;ST_MANDLOCK&lt;/code&gt; , &lt;code&gt;ST_WRITE&lt;/code&gt; , &lt;code&gt;ST_APPEND&lt;/code&gt; , &lt;code&gt;ST_IMMUTABLE&lt;/code&gt; , &lt;code&gt;ST_NOATIME&lt;/code&gt; , &lt;code&gt;ST_NODIRATIME&lt;/code&gt; 및 &lt;code&gt;ST_RELATIME&lt;/code&gt; 상수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="abb78245dbb025b8b981ec6dedfc938eb90f843d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;__wrapped__&lt;/code&gt; attribute now always refers to the wrapped function, even if that function defined a &lt;code&gt;__wrapped__&lt;/code&gt; attribute. (see &lt;a href=&quot;https://bugs.python.org/issue17482&quot;&gt;bpo-17482&lt;/a&gt;)</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;__wrapped__&lt;/code&gt; 속성은 해당 함수가 &lt;code&gt;__wrapped__&lt;/code&gt; 속성을 정의한 경우에도 항상 랩핑 된 함수를 참조 합니다. ( &lt;a href=&quot;https://bugs.python.org/issue17482&quot;&gt;bpo-17482&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="5482a0a70a012195edd252272815c06c4bbcf18c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;file&lt;/code&gt; attribute is automatically closed upon the garbage collection of the creating &lt;code&gt;FieldStorage&lt;/code&gt; instance.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;FieldStorage&lt;/code&gt; 생성 인스턴스 의 가비지 수집시 &lt;code&gt;file&lt;/code&gt; 속성이 자동으로 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="206e1adfa020778a0a9e61cc640e9618826da0f8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;code&gt;verify&lt;/code&gt; argument was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;code&gt;verify&lt;/code&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="073189996bf6f624bbb99e21b1e7c3d48321a707" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;em&gt;defaultTest&lt;/em&gt; parameter was changed to also accept an iterable of test names.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;defaultTest&lt;/em&gt; 매개 변수가 반복 가능한 테스트 이름도 허용하도록 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="d9727cfdc284d16e761091301bbdf81cecdfb2b4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;em&gt;strict&lt;/em&gt; parameter was removed. HTTP 0.9 style &amp;ldquo;Simple Responses&amp;rdquo; are no longer supported.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;엄격한&lt;/em&gt; 매개 변수가 제거되었습니다. HTTP 0.9 스타일의 &quot;단순 응답&quot;은 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d657043598b0cf211df2fe3d2bbcb6f75cb05fa0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;em&gt;strict&lt;/em&gt; parameter was removed. HTTP 0.9-style &amp;ldquo;Simple Responses&amp;rdquo; are no longer supported.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;엄격한&lt;/em&gt; 매개 변수가 제거되었습니다. HTTP 0.9 스타일의 &quot;단순 응답&quot;은 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8b3947e8ecbc5550d09f9a928d6cfe955a97fce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The &lt;em&gt;strict&lt;/em&gt; parameter was removed. HTTP 0.9-style &amp;ldquo;Simple Responses&amp;rdquo; are not longer supported.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;엄격한&lt;/em&gt; 매개 변수가 제거되었습니다. HTTP 0.9 스타일의 &quot;단순 응답&quot;은 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6ac972474009854779b7dba1ce3a2029c060add" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The CAN_BCM protocol was added.</source>
          <target state="translated">버전 3.4으로 변경 : CAN_BCM 프로토콜이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5b378bbeba4f2415dc682f9a660ba6d2d5833ebd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The class now supports hostname check with &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">버전 3.4으로 변경 : 클래스는 이제 &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt; 및 &lt;em&gt;서버 이름 표시&lt;/em&gt; ( &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt; 참조 )를 사용 하여 호스트 이름 확인을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="72752b769d3409e5534cd67fe718ffec40b8da1f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The error response includes a Content-Length header. Added the &lt;em&gt;explain&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.4으로 변경 : 오류 응답에 Content-Length 헤더가 포함됩니다. &lt;em&gt;Explain&lt;/em&gt; 인수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="76be54ebccd0889a27aa5efcc71a643a878cf2d9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The file is now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 이제 파일을 상속 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dc2e65acd44b499642fc383067052903500c3757" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The function supports &lt;a href=&quot;#stat.S_IFDOOR&quot;&gt;&lt;code&gt;S_IFDOOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stat.S_IFPORT&quot;&gt;&lt;code&gt;S_IFPORT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stat.S_IFWHT&quot;&gt;&lt;code&gt;S_IFWHT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 :이 기능은 &lt;a href=&quot;#stat.S_IFDOOR&quot;&gt; &lt;code&gt;S_IFDOOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#stat.S_IFPORT&quot;&gt; &lt;code&gt;S_IFPORT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#stat.S_IFWHT&quot;&gt; &lt;code&gt;S_IFWHT&lt;/code&gt; 를&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="e37c6d084570de73e6c575530940e3625d0229cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The handshake method also performs &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; attribute of the socket&amp;rsquo;s &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">버전 3.4으로 변경 : 핸드 셰이크 메소드는 소켓 &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt; 속성 이 true 인 경우 &lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt; 도 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="f240b6b1a737bdd863e8ed288aa1fd73b1d9367b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The method now supports hostname check with &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">버전 3.4으로 변경 :이 메소드는 이제 &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt; 및 &lt;em&gt;서버 이름 표시를 사용&lt;/em&gt; 하여 호스트 이름 확인을 지원합니다 ( &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ac6cf37b80532792f1874ea7fa2493eaadc12c1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The method now supports hostname check with &lt;code&gt;SSLContext.check_hostname&lt;/code&gt; and &lt;em&gt;Server Name Indicator&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">버전 3.4으로 변경 :이 메소드는 이제 &lt;code&gt;SSLContext.check_hostname&lt;/code&gt; 및 &lt;em&gt;서버 이름 표시기를 사용&lt;/em&gt; 하여 호스트 이름 확인을 지원합니다 ( &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;HAS_SNI&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d2d6476c108f3747f18ad71be92c210162202465" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The name attribute has been present in CPython since its inception, but until Python 3.4 was not formally specified, so may not exist on some platforms.</source>
          <target state="translated">버전 3.4으로 변경 : name 속성은 처음부터 CPython에 존재했지만 Python 3.4가 공식적으로 지정되지 않았을 때까지 일부 플랫폼에는 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81f084d1d08c76e82e458f6f69b20415711ecd2f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The new file descriptor is now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 이제 새로운 파일 디스크립터를 상속 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2bca53188c01fbea416ffb38887f77e67da6c38f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The new file descriptors are now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 이제 새로운 파일 디스크립터를 상속 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4474904d8d46a8a21c25e403c2bf62413d445218" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The optional &lt;code&gt;m&lt;/code&gt; parameter was added.</source>
          <target state="translated">버전 3.4으로 변경 : 선택적 &lt;code&gt;m&lt;/code&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="21ca64f1d1cfec827e1054ddfeec13f1cc339587" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The positional argument specifiers can be omitted for &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; 의&lt;/a&gt; 경우 위치 인수 지정자를 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bff7c4e47480e4a606af7bb6b08b4d098c5aaee0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The request methods add_data, has_data, get_data, get_type, get_host, get_selector, get_origin_req_host and is_unverifiable that were deprecated since 3.3 have been removed.</source>
          <target state="translated">버전 3.4으로 변경 : 3.3 이후 폐기 된 요청 메소드 add_data, has_data, get_data, get_type, get_host, get_selector, get_origin_req_host 및 is_unverifiable이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="25811023e8709e9edc58310da5e62315cf3be75e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The returned socket is now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 반환 된 소켓은 이제 상속 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="d1c1ef814a0522f7982685c62e33e5f9ee8a6748" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The returned sockets are now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 반환 된 소켓은 이제 상속 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="c965737cf3ff7cc76fcbbf5e02b62167f99f7a9e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The socket is now non-inheritable.</source>
          <target state="translated">버전 3.4으로 변경 : 이제 소켓을 상속 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bef524d5cf5dd0ce14fb0c3c02056fc3114a2b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The stat module is backed by a C implementation.</source>
          <target state="translated">버전 3.4으로 변경 : stat 모듈은 C 구현에 의해 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ccb62796c0b14dd68cc9e21d13a1c4b6db5385a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: The utf-16* and utf-32* encoders no longer allow surrogate code points (&lt;code&gt;U+D800&lt;/code&gt;&amp;ndash;&lt;code&gt;U+DFFF&lt;/code&gt;) to be encoded. The utf-32* decoders no longer decode byte sequences that correspond to surrogate code points.</source>
          <target state="translated">버전 3.4으로 변경 : utf-16 * 및 utf-32 * 인코더는 더 이상 서로 게이트 코드 포인트 ( &lt;code&gt;U+D800&lt;/code&gt; &amp;ndash; &lt;code&gt;U+DFFF&lt;/code&gt; )를 인코딩 할 수 없습니다. utf-32 * 디코더는 더 이상 서로 게이트 코드 포인트에 해당하는 바이트 시퀀스를 디코딩하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f83524fa13629635b622a1cdb0f9ec5008e5cd8f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: This function is now based on &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt;, but still ignores &lt;code&gt;__wrapped__&lt;/code&gt; attributes and includes the already bound first parameter in the signature output for bound methods.</source>
          <target state="translated">버전 3.4으로 변경 :이 함수는 이제 &lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt; 기반으로 하지만 &lt;code&gt;__wrapped__&lt;/code&gt; 속성을 무시 하고 이미 바인딩 된 첫 번째 매개 변수를 바인딩 된 메서드의 서명 출력에 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c521a4a6f79a4d582b496e83ee5a6c76eb47b1a4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: To detect calls to &lt;a href=&quot;#abc.ABCMeta.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;, you can use the &lt;a href=&quot;#abc.get_cache_token&quot;&gt;&lt;code&gt;get_cache_token()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;#abc.ABCMeta.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt; 호출을 감지 하기 위해 &lt;a href=&quot;#abc.get_cache_token&quot;&gt; &lt;code&gt;get_cache_token()&lt;/code&gt; &lt;/a&gt; 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06026e6b963524f5f1fb67a11def37bb78b4e8d0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: To suppress printing any banner, pass an empty string.</source>
          <target state="translated">버전 3.4으로 변경 : 배너 인쇄를 억제하려면 빈 문자열을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="a385062a107e2d4a8a1e6493aa6b47f1f1725d67" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Updated to be based on &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 451을&lt;/strong&gt;&lt;/a&gt; 기반으로 업데이트&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6109cc614623ccccd3791cc302401755f67d99b3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Updated to be based on &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 451을&lt;/strong&gt;&lt;/a&gt; 기반으로 업데이트&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cc546f052fac77b290a09dee704a740f800d41a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Updated to take advantage of the module spec feature added by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;. This allows &lt;code&gt;__cached__&lt;/code&gt; to be set correctly for modules run this way, as well as ensuring the real module name is always accessible as &lt;code&gt;__spec__.name&lt;/code&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt; 에 의해 추가 된 모듈 사양 기능을 이용하도록 업데이트되었습니다 . 이렇게하면 모듈이 이런 식으로 실행되도록 &lt;code&gt;__cached__&lt;/code&gt; 를 올바르게 설정할 수 있을 뿐만 아니라 실제 모듈 이름에 항상 &lt;code&gt;__spec__.name&lt;/code&gt; 으로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2c9bb85683979dfbbf662586f284f3fa0f4903a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Updated to take advantage of the module spec feature added by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt;. This allows &lt;code&gt;__cached__&lt;/code&gt; to be set correctly in the case where &lt;code&gt;__main__&lt;/code&gt; is imported from a valid sys.path entry rather than being executed directly.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt; 에 의해 추가 된 모듈 사양 기능을 이용하도록 업데이트되었습니다 . 이를 통해 &lt;code&gt;__main__&lt;/code&gt; 을 직접 실행하지 않고 유효한 sys.path 항목에서 가져 오는 경우 &lt;code&gt;__cached__&lt;/code&gt; 를 올바르게 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e6c112f29b366c7ec1116a3656a3163add58599" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Use &lt;code&gt;(',', ': ')&lt;/code&gt; as default if &lt;em&gt;indent&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;들여 쓰기&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;code&gt;(',', ': ')&lt;/code&gt; 를 기본값으로 사용하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="531c464001fb4a65bbca9e1e52f97f813d400d01" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Windows now uses the same implementation as all other platforms.</source>
          <target state="translated">버전 3.4으로 변경 : Windows는 이제 다른 모든 플랫폼과 동일한 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="374a16956e4a5f625e1b2689796dcad777e5ff84" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: Windows support added</source>
          <target state="translated">버전 3.4으로 변경 : Windows 지원 추가</target>
        </trans-unit>
        <trans-unit id="c747dfd4237f7bbec3e63100f6a02a7606d3fcfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: ZIP64 extensions are enabled by default.</source>
          <target state="translated">버전 3.4으로 변경 : ZIP64 확장자는 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="417fd7ced1aefee1b8a00c473516fb89f5e2ce7c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: accepts any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; as input for encoding and decoding</source>
          <target state="translated">버전 3.4으로 변경 : 인코딩 및 디코딩을 위해 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​같은 객체&lt;/a&gt; 를 입력으로 수용</target>
        </trans-unit>
        <trans-unit id="ad773ed54ff4a5674edb8c7d9504c25bf6265867" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: accepts any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; as input for encoding and decoding</source>
          <target state="translated">버전 3.4에서 변경 : 인코딩 및 디코딩을위한 입력으로 모든 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트&lt;/a&gt; 열류 객체 를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3650d52799a4c624b59deffd016af82454a9ff61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: memoryview is now registered automatically with &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">버전 3.4으로 변경 : memoryview는 이제 &lt;a href=&quot;collections.abc#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; 에&lt;/a&gt; 자동으로 등록됩니다</target>
        </trans-unit>
        <trans-unit id="f51f235881b6b84b1396b3c487b150c936e074fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: the &lt;em&gt;policy&lt;/em&gt; keyword argument was added.</source>
          <target state="translated">버전 3.4으로 변경 : &lt;em&gt;정책&lt;/em&gt; 키워드 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="29af30791781def4f4bfde0e56f11250ee073d61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.4: the method was changed to use &lt;code&gt;utf8=True&lt;/code&gt;, thus producing an &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;-like message representation, instead of being a direct alias for &lt;a href=&quot;#email.message.EmailMessage.as_string&quot;&gt;&lt;code&gt;as_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.4으로 변경 : 메소드가 &lt;code&gt;utf8=True&lt;/code&gt; 를 사용하도록 변경되어 &lt;a href=&quot;#email.message.EmailMessage.as_string&quot;&gt; &lt;code&gt;as_string()&lt;/code&gt; &lt;/a&gt; 의 직접 별명 대신 &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt; 과 유사한 메시지 표현 이 생성 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="783172687e666b89bf20a20800e19a271c4a4f52" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.</source>
          <target state="translated">버전 3.5에서 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="c2718ba01d7bcc5485a5ef6166e8ee9af093b896" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.1: A &lt;a href=&quot;exceptions#RecursionError&quot;&gt;&lt;code&gt;RecursionError&lt;/code&gt;&lt;/a&gt; exception is now raised if the new limit is too low at the current recursion depth.</source>
          <target state="translated">버전 3.5.1에서 변경 : 현재 재귀 수준에서 새 제한이 너무 낮은 경우 &lt;a href=&quot;exceptions#RecursionError&quot;&gt; &lt;code&gt;RecursionError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="341a461bd35829944be0413ee97dbb363533181e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.1: The &lt;em&gt;host&lt;/em&gt; parameter can be a sequence of strings.</source>
          <target state="translated">버전 3.5.1에서 변경 : &lt;em&gt;호스트&lt;/em&gt; 매개 변수는 일련의 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72a3a9ec07ee7c567df734911d524f86a591e368" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.1: The function accepts any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; object.</source>
          <target state="translated">버전 3.5.1에서 변경 :이 함수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;대기 가능한&lt;/a&gt; 객체를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="12b59689a28611d189cb5eff57ca46786241bbed" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.1: The function accepts any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt; object.</source>
          <target state="translated">버전 3.5.1에서 변경 :이 함수는 모든 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;대기 가능한&lt;/a&gt; 객체를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="b7e8bb9a4b3d0e221b80af7c96b152682d3c56c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.2: &lt;code&gt;address&lt;/code&gt; no longer needs to be resolved. &lt;code&gt;sock_connect&lt;/code&gt; will try to check if the &lt;em&gt;address&lt;/em&gt; is already resolved by calling &lt;a href=&quot;socket#socket.inet_pton&quot;&gt;&lt;code&gt;socket.inet_pton()&lt;/code&gt;&lt;/a&gt;. If not, &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;loop.getaddrinfo()&lt;/code&gt;&lt;/a&gt; will be used to resolve the &lt;em&gt;address&lt;/em&gt;.</source>
          <target state="translated">버전 3.5.2로 변경 : &lt;code&gt;address&lt;/code&gt; 더 이상 확인할 필요가 없습니다. &lt;code&gt;sock_connect&lt;/code&gt; 는 &lt;a href=&quot;socket#socket.inet_pton&quot;&gt; &lt;code&gt;socket.inet_pton()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;em&gt;주소&lt;/em&gt; 가 이미 해결 되었는지 확인하려고 시도합니다 . 그렇지 않으면 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;loop.getaddrinfo()&lt;/code&gt; &lt;/a&gt; 가 &lt;em&gt;주소&lt;/em&gt; 를 해결하는 데 사용됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1166b6be007bd9d7bbc0e83517787f7d59103c43" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.2: On Linux, if the &lt;code&gt;getrandom()&lt;/code&gt; syscall blocks (the urandom entropy pool is not initialized yet), fall back on reading &lt;code&gt;/dev/urandom&lt;/code&gt;.</source>
          <target state="translated">버전 3.5.2로 변경 : Linux에서 &lt;code&gt;getrandom()&lt;/code&gt; syscall이 차단되면 (urandom 엔트로피 풀이 아직 초기화되지 않은 경우) &lt;code&gt;/dev/urandom&lt;/code&gt; 을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="b8380c03b262ccc4213a57664c36cdfb10c18ef5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.3: &lt;a href=&quot;#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt; no longer configures the &lt;code&gt;max_workers&lt;/code&gt; of the thread pool executor it creates, instead leaving it up to the thread pool executor (&lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;) to set the default.</source>
          <target state="translated">버전 3.5.3으로 변경 : &lt;a href=&quot;#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;loop.run_in_executor()&lt;/code&gt; &lt;/a&gt; 는 더 이상 생성 된 스레드 풀 실행 프로그램 의 &lt;code&gt;max_workers&lt;/code&gt; 를 구성하지 않고 대신 스레드 풀 실행 프로그램 ( &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; )을 그대로두고 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7fe56c53cc2f17f1f1a74e1af9f08b6b98ed6d5b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5.3: Updated to support linking with OpenSSL 1.1.0</source>
          <target state="translated">버전 3.5.3으로 변경 : OpenSSL 1.1.0과의 링크를 지원하도록 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="30425075849dfd3316ee72293aa07085c559eb80" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5:</source>
          <target state="translated">버전 3.5으로 변경 :</target>
        </trans-unit>
        <trans-unit id="dd8c18bd691b85789d565cdfb9e3f83f934e4068" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt;&lt;code&gt;AsyncFunctionDef&lt;/code&gt;&lt;/a&gt; is now supported.</source>
          <target state="translated">버전 3.5에서 변경 : 이제 &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt; &lt;code&gt;AsyncFunctionDef&lt;/code&gt; &lt;/a&gt; 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="bce948492d59c6dc9726461bbfbb75d2b5aac126" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;a href=&quot;#dbm.dumb.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; always creates a new database when the flag has the value &lt;code&gt;'n'&lt;/code&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;#dbm.dumb.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 은 플래그에 &lt;code&gt;'n'&lt;/code&gt; 값이 있으면 항상 새 데이터베이스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="9568b8f30026525e2451cedf35e0d53d2c5f8ae4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;a href=&quot;#doctest.DocTestSuite&quot;&gt;&lt;code&gt;DocTestSuite()&lt;/code&gt;&lt;/a&gt; returns an empty &lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;module&lt;/em&gt; contains no docstrings instead of raising &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;#doctest.DocTestSuite&quot;&gt; &lt;code&gt;DocTestSuite()&lt;/code&gt; &lt;/a&gt; 는 &lt;em&gt;모듈&lt;/em&gt; 에 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 가&lt;/a&gt; 아닌 docstring이없는 경우 빈 &lt;a href=&quot;unittest#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77b5f42fa4723ab1a7be62c9d9a2e46f513ed23c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt;&lt;code&gt;SMTPNotSupportedError&lt;/code&gt;&lt;/a&gt; may be raised, and the &lt;em&gt;initial_response_ok&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt; &lt;code&gt;SMTPNotSupportedError&lt;/code&gt; &lt;/a&gt; 가 발생하고 &lt;em&gt;initial_response_ok&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="05af516fa9e62a7eabe9d33ef8ce7796ccb9aa6c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;code&gt;AsyncFunctionDef&lt;/code&gt; is now supported.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;AsyncFunctionDef&lt;/code&gt; 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ef030ed70dd3dffe4ce0e7beaa75e4e92f2d658f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;code&gt;SMTPUTF8&lt;/code&gt; support added, and &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt;&lt;code&gt;SMTPNotSupportedError&lt;/code&gt;&lt;/a&gt; may be raised if &lt;code&gt;SMTPUTF8&lt;/code&gt; is specified but the server does not support it.</source>
          <target state="translated">: 버전 3.5에서 변경 &lt;code&gt;SMTPUTF8&lt;/code&gt; 의 지원을 추가하고, &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt; &lt;code&gt;SMTPNotSupportedError&lt;/code&gt; 는&lt;/a&gt; 경우에 제기 할 수있다 &lt;code&gt;SMTPUTF8&lt;/code&gt; 가 지정되어 있지만 서버가이를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b406126fef88f081ce9dd4c318c46d47368e1cc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;code&gt;__eq__()&lt;/code&gt; now takes &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; into account.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;code&gt;__eq__()&lt;/code&gt; 이제 &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt; 을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="56d0ba7df7bf6f189f1ca1dd1b6b03bd6b6f7f66" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;_charset&lt;/em&gt; also accepts &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;em&gt;_charset&lt;/em&gt; 은 &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스 도 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="3049c0ddf3ae528dffb4035154c9720106d16cb7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;allow_abbrev&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;allow_abbrev&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e5e7742ab5bb4da84c454e5dfbbf5e4f03f4c0b4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;charset&lt;/em&gt; keyword-only argument was added. The default charset of HTML document changed from &lt;code&gt;'ISO-8859-1'&lt;/code&gt; to &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;charset&lt;/em&gt; 키워드 전용 인수가 추가되었습니다. HTML 문서의 기본 문자 집합이 &lt;code&gt;'ISO-8859-1'&lt;/code&gt; 에서 &lt;code&gt;'utf-8'&lt;/code&gt; 로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67734f7cdec85352414a5b10e901f5b70ff7d940" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;headers&lt;/em&gt; parameter is optional.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;헤더&lt;/em&gt; 매개 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="6a41cf3b8aa647f629a45f8ada9d3305a570d116" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;localaddr&lt;/em&gt; and &lt;em&gt;remoteaddr&lt;/em&gt; may now contain IPv6 addresses.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;em&gt;localaddr&lt;/em&gt; 및 &lt;em&gt;remoteaddr에&lt;/em&gt; 이제 IPv6 주소가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1b86a2b2670b63d9641251aaa64b3f61f984377" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;quiet&lt;/em&gt; parameter was changed to a multilevel value.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;em&gt;조용한&lt;/em&gt; 매개 변수는 다중 값으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="67216ace4b269eccc5b4184a537ccf4ae3e8650b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;read_data&lt;/em&gt; is now reset on each call to the &lt;em&gt;mock&lt;/em&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 이제 &lt;em&gt;mock을&lt;/em&gt; 호출 할 때마다 &lt;em&gt;read_data&lt;/em&gt; 가 재설정됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71b2be89fbeeb9dee6a73dd62d1e35083a60acb6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; attributes added</source>
          <target state="translated">버전 3.5에서 변경 : &lt;em&gt;stdout&lt;/em&gt; 및 &lt;em&gt;stderr&lt;/em&gt; 속성 추가</target>
        </trans-unit>
        <trans-unit id="2552d73974416d52097093cc6dc8df0a519a0e24" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: &lt;em&gt;suffix&lt;/em&gt;, &lt;em&gt;prefix&lt;/em&gt;, and &lt;em&gt;dir&lt;/em&gt; may now be supplied in bytes in order to obtain a bytes return value. Prior to this, only str was allowed. &lt;em&gt;suffix&lt;/em&gt; and &lt;em&gt;prefix&lt;/em&gt; now accept and default to &lt;code&gt;None&lt;/code&gt; to cause an appropriate default value to be used.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;em&gt;suffix&lt;/em&gt; , &lt;em&gt;prefix&lt;/em&gt; 및 &lt;em&gt;dir&lt;/em&gt; 은 바이트 반환 값을 얻기 위해 바이트 단위로 제공 될 수 있습니다. 이 전에는 str 만 허용되었습니다. &lt;em&gt;접미사&lt;/em&gt; 와 &lt;em&gt;접두사는&lt;/em&gt; 이제 적절한 기본값을 사용 하도록 허용하고 기본값을 &lt;code&gt;None&lt;/code&gt; 으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="65b9b0534cbe44098b4dbfbbe694bfebb241015c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: A list of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuples&lt;/a&gt;&lt;code&gt;FrameInfo(frame, filename, lineno, function, code_context, index)&lt;/code&gt; is returned.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;FrameInfo(frame, filename, lineno, function, code_context, index)&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6051f535dc0239ca67596cfa6e3a5388b1742480" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: A list of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuples&lt;/a&gt;&lt;code&gt;FrameInfo(frame, filename, lineno, function, code_context, index)&lt;/code&gt; is returned.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;FrameInfo(frame, filename, lineno, function, code_context, index)&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="574838f70d2abe14f42707a9d566a8a747e95add" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Add &lt;code&gt;__qualname__&lt;/code&gt; and &lt;code&gt;gi_yieldfrom&lt;/code&gt; attributes to generators.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;__qualname__&lt;/code&gt; 및 &lt;code&gt;gi_yieldfrom&lt;/code&gt; 속성에서 생성기로 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="9861f431ca21f1b435540450c7f8440f86528d47" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt; 토큰이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="979e73d1c9ab1d139c7ba5285e5f6e23442f6957" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added additional attributes.</source>
          <target state="translated">버전 3.5으로 변경 : 추가 속성이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d67378b283e7fc0a23b4c4fb7d03114eb1c023ce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added debuglevel 2.</source>
          <target state="translated">버전 3.5으로 변경 : debuglevel 2가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f6f91293767193f130d2b8cf583008e7be1fa275" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added negative &lt;em&gt;limit&lt;/em&gt; support.</source>
          <target state="translated">버전 3.5으로 변경 : 음수 &lt;em&gt;제한&lt;/em&gt; 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="673ad2eeaeed9c38520c861d863acdf40271ea12" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for SSL/TLS in &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt; 에서 SSL / TLS 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a9e813cc5e57d71f76d509c50151744d7bc0c629" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for Windows</source>
          <target state="translated">버전 3.5으로 변경 : Windows 지원 추가</target>
        </trans-unit>
        <trans-unit id="36fd8d29fb07b4433287aeeef6734bf614ee4c5f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for group references of fixed length.</source>
          <target state="translated">버전 3.5으로 변경 : 고정 길이의 그룹 참조 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="b21aee0ce3b647085321f11c22cb5225add687da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for passing file descriptor to this function.</source>
          <target state="translated">버전 3.5으로 변경 : 파일 디스크립터를이 함수로 전달하는 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="61a042f5fef5811e9add37f4709112f29666c585" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for the &lt;em&gt;xztar&lt;/em&gt; format.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;xztar&lt;/em&gt; 형식에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="56f2990986f0eac1aa35172b9f3a1ba10665ee65" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for the context management protocol to the &lt;code&gt;FieldStorage&lt;/code&gt; class.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;FieldStorage&lt;/code&gt; 클래스에 컨텍스트 관리 프로토콜에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="01f80f17847054364624ce71082fd10c493789d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for writing arbitrary &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. The &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method now accepts an argument of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 임의의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 작성 지원이 추가되었습니다 . &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 메소드는 현재의 인수 받아 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21b7edb1ebfcda75671c3165c6b89d0e097e90f2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for writing arbitrary &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. The &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method now accepts an argument of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : 임의의 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트 열류 객체&lt;/a&gt; 쓰기 지원이 추가되었습니다 . &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 메소드는 현재의 인수 받아 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="678dc0a02493c720a2d7fc332155acbd8aea00b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support for writing to unseekable streams. Added support for the &lt;code&gt;'x'&lt;/code&gt; mode.</source>
          <target state="translated">버전 3.5으로 변경 : 볼 수없는 스트림에 쓰기 지원이 추가되었습니다. &lt;code&gt;'x'&lt;/code&gt; 모드에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="32ec2ad158ab4770f714a5961f20e660cc4dcce5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 인스턴스 지원 추가 .</target>
        </trans-unit>
        <trans-unit id="4c99228f47ee0147973525603483a5f3bacd3187" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support of arbitrary iterables.</source>
          <target state="translated">버전 3.5으로 변경 : 임의 반복 가능 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4abf4a8d0a42a53c56a03dcbe08e0ca62064a0b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support of character streams.</source>
          <target state="translated">버전 3.5으로 변경 : 문자 스트림 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9b3869d171345c71d5f5393ef86ac496a89e1681" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added support of slicing.</source>
          <target state="translated">버전 3.5으로 변경 : 슬라이싱 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="bc5b8e03b0949c9c01586b96617efc59a1892629" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;code&gt;-j&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt;, and &lt;code&gt;-qq&lt;/code&gt; options. &lt;code&gt;-q&lt;/code&gt; option was changed to a multilevel value. &lt;code&gt;-b&lt;/code&gt; will always produce a byte-code file ending in &lt;code&gt;.pyc&lt;/code&gt;, never &lt;code&gt;.pyo&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;-j&lt;/code&gt; , &lt;code&gt;-r&lt;/code&gt; 및 &lt;code&gt;-qq&lt;/code&gt; 옵션이 추가되었습니다 . &lt;code&gt;-q&lt;/code&gt; 옵션이 다단계 값으로 변경되었습니다. &lt;code&gt;-b&lt;/code&gt; 는 항상 &lt;code&gt;.pyc&lt;/code&gt; 로 끝나는 바이트 코드 파일을 생성하지만 절대 &lt;code&gt;.pyo&lt;/code&gt; 는 생성하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5dd5f4fcfb346f43c0ad4a93d0b9d7e570ae346c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;chunksize&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;chunksize&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ba18239bbd7c87d361600e28260b65891505133f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;context&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;컨텍스트&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67463b58a47b4eb4142519e4a67b543f82b592f8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;copy_function&lt;/em&gt; keyword argument.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;copy_function&lt;/em&gt; 키워드 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="db96fe38bd1dad734f884898a4dfb323cc5d68d2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;max_length&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;max_length&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4ecc3fa3dfce1e7e815b390617487f1de22e8582" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;members&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;members&lt;/em&gt; 매개 변수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="77db1f6e26d205777d71fb6d478775ae18db031c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;numeric_owner&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;numeric_owner&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e8fa067f8c439200d3f43401784a2a0f1bf819d1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the &lt;em&gt;workers&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;workers&lt;/em&gt; 매개 변수를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="23d60f6a224acfd8e432afcc54ba35da80722e97" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the optional &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;reverse&lt;/em&gt; parameters.</source>
          <target state="translated">버전 3.5으로 변경 : 선택적 &lt;em&gt;키&lt;/em&gt; 및 &lt;em&gt;리버스&lt;/em&gt; 매개 변수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="03c93cf802a7afd5f8ca022b7bf63f3aa64f6847" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the tb_locals parameter.</source>
          <target state="translated">버전 3.5으로 변경 : tb_locals 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c1b1a38f7a331c8cd4325a88691f6b59a517390c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Added the two-tuple form for the &lt;em&gt;address&lt;/em&gt; constructor parameter.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;주소&lt;/em&gt; 생성자 매개 변수에 대한 두 개의 튜플 양식이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="12f4a39f79801cbc6c87bbdb87909e3dfca4094b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Always allow a server_hostname to be passed, even if OpenSSL does not have SNI.</source>
          <target state="translated">버전 3.5으로 변경 : OpenSSL에 SNI가없는 경우에도 항상 server_hostname이 전달되도록 허용하십시오.</target>
        </trans-unit>
        <trans-unit id="79c496672f8c0e7be35031464dae67b2046933dd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: As part of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 489&lt;/strong&gt;&lt;/a&gt;, the builtin importer now implements &lt;code&gt;Loader.create_module()&lt;/code&gt; and &lt;code&gt;Loader.exec_module()&lt;/code&gt;</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 489의&lt;/strong&gt;&lt;/a&gt; 일부로 내장 임포터가 &lt;code&gt;Loader.create_module()&lt;/code&gt; 및 &lt;code&gt;Loader.exec_module()&lt;/code&gt; 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f3aa50ec5a577815eff5b77bb0c86c80ee58998a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Before Python 3.5, a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object was considered to be false if it represented midnight in UTC. This behavior was considered obscure and error-prone and has been removed in Python 3.5. See &lt;a href=&quot;https://bugs.python.org/issue13936&quot;&gt;bpo-13936&lt;/a&gt; for full details.</source>
          <target state="translated">버전 3.5에서 변경됨 : Python 3.5 이전에는 &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체가 UTC 자정을 나타내는 경우 false로 간주되었습니다. 이 동작은 모호하고 오류가 발생하기 쉬운 것으로 간주되어 Python 3.5에서 제거되었습니다. 자세한 내용은 &lt;a href=&quot;https://bugs.python.org/issue13936&quot;&gt;bpo-13936&lt;/a&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="0829b3179b10923fed8bb93469bc2634e199f6a0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Behavior updated to match the semantics defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3986에&lt;/strong&gt;&lt;/a&gt; 정의 된 의미와 일치하도록 동작이 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="976021f5f4f0d8bfa8e58678faa52a4c249e6648" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Behaviour updated to match the semantics defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3986에&lt;/strong&gt;&lt;/a&gt; 정의 된 의미와 일치하도록 동작이 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="16ca22cac23724b406896f4e926513cf069d99b7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Discovery no longer checks package names for matching &lt;em&gt;pattern&lt;/em&gt; due to the impossibility of package names matching the default pattern.</source>
          <target state="translated">버전 3.5에서 변경 : 기본 패턴과 일치하는 패키지 이름으로 인해 감지가 더 이상 일치하는 &lt;em&gt;패턴에&lt;/em&gt; 대한 패키지 이름을 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="da31be2dff335f9c20bc6ce695575df78e9785c8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Documentation strings are now inherited if not overridden.</source>
          <target state="translated">버전 3.5으로 변경 : 재정의하지 않으면 문서 문자열이 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="716834f9e6b129dfb20fb42b4de420b29d5a6f03" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: For HTTPS URIs, &lt;a href=&quot;#module-xmlrpc.client&quot;&gt;&lt;code&gt;xmlrpc.client&lt;/code&gt;&lt;/a&gt; now performs all the necessary certificate and hostname checks by default.</source>
          <target state="translated">버전 3.5으로 변경 : HTTPS URI의 경우 &lt;a href=&quot;#module-xmlrpc.client&quot;&gt; &lt;code&gt;xmlrpc.client&lt;/code&gt; &lt;/a&gt; 는 기본적으로 필요한 모든 인증서 및 호스트 이름 확인을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="afc4943b6f7ec52b0067f2fb8cec61a67fb7316c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Found packages are now checked for &lt;code&gt;load_tests&lt;/code&gt; regardless of whether their path matches &lt;em&gt;pattern&lt;/em&gt;, because it is impossible for a package name to match the default pattern.</source>
          <target state="translated">버전 3.5으로 변경 : 패키지 이름이 기본 패턴과 일치 할 수 없으므로 찾기 패키지 의 경로가 &lt;em&gt;pattern&lt;/em&gt; 과 일치하는지 여부에 관계없이 &lt;code&gt;load_tests&lt;/code&gt; 가 있는지 검사합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28d462e66867decc7550f994a764d6a78d5569ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If &lt;em&gt;max_workers&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not given, it will default to the number of processors on the machine, multiplied by &lt;code&gt;5&lt;/code&gt;, assuming that &lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; is often used to overlap I/O instead of CPU work and the number of workers should be higher than the number of workers for &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경됨 : &lt;em&gt;max_workers&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 또는 지정되지 않은 경우 &lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 가 CPU 작업 대신 I / O를 오버랩하는 데 자주 사용되고 작업자 수를 가정 할 때 기본적으로 시스템의 프로세서 수에 &lt;code&gt;5&lt;/code&gt; 를 곱한 값이됩니다. &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt; 의 작업자 수보다 높습니다 .</target>
        </trans-unit>
        <trans-unit id="c9989bc5d263e7c6b2345696a14879e555901dfe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If a &lt;a href=&quot;exceptions#ConnectionError&quot;&gt;&lt;code&gt;ConnectionError&lt;/code&gt;&lt;/a&gt; or subclass is raised, the &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; object will be ready to reconnect when a new request is sent.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;exceptions#ConnectionError&quot;&gt; &lt;code&gt;ConnectionError&lt;/code&gt; &lt;/a&gt; 또는 서브 클래스가 발생 하면 새 요청이 전송 될 때 &lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt; 객체가 다시 연결할 준비가됩니다.</target>
        </trans-unit>
        <trans-unit id="9abb2f511a58c5d0dacdf4d219a8fe06f46016ee" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; occurs while traversing &lt;em&gt;name&lt;/em&gt; then a synthetic test that raises that error when run will be returned. These errors are included in the errors accumulated by self.errors.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;이름&lt;/em&gt; 을 통과하는 동안 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt; 가 발생 하면 실행시 해당 오류를 발생시키는 합성 테스트가 리턴됩니다. 이 오류는 self.errors에 의해 누적 된 오류에 포함됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85a70b3dd1c90b9f4258f74feba25fec4545e510" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the current working directory &amp;ndash; represented by an empty string &amp;ndash; is no longer valid then &lt;code&gt;None&lt;/code&gt; is returned but no value is cached in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 빈 문자열로 표시되는 현재 작업 디렉토리가 더 이상 유효하지 않으면 &lt;code&gt;None&lt;/code&gt; 이 반환되지만 &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 에&lt;/a&gt; 값이 캐시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9f178b529f6d250355f1bf334535c992a2699ad7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면이 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c5ad4f1bec4dabb269f79787ec13d7046d3b4c9d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면이 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="71cc37bdfb12c951769167957581ffce69c01a75" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면이 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d5e41fd6924a77b49773f5e8d7e8bdda2b23b178" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5에서 변경 : 시스템 호출이 중단되고 신호 처리기가 예외를 발생시키지 않으면 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0bdaa223d6ef630c6be0aac8df295a8feaf471b3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5에서 변경 : 시스템 호출이 중단되고 신호 처리기가 예외를 발생시키지 않으면 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9092f3af488d4e88b20eef7000b34424f0452984" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면이 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-36&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="56603db52d0ae49277a3bd686b7dfbf7a3a0542e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5에서 변경 : 시스템 호출이 중단되고 신호 처리기가 예외를 발생시키지 않으면 함수는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-38&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9e57302d178b532da446d7173b0a9c7e998a82f2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a518f953286e7572a70a6b4f7670a61dacba2109" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4b746ebb8f7053eee20f0c8523b669326b7c5857" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3166ed12c4aa4c3e567157e9517ccedc256d4338" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3f24ecca02529ff0ef62ba3eece53d5192b3b1f1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="421b60415977094d9064742bcf701955b1626e19" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="18e9ca7d1c56c17573a8ae2f2dfd59c3181a8013" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a3f98ef5fa77e1a46c58137a1f5238fa1868d5f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the method now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 시스템 호출이 중단되고 신호 핸들러가 예외를 발생시키지 않으면, 메소드는 이제 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 시스템 호출을 재 시도합니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="27f211f270f061bac1e22d3c4b811d07868501ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: If you are patching builtins in a module then you don&amp;rsquo;t need to pass &lt;code&gt;create=True&lt;/code&gt;, it will be added by default.</source>
          <target state="translated">버전 3.5으로 변경 : 모듈에서 내장을 패치하는 경우 &lt;code&gt;create=True&lt;/code&gt; 를 전달할 필요가 없으며 기본적으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ad5e8a53152fdc43ce62b9c8c9944564392aa323" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: In earlier Python versions, the &lt;code&gt;SSLSocket.send()&lt;/code&gt; method returned zero instead of raising &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 이전 Python 버전에서는 &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt; 를 발생 시키는 대신 &lt;code&gt;SSLSocket.send()&lt;/code&gt; 메소드가 0을 리턴 했습니다 .</target>
        </trans-unit>
        <trans-unit id="33abe22eb35e9c9ef6e51e11587555fa9b70b0f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Instances of &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; support the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol for closing the underlying transport.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt; &lt;code&gt;ServerProxy&lt;/code&gt; &lt;/a&gt; 인스턴스 는 기본 전송을 닫기위한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="7b693650e582d894d52d7a24ccdcb206e4a0a2cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Instances of &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; support the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol for closing the underlying transport.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt; &lt;code&gt;ServerProxy&lt;/code&gt; &lt;/a&gt; 인스턴스 는 기본 전송을 닫기위한 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="b14b2d6c26302f3d0d48ffa64a2eea826c1de170" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Interpret the input time as a time in UTC as specified by &amp;lsquo;GMT&amp;rsquo; timezone in the input string. Local timezone was used previously. Return an integer (no fractions of a second in the input format)</source>
          <target state="translated">버전 3.5으로 변경 : 입력 문자열에서 'GMT'시간대로 지정된대로 입력 시간을 UTC로 시간으로 해석하십시오. 현지 시간대가 이전에 사용되었습니다. 정수를 반환합니다 (입력 형식에서 1 분의 1 초 없음).</target>
        </trans-unit>
        <trans-unit id="e8d89fe4317d801ffadcdb7112758b90c0c7cb54" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Introduced the RuntimeError transformation via &lt;code&gt;from __future__ import generator_stop&lt;/code&gt;, see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;from __future__ import generator_stop&lt;/code&gt; 통해 RuntimeError 변환이 도입되었습니다 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="1728691cad246dd6348934a019397606deb11020" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Made the method static.</source>
          <target state="translated">버전 3.5으로 변경 : 메서드를 정적으로 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="2a6ba87bd7673d96d06f699d08b9074126ef3bb0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Matching of IP addresses, when present in the subjectAltName field of the certificate, is now supported.</source>
          <target state="translated">버전 3.5으로 변경 : 인증서의 subjectAltName 필드에있을 때 IP 주소 일치가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="21179b20fe1fac8ca53b825c86054c1d23efe4d9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: New methods &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__rmod__&lt;/code&gt;, &lt;code&gt;casefold&lt;/code&gt;, &lt;code&gt;format_map&lt;/code&gt;, &lt;code&gt;isprintable&lt;/code&gt;, and &lt;code&gt;maketrans&lt;/code&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : 새로운 방법 &lt;code&gt;__getnewargs__&lt;/code&gt; , &lt;code&gt;__rmod__&lt;/code&gt; , &lt;code&gt;casefold&lt;/code&gt; , &lt;code&gt;format_map&lt;/code&gt; , &lt;code&gt;isprintable&lt;/code&gt; 및 &lt;code&gt;maketrans&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f893658b9bdfa45624ee7676d3a5bc63eb23fb08" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: On Linux 3.17 and newer, the &lt;code&gt;getrandom()&lt;/code&gt; syscall is now used when available. On OpenBSD 5.6 and newer, the C &lt;code&gt;getentropy()&lt;/code&gt; function is now used. These functions avoid the usage of an internal file descriptor.</source>
          <target state="translated">버전 3.5으로 변경 : Linux 3.17 이상에서 &lt;code&gt;getrandom()&lt;/code&gt; syscall이 사용 가능할 때 사용됩니다. OpenBSD 5.6 이상에서는 C &lt;code&gt;getentropy()&lt;/code&gt; 함수가 사용됩니다. 이 함수는 내부 파일 디스크립터의 사용을 피합니다.</target>
        </trans-unit>
        <trans-unit id="9487816ac7bfd5dc03211276f3fa94e6995d1fa2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: On Windows, the function now also supports socket handles.</source>
          <target state="translated">버전 3.5으로 변경 : Windows에서이 기능은 이제 소켓 핸들도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="203f3f13e4b6d466d2ca908d02c3ddc5e5b5d46c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Parameter objects are picklable and hashable.</source>
          <target state="translated">버전 3.5으로 변경 : 매개 변수 객체는 선택 가능하고 해시 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f126a888bd15d73cc9d821fc5d17468a078735d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Previously, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; was raised when null bytes were encountered in &lt;em&gt;source&lt;/em&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 이전 에 &lt;em&gt;source&lt;/em&gt; 에서 null 바이트가 발생하면 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생했습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ee198955ff47d41199cb0449bc6e7094fa52d15" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Property docstrings became writeable.</source>
          <target state="translated">버전 3.5으로 변경 : 속성 docstring이 쓰기 가능하게되었습니다.</target>
        </trans-unit>
        <trans-unit id="8e71ef31512f03913c7a3eab96bc209f3db87c43" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Python now retries system calls when a syscall is interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : 시스템 콜이 신호 처리기 (참조 예외가 발생하는 경우를 제외하고, 신호에 의해 중단 될 때 파이썬은 이제 시스템 호출을 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 모금에, 근거를 들어) &lt;a href=&quot;#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2369da4b3d7081a475a96aad2467687f51be61eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Result changed from a tuple to a namedtuple.</source>
          <target state="translated">버전 3.5으로 변경 : 결과가 튜플에서 명명 된 튜플로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="60b7fe5ed17adc2b12249b0a16824a1bda001b03" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Return a named tuple instead of a tuple.</source>
          <target state="translated">버전 3.5으로 변경 : 튜플 대신 명명 된 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b142e9561825132f35a890b785e128d883e0bbec" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Signature objects are picklable and hashable.</source>
          <target state="translated">버전 3.5으로 변경 : 시그니처 객체는 선택 가능하고 해시 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c311b461c9318168e6478c45baf00dec0ac4f2a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Starting in Python 3.6, this method will not be optional when &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt;&lt;code&gt;exec_module()&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">버전 3.5으로 변경 : Python 3.6 &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt; &lt;code&gt;exec_module()&lt;/code&gt; &lt;/a&gt; 메소드는 exec_module () 을 정의 할 때 선택 사항이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="c317012d1d9c91359e6ebcc693088757fb3a5f51" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Support for recursive globs using &amp;ldquo;&lt;code&gt;**&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">버전 3.5으로 변경 :&amp;ldquo; &lt;code&gt;**&lt;/code&gt; &amp;rdquo;를 사용한 재귀 글로브 지원 .</target>
        </trans-unit>
        <trans-unit id="bc61a01acdd37cc159465a9f0e14a3064205956d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Support for the &amp;ldquo;site-python&amp;rdquo; directory has been removed.</source>
          <target state="translated">버전 3.5으로 변경 :&amp;ldquo;site-python&amp;rdquo;디렉토리에 대한 지원이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="96f754fd8218d5bea58883303b5a90110078aa82" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Support for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="427ce339ea625e6f413dd10daf499cc79be37173" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Support for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement was added.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에 대한 지원 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3c5de0e83e4f793a6375a164c1fc6590a05eb8f2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Synchronized objects support the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol.</source>
          <target state="translated">버전 3.5으로 변경 : 동기화 된 객체는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="a8e07bc149b5c6a8a2fd26f5770250006ac83f34" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Synchronized objects support the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol.</source>
          <target state="translated">버전 3.5에서 변경 : 동기화 된 개체는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;컨텍스트 관리자&lt;/a&gt; 프로토콜을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="cf35619084b2040bd7342db1f3706532f61f8c68" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface is now implemented and all of its reader operations are supported.</source>
          <target state="translated">버전 3.5으로 변경 : 이제 &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt; 인터페이스가 구현되고 모든 리더 작업이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="bd5077a9c0c9d1b76011520be94c57d9f3cf5aab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method now accepts an argument of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;io#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 메소드는 이제 &lt;code&gt;None&lt;/code&gt; 인수를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="9ebdef646b528f30d6fd7e23bb34516fb9df5741" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;a href=&quot;os#os.O_TMPFILE&quot;&gt;&lt;code&gt;os.O_TMPFILE&lt;/code&gt;&lt;/a&gt; flag is now used if available.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;os#os.O_TMPFILE&quot;&gt; &lt;code&gt;os.O_TMPFILE&lt;/code&gt; &lt;/a&gt; 플래그가 사용 가능한 경우 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="746fac1f591421b7b38e76bf05c9e89254ebfbe7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;'.pyo'&lt;/code&gt; file extension is no longer replaced with &lt;code&gt;'.py'&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;'.pyo'&lt;/code&gt; 파일 확장자가 더 이상 &lt;code&gt;'.py'&lt;/code&gt; 로 바뀌지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e10699eb05cc553162db733561d74887d87fa0da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;'backslashreplace'&lt;/code&gt; error handlers now works with decoding and translating.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;'backslashreplace'&lt;/code&gt; 오류 처리기는 이제 디코딩 및 변환과 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8725ca7bc51b5ff6cec24f13624e6f3f7ced220d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;'x'&lt;/code&gt; (exclusive creation) mode was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;'x'&lt;/code&gt; (독점 생성) 모드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="7c7c9eb434a922fdd2f8d6903cc142d413bf88a6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;respect_handler_level&lt;/code&gt; argument was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;respect_handler_level&lt;/code&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="10510dcf395ba5d6ee8da8d70abcefab86097bf4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;sendfile()&lt;/code&gt; method was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;sendfile()&lt;/code&gt; 메소드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="52d943e47d7f876525aebe44c1e777a96ed6c27f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;code&gt;shutdown()&lt;/code&gt; does not reset the socket timeout each time bytes are received or sent. The socket timeout is now to maximum total duration of the shutdown.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;code&gt;shutdown()&lt;/code&gt; 은 바이트를 받거나 보낼 때마다 소켓 제한 시간을 재설정하지 않습니다. 소켓 제한 시간이 종료의 최대 총 지속 시간이되었습니다.</target>
        </trans-unit>
        <trans-unit id="fbbbf217c86fbfa70b3a59177343ec0a399a7525" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;backlog&lt;/em&gt; parameter is now optional.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;백 로그&lt;/em&gt; 매개 변수는 이제 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="f044673d353de2da7c29d375bcc6da0f2c2d351e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;context&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;컨텍스트&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="17f2fd91cc7b8654d05403d077fb1414265bafa5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;converters&lt;/em&gt; argument was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;converters&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="893daef034b3f984d09338c7803046a1a26b37e4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; parameters were added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;decode_data&lt;/em&gt; 및 &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e81e98e876c2f708dd72c8c539e24dccd1cac052" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;etype&lt;/em&gt; argument is ignored and inferred from the type of &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;etype&lt;/em&gt; 인수는 무시되고 &lt;em&gt;value&lt;/em&gt; 유형에서 유추됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd7748ec093dcfeda201ff3dabdc1ec5f275a1ab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;exc_info&lt;/em&gt; parameter can now accept exception instances.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;exc_info&lt;/em&gt; 매개 변수는 이제 예외 인스턴스를 승인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a13f7d116a3676cf383bf9f21efb471790fc2e92" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;exist_ok&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;exist_ok&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="02da0cab62b43d3b47b5d5538350f1eae13955f5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;legacy&lt;/em&gt; parameter only writes out &lt;code&gt;.pyc&lt;/code&gt; files, not &lt;code&gt;.pyo&lt;/code&gt; files no matter what the value of &lt;em&gt;optimize&lt;/em&gt; is.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;레거시&lt;/em&gt; 매개 변수 는 &lt;em&gt;optimize&lt;/em&gt; 값이 무엇이든 &lt;code&gt;.pyo&lt;/code&gt; 파일이 아닌 &lt;code&gt;.pyc&lt;/code&gt; 파일 만 작성합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c879c29121e03fcd8ad4ba9923060697738ee75" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;optimization&lt;/em&gt; parameter was added and the &lt;em&gt;debug_override&lt;/em&gt; parameter was deprecated.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;최적화&lt;/em&gt; 매개 변수가 추가되었고 &lt;em&gt;debug_override&lt;/em&gt; 매개 변수는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a5e79b22f7bf79034d1dab49c93e8295c6d911b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The &lt;em&gt;start&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;시작&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="0a0d0591b64398f2eabc102d9a4955764c8273c0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The default &lt;em&gt;ssl_version&lt;/em&gt; is changed from &lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt;&lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt; for maximum compatibility with modern servers.</source>
          <target state="translated">버전 3.5에서 변경 : 기본 &lt;em&gt;ssl_version이&lt;/em&gt; 변경됩니다 &lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt; &lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 현대 서버와 최대의 호환성을 위해.</target>
        </trans-unit>
        <trans-unit id="0d9b6836a9123ceecd00f9733299b32685a1ede8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The default value for argument &lt;em&gt;convert_charrefs&lt;/em&gt; is now &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;convert_charrefs&lt;/em&gt; 인수의 기본값 은 이제 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0dc314222eea7a087d3fbee3cef1515917138b13" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The dictionary is created from stack items instead of creating an empty dictionary pre-sized to hold &lt;em&gt;count&lt;/em&gt; items.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;개수&lt;/em&gt; 항목 을 보유하기 위해 사전 크기가 지정된 빈 사전을 작성하는 대신 스택 항목에서 사전이 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="5a31ccdcc8395b71354d686054af5996cafc9ddf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The docstrings of property objects are now writeable.</source>
          <target state="translated">버전 3.5으로 변경 : 이제 속성 객체의 docstring을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="501dba3bbb2dc846d2e91af9af04c1963c461bb0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The error raised for lack of STARTTLS support is now the &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt;&lt;code&gt;SMTPNotSupportedError&lt;/code&gt;&lt;/a&gt; subclass instead of the base &lt;a href=&quot;#smtplib.SMTPException&quot;&gt;&lt;code&gt;SMTPException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : STARTTLS 지원 부족으로 인해 발생한 오류는 이제 기본 &lt;a href=&quot;#smtplib.SMTPException&quot;&gt; &lt;code&gt;SMTPException&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#smtplib.SMTPNotSupportedError&quot;&gt; &lt;code&gt;SMTPNotSupportedError&lt;/code&gt; &lt;/a&gt; 서브 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="c049809b0b3dca43adca755105541e8b538f54e1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The full chained traceback is displayed instead of just the primary traceback.</source>
          <target state="translated">버전 3.5으로 변경 : 기본 체인 백 대신 전체 체인 트레이스 백이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="711fd444763cd0036f717bd8008a563384a24c37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now always available and always system-wide.</source>
          <target state="translated">버전 3.5으로 변경 : 이제이 기능을 항상 사용할 수 있으며 항상 시스템 전체에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ca300a492fa8c047c848d82578bce391012031d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried if interrupted by a signal not in &lt;em&gt;sigset&lt;/em&gt; and the signal handler does not raise an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;sigset에&lt;/em&gt; 없는 신호에 의해 중단되고 신호 핸들러가 예외를 발생시키지 않으면 함수가 재 시도됩니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="43d906878d580ec882c290284b9ab54d4b1ee979" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경된 상기 신호 처리기는 예외 (참조 제기하는 경우를 제외하고, 신호가 차단되면 기능은 이제 다시 계산 초과 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 높이는, 근거를위한) &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f032426070d96c005e3a73613f1284f5ea89bff4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경된 상기 신호 처리기는 예외 (참조 제기하는 경우를 제외하고, 신호가 차단되면 기능은 이제 다시 계산 초과 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 높이는, 근거를위한) &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f44f0b44be25394e4dda1f3af2ac453521f6331" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경된 상기 신호 처리기는 예외 (참조 제기하는 경우를 제외하고, 신호가 차단되면 기능은 이제 다시 계산 초과 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 높이는, 근거를위한) &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3312bb02793380a90d78567b06989f46cb463ae4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경된 상기 신호 처리기는 예외 (참조 제기하는 경우를 제외하고, 신호가 차단되면 기능은 이제 다시 계산 초과 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 높이는, 근거를위한) &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="913de5ec7f348b169cb47c58ffc92d6af042eaef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of raising &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경된 상기 신호 처리기는 예외 (참조 제기하는 경우를 제외하고, 신호가 차단되면 기능은 이제 다시 계산 초과 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 높이는, 근거를위한) &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bb119a7d649b2c41a427a648cf56b124372379e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function is now retried with the recomputed &lt;em&gt;timeout&lt;/em&gt; if interrupted by a signal not in &lt;em&gt;sigset&lt;/em&gt; and the signal handler does not raise an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : &lt;em&gt;sigset에&lt;/em&gt; 없는 신호에 의해 중단되고 신호 처리기가 예외를 발생시키지 않으면 함수는 이제 재 계산 된 &lt;em&gt;시간 초과로&lt;/em&gt; 재 시도됩니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f21abc5483fdb8f08f53be6b64d18d0cc42bc13" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The function now sleeps at least &lt;em&gt;secs&lt;/em&gt; even if the sleep is interrupted by a signal, except if the signal handler raises an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5에서 변경됨 : 신호 처리기가 예외를 발생시키는 경우를 제외하고 신호에 의해 절전 모드가 중단 된 경우에도 함수는 이제 최소 1 &lt;em&gt;초&lt;/em&gt; 동안 절전 모드로 전환됩니다 ( 이유는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c4d97776a79f59211ce60e8fb10f881e5ed7b91b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The index() method added support for &lt;em&gt;stop&lt;/em&gt; and &lt;em&gt;start&lt;/em&gt; arguments.</source>
          <target state="translated">버전 3.5으로 변경 : index () 메소드는 &lt;em&gt;중지&lt;/em&gt; 및 &lt;em&gt;시작&lt;/em&gt; 인수에 대한 지원을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="da05a825d634de68f59da743c4d2a7f5ce5035ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The items, keys, and values &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt; of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; now support reverse iteration using &lt;a href=&quot;functions#reversed&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : &lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 의 항목, 키 및 값 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-dictionary-view&quot;&gt;보기&lt;/a&gt; 는 이제 &lt;a href=&quot;functions#reversed&quot;&gt; &lt;code&gt;reversed()&lt;/code&gt; &lt;/a&gt; 사용하여 역 반복을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="769ab4bb38837d1fe5eeac91122a5241724cbf23" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The items, keys, and values &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-dictionary-view&quot;&gt;views&lt;/a&gt; of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; now support reverse iteration using &lt;a href=&quot;functions#reversed&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : &lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 의 항목, 키, 값 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-dictionary-view&quot;&gt;보기&lt;/a&gt; 는 이제 &lt;a href=&quot;functions#reversed&quot;&gt; &lt;code&gt;reversed()&lt;/code&gt; &lt;/a&gt; 사용한 역방향 반복을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="79c57cbd4804445828ab5e973eb271929cf25d89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The method now waits until the connection completes instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception if the connection is interrupted by a signal, the signal handler doesn&amp;rsquo;t raise an exception and the socket is blocking or has a timeout (see the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">버전 3.5으로 변경 : 신호에 의해 연결이 중단되고 신호 처리기가 예외를 발생시키지 않고 소켓이 차단되거나 시간 초과 된 경우 &lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt; 예외 를 발생시키는 대신 연결이 완료 될 때까지 메소드가 대기 합니다 ( &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP&lt;/strong&gt;&lt;/a&gt; 참조). 이론적 근거는 &lt;strong&gt;475&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="4df2146f3dca6cd39d3b1ddb4d8142081fd1d651" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The optional &lt;em&gt;globals&lt;/em&gt; parameter was added.</source>
          <target state="translated">버전 3.5으로 변경 : 선택적 &lt;em&gt;globals&lt;/em&gt; 매개 변수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="65762040faae1031458237f8c5a0b6b7f2da4c2d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The output is now in the same order as the input. Use the &lt;a href=&quot;#cmdoption-json-tool-sort-keys&quot;&gt;&lt;code&gt;--sort-keys&lt;/code&gt;&lt;/a&gt; option to sort the output of dictionaries alphabetically by key.</source>
          <target state="translated">버전 3.5으로 변경 : 이제 출력이 입력과 동일한 순서로 있습니다. &lt;a href=&quot;#cmdoption-json-tool-sort-keys&quot;&gt; &lt;code&gt;--sort-keys&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 사전 출력을 알파벳순으로 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="14f5a37d0372dc4586c6852ae047240ef6dcd7cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The selector is now retried with a recomputed timeout when interrupted by a signal if the signal handler did not raise an exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale), instead of returning an empty list of events before the timeout.</source>
          <target state="translated">버전 3.5에서 변경 : 신호 처리기가 예외를 (참조 제기하지 않은 경우 신호에 의해 중단 될 때 선택은 이제 다시 계산 시간 제한 재 시도 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; 대신 제한 시간 전에 이벤트의 빈 목록을 반환하는 근거를 들어).</target>
        </trans-unit>
        <trans-unit id="0e17fb2eaeba3a82cc077a4c48b27254e7f2f05f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration of the handshake.</source>
          <target state="translated">버전 3.5으로 변경 : 바이트가 수신되거나 전송 될 때마다 소켓 제한 시간이 더 이상 재설정되지 않습니다. 소켓 제한 시간이 이제 최대 총 핸드 쉐이크 지속 시간입니다.</target>
        </trans-unit>
        <trans-unit id="4e50df90065c82bdb3626de39980dee462f8e777" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration to read up to &lt;em&gt;len&lt;/em&gt; bytes.</source>
          <target state="translated">버전 3.5으로 변경 : 바이트가 수신되거나 전송 될 때마다 소켓 제한 시간이 더 이상 재설정되지 않습니다. 소켓 시간 종료는 이제 최대 &lt;em&gt;len&lt;/em&gt; 바이트 까지 읽을 수있는 최대 총 지속 시간 입니다.</target>
        </trans-unit>
        <trans-unit id="1de2fd5869036090f8eb1cf871d89f7fafacf169" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time bytes are received or sent. The socket timeout is now to maximum total duration to write &lt;em&gt;buf&lt;/em&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 바이트가 수신되거나 전송 될 때마다 소켓 제한 시간이 더 이상 재설정되지 않습니다. 소켓 시간 초과는 이제 &lt;em&gt;buf&lt;/em&gt; 를 쓰는 최대 총 지속 시간 입니다.</target>
        </trans-unit>
        <trans-unit id="514beb65bbe6ff9a06ba2a38366dda7a2557951e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The socket timeout is no more reset each time data is sent successfully. The socket timeout is now the maximum total duration to send all data.</source>
          <target state="translated">버전 3.5으로 변경 : 데이터가 성공적으로 전송 될 때마다 소켓 제한 시간이 더 이상 재설정되지 않습니다. 소켓 시간 초과는 이제 모든 데이터를 전송하는 최대 총 지속 시간입니다.</target>
        </trans-unit>
        <trans-unit id="dd4666543dddf9a156068418751783136c794b54" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The source format is no longer restricted when casting to a byte view.</source>
          <target state="translated">버전 3.5으로 변경 : 바이트보기로 캐스트 할 때 소스 형식이 더 이상 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d57e4cac6c885d69fdf75a22765a130f12387e2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The undocumented and unofficial &lt;em&gt;use_load_tests&lt;/em&gt; default argument is deprecated and ignored, although it is still accepted for backward compatibility. The method also now accepts a keyword-only argument &lt;em&gt;pattern&lt;/em&gt; which is passed to &lt;code&gt;load_tests&lt;/code&gt; as the third argument.</source>
          <target state="translated">버전 3.5으로 변경 : 문서화되지 않은 비공식적 인 &lt;em&gt;use_load_tests&lt;/em&gt; 기본 인수는 더 이상 사용되지 않으며 무시되지만 여전히 이전 버전과의 호환성을 위해 허용됩니다. 또한이 메소드는 키워드 전용 인수 &lt;em&gt;패턴&lt;/em&gt; 을 허용하며 , 이는 세 번째 인수 로 &lt;code&gt;load_tests&lt;/code&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b88b8d6709ad625a1f3eb3bb0dd276a8e190ee2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The use of &lt;code&gt;venv&lt;/code&gt; is now recommended for creating virtual environments.</source>
          <target state="translated">버전 3.5으로 변경 : 가상 환경을 만드는 데 &lt;code&gt;venv&lt;/code&gt; 를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dd45381ddd7cbadd6ee2256342ae20ba6240a7c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: The value is no longer dependent on &lt;code&gt;__debug__&lt;/code&gt;.</source>
          <target state="translated">버전 3.5으로 변경 : 값이 더 이상 &lt;code&gt;__debug__&lt;/code&gt; 에 종속되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="df3b7d6c5ffd76afee4cfb5c246fb0244f9f3b1d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: This function now calls &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;os.scandir()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;, making it faster by reducing the number of calls to &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5으로 변경 :이 함수는 이제 &lt;a href=&quot;#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;os.scandir()&lt;/code&gt; &lt;/a&gt; 을 호출하여 &lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt; 대한 호출 수를 줄임으로써 더 빠르게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2cd23e59766668dee39e931d3c5c18d703eb5790" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Unmatched groups are replaced with an empty string.</source>
          <target state="translated">버전 3.5으로 변경 : 일치하지 않는 그룹은 빈 문자열로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="90d14ca1e7a86c6e1aa111ee26ab80044466c4d0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows now returns the file index as &lt;a href=&quot;#os.stat_result.st_ino&quot;&gt;&lt;code&gt;st_ino&lt;/code&gt;&lt;/a&gt; when available.</source>
          <target state="translated">버전 3.5으로 변경 : Windows는 사용 가능한 경우 파일 색인을 &lt;a href=&quot;#os.stat_result.st_ino&quot;&gt; &lt;code&gt;st_ino&lt;/code&gt; &lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2455c48396e9048bec5df8b41196f12b69e2c0a9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows support added.</source>
          <target state="translated">버전 3.5으로 변경 : Windows 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a75d4cab65a904ada83fc80cdf323b0859864ba3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Windows will now zero-fill files when extending.</source>
          <target state="translated">버전 3.5으로 변경 : 확장시 Windows에서 파일을 0으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2bf35f5c0b06d57f477a6074d4165c5861508ac8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is now accepted.</source>
          <target state="translated">버전 3.5으로 변경 : 쓰기 가능한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 가 이제 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf2ebf3075b5354da6e97dbdfda3da902c848a64" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: Writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; is now accepted.</source>
          <target state="translated">버전 3.5에서 변경 : 쓰기 가능한 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트&lt;/a&gt; 열류 객체 가 이제 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="781ff19f4da9469731f10cab675e57e1a67651fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: an error is raised for invalid keys.</source>
          <target state="translated">버전 3.5으로 변경 : 유효하지 않은 키에 대해 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e08b287047b68e950f3b70fddd2fd42a808f85b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: memoryviews can now be indexed with tuple of integers.</source>
          <target state="translated">버전 3.5으로 변경 : 이제 메모리 뷰를 튜플 정수로 색인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4de420d68c43105170ced7ec47395947ed5c63e4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: return a Morsel object instead of a dict.</source>
          <target state="translated">버전 3.5으로 변경 : dict 대신 Morsel 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8141eda3cc928d8c1a170240e88d9a76b94d4872" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: signal (SIG*), handler (&lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_IGN&quot;&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;/a&gt;) and sigmask (&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;/a&gt;) related constants listed below were turned into &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enums&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#signal.getsignal&quot;&gt;&lt;code&gt;getsignal()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt;&lt;code&gt;pthread_sigmask()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.sigpending&quot;&gt;&lt;code&gt;sigpending()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#signal.sigwait&quot;&gt;&lt;code&gt;sigwait()&lt;/code&gt;&lt;/a&gt; functions return human-readable &lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enums&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.5에서 변경 : 아래에 나열된 신호 (SIG *), 핸들러 ( &lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#signal.SIG_IGN&quot;&gt; &lt;code&gt;SIG_IGN&lt;/code&gt; &lt;/a&gt; ) 및 sigmask ( &lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt; &lt;code&gt;SIG_BLOCK&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt; &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt; &lt;code&gt;SIG_SETMASK&lt;/code&gt; &lt;/a&gt; ) 관련 상수는 &lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enums&lt;/code&gt; &lt;/a&gt; 으로 바뀌 었습니다 . &lt;a href=&quot;#signal.getsignal&quot;&gt; &lt;code&gt;getsignal()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#signal.pthread_sigmask&quot;&gt; &lt;code&gt;pthread_sigmask()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#signal.sigpending&quot;&gt; &lt;code&gt;sigpending()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#signal.sigwait&quot;&gt; &lt;code&gt;sigwait()&lt;/code&gt; &lt;/a&gt; 함수는 사람이 읽을 수있는 &lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enums&lt;/code&gt; &lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="467469d597a955220930d635afd411d497f2b551" translate="yes" xml:space="preserve">
          <source>Changed in version 3.5: string usernames and passwords are now encoded to &lt;code&gt;utf-8&lt;/code&gt; instead of being limited to ASCII.</source>
          <target state="translated">버전 3.5에서 변경 : 이제 문자열 사용자 이름과 비밀번호가 ASCII로 제한되지 않고 &lt;code&gt;utf-8&lt;/code&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="c4703595cbc94b658dbf457977e01f8dfb58ccfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.</source>
          <target state="translated">버전 3.6으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="33c68bc30b0eb278dd1c90631136da54fcb004b1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.0: On Linux, &lt;code&gt;getrandom()&lt;/code&gt; is now used in blocking mode to increase the security.</source>
          <target state="translated">버전 3.6.0에서 변경 : Linux에서 이제 &lt;code&gt;getrandom()&lt;/code&gt; 이 보안을 강화하기 위해 차단 모드에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dde59447fb0b1c0d10529b755056cb84bb2339b0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.1: Added support for default values, methods, and docstrings.</source>
          <target state="translated">버전 3.6.1으로 변경 : 기본값, 메소드 및 docstring에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="534b88d9ec35ce43c4c4ff16164bbebe4f19d1a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;file&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;파일&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체를&lt;/a&gt; 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="6c8a2e3f9836291fc0e946f8d5377dcad85971f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;file&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;file&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체를&lt;/a&gt; 받습니다.</target>
        </trans-unit>
        <trans-unit id="39aa3b49c9ac294c623640b7f29bc7454d56c306" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;filename&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;filename&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체를&lt;/a&gt; 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="9bbe48c80caae2611b512b8d7d2a25b147e0eaa6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;filename&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;filename&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체를&lt;/a&gt; 받습니다.</target>
        </trans-unit>
        <trans-unit id="6a61102e29a9c9dbe5d79d04be77cc22257f9a1c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;path&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체를&lt;/a&gt; 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="de62374c687940ca42706bc311daeb1e3c5374d5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;path&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체를&lt;/a&gt; 받습니다.</target>
        </trans-unit>
        <trans-unit id="13ddbda255522a38da65b29a502dcc59e7e40503" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;pathname&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;pathname&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로 유사 오브젝트를&lt;/a&gt; 승인 합니다 .</target>
        </trans-unit>
        <trans-unit id="e31333a86f852412258d4a7dad92b475b9308b55" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.2: The &lt;em&gt;pathname&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6.2에서 변경 : &lt;em&gt;pathname&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체를&lt;/a&gt; 받습니다.</target>
        </trans-unit>
        <trans-unit id="a7282efa64fed355792dd16b448581da28b486a6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6.5: On Windows, &lt;code&gt;TCP_FASTOPEN&lt;/code&gt;, &lt;code&gt;TCP_KEEPCNT&lt;/code&gt; appear if run-time Windows supports.</source>
          <target state="translated">버전 3.6.5에서 변경 : Windows에서 &lt;code&gt;TCP_FASTOPEN&lt;/code&gt; , 런타임 Windows가 지원하는 경우 &lt;code&gt;TCP_KEEPCNT&lt;/code&gt; 가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="88fa871cf9152c017e09b20c3dbfc862ce905690" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6:</source>
          <target state="translated">버전 3.6으로 변경 :</target>
        </trans-unit>
        <trans-unit id="f4b5633e031e529eac5baaa35ca0ffbd9f4ff8f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt; may return instances with &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; set to 1.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt; 가 1로 설정된 인스턴스를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4210689792814f2f7aced7f6c7dddfe07722f034" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;create_module()&lt;/code&gt;&lt;/a&gt; must also be defined.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;create_module()&lt;/code&gt; &lt;/a&gt; 도 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="4eff032926f13e331a854e926a8512ccde50c869" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; used to implicitly commit an open transaction before DDL statements. This is no longer the case.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 은&lt;/a&gt; DDL 문 전에 열린 트랜잭션을 암시 적으로 커밋하는 데 사용되었습니다. 이것은 더 이상 사실이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="00ae6764d29f01ba13d1877d04357df49876b0d0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; is now used in protocols 2 and 3.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt; 는 이제 프로토콜 2와 3에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e7f733aadefd7484de6cce101c64f7e3e26c3174" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; can be used only with bytes patterns and is not compatible with &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;re.ASCII&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; 은&lt;/a&gt; 단지 바이트 패턴을 사용하고와 호환되지 않습니다 수 있습니다 &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;re.ASCII&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d4b70216f734710b0f71b84015d0fffedf444ce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.Options&quot;&gt;&lt;code&gt;Options&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#ssl.Options&quot;&gt; &lt;code&gt;Options&lt;/code&gt; &lt;/a&gt; 플래그를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="8ebc7fa62b30bc16cb08962d6d2a6cc396de3672" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.VerifyFlags&quot;&gt;&lt;code&gt;VerifyFlags&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#ssl.VerifyFlags&quot;&gt; &lt;code&gt;VerifyFlags&lt;/code&gt; &lt;/a&gt; 플래그를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="da89f524a3cf6c20b08474ba9dbdb0bb72c78f1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt; returns &lt;a href=&quot;#ssl.VerifyMode&quot;&gt;&lt;code&gt;VerifyMode&lt;/code&gt;&lt;/a&gt; enum:</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#ssl.VerifyMode&quot;&gt; &lt;code&gt;VerifyMode&lt;/code&gt; &lt;/a&gt; 열거 형을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9c71667e821804ce244b7e8ab940e0a4ae47ec96" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;#tracemalloc.DomainFilter&quot;&gt;&lt;code&gt;DomainFilter&lt;/code&gt;&lt;/a&gt; instances are now also accepted in &lt;em&gt;filters&lt;/em&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : 이제 &lt;a href=&quot;#tracemalloc.DomainFilter&quot;&gt; &lt;code&gt;DomainFilter&lt;/code&gt; &lt;/a&gt; 인스턴스가 &lt;em&gt;필터&lt;/em&gt; 에서도 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc35f941ba9beee55bf4e8743d796929aa39c697" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is now raised if an error occurs when the underlying &lt;code&gt;close()&lt;/code&gt; call is made.</source>
          <target state="translated">버전 3.6으로 변경 : 기본 &lt;code&gt;close()&lt;/code&gt; 호출 시 오류가 발생하면 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="43b467e71f1b1a0f133a955c8d9f1c706ca89be1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; can now be used to write files into the archive with the &lt;code&gt;mode='w'&lt;/code&gt; option.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 을 사용하여 &lt;code&gt;mode='w'&lt;/code&gt; 옵션을 사용하여 파일을 아카이브에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7e44cc836d981707db26592dad1f82b31b9f6c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;SIO_LOOPBACK_FAST_PATH&lt;/code&gt; was added.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;code&gt;SIO_LOOPBACK_FAST_PATH&lt;/code&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e7f78e00f429bc4a194ed00224c7519fa919edf9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;SO_DOMAIN&lt;/code&gt;, &lt;code&gt;SO_PROTOCOL&lt;/code&gt;, &lt;code&gt;SO_PEERSEC&lt;/code&gt;, &lt;code&gt;SO_PASSSEC&lt;/code&gt;, &lt;code&gt;TCP_USER_TIMEOUT&lt;/code&gt;, &lt;code&gt;TCP_CONGESTION&lt;/code&gt; were added.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;code&gt;SO_DOMAIN&lt;/code&gt; , &lt;code&gt;SO_PROTOCOL&lt;/code&gt; , &lt;code&gt;SO_PEERSEC&lt;/code&gt; , &lt;code&gt;SO_PASSSEC&lt;/code&gt; , &lt;code&gt;TCP_USER_TIMEOUT&lt;/code&gt; , &lt;code&gt;TCP_CONGESTION&lt;/code&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c7e3ffb98f73373e2379aeb30c589269e8450cd6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;code&gt;StreamRequestHandler.wfile&lt;/code&gt; also supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; writable interface.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;code&gt;StreamRequestHandler.wfile&lt;/code&gt; 은 &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt; 쓰기 가능 인터페이스 도 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="af292d5b2ccd04b75f9cea60a24e59968c03fe31" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;_class&lt;/em&gt; defaults to the policy &lt;code&gt;message_factory&lt;/code&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;_class의&lt;/em&gt; 기본값은 &lt;code&gt;message_factory&lt;/code&gt; 정책 입니다.</target>
        </trans-unit>
        <trans-unit id="dcf9eaa5862672540ea39d8597a4d9b17eabc5b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;_factory&lt;/em&gt; defaults to the policy &lt;code&gt;message_factory&lt;/code&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;_factory&lt;/em&gt; 기본값은 정책 &lt;code&gt;message_factory&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d08b3d9107e6d6d6ece8eb5e582f8e99a89f34a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing path-like objects on POSIX.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;쉘&lt;/em&gt; 이 &lt;code&gt;False&lt;/code&gt; 인 경우 &lt;em&gt;args&lt;/em&gt; 매개 변수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로 유사 오브젝트를&lt;/a&gt; 허용하고 POSIX에서 경로 유사 오브젝트를 포함하는 시퀀스입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60019bcfd12137453d4b565a710eb634c3463962" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing path-like objects on POSIX.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;em&gt;args&lt;/em&gt; 매개 변수는 &lt;em&gt;shell&lt;/em&gt; 이 &lt;code&gt;False&lt;/code&gt; 이면 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체를&lt;/a&gt; 받아들이고 POSIX에서 경로 류 객체를 포함하는 시퀀스를받습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d86cbdc32791ac508e8f47dbb278087c01e6acb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;cwd&lt;/em&gt; 매개 변수는 POSIX 에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 오브젝트&lt;/a&gt; 를 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="dcdfc72ee57c97e356446767f7d45eed1f786d18" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;em&gt;cwd&lt;/em&gt; 매개 변수는 POSIX 에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체&lt;/a&gt; 를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="4c980ee857443405a386cbe78274a15827552196" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;decode_data&lt;/em&gt; is now &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">버전 3.6으로 변경 : 기본적으로 &lt;em&gt;decode_data&lt;/em&gt; 가 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="47741318ca8574e0af3ac49bc8b84e45643a59fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;delete&lt;/em&gt; is now supported as a keyword argument.</source>
          <target state="translated">버전 3.6으로 변경 : 이제 키워드 인수로 &lt;em&gt;삭제&lt;/em&gt; 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="21965ce1bba4a40b703f9cbd47d7a8ec640e6c09" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; were added. See &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;인코딩&lt;/em&gt; 및 &lt;em&gt;오류&lt;/em&gt; 가 추가되었습니다. 자세한 내용은 &lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be3dfffa6ddcd046058cb9dcff84508473e3344e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;executable&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;실행 가능&lt;/em&gt; 매개 변수는 POSIX 에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 오브젝트&lt;/a&gt; 를 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="a26c08b77cddfaa2ea0b583d985a1ac5bf97c5c8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;executable&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on POSIX.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;em&gt;실행 가능한&lt;/em&gt; 매개 변수는 POSIX 에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체&lt;/a&gt; 를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="31b08051ac4f94d01491e01039839a3b077ce116" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;fp&lt;/em&gt; can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;. The input encoding should be UTF-8, UTF-16 or UTF-32.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;fp&lt;/em&gt; 는 이제 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;이진 파일이&lt;/a&gt; 될 수 있습니다 . 입력 인코딩은 UTF-8, UTF-16 또는 UTF-32 여야합니다.</target>
        </trans-unit>
        <trans-unit id="afc4900763db59a381094462e592a410c3113af2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;fp&lt;/em&gt; can now be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt;. The input encoding should be UTF-8, UTF-16 or UTF-32.</source>
          <target state="translated">버전 3.6에서 변경 : &lt;em&gt;fp&lt;/em&gt; 는 이제 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;바이너리 파일이&lt;/a&gt; 될 수 있습니다 . 입력 인코딩은 UTF-8, UTF-16 또는 UTF-32 여야합니다.</target>
        </trans-unit>
        <trans-unit id="026a8bed5c291e73c8ea340a14374666fe21b9d7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;items&lt;/em&gt; can be passed as separate arguments, not just as a single tuple.</source>
          <target state="translated">버전 3.6으로 변경 : 단일 튜플이 아닌 개별 인수로 &lt;em&gt;항목&lt;/em&gt; 을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eadf3f754c78312c2ca097daad9bf6d87d412074" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;level&lt;/em&gt; can now be used as a keyword parameter.</source>
          <target state="translated">버전 3.6으로 변경 : 이제 &lt;em&gt;레벨&lt;/em&gt; 을 키워드 매개 변수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59ae0db1d9e6283e9808d22706c028dc6a10619e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;max_length&lt;/em&gt; can be used as a keyword argument.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;max_length&lt;/em&gt; 를 키워드 인수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffc027abbb534ce36d0cf8b43100ff69bf20c0ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;s&lt;/em&gt; can now be of type &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. The input encoding should be UTF-8, UTF-16 or UTF-32.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;s&lt;/em&gt; 는 이제 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 유형이 될 수 있습니다 . 입력 인코딩은 UTF-8, UTF-16 또는 UTF-32 여야합니다.</target>
        </trans-unit>
        <trans-unit id="df42dc94062c23ea1ce9b505866c2b67ec71fbbc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;session&lt;/em&gt; argument was added.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;세션&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="6834f1f201f2e030bd37d366063f0aad0ca492be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: &lt;em&gt;wbits&lt;/em&gt; and &lt;em&gt;bufsize&lt;/em&gt; can be used as keyword arguments.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;wbits&lt;/em&gt; 및 &lt;em&gt;bufsize&lt;/em&gt; 를 키워드 인수로 &lt;em&gt;사용할&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="148e1eddf44736168986e7b432a12d1ae142d0d6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;old&lt;/em&gt; and &lt;em&gt;new&lt;/em&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;old&lt;/em&gt; 및 &lt;em&gt;new &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체&lt;/a&gt; 를 허용합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b539484d3c533991a9390495e6ec8515b5633e78" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;path&lt;/em&gt; 및 &lt;em&gt;attribute&lt;/em&gt; 에 &lt;em&gt;경로&lt;/em&gt; 와 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;유사한 객체&lt;/a&gt; 를 허용 &lt;em&gt;합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61bb5fd852218eca9364c0a8a6d0490b6c60c202" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;paths&lt;/em&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;path&lt;/em&gt; 및 &lt;em&gt;paths&lt;/em&gt; 에 &lt;em&gt;경로&lt;/em&gt; 와 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;같은 객체&lt;/a&gt; 를 허용 &lt;em&gt;합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ec64363e8765b00c9861b598746ddb49c8a31b8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;src&lt;/em&gt; 및 &lt;em&gt;dst에&lt;/em&gt; 대한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체&lt;/a&gt; 를 허용합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b6e668cddc79fa4ede6446293ab218e665bce22" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Unix.</source>
          <target state="translated">버전 3.6으로 변경 : Unix 에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체&lt;/a&gt; 를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="3bcacbb4ebcaf9b04a248a42fcef191f8d38cf24" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체를&lt;/a&gt; 받아들 입니다.</target>
        </trans-unit>
        <trans-unit id="4f226ab8faf378aa48c8065e3e2d77034b128478" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;old&lt;/em&gt; and &lt;em&gt;new&lt;/em&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;old&lt;/em&gt; and &lt;em&gt;new&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="d5950c7365642f21a70d7bd58788a497c0d6e36a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;attribute&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="ac65b1c545d285b5e835bfbff4b374b4d703c6bc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;paths&lt;/em&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;path&lt;/em&gt; and &lt;em&gt;paths&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="5d05812155201392f33d9be371a80301bbae991f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="83c229f27aa23d537c1551a2c6c8d3479c79cb5a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Unix.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Unix.</target>
        </trans-unit>
        <trans-unit id="5d8ae33587664f973e64e5c0efdde39c611b3a20" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fdb53daf2295762bd00f7a5e887b11c2e3b59860" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</source>
          <target state="translated">버전 3.6으로 변경 : 일련의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체를&lt;/a&gt; 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="c118c87dd9e568c1f9c7800c437ada49bb1495af" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</source>
          <target state="translated">Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="904cf11c11da5661ef50b77309c0b6f2c48e0c07" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Add the &lt;em&gt;source&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;소스&lt;/em&gt; 매개 변수를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="661d84cd7b5474b1db80448f4e25cac38fa84565" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters</source>
          <target state="translated">버전 3.6으로 변경 : &lt;em&gt;인코딩&lt;/em&gt; 및 &lt;em&gt;오류&lt;/em&gt; 매개 변수 추가</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
