<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="d636c6e62c00ceb20cb6fbfd984b54d0a9ac85b9" translate="yes" xml:space="preserve">
          <source>$ &amp;lt;venv&amp;gt;/bin/Activate.ps1</source>
          <target state="translated">$ &amp;lt;venv&amp;gt; /bin/Activate.ps1</target>
        </trans-unit>
        <trans-unit id="bfd189faf872da126db732d4366369bab08215e4" translate="yes" xml:space="preserve">
          <source>$ . &amp;lt;venv&amp;gt;/bin/activate.fish</source>
          <target state="translated">$. &amp;lt;venv&amp;gt; /bin/activate.fish</target>
        </trans-unit>
        <trans-unit id="d4819d7b782c8d220c617a4480b79772012f5d70" translate="yes" xml:space="preserve">
          <source>$ source &amp;lt;venv&amp;gt;/bin/activate</source>
          <target state="translated">$ 소스 &amp;lt;venv&amp;gt; / bin / activate</target>
        </trans-unit>
        <trans-unit id="171dc0bc1cee407b294ea507b85250e367484360" translate="yes" xml:space="preserve">
          <source>$ source &amp;lt;venv&amp;gt;/bin/activate.csh</source>
          <target state="translated">$ 소스 &amp;lt;venv&amp;gt; /bin/activate.csh</target>
        </trans-unit>
        <trans-unit id="b71d5abb38d8ccec9406723e7b5689b9c2eaa73a" translate="yes" xml:space="preserve">
          <source>$ source &amp;lt;venv&amp;gt;/bin/activate.fish</source>
          <target state="translated">$ 소스 &amp;lt;venv&amp;gt; /bin/activate.fish</target>
        </trans-unit>
        <trans-unit id="6acf37181160bedc8e878160c35c9965986a3900" translate="yes" xml:space="preserve">
          <source>%-style formatting: &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt; call the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; respectively; other codes (such as &lt;code&gt;%i&lt;/code&gt; or &lt;code&gt;%h&lt;/code&gt; for IntEnum) treat the enum member as its mixed-in type.</source>
          <target state="translated">% 스타일 형식 : &lt;code&gt;%s&lt;/code&gt; 및 &lt;code&gt;%r&lt;/code&gt; 은 각각 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 호출합니다 . 다른 코드 (예 : IntEnum의 &lt;code&gt;%i&lt;/code&gt; 또는 &lt;code&gt;%h&lt;/code&gt; )는 열거 형 멤버를 혼합 유형으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="bbd8c6af43ae4fd11b99eab10a2b16f444e1c937" translate="yes" xml:space="preserve">
          <source>%-style formatting: &lt;code&gt;%s&lt;/code&gt; and &lt;code&gt;%r&lt;/code&gt; call the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; respectively; other codes (such as &lt;code&gt;%i&lt;/code&gt; or &lt;code&gt;%h&lt;/code&gt; for IntEnum) treat the enum member as its mixed-in type.</source>
          <target state="translated">% 스타일 형식 : &lt;code&gt;%s&lt;/code&gt; 및 &lt;code&gt;%r&lt;/code&gt; 은 각각 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스의 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 호출합니다 . 다른 코드 (예 : IntEnum의 &lt;code&gt;%i&lt;/code&gt; 또는 &lt;code&gt;%h&lt;/code&gt; )는 열거 형 멤버를 혼합 유형으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f395a23c8f434f9b2cf155b029536997efaf5090" translate="yes" xml:space="preserve">
          <source>%A</source>
          <target state="translated">%A</target>
        </trans-unit>
        <trans-unit id="6a555b0fc6e6004d7217b63ef8d77383dc98886c" translate="yes" xml:space="preserve">
          <source>%E</source>
          <target state="translated">%E</target>
        </trans-unit>
        <trans-unit id="eceb76dbfd2319c4c92cab6bfcecf54ce11c7abe" translate="yes" xml:space="preserve">
          <source>%K</source>
          <target state="translated">%K</target>
        </trans-unit>
        <trans-unit id="ae7ee2b39ae694d53324ea793390110e02da2f21" translate="yes" xml:space="preserve">
          <source>%N</source>
          <target state="translated">%N</target>
        </trans-unit>
        <trans-unit id="b52cb34cae946be5f6f5c64c3086b5781eae527d" translate="yes" xml:space="preserve">
          <source>%T</source>
          <target state="translated">%T</target>
        </trans-unit>
        <trans-unit id="d16b089deff7110322274d28049bef5aced59a81" translate="yes" xml:space="preserve">
          <source>%W</source>
          <target state="translated">%W</target>
        </trans-unit>
        <trans-unit id="7178c12021c2bb5feed1874dafb4f65d4ec4415f" translate="yes" xml:space="preserve">
          <source>%X</source>
          <target state="translated">%X</target>
        </trans-unit>
        <trans-unit id="4e00fa75179e8b48a63920281fd9a86060dd01f0" translate="yes" xml:space="preserve">
          <source>%Y</source>
          <target state="translated">%Y</target>
        </trans-unit>
        <trans-unit id="1e3b1ac5efeaaff376b31d3a4764f2d240c9d92d" translate="yes" xml:space="preserve">
          <source>%f</source>
          <target state="translated">%f</target>
        </trans-unit>
        <trans-unit id="dfb7a6afd87f36536c1b347845bc323855afe865" translate="yes" xml:space="preserve">
          <source>%h</source>
          <target state="translated">%h</target>
        </trans-unit>
        <trans-unit id="1f52b3bfe964c0a378054411e8c233760bcad4a7" translate="yes" xml:space="preserve">
          <source>%k</source>
          <target state="translated">%k</target>
        </trans-unit>
        <trans-unit id="347cd9c53ff77d41a7b22aa56c7b4efaf54658e3" translate="yes" xml:space="preserve">
          <source>%s</source>
          <target state="translated">%s</target>
        </trans-unit>
        <trans-unit id="28f18631b86ea95e69ca85cc2051b3920dbf0cb9" translate="yes" xml:space="preserve">
          <source>%t</source>
          <target state="translated">%t</target>
        </trans-unit>
        <trans-unit id="9c1338a41162fa2ffbd2ea0a579ad87a6c084a0e" translate="yes" xml:space="preserve">
          <source>%w</source>
          <target state="translated">%w</target>
        </trans-unit>
        <trans-unit id="f7d71ad6a293c739fdb380f7e3761bf9ccf1933b" translate="yes" xml:space="preserve">
          <source>%x</source>
          <target state="translated">%x</target>
        </trans-unit>
        <trans-unit id="f0e4c34635ae35eb852917a50f2eb60917712fc0" translate="yes" xml:space="preserve">
          <source>%y</source>
          <target state="translated">%y</target>
        </trans-unit>
        <trans-unit id="d9bfc45fa456f364f22502b20f8811336cf44c34" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2001&amp;ndash;2020 Python Software Foundation</source>
          <target state="translated">&amp;copy; 2001&amp;ndash;2020 Python 소프트웨어 재단</target>
        </trans-unit>
        <trans-unit id="14fe8bf6940a331256b03c00acdf5e804121ad54" translate="yes" xml:space="preserve">
          <source>&amp;hellip;while their &lt;code&gt;repr&lt;/code&gt; has more information:</source>
          <target state="translated">&amp;hellip; 그들의 &lt;code&gt;repr&lt;/code&gt; 에 더 많은 정보가있는 동안 :</target>
        </trans-unit>
        <trans-unit id="6fd903bd55ca652e253d195342779e823d8a8c38" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;&lt;code&gt;..&lt;/code&gt;&amp;rdquo; components are also eliminated (this is the only method to do so):</source>
          <target state="translated">&quot; &lt;code&gt;..&lt;/code&gt; &quot;구성 요소도 제거됩니다 (이를 수행하는 유일한 방법).</target>
        </trans-unit>
        <trans-unit id="026a40003114e1686c08e42b315d96404d563f72" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Byteswap&amp;rdquo; all items of the array. This is only supported for values which are 1, 2, 4, or 8 bytes in size; for other types of values, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. It is useful when reading data from a file written on a machine with a different byte order.</source>
          <target state="translated">배열의 모든 항목을 &quot;바이트 교환&quot;합니다. 이것은 크기가 1, 2, 4 또는 8 바이트 인 값에 대해서만 지원됩니다. 다른 유형의 값에 대해서는 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 다른 바이트 순서로 시스템에 기록 된 파일에서 데이터를 읽을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ee49c81f527e401e2c75d1e2bbc1f86464e7815e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Byteswap&amp;rdquo; all samples in a fragment and returns the modified fragment. Converts big-endian samples to little-endian and vice versa.</source>
          <target state="translated">조각의 모든 샘플을 &quot;Byteswap&quot;하고 수정 된 조각을 반환합니다. 빅 엔디안 샘플을 리틀 엔디안으로 또는 그 반대로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="215a9c5e9170b3b9d86e294d2e092c569838ae82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;EA IFF 85&amp;rdquo; Standard for Interchange Format Files, Jerry Morrison, Electronic Arts, January 1985.</source>
          <target state="translated">교환 형식 파일에 대한 &quot;EA IFF 85&quot;표준, Jerry Morrison, Electronic Arts, 1985 년 1 월.</target>
        </trans-unit>
        <trans-unit id="f43c259a4d237937a6b009dcfa35ecf82c644a3a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Format specifications&amp;rdquo; are used within replacement fields contained within a format string to define how individual values are presented (see &lt;a href=&quot;#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;). They can also be passed directly to the built-in &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; function. Each formattable type may define how the format specification is to be interpreted.</source>
          <target state="translated">&quot;형식 사양&quot;은 형식 문자열에 포함 된 대체 필드 내에서 사용되어 개별 값이 표시되는 방식을 정의합니다 ( &lt;a href=&quot;#formatstrings&quot;&gt;형식 문자열 구문&lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;형식화 된 문자열 리터럴 참조&lt;/a&gt; ). 내장 된 &lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 함수 에 직접 전달할 수도 있습니다 . 각 형식화 가능한 유형은 형식 사양이 해석되는 방식을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc5e35be19edf2e33e2629620866307d18b1d512" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Format specifications&amp;rdquo; are used within replacement fields contained within a format string to define how individual values are presented (see &lt;a href=&quot;#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;). They can also be passed directly to the built-in &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; function. Each formattable type may define how the format specification is to be interpreted.</source>
          <target state="translated">&quot;형식 사양&quot;은 형식 문자열에 포함 된 대체 필드 내에서 사용되어 개별 값이 표시되는 방식을 정의합니다 ( &lt;a href=&quot;#formatstrings&quot;&gt;형식 문자열 구문&lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;형식화 된 문자열 리터럴 참조&lt;/a&gt; ). 내장 된 &lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 함수 에 직접 전달할 수도 있습니다 . 각 형식화 가능한 유형은 형식 사양이 해석되는 방식을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c41e9aaa2af0bc86771f8c1373bc05fa74b079bd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Hidden&amp;rdquo; attributes can be accessed by typing the beginning of hidden name after a &amp;lsquo;.&amp;rsquo;, e.g. &amp;lsquo;_&amp;rsquo;. This allows access to modules with &lt;code&gt;__all__&lt;/code&gt; set, or to class-private attributes.</source>
          <target state="translated">'숨김'속성은 '.'뒤에 숨겨진 이름의 시작 부분을 입력하여 액세스 할 수 있습니다 (예 : '_'). 이를 통해 &lt;code&gt;__all__&lt;/code&gt; 세트 가있는 모듈 또는 클래스 전용 속성에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75c0ef01b80e1d6d38f24e4aea62f5eda62bbd13" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Interactive&amp;rdquo; text files (files for which &lt;a href=&quot;io#io.IOBase.isatty&quot;&gt;&lt;code&gt;isatty()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;) use line buffering. Other text files use the policy described above for binary files.</source>
          <target state="translated">&quot;대화 형&quot;텍스트 파일 ( &lt;a href=&quot;io#io.IOBase.isatty&quot;&gt; &lt;code&gt;isatty()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;True&lt;/code&gt; 를 반환 하는 파일 )은 라인 버퍼링을 사용합니다. 다른 텍스트 파일은 바이너리 파일에 대해 위에서 설명한 정책을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="581fd8757874eabc5ae570d63e6083f9a3522364" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Interface name&amp;rdquo; is a name as documented in &lt;a href=&quot;#socket.if_nameindex&quot;&gt;&lt;code&gt;if_nameindex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&quot;인터페이스 이름&quot;은 &lt;a href=&quot;#socket.if_nameindex&quot;&gt; &lt;code&gt;if_nameindex()&lt;/code&gt; &lt;/a&gt; 설명 된 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="65c0d6bdb6104214e7871f4f251f450f34122d08" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Konqueror&amp;rdquo; is the file manager for the KDE desktop environment for Unix, and only makes sense to use if KDE is running. Some way of reliably detecting KDE would be nice; the &lt;code id=&quot;index-2&quot;&gt;KDEDIR&lt;/code&gt; variable is not sufficient. Note also that the name &amp;ldquo;kfm&amp;rdquo; is used even when using the &lt;strong&gt;konqueror&lt;/strong&gt; command with KDE 2 &amp;mdash; the implementation selects the best strategy for running Konqueror.</source>
          <target state="translated">&amp;ldquo;Konqueror&amp;rdquo;는 Unix 용 KDE 데스크탑 환경의 파일 관리자이며 KDE가 실행중인 경우에만 사용하는 것이 좋습니다. KDE를 안정적으로 감지하는 방법이 좋습니다. &lt;code id=&quot;index-2&quot;&gt;KDEDIR&lt;/code&gt; 의 변수는 충분하지 않다. KDE 2 에서 &lt;strong&gt;konqueror&lt;/strong&gt; 명령을 사용할 때에도 &quot;kfm&quot;이라는 이름이 사용된다는 점에 유의 하십시오. 구현은 Konqueror를 실행하기위한 최상의 전략을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="b905e4be2189148fcd1a980479c0651673aea5e8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;On&amp;rdquo;, &amp;ldquo;true&amp;rdquo;, or &amp;ldquo;current&amp;rdquo; for things like Checkbuttons and radiobuttons</source>
          <target state="translated">확인 버튼 및 라디오 버튼과 같은 항목의 경우 &quot;켜기&quot;, &quot;참&quot;또는 &quot;현재&quot;</target>
        </trans-unit>
        <trans-unit id="913461c16d1c272bf128b2cbff58f2c7cf3f3ad7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Preferred&amp;rdquo; blocksize for efficient file system I/O. Writing to a file in smaller chunks may cause an inefficient read-modify-rewrite.</source>
          <target state="translated">효율적인 파일 시스템 I / O를위한 &quot;선호&quot;블록 크기. 더 작은 청크로 파일에 쓰면 읽기-수정-다시 쓰기가 비효율적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6368e6b01320ed45f1a7e9d708c65e6ae24541f2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Statistics for the Behavioral Sciences&amp;rdquo;, Frederick J Gravetter and Larry B Wallnau (8th Edition).</source>
          <target state="translated">&quot;행동 과학을위한 통계&quot;, Frederick J Gravetter 및 Larry B Wallnau (8 판).</target>
        </trans-unit>
        <trans-unit id="647b9a16cdd6f24a0ffb77f86a3a4deb2da5f411" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;[Non-text (%(type)s) part of message omitted, filename %(filename)s]&amp;rdquo;</source>
          <target state="translated">&quot;[비 텍스트 (% (유형) s) 메시지 부분 생략, 파일 이름 % (파일 이름) s]&quot;</target>
        </trans-unit>
        <trans-unit id="0d461fb4c851acd7d6f985a62eb4809506963484" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;answered&amp;rdquo; label</source>
          <target state="translated">&quot;응답&quot;레이블</target>
        </trans-unit>
        <trans-unit id="cdd89f302be8e6d14262bb237f22997390c1fde2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto&amp;rdquo;: adapts the appearance of the turtle corresponding to the value of pensize.</source>
          <target state="translated">&quot;auto&quot;: pensize 값에 해당하는 거북이의 모양을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="b2130c0b07d2178fd10b8d50d59f856250e329cb" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;collected&amp;rdquo;: When &lt;em&gt;phase&lt;/em&gt; is &amp;ldquo;stop&amp;rdquo;, the number of objects successfully collected.</source>
          <target state="translated">&quot;수집 됨&quot;: &lt;em&gt;단계&lt;/em&gt; 가 &quot;중지&quot;인 경우 성공적으로 수집 된 개체 수입니다.</target>
        </trans-unit>
        <trans-unit id="39edecd1bf93559161e4f418ea423f8b8dce9bf5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;compound&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;compound&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6126ecece7f554c29a2b5b1004b80c734b1cbf2d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cur&amp;rdquo; subdirectory</source>
          <target state="translated">&quot;cur&quot;하위 디렉토리</target>
        </trans-unit>
        <trans-unit id="4e9f1ac661876c6540b9857145ab2ab6c926dfa1" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cur&amp;rdquo; subdirectory and S flag</source>
          <target state="translated">&quot;cur&quot;하위 디렉토리 및 S 플래그</target>
        </trans-unit>
        <trans-unit id="665006e128960bcd18ac3d2ef11d25563f76a4bf" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;deleted&amp;rdquo; label</source>
          <target state="translated">&quot;삭제 된&quot;라벨</target>
        </trans-unit>
        <trans-unit id="65b5f1b4c69f0aadb34896e751d15e09d2725c12" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fast&amp;rdquo;: 10</source>
          <target state="translated">&quot;빠름&quot;: 10</target>
        </trans-unit>
        <trans-unit id="984d5da8c3afa668234350ad5d7686ad30e4091e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fastest&amp;rdquo;: 0</source>
          <target state="translated">&quot;가장 빠름&quot;: 0</target>
        </trans-unit>
        <trans-unit id="e96a64834bc227b8d16e7b6171210c050ca16b0d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fillcolor&amp;rdquo;: color-string or color-tuple</source>
          <target state="translated">&quot;fillcolor&quot;: 색상 문자열 또는 색상 튜플</target>
        </trans-unit>
        <trans-unit id="87f6b575f48806d8896ad121ee30be27c2bed273" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;flagged&amp;rdquo; sequence</source>
          <target state="translated">&quot;신고 된&quot;시퀀스</target>
        </trans-unit>
        <trans-unit id="ba07291df7032269c493e65286e8916ccb442c8d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;forwarded&amp;rdquo; label</source>
          <target state="translated">&quot;전달 된&quot;레이블</target>
        </trans-unit>
        <trans-unit id="0b1af59030fde48e61fcba6c3fe949a0b3bd9a42" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;forwarded&amp;rdquo; or &amp;ldquo;resent&amp;rdquo; label</source>
          <target state="translated">&quot;전달&quot;또는 &quot;재전송&quot;레이블</target>
        </trans-unit>
        <trans-unit id="1c6b21d380be1c4c96373a6b686901155c8e3563" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;generation&amp;rdquo;: The oldest generation being collected.</source>
          <target state="translated">&quot;generation&quot;: 수집되는 가장 오래된 세대.</target>
        </trans-unit>
        <trans-unit id="e2648cb9aebe6e8968160e9e8da88061e5c0410e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;image&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;image&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4babee6ed04e7841348dc832c315c8ef723b808f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;logo&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;logo&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="aba80fa3a529bbdedc5ca712d01b67ba53f5dfd6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mbox&amp;rdquo; is a family of several mutually incompatible mailbox formats</source>
          <target state="translated">&quot;mbox&quot;는 상호 호환되지 않는 여러 사서함 형식의 제품군입니다.</target>
        </trans-unit>
        <trans-unit id="d4864e937adf2ce8b2bd8d1d58cbe12e2433a360" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;noresize&amp;rdquo;: no adaption of the turtle&amp;rsquo;s appearance takes place.</source>
          <target state="translated">&amp;ldquo;noresize&amp;rdquo;: 거북이의 외모에 대한 적응이 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a67a67b292cce1c03102084fc1fbc01c92960f82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;normal&amp;rdquo;: 6</source>
          <target state="translated">&quot;보통&quot;: 6</target>
        </trans-unit>
        <trans-unit id="3aeb900c18392b9f62150dcb9cf2bdeef9aa3195" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;notBefore&amp;rdquo; or &amp;ldquo;notAfter&amp;rdquo; dates must use GMT (&lt;a href=&quot;https://tools.ietf.org/html/rfc5280.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 5280&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&quot;notBefore&quot;또는 &quot;notAfter&quot;날짜는 GMT ( &lt;a href=&quot;https://tools.ietf.org/html/rfc5280.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 5280&lt;/strong&gt;&lt;/a&gt; )를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="157c02772204596e3091e19080235f29c1f73d1c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;outline&amp;rdquo;: positive number</source>
          <target state="translated">&quot;개요&quot;: 양수</target>
        </trans-unit>
        <trans-unit id="bc6391f3080153052e06af4f33919c6e1f5df2f9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pencolor&amp;rdquo;: color-string or color-tuple</source>
          <target state="translated">&quot;pencolor&quot;: 색상 문자열 또는 색상 튜플</target>
        </trans-unit>
        <trans-unit id="bdec328f2141ea46021d5b8e4b8a58bcdc655ee6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pendown&amp;rdquo;: True/False</source>
          <target state="translated">&quot;펜 다운&quot;: 참 / 거짓</target>
        </trans-unit>
        <trans-unit id="145223a40817e06b6293365c91f4785e28e0fa3a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pensize&amp;rdquo;: positive number</source>
          <target state="translated">&quot;pensize&quot;: 양수</target>
        </trans-unit>
        <trans-unit id="8280fcf1436a9540955ca92342c59214c8328791" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;polygon&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;polygon&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4d882d4412b2e2c2980e3bc4bb8e286260b77022" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;replied&amp;rdquo; sequence</source>
          <target state="translated">&quot;응답 한&quot;시퀀스</target>
        </trans-unit>
        <trans-unit id="4429d77cb2539bc10b1c6b029871efb064c7c002" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;resizemode&amp;rdquo;: &amp;ldquo;auto&amp;rdquo; or &amp;ldquo;user&amp;rdquo; or &amp;ldquo;noresize&amp;rdquo;</source>
          <target state="translated">&quot;resizemode&quot;: &quot;auto&quot;또는 &quot;user&quot;또는 &quot;noresize&quot;</target>
        </trans-unit>
        <trans-unit id="57ffbc4d99a90e7cf8f82c9231d2f875a285a129" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;shown&amp;rdquo;: True/False</source>
          <target state="translated">&quot;표시됨&quot;: 참 / 거짓</target>
        </trans-unit>
        <trans-unit id="60800304cddb3cb32a438caf9932b87d2a966377" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;slow&amp;rdquo;: 3</source>
          <target state="translated">&quot;느림&quot;: 3</target>
        </trans-unit>
        <trans-unit id="03828e4161392050f578ed67f26b3a84b8091f59" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;slowest&amp;rdquo;: 1</source>
          <target state="translated">&quot;가장 느림&quot;: 1</target>
        </trans-unit>
        <trans-unit id="c9e7276ad1f62ac907f5c021bfa6e2f2178b4c66" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;speed&amp;rdquo;: number in range 0..10</source>
          <target state="translated">&quot;speed&quot;: 0..10 범위의 숫자</target>
        </trans-unit>
        <trans-unit id="dbbe9f6300ca62a5537ad1f669df8db5ca1bc2f0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;standard&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;standard&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ba8af76acdd2a14dec1bd9fe51dbca31815a4238" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;start&amp;rdquo;: The garbage collection is about to start.</source>
          <target state="translated">&quot;start&quot;: 가비지 수집이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="b8d143ab977de5d55af78ff93f53507ed813aed1" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;stop&amp;rdquo;: The garbage collection has finished.</source>
          <target state="translated">&quot;중지&quot;: 가비지 수집이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="6653e6aaf57aa67125001c61d26bb2dbf0e12afe" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;stretchfactor&amp;rdquo;: (positive number, positive number)</source>
          <target state="translated">&quot;stretchfactor&quot;: (양수, 양수)</target>
        </trans-unit>
        <trans-unit id="cdaf4863cf6832fd51082d55f97341b17a71bb3b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;tilt&amp;rdquo;: number</source>
          <target state="translated">&quot;틸트&quot;: 숫자</target>
        </trans-unit>
        <trans-unit id="e6aa1b80e44662676fa8188af163d25e69255c3f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;uncollectable&amp;rdquo;: When &lt;em&gt;phase&lt;/em&gt; is &amp;ldquo;stop&amp;rdquo;, the number of objects that could not be collected and were put in &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&quot;수집 불가&quot;: &lt;em&gt;단계&lt;/em&gt; 가 &quot;중지&quot;인 경우 수집 할 수없고 &lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt; 에 넣은 개체의 수입니다 .</target>
        </trans-unit>
        <trans-unit id="cf348e14b616f99c15bcf61b937e214f3a0a9076" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;unseen&amp;rdquo; label</source>
          <target state="translated">&quot;보이지 않는&quot;레이블</target>
        </trans-unit>
        <trans-unit id="1afb9146c6fc6be49d5b14a7335d99829bf3fa16" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;unseen&amp;rdquo; sequence</source>
          <target state="translated">&quot;보이지 않는&quot;시퀀스</target>
        </trans-unit>
        <trans-unit id="ab11a6a11684a5d585f69a7cb9ce4898eb31fc4e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;user&amp;rdquo;: adapts the appearance of the turtle according to the values of stretchfactor and outlinewidth (outline), which are set by &lt;a href=&quot;#turtle.shapesize&quot;&gt;&lt;code&gt;shapesize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&quot;user&quot;: &lt;a href=&quot;#turtle.shapesize&quot;&gt; &lt;code&gt;shapesize()&lt;/code&gt; &lt;/a&gt; 로 설정 한 stretchfactor 및 outlinewidth (outline) 값에 따라 거북이의 모양을 조정합니다 .</target>
        </trans-unit>
        <trans-unit id="dae25d7251bdddcca0245a395a01b86f8380ec05" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;Show Completions&amp;rsquo; will force open a completions window, by default the</source>
          <target state="translated">'완료 표시'는 기본적으로 완료 창을 강제로 엽니 다.</target>
        </trans-unit>
        <trans-unit id="b6c70767eb15268056316747f32dd42858a0474b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;exception&amp;rsquo; (optional): Exception object;</source>
          <target state="translated">'예외'(선택 사항) : 예외 개체;</target>
        </trans-unit>
        <trans-unit id="b2c55846a04a61d5259978ed8647efd610241aba" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;future&amp;rsquo; (optional): &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; instance;</source>
          <target state="translated">'future'(선택 사항) : &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt; 인스턴스;</target>
        </trans-unit>
        <trans-unit id="aa63912a9ef160d146a17ede412d6ae18ecaaa89" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;handle&amp;rsquo; (optional): &lt;a href=&quot;#asyncio.Handle&quot;&gt;&lt;code&gt;asyncio.Handle&lt;/code&gt;&lt;/a&gt; instance;</source>
          <target state="translated">'handle'(선택 사항) : &lt;a href=&quot;#asyncio.Handle&quot;&gt; &lt;code&gt;asyncio.Handle&lt;/code&gt; &lt;/a&gt; 인스턴스;</target>
        </trans-unit>
        <trans-unit id="4934d17858c07605558dde31a6b4efd102b2086b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;message&amp;rsquo;: Error message;</source>
          <target state="translated">'메시지': 오류 메시지;</target>
        </trans-unit>
        <trans-unit id="d1ab7ac93af882525243467a3662fbdee5196bfa" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;protocol&amp;rsquo; (optional): &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;Protocol&lt;/a&gt; instance;</source>
          <target state="translated">'protocol'(선택 사항) : &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;프로토콜&lt;/a&gt; 인스턴스;</target>
        </trans-unit>
        <trans-unit id="414e7c9facc9a63e5af44c8721bf74533dcc5180" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;socket&amp;rsquo; (optional): &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">'socket'(선택 사항) : &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="1122a230b1df64555acffcddffa195824130b342" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;transport&amp;rsquo; (optional): &lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;Transport&lt;/a&gt; instance;</source>
          <target state="translated">'transport'(선택 사항) : &lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;전송&lt;/a&gt; 인스턴스;</target>
        </trans-unit>
        <trans-unit id="4c0ed1abeb0d5c6f06cfc31b19d62933bb862497" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewClose&amp;gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&amp;lt;TreeviewClose&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0d25066315f7785f684ebc386026b1f72f72c430" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewOpen&amp;gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&amp;lt;TreeviewOpen&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="84e0752ecd275811576360a8fb0af578ca3ff457" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;TreeviewSelect&amp;gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&amp;lt;TreeviewSelect&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff723b3b462c0cc70d063609d6bac53c1664462b" translate="yes" xml:space="preserve">
          <source>&amp;minus;8 to &amp;minus;15: Uses the absolute value of &lt;em&gt;wbits&lt;/em&gt; as the window size logarithm. The input must be a raw stream with no header or trailer.</source>
          <target state="translated">&amp;minus;8 ~ &amp;minus;15 : &lt;em&gt;wbit&lt;/em&gt; 의 절대 값을 창 크기 로그로 사용합니다. 입력은 헤더 또는 트레일러가없는 원시 스트림이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f3bc82f7107125ddbae871093130699fe5ddae40" translate="yes" xml:space="preserve">
          <source>&amp;minus;9 to &amp;minus;15: Uses the absolute value of &lt;em&gt;wbits&lt;/em&gt; as the window size logarithm, while producing a raw output stream with no header or trailing checksum.</source>
          <target state="translated">&amp;minus;9 ~ &amp;minus;15 : &lt;em&gt;wbit&lt;/em&gt; 의 절대 값을 창 크기 로그로 사용하면서 헤더 또는 후행 체크섬이없는 원시 출력 스트림을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0701b4eb370ccd036c1bf197d67961cb94f4e357" translate="yes" xml:space="preserve">
          <source>(1), (2)</source>
          <target state="translated">(1), (2)</target>
        </trans-unit>
        <trans-unit id="ef39d755c4ca1b26c0524ea22ab14990778e47ca" translate="yes" xml:space="preserve">
          <source>(1), (3)</source>
          <target state="translated">(1), (3)</target>
        </trans-unit>
        <trans-unit id="27aa8c3424de4148c235b7004f833c8a380605fb" translate="yes" xml:space="preserve">
          <source>(4), (9)</source>
          <target state="translated">(4), (9)</target>
        </trans-unit>
        <trans-unit id="762327e2b5bd5e2110d16ab6e277bf9d85952cee" translate="yes" xml:space="preserve">
          <source>(7), (9)</source>
          <target state="translated">(7), (9)</target>
        </trans-unit>
        <trans-unit id="b0fecb83a9a7bbf391bcef8a381ebf3693351ca0" translate="yes" xml:space="preserve">
          <source>(8), (9)</source>
          <target state="translated">(8), (9)</target>
        </trans-unit>
        <trans-unit id="5dc464cc0ace35daab15f9ab6330d4475592c333" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://www.skein-hash.info/sites/default/files/skein1.3.pdf&quot;&gt;The Skein Hash Function Family&lt;/a&gt;, p. 21)</source>
          <target state="translated">( &lt;a href=&quot;http://www.skein-hash.info/sites/default/files/skein1.3.pdf&quot;&gt;Skein Hash Function Family&lt;/a&gt; , p. 21)</target>
        </trans-unit>
        <trans-unit id="d330d713f097e5a67980825c7c099eac25d39deb" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://csrc.nist.gov/publications/detail/sp/800-106/final&quot;&gt;NIST SP-800-106 &amp;ldquo;Randomized Hashing for Digital Signatures&amp;rdquo;&lt;/a&gt;)</source>
          <target state="translated">( &lt;a href=&quot;https://csrc.nist.gov/publications/detail/sp/800-106/final&quot;&gt;NIST SP-800-106&amp;ldquo;디지털 서명을위한 무작위 해싱&amp;rdquo;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f9c9b9a8e12940ac745823922d6d6b19daa29365" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__cached__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__cached__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="a1b40bc9fadd8253c458d634d8c96597d6134557" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__file__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__file__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="5f68fd8f75235db18f251a77b258c3bba3f24bdb" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__loader__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__loader__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="800b4f10d60239c6ede8dbe3dc7a55cd015f868e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__name__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__name__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="4580534066c5fc921497c592e0a3aea78068df85" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__package__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__package__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="3591dc3c999b3230dc3444e9938357ea2cc0a04c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;__path__&lt;/code&gt;)</source>
          <target state="translated">(&lt;code&gt;__path__&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="9e8796c575b981980fc954a5fb4b3f2bb9cbac2c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_CLOSE&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;)</source>
          <target state="translated">( &lt;code&gt;os.POSIX_SPAWN_CLOSE&lt;/code&gt; , &lt;em&gt;fd&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f066d27d9733fe290d757aec155b06c34eb7e79e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_DUP2&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;, &lt;em&gt;new_fd&lt;/em&gt;)</source>
          <target state="translated">( &lt;code&gt;os.POSIX_SPAWN_DUP2&lt;/code&gt; , &lt;em&gt;fd&lt;/em&gt; , &lt;em&gt;new_fd&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="ccd011678c8f7b6301d6f567b879caa571dd5ec6" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;os.POSIX_SPAWN_OPEN&lt;/code&gt;, &lt;em&gt;fd&lt;/em&gt;, &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;mode&lt;/em&gt;)</source>
          <target state="translated">( &lt;code&gt;os.POSIX_SPAWN_OPEN&lt;/code&gt; , &lt;em&gt;fd&lt;/em&gt; , &lt;em&gt;경로&lt;/em&gt; , &lt;em&gt;플래그&lt;/em&gt; , &lt;em&gt;모드&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="0a7b518ec55d79b7fb522fbfb57188dc15b4f09e" translate="yes" xml:space="preserve">
          <source>(According to &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, messages always have a default type, &lt;a href=&quot;#email.message.EmailMessage.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt; will always return a value. &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; defines a message&amp;rsquo;s default type to be &lt;em&gt;text/plain&lt;/em&gt; unless it appears inside a &lt;em&gt;multipart/digest&lt;/em&gt; container, in which case it would be &lt;em&gt;message/rfc822&lt;/em&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header has an invalid type specification, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; mandates that the default type be &lt;em&gt;text/plain&lt;/em&gt;.)</source>
          <target state="translated">( &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; 에 따르면 메시지는 항상 기본 유형을 &lt;a href=&quot;#email.message.EmailMessage.get_content_type&quot;&gt; &lt;code&gt;get_content_type()&lt;/code&gt; &lt;/a&gt; 은 항상 값을 반환합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; 는 메시지가 &lt;em&gt;multipart / digest&lt;/em&gt; 컨테이너 내부에 표시되지 않는 한 메시지의 기본 유형을 &lt;em&gt;text / plain&lt;/em&gt; 으로 정의 합니다. &lt;em&gt;message / rfc822&lt;/em&gt; . &lt;em&gt;Content-Type&lt;/em&gt; 헤더에 유효하지 않은 유형 사양이있는 경우 &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; 에서는 기본 유형이 &lt;em&gt;text / plain이&lt;/em&gt; 되도록 요구합니다 .)&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e15acf38052574ce2e11fc7a3c986459f8fdca9" translate="yes" xml:space="preserve">
          <source>(Caret.) Matches the start of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches immediately after each newline.</source>
          <target state="translated">(Caret.) 문자열의 시작과 일치하며 &lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드에서는 각 줄 바꿈 바로 뒤에서도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="a1562b058e7e9a71bbe89215b6f3c26ae32bd420" translate="yes" xml:space="preserve">
          <source>(De)compression of files</source>
          <target state="translated">(해제) 파일 압축</target>
        </trans-unit>
        <trans-unit id="7019c3324b98e3617044c53872f52ca1142a507f" translate="yes" xml:space="preserve">
          <source>(Dot.) In the default mode, this matches any character except a newline. If the &lt;a href=&quot;#re.DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag has been specified, this matches any character including a newline.</source>
          <target state="translated">(점.) 기본 모드에서 이것은 개행을 제외한 모든 문자와 일치합니다. 는 IF &lt;a href=&quot;#re.DOTALL&quot;&gt; &lt;code&gt;DOTALL&lt;/code&gt; 의&lt;/a&gt; 플래그가 지정되어,이 개행을 포함한 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="64d88233de831476dd7c254d185d351c1574dc47" translate="yes" xml:space="preserve">
          <source>(Expand word) is also useful to reduce typing</source>
          <target state="translated">(단어 확장)은 타이핑을 줄이는데도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3532ad44d6feb311d845bcda627420e4bfb5d0e5" translate="yes" xml:space="preserve">
          <source>(For backwards compatibility, the exception class is also available as &lt;code&gt;ossaudiodev.error&lt;/code&gt;.)</source>
          <target state="translated">(역 호환성을 위해 예외 클래스는 &lt;code&gt;ossaudiodev.error&lt;/code&gt; 로도 사용할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="c5d550bbb64fa949d294b45d730860dd4ce522c3" translate="yes" xml:space="preserve">
          <source>(If &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; receives an error from a system call such as &lt;code&gt;open()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, or &lt;code&gt;ioctl()&lt;/code&gt;, it raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. Errors detected directly by &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; result in &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">( &lt;a href=&quot;#module-ossaudiodev&quot;&gt; &lt;code&gt;ossaudiodev&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;open()&lt;/code&gt; , &lt;code&gt;write()&lt;/code&gt; 또는 &lt;code&gt;ioctl()&lt;/code&gt; 과 같은 시스템 호출에서 오류를 수신 하면 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 를&lt;/a&gt; 발생 &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; &lt;/a&gt; . ossaudiodev 에서 직접 감지 한 오류는 &lt;a href=&quot;#module-ossaudiodev&quot;&gt; &lt;code&gt;ossaudiodev&lt;/code&gt; &lt;/a&gt; 발생 시킵니다 .)</target>
        </trans-unit>
        <trans-unit id="add42b225e79b87d2767add55abcf80946a45a29" translate="yes" xml:space="preserve">
          <source>(If you are already familiar with the basic concepts of testing, you might want to skip to &lt;a href=&quot;#assert-methods&quot;&gt;the list of assert methods&lt;/a&gt;.)</source>
          <target state="translated">(테스트의 기본 개념에 이미 익숙한 경우 &lt;a href=&quot;#assert-methods&quot;&gt;assert 메서드 목록으로&lt;/a&gt; 건너 뛰는 것이 좋습니다.)</target>
        </trans-unit>
        <trans-unit id="22306c666d44b8f5a9275346a995ae3df3effe15" translate="yes" xml:space="preserve">
          <source>(If you try this it will actually output three full tracebacks interleaved in a semi-random fashion, and then you may have to stop the parent process somehow.)</source>
          <target state="translated">(이것을 시도하면 실제로 세미 랜덤 방식으로 인터리브 된 3 개의 전체 트레이스 백을 출력하므로 부모 프로세스를 어떻게 든 중지해야 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="60b4c150a81cb13c106057ccbd41323963106195" translate="yes" xml:space="preserve">
          <source>(Must be defined as a class method.)</source>
          <target state="translated">(반드시 클래스 메소드로 정의되어야합니다.)</target>
        </trans-unit>
        <trans-unit id="f4193b5ddccca6a9a69749f5196ca4ae24d9465c" translate="yes" xml:space="preserve">
          <source>(Not supported by all operating systems.) Returns a polling object, which supports registering and unregistering file descriptors, and then polling them for I/O events; see section &lt;a href=&quot;#poll-objects&quot;&gt;Polling Objects&lt;/a&gt; below for the methods supported by polling objects.</source>
          <target state="translated">(모든 운영 체제에서 지원되지는 않습니다.) 파일 설명자를 등록 및 등록 해제 한 다음 I / O 이벤트에 대해 폴링하는 것을 지원하는 폴링 객체를 반환합니다. &lt;a href=&quot;#poll-objects&quot;&gt;폴링 객체가&lt;/a&gt; 지원하는 방법은 아래의 폴링 객체 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f5737aad0e535df4a565b997b8c5efc2d7f35ab" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;\b&lt;/code&gt; is used to represent word boundaries, and means &amp;ldquo;backspace&amp;rdquo; only inside character classes.)</source>
          <target state="translated">( &lt;code&gt;\b&lt;/code&gt; 는 단어 경계를 나타내는 데 사용되며 문자 클래스 내에서만 &quot;백 스페이스&quot;를 의미합니다.)</target>
        </trans-unit>
        <trans-unit id="54b6e14d4e6902af37cdfa6063d55e5562fa6bb0" translate="yes" xml:space="preserve">
          <source>(Note that the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using these functions. Check especially the &lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;Replacing Older Functions with the subprocess Module&lt;/a&gt; section.)</source>
          <target state="translated">( &lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt; 모듈은 새 프로세스를 생성하고 결과를 검색하는 데 더 강력한 기능을 제공합니다. 해당 모듈을 사용하는 것이 이러한 함수를 사용하는 것보다 낫습니다. 특히 &lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;이전 함수를 subprocess 모듈로 대체&lt;/a&gt; 섹션을 확인하십시오.)</target>
        </trans-unit>
        <trans-unit id="d91c7e90b2f0d6616415afae10bd56e7137deb61" translate="yes" xml:space="preserve">
          <source>(Note: YAML used here because it&amp;rsquo;s a little more readable than the equivalent Python source form for the dictionary.)</source>
          <target state="translated">(참고 : 여기서 사용 된 YAML은 사전에 해당하는 Python 소스 형식보다 조금 더 읽기 쉽기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="3df3c41b7f7617904d63f483c06ec3d70f8209d0" translate="yes" xml:space="preserve">
          <source>(One or more letters from the set &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;.) The group matches the empty string; the letters set the corresponding flags: &lt;a href=&quot;#re.A&quot;&gt;&lt;code&gt;re.A&lt;/code&gt;&lt;/a&gt; (ASCII-only matching), &lt;a href=&quot;#re.I&quot;&gt;&lt;code&gt;re.I&lt;/code&gt;&lt;/a&gt; (ignore case), &lt;a href=&quot;#re.L&quot;&gt;&lt;code&gt;re.L&lt;/code&gt;&lt;/a&gt; (locale dependent), &lt;a href=&quot;#re.M&quot;&gt;&lt;code&gt;re.M&lt;/code&gt;&lt;/a&gt; (multi-line), &lt;a href=&quot;#re.S&quot;&gt;&lt;code&gt;re.S&lt;/code&gt;&lt;/a&gt; (dot matches all), &lt;code&gt;re.U&lt;/code&gt; (Unicode matching), and &lt;a href=&quot;#re.X&quot;&gt;&lt;code&gt;re.X&lt;/code&gt;&lt;/a&gt; (verbose), for the entire regular expression. (The flags are described in &lt;a href=&quot;#contents-of-module-re&quot;&gt;Module Contents&lt;/a&gt;.) This is useful if you wish to include the flags as part of the regular expression, instead of passing a &lt;em&gt;flag&lt;/em&gt; argument to the &lt;a href=&quot;#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; function. Flags should be used first in the expression string.</source>
          <target state="translated">( &lt;code&gt;'a'&lt;/code&gt; , &lt;code&gt;'i'&lt;/code&gt; , &lt;code&gt;'L'&lt;/code&gt; , &lt;code&gt;'m'&lt;/code&gt; , &lt;code&gt;'s'&lt;/code&gt; , &lt;code&gt;'u'&lt;/code&gt; , &lt;code&gt;'x'&lt;/code&gt; 집합에서 하나 이상의 문자 .) 그룹은 빈 문자열과 일치합니다. 문자는 해당 플래그를 설정합니다 : &lt;a href=&quot;#re.A&quot;&gt; &lt;code&gt;re.A&lt;/code&gt; &lt;/a&gt; (ASCII 전용 일치), &lt;a href=&quot;#re.I&quot;&gt; &lt;code&gt;re.I&lt;/code&gt; &lt;/a&gt; (대소 문자 무시), &lt;a href=&quot;#re.L&quot;&gt; &lt;code&gt;re.L&lt;/code&gt; &lt;/a&gt; (로케일 종속), &lt;a href=&quot;#re.M&quot;&gt; &lt;code&gt;re.M&lt;/code&gt; &lt;/a&gt; (다중 행), &lt;a href=&quot;#re.S&quot;&gt; &lt;code&gt;re.S&lt;/code&gt; &lt;/a&gt; (점 모두 일치) 전체 정규식에 대한 , &lt;code&gt;re.U&lt;/code&gt; (유니 코드 일치) 및 &lt;a href=&quot;#re.X&quot;&gt; &lt;code&gt;re.X&lt;/code&gt; &lt;/a&gt; (상세). (플래그는 &lt;a href=&quot;#contents-of-module-re&quot;&gt;모듈 내용에&lt;/a&gt; 설명되어 있습니다..) 이것은 &lt;a href=&quot;#re.compile&quot;&gt; &lt;code&gt;re.compile()&lt;/code&gt; &lt;/a&gt; 함수에 &lt;em&gt;플래그&lt;/em&gt; 인수를 전달하는 대신 정규 표현식의 일부로 플래그를 포함하려는 경우에 유용 합니다. 플래그는 표현식 문자열에서 먼저 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a380a670893e5b290ec350766feec343d285ce9b" translate="yes" xml:space="preserve">
          <source>(Only supported on BSD.) Returns a kernel event object; see section &lt;a href=&quot;#kevent-objects&quot;&gt;Kevent Objects&lt;/a&gt; below for the methods supported by kevent objects.</source>
          <target state="translated">(BSD에서만 지원됩니다.) 커널 이벤트 객체를 반환합니다. &lt;a href=&quot;#kevent-objects&quot;&gt;kevent 객체가&lt;/a&gt; 지원하는 메서드는 아래의 Kevent 객체 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c61f6f1cd6f4f9d1d80afee20a7d5474f7a8b29" translate="yes" xml:space="preserve">
          <source>(Only supported on BSD.) Returns a kernel queue object; see section &lt;a href=&quot;#kqueue-objects&quot;&gt;Kqueue Objects&lt;/a&gt; below for the methods supported by kqueue objects.</source>
          <target state="translated">(BSD에서만 지원됩니다.) 커널 큐 객체를 반환합니다. kqueue 객체가 지원하는 메소드는 아래 &lt;a href=&quot;#kqueue-objects&quot;&gt;Kqueue 객체&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c594d8d8dee8ff561637086f2fada3b1039bd52" translate="yes" xml:space="preserve">
          <source>(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, which can be used as Edge or Level Triggered interface for I/O events.</source>
          <target state="translated">(Linux 2.5.44 이상에서만 지원됩니다.) I / O 이벤트에 대한 Edge 또는 Level Triggered 인터페이스로 사용할 수있는 Edge 폴링 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddac2023b8c13dfcdea22120f943d310b0e3d938" translate="yes" xml:space="preserve">
          <source>(Only supported on Solaris and derivatives.) Returns a &lt;code&gt;/dev/poll&lt;/code&gt; polling object; see section &lt;a href=&quot;#devpoll-objects&quot;&gt;/dev/poll Polling Objects&lt;/a&gt; below for the methods supported by devpoll objects.</source>
          <target state="translated">(Solaris 및 파생 제품에서만 지원됩니다.) &lt;code&gt;/dev/poll&lt;/code&gt; 폴링 객체를 반환 합니다. devpoll 객체가 지원하는 방법은 아래의 &lt;a href=&quot;#devpoll-objects&quot;&gt;/ dev / poll 폴링 객체&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05a1b1d9675b9d22ac179d4951780b0765f7fff4" translate="yes" xml:space="preserve">
          <source>(Python also includes pure-Python versions of these programs, called &lt;strong&gt;pygettext.py&lt;/strong&gt; and &lt;strong&gt;msgfmt.py&lt;/strong&gt;; some Python distributions will install them for you. &lt;strong&gt;pygettext.py&lt;/strong&gt; is similar to &lt;strong&gt;xgettext&lt;/strong&gt;, but only understands Python source code and cannot handle other programming languages such as C or C++. &lt;strong&gt;pygettext.py&lt;/strong&gt; supports a command-line interface similar to &lt;strong&gt;xgettext&lt;/strong&gt;; for details on its use, run &lt;code&gt;pygettext.py
--help&lt;/code&gt;. &lt;strong&gt;msgfmt.py&lt;/strong&gt; is binary compatible with GNU &lt;strong&gt;msgfmt&lt;/strong&gt;. With these two programs, you may not need the GNU &lt;strong&gt;gettext&lt;/strong&gt; package to internationalize your Python applications.)</source>
          <target state="translated">(Python에는 &lt;strong&gt;pygettext.py&lt;/strong&gt; 및 &lt;strong&gt;msgfmt.py&lt;/strong&gt; 라고하는 이러한 프로그램의 순수 Python 버전도 포함되어 있습니다 . 일부 Python 배포판에서 자동으로 설치합니다. &lt;strong&gt;pygettext.py&lt;/strong&gt; 는 &lt;strong&gt;xgettext&lt;/strong&gt; 와 비슷 하지만 Python 소스 코드 만 이해하고 다른 프로그래밍 언어를 처리 할 수 ​​없습니다. C 또는 C ++와 같은 &lt;strong&gt;pygettext.py&lt;/strong&gt; 는 &lt;strong&gt;xgettext&lt;/strong&gt; 와 유사한 명령 줄 인터페이스를 지원합니다 . 사용에 대한 자세한 내용을 &lt;code&gt;pygettext.py --help&lt;/code&gt; 실행 하십시오 . &lt;strong&gt;msgfmt.py&lt;/strong&gt; 는 GNU &lt;strong&gt;msgfmt&lt;/strong&gt; 와 바이너리 호환됩니다 .이 두 프로그램을 사용하면 다음을 수행 할 수 있습니다. Python 애플리케이션을 국제화하기 위해 GNU &lt;strong&gt;gettext&lt;/strong&gt; 패키지 가 필요하지 않습니다 .)</target>
        </trans-unit>
        <trans-unit id="3d8d84f156f7082e08cce1e5b153004b431f693c" translate="yes" xml:space="preserve">
          <source>(Read-only) Fully-qualified name of the package to which the module belongs as a submodule (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">(읽기 전용) 모듈이 하위 모듈 (또는 &lt;code&gt;None&lt;/code&gt; ) 로 속한 패키지의 정규화 된 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="de3e50e81fadbb01e88412649e246da0cafae51f" translate="yes" xml:space="preserve">
          <source>(Read-only) The fully-qualified name of the package under which the module should be loaded as a submodule (or the empty string for top-level modules). For packages, it is the same as &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">(읽기 전용) 모듈이 하위 모듈 (또는 최상위 모듈의 경우 빈 문자열)로로드되어야하는 패키지의 정규화 된 이름입니다. 패키지의 경우 &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bb0a21fecb6d0aea51798bc604a4a7015ff135ed" translate="yes" xml:space="preserve">
          <source>(The &amp;ldquo;2&amp;rdquo; is a line number).</source>
          <target state="translated">( &quot;2&quot;는 줄 번호입니다).</target>
        </trans-unit>
        <trans-unit id="106a9ba3766d871b44d1d8d28ab7a43eb449365d" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;freeze_support()&lt;/code&gt; line can be omitted if the program will be run normally instead of frozen.)</source>
          <target state="translated">( 프로그램이 고정되지 않고 정상적으로 실행되는 경우 &lt;code&gt;freeze_support()&lt;/code&gt; 줄을 생략 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="b9f2be2e6a435880eff477de182c010e94aa3b62" translate="yes" xml:space="preserve">
          <source>(There is never a problem with different processes using the &lt;em&gt;same&lt;/em&gt; proxy.)</source>
          <target state="translated">( &lt;em&gt;동일한&lt;/em&gt; 프록시를 사용하는 다른 프로세스에는 문제가 없습니다 .)</target>
        </trans-unit>
        <trans-unit id="5912d22285d328a6126bd606c2c4783411052b6e" translate="yes" xml:space="preserve">
          <source>(This &lt;code&gt;signals&lt;/code&gt; example only works on Unix.)</source>
          <target state="translated">(이 &lt;code&gt;signals&lt;/code&gt; 예제는 Unix에서만 작동합니다.)</target>
        </trans-unit>
        <trans-unit id="d9de2661e6bcd08d2f772a6da4dd3ae7e6558ce6" translate="yes" xml:space="preserve">
          <source>(This way, the directory inserted last will be searched first!)</source>
          <target state="translated">(이렇게하면 마지막에 삽입 된 디렉토리가 먼저 검색됩니다!)</target>
        </trans-unit>
        <trans-unit id="5a0278767fe2cda0b8381e9e4dfe9242d98cfee7" translate="yes" xml:space="preserve">
          <source>(Use &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; if the latter is not available on your system.)</source>
          <target state="translated">( 시스템에서 후자를 사용할 수없는 경우 &lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="483c199ac62c68b9539d1dd28a6af2f5848c2fce" translate="yes" xml:space="preserve">
          <source>(Zero or more letters from the set &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, optionally followed by &lt;code&gt;'-'&lt;/code&gt; followed by one or more letters from the &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;.) The letters set or remove the corresponding flags: &lt;a href=&quot;#re.A&quot;&gt;&lt;code&gt;re.A&lt;/code&gt;&lt;/a&gt; (ASCII-only matching), &lt;a href=&quot;#re.I&quot;&gt;&lt;code&gt;re.I&lt;/code&gt;&lt;/a&gt; (ignore case), &lt;a href=&quot;#re.L&quot;&gt;&lt;code&gt;re.L&lt;/code&gt;&lt;/a&gt; (locale dependent), &lt;a href=&quot;#re.M&quot;&gt;&lt;code&gt;re.M&lt;/code&gt;&lt;/a&gt; (multi-line), &lt;a href=&quot;#re.S&quot;&gt;&lt;code&gt;re.S&lt;/code&gt;&lt;/a&gt; (dot matches all), &lt;code&gt;re.U&lt;/code&gt; (Unicode matching), and &lt;a href=&quot;#re.X&quot;&gt;&lt;code&gt;re.X&lt;/code&gt;&lt;/a&gt; (verbose), for the part of the expression. (The flags are described in &lt;a href=&quot;#contents-of-module-re&quot;&gt;Module Contents&lt;/a&gt;.)</source>
          <target state="translated">( &lt;code&gt;'a'&lt;/code&gt; , &lt;code&gt;'i'&lt;/code&gt; , &lt;code&gt;'L'&lt;/code&gt; , &lt;code&gt;'m'&lt;/code&gt; , &lt;code&gt;'s'&lt;/code&gt; , &lt;code&gt;'u'&lt;/code&gt; , &lt;code&gt;'x'&lt;/code&gt; 세트에서 0 개 이상의 문자 , 선택적으로 뒤에 &lt;code&gt;'-'&lt;/code&gt; 다음에 하나 이상의 문자 &lt;code&gt;'i'&lt;/code&gt; , &lt;code&gt;'m'&lt;/code&gt; , &lt;code&gt;'s'&lt;/code&gt; , &lt;code&gt;'x'&lt;/code&gt; .) 문자는 해당 플래그를 설정하거나 제거합니다. &lt;a href=&quot;#re.A&quot;&gt; &lt;code&gt;re.A&lt;/code&gt; &lt;/a&gt; (ASCII 전용 일치), &lt;a href=&quot;#re.I&quot;&gt; &lt;code&gt;re.I&lt;/code&gt; &lt;/a&gt; (대소 문자 무시), &lt;a href=&quot;#re.L&quot;&gt; &lt;code&gt;re.L&lt;/code&gt; &lt;/a&gt; (로케일에 따라 다름) ), &lt;a href=&quot;#re.M&quot;&gt; &lt;code&gt;re.M&lt;/code&gt; &lt;/a&gt; (여러 줄), &lt;a href=&quot;#re.S&quot;&gt; &lt;code&gt;re.S&lt;/code&gt; &lt;/a&gt; (점 모두 일치), &lt;code&gt;re.U&lt;/code&gt; U (유니 코드 일치) 및 &lt;a href=&quot;#re.X&quot;&gt; &lt;code&gt;re.X&lt;/code&gt; &lt;/a&gt;(verbose), 표현의 일부. (플래그는 &lt;a href=&quot;#contents-of-module-re&quot;&gt;모듈 내용에&lt;/a&gt; 설명되어 있습니다.)</target>
        </trans-unit>
        <trans-unit id="ecf85a74f08e37934663da45653757bb9b57fcf9" translate="yes" xml:space="preserve">
          <source>(a na&amp;iuml;ve approach would make &lt;code&gt;PurePosixPath('foo/../bar')&lt;/code&gt; equivalent to &lt;code&gt;PurePosixPath('bar')&lt;/code&gt;, which is wrong if &lt;code&gt;foo&lt;/code&gt; is a symbolic link to another directory)</source>
          <target state="translated">(순진한 접근 방식은 &lt;code&gt;PurePosixPath('foo/../bar')&lt;/code&gt; 를 &lt;code&gt;PurePosixPath('bar')&lt;/code&gt; 와 동일하게 만들 것입니다. &lt;code&gt;foo&lt;/code&gt; 가 다른 디렉토리에 대한 심볼릭 링크 이면 잘못된 것입니다 )</target>
        </trans-unit>
        <trans-unit id="6d3b4790de80c2a4f8db23e4ebee4533ea0f7169" translate="yes" xml:space="preserve">
          <source>(a space) A blank should be left before a positive number (or empty string) produced by a signed conversion.</source>
          <target state="translated">(공백) 부호있는 변환에 의해 생성 된 양수 (또는 빈 문자열) 앞에 공백이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a7f391eecc0730fc7c289196bc72a2021b3680de" translate="yes" xml:space="preserve">
          <source>(c_int * 3)(9, 2, 8)</source>
          <target state="translated">(c_int * 3) (9, 2, 8)</target>
        </trans-unit>
        <trans-unit id="0a130c7fadc3b80214ec64b6721fd7ee0b95da7a" translate="yes" xml:space="preserve">
          <source>(c_short * 7)()</source>
          <target state="translated">(c_short * 7) ()</target>
        </trans-unit>
        <trans-unit id="a71223ac9fbf5fe08f7aeab21cd404acc498649f" translate="yes" xml:space="preserve">
          <source>(d[0] if s[0]), (d[1] if s[1]), &amp;hellip;</source>
          <target state="translated">(d [0] if s [0]), (d [1] if s [1]),&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="c0b389c374b6754683afbe321739d283fdaee401" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;' [...]'&lt;/code&gt;) String that will appear at the end of the output text if it has been truncated.</source>
          <target state="translated">(기본값 : &lt;code&gt;' [...]'&lt;/code&gt; ) 잘린 경우 출력 텍스트 끝에 표시되는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="35a0e53aa896fc3f2801a122179b15f18e7001b4" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;''&lt;/code&gt;) String that will be prepended to all lines of wrapped output except the first. Counts towards the length of each line except the first.</source>
          <target state="translated">(기본값 : &lt;code&gt;''&lt;/code&gt; ) 첫 번째를 제외하고 래핑 된 출력의 모든 줄 앞에 추가되는 문자열입니다. 첫 번째 줄을 제외하고 각 줄의 길이를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5564e2752cd323c6f4a187156ebf9ab9117bfe8b" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;''&lt;/code&gt;) String that will be prepended to the first line of wrapped output. Counts towards the length of the first line. The empty string is not indented.</source>
          <target state="translated">(기본값 : &lt;code&gt;''&lt;/code&gt; ) 래핑 된 출력의 첫 줄 앞에 추가 될 문자열입니다. 첫 번째 줄의 길이를 계산합니다. 빈 문자열은 들여 쓰기되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ed1642e275c8e3d0a3586c01cfb4170016a1c80" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;70&lt;/code&gt;) The maximum length of wrapped lines. As long as there are no individual words in the input text longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; guarantees that no output line will be longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; characters.</source>
          <target state="translated">(기본값 : &lt;code&gt;70&lt;/code&gt; ) 줄 바꿈 된 줄의 최대 길이입니다. 언제 까지나 이상 입력 텍스트에는 개별 단어가 없기 때문에 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; 의&lt;/a&gt; 보장은 더 출력 라인은 이상 없을 것 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; 문자.</target>
        </trans-unit>
        <trans-unit id="79a419dbd8cd5a0473f96f8b48b254d6af267b92" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;8&lt;/code&gt;) If &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt; is true, then all tab characters in &lt;em&gt;text&lt;/em&gt; will be expanded to zero or more spaces, depending on the current column and the given tab size.</source>
          <target state="translated">(기본값 : &lt;code&gt;8&lt;/code&gt; ) &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; &lt;/a&gt; 가 true이면 &lt;em&gt;텍스트의&lt;/em&gt; 모든 탭 문자 가 현재 열과 주어진 탭 크기에 따라 0 개 이상의 공백으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="3fc1d06312e626ed92e2123a73d44bf26720031d" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;False&lt;/code&gt;) If true, &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; attempts to detect sentence endings and ensure that sentences are always separated by exactly two spaces. This is generally desired for text in a monospaced font. However, the sentence detection algorithm is imperfect: it assumes that a sentence ending consists of a lowercase letter followed by one of &lt;code&gt;'.'&lt;/code&gt;, &lt;code&gt;'!'&lt;/code&gt;, or &lt;code&gt;'?'&lt;/code&gt;, possibly followed by one of &lt;code&gt;'&quot;'&lt;/code&gt; or &lt;code&gt;&quot;'&quot;&lt;/code&gt;, followed by a space. One problem with this is algorithm is that it is unable to detect the difference between &amp;ldquo;Dr.&amp;rdquo; in</source>
          <target state="translated">(기본값 : &lt;code&gt;False&lt;/code&gt; ) true 인 경우 &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 는 문장 끝을 감지하고 문장이 항상 정확히 두 개의 공백으로 구분되도록합니다. 일반적으로 고정 폭 글꼴의 텍스트에 적합합니다. 그러나 문장 감지 알고리즘은 불완전합니다. 문장 끝이 소문자와 &lt;code&gt;'.'&lt;/code&gt; 중 하나로 구성되어 있다고 가정합니다 . , &lt;code&gt;'!'&lt;/code&gt; , 또는 &lt;code&gt;'?'&lt;/code&gt; , 뒤에 &lt;code&gt;'&quot;'&lt;/code&gt; 또는 &lt;code&gt;&quot;'&quot;&lt;/code&gt; 중 하나와 공백이 올 수 있습니다. 한 가지 문제는 알고리즘이&quot;Dr &quot;간의 차이를 감지 할 수 없다는 것입니다. 에</target>
        </trans-unit>
        <trans-unit id="f53d15db94de2470a19a0eacc123b7219aa9dbe5" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;None&lt;/code&gt;) If not &lt;code&gt;None&lt;/code&gt;, then the output will contain at most &lt;em&gt;max_lines&lt;/em&gt; lines, with &lt;em&gt;placeholder&lt;/em&gt; appearing at the end of the output.</source>
          <target state="translated">(기본값 : &lt;code&gt;None&lt;/code&gt; )하지 않으면 &lt;code&gt;None&lt;/code&gt; , 출력이 가장에 포함됩니다 &lt;em&gt;max_lines의&lt;/em&gt; 와 선 &lt;em&gt;자리는&lt;/em&gt; 출력의 끝에 나타나는.</target>
        </trans-unit>
        <trans-unit id="01960fbe00ab86f775ddb154bf02b655f46c87a4" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, after tab expansion but before wrapping, the &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt; method will replace each whitespace character with a single space. The whitespace characters replaced are as follows: tab, newline, vertical tab, formfeed, and carriage return (&lt;code&gt;'\t\n\v\f\r'&lt;/code&gt;).</source>
          <target state="translated">(기본값 : &lt;code&gt;True&lt;/code&gt; ) true이면 탭 확장 후 래핑하기 전에 &lt;a href=&quot;#textwrap.wrap&quot;&gt; &lt;code&gt;wrap()&lt;/code&gt; &lt;/a&gt; 메서드가 각 공백 문자를 단일 공백으로 바꿉니다. 대체 된 공백 문자는 탭, 줄 바꿈, 세로 탭, 용지 공급 및 캐리지 리턴 ( &lt;code&gt;'\t\n\v\f\r'&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="f0825864cfacf8cf8cbd8fe71ed6b41585c9f743" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, then all tab characters in &lt;em&gt;text&lt;/em&gt; will be expanded to spaces using the &lt;code&gt;expandtabs()&lt;/code&gt; method of &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">(기본값 : &lt;code&gt;True&lt;/code&gt; ) true의 경우, 다음의 모든 탭 문자 &lt;em&gt;텍스트는&lt;/em&gt; 사용 공간으로 확장됩니다 &lt;code&gt;expandtabs()&lt;/code&gt; 방법 &lt;em&gt;텍스트를&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7eef8f29365d420232f2e36fff8aa6d52807affa" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, then words longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; will be broken in order to ensure that no lines are longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;. If it is false, long words will not be broken, and some lines may be longer than &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;. (Long words will be put on a line by themselves, in order to minimize the amount by which &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; is exceeded.)</source>
          <target state="translated">(기본값 : &lt;code&gt;True&lt;/code&gt; ) 사실, 다음 단어보다 더 오래 만약 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; 더 라인이 이상 없는지 확인하기 위해 깨진 것 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; . 거짓이면 긴 단어가 끊어지지 않고 일부 줄이 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; 보다 길 수 있습니다 . (긴 단어는 &lt;a href=&quot;#textwrap.TextWrapper.width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt; 를 초과 하는 양을 최소화하기 위해 자체적으로 줄에 배치됩니다 .)</target>
        </trans-unit>
        <trans-unit id="0f6545d1167450433f2877f8ef2e4bcd50b5104b" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, whitespace at the beginning and ending of every line (after wrapping but before indenting) is dropped. Whitespace at the beginning of the paragraph, however, is not dropped if non-whitespace follows it. If whitespace being dropped takes up an entire line, the whole line is dropped.</source>
          <target state="translated">(기본값 : &lt;code&gt;True&lt;/code&gt; ) true이면 모든 줄의 시작과 끝 (줄 바꿈 후 들여 쓰기 전)의 공백이 삭제됩니다. 그러나 단락 시작 부분의 공백은 뒤에 공백이없는 경우 삭제되지 않습니다. 삭제되는 공백이 전체 줄을 차지하면 전체 줄이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="e3fe672b672e3a890b9a5c70bbceedcdea48fcab" translate="yes" xml:space="preserve">
          <source>(default: &lt;code&gt;True&lt;/code&gt;) If true, wrapping will occur preferably on whitespaces and right after hyphens in compound words, as it is customary in English. If false, only whitespaces will be considered as potentially good places for line breaks, but you need to set &lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt;&lt;code&gt;break_long_words&lt;/code&gt;&lt;/a&gt; to false if you want truly insecable words. Default behaviour in previous versions was to always allow breaking hyphenated words.</source>
          <target state="translated">(기본값 : &lt;code&gt;True&lt;/code&gt; ) true이면 영어에서 일반적으로 사용되는 것처럼 복합어의 경우 공백과 하이픈 바로 뒤에 줄 바꿈이 발생하는 것이 좋습니다. false 인 경우 공백 만 줄 바꿈에 좋은 위치로 간주되지만 진정으로 안전하지 않은 단어를 원한다면 &lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt; &lt;code&gt;break_long_words&lt;/code&gt; &lt;/a&gt; 를 false 로 설정해야합니다 . 이전 버전의 기본 동작은 항상 하이픈으로 연결된 단어를 분리하도록 허용하는 것이 었습니다.</target>
        </trans-unit>
        <trans-unit id="27300bdad09115220f424f2900d479e94e222f51" translate="yes" xml:space="preserve">
          <source>(default: false)</source>
          <target state="translated">(기본값 : false)</target>
        </trans-unit>
        <trans-unit id="4a8eb84d10887d5f0ea9c1b13d1f11f611531bfe" translate="yes" xml:space="preserve">
          <source>(empty), +0000, -0400, +1030, +063415, -030712.345216</source>
          <target state="translated">(비어 있음), +0000, -0400, +1030, +063415, -030712.345216</target>
        </trans-unit>
        <trans-unit id="2b3afd059280c7699bf75acbc67460b945321d9b" translate="yes" xml:space="preserve">
          <source>(empty), UTC, EST, CST</source>
          <target state="translated">(비어 있음), UTC, EST, CST</target>
        </trans-unit>
        <trans-unit id="fc9a9dfe40f160a53f39d318fb2df00ca2097591" translate="yes" xml:space="preserve">
          <source>(empty), UTC, GMT</source>
          <target state="translated">(비어 있음), UTC, GMT</target>
        </trans-unit>
        <trans-unit id="9397b5c66b847220c07218a9f75f4ad22cc120f0" translate="yes" xml:space="preserve">
          <source>(for example, 1993)</source>
          <target state="translated">(예 : 1993)</target>
        </trans-unit>
        <trans-unit id="d732114283e099188289de8ab5a65ffa574f2432" translate="yes" xml:space="preserve">
          <source>(note how the drive and local root are regrouped in a single part)</source>
          <target state="translated">(드라이브와 로컬 루트가 단일 부분으로 재 그룹화되는 방법에 유의하십시오)</target>
        </trans-unit>
        <trans-unit id="f513ab897cacf008c18f29e45f81167264f165f6" translate="yes" xml:space="preserve">
          <source>(of course, similar provisions apply when using other primitives such as &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt;, or those in the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module)</source>
          <target state="translated">(물론, &lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt; 과 같은 다른 프리미티브를 사용 하거나 &lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt; 모듈 에있는 것들을 사용할 때 유사한 조항이 적용됩니다 )</target>
        </trans-unit>
        <trans-unit id="e1c6e31156f7956b75f9f20e93a726c79a946c64" translate="yes" xml:space="preserve">
          <source>(p[0], q[0]), (p[1], q[1]), &amp;hellip;</source>
          <target state="translated">(p [0], q [0]), (p [1], q [1]),&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="613c23b12d1c99282cea96b43c8eca0456e3514c" translate="yes" xml:space="preserve">
          <source>(this assumes you have your project requirements in a &lt;code&gt;requirements.txt&lt;/code&gt; file - if not, you can just list the dependencies manually on the pip command line).</source>
          <target state="translated">(이것은 &lt;code&gt;requirements.txt&lt;/code&gt; 파일 에 프로젝트 요구 사항이 있다고 가정합니다. 그렇지 않은 경우 pip 명령 줄에서 수동으로 종속성을 나열 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="6de88ff98031053b2111d699e13258b14d67d10f" translate="yes" xml:space="preserve">
          <source>(this snippet assumes your operating system places a bundle of all CA certificates in &lt;code&gt;/etc/ssl/certs/ca-bundle.crt&lt;/code&gt;; if not, you&amp;rsquo;ll get an error and have to adjust the location)</source>
          <target state="translated">(이 스 니펫은 운영 체제가 모든 CA 인증서 번들을 &lt;code&gt;/etc/ssl/certs/ca-bundle.crt&lt;/code&gt; 에 배치한다고 가정합니다 . 그렇지 않으면 오류가 발생하고 위치를 조정해야합니다)</target>
        </trans-unit>
        <trans-unit id="6b7fa33ad9dc22f0bb2db443abbd5a433a1797a1" translate="yes" xml:space="preserve">
          <source>). During execution, a check for interrupts is made regularly. The exception inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; so as to not be accidentally caught by code that catches &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; and thus prevent the interpreter from exiting.</source>
          <target state="translated">). 실행 중에는 정기적으로 인터럽트를 확인합니다. 예외는 &lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 을 포착하는 코드에 의해 우연히 포착되지 않도록 &lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt; 에서 상속되어 인터프리터가 종료되는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="f196ae6283d9bb977de8f28cb681544e4ceb73a5" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.TestCase.addClassCleanup&quot;&gt;&lt;code&gt;addClassCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="translated">). 추가 될 때 &lt;a href=&quot;#unittest.TestCase.addClassCleanup&quot;&gt; &lt;code&gt;addClassCleanup()&lt;/code&gt; &lt;/a&gt; 전달 된 인수 및 키워드 인수와 함께 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="72217c7a1cf2ba7c81ceed2f65f4709b46735e8f" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt;&lt;code&gt;addCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="translated">). 추가 될 때 &lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt; &lt;code&gt;addCleanup()&lt;/code&gt; &lt;/a&gt; 전달 된 인수 및 키워드 인수와 함께 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="61a1b9fda3bf88c1945a7be6fbbdf9f9e556d920" translate="yes" xml:space="preserve">
          <source>). They are called with any arguments and keyword arguments passed into &lt;a href=&quot;#unittest.addModuleCleanup&quot;&gt;&lt;code&gt;addModuleCleanup()&lt;/code&gt;&lt;/a&gt; when they are added.</source>
          <target state="translated">). 추가 될 때 &lt;a href=&quot;#unittest.addModuleCleanup&quot;&gt; &lt;code&gt;addModuleCleanup()&lt;/code&gt; &lt;/a&gt; 전달 된 인수 및 키워드 인수와 함께 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="4157c403113c908765f9c4fcc6046d09823ecbf0" translate="yes" xml:space="preserve">
          <source>+24 to +31 = 16 + (8 to 15): Uses the low 4 bits of the value as the window size logarithm. The input must include a gzip header and trailer.</source>
          <target state="translated">+24 ~ +31 = 16 + (8 ~ 15) : 값의 하위 4 비트를 창 크기 로그로 사용합니다. 입력에는 gzip 헤더와 트레일러가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="444a69d5afa797be0e1c93f6b0ff93ec8347ca9a" translate="yes" xml:space="preserve">
          <source>+25 to +31 = 16 + (9 to 15): Uses the low 4 bits of the value as the window size logarithm, while including a basic &lt;strong&gt;gzip&lt;/strong&gt; header and trailing checksum in the output.</source>
          <target state="translated">+25 ~ +31 = 16 + (9 ~ 15) : 기본 &lt;strong&gt;gzip&lt;/strong&gt; 헤더와 후행 체크섬을 출력에 포함하면서 값의 하위 4 비트를 창 크기 로그 로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cc52224432399c477eceb3338ad3d3ce0588e339" translate="yes" xml:space="preserve">
          <source>+40 to +47 = 32 + (8 to 15): Uses the low 4 bits of the value as the window size logarithm, and automatically accepts either the zlib or gzip format.</source>
          <target state="translated">+40 ~ +47 = 32 + (8 ~ 15) : 값의 하위 4 비트를 창 크기 로그로 사용하고 zlib 또는 gzip 형식을 자동으로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="d8d119495d13dd5e5dc270efed3ae81116b23222" translate="yes" xml:space="preserve">
          <source>+8 to +15: The base-two logarithm of the window size. The input must include a zlib header and trailer.</source>
          <target state="translated">+8 ~ +15 : 창 크기의 밑이 2 인 로그. 입력에는 zlib 헤더와 트레일러가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f4ece6e0c2c865b233f7dc664ec10dd5fafb31ec" translate="yes" xml:space="preserve">
          <source>+9 to +15: The base-two logarithm of the window size, which therefore ranges between 512 and 32768. Larger values produce better compression at the expense of greater memory usage. The resulting output will include a zlib-specific header and trailer.</source>
          <target state="translated">+9 ~ +15 : 창 크기의 밑이 2 인 로그로, 범위는 512 ~ 32768입니다. 값이 클수록 더 많은 메모리 사용을 희생하면서 더 나은 압축을 생성합니다. 결과 출력에는 zlib 관련 헤더 및 트레일러가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="294af51dda37f6df2df2a4e398c0fa1058e2849d" translate="yes" xml:space="preserve">
          <source>, and double</source>
          <target state="translated">, 더블</target>
        </trans-unit>
        <trans-unit id="ae75bf1cbe83a0c4f9a7b40a8575d2a882a5da19" translate="yes" xml:space="preserve">
          <source>-1: no formatting</source>
          <target state="translated">-1 : 서식 없음</target>
        </trans-unit>
        <trans-unit id="1e5017d4e62f26d763f64ae3831b7b13f3669c29" translate="yes" xml:space="preserve">
          <source>-&lt;em&gt;timedelta.max&lt;/em&gt; is not representable as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">- &lt;em&gt;timedelta.max는&lt;/em&gt; A와 표현할 수없는 것입니다 &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b8d225f3aae0f917bf4f5d2c0a189a3174647da4" translate="yes" xml:space="preserve">
          <source>. If &lt;em&gt;completekey&lt;/em&gt; is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; is available, command completion is done automatically.</source>
          <target state="translated">. 경우 &lt;em&gt;completekey가&lt;/em&gt; 되지 않습니다 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt; 가능하며, 명령 완료가 자동으로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="955b48ab70c6359e51cc6c6ce1aa04875e8a611e" translate="yes" xml:space="preserve">
          <source>. If one types a prefix for the desired name before opening the box, the first match or near miss is made visible. The result is the same as if one enters a prefix after the box is displayed. Show Completions after a quote completes filenames in the current directory instead of a root directory.</source>
          <target state="translated">. 상자를 열기 전에 원하는 이름에 대한 접두사를 입력하면 첫 번째 일치 또는 거의 누락이 표시됩니다. 결과는 상자가 표시된 후 접두사를 입력하는 것과 같습니다. 따옴표가 루트 디렉토리 대신 현재 디렉토리의 파일 이름을 완료 한 후 완성 표시.</target>
        </trans-unit>
        <trans-unit id="a166a1de35717c5d814e94cff7f102f3c5de2e4c" translate="yes" xml:space="preserve">
          <source>. If you want Pdb not to touch the SIGINT handler, set &lt;em&gt;nosigint&lt;/em&gt; to true.</source>
          <target state="translated">. Pdb가 SIGINT 핸들러를 건드리지 않게하려면 &lt;em&gt;nosigint&lt;/em&gt; 를 true로 설정 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8523d7dc1dedc8537f7c6b3ad5137eba222017eb" translate="yes" xml:space="preserve">
          <source>. One may edit pasted code first. If one pastes more that one statement into Shell, the result will be a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when multiple statements are compiled as if they were one.</source>
          <target state="translated">. 붙여 넣은 코드를 먼저 편집 할 수 있습니다. 하나 이상의 문을 Shell에 붙여 넣으면 여러 문이 마치 하나 인 것처럼 컴파일 될 때 결과는 &lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="2235f09c6ff7ac659d5e1ebf91bea0b1cbd48045" translate="yes" xml:space="preserve">
          <source>.dump</source>
          <target state="translated">.dump</target>
        </trans-unit>
        <trans-unit id="ac3607362b43638d6eba7a2b6a884d8a1add9f39" translate="yes" xml:space="preserve">
          <source>.lib section in a.out corrupted</source>
          <target state="translated">a.out의 .lib 섹션이 손상되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e0ad534d3ec2c4baf545dffbdf3eada45f4a912" translate="yes" xml:space="preserve">
          <source>0 - east</source>
          <target state="translated">0-동쪽</target>
        </trans-unit>
        <trans-unit id="799a0aab9a7918aac30cbb099620f6567c8c3c9b" translate="yes" xml:space="preserve">
          <source>0 - north</source>
          <target state="translated">0-북쪽</target>
        </trans-unit>
        <trans-unit id="0da3254c9d10d2736a564e8371cdeb1979e9a27f" translate="yes" xml:space="preserve">
          <source>0 is a legal argument for any position in the time tuple; if it is normally illegal the value is forced to a correct one.</source>
          <target state="translated">0은 시간 튜플의 모든 위치에 대한 유효한 인수입니다. 일반적으로 잘못된 경우 값은 올바른 값으로 강제됩니다.</target>
        </trans-unit>
        <trans-unit id="bb226da5895b0d5f9459bb7ebd5c5d0c08473eca" translate="yes" xml:space="preserve">
          <source>0 or 1</source>
          <target state="translated">0 또는 1</target>
        </trans-unit>
        <trans-unit id="c1054f086bdb967d118a882027d8c03bd8b5c5ac" translate="yes" xml:space="preserve">
          <source>0, 1 or -1; see below</source>
          <target state="translated">0, 1 또는 -1; 아래 참조</target>
        </trans-unit>
        <trans-unit id="0ed0f26ab8ed0d6e2b0be96823e4baa8b393f657" translate="yes" xml:space="preserve">
          <source>0, 1, &amp;hellip;, 6</source>
          <target state="translated">0, 1,&amp;hellip;, 6</target>
        </trans-unit>
        <trans-unit id="bf3b9c2499c553403b271787bd6f5c94111ab40b" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 23</source>
          <target state="translated">00, 01,&amp;hellip;, 23</target>
        </trans-unit>
        <trans-unit id="eee6f850849dd73699c5a55cab4cb96cdcffe419" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 53</source>
          <target state="translated">00, 01,&amp;hellip;, 53</target>
        </trans-unit>
        <trans-unit id="0a3c4c27627651fd85ead2b05616d3bbcf7df34f" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 59</source>
          <target state="translated">00, 01,&amp;hellip;, 59</target>
        </trans-unit>
        <trans-unit id="81b69d2ca60e7fc870716a18613922482f60a129" translate="yes" xml:space="preserve">
          <source>00, 01, &amp;hellip;, 99</source>
          <target state="translated">00, 01,&amp;hellip;, 99</target>
        </trans-unit>
        <trans-unit id="da1ff64fad648cd53b1808a37994a614cae265c4" translate="yes" xml:space="preserve">
          <source>000000, 000001, &amp;hellip;, 999999</source>
          <target state="translated">000000, 000001,&amp;hellip;, 999999</target>
        </trans-unit>
        <trans-unit id="67641d49e6aca9956fc18d9fe2732dc88265aee0" translate="yes" xml:space="preserve">
          <source>0001, 0002, &amp;hellip;, 2013, 2014, &amp;hellip;, 9998, 9999</source>
          <target state="translated">0001, 0002,&amp;hellip;, 2013, 2014,&amp;hellip;, 9998, 9999</target>
        </trans-unit>
        <trans-unit id="129e7ecc3f18eba37b9eb3b4791c02543ca3b0da" translate="yes" xml:space="preserve">
          <source>001, 002, &amp;hellip;, 366</source>
          <target state="translated">001, 002,&amp;hellip;, 366</target>
        </trans-unit>
        <trans-unit id="bfd68766f78216b9dbfd5a9cc685955040fc7816" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 12</source>
          <target state="translated">01, 02,&amp;hellip;, 12</target>
        </trans-unit>
        <trans-unit id="5a6b03ba75a3328cdc0db3e47dae2c70e3a8e191" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 31</source>
          <target state="translated">01, 02,&amp;hellip;, 31</target>
        </trans-unit>
        <trans-unit id="1ea0f3e31a2e40157e76866de8a5fa74d4649d94" translate="yes" xml:space="preserve">
          <source>01, 02, &amp;hellip;, 53</source>
          <target state="translated">01, 02,&amp;hellip;, 53</target>
        </trans-unit>
        <trans-unit id="4f58f789461f98a511e1beda3e937cba3467b1e9" translate="yes" xml:space="preserve">
          <source>0: &lt;code&gt;raise&lt;/code&gt; (re-raise previous exception)</source>
          <target state="translated">0 : &lt;code&gt;raise&lt;/code&gt; (다시 인상 이전 예외)</target>
        </trans-unit>
        <trans-unit id="1cc70db2746b23670935f307a34ba01ba4be78dc" translate="yes" xml:space="preserve">
          <source>0: Automatically determine the window size from the zlib header. Only supported since zlib 1.2.3.5.</source>
          <target state="translated">0 : zlib 헤더에서 창 크기를 자동으로 결정합니다. zlib 1.2.3.5부터 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0f831173613e33f3609ec589bc802b32cf9d43b8" translate="yes" xml:space="preserve">
          <source>0xxxxxxx</source>
          <target state="translated">0xxxxxxx</target>
        </trans-unit>
        <trans-unit id="0e36765c42585416e2f97cb2d985e95945ed8ead" translate="yes" xml:space="preserve">
          <source>1, 2, &amp;hellip;, 7</source>
          <target state="translated">1, 2,&amp;hellip;, 7</target>
        </trans-unit>
        <trans-unit id="0b91f8a2810349cfb3860c128f4f7148e9344a8b" translate="yes" xml:space="preserve">
          <source>1-character bytes object</source>
          <target state="translated">1 자 바이트 객체</target>
        </trans-unit>
        <trans-unit id="7cbb9fff41c368e7215f709d1ce2399d997673af" translate="yes" xml:space="preserve">
          <source>1-character string</source>
          <target state="translated">1 자 문자열</target>
        </trans-unit>
        <trans-unit id="fd3451b03fce4fb50e7e436145754f90be0dd1ac" translate="yes" xml:space="preserve">
          <source>110xxxxx 10xxxxxx</source>
          <target state="translated">110xxxxx 10xxxxxx</target>
        </trans-unit>
        <trans-unit id="36bc4725160f044d48fd713c8f61714ea7d02fb7" translate="yes" xml:space="preserve">
          <source>1110xxxx 10xxxxxx 10xxxxxx</source>
          <target state="translated">1110xxxx 10xxxxxx 10xxxxxx</target>
        </trans-unit>
        <trans-unit id="969ad59845dd8e9389c1aecaca0ba386a891cf59" translate="yes" xml:space="preserve">
          <source>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</source>
          <target state="translated">11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</target>
        </trans-unit>
        <trans-unit id="91aeb94e81ad6d43ff8ad172e02569523e865645" translate="yes" xml:space="preserve">
          <source>1125, ibm1125, cp866u, ruscii</source>
          <target state="translated">1125, ibm1125, cp866u, ruscii</target>
        </trans-unit>
        <trans-unit id="b108153e027c8147c0583a9da238c0b14d51a912" translate="yes" xml:space="preserve">
          <source>114: &lt;code&gt;!r&lt;/code&gt; repr formatting</source>
          <target state="translated">114 : &lt;code&gt;!r&lt;/code&gt; repr 포맷</target>
        </trans-unit>
        <trans-unit id="39b90114696c38919d1881058c3238aa6e5fb46c" translate="yes" xml:space="preserve">
          <source>115: &lt;code&gt;!s&lt;/code&gt; string formatting</source>
          <target state="translated">115 : &lt;code&gt;!s&lt;/code&gt; 문자열 형식</target>
        </trans-unit>
        <trans-unit id="d83a8758ffe17fb62944a9646c8810044786ebe4" translate="yes" xml:space="preserve">
          <source>180 - south</source>
          <target state="translated">180-남쪽</target>
        </trans-unit>
        <trans-unit id="4f7a3649e2c4ae5dcee806430b01e581d2687d0a" translate="yes" xml:space="preserve">
          <source>180 - west</source>
          <target state="translated">180-서쪽</target>
        </trans-unit>
        <trans-unit id="e99f0aa4f6c18fbfce161f67c906f342f50f1abf" translate="yes" xml:space="preserve">
          <source>1: &lt;code&gt;raise TOS&lt;/code&gt; (raise exception instance or type at &lt;code&gt;TOS&lt;/code&gt;)</source>
          <target state="translated">1 : &lt;code&gt;raise TOS&lt;/code&gt; (예외 인스턴스 발생 또는 &lt;code&gt;TOS&lt;/code&gt; 입력 )</target>
        </trans-unit>
        <trans-unit id="022258103daf3c98662e3833d8ef082186333fb1" translate="yes" xml:space="preserve">
          <source>2.1.0b1</source>
          <target state="translated">2.1.0b1</target>
        </trans-unit>
        <trans-unit id="f52591bf7c9e64e485474ec910f45c112192ca6c" translate="yes" xml:space="preserve">
          <source>2.2.0a1</source>
          <target state="translated">2.2.0a1</target>
        </trans-unit>
        <trans-unit id="366c265e77beb4b8377a1ee0e650498ad318a52d" translate="yes" xml:space="preserve">
          <source>2.2.0a2</source>
          <target state="translated">2.2.0a2</target>
        </trans-unit>
        <trans-unit id="abca21d0f1f7620ee2ab3d5ec053f60b194d4fb9" translate="yes" xml:space="preserve">
          <source>2.5.0a1</source>
          <target state="translated">2.5.0a1</target>
        </trans-unit>
        <trans-unit id="dfed38e77780ee6e4f84a07c6eb5826a40bc1b1f" translate="yes" xml:space="preserve">
          <source>2.6.0a2</source>
          <target state="translated">2.6.0a2</target>
        </trans-unit>
        <trans-unit id="8de3f69a1f421db304e3d2ebdbaf170402703c44" translate="yes" xml:space="preserve">
          <source>270 - south</source>
          <target state="translated">270-남쪽</target>
        </trans-unit>
        <trans-unit id="6f2743d949d25de62e3971fb2f7514ccc3861b6a" translate="yes" xml:space="preserve">
          <source>270 - west</source>
          <target state="translated">270-서쪽</target>
        </trans-unit>
        <trans-unit id="e5e9edc6436365f0edeeb7691453c4f51fe0d753" translate="yes" xml:space="preserve">
          <source>273, IBM273, csIBM273</source>
          <target state="translated">273, IBM273, csIBM273</target>
        </trans-unit>
        <trans-unit id="d352f2bf6edc82da00232c12a6c81474aa32282f" translate="yes" xml:space="preserve">
          <source>2: &lt;code&gt;raise TOS1 from TOS&lt;/code&gt; (raise exception instance or type at &lt;code&gt;TOS1&lt;/code&gt; with &lt;code&gt;__cause__&lt;/code&gt; set to &lt;code&gt;TOS&lt;/code&gt;)</source>
          <target state="translated">2 : &lt;code&gt;raise TOS1 from TOS&lt;/code&gt; 에서 &lt;code&gt;TOS1&lt;/code&gt; 을 올립니다 (예외 인스턴스를 발생 시키거나 &lt;code&gt;__cause__&lt;/code&gt; 를 &lt;code&gt;TOS&lt;/code&gt; 로 설정하여 TOS1에 입력 )</target>
        </trans-unit>
        <trans-unit id="92ccc5b73d3fe924c72836d31c43c42e312d4e92" translate="yes" xml:space="preserve">
          <source>2to3 - Automated Python 2 to 3 code translation</source>
          <target state="translated">2to3-자동화 된 Python 2 to 3 코드 번역</target>
        </trans-unit>
        <trans-unit id="4eca6c0dfcd699162210c52ef04f62affd02fc36" translate="yes" xml:space="preserve">
          <source>3 breadth-first trees</source>
          <target state="translated">너비 우선 나무 3 개</target>
        </trans-unit>
        <trans-unit id="e4fcc1f26912a823a871b95ed1a86d3781daa66d" translate="yes" xml:space="preserve">
          <source>3.5.0b1</source>
          <target state="translated">3.5.0b1</target>
        </trans-unit>
        <trans-unit id="a6c32e159890809e9698c8723c0a014689ccfd07" translate="yes" xml:space="preserve">
          <source>3.7.0b1</source>
          <target state="translated">3.7.0b1</target>
        </trans-unit>
        <trans-unit id="a1ecc30e1fd210714612b4ee15e19cea67330beb" translate="yes" xml:space="preserve">
          <source>32-bit</source>
          <target state="translated">32-bit</target>
        </trans-unit>
        <trans-unit id="6bfc68109de9b520fce82625981ad08c9c92565c" translate="yes" xml:space="preserve">
          <source>32-bit number.</source>
          <target state="translated">32 비트 숫자.</target>
        </trans-unit>
        <trans-unit id="96403180cf5f23ba62c4ba8e9eacfd5491142050" translate="yes" xml:space="preserve">
          <source>3DES was dropped from the default cipher string.</source>
          <target state="translated">3DES가 ​​기본 암호 문자열에서 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="27ef3aa0a2dadaf78acc5b43c15a18d0bd716844" translate="yes" xml:space="preserve">
          <source>437, IBM437</source>
          <target state="translated">437, IBM437</target>
        </trans-unit>
        <trans-unit id="6cb904d5558d1ecfa10faa3c346ecf286755b851" translate="yes" xml:space="preserve">
          <source>64-bit</source>
          <target state="translated">64-bit</target>
        </trans-unit>
        <trans-unit id="9e28e719bedac735713edc50ba73b35136924902" translate="yes" xml:space="preserve">
          <source>64-bit Specific</source>
          <target state="translated">64 비트 전용</target>
        </trans-unit>
        <trans-unit id="d72c97b8d4bfa7cd0be2556a5b6f5c5db3a33b2c" translate="yes" xml:space="preserve">
          <source>646, us-ascii</source>
          <target state="translated">646, us-ascii</target>
        </trans-unit>
        <trans-unit id="794c744848fde1ec7d3a7ddce8caa3872004dace" translate="yes" xml:space="preserve">
          <source>8 + &lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">8 + &lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4922361df188bd17f564d7bc2996e4e1833847bc" translate="yes" xml:space="preserve">
          <source>850, IBM850</source>
          <target state="translated">850, IBM850</target>
        </trans-unit>
        <trans-unit id="0afa1ce87cfc435ef75cd110937c33d76dfad2ef" translate="yes" xml:space="preserve">
          <source>852, IBM852</source>
          <target state="translated">852, IBM852</target>
        </trans-unit>
        <trans-unit id="96f787962e03c6135521c95b3c94bcd984d2ebf8" translate="yes" xml:space="preserve">
          <source>855, IBM855</source>
          <target state="translated">855, IBM855</target>
        </trans-unit>
        <trans-unit id="9678894f8097d180552599856c69e1f003d288e1" translate="yes" xml:space="preserve">
          <source>857, IBM857</source>
          <target state="translated">857, IBM857</target>
        </trans-unit>
        <trans-unit id="f580e81906e59b38dde15d9011723e003d2ed0c3" translate="yes" xml:space="preserve">
          <source>858, IBM858</source>
          <target state="translated">858, IBM858</target>
        </trans-unit>
        <trans-unit id="cf5d7ed6143e128692dbd8e85f9d42bfdf99db61" translate="yes" xml:space="preserve">
          <source>860, IBM860</source>
          <target state="translated">860, IBM860</target>
        </trans-unit>
        <trans-unit id="4c0debb9357f2e96059ddb9772e5889ccbe8584d" translate="yes" xml:space="preserve">
          <source>861, CP-IS, IBM861</source>
          <target state="translated">861, CP-IS, IBM861</target>
        </trans-unit>
        <trans-unit id="286f31742d8615658b25782c2e7e4bed06447a8f" translate="yes" xml:space="preserve">
          <source>862, IBM862</source>
          <target state="translated">862, IBM862</target>
        </trans-unit>
        <trans-unit id="4696fca6c4053fdbd9ffda02959ac59da162e83f" translate="yes" xml:space="preserve">
          <source>863, IBM863</source>
          <target state="translated">863, IBM863</target>
        </trans-unit>
        <trans-unit id="f3a12a380e4436825d27f26a1b4ec699c4d331f9" translate="yes" xml:space="preserve">
          <source>865, IBM865</source>
          <target state="translated">865, IBM865</target>
        </trans-unit>
        <trans-unit id="a2f74149d4c449641472db968ea34d45fe60d903" translate="yes" xml:space="preserve">
          <source>866, IBM866</source>
          <target state="translated">866, IBM866</target>
        </trans-unit>
        <trans-unit id="7f18a16b5a998733d84f6f8f39bebe55b0aeac87" translate="yes" xml:space="preserve">
          <source>869, CP-GR, IBM869</source>
          <target state="translated">869, CP-GR, IBM869</target>
        </trans-unit>
        <trans-unit id="b36527bfed6cf19dfe5dd73253826e53aaabb6c3" translate="yes" xml:space="preserve">
          <source>90 - east</source>
          <target state="translated">90 - east</target>
        </trans-unit>
        <trans-unit id="0651335b7c9b776d0baae46367c8863e45b622de" translate="yes" xml:space="preserve">
          <source>90 - north</source>
          <target state="translated">90 - north</target>
        </trans-unit>
        <trans-unit id="7e8d8e5da7af8d42488dc99424511b67957e11cb" translate="yes" xml:space="preserve">
          <source>932, ms932, mskanji, ms-kanji</source>
          <target state="translated">932, ms932, mskanji, ms-kanji</target>
        </trans-unit>
        <trans-unit id="72f559dafc62e041a9099a5b18f6d9da84405c65" translate="yes" xml:space="preserve">
          <source>936, cp936, ms936</source>
          <target state="translated">936, cp936, ms936</target>
        </trans-unit>
        <trans-unit id="177959a7e1ff766ab6ab01370231752be509c881" translate="yes" xml:space="preserve">
          <source>949, ms949, uhc</source>
          <target state="translated">949, ms949, uhc</target>
        </trans-unit>
        <trans-unit id="da0463218ef570676d5047bc62f3103116e76e34" translate="yes" xml:space="preserve">
          <source>950, ms950</source>
          <target state="translated">950, ms950</target>
        </trans-unit>
        <trans-unit id="d035f84f0319f3fb48088dcd1d1a611b37a4d9e1" translate="yes" xml:space="preserve">
          <source>97: &lt;code&gt;!a&lt;/code&gt; ascii formatting</source>
          <target state="translated">97: &lt;code&gt;!a&lt;/code&gt; ascii formatting</target>
        </trans-unit>
        <trans-unit id="b6fd1aa19128ddfea4890bc48967f1232e9566cc" translate="yes" xml:space="preserve">
          <source>: selects the tab following the currently selected one.</source>
          <target state="translated">: 현재 선택된 탭 다음에있는 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="023966c250d2ddc7df77b586d0350c9b6588c784" translate="yes" xml:space="preserve">
          <source>: selects the tab preceding the currently selected one.</source>
          <target state="translated">: 현재 선택된 탭 앞에있는 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="1e01398251ffdc9a020b5d4f297eb8f02bb8aab5" translate="yes" xml:space="preserve">
          <source>: where &lt;em&gt;K&lt;/em&gt; is the mnemonic (underlined) character of any tab, will select that tab.</source>
          <target state="translated">: 여기서 &lt;em&gt;K&lt;/em&gt; 는 탭의 니모닉 (밑줄이 그어진) 문자이며 해당 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9a2c0f334b3423594434e11a7b8c9cee14d416fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; has attributes that describe the encoding or decoding error. For example, &lt;code&gt;err.object[err.start:err.end]&lt;/code&gt; gives the particular invalid input that the codec failed on.</source>
          <target state="translated">&lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; 에는 인코딩 또는 디코딩 오류를 설명하는 속성이 있습니다. 예를 들어, &lt;code&gt;err.object[err.start:err.end]&lt;/code&gt; 는 코덱이 실패한 특정 유효하지 않은 입력을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="74e7036a3c0ef0d7085fa4dfb68aba82d4e2c6ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; - The basic type of action to be taken when this argument is encountered at the command line.</source>
          <target state="translated">&lt;a href=&quot;#action&quot;&gt;action-&lt;/a&gt; 명령 행에서이 인수가 발견 될 때 수행 할 기본 조치 유형입니다.</target>
        </trans-unit>
        <trans-unit id="cef4b2db835adb8e17d14d46a122c5ceae257ca1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; - the basic type of action to be taken when this argument is encountered at the command line</source>
          <target state="translated">&lt;a href=&quot;#action&quot;&gt;action-&lt;/a&gt; 명령 행에서이 인수가 발견 될 때 수행되는 기본 조치 유형</target>
        </trans-unit>
        <trans-unit id="b0a5b2a45fc5cf27fd84dadce81ccc1f588f03c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#add-help&quot;&gt;add_help&lt;/a&gt; - Add a &lt;code&gt;-h/--help&lt;/code&gt; option to the parser (default: &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#add-help&quot;&gt;add_help-&lt;/a&gt; 파서에 &lt;code&gt;-h/--help&lt;/code&gt; -help 옵션 추가 (기본값 : &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9038c0da2448dfa515afaeb80f5ea3096b33f21c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#allow-abbrev&quot;&gt;allow_abbrev&lt;/a&gt; - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#allow-abbrev&quot;&gt;allow_abbrev-&lt;/a&gt; 약어가 명확하지 않은 경우 긴 옵션을 약어로 사용할 수 있습니다. (기본값 : &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="06b76107b59e833a91cc0e9523a9f12e1ed6f909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentDefaultsHelpFormatter&quot;&gt;&lt;code&gt;ArgumentDefaultsHelpFormatter&lt;/code&gt;&lt;/a&gt; automatically adds information about default values to each of the argument help messages:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentDefaultsHelpFormatter&quot;&gt; &lt;code&gt;ArgumentDefaultsHelpFormatter&lt;/code&gt; &lt;/a&gt; 는 각 인수 도움말 메시지에 기본값에 대한 정보를 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e1189659879d1f96535f39aba506f1f6896c9fa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects allow the help formatting to be customized by specifying an alternate formatting class. Currently, there are four such classes:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체를 사용하면 대체 서식 클래스를 지정하여 도움말 서식을 사용자 지정할 수 있습니다. 현재 다음과 같은 네 가지 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ea7d89dbb4bb491142d20983465dc61015cf46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects associate command-line arguments with actions. These actions can do just about anything with the command-line arguments associated with them, though most actions simply add an attribute to the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;action&lt;/code&gt; keyword argument specifies how the command-line arguments should be handled. The supplied actions are:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체는 명령 줄 인수를 작업과 연결합니다. 이러한 작업은 명령 줄 인수와 관련된 모든 작업을 수행 할 수 있지만 대부분의 작업은&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 반환 한 객체에 속성을 추가하기 만합니다 . &lt;code&gt;action&lt;/code&gt; 명령 줄 인수를 처리하는 방법을 키워드 인수를 지정합니다. 제공된 조치는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c17f341bc98b98bcb34c0487e8b9a9b1d79cb3d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects do not allow two actions with the same option string. By default, &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects raise an exception if an attempt is made to create an argument with an option string that is already in use:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체는 동일한 옵션 문자열로 두 개의 동작을 허용하지 않습니다. 기본적으로&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체는 이미 사용중인 옵션 문자열을 사용하여 인수를 만들려고 시도하면 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e30a8f348717fb923dc4bb613f59326cd1def0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; parses arguments through the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method. This will inspect the command line, convert each argument to the appropriate type and then invoke the appropriate action. In most cases, this means a simple &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object will be built up from attributes parsed out of the command line:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 메서드를통해 인수를 구문 분석합니다. 명령 행을 검사하고 각 인수를 적절한 유형으로 변환 한 다음 적절한 조치를 호출합니다. 대부분의 경우이는 명령 행에서 구문 분석 된 속성에서간단한&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 오브젝트가 빌드됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f8ba75a40491770e3ef917d1012ef35d2c6b3ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt;&lt;code&gt;parse_known_intermixed_args()&lt;/code&gt;&lt;/a&gt; returns a two item tuple containing the populated namespace and the list of remaining argument strings. &lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt;&lt;code&gt;parse_intermixed_args()&lt;/code&gt;&lt;/a&gt; raises an error if there are any remaining unparsed argument strings.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_known_intermixed_args&quot;&gt; &lt;code&gt;parse_known_intermixed_args()&lt;/code&gt; &lt;/a&gt; 는 채워진 네임 스페이스와 나머지 인수 문자열 목록을 포함하는 두 항목 튜플을 반환합니다. 구문 분석되지 않은 인수 문자열이 남아 있으면&lt;a href=&quot;#argparse.ArgumentParser.parse_intermixed_args&quot;&gt; &lt;code&gt;parse_intermixed_args()&lt;/code&gt; &lt;/a&gt; 에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0f54d4ee58471f58cef6b4b78f91a418120fe1ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.MetavarTypeHelpFormatter&quot;&gt;&lt;code&gt;MetavarTypeHelpFormatter&lt;/code&gt;&lt;/a&gt; uses the name of the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; argument for each argument as the display name for its values (rather than using the &lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; as the regular formatter does):</source>
          <target state="translated">&lt;a href=&quot;#argparse.MetavarTypeHelpFormatter&quot;&gt; &lt;code&gt;MetavarTypeHelpFormatter&lt;/code&gt; &lt;/a&gt; 는일반 포매터처럼&lt;a href=&quot;#dest&quot;&gt; dest&lt;/a&gt; 를사용하지 않고 각 인수의&lt;a href=&quot;#type&quot;&gt; 유형&lt;/a&gt; 인수 이름을 해당 값의 표시 이름으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="57c9d1b8dbe65d031ae9f972de0c3434a250cc1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt;&lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt;&lt;code&gt;RawTextHelpFormatter&lt;/code&gt;&lt;/a&gt; give more control over how textual descriptions are displayed. By default, &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects line-wrap the &lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; and &lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; texts in command-line help messages:</source>
          <target state="translated">&lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt; &lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt; &lt;code&gt;RawTextHelpFormatter&lt;/code&gt; 를 사용&lt;/a&gt; 하면 텍스트 설명이 표시되는 방법을보다 세밀하게 제어 할 수 있습니다. 기본적으로&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체는 명령 줄 도움말 메시지에서&lt;a href=&quot;#description&quot;&gt; 설명&lt;/a&gt; 과&lt;a href=&quot;#epilog&quot;&gt; 에필로그&lt;/a&gt; 텍스트를줄 바꿈합니다.</target>
        </trans-unit>
        <trans-unit id="1bb2e5c5565d8844756821893fe9dbfa9b76e0de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt;&lt;code&gt;RawTextHelpFormatter&lt;/code&gt;&lt;/a&gt; maintains whitespace for all sorts of help text, including argument descriptions. However, multiple new lines are replaced with one. If you wish to preserve multiple blank lines, add spaces between the newlines.</source>
          <target state="translated">&lt;a href=&quot;#argparse.RawTextHelpFormatter&quot;&gt; &lt;code&gt;RawTextHelpFormatter&lt;/code&gt; &lt;/a&gt; 는 인수 설명을 포함하여 모든 종류의 도움말 텍스트에 공백을 유지합니다. 그러나 여러 줄 바꿈이 하나로 바뀝니다. 여러 개의 빈 줄을 유지하려면 줄 바꿈 사이에 공백을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c69005d86383203ff994c9476c1071599dd2222c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#args&quot;&gt;args&lt;/a&gt; - List of strings to parse. The default is taken from &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#args&quot;&gt;args-&lt;/a&gt; 구문 분석 할 문자열 목록. 기본값은 &lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3df462f4c9f17cc739908465e3657982a0290dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#argument-default&quot;&gt;argument_default&lt;/a&gt; - The global default value for arguments (default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#argument-default&quot;&gt;argument_default-인수&lt;/a&gt; 의 글로벌 기본값 (기본값 : &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d58618156f4926ae0a483c900f333d681a380954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio-debug-mode&quot;&gt;Enable the debug mode&lt;/a&gt; to get the traceback where the task was created:</source>
          <target state="translated">&lt;a href=&quot;#asyncio-debug-mode&quot;&gt;&lt;/a&gt;태스크가 작성된 위치에 대한 추적을 얻으려면 디버그 모드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea6c0459703781e07e0c355a2705a5da04be8c4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt; is called when the buffer size becomes greater than or equal to the &lt;em&gt;high&lt;/em&gt; value. If writing has been paused, &lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt; is called when the buffer size becomes less than or equal to the &lt;em&gt;low&lt;/em&gt; value.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt; &lt;code&gt;pause_writing()&lt;/code&gt; &lt;/a&gt; 은 버퍼 크기가&lt;em&gt; 높은&lt;/em&gt; 값보다 크거나 같을 때 호출됩니다. 쓰기가 일시 중지 된경우 버퍼 크기가&lt;em&gt; 낮은&lt;/em&gt; 값보다 작거나 같을 때&lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt; &lt;code&gt;resume_writing()&lt;/code&gt; &lt;/a&gt; 이 호출됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2454a4f4532178a0953b11d1e867b8678ffe5d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt; can be called an arbitrary number of times during a connection. However, &lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;protocol.eof_received()&lt;/code&gt;&lt;/a&gt; is called at most once and, if called, &lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t be called after it.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt; &lt;code&gt;get_buffer()&lt;/code&gt; &lt;/a&gt; 는 연결 중에 임의의 횟수로 호출 될 수 있습니다. 그러나&lt;a href=&quot;#asyncio.Protocol.eof_received&quot;&gt; &lt;code&gt;protocol.eof_received()&lt;/code&gt; &lt;/a&gt; 는 최대 한 번만 호출되며, 호출되면&lt;a href=&quot;#asyncio.BufferedProtocol.get_buffer&quot;&gt; &lt;code&gt;get_buffer()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#asyncio.BufferedProtocol.buffer_updated&quot;&gt; &lt;code&gt;buffer_updated()&lt;/code&gt; &lt;/a&gt; 가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c51f764dcd0a910f388463cdee023a867515146d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Future.cancel&quot;&gt;&lt;code&gt;asyncio.Future.cancel()&lt;/code&gt;&lt;/a&gt; accepts an optional &lt;code&gt;msg&lt;/code&gt; argument, but &lt;code&gt;concurrent.futures.cancel()&lt;/code&gt; does not.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Future.cancel&quot;&gt; &lt;code&gt;asyncio.Future.cancel()&lt;/code&gt; &lt;/a&gt; accepts an optional &lt;code&gt;msg&lt;/code&gt; argument, but &lt;code&gt;concurrent.futures.cancel()&lt;/code&gt; does not.</target>
        </trans-unit>
        <trans-unit id="ea3a10454d2d1732a6e83aff05b52d6a3466d445" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Future.result&quot;&gt;&lt;code&gt;asyncio.Future.result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.Future.exception&quot;&gt;&lt;code&gt;asyncio.Future.exception()&lt;/code&gt;&lt;/a&gt; do not accept the &lt;em&gt;timeout&lt;/em&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Future.result&quot;&gt; &lt;code&gt;asyncio.Future.result()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#asyncio.Future.exception&quot;&gt; &lt;code&gt;asyncio.Future.exception()&lt;/code&gt; &lt;/a&gt; 은&lt;em&gt; 시간 초과&lt;/em&gt; 인수를허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd4b28c12208f36742a0a541a061fc0bf9faab78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Future.result&quot;&gt;&lt;code&gt;asyncio.Future.result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.Future.exception&quot;&gt;&lt;code&gt;asyncio.Future.exception()&lt;/code&gt;&lt;/a&gt; raise an &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; exception when the Future is not &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Future.result&quot;&gt; &lt;code&gt;asyncio.Future.result()&lt;/code&gt; &lt;/a&gt; 와&lt;a href=&quot;#asyncio.Future.exception&quot;&gt; &lt;code&gt;asyncio.Future.exception()&lt;/code&gt; &lt;/a&gt; 인상&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; 의&lt;/a&gt; 미래가되지 않은 경우 예외&lt;em&gt; 다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1744ff2d2612933351d16d2919cc548329d34b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; does not support the above methods on Windows. Use &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; instead for Windows.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt; 은 Windows에서 위의 메소드를 지원하지 않습니다. Windows 대신&lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt; 을사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6cdf4f58f840144196705df276e5eaed7cbc48af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;asyncio.Task&lt;/code&gt;&lt;/a&gt; inherits from &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; all of its APIs except &lt;a href=&quot;asyncio-future#asyncio.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-future#asyncio.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Task&quot;&gt; &lt;code&gt;asyncio.Task&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 에서&lt;a href=&quot;asyncio-future#asyncio.Future.set_result&quot;&gt; &lt;code&gt;Future.set_result()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-future#asyncio.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt; 제외한 모든 API를상속합니다.</target>
        </trans-unit>
        <trans-unit id="349056c4f87178037e6b99eecc72ae0b2a9b09b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.Task.cancelled&quot;&gt;&lt;code&gt;cancelled()&lt;/code&gt;&lt;/a&gt; can be used to check if the Task was cancelled. The method returns &lt;code&gt;True&lt;/code&gt; if the wrapped coroutine did not suppress the &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception and was actually cancelled.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Task.cancelled&quot;&gt; &lt;code&gt;cancelled()&lt;/code&gt; &lt;/a&gt; 를 사용하여 작업이 취소되었는지 확인할 수 있습니다. 랩핑 된 코 루틴이&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt; 예외를억제하지 않고실제로 취소된 경우메소드는 &lt;code&gt;True&lt;/code&gt; 를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5a31adb7d9d27a207f6e0deaa35124e167b33d54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;asyncio.open_connection()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85dfc83b2c957d94b74c3428a8d789904dbc6923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b564e560e54b183a643cc257871bf6a3f1d97403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bdb.Breakpoint&quot;&gt;&lt;code&gt;Breakpoint&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#bdb.Breakpoint&quot;&gt; &lt;code&gt;Breakpoint&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbf9ea8a1e797492b3464ccf1f6772cb3f40dae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects are a mutable counterpart to &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체에대응하는 가변객체입니다.</target>
        </trans-unit>
        <trans-unit id="94e865421ff1b22304dc752a1f5bf5d958cf6b1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; also provides the following method:</source>
          <target state="translated">&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt; 은 다음과 같은 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ae2d0cfbe7af5869a0194de375137a5c257f8af9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; provides all of the members specified by the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="translated">&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;detach()&lt;/code&gt; 및 &lt;code&gt;truncate()&lt;/code&gt; 제외하고&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; 에&lt;/a&gt; 의해 지정된 모든 멤버를 제공합니다. 반복 및&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="65ad5c671b951d79f8760de1c14cd64ca95fed94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; provides all of the members specified by the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="translated">&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt; provides all of the members specified by the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt; . Iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement are supported.</target>
        </trans-unit>
        <trans-unit id="11db4c856530ccd0ea29165421664de8cc83aa3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#calendar.Calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#calendar.Calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="21f42b37ccc193bebea4167f712f9263d317d4f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#calendar.TextCalendar&quot;&gt;&lt;code&gt;TextCalendar&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar&quot;&gt; &lt;code&gt;TextCalendar&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e116264c7d934105104c82196086b3e051351f50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#choices&quot;&gt;choices&lt;/a&gt; - A container of the allowable values for the argument.</source>
          <target state="translated">&lt;a href=&quot;#choices&quot;&gt;choices-&lt;/a&gt; 인수에 허용되는 값의 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="9770d4b76b273c565df40d543a77da8dfef71ad9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cmdoption-zipapp-c&quot;&gt;&lt;code&gt;--compress&lt;/code&gt;&lt;/a&gt; has no effect when copying an archive.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-zipapp-c&quot;&gt; &lt;code&gt;--compress&lt;/code&gt; &lt;/a&gt;아카이브를 복사 할 때는 --compress 가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf82bc32b5e049e393c2caee898e9bd64df80fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cmdoption-zipapp-m&quot;&gt;&lt;code&gt;--main&lt;/code&gt;&lt;/a&gt; cannot be specified when copying an archive.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-zipapp-m&quot;&gt; &lt;code&gt;--main&lt;/code&gt; &lt;/a&gt;아카이브를 복사 할 때는 --main을 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4eaaa4d4c2c7892ece48418ae9831fe7653e2466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt; instances define the combined interfaces of &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes. They inherit all other methods and attributes from the underlying stream.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; &lt;/a&gt; 인스턴스는&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt; 클래스의 결합 된 인터페이스를 정의합니다. 기본 스트림에서 다른 모든 메소드와 속성을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="f61836f54b363243daadcc3326297e1cb2ab32e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; instances define the combined interfaces of &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes. They inherit all other methods and attributes from the underlying stream.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt; &lt;code&gt;StreamRecoder&lt;/code&gt; &lt;/a&gt; 인스턴스는&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt; 클래스의 결합 된 인터페이스를 정의합니다. 기본 스트림에서 다른 모든 메소드와 속성을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="555ddbc119d5af1b8cde71ceb16a46b19b804beb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="translated">&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt; 예제 및 레시피</target>
        </trans-unit>
        <trans-unit id="dbd297396758cf9786f664ee4ad3c5cc54ab337a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 예제 및 레시피</target>
        </trans-unit>
        <trans-unit id="289c833181b87abccef0c8df94f9b4ebb2a00639" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; has a &lt;code&gt;move_to_end()&lt;/code&gt; method to efficiently reposition an element to an endpoint.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 에는요소를 엔드 포인트로 효율적으로 재배치하기위한 &lt;code&gt;move_to_end()&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e5d12bfd57a9b1f242b2a87e353063bd609bb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.MappingView&quot;&gt;&lt;code&gt;MappingView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.MappingView&quot;&gt; &lt;code&gt;MappingView&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#collections.abc.Collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79ebbf91422f7a408194b716ad030ac8b5204fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.MappingView&quot;&gt;&lt;code&gt;MappingView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.MappingView&quot;&gt; &lt;code&gt;MappingView&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dfdf13e499b2e7ad79cdecb1b94efdd734dd965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.Reversible&quot;&gt;&lt;code&gt;Reversible&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.Reversible&quot;&gt; &lt;code&gt;Reversible&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#collections.abc.Collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d4c655e70446f3cc143c4123f1a89d6000c47e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.abc.Sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#collections.abc.Container&quot;&gt;&lt;code&gt;Container&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.Sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#collections.abc.Container&quot;&gt; &lt;code&gt;Container&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="011abd467c2d8b60dcd9a40c5d6c0580871095b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; Examples</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict&quot;&gt; &lt;code&gt;defaultdict&lt;/code&gt; &lt;/a&gt; 예</target>
        </trans-unit>
        <trans-unit id="27c1f6002444225322bdfbb94fa283b013130b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; objects support the following instance variable:</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict&quot;&gt; &lt;code&gt;defaultdict&lt;/code&gt; &lt;/a&gt; 객체는 다음 인스턴스 변수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1563d5f1dfbf4b56d6f20901576c42fe1e7a6eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.defaultdict&quot;&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/a&gt; objects support the following method in addition to the standard &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; operations:</source>
          <target state="translated">&lt;a href=&quot;#collections.defaultdict&quot;&gt; &lt;code&gt;defaultdict&lt;/code&gt; &lt;/a&gt; 객체는 표준&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 작업외에도 다음 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b287945730cb593221299e165076dfd4c1b93325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; Recipes</source>
          <target state="translated">&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;조리법을 deque</target>
        </trans-unit>
        <trans-unit id="bf5ea1941bef23f525cd344cdf2921083743f7e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; is an &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of threads to execute calls asynchronously.</source>
          <target state="translated">&lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 는스레드 풀을 사용하여 호출을 비동기 적으로 실행하는&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 서브 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5e5893f0718a63abf61649d964f38c8a0c5e3984" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#conflict-handler&quot;&gt;conflict_handler&lt;/a&gt; - The strategy for resolving conflicting optionals (usually unnecessary)</source>
          <target state="translated">&lt;a href=&quot;#conflict-handler&quot;&gt;conflict_handler-상충&lt;/a&gt; 되는 옵션을 해결하기위한 전략 (보통 불필요)</target>
        </trans-unit>
        <trans-unit id="87db38b80d38f0d1765627289e8d6237e3b16540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; - A constant value required by some &lt;a href=&quot;#action&quot;&gt;action&lt;/a&gt; and &lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; selections.</source>
          <target state="translated">&lt;a href=&quot;#const&quot;&gt;CONST&lt;/a&gt; - 일부에서 요구하는 상수 값 &lt;a href=&quot;#action&quot;&gt;조치&lt;/a&gt; 와 &lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; 선택.</target>
        </trans-unit>
        <trans-unit id="fafceff5606489819499af885044fce5b1a5e9cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; makes it possible to use a context manager in both an ordinary &lt;code&gt;with&lt;/code&gt; statement and also as a function decorator.</source>
          <target state="translated">&lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;ContextDecorator&lt;/code&gt; &lt;/a&gt; 를 사용하면 일반적인 &lt;code&gt;with&lt;/code&gt; 문과 함수 데코레이터로컨텍스트 관리자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b496e962067d9677538d0455dc9f508d03aa3cd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; makes it possible to instead register a callback for execution at the end of a &lt;code&gt;with&lt;/code&gt; statement, and then later decide to skip executing that callback:</source>
          <target state="translated">&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; 을&lt;/a&gt; 사용하면 &lt;code&gt;with&lt;/code&gt; 문끝에서 실행할 콜백을 등록한다음 나중에 해당 콜백 실행을 건너 뛰기로 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527cb447bf61feb6ab06c473a2e9f4943a8c922c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; so the context managers it creates can be used as decorators as well as in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements. When used as a decorator, a new generator instance is implicitly created on each function call (this allows the otherwise &amp;ldquo;one-shot&amp;rdquo; context managers created by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; to meet the requirement that context managers support multiple invocations in order to be used as decorators).</source>
          <target state="translated">&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;ContextDecorator&lt;/code&gt; 를&lt;/a&gt; 사용하므로, 생성 한 컨텍스트 관리자&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 명령문 과 함께 데코레이터로 사용할 수 있습니다. 데코레이터로 사용될 때, 새로운 생성기 인스턴스는 각 함수 호출에서 암시 적으로 생성됩니다 (이것은&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt; 에의해 생성 된 &quot;원샷&quot;컨텍스트 관리자가 컨텍스트 관리자가 여러 호출을 지원하기위한 요구 사항을 충족하도록 허용합니다. 데코레이터).</target>
        </trans-unit>
        <trans-unit id="88031ab3f08197099c12bfd4f96b4329617d1837" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt;&lt;code&gt;ContextDecorator&lt;/code&gt;&lt;/a&gt; so the context managers it creates can be used as decorators as well as in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements. When used as a decorator, a new generator instance is implicitly created on each function call (this allows the otherwise &amp;ldquo;one-shot&amp;rdquo; context managers created by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt; to meet the requirement that context managers support multiple invocations in order to be used as decorators).</source>
          <target state="translated">&lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt; uses &lt;a href=&quot;#contextlib.ContextDecorator&quot;&gt; &lt;code&gt;ContextDecorator&lt;/code&gt; &lt;/a&gt; so the context managers it creates can be used as decorators as well as in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements. When used as a decorator, a new generator instance is implicitly created on each function call (this allows the otherwise &amp;ldquo;one-shot&amp;rdquo; context managers created by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt; to meet the requirement that context managers support multiple invocations in order to be used as decorators).</target>
        </trans-unit>
        <trans-unit id="d34292c9eed0731edffe1bc972aa72d81dcee97c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#curses.start_color&quot;&gt;&lt;code&gt;start_color()&lt;/code&gt;&lt;/a&gt; initializes eight basic colors (black, red, green, yellow, blue, magenta, cyan, and white), and two global variables in the &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module, &lt;code&gt;COLORS&lt;/code&gt; and &lt;code&gt;COLOR_PAIRS&lt;/code&gt;, containing the maximum number of colors and color-pairs the terminal can support. It also restores the colors on the terminal to the values they had when the terminal was just turned on.</source>
          <target state="translated">&lt;a href=&quot;#curses.start_color&quot;&gt; &lt;code&gt;start_color()&lt;/code&gt; &lt;/a&gt; 8 개의 기본 색상 (검정색, 빨간색, 녹색, 노란색, 파란색, 자홍색, 청록색 및 흰색)과&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt; 모듈의 2 개의 전역 변수 ( &lt;code&gt;COLORS&lt;/code&gt; 및 &lt;code&gt;COLOR_PAIRS&lt;/code&gt; )를 초기화합니다. 터미널은 지원할 수 있습니다. 또한 터미널을 켰을 때의 값으로 터미널의 색상을 복원합니다.</target>
        </trans-unit>
        <trans-unit id="783ece8bb29b6fd42e1e0e1a34be3b17abd2dc14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#curses.textpad.Textbox&quot;&gt;&lt;code&gt;Textbox&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#curses.textpad.Textbox&quot;&gt; &lt;code&gt;Textbox&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4d718cc453522265bce83140bc72bfa9979e43c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; objects describe each defined field. These objects are created internally, and are returned by the &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; module-level method (see below). Users should never instantiate a &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; object directly. Its documented attributes are:</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 개체는 정의 된 각 필드를 설명합니다. 이러한 객체는 내부적으로 만들어지고&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt; 모듈 수준 메소드에의해 반환됩니다(아래 참조). 사용자는&lt;a href=&quot;#dataclasses.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 객체를 직접인스턴스화해서는 안됩니다. 문서화 된 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ee686b88f75d722002b7293543339ef7a03cd8cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects all support a &lt;code&gt;strftime(format)&lt;/code&gt; method, to create a string representing the time under the control of an explicit format string.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체는 모두명시 적 형식 문자열을 제어하여 시간을 나타내는 문자열을 만들기 위해 &lt;code&gt;strftime(format)&lt;/code&gt; 메서드를지원합니다.</target>
        </trans-unit>
        <trans-unit id="4fb53937ca39e51854a733f76f20838d494385fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;; &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;; &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; ; &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; ; &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81e4e001bc9c794816f2f03b0631f5ef7b8adae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt; may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; functions, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; or &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;, and then it&amp;rsquo;s possible to have two timestamps differing by a second that yield identical &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects. This method is preferred over &lt;a href=&quot;#datetime.datetime.utcfromtimestamp&quot;&gt;&lt;code&gt;utcfromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt; 올릴&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; 를&lt;/a&gt; 타임 스탬프 플랫폼 C에 의해 지원되는 값의 범위를 벗어나면 &lt;code&gt;localtime()&lt;/code&gt; 또는 &lt;code&gt;gmtime()&lt;/code&gt; 함수,&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;localtime()&lt;/code&gt; 또는 &lt;code&gt;gmtime()&lt;/code&gt; 실패. 1970 ~ 2038 년으로 제한되는 것이 일반적입니다. 타임 스탬프 개념에 윤초가 포함 된 비 POSIX 시스템의 경우 윤초는&lt;a href=&quot;#datetime.datetime.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt; 의해 무시되며두 개의 타임 스탬프가 다를 수 있습니다. 동일한&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 객체를 생성하는 초이 메소드는&lt;a href=&quot;#datetime.datetime.utcfromtimestamp&quot;&gt; &lt;code&gt;utcfromtimestamp()&lt;/code&gt; &lt;/a&gt; 보다 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="1bfeb6f3ab54abf8beea9b780563389adbe99b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects support comparison of &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, where &lt;em&gt;a&lt;/em&gt; is considered less than &lt;em&gt;b&lt;/em&gt; when &lt;em&gt;a&lt;/em&gt; precedes &lt;em&gt;b&lt;/em&gt; in time. If one comparand is naive and the other is aware, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if an order comparison is attempted. For equality comparisons, naive instances are never equal to aware instances.</source>
          <target state="translated">&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; to&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 비교를 지원 합니다 . 여기서&lt;em&gt; a&lt;/em&gt; 가&lt;em&gt; b&lt;/em&gt; 보다 선행할 때&lt;em&gt; a&lt;/em&gt; 는&lt;em&gt; b&lt;/em&gt; 보다 작은 것으로 간주됩니다. 하나의 비교가 순진하고 다른 하나가 인식하는 경우 주문 비교를 시도하면&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 동등 비교의 경우, 순진 인스턴스는 인식 인스턴스와 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a1e8578d026c081c1cdbf27579ce20d6ec9ba45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_and&quot;&gt;&lt;code&gt;logical_and()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise &lt;code&gt;and&lt;/code&gt; of the two operands.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.logical_and&quot;&gt; &lt;code&gt;logical_and()&lt;/code&gt; &lt;/a&gt; 는 두 개의&lt;em&gt; 논리 피연산자&lt;/em&gt; 를 취하는&lt;em&gt; 논리 연산입니다&lt;/em&gt; (&lt;a href=&quot;#logical-operands-label&quot;&gt; 논리 피연산자&lt;/a&gt; 참조). 결과는 숫자 &lt;code&gt;and&lt;/code&gt; 두 피연산자 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="8a5845f7f7b76d5dda506004761e2efbe779136a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_invert&quot;&gt;&lt;code&gt;logical_invert()&lt;/code&gt;&lt;/a&gt; is a logical operation. The result is the digit-wise inversion of the operand.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.logical_invert&quot;&gt; &lt;code&gt;logical_invert()&lt;/code&gt; &lt;/a&gt; 는 논리 연산입니다. 결과는 피연산자의 자릿수 반전입니다.</target>
        </trans-unit>
        <trans-unit id="00c8e97cda97f2bfdeb1543c9bca7f4806f8ec91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_or&quot;&gt;&lt;code&gt;logical_or()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise &lt;code&gt;or&lt;/code&gt; of the two operands.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.logical_or&quot;&gt; &lt;code&gt;logical_or()&lt;/code&gt; &lt;/a&gt; 는 두 개의&lt;em&gt; 논리 피연산자&lt;/em&gt; 를 취하는&lt;em&gt; 논리 연산입니다&lt;/em&gt; (&lt;a href=&quot;#logical-operands-label&quot;&gt; 논리 피연산자&lt;/a&gt; 참조). 결과는 숫자 &lt;code&gt;or&lt;/code&gt; 두 피연산자 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="685098839720c65632d320c5515f13030ecd9052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#decimal.Decimal.logical_xor&quot;&gt;&lt;code&gt;logical_xor()&lt;/code&gt;&lt;/a&gt; is a logical operation which takes two &lt;em&gt;logical operands&lt;/em&gt; (see &lt;a href=&quot;#logical-operands-label&quot;&gt;Logical operands&lt;/a&gt;). The result is the digit-wise exclusive or of the two operands.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Decimal.logical_xor&quot;&gt; &lt;code&gt;logical_xor()&lt;/code&gt; &lt;/a&gt; 는 두 개의&lt;em&gt; 논리 피연산자&lt;/em&gt; 를 취하는&lt;em&gt; 논리 연산입니다&lt;/em&gt; (&lt;a href=&quot;#logical-operands-label&quot;&gt; 논리 피연산자&lt;/a&gt; 참조). 결과는 숫자 단위의 배타적이거나 두 피연산자 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="47295d5c4acfcd2bc7f122ce240ba7c15e5b7b5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt; - The value produced if the argument is absent from the command line.</source>
          <target state="translated">&lt;a href=&quot;#default&quot;&gt;기본&lt;/a&gt; - 인수가 명령 줄에서 존재하지 않는 경우 생성 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="421b3434eb25cc370b260f404a31c534218c5123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; - Text to display before the argument help (default: none)</source>
          <target state="translated">&lt;a href=&quot;#description&quot;&gt;description-&lt;/a&gt; 인수 도움말 앞에 표시 할 텍스트 (기본값 : none)</target>
        </trans-unit>
        <trans-unit id="6bcbfb7abc2981fc9fa1226c59c4dc763f289865" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; - The name of the attribute to be added to the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; - &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 반환 한 객체에 추가 할 속성의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="2dad0a443630c344caaec3b10fd0a1e43ab9cc86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; - name of the attribute under which sub-command name will be stored; by default &lt;code&gt;None&lt;/code&gt; and no value is stored</source>
          <target state="translated">&lt;a href=&quot;#dest&quot;&gt;dest-&lt;/a&gt; 부속 명령 이름이 저장 될 속성의 이름. 기본적으로 &lt;code&gt;None&lt;/code&gt; 이며 값이 저장되지 않습니다</target>
        </trans-unit>
        <trans-unit id="2d74872367fe552c3c6584044175945483a8d1e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.fromkeys&quot;&gt;&lt;code&gt;fromkeys()&lt;/code&gt;&lt;/a&gt; is a class method that returns a new dictionary. &lt;em&gt;value&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;. All of the values refer to just a single instance, so it generally doesn&amp;rsquo;t make sense for &lt;em&gt;value&lt;/em&gt; to be a mutable object such as an empty list. To get distinct values, use a &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#dict&quot;&gt;dict comprehension&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#dict.fromkeys&quot;&gt; &lt;code&gt;fromkeys()&lt;/code&gt; &lt;/a&gt; 는 새 사전을 반환하는 클래스 메서드입니다. &lt;em&gt;값의&lt;/em&gt; 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 모든 값은 단일 인스턴스를 참조하므로 일반적으로&lt;em&gt; 값&lt;/em&gt; 이 빈 목록과 같은 변경 가능한 객체라는것은 의미가 없습니다. 고유 한 값을 얻으려면대신&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#dict&quot;&gt; dict 이해를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="39c71188869a36915573a32c2b0cf8ac744110ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.fromkeys&quot;&gt;&lt;code&gt;fromkeys()&lt;/code&gt;&lt;/a&gt; is a class method that returns a new dictionary. &lt;em&gt;value&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt;. All of the values refer to just a single instance, so it generally doesn&amp;rsquo;t make sense for &lt;em&gt;value&lt;/em&gt; to be a mutable object such as an empty list. To get distinct values, use a &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#dict&quot;&gt;dict comprehension&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#dict.fromkeys&quot;&gt; &lt;code&gt;fromkeys()&lt;/code&gt; &lt;/a&gt; is a class method that returns a new dictionary. &lt;em&gt;value&lt;/em&gt; defaults to &lt;code&gt;None&lt;/code&gt; . All of the values refer to just a single instance, so it generally doesn&amp;rsquo;t make sense for &lt;em&gt;value&lt;/em&gt; to be a mutable object such as an empty list. To get distinct values, use a &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#dict&quot;&gt;dict comprehension&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="05d311ca4b3bd7fa673c562fe47dc8627795d186" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; is useful to destructively iterate over a dictionary, as often used in set algorithms. If the dictionary is empty, calling &lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt; 은 집합 알고리즘에서 자주 사용되는 사전을 파괴적으로 반복하는 데 유용합니다. 사전이 비어 있으면&lt;a href=&quot;#dict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt; 을호출하면&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4659468063f4377cabc168b1fe3cbbdfca34adf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#dict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; accepts either another dictionary object or an iterable of key/value pairs (as tuples or other iterables of length two). If keyword arguments are specified, the dictionary is then updated with those key/value pairs: &lt;code&gt;d.update(red=1, blue=2)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#dict.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt; 는 다른 사전 객체 또는 키 / 값 쌍의 반복 가능 (튜플 또는 길이 2의 다른 반복 가능)을 허용합니다. 키워드 인수가 지정된 경우 사전은 해당 키 / 값 쌍 &lt;code&gt;d.update(red=1, blue=2)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="98cb1f2feb0f29fce0c98736556c06297086cbf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; objects are used (deltas generated) via a single method:</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;단일 방법을 통해 다른 객체가 사용됩니다 (델타 생성).</target>
        </trans-unit>
        <trans-unit id="71c9cb1550afe4397e675c38f70f3f2423df8e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; computes and caches detailed information about the second sequence, so if you want to compare one sequence against many sequences, use &lt;a href=&quot;#difflib.SequenceMatcher.set_seq2&quot;&gt;&lt;code&gt;set_seq2()&lt;/code&gt;&lt;/a&gt; to set the commonly used sequence once and call &lt;a href=&quot;#difflib.SequenceMatcher.set_seq1&quot;&gt;&lt;code&gt;set_seq1()&lt;/code&gt;&lt;/a&gt; repeatedly, once for each of the other sequences.</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt; 는 두 번째 시퀀스에 대한 자세한 정보를 계산하고 캐시하므로 하나의 시퀀스를 여러 시퀀스와 비교하려면&lt;a href=&quot;#difflib.SequenceMatcher.set_seq2&quot;&gt; &lt;code&gt;set_seq2()&lt;/code&gt; &lt;/a&gt; 를 사용하여 일반적으로 사용되는 시퀀스를 한 번 설정하고 다른 시퀀스마다&lt;a href=&quot;#difflib.SequenceMatcher.set_seq1&quot;&gt; &lt;code&gt;set_seq1()&lt;/code&gt; &lt;/a&gt; 반복적으로호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="db8ef29ee04d4008a137a61989502303930dc34f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0280e407a38f8f9e92e8913135aa46c20afddc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; defines the following attributes. They are initialized by the constructor, and should not be modified directly.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 는 다음 속성을 정의합니다. 그것들은 생성자에 의해 초기화되며 직접 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="54c7b7128eff11d547029a25df913774ce2d0563" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;: A collection of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s, typically extracted from a single docstring or text file.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; :일반적으로 단일 docstring 또는 텍스트 파일에서 추출 된&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; 모음입니다.</target>
        </trans-unit>
        <trans-unit id="170cfaefe399e77aa01ca5b0a7a46036f58cfa6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt;&lt;code&gt;DocTestFailure&lt;/code&gt;&lt;/a&gt; defines the following attributes:</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestFailure&quot;&gt; &lt;code&gt;DocTestFailure&lt;/code&gt; &lt;/a&gt; 는 다음 속성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bed142e388c2588c60956869b923e70f77a2c4ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; defines the following method:</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt; 는 다음 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b4db1c49756316782726a78d65a0c790461e3310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt;: Finds all docstrings in a given module, and uses a &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; to create a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; from every docstring that contains interactive examples.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt; : 지정된 모듈에서 모든 docstring을&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt; 를 사용하여대화식 예제가 포함 된 모든 docstring에서 DocTest 를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1ae3f8638df824501c3a9f8e9bf514060ca83b04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; defines the following methods:</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt; 는 다음 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b0f81c291488b57378b8ba8208449b785a3a5b7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt;: Creates a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object from a string (such as an object&amp;rsquo;s docstring).</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt; :문자열 (예 : 개체의 docstring)에서&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 개체를만듭니다.</target>
        </trans-unit>
        <trans-unit id="3332939c78c75b1bede0ce8a43186f82aa8d2915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt;: Executes the examples in a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;, and uses an &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; to verify their output.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; 은&lt;/a&gt; : A의 실행 예&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; , 그리고 사용&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; 를&lt;/a&gt; 자신의 출력을 확인.</target>
        </trans-unit>
        <trans-unit id="92a7eb0a9b47054f47c8c59c462b62522be61deb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; defines the following attributes. They are initialized by the constructor, and should not be modified directly.</source>
          <target state="translated">&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; 는 다음 속성을 정의합니다. 그것들은 생성자에 의해 초기화되며 직접 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6aba5b38aed512e446f96ecee391a6daf4807b72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;: A single Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, paired with its expected output.</source>
          <target state="translated">&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; :예상 결과와 쌍을 이루는단일 Python&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt; 문&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="975354fb9cb28de56131691f1316ffb15ed95151" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;: A single Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, paired with its expected output.</source>
          <target state="translated">&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;: A single Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;, paired with its expected output.</target>
        </trans-unit>
        <trans-unit id="543f68a4e20aeaa9bc8a3151e2cf876fe3f9ef95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; defines the following methods:</source>
          <target state="translated">&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt; 는 다음 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="422e118750b9ed3d40c3a886065e6df38093b0bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt;: Compares the actual output from a doctest example with the expected output, and decides whether they match.</source>
          <target state="translated">&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt; : doctest 예제의 실제 출력을 예상 출력과 비교하여 일치하는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0a6960f80ee21dab3ecc80e47b102c3a12626165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; defines the following attributes:</source>
          <target state="translated">&lt;a href=&quot;#doctest.UnexpectedException&quot;&gt; &lt;code&gt;UnexpectedException&lt;/code&gt; &lt;/a&gt; 은 다음 속성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9442bf37f4afba5908c03408e0674c83a6c28c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances also have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메소드도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e17e76780ca4cb65b07f12f3a8e1cb51ab0e9a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances have the following data attributes:</source>
          <target state="translated">&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 데이터 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5efb9b31cfccb15092b734dfac4d13a34e7da062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.header.decode_header&quot;&gt;&lt;code&gt;decode_header()&lt;/code&gt;&lt;/a&gt; takes a header value string and returns a sequence of pairs of the format &lt;code&gt;(decoded_string, charset)&lt;/code&gt; where &lt;em&gt;charset&lt;/em&gt; is the name of the character set.</source>
          <target state="translated">&lt;a href=&quot;#email.header.decode_header&quot;&gt; &lt;code&gt;decode_header()&lt;/code&gt; &lt;/a&gt; 는 헤더 값 문자열을 가져 와서 형식 쌍 &lt;code&gt;(decoded_string, charset)&lt;/code&gt; 의 쌍 시퀀스를 리턴합니다.여기서&lt;em&gt; charset&lt;/em&gt; 은 문자 세트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c5e52c7b1c8d17f4fdb2d992abbc3240911e5277" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects have the following instance attributes:</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 인스턴스 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcb35608c1ba55cf88697b85a24030b85ed6051e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects can also optionally contain two instance attributes, which can be used when generating the plain text of a MIME message.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 객체는 선택적으로 MIME 메시지의 일반 텍스트를 생성 할 때 사용할 수있는 두 개의 인스턴스 속성을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d573e77eb75a954e84d98221f87a76da7fe9797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instances are immutable, but they can be cloned, accepting the same keyword arguments as the class constructor and returning a new &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instance that is a copy of the original but with the specified attributes values changed.</source>
          <target state="translated">&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt; 인스턴스는 변경할 수 없지만 클래스 생성자와 동일한 키워드 인수를 허용하고 원본의 복사본이지만 지정된 속성 값이 변경된새&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt; 인스턴스를반환하여 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30f1414928b1e93a3566b7a99b8d0338be26fdc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; classes always evaluate as &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스는 항상&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; 로&lt;/a&gt; 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="b6216aac7e8541f66bb1bef646923f102c027779" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; members are instances of their &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class, and are normally accessed as &lt;code&gt;EnumClass.member&lt;/code&gt;. Under certain circumstances they can also be accessed as &lt;code&gt;EnumClass.member.member&lt;/code&gt;, but you should never do this as that lookup may fail or, worse, return something besides the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; member you are looking for (this is another good reason to use all-uppercase names for members):</source>
          <target state="translated">&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 멤버는&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스의인스턴스이며일반적으로 &lt;code&gt;EnumClass.member&lt;/code&gt; 로 액세스됩니다. 특정 상황에서는 &lt;code&gt;EnumClass.member.member&lt;/code&gt; 로 액세스 할 수있지만 조회가 실패하거나 더 나쁜 경우찾고있는&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 멤버이외의 것을 반환하면 안됩니다(이것은 모두를 사용해야하는 또 다른 이유입니다 멤버의 대문자 이름) :</target>
        </trans-unit>
        <trans-unit id="6db8f2a8a798a8ec5d99930bb57bc3dacb86bd01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; members that are mixed with non-&lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; types (such as &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.) are evaluated according to the mixed-in type&amp;rsquo;s rules; otherwise, all members evaluate as &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. To make your own Enum&amp;rsquo;s boolean evaluation depend on the member&amp;rsquo;s value add the following to your class:</source>
          <target state="translated">&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;비&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 유형 (예 :&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 등)과혼합 된 열거 형 멤버는 혼합유형의 규칙에 따라 평가됩니다. 그렇지 않으면 모든 멤버가&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; 로&lt;/a&gt; 평가됩니다. Enum의 부울 평가를 회원의 가치에 따라 결정하려면 클래스에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5f161c436aea780f35abc817ce0036d48865b6da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; values behave like integers in other ways you&amp;rsquo;d expect:</source>
          <target state="translated">&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt; 값은 다른 방식으로 정수처럼 동작합니다.</target>
        </trans-unit>
        <trans-unit id="8ba920043eeec04376be5d93975db5ceeb585eb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; - Text to display after the argument help (default: none)</source>
          <target state="translated">&lt;a href=&quot;#epilog&quot;&gt;epilog-&lt;/a&gt; 인수 도움말 뒤에 표시 할 텍스트 (기본값 : none)</target>
        </trans-unit>
        <trans-unit id="1414b74c74f7b87ffe8b3efbdc5e23f5ef42be3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#exit-on-error&quot;&gt;exit_on_error&lt;/a&gt; - Determines whether or not ArgumentParser exits with error info when an error occurs. (default: &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#exit-on-error&quot;&gt;exit_on_error&lt;/a&gt; - Determines whether or not ArgumentParser exits with error info when an error occurs. (default: &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2ca5741d11069558447d72497b97abd7c1c01539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#faulthandler.dump_traceback_later&quot;&gt;&lt;code&gt;dump_traceback_later()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#faulthandler.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; keep the file descriptor of their &lt;em&gt;file&lt;/em&gt; argument. If the file is closed and its file descriptor is reused by a new file, or if &lt;a href=&quot;os#os.dup2&quot;&gt;&lt;code&gt;os.dup2()&lt;/code&gt;&lt;/a&gt; is used to replace the file descriptor, the traceback will be written into a different file. Call these functions again each time that the file is replaced.</source>
          <target state="translated">&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#faulthandler.dump_traceback_later&quot;&gt; &lt;code&gt;dump_traceback_later()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#faulthandler.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt; 는&lt;em&gt; 파일&lt;/em&gt; 인수의 파일 설명자를 유지합니다. 파일이 닫히고 파일 디스크립터가 새 파일에 의해 재사용되거나&lt;a href=&quot;os#os.dup2&quot;&gt; &lt;code&gt;os.dup2()&lt;/code&gt; &lt;/a&gt; 가 파일 디스크립터를 대체하는 데 사용되는 경우, 역 추적이 다른 파일에 기록됩니다. 파일을 교체 할 때마다이 함수를 다시 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="6b7ea8a497c4e8441bef30a4f9d9e49136d8e2b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#formatter-class&quot;&gt;formatter_class&lt;/a&gt; - A class for customizing the help output</source>
          <target state="translated">&lt;a href=&quot;#formatter-class&quot;&gt;formatter_class-&lt;/a&gt; 도움말 출력을 사용자 정의하기위한 클래스</target>
        </trans-unit>
        <trans-unit id="a08be2b88d4eea303d9eb58c44e9e697fd6e81f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#fromfile-prefix-chars&quot;&gt;fromfile_prefix_chars&lt;/a&gt; - The set of characters that prefix files from which additional arguments should be read (default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#fromfile-prefix-chars&quot;&gt;fromfile_prefix_chars-&lt;/a&gt; 추가 인수를 읽어야하는 파일을 접두어로 붙이는 문자 세트 (기본값 : &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="724f713987d2a8755bedf138c4611251534a5304" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e0f97680d4038f8917f6bfdbd660a973bf17ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt;&lt;code&gt;FTP_TLS&lt;/code&gt;&lt;/a&gt; class inherits from &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt;, defining these additional objects:</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP_TLS&quot;&gt; &lt;code&gt;FTP_TLS&lt;/code&gt; &lt;/a&gt; 클래스는&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt; 에서상속하여다음과 같은 추가 객체를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="377c5c22a060d19326cf99dcc3a961c8b8c4859a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects are callable objects created by &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt;. They have three read-only attributes:</source>
          <target state="translated">&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 호출 가능한 객체입니다. 세 가지 읽기 전용 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="789d17049ba0cca26394b5c8e865b674d5667021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects are like &lt;code&gt;function&lt;/code&gt; objects in that they are callable, weak referencable, and can have attributes. There are some important differences. For instance, the &lt;a href=&quot;stdtypes#definition.__name__&quot;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__doc__&lt;/code&gt; attributes are not created automatically. Also, &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; objects defined in classes behave like static methods and do not transform into bound methods during instance attribute look-up.</source>
          <target state="translated">&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;function&lt;/code&gt; 객체와 유사하며 호출 가능하고 약하며 참조 가능하며 속성을 가질 수 있습니다. 몇 가지 중요한 차이점이 있습니다. 예를 들어&lt;a href=&quot;stdtypes#definition.__name__&quot;&gt; &lt;code&gt;__name__&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;__doc__&lt;/code&gt; 속성은 자동으로 생성되지 않습니다. 또한클래스에 정의 된&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial&lt;/code&gt; &lt;/a&gt; 객체는 정적 메서드처럼 동작하며 인스턴스 속성 조회 중에 바인딩 된 메서드로 변환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cb94c782361f3dffdbc1f12f938987de9a9771e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functools.update_wrapper&quot;&gt;&lt;code&gt;update_wrapper()&lt;/code&gt;&lt;/a&gt; may be used with callables other than functions. Any attributes named in &lt;em&gt;assigned&lt;/em&gt; or &lt;em&gt;updated&lt;/em&gt; that are missing from the object being wrapped are ignored (i.e. this function will not attempt to set them on the wrapper function). &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; is still raised if the wrapper function itself is missing any attributes named in &lt;em&gt;updated&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#functools.update_wrapper&quot;&gt; &lt;code&gt;update_wrapper()&lt;/code&gt; &lt;/a&gt; 는 함수 이외의 콜 러블 과 함께 사용할 수 있습니다.&lt;em&gt; 지정&lt;/em&gt; 되거나&lt;em&gt; 갱신 된&lt;/em&gt; 랩핑 된 오브젝트에서 누락&lt;em&gt; 된&lt;/em&gt; 이름의 속성은 무시됩니다 (즉,이 기능은 랩퍼 기능에서 설정을 시도하지 않습니다).랩퍼 함수 자체에&lt;em&gt; updated&lt;/em&gt; 에서 이름 지정된 속성이 누락 된 경우에도&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt; 가 계속 발생합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a18ce3edfd620dd3072cb56fafb75b0d4add4a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; parses optional metadata out of the translation catalog. It is convention with GNU &lt;strong&gt;gettext&lt;/strong&gt; to include metadata as the translation for the empty string. This metadata is in &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;-style &lt;code&gt;key: value&lt;/code&gt; pairs, and should contain the &lt;code&gt;Project-Id-Version&lt;/code&gt; key. If the key &lt;code&gt;Content-Type&lt;/code&gt; is found, then the &lt;code&gt;charset&lt;/code&gt; property is used to initialize the &amp;ldquo;protected&amp;rdquo; &lt;code&gt;_charset&lt;/code&gt; instance variable, defaulting to &lt;code&gt;None&lt;/code&gt; if not found. If the charset encoding is specified, then all message ids and message strings read from the catalog are converted to Unicode using this encoding, else ASCII is assumed.</source>
          <target state="translated">&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt; 는 번역 메타 데이터에서 선택적 메타 데이터를 구문 분석합니다.메타 데이터를 빈 문자열의 번역으로 포함시키는것이 GNU&lt;strong&gt; gettext&lt;/strong&gt; 와의 관례입니다. 이 메타 데이터는&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt; RFC 822&lt;/strong&gt;&lt;/a&gt; 스타일 &lt;code&gt;key: value&lt;/code&gt; 쌍이며 &lt;code&gt;Project-Id-Version&lt;/code&gt; 키를포함해야합니다. 키 &lt;code&gt;Content-Type&lt;/code&gt; 이 발견되면 &lt;code&gt;charset&lt;/code&gt; 속성을 사용하여&amp;ldquo;protected&amp;rdquo; &lt;code&gt;_charset&lt;/code&gt; 인스턴스 변수를 초기화하고찾지 못한 경우기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 문자 세트 인코딩이 지정되면 카탈로그에서 읽은 모든 메시지 ID 및 메시지 문자열이이 인코딩을 사용하여 유니 코드로 변환되고, 그렇지 않으면 ASCII로 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="199bff1705f460311ae56ec1cf5d12ff58be0334" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gettext.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; then expands and normalizes the languages, and then iterates through them, searching for an existing file built of these components:</source>
          <target state="translated">&lt;a href=&quot;#gettext.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;그런 다음 find () 는 언어를 확장하고 정규화 한 다음 언어를 반복하면서 이러한 구성 요소로 구성된 기존 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="033aeb4db5f3b9e5fcdcd21516d0e89502c583f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; also provides the following method and attribute:</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt; 은 또한 다음과 같은 메소드와 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c71ec5bcea4ef87cb10a80d97f22bfbf23bb9e48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface, including iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only the &lt;code&gt;truncate()&lt;/code&gt; method isn&amp;rsquo;t implemented.</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt; 은반복 및&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을포함하여&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt; 인터페이스를지원합니다. &lt;code&gt;truncate()&lt;/code&gt; 메소드만구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b91f935f8e1aa07a64efe2e00d927ef8773004b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface, including iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only the &lt;code&gt;truncate()&lt;/code&gt; method isn&amp;rsquo;t implemented.</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt; interface, including iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement. Only the &lt;code&gt;truncate()&lt;/code&gt; method isn&amp;rsquo;t implemented.</target>
        </trans-unit>
        <trans-unit id="b2221f1864ed664ec04b5c2db905954d0b9ceee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt; - A brief description of what the argument does.</source>
          <target state="translated">&lt;a href=&quot;#help&quot;&gt;도움말&lt;/a&gt; - 인수가하는 일에 대한 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="533d2d291c198725f40f053639259e8049bd1065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#help&quot;&gt;help&lt;/a&gt; - help for sub-parser group in help output, by default &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#help&quot;&gt;도움말&lt;/a&gt; - 도움말 출력의 서브 파서 그룹에 대한 도움, 기본적으로 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="718e323e41356a9cca00c968db9bfcb16d55fcf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ba156b04cc2e16a86e85d4e973cb0b552b5219d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt;&lt;code&gt;HTTPConnection&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#http.client.HTTPConnection&quot;&gt; &lt;code&gt;HTTPConnection&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b21086f076b910179770c4c609475b16c837fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.client.parse_headers&quot;&gt;&lt;code&gt;parse_headers()&lt;/code&gt;&lt;/a&gt; does not parse the start-line of a HTTP message; it only parses the &lt;code&gt;Name: value&lt;/code&gt; lines. The file has to be ready to read these field lines, so the first line should already be consumed before calling the function.</source>
          <target state="translated">&lt;a href=&quot;#http.client.parse_headers&quot;&gt; &lt;code&gt;parse_headers()&lt;/code&gt; &lt;/a&gt; 는 HTTP 메시지의 시작 라인을 구문 분석하지 않습니다. &lt;code&gt;Name: value&lt;/code&gt; 줄만구문 분석합니다. 파일은 이러한 필드 행을 읽을 준비가되어 있어야하므로 함수를 호출하기 전에 첫 번째 행이 이미 소비되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0c38b98185cf5036ed76537d5514171e3860583d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instances have Python attributes roughly corresponding to the standard cookie-attributes specified in the various cookie standards. The correspondence is not one-to-one, because there are complicated rules for assigning default values, because the &lt;code&gt;max-age&lt;/code&gt; and &lt;code&gt;expires&lt;/code&gt; cookie-attributes contain equivalent information, and because &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies may be &amp;lsquo;downgraded&amp;rsquo; by &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; from version 1 to version 0 (Netscape) cookies.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스는 다양한 쿠키 표준에 지정된 표준 쿠키 속성에 대략 상응하는 Python 속성을 갖습니다. &lt;code&gt;max-age&lt;/code&gt; 및 &lt;code&gt;expires&lt;/code&gt; 쿠키 속성에 동등한 정보가 포함되어 있고&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt; RFC 2109&lt;/strong&gt;&lt;/a&gt; 쿠키가버전의&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; 에&lt;/a&gt; 의해 '다운 그레이드'될 수있기 때문에 기본값을 할당하기위한 복잡한 규칙이 있기 때문에 대응 관계는 일대일이 아닙니다.1에서 버전 0 (Netscape) 쿠키까지.</target>
        </trans-unit>
        <trans-unit id="cc98e3e416d08fc96bdfdfce47b7f06822af143e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; has the following methods:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a810b520f5ef1ba305f16a683d2ec269931ad7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; objects support the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; protocol for iterating over contained &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt; 객체는포함 된&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 객체를 반복하는&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt; 반복자&lt;/a&gt; 프로토콜을지원합니다.</target>
        </trans-unit>
        <trans-unit id="f7edb62ac6b452ea40fcb2339fda6442772f9ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; objects support the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; protocol for iterating over contained &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt; objects support the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; protocol for iterating over contained &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="4850fbd5edb0fc9e5e907cbb4d2ea4b5a03f4a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; implements the following additional methods:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 추가 방법을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="7ca7782af31c1bca35ba09c4b3c86a944001bb93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; implements the standard accept / reject rules for Netscape and &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies. By default, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies (ie. cookies received in a &lt;em&gt;Set-Cookie&lt;/em&gt; header with a version cookie-attribute of 1) are treated according to the RFC 2965 rules. However, if RFC 2965 handling is turned off or &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape&quot;&gt;&lt;code&gt;rfc2109_as_netscape&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, RFC 2109 cookies are &amp;lsquo;downgraded&amp;rsquo; by the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance to Netscape cookies, by setting the &lt;code&gt;version&lt;/code&gt; attribute of the &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance to 0. &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; also provides some parameters to allow some fine-tuning of policy.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt; 는 Netscape 및&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt; RFC 2965&lt;/strong&gt;&lt;/a&gt; 쿠키에대한 표준 수락 / 거부 규칙을 구현합니다. 기본적으로&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt; RFC 2109&lt;/strong&gt;&lt;/a&gt; 쿠키 (예 :버전 쿠키 속성이 1 인&lt;em&gt; Set-Cookie&lt;/em&gt; 헤더로수신 된쿠키)는 RFC 2965 규칙에 따라 처리됩니다. 그러나 RFC 2965 처리가 꺼져 있거나&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape&quot;&gt; &lt;code&gt;rfc2109_as_netscape&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt; 인스턴스에서 RFC 2109 쿠키가&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스의 &lt;code&gt;version&lt;/code&gt; 속성을 0으로 설정하여 Netscape 쿠키로 '다운 그레이드'됩니다.&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt; 는 일부 매개 변수를 제공하여 정책 조정.</target>
        </trans-unit>
        <trans-unit id="a6f1143f2d6e54e3813d6ee2e6d8e80520aa05ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; instances have the following attributes, which are all initialised from the constructor arguments of the same name, and which may all be assigned to.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 속성이 있습니다.이 속성은 모두 동일한 이름의 생성자 인수에서 초기화되며 모두 할당 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7aa391e8908d3435276e406f84e9c6bd139a2ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; implements the following additional methods:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt; &lt;code&gt;FileCookieJar&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 추가 메소드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="bd100804d40acc642e57172ff67de04b15a01f12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; instances have the following public attributes:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt; &lt;code&gt;FileCookieJar&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 공용 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7db6e09c9053dc7cf56c31a31f04159af3f53b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt;&lt;code&gt;revert()&lt;/code&gt;&lt;/a&gt; can raise the same exceptions as &lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt;. If there is a failure, the object&amp;rsquo;s state will not be altered.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt; &lt;code&gt;revert()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 와 동일한 예외를 발생시킬 수 있습니다. 장애가 발생하면 객체 상태가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9220613847d8d3f2dce9ad2891e782e42ebb8f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; has the following attributes:</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca1f8d785dd2e79490e55a20f250c985436d4263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; has the following instance variables:</source>
          <target state="translated">&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 인스턴스 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e2b141420983d2adfa9dcff88f799785c29897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; can be enabled in the command line by passing the &lt;code&gt;--cgi&lt;/code&gt; option:</source>
          <target state="translated">&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; 을&lt;/a&gt; 통과하여 명령 줄에서 사용할 수 있습니다 &lt;code&gt;--cgi&lt;/code&gt; 옵션 :</target>
        </trans-unit>
        <trans-unit id="2ce591765a93f8b4764c185d8df558855e2a4092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#imaplib.IMAP4.unselect&quot;&gt;&lt;code&gt;imaplib.IMAP4.unselect()&lt;/code&gt;&lt;/a&gt; frees server&amp;rsquo;s resources associated with the selected mailbox and returns the server to the authenticated state. This command performs the same actions as &lt;a href=&quot;#imaplib.IMAP4.close&quot;&gt;&lt;code&gt;imaplib.IMAP4.close()&lt;/code&gt;&lt;/a&gt;, except that no messages are permanently removed from the currently selected mailbox.</source>
          <target state="translated">&lt;a href=&quot;#imaplib.IMAP4.unselect&quot;&gt; &lt;code&gt;imaplib.IMAP4.unselect()&lt;/code&gt; &lt;/a&gt; frees server&amp;rsquo;s resources associated with the selected mailbox and returns the server to the authenticated state. This command performs the same actions as &lt;a href=&quot;#imaplib.IMAP4.close&quot;&gt; &lt;code&gt;imaplib.IMAP4.close()&lt;/code&gt; &lt;/a&gt;, except that no messages are permanently removed from the currently selected mailbox.</target>
        </trans-unit>
        <trans-unit id="a8f08ef0e27918ea9dd82fa2a0778aea75b941ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect.getattr_static&quot;&gt;&lt;code&gt;getattr_static()&lt;/code&gt;&lt;/a&gt; does not resolve descriptors, for example slot descriptors or getset descriptors on objects implemented in C. The descriptor object is returned instead of the underlying attribute.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getattr_static&quot;&gt; &lt;code&gt;getattr_static()&lt;/code&gt; &lt;/a&gt; 은 디스크립터 ( 예 : C로 구현 된 오브젝트의 슬롯 디스크립터 또는 getset 디스크립터)를 해석하지 않습니다. 디스크립터 오브젝트는 기본 속성 대신에 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="708c88fe8f2ded3840ad45237685f9f3af34531b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt; will only return class attributes defined in the metaclass when the argument is a class and those attributes have been listed in the metaclass&amp;rsquo; custom &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt; 는 인수가 클래스이고 해당 속성이 메타 클래스의 custom&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt; 에 나열된 경우 메타 클래스에 정의 된 클래스 속성 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cd0fd1aa4ff21b3ee7128757debaefe1974143e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt; will only return class attributes defined in the metaclass when the argument is a class and those attributes have been listed in the metaclass&amp;rsquo; custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt; will only return class attributes defined in the metaclass when the argument is a class and those attributes have been listed in the metaclass&amp;rsquo; custom &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c44f215e102eb1135f4722396cbfa34055b05a20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; provides or overrides these data attributes and methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; provides or overrides these data attributes and methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="3bfd8cda6c8000d358c51c19f0ef55c8841bd572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; provides or overrides these methods and attribute in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; 의&lt;/a&gt; 메소드와 속성 외에도 이러한 메소드와 속성을 제공하거나 대체합니다.</target>
        </trans-unit>
        <trans-unit id="2abf7c90eec812cdef14d85c023ca3e0928761cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; does not attempt to synchronize accesses to its underlying raw streams. You should not pass it the same object as reader and writer; use &lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedRWPair&quot;&gt; &lt;code&gt;BufferedRWPair&lt;/code&gt; &lt;/a&gt; 는 기본 원시 스트림에 대한 액세스 동기화를 시도하지 않습니다. 독자와 작가와 같은 대상을 전달해서는 안됩니다. 사용&lt;a href=&quot;#io.BufferedRandom&quot;&gt; &lt;code&gt;BufferedRandom&lt;/code&gt; 을&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="b4f48e95316a761977f7e5ca0ca6a60c21f4afda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; implements all of &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s methods except for &lt;a href=&quot;#io.BufferedIOBase.detach&quot;&gt;&lt;code&gt;detach()&lt;/code&gt;&lt;/a&gt;, which raises &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedRWPair&quot;&gt; &lt;code&gt;BufferedRWPair&lt;/code&gt; 의&lt;/a&gt; 구현의 모든&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; 이외의 방법&lt;a href=&quot;#io.BufferedIOBase.detach&quot;&gt; &lt;code&gt;detach()&lt;/code&gt; &lt;/a&gt; 제기&lt;a href=&quot;#io.UnsupportedOperation&quot;&gt; &lt;code&gt;UnsupportedOperation&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cb1e9b9a6793f14aa638b887200a8f359c44586" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; is capable of anything &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; can do. In addition, &lt;code&gt;seek()&lt;/code&gt; and &lt;code&gt;tell()&lt;/code&gt; are guaranteed to be implemented.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedRandom&quot;&gt; &lt;code&gt;BufferedRandom&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt; 가 수행할 수있는 모든작업을 수행 할 수 있습니다. 또한 &lt;code&gt;seek()&lt;/code&gt; 및 &lt;code&gt;tell()&lt;/code&gt; 이 구현되도록 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="2d3ddb3821782da5834c8d5534b3e90dee4cf6d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; 의&lt;/a&gt; 메소드 외에도 이러한 메소드를 제공하거나 대체합니다.</target>
        </trans-unit>
        <trans-unit id="d513c8ddf96afd7be156395d7db7cd9e3a03fbbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; 의&lt;/a&gt; 메소드 외에도 이러한 메소드를 제공하거나 대체합니다.</target>
        </trans-unit>
        <trans-unit id="201b0b6b6d10043a42824657f6bd0b86169c256c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; provides or overrides these methods in addition to those from &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; 의&lt;/a&gt; 메소드 외에도 이러한 메소드를 제공하거나 대체합니다.</target>
        </trans-unit>
        <trans-unit id="1b2cb70c52220f90eb308e91cc7210393b6949a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; objects are thread-safe to the extent that the operating system calls (such as &lt;code&gt;read(2)&lt;/code&gt; under Unix) they wrap are thread-safe too.</source>
          <target state="translated">&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; &lt;/a&gt; 객체는랩핑 된운영 체제 (예: Unix의 &lt;code&gt;read(2)&lt;/code&gt; 도 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="1f775723f2f653a367faa59d00215d766540c773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; provides these data attributes in addition to those from &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; &lt;/a&gt; provides these data attributes in addition to those from &lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="afac23749242e96bb17de181311f7cbca70b2c27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; represents an OS-level file containing bytes data. It implements the &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; interface (and therefore the &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; interface, too).</source>
          <target state="translated">&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; &lt;/a&gt; 는 바이트 데이터를 포함하는 OS 레벨 파일을 나타냅니다. 그것은 구현&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; 의&lt;/a&gt; 인터페이스 (따라서&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 인터페이스도 참조).</target>
        </trans-unit>
        <trans-unit id="725b08ed340c3f307d6b1cba59fb10e1c9ebaa27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; (and its subclasses) supports the iterator protocol, meaning that an &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; object can be iterated over yielding the lines in a stream. Lines are defined slightly differently depending on whether the stream is a binary stream (yielding bytes), or a text stream (yielding character strings). See &lt;a href=&quot;#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; (및 해당 서브 클래스)는 반복기 프로토콜을 지원합니다. 즉,&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 객체를 반복하여 스트림에서 라인을 생성 할 수 있습니다. 스트림은 이진 스트림 (Yielding bytes)인지 텍스트 스트림 (Yielding Strings String)인지에 따라 약간 다르게 정의됩니다. 아래의&lt;a href=&quot;#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3438b7595dce1cfd371470db65e5cad602515d74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;file&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement&amp;rsquo;s suite is finished&amp;mdash;even if an exception occurs:</source>
          <target state="translated">&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 는 또한 컨텍스트 관리자이므로&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을지원합니다. 이 예제에서예외가 발생하더라도 &lt;code&gt;with&lt;/code&gt; 문의 제품군이 완료된후&lt;em&gt; 파일&lt;/em&gt; 이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="c74e1160d3006e372b96a6f885c83ee2fa401048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;file&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement&amp;rsquo;s suite is finished&amp;mdash;even if an exception occurs:</source>
          <target state="translated">&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement. In this example, &lt;em&gt;file&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement&amp;rsquo;s suite is finished&amp;mdash;even if an exception occurs:</target>
        </trans-unit>
        <trans-unit id="5641670ee79158c14c264ad6d72949a342745a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; provides these data attributes and methods:</source>
          <target state="translated">&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 데이터 속성 및 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a90de447894663ba2618144dc402319eb697099e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; provides these methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt; provides these methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="e1eebbf131a9dcdbf2b06ad6b7d1b0324bb27f7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; provides this method in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; provides this method in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="d050f95f235f7711a3d49f15441897d59ccb0cfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; provides this method in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and its parents:</source>
          <target state="translated">&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; 및 해당 부모의메소드 외에이 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="900c249388381c204b345550768cb4d31dada53e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt;, however, is a native in-memory unicode container and will exhibit similar speed to &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;그러나 StringIO 는 기본 메모리 내 유니 코드 컨테이너이며&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt; 와 비슷한 속도를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="45dc5cad9577751b5850fdf3fc4c4c4f15c92100" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; provides or overrides these data attributes and methods in addition to those from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; 가&lt;/a&gt; 제공 또는에서 그뿐만 아니라 이러한 데이터 속성과 메소드 오버라이드 (override)&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="54526b6b971b2861199a709aee41166b813056df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; objects are not thread-safe.</source>
          <target state="translated">&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt; 객체는 스레드로부터 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28e86f08f9a77d9144a7885e894f92cbf3ceaaac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; provides these data attributes and methods in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt; provides these data attributes and methods in addition to those from &lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="dc559b0e636f88cd88ebe1e911afcd3cecc1f0ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt; provides these members in addition to those of &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; and its parents:</source>
          <target state="translated">&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; 및 해당멤버 외에 다음 멤버를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1bdbf54d6e8ce05a77906c62228bdca7e9df80df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt;&lt;code&gt;IPv4Interface&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;, so it inherits all the attributes from that class. In addition, the following attributes are available:</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt; &lt;code&gt;IPv4Interface&lt;/code&gt; 는&lt;/a&gt; 의 서브 클래스입니다&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt; 는 그 클래스의 모든 속성을 상속 있도록. 또한 다음과 같은 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7537de9fdfeba7045fc90919bf7c808d39b47e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ipaddress.IPv6Interface&quot;&gt;&lt;code&gt;IPv6Interface&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt;, so it inherits all the attributes from that class. In addition, the following attributes are available:</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv6Interface&quot;&gt; &lt;code&gt;IPv6Interface&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt; &lt;code&gt;IPv6Address&lt;/code&gt; &lt;/a&gt; 의 서브 클래스이므로 해당 클래스의 모든 속성을 상속합니다. 또한 다음과 같은 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="584a29c18d31d4ed29102a514b326b86ec8b1588" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#itertools.groupby&quot;&gt;&lt;code&gt;groupby()&lt;/code&gt;&lt;/a&gt; is roughly equivalent to:</source>
          <target state="translated">&lt;a href=&quot;#itertools.groupby&quot;&gt; &lt;code&gt;groupby()&lt;/code&gt; &lt;/a&gt; 는 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99b0ce33cbabc5be7ab1a01b8a9fa14f9fee9e4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#json.JSONDecodeError&quot;&gt;&lt;code&gt;JSONDecodeError&lt;/code&gt;&lt;/a&gt; will be raised if the given JSON document is not valid.</source>
          <target state="translated">&lt;a href=&quot;#json.JSONDecodeError&quot;&gt; &lt;code&gt;JSONDecodeError&lt;/code&gt; &lt;/a&gt;주어진 JSON 문서가 유효하지 않으면 JSONDecodeError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1f477b2c0b1b0889dc2613c1fab8e353e46339ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; accepts two arguments that can only be passed by keyword (&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#list.sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; 는 키워드 (&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt; 키워드 전용 인수&lt;/a&gt; ) 로만 전달할 수있는 두 개의 인수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="eefcb49a052f4f498ab19cac10d1f31264731d92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; accepts two arguments that can only be passed by keyword (&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#list.sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; accepts two arguments that can only be passed by keyword (&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="8f362526ae07e906cb4956720a62f389ce3aba00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; is not thread-safe on most systems. Applications typically start with a call of</source>
          <target state="translated">&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt; 은 대부분의 시스템에서 스레드 안전하지 않습니다. 응용 프로그램은 일반적으로</target>
        </trans-unit>
        <trans-unit id="d33574b75b3ad4f566c09e20e4d3ec4c4f163f54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; objects have the following attributes and methods. They are responsible for converting a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; to (usually) a string which can be interpreted by either a human or an external system. The base &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; allows a formatting string to be specified. If none is supplied, the default value of &lt;code&gt;'%(message)s'&lt;/code&gt; is used, which just includes the message in the logging call. To have additional items of information in the formatted output (such as a timestamp), keep reading.</source>
          <target state="translated">&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 속성과 메서드가 있습니다. 그들은&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 를 (보통) 사람이나 외부 시스템에 의해 해석 될 수있는 문자열로 변환 할 책임이 있습니다. 기본&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 사용하면 포맷 문자열을 지정할 수 있습니다. 아무 것도 제공하지 않으면 기본값 &lt;code&gt;'%(message)s'&lt;/code&gt; 가 사용되며 로깅 호출에 메시지 만 포함됩니다. 형식화 된 출력에 추가 정보 항목 (예 : 타임 스탬프)을 유지하려면 계속 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="92dff7eb6392cc02c0c6f17576e3ccc18962e53b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; instances are created automatically by the &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; every time something is logged, and can be created manually via &lt;a href=&quot;#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; (for example, from a pickled event received over the wire).</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 인스턴스는무언가가 기록 될 때마다&lt;a href=&quot;#logging.Logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; 에&lt;/a&gt; 의해 자동으로작성되며&lt;a href=&quot;#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt; 를 통해 수동으로 작성할 수 있습니다(예 : 유선으로 수신 된 pickled 이벤트에서).</target>
        </trans-unit>
        <trans-unit id="85da56427b9bd11eb48bbe91370c8c7da7fb1dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt;&lt;code&gt;LoggerAdapter&lt;/code&gt;&lt;/a&gt; instances are used to conveniently pass contextual information into logging calls. For a usage example, see the section on &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#context-info&quot;&gt;adding contextual information to your logging output&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt; &lt;code&gt;LoggerAdapter&lt;/code&gt; &lt;/a&gt; 인스턴스는 컨텍스트 정보를 로깅 호출에 편리하게 전달하는 데 사용됩니다. 사용 예는&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#context-info&quot;&gt; 로깅 출력에 컨텍스트 정보 추가&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="07349b5016368d88e585db14e0fb6a1b4a70cab2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt;&lt;code&gt;LoggerAdapter&lt;/code&gt;&lt;/a&gt; instances are used to conveniently pass contextual information into logging calls. For a usage example, see the section on &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#context-info&quot;&gt;adding contextual information to your logging output&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt; &lt;code&gt;LoggerAdapter&lt;/code&gt; &lt;/a&gt; instances are used to conveniently pass contextual information into logging calls. For a usage example, see the section on &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#context-info&quot;&gt;adding contextual information to your logging output&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aa4741ac529f5a849122903edd2b7fc91342d398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;dictConfigClass&lt;/code&gt; passing the specified dictionary, and then calls the &lt;code&gt;configure()&lt;/code&gt; method on the returned object to put the configuration into effect:</source>
          <target state="translated">&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt; 를 호출 &lt;code&gt;dictConfigClass&lt;/code&gt; 이 지정된 사전을 통과 한 다음 호출 &lt;code&gt;configure()&lt;/code&gt; 효과로 구성을 넣어 반환 된 객체에 대한 방법 :</target>
        </trans-unit>
        <trans-unit id="9027a8b7d32089b6f9ec1812180b9f28019cf48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;MemoryHandler&lt;/code&gt;&lt;/a&gt; is a subclass of the more general &lt;a href=&quot;#logging.handlers.BufferingHandler&quot;&gt;&lt;code&gt;BufferingHandler&lt;/code&gt;&lt;/a&gt;, which is an abstract class. This buffers logging records in memory. Whenever each record is added to the buffer, a check is made by calling &lt;code&gt;shouldFlush()&lt;/code&gt; to see if the buffer should be flushed. If it should, then &lt;code&gt;flush()&lt;/code&gt; is expected to do the flushing.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;MemoryHandler&lt;/code&gt; &lt;/a&gt; 는보다 일반적인&lt;a href=&quot;#logging.handlers.BufferingHandler&quot;&gt; &lt;code&gt;BufferingHandler&lt;/code&gt; &lt;/a&gt; 의 서브 클래스이며추상 클래스입니다. 메모리의 로깅 레코드를 버퍼링합니다. 각 레코드가 버퍼에 추가 될 때마다 &lt;code&gt;shouldFlush()&lt;/code&gt; 를호출하여 버퍼를 플러시해야하는지 확인합니다. 필요한 경우 &lt;code&gt;flush()&lt;/code&gt; 가 플러싱을 수행 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="5f48292bf1fcdd5290291acec1cbbe6775eb8d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; supports all the members specified by &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="translated">&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;detach()&lt;/code&gt; 및 &lt;code&gt;truncate()&lt;/code&gt; 제외하고&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; 로&lt;/a&gt; 지정된 모든 멤버를 지원합니다. 반복 및&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4d2af98ae933c46d110349ddf80bfff749647d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#lzma.LZMAFile&quot;&gt;&lt;code&gt;LZMAFile&lt;/code&gt;&lt;/a&gt; supports all the members specified by &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt;. Iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement are supported.</source>
          <target state="translated">&lt;a href=&quot;#lzma.LZMAFile&quot;&gt; &lt;code&gt;LZMAFile&lt;/code&gt; &lt;/a&gt; supports all the members specified by &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;, except for &lt;code&gt;detach()&lt;/code&gt; and &lt;code&gt;truncate()&lt;/code&gt; . Iteration and the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement are supported.</target>
        </trans-unit>
        <trans-unit id="c2dc76192636bc966449a24b1cf5b6340167ac21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Babyl&quot;&gt;&lt;code&gt;Babyl&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Babyl&quot;&gt; &lt;code&gt;Babyl&lt;/code&gt; &lt;/a&gt; 인스턴스에는다음 외에도&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 모든 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9c28ff75b1621d6a2c485f4b59109e444d46c00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt; &lt;code&gt;BabylMessage&lt;/code&gt; &lt;/a&gt; 인스턴스는 다음과 같은 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f2a1c68397c0b49d59762d972cf7cfb32ab8988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt;&lt;code&gt;BabylMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.BabylMessage&quot;&gt; &lt;code&gt;BabylMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="be11652a1cb7c9656de96606c2969f37f0333897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instances do not keep any open files, so this method is equivalent to &lt;a href=&quot;#mailbox.MH.unlock&quot;&gt;&lt;code&gt;unlock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt; 인스턴스는 열린 파일을 유지하지 않으므로이 메소드는&lt;a href=&quot;#mailbox.MH.unlock&quot;&gt; &lt;code&gt;unlock()&lt;/code&gt; &lt;/a&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="be5d6a373441c3f3207ac6586da6dd375c355762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt; 인스턴스에는다음과 같은모든&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="97a1d24a358e208ee200392ab7aa6ca56689c5ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MHMessage&quot;&gt; &lt;code&gt;MHMessage&lt;/code&gt; &lt;/a&gt; 인스턴스는 다음 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2689b69b95eea0e7984884d6c3dc1fbf70ba855d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MHMessage&quot;&gt;&lt;code&gt;MHMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MHMessage&quot;&gt; &lt;code&gt;MHMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="e1dfc1107ff89d91d2c193333e31d1aaf9c86a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods, which are identical to those offered by &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; 의&lt;/a&gt; 인스턴스에서 제공하는 동일 다음과 같은 방법을 제공&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; 를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0d79fb634b9af42ae97894b36dd55c597934a38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="d1b246efd7c66e001994af1a51246a519632fec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb34f0d57c6d6006162645fc1b94a3e03b83d63c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; interface semantics differ from dictionary semantics in some noteworthy ways. Each time a message is requested, a new representation (typically a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance) is generated based upon the current state of the mailbox. Similarly, when a message is added to a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance, the provided message representation&amp;rsquo;s contents are copied. In neither case is a reference to the message representation kept by the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인터페이스 의미론은 몇 가지 주목할만한 점에서 사전 의미론과 다릅니다. 메시지가 요청 될 때마다사서함의 현재 상태에 따라새로운 표현 (일반적으로&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 인스턴스)이 생성됩니다. 마찬가지로 메시지가&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인스턴스에추가되면 제공된 메시지 표시의 내용이 복사됩니다. 어떠한 경우에도&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인스턴스가유지하는 메시지 표현에 대한 참조는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c13a2f7944a309436ced504aab6ba3d87557a14a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instances do not keep any open files and the underlying mailboxes do not support locking, so this method does nothing.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt; 인스턴스는 열린 파일을 유지하지 않으며 기본 사서함은 잠금을 지원하지 않으므로이 방법은 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6947cf4c501e7089ee70664ec22184381ec9f8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instances have all of the methods of &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; in addition to the following:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt; 인스턴스에는다음과 함께&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; 의&lt;/a&gt; 모든 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d83975bd4f3a67d3871464a353735be6163ac1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt; &lt;code&gt;MaildirMessage&lt;/code&gt; &lt;/a&gt; 인스턴스는 다음 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0153c5f0b348932b8d1821d8c24e3c43b75bec5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt;&lt;code&gt;MaildirMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MaildirMessage&quot;&gt; &lt;code&gt;MaildirMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="62faa0eac46c36ba74bc0f36a292890f84ab17c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; instances offer the following methods:</source>
          <target state="translated">&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt; 인스턴스는 다음 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="16c78c483acefbca51941a3904bcb7e7573bb82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt;&lt;code&gt;MMDFMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#mailbox.MMDFMessage&quot;&gt; &lt;code&gt;MMDFMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="a18d3c0dfa744be51cf9d4fcd82531c773c1f745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; state</source>
          <target state="translated">&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt; 상태</target>
        </trans-unit>
        <trans-unit id="2f09671515505d974da70f1f75b2b89c7b64bdba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; has several methods:</source>
          <target state="translated">&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt; 에는 여러 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a3bb9c98829c55f52a0874036d079bf5b4fc99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; objects allow Python code to access the internal data of an object that supports the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; without copying.</source>
          <target state="translated">&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt; 객체를 사용하면 Python 코드가복사하지 않고&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt; 버퍼 프로토콜&lt;/a&gt; 을 지원하는 객체의 내부 데이터에 액세스할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecdb796fe751863736af251e7593296d7d017e57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; objects allow Python code to access the internal data of an object that supports the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; without copying.</source>
          <target state="translated">&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt; objects allow Python code to access the internal data of an object that supports the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; without copying.</target>
        </trans-unit>
        <trans-unit id="bea64ea4f38a3a58e4378974983ba5ed75a73ac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#metavar&quot;&gt;metavar&lt;/a&gt; - A name for the argument in usage messages.</source>
          <target state="translated">&lt;a href=&quot;#metavar&quot;&gt;metavar-&lt;/a&gt; 사용법 메시지의 인수 이름.</target>
        </trans-unit>
        <trans-unit id="07d9b4fcf90075aacb96f6d54cf5f0c71bd38152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#metavar&quot;&gt;metavar&lt;/a&gt; - string presenting available sub-commands in help; by default it is &lt;code&gt;None&lt;/code&gt; and presents sub-commands in form {cmd1, cmd2, ..}</source>
          <target state="translated">&lt;a href=&quot;#metavar&quot;&gt;metavar-&lt;/a&gt; 도움말에서 사용 가능한 하위 명령을 표시하는 문자열. 기본적으로 &lt;code&gt;None&lt;/code&gt; 이며 {cmd1, cmd2, ..} 형식의 하위 명령을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="462ec9c2e5ae57f931c190bf61f004c847f04645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; can also be used as a context manager in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에서 컨텍스트 관리자로 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc3e9ef1c5d59bdfe98854c7406645875db99011" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; can also be used as a context manager in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt; can also be used as a context manager in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement:</target>
        </trans-unit>
        <trans-unit id="9ce6f1aa57f73f48f2b28eca43afbe31b4bee325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; is a real module, and serves three purposes:</source>
          <target state="translated">&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt; 는 실제 모듈이며 다음 세 가지 용도로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8610bcf0c8c997278c51edef7a0059de30115bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; supports silencing the help entry for certain options, by setting the &lt;code&gt;help&lt;/code&gt; value to &lt;code&gt;argparse.SUPPRESS&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;help&lt;/code&gt; 값을 &lt;code&gt;argparse.SUPPRESS&lt;/code&gt; 로 설정하여 특정 옵션에 대한 도움말 항목 침묵을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="97b02d4277721f35c62531593e457d07e02ad9e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt; provide &lt;em&gt;deterministic profiling&lt;/em&gt; of Python programs. A &lt;em&gt;profile&lt;/em&gt; is a set of statistics that describes how often and for how long various parts of the program executed. These statistics can be formatted into reports via the &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt; 제공&lt;em&gt; 결정적 프로파일&lt;/em&gt; 파이썬 프로그램을. &lt;em&gt;프로필&lt;/em&gt; 얼마나 자주 실행되는 프로그램의 시간을 각 부분에 대한 설명하는 통계 세트이다. 이러한 통계는&lt;a href=&quot;#module-pstats&quot;&gt; &lt;code&gt;pstats&lt;/code&gt; &lt;/a&gt; 모듈을통해 보고서로 형식화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b3b1fc0d826a731be226b41e24c7e2129752583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; is recommended for most users; it&amp;rsquo;s a C extension with reasonable overhead that makes it suitable for profiling long-running programs. Based on &lt;code&gt;lsprof&lt;/code&gt;, contributed by Brett Rosen and Ted Czotter.</source>
          <target state="translated">&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt; 은 대부분의 사용자에게 권장됩니다. 장기 실행 프로그램을 프로파일 링하는 데 적합한 합리적인 오버 헤드가있는 C 확장입니다. Brett Rosen 및 Ted Czotter가 제공 한 &lt;code&gt;lsprof&lt;/code&gt; 기반.</target>
        </trans-unit>
        <trans-unit id="407171b97973ad986e1af71a897a02e67898e4bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; objects behave as close to actual dictionaries as possible. The mapping interface is complete and adheres to the &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;MutableMapping&lt;/code&gt;&lt;/a&gt; ABC. However, there are a few differences that should be taken into account:</source>
          <target state="translated">&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt; 객체는 가능한 한 실제 사전에 가깝게 동작합니다. 맵핑 인터페이스가 완료되었으며&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;MutableMapping&lt;/code&gt; &lt;/a&gt; ABC를준수합니다. 그러나 몇 가지 차이점을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="54d07345bd9127d1a1c64e04c13f79fca512861a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; allows creating C callable function pointers from Python callables. These are sometimes called &lt;em&gt;callback functions&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; 를&lt;/a&gt; 사용하면 Python 호출 가능 함수에서 C 호출 가능 함수 포인터를 만들 수 있습니다. 이를&lt;em&gt; 콜백 함수&lt;/em&gt; 라고도&lt;em&gt; 합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a61ba3e5b2608c384854f4bc1b0a8f3fc31920d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; can access values like this with the &lt;code&gt;in_dll()&lt;/code&gt; class methods of the type. &lt;em&gt;pythonapi&lt;/em&gt; is a predefined symbol giving access to the Python C api:</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는유형의 &lt;code&gt;in_dll()&lt;/code&gt; 클래스 메소드를사용하여 이와 같은 값에 액세스 할 수 있습니다. &lt;em&gt;pythonapi&lt;/em&gt; 는 Python C API에 액세스 할 수있는 사전 정의 된 기호입니다.</target>
        </trans-unit>
        <trans-unit id="5ec536b8b915d3ddbab8d170134ef9b42547b516" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; checks for &lt;code&gt;NULL&lt;/code&gt; when dereferencing pointers (but dereferencing invalid non-&lt;code&gt;NULL&lt;/code&gt; pointers would crash Python):</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는포인터를 역 참조 할 때 &lt;code&gt;NULL&lt;/code&gt; 을 검사합니다(그러나 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 잘못된 포인터를 역 참조하면Python이 충돌합니다).</target>
        </trans-unit>
        <trans-unit id="234211f87d3dcf5be8d13b9591b397b56b352a28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; defines a number of primitive C compatible data types:</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 여러 기본 C 호환 데이터 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b6f6fc4d3c32622502ff744ce5c4c23cd8ac941b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; does not support passing unions or structures with bit-fields to functions by value. While this may work on 32-bit x86, it&amp;rsquo;s not guaranteed by the library to work in the general case. Unions and structures with bit-fields should always be passed to functions by pointer.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 비트 필드가있는 공용체 또는 구조체를 값으로 함수에 전달하는 것을 지원하지 않습니다. 32 비트 x86에서 작동 할 수 있지만 일반적인 경우에는 라이브러리에서 작동하지 않을 수 있습니다. 비트 필드가있는 유니언 및 구조체는 항상 포인터로 함수에 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6ea919c282ea78624fe7d23e5fd1d9cebc98563f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; exports the &lt;a href=&quot;#ctypes.byref&quot;&gt;&lt;code&gt;byref()&lt;/code&gt;&lt;/a&gt; function which is used to pass parameters by reference. The same effect can be achieved with the &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; function, although &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; does a lot more work since it constructs a real pointer object, so it is faster to use &lt;a href=&quot;#ctypes.byref&quot;&gt;&lt;code&gt;byref()&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t need the pointer object in Python itself:</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 매개 변수를 참조로 전달하는 데 사용되는&lt;a href=&quot;#ctypes.byref&quot;&gt; &lt;code&gt;byref()&lt;/code&gt; &lt;/a&gt; 함수를내 보냅니다. &lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt; 함수를사용하면 같은 효과를 얻을 수있지만,&lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt; 는 실제 포인터 객체를 생성하기 때문에 훨씬 더 많은 작업을 수행하므로파이썬에서 포인터 객체가 필요하지 않은 경우&lt;a href=&quot;#ctypes.byref&quot;&gt; &lt;code&gt;byref()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 더 빠릅니다.그 자체:</target>
        </trans-unit>
        <trans-unit id="71b84d86e8effeac462b64991f6debe42f4c7458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; exports the &lt;em&gt;cdll&lt;/em&gt;, and on Windows &lt;em&gt;windll&lt;/em&gt; and &lt;em&gt;oledll&lt;/em&gt; objects, for loading dynamic link libraries.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 수출&lt;em&gt; cdll을&lt;/em&gt; , 및 Windows에&lt;em&gt; windll&lt;/em&gt; 및&lt;em&gt; oledll&lt;/em&gt; 로드 동적 링크 라이브러리, 객체.</target>
        </trans-unit>
        <trans-unit id="662ef022e58a03857e431cc42eb5f961ecd633e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; is a foreign function library for Python. It provides C compatible data types, and allows calling functions in DLLs or shared libraries. It can be used to wrap these libraries in pure Python.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 파이썬을위한 외부 함수 라이브러리입니다. C 호환 데이터 형식을 제공하며 DLL 또는 공유 라이브러리에서 함수를 호출 할 수 있습니다. 이 라이브러리를 순수한 파이썬으로 감싸는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d01dd22c4654033a3b3c78301090140602fb5ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; provides some support for variable-sized arrays and structures.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 가변 크기 배열 및 구조를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3195a995a0743954a6922d59d5ae185bb54382bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; uses the native byte order for Structures and Unions. To build structures with non-native byte order, you can use one of the &lt;a href=&quot;#ctypes.BigEndianStructure&quot;&gt;&lt;code&gt;BigEndianStructure&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.LittleEndianStructure&quot;&gt;&lt;code&gt;LittleEndianStructure&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;BigEndianUnion&lt;/code&gt;, and &lt;code&gt;LittleEndianUnion&lt;/code&gt; base classes. These classes cannot contain pointer fields.</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 Structures and Unions에 기본 바이트 순서를 사용합니다. 기본이 아닌 바이트 순서로 구조를 빌드하려면&lt;a href=&quot;#ctypes.BigEndianStructure&quot;&gt; &lt;code&gt;BigEndianStructure&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#ctypes.LittleEndianStructure&quot;&gt; &lt;code&gt;LittleEndianStructure&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;BigEndianUnion&lt;/code&gt; 및 &lt;code&gt;LittleEndianUnion&lt;/code&gt; 기본 클래스중 하나를 사용할 수 있습니다. 이 클래스는 포인터 필드를 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2fbd7340acf39d126b3efc7133e21c84040dbb42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; is a generic interface to variants of the DBM database &amp;mdash; &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt;. If none of these modules is installed, the slow-but-simple implementation in module &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; will be used. There is a &lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt;third party interface&lt;/a&gt; to the Oracle Berkeley DB.</source>
          <target state="translated">&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt; 은 DBM 데이터베이스의 변형 인&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; 에&lt;/a&gt; 대한 일반 인터페이스입니다. 이 모듈 중 어느 것도 설치되어 있지 않으면&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; &lt;/a&gt; 모듈에서 느리지 만 간단한 구현이 사용됩니다. 가&lt;a href=&quot;https://www.jcea.es/programacion/pybsddb.htm&quot;&gt; 타사 인터페이스&lt;/a&gt; 오라클 버클리 DB에가.</target>
        </trans-unit>
        <trans-unit id="f9adbf9bdf2d4f4a6ee96ae1861f834e980f4c61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; is serious about requiring exact matches in expected output. If even a single character doesn&amp;rsquo;t match, the test fails. This will probably surprise you a few times, as you learn exactly what Python does and doesn&amp;rsquo;t guarantee about output. For example, when printing a set, Python doesn&amp;rsquo;t guarantee that the element is printed in any particular order, so a test like</source>
          <target state="translated">&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt; 는 예상 출력에서 ​​정확한 일치를 요구하는 것에 대해 심각합니다. 단일 문자라도 일치하지 않으면 테스트가 실패합니다. 파이썬이하는 일을 정확히 배우고 출력에 대해 보장하지 않기 때문에 아마도 몇 번 놀랄 것입니다. 예를 들어, 집합을 인쇄 할 때 Python은 요소가 특정 순서로 인쇄되는 것을 보장하지 않으므로 테스트는</target>
        </trans-unit>
        <trans-unit id="4f63b6875c2ec4f8ded1a5b05a656574132b997d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; then examines docstrings in module &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;그런 다음 doctest 는 모듈 &lt;code&gt;M&lt;/code&gt; 의 docstring을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="768ab174778a159503823ec6a08bccb4864b3485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; exposes two functions for programmatic use:</source>
          <target state="translated">&lt;a href=&quot;#module-ensurepip&quot;&gt; &lt;code&gt;ensurepip&lt;/code&gt; &lt;/a&gt; 는 프로그래밍 방식으로 사용할 수있는 두 가지 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d476d34cd0f1a466f2ea345258cd6555a7c47997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http&quot;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; is a package that collects several modules for working with the HyperText Transfer Protocol:</source>
          <target state="translated">&lt;a href=&quot;#module-http&quot;&gt; &lt;code&gt;http&lt;/code&gt; &lt;/a&gt; 는 하이퍼 텍스트 전송 프로토콜 작업을위한 여러 모듈을 수집하는 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="e53f2423d1eb5e37d3daf5c08e73d076611c16a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http&quot;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; is also a module that defines a number of HTTP status codes and associated messages through the &lt;a href=&quot;#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt; enum:</source>
          <target state="translated">&lt;a href=&quot;#module-http&quot;&gt; &lt;code&gt;http&lt;/code&gt; &lt;/a&gt; 는 또한&lt;a href=&quot;#http.HTTPStatus&quot;&gt; &lt;code&gt;http.HTTPStatus&lt;/code&gt; &lt;/a&gt; 열거를통해 여러 HTTP 상태 코드 및 관련 메시지를 정의하는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="b0ace1a628232ab9f0c3958f74e5929330bb256a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; can also be invoked directly using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; switch of the interpreter with a &lt;code&gt;port number&lt;/code&gt; argument. Similar to the previous example, this serves files relative to the current directory:</source>
          <target state="translated">&lt;a href=&quot;#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt; &lt;code&gt;port number&lt;/code&gt; 인수를 사용하여 인터프리터의&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt; 스위치를사용하여 http.server 를 직접 호출 할 수도 있습니다. 이전 예제와 유사하게 현재 디렉토리와 관련된 파일을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2be9e903511b9d8a685c29be70299e9403e5c87c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; can also be invoked directly using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; switch of the interpreter with a &lt;code&gt;port number&lt;/code&gt; argument. Similar to the previous example, this serves files relative to the current directory:</source>
          <target state="translated">&lt;a href=&quot;#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt; can also be invoked directly using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt; switch of the interpreter with a &lt;code&gt;port number&lt;/code&gt; argument. Similar to the previous example, this serves files relative to the current directory:</target>
        </trans-unit>
        <trans-unit id="ac0a3c7ec53409c8ea37b90efdc0a4c73f7fa122" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; is not recommended for production. It only implements basic security checks.</source>
          <target state="translated">&lt;a href=&quot;#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt; 에는 http.server 가 권장되지 않습니다. 기본 보안 검사 만 구현합니다.</target>
        </trans-unit>
        <trans-unit id="5ff6d5081dddbae37670495c659854e02bba3460" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ipaddress&quot;&gt;&lt;code&gt;ipaddress&lt;/code&gt;&lt;/a&gt; provides the capabilities to create, manipulate and operate on IPv4 and IPv6 addresses and networks.</source>
          <target state="translated">&lt;a href=&quot;#module-ipaddress&quot;&gt; &lt;code&gt;ipaddress&lt;/code&gt; &lt;/a&gt; 는 IPv4 및 IPv6 주소 및 네트워크에서 작성, 조작 및 작동하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="294929e3782f8a8a2ac6203632800bd53898b09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; exposes an API familiar to users of the standard library &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">&lt;a href=&quot;#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt; 은 표준 라이브러리&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 모듈사용자에게 친숙한 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b949b900e6855b1f293ec12b148ec8df01fba391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; provides a few subpackages that contain only schema and table definitions. Currently, these definitions are based on MSI version 2.0.</source>
          <target state="translated">&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt; 는 스키마 및 테이블 정의 만 포함하는 몇 가지 하위 패키지를 제공합니다. 현재 이러한 정의는 MSI 버전 2.0을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="2a4ab9df2f982f8e8a67b00d6e2f3350a691e73c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; provides several classes that wrap the GUI tables in an MSI database. However, no standard user interface is provided; use &lt;a href=&quot;https://docs.python.org/3.8/distutils/apiref.html#module-distutils.command.bdist_msi&quot;&gt;&lt;code&gt;bdist_msi&lt;/code&gt;&lt;/a&gt; to create MSI files with a user-interface for installing Python packages.</source>
          <target state="translated">&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt; 는 GUI 데이터베이스를 MSI 데이터베이스에 래핑하는 여러 클래스를 제공합니다. 그러나 표준 사용자 인터페이스는 제공되지 않습니다. 사용&lt;a href=&quot;https://docs.python.org/3.8/distutils/apiref.html#module-distutils.command.bdist_msi&quot;&gt; &lt;code&gt;bdist_msi&lt;/code&gt; &lt;/a&gt; 파이썬 패키지를 설치하기위한 사용자 인터페이스와 MSI 파일을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a68c5ea8fd1f84056df52bb728d12d42fe81654c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; provides several classes that wrap the GUI tables in an MSI database. However, no standard user interface is provided; use &lt;a href=&quot;https://docs.python.org/3.9/distutils/apiref.html#module-distutils.command.bdist_msi&quot;&gt;&lt;code&gt;bdist_msi&lt;/code&gt;&lt;/a&gt; to create MSI files with a user-interface for installing Python packages.</source>
          <target state="translated">&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt; provides several classes that wrap the GUI tables in an MSI database. However, no standard user interface is provided; use &lt;a href=&quot;https://docs.python.org/3.9/distutils/apiref.html#module-distutils.command.bdist_msi&quot;&gt; &lt;code&gt;bdist_msi&lt;/code&gt; &lt;/a&gt; to create MSI files with a user-interface for installing Python packages.</target>
        </trans-unit>
        <trans-unit id="78ae2626c9e6b847c6e060c85dc433dcc76d2296" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; contains equivalents of all the synchronization primitives from &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt;. For instance one can use a lock to ensure that only one process prints to standard output at a time:</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 에는&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 의 모든 동기화 기본 요소에 해당하는 항목이 포함됩니다. 예를 들어 한 번에 하나의 프로세스 만 표준 출력에 인쇄되도록 잠금을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ab07accb93cb82b5045f5991cdeb430c1542b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; contains no analogues of &lt;a href=&quot;threading#threading.active_count&quot;&gt;&lt;code&gt;threading.active_count()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.enumerate&quot;&gt;&lt;code&gt;threading.enumerate()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.settrace&quot;&gt;&lt;code&gt;threading.settrace()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.setprofile&quot;&gt;&lt;code&gt;threading.setprofile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threading#threading.Timer&quot;&gt;&lt;code&gt;threading.Timer&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;threading#threading.local&quot;&gt;&lt;code&gt;threading.local&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 에는&lt;a href=&quot;threading#threading.active_count&quot;&gt; &lt;code&gt;threading.active_count()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;threading#threading.enumerate&quot;&gt; &lt;code&gt;threading.enumerate()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;threading#threading.settrace&quot;&gt; &lt;code&gt;threading.settrace()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;threading#threading.setprofile&quot;&gt; &lt;code&gt;threading.setprofile()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;threading#threading.Timer&quot;&gt; &lt;code&gt;threading.Timer&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;threading#threading.local&quot;&gt; &lt;code&gt;threading.local&lt;/code&gt; 의&lt;/a&gt; 아날로그가 없습니다.</target>
        </trans-unit>
        <trans-unit id="06ce058ff0dda96bdc149e1b5eb7bc4cf16657df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; is a package that supports spawning processes using an API similar to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; package offers both local and remote concurrency, effectively side-stepping the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; by using subprocesses instead of threads. Due to this, the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 모듈과 유사한 API를 사용하여 스폰 프로세스를 지원하는 패키지입니다. &lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 패키지 이벤트 로컬 및 원격 동시성, 효율적 측면 스테핑&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt; 글로벌 통역 잠금을&lt;/a&gt; 대신 스레드의 서브 프로세스를 사용하여. 이로 인해&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 모듈을 통해 프로그래머는 주어진 머신에서 여러 프로세서를 완전히 활용할 수 있습니다. Unix와 Windows 모두에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="0d982e7b05f2d62f7acd00b7237a77dcab3b5a7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; is a package that supports spawning processes using an API similar to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; package offers both local and remote concurrency, effectively side-stepping the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; by using subprocesses instead of threads. Due to this, the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; is a package that supports spawning processes using an API similar to the &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; module. The &lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; package offers both local and remote concurrency, effectively side-stepping the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; by using subprocesses instead of threads. Due to this, the &lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; module allows the programmer to fully leverage multiple processors on a given machine. It runs on both Unix and Windows.</target>
        </trans-unit>
        <trans-unit id="a9a2ac731919175f2efffc7b12bd0b54f128f960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; originally unconditionally called:</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 원래 무조건 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="49603c88a89afc06b50b7c3a47859329fc343686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; supports two types of communication channel between processes:</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 은 프로세스 간 두 가지 유형의 통신 채널을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="16c6230064bab9d83da42e7febde3dd6b576d392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; uses the usual &lt;a href=&quot;queue#queue.Empty&quot;&gt;&lt;code&gt;queue.Empty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exceptions to signal a timeout. They are not available in the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; namespace so you need to import them from &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 은 일반적인&lt;a href=&quot;queue#queue.Empty&quot;&gt; &lt;code&gt;queue.Empty&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt; 예외를 사용하여 시간 종료를 표시합니다. &lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 네임 스페이스에서는 사용할 수없으므로&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt; 에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="793051090865d889bcf1e60df4a0c9ae0e82c12f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt;&lt;code&gt;multiprocessing.dummy&lt;/code&gt;&lt;/a&gt; replicates the API of &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; but is no more than a wrapper around the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt; &lt;code&gt;multiprocessing.dummy&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; API를 복제하지만&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 모듈을둘러싸는 래퍼에 지나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="225306ab8b3a27fb50412a67dad5d05600f90bc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-multiprocessing.pool&quot;&gt;&lt;code&gt;multiprocessing.pool&lt;/code&gt;&lt;/a&gt; objects have internal resources that need to be properly managed (like any other resource) by using the pool as a context manager or by calling &lt;a href=&quot;#multiprocessing.pool.Pool.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt; manually. Failure to do this can lead to the process hanging on finalization.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing.pool&quot;&gt; &lt;code&gt;multiprocessing.pool&lt;/code&gt; &lt;/a&gt; objects have internal resources that need to be properly managed (like any other resource) by using the pool as a context manager or by calling &lt;a href=&quot;#multiprocessing.pool.Pool.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt; manually. Failure to do this can lead to the process hanging on finalization.</target>
        </trans-unit>
        <trans-unit id="04ffd6d9b86f87ac67a3993129fd866dc52d329d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; defines the following variables and functions:</source>
          <target state="translated">&lt;a href=&quot;#module-ossaudiodev&quot;&gt; &lt;code&gt;ossaudiodev&lt;/code&gt; &lt;/a&gt; 는 다음 변수 및 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0dc445a423ea5a9e0f033c19c2e72758c39ac9cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt;, a pure Python module whose interface is imitated by &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;, but which adds significant overhead to profiled programs. If you&amp;rsquo;re trying to extend the profiler in some way, the task might be easier with this module. Originally designed and written by Jim Roskind.</source>
          <target state="translated">&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt; 에의해 인터페이스가 모방되어있지만 프로파일 링 된 프로그램에 상당한 오버 헤드가 추가되는 순수 Python 모듈. 어떤 식 으로든 프로파일 러를 확장하려는 경우이 모듈을 사용하면 작업이 더 쉬울 수 있습니다. Jim Roskind가 원래 디자인하고 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="38812840d551d43fda7742c3c18a87e7af4abe8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; provides some functions to determine these paths.</source>
          <target state="translated">&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; &lt;/a&gt; 는 이러한 경로를 결정하는 몇 가지 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="87c3ec610815c829c258a8571729b1ccbbec6bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; puts all variables found in these files in a dictionary that can be accessed using &lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt;&lt;code&gt;get_config_vars()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#sysconfig.get_config_var&quot;&gt;&lt;code&gt;get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; &lt;/a&gt; 는 이러한 파일에있는 모든 변수를&lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt; &lt;code&gt;get_config_vars()&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#sysconfig.get_config_var&quot;&gt; &lt;code&gt;get_config_var()&lt;/code&gt; &lt;/a&gt; 사용하여 액세스 할 수있는 사전에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="a006a73a45ad79405e76937390cf34a4e87fd30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; stores installation paths corresponding to each path name, for each platform, with variables to be expanded. For instance the &lt;em&gt;stdlib&lt;/em&gt; path for the &lt;em&gt;nt&lt;/em&gt; scheme is: &lt;code&gt;{base}/Lib&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; &lt;/a&gt; 는 각 플랫폼의 각 경로 이름에 해당하는 설치 경로를 변수를 확장하여 저장합니다. 예를 들어&lt;em&gt; nt&lt;/em&gt; 체계의&lt;em&gt; stdlib&lt;/em&gt; 경로는 &lt;code&gt;{base}/Lib&lt;/code&gt; 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c47063892a843a9607322d88ec637ba489ecfde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; is not a public module. It is documented here to help Python developers write tests. The API of this module is subject to change without backwards compatibility concerns between releases.</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt; 는 공개 모듈이 아닙니다. Python 개발자가 테스트를 작성하는 데 도움이되도록 여기에 설명되어 있습니다. 이 모듈의 API는 릴리스 간 호환성 문제없이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f21c9bfcc3d50451d25bf7cecdef4a94d0a3e971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-unittest.mock&quot;&gt;&lt;code&gt;unittest.mock&lt;/code&gt;&lt;/a&gt; is a library for testing in Python. It allows you to replace parts of your system under test with mock objects and make assertions about how they have been used.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest.mock&quot;&gt; &lt;code&gt;unittest.mock&lt;/code&gt; &lt;/a&gt; 은 Python에서 테스트하기위한 라이브러리입니다. 테스트중인 시스템의 일부를 모의 객체로 교체하고 사용 방법에 대한 주장을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30391a1877be1cbecfca6ea3a7979d74d03eb782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-unittest.mock&quot;&gt;&lt;code&gt;unittest.mock&lt;/code&gt;&lt;/a&gt; provides a core &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; class removing the need to create a host of stubs throughout your test suite. After performing an action, you can make assertions about which methods / attributes were used and arguments they were called with. You can also specify return values and set needed attributes in the normal way.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest.mock&quot;&gt; &lt;code&gt;unittest.mock&lt;/code&gt; &lt;/a&gt; 은 핵심&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 클래스를제공하므로테스트 스위트 전체에서 스텁을 만들 필요가 없습니다. 작업을 수행 한 후 사용 된 메서드 / 속성 및 호출 된 인수에 대한 어설 션을 만들 수 있습니다. 일반적인 방법으로 반환 값을 지정하고 필요한 속성을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="214f7faa3e94cb6cc19958584b3f5b1c5d8da3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-wsgiref&quot;&gt;&lt;code&gt;wsgiref&lt;/code&gt;&lt;/a&gt; is a reference implementation of the WSGI specification that can be used to add WSGI support to a web server or framework. It provides utilities for manipulating WSGI environment variables and response headers, base classes for implementing WSGI servers, a demo HTTP server that serves WSGI applications, and a validation tool that checks WSGI servers and applications for conformance to the WSGI specification (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#module-wsgiref&quot;&gt; &lt;code&gt;wsgiref&lt;/code&gt; &lt;/a&gt; 는 WSGI 지원을 웹 서버 또는 프레임 워크에 추가하는 데 사용할 수있는 WSGI 스펙의 참조 구현입니다. WSGI 환경 변수 및 응답 헤더 조작을위한 유틸리티, WSGI 서버 구현을위한 기본 클래스, WSGI 애플리케이션을 제공하는 데모 HTTP 서버 및 WSGI 서버 및 애플리케이션이 WSGI 스펙을 준수하는지 확인하는 유효성 검증 도구 (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt; PEP 3333&lt;/strong&gt;&lt;/a&gt; )를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7f97559de5868f34d482e7ca9761aa4f475e9942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; is a minimal implementation of the Document Object Model interface, with an API similar to that in other languages. It is intended to be simpler than the full DOM and also significantly smaller. Users who are not already proficient with the DOM should consider using the &lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module for their XML processing instead.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt; 은 다른 언어의 API와 유사한 API를 사용하여 문서 객체 모델 인터페이스의 최소 구현입니다. 전체 DOM보다 단순하고 훨씬 작습니다. DOM에 아직 능숙하지 않은 사용자는XML 처리에&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt; 모듈을 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="03324f4af77d69f4d23a6ed835409e1db9be836e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt;&lt;code&gt;JoinableQueue&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; subclass, is a queue which additionally has &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.JoinableQueue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt; &lt;code&gt;JoinableQueue&lt;/code&gt; &lt;/a&gt; 하는&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 서브 클래스는 별도 인 큐이다&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt; 와&lt;a href=&quot;#multiprocessing.JoinableQueue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="2af0dd9bb94b3b8644df2d583c6768544e2b2c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt; 컨텍스트 관리자&lt;/a&gt; 프로토콜을지원하므로명령문&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5891a0f56472688feb8fa69d400caf9c18490985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements.</target>
        </trans-unit>
        <trans-unit id="afcaabcb873060d3eecfae0c81f06aac7e02e2f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; and exceptions</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 및 예외</target>
        </trans-unit>
        <trans-unit id="2984da8a1035e77c2786602938cd4c2eed4e18e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; implements all the methods of &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt; except for &lt;a href=&quot;queue#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;queue#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;queue#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; 제외한&lt;a href=&quot;queue#queue.Queue&quot;&gt; &lt;code&gt;queue.Queue&lt;/code&gt; 의&lt;/a&gt; 모든 메소드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="06b001187e7ac8c8296939baa52c74cd034db739" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt; has a few additional methods not found in &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt;. These methods are usually unnecessary for most code:</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;multiprocessing.Queue&lt;/code&gt; &lt;/a&gt; 에는&lt;a href=&quot;queue#queue.Queue&quot;&gt; &lt;code&gt;queue.Queue&lt;/code&gt; &lt;/a&gt; 에서 찾을 수없는 몇 가지 추가 메소드가 있습니다 . 이러한 방법은 대부분의 코드에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="706279fcb19ba46d71d81ee5d4a5e79d1023f7cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt; 컨텍스트 관리자&lt;/a&gt; 프로토콜을지원하므로명령문&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38a1aeb5853c4868125971740ff3fc37eda37078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt; supports the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and thus may be used in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements.</target>
        </trans-unit>
        <trans-unit id="7b04c8d41b034942a3982955dc13881a608a3ba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; instances also have one read-only property:</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt; 인스턴스에는 하나의 읽기 전용 속성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0935b65bf1194f0040bcf0840b4801c7c0aae7f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt;&lt;code&gt;set_start_method()&lt;/code&gt;&lt;/a&gt; should not be used more than once in the program.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.set_start_method&quot;&gt; &lt;code&gt;set_start_method()&lt;/code&gt; &lt;/a&gt; 를 두 번 이상 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e054e7ed4b29989eb4a27d8ef7bbd00ffea61cf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#name-or-flags&quot;&gt;name or flags&lt;/a&gt; - Either a name or a list of option strings, e.g. &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;-f, --foo&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#name-or-flags&quot;&gt;이름이나 플래그&lt;/a&gt; - 이름이나 옵션 문자열 목록, 예를 들어 어느 &lt;code&gt;foo&lt;/code&gt; 는 또는 &lt;code&gt;-f, --foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e206a7726fe87988be71d16cd6a09ff637aa91b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#namespace&quot;&gt;namespace&lt;/a&gt; - An object to take the attributes. The default is a new empty &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#namespace&quot;&gt;namespace-&lt;/a&gt; 속성을 취하는 객체 기본값은 새로운 빈 &lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="55086ce4beb5a87803c3a4b584262a791493b7b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#nargs&quot;&gt;nargs&lt;/a&gt; - The number of command-line arguments that should be consumed.</source>
          <target state="translated">&lt;a href=&quot;#nargs&quot;&gt;nargs-&lt;/a&gt; 소비해야하는 명령 줄 인수의 수입니다.</target>
        </trans-unit>
        <trans-unit id="19ff6bf59ba551e73efbbc66329ca67420d36d4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; does &lt;em&gt;not&lt;/em&gt; have a &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt;, so you can&amp;rsquo;t assign arbitrary attributes to an instance of the &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt; 않습니다&lt;em&gt; 하지&lt;/em&gt; 가&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; 을&lt;/a&gt; , 당신은 인스턴스에없는 할당 임의의 속성 수 있도록&lt;a href=&quot;#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt; 클래스를.</target>
        </trans-unit>
        <trans-unit id="35c1e06d59bd811bcdab7edd7afc79dbc97d551e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt; will not be called if &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">&lt;a href=&quot;#object.__getnewargs__&quot;&gt; &lt;code&gt;__getnewargs__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt; 가 정의 된경우 __getnewargs __ () 가호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="af7212c367f87844c884eaa4c5724c155d4a0f5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.WIFEXITED&quot;&gt;&lt;code&gt;WIFEXITED()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.WEXITSTATUS&quot;&gt;&lt;code&gt;WEXITSTATUS()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt;&lt;code&gt;WIFSIGNALED()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.WTERMSIG&quot;&gt;&lt;code&gt;WTERMSIG()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt;&lt;code&gt;WIFSTOPPED()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.WSTOPSIG&quot;&gt;&lt;code&gt;WSTOPSIG()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">&lt;a href=&quot;#os.WIFEXITED&quot;&gt; &lt;code&gt;WIFEXITED()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#os.WEXITSTATUS&quot;&gt; &lt;code&gt;WEXITSTATUS()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt; &lt;code&gt;WIFSIGNALED()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#os.WTERMSIG&quot;&gt; &lt;code&gt;WTERMSIG()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt; &lt;code&gt;WIFSTOPPED()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#os.WSTOPSIG&quot;&gt; &lt;code&gt;WSTOPSIG()&lt;/code&gt; &lt;/a&gt; functions.</target>
        </trans-unit>
        <trans-unit id="e5a2ba7a44d5ce3b5aa6288e9891c3ed34a26965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.WIFSTOPPED&quot;&gt;&lt;code&gt;WIFSTOPPED()&lt;/code&gt;&lt;/a&gt; only returns &lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; call was done using &lt;a href=&quot;#os.WUNTRACED&quot;&gt;&lt;code&gt;WUNTRACED&lt;/code&gt;&lt;/a&gt; option or when the process is being traced (see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ptrace(2)&quot;&gt;ptrace(2)&lt;/a&gt;&lt;/em&gt;).</source>
          <target state="translated">&lt;a href=&quot;#os.WIFSTOPPED&quot;&gt; &lt;code&gt;WIFSTOPPED()&lt;/code&gt; &lt;/a&gt; only returns &lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt; call was done using &lt;a href=&quot;#os.WUNTRACED&quot;&gt; &lt;code&gt;WUNTRACED&lt;/code&gt; &lt;/a&gt; option or when the process is being traced (see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ptrace(2)&quot;&gt;ptrace(2)&lt;/a&gt;&lt;/em&gt;).</target>
        </trans-unit>
        <trans-unit id="027a38591a361ac70ff03092c2d3fee155fe0ab8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.environb&quot;&gt;&lt;code&gt;environb&lt;/code&gt;&lt;/a&gt; is only available if &lt;a href=&quot;#os.supports_bytes_environ&quot;&gt;&lt;code&gt;supports_bytes_environ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.environb&quot;&gt; &lt;code&gt;environb&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#os.supports_bytes_environ&quot;&gt; &lt;code&gt;supports_bytes_environ&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;True&lt;/code&gt; 인 경우에만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="010561334aea66fe52063ab7e3cfe05a3141902e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; is the reverse function.</source>
          <target state="translated">&lt;a href=&quot;#os.fsdecode&quot;&gt; &lt;code&gt;fsdecode()&lt;/code&gt; &lt;/a&gt; 는 역함수 입니다.</target>
        </trans-unit>
        <trans-unit id="4c4cc0fdc7571054b9148af162f667e4a5f6ff2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fsencode&quot;&gt;&lt;code&gt;fsencode()&lt;/code&gt;&lt;/a&gt; is the reverse function.</source>
          <target state="translated">&lt;a href=&quot;#os.fsencode&quot;&gt; &lt;code&gt;fsencode()&lt;/code&gt; &lt;/a&gt; 는 역함수 입니다.</target>
        </trans-unit>
        <trans-unit id="a6cb27f9ad96f7f2b0454a1544a3d47d1eb04e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.fstat&quot;&gt;&lt;code&gt;fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">&lt;a href=&quot;#os.fstat&quot;&gt; &lt;code&gt;fstat()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; &lt;/a&gt; 함수</target>
        </trans-unit>
        <trans-unit id="9998428e67a86fb9b25f8eea505b3972a4f5b080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.getenvb&quot;&gt;&lt;code&gt;getenvb()&lt;/code&gt;&lt;/a&gt; is only available if &lt;a href=&quot;#os.supports_bytes_environ&quot;&gt;&lt;code&gt;supports_bytes_environ&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#os.getenvb&quot;&gt; &lt;code&gt;getenvb()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#os.supports_bytes_environ&quot;&gt; &lt;code&gt;supports_bytes_environ&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;True&lt;/code&gt; 인 경우에만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8ad68faf9f45d2975b51119264a2158ce7486a76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.makedirs&quot;&gt;&lt;code&gt;makedirs()&lt;/code&gt;&lt;/a&gt; will become confused if the path elements to create include &lt;a href=&quot;#os.pardir&quot;&gt;&lt;code&gt;pardir&lt;/code&gt;&lt;/a&gt; (eg. &amp;ldquo;..&amp;rdquo; on UNIX systems).</source>
          <target state="translated">&lt;a href=&quot;#os.makedirs&quot;&gt; &lt;code&gt;makedirs()&lt;/code&gt; &lt;/a&gt;작성할 경로 요소에&lt;a href=&quot;#os.pardir&quot;&gt; &lt;code&gt;pardir&lt;/code&gt; 이&lt;/a&gt; 포함되어 있으면 makedirs () 가 혼동됩니다(예 : UNIX 시스템의 경우 &quot;..&quot;).</target>
        </trans-unit>
        <trans-unit id="6f2f98805b2f54d352a8375259a6a65cfd2d0bd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; will provide as much of this information as possible without making additional system calls. When a &lt;code&gt;stat()&lt;/code&gt; or &lt;code&gt;lstat()&lt;/code&gt; system call is made, the &lt;code&gt;os.DirEntry&lt;/code&gt; object will cache the result.</source>
          <target state="translated">&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt; 은 추가 시스템 호출없이 가능한 많은 정보를 제공합니다. 때 &lt;code&gt;stat()&lt;/code&gt; 또는 &lt;code&gt;lstat()&lt;/code&gt; 시스템 호출이되면, &lt;code&gt;os.DirEntry&lt;/code&gt; 의 객체는 결과를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="70f4332d09d026a608d70821a0b344fbd0809db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.startfile&quot;&gt;&lt;code&gt;startfile()&lt;/code&gt;&lt;/a&gt; returns as soon as the associated application is launched. There is no option to wait for the application to close, and no way to retrieve the application&amp;rsquo;s exit status. The &lt;em&gt;path&lt;/em&gt; parameter is relative to the current directory. If you want to use an absolute path, make sure the first character is not a slash (&lt;code&gt;'/'&lt;/code&gt;); the underlying Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; function doesn&amp;rsquo;t work if it is. Use the &lt;a href=&quot;os.path#os.path.normpath&quot;&gt;&lt;code&gt;os.path.normpath()&lt;/code&gt;&lt;/a&gt; function to ensure that the path is properly encoded for Win32.</source>
          <target state="translated">&lt;a href=&quot;#os.startfile&quot;&gt; &lt;code&gt;startfile()&lt;/code&gt; &lt;/a&gt; 은 연결된 응용 프로그램이 시작 되 자마자 반환합니다. 응용 프로그램이 닫힐 때까지 기다리는 옵션이 없으며 응용 프로그램의 종료 상태를 검색 할 방법이 없습니다. &lt;em&gt;경로&lt;/em&gt; 매개 변수는 현재 디렉토리에 상대적입니다. 절대 경로를 사용하려면 첫 번째 문자가 슬래시 ( &lt;code&gt;'/'&lt;/code&gt; )가 아닌지 확인하십시오. 기본 Win32 &lt;code&gt;ShellExecute()&lt;/code&gt; 함수가 작동하지 않습니다. 사용&lt;a href=&quot;os.path#os.path.normpath&quot;&gt; &lt;code&gt;os.path.normpath()&lt;/code&gt; &lt;/a&gt; 경로가 제대로 Win32에서 인코딩되어 있는지 확인하는 기능.</target>
        </trans-unit>
        <trans-unit id="a94a3c93a59492c0ea858bcfa1feb3dc52bac312" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; - system time</source>
          <target state="translated">&lt;a href=&quot;#os.system&quot;&gt; &lt;code&gt;system&lt;/code&gt; &lt;/a&gt; -시스템 시간</target>
        </trans-unit>
        <trans-unit id="ddf90d9387476944a31936f830d565960ae3e66e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.utime&quot;&gt;&lt;code&gt;utime()&lt;/code&gt;&lt;/a&gt; takes two optional parameters, &lt;em&gt;times&lt;/em&gt; and &lt;em&gt;ns&lt;/em&gt;. These specify the times set on &lt;em&gt;path&lt;/em&gt; and are used as follows:</source>
          <target state="translated">&lt;a href=&quot;#os.utime&quot;&gt; &lt;code&gt;utime()&lt;/code&gt; &lt;/a&gt; 은&lt;em&gt; 시간&lt;/em&gt; 과&lt;em&gt; ns의&lt;/em&gt; 두 가지 선택적 매개 변수를 사용합니다. &lt;em&gt;경로에&lt;/em&gt; 설정된 시간을 지정하며 다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b4339e26fa4aeffa61f2513f20cc443f96274141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; can be used to wait for the completion of a specific child process and has more options.</source>
          <target state="translated">&lt;a href=&quot;#os.waitpid&quot;&gt; &lt;code&gt;waitpid()&lt;/code&gt; &lt;/a&gt; can be used to wait for the completion of a specific child process and has more options.</target>
        </trans-unit>
        <trans-unit id="e73ff2b1ee05f217fc8d0c205dc9d103faacbd82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the exit status into an exit code.</source>
          <target state="translated">&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt; &lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; &lt;/a&gt; can be used to convert the exit status into an exit code.</target>
        </trans-unit>
        <trans-unit id="e7e61074ab46b9231c61ec744d81a38391ebcd46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the exit status into an exitcode.</source>
          <target state="translated">&lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt; &lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; &lt;/a&gt; can be used to convert the exit status into an exitcode.</target>
        </trans-unit>
        <trans-unit id="a877f4dd7924dc9dcc8e0075dc1b9da6da74bea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#parents&quot;&gt;parents&lt;/a&gt; - A list of &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects whose arguments should also be included</source>
          <target state="translated">&lt;a href=&quot;#parents&quot;&gt;부모&lt;/a&gt; - 인수도 포함되어야하는 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체 목록</target>
        </trans-unit>
        <trans-unit id="df1560a7f1a4a12cf898cdc9a78a10a773f11f0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pathlib.Path.expanduser&quot;&gt;&lt;code&gt;Path.expanduser()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pathlib.Path.home&quot;&gt;&lt;code&gt;Path.home()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.expanduser&quot;&gt; &lt;code&gt;Path.expanduser()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#pathlib.Path.home&quot;&gt; &lt;code&gt;Path.home()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d490f688eab04bc380db10faef12d6e8806a324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.owner&quot;&gt;&lt;code&gt;Path.owner()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.group&quot;&gt;&lt;code&gt;Path.group()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.stat&quot;&gt; &lt;code&gt;Path.stat()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#pathlib.Path.owner&quot;&gt; &lt;code&gt;Path.owner()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#pathlib.Path.group&quot;&gt; &lt;code&gt;Path.group()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="700d7429acad0652e1314a766252a9d15cecfa57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt; is the debugger class.</source>
          <target state="translated">&lt;a href=&quot;#pdb.Pdb&quot;&gt; &lt;code&gt;Pdb&lt;/code&gt; &lt;/a&gt; 는 디버거 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="28e88f65c8644a51eb49ccf95e6df1d142be3f3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; is itself a buffer provider, therefore it is possible to pass it to other APIs expecting a buffer-providing object, such as &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt; 자체는 버퍼 공급자이므로&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt; 와 같은 버퍼 제공 객체를 기대하는 다른 API에 전달할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="eb9743627b93c3232b8c69b1e03bcc3891ee53ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects can only be serialized using pickle protocol 5 or higher. They are eligible for &lt;a href=&quot;#pickle-oob&quot;&gt;out-of-band serialization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt; 객체는 pickle 프로토콜 5 이상을 사용해서 만 직렬화 할 수 있습니다. 그들은 자격이&lt;a href=&quot;#pickle-oob&quot;&gt; 대역 직렬화&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cad5ae716b1d8c9e4fddd77bd665a5bddccddfad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt;&lt;code&gt;FMT_BINARY&lt;/code&gt;&lt;/a&gt;: Binary formatted plist file</source>
          <target state="translated">&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt; &lt;code&gt;FMT_BINARY&lt;/code&gt; &lt;/a&gt; : 이진 형식의 plist 파일</target>
        </trans-unit>
        <trans-unit id="0bb6a94c80759879e939c6924f1e70a6e2a08737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt;&lt;code&gt;FMT_BINARY&lt;/code&gt;&lt;/a&gt;: Binary plist format</source>
          <target state="translated">&lt;a href=&quot;#plistlib.FMT_BINARY&quot;&gt; &lt;code&gt;FMT_BINARY&lt;/code&gt; &lt;/a&gt; : 이진 plist 형식</target>
        </trans-unit>
        <trans-unit id="f171cb9d7c0b15c817dfc7537016fe9aab58d093" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt;&lt;code&gt;FMT_XML&lt;/code&gt;&lt;/a&gt;: XML file format</source>
          <target state="translated">&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt; &lt;code&gt;FMT_XML&lt;/code&gt; &lt;/a&gt; : XML 파일 형식</target>
        </trans-unit>
        <trans-unit id="43d25de6140dc0e637ef03c81a51d4139663350d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt;&lt;code&gt;FMT_XML&lt;/code&gt;&lt;/a&gt;: XML formatted plist file</source>
          <target state="translated">&lt;a href=&quot;#plistlib.FMT_XML&quot;&gt; &lt;code&gt;FMT_XML&lt;/code&gt; &lt;/a&gt; : XML 형식의 plist 파일</target>
        </trans-unit>
        <trans-unit id="6e2eaf6d4d7a6ee6c404c9704798b0f7e9046067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="560bc4da7fa6f6d92691145d8c0b780235de7355" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prefix-chars&quot;&gt;prefix_chars&lt;/a&gt; - The set of characters that prefix optional arguments (default: &amp;lsquo;-&amp;lsquo;)</source>
          <target state="translated">&lt;a href=&quot;#prefix-chars&quot;&gt;prefix_chars-&lt;/a&gt; 선택적 인수 앞에 붙는 문자 세트 (기본값 : '-')</target>
        </trans-unit>
        <trans-unit id="0a26ad3e71288fd29e6ed8970d0c37aad5a05280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prefix-matching&quot;&gt;Prefix matching&lt;/a&gt; rules apply to &lt;code&gt;parse_known_args()&lt;/code&gt;. The parser may consume an option even if it&amp;rsquo;s just a prefix of one of its known options, instead of leaving it in the remaining arguments list.</source>
          <target state="translated">&lt;a href=&quot;#prefix-matching&quot;&gt;접두사 일치&lt;/a&gt; 규칙은 &lt;code&gt;parse_known_args()&lt;/code&gt; 적용됩니다 . 파서는 옵션을 나머지 인수 목록에 그대로 두지 않고 알려진 옵션 중 하나의 접두사 일지라도 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d3da27627e579d6543a0f9386b8d05fcbdd73c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prog&quot;&gt;prog&lt;/a&gt; - The name of the program (default: &lt;code&gt;sys.argv[0]&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;#prog&quot;&gt;prog-프로그램&lt;/a&gt; 이름 (기본값 : &lt;code&gt;sys.argv[0]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3e7c7e857caa2ee0c0ef7f174fb090ce632dbe0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf52f4a89ba6544d2fbc3b03f509d853b6e36b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#queue.SimpleQueue&quot;&gt;&lt;code&gt;SimpleQueue&lt;/code&gt;&lt;/a&gt; objects provide the public methods described below.</source>
          <target state="translated">&lt;a href=&quot;#queue.SimpleQueue&quot;&gt; &lt;code&gt;SimpleQueue&lt;/code&gt; &lt;/a&gt; 객체는 아래에 설명 된 공용 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="40873616d654e384a8f8fd8588a05c9b075e7d94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt; matches &lt;em&gt;all&lt;/em&gt; occurrences of a pattern, not just the first one as &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; does. For example, if a writer wanted to find all of the adverbs in some text, they might use &lt;a href=&quot;#re.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt; in the following manner:</source>
          <target state="translated">&lt;a href=&quot;#re.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt; 와 같이 첫 번째 패턴뿐만 아니라 패턴의&lt;em&gt; 모든&lt;/em&gt; 항목과 일치&lt;em&gt; 합니다&lt;/em&gt; . 예를 들어, 작가가 일부 부사에서 일부 부사를 찾으려면 다음과 같은 방식으로&lt;a href=&quot;#re.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt; 을사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b17348960b718ac1d60cfd2811520e26863585e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; splits a string into a list delimited by the passed pattern. The method is invaluable for converting textual data into data structures that can be easily read and modified by Python as demonstrated in the following example that creates a phonebook.</source>
          <target state="translated">&lt;a href=&quot;#re.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt; 은 문자열을 전달 된 패턴으로 구분 된 목록으로 분할합니다. 이 방법은 전화 번호부를 생성하는 다음 예제와 같이 텍스트 데이터를 파이썬이 쉽게 읽고 수정할 수있는 데이터 구조로 변환하는 데 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="c2ee816edb2a3154dbed32bec1ef2dff21a89d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; replaces every occurrence of a pattern with a string or the result of a function. This example demonstrates using &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; with a function to &amp;ldquo;munge&amp;rdquo; text, or randomize the order of all the characters in each word of a sentence except for the first and last characters:</source>
          <target state="translated">&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; 는 모든 패턴 발생을 문자열 또는 함수 결과로 대체합니다. 이 예제는&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; 함수를사용하여텍스트를&amp;ldquo;munge&amp;rdquo;하거나 첫 번째 및 마지막 문자를 제외하고 문장의 각 단어에서 모든 문자의 순서를 무작위 화하는 방법을보여줍니다.</target>
        </trans-unit>
        <trans-unit id="efeec45bf28c50892c85f7f7305865c411ad31f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; instances provide several attributes which can be used to provide size limits for the representations of different object types, and methods which format specific object types.</source>
          <target state="translated">&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt; 인스턴스는 다른 객체 유형의 표현에 대한 크기 제한을 제공하는 데 사용할 수있는 몇 가지 속성과 특정 객체 유형을 형식화하는 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="207c2455e70a2e887e2c73b5c311470fbaa41be9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#required&quot;&gt;required&lt;/a&gt; - Whether or not a subcommand must be provided, by default &lt;code&gt;False&lt;/code&gt; (added in 3.7)</source>
          <target state="translated">&lt;a href=&quot;#required&quot;&gt;required-&lt;/a&gt; 부속 명령을 제공해야하는지 여부, 기본적으로 &lt;code&gt;False&lt;/code&gt; (3.7에 추가)</target>
        </trans-unit>
        <trans-unit id="c52eed142583478b4ea3e3f1b8bbcf937f6a5cf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#required&quot;&gt;required&lt;/a&gt; - Whether or not the command-line option may be omitted (optionals only).</source>
          <target state="translated">&lt;a href=&quot;#required&quot;&gt;필수&lt;/a&gt; -명령 행 옵션을 생략 할 수 있는지 여부 (선택 사항 만).</target>
        </trans-unit>
        <trans-unit id="7a24e80afc11eebf34773e45c6c854022edf0741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sched.scheduler&quot;&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/a&gt; instances have the following methods and attributes:</source>
          <target state="translated">&lt;a href=&quot;#sched.scheduler&quot;&gt; &lt;code&gt;scheduler&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메소드 및 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="603e0349ae1bf2434dc4ff4eb5e844746910e387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#selectors.DefaultSelector&quot;&gt;&lt;code&gt;DefaultSelector&lt;/code&gt;&lt;/a&gt; is an alias to the most efficient implementation available on the current platform: this should be the default choice for most users.</source>
          <target state="translated">&lt;a href=&quot;#selectors.DefaultSelector&quot;&gt; &lt;code&gt;DefaultSelector&lt;/code&gt; &lt;/a&gt; 는 현재 플랫폼에서 사용 가능한 가장 효율적인 구현의 별명입니다. 이는 대부분의 사용자에게 기본 선택입니다.</target>
        </trans-unit>
        <trans-unit id="7bfe1f259c1784d7ac7898160ca66a20366c0b3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shlex.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt; lets you plug the security hole:</source>
          <target state="translated">&lt;a href=&quot;#shlex.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt; 사용하면 보안 허점을 막을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9d79ac5ddc80ca7ed414690e320eb4a51625c67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; copies the file data and the file&amp;rsquo;s permission mode (see &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;). Other metadata, like the file&amp;rsquo;s creation and modification times, is not preserved. To preserve all file metadata from the original, use &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; 는 파일 데이터와 파일의 권한 모드를 복사합니다 (&lt;a href=&quot;os#os.chmod&quot;&gt; &lt;code&gt;os.chmod()&lt;/code&gt; &lt;/a&gt; 참조). 파일의 생성 및 수정 시간과 같은 다른 메타 데이터는 유지되지 않습니다. 원본의 모든 파일 메타 데이터를 유지하려면대신&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d5c891512e8b05b6e7cddd1d9dda5ecd134a5a27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; to copy the file metadata. Please see &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; for more information about platform support for modifying symbolic link metadata.</source>
          <target state="translated">&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt; 를사용하여 파일 메타 데이터를 복사합니다. 기호 링크 메타 데이터 수정을위한 플랫폼 지원에 대한 자세한 내용은&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="921fa50d6299ed009fc667e1242a9fe4c54a6e07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIGKILL&quot;&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SIGSTOP&lt;/code&gt; cannot be blocked.</source>
          <target state="translated">&lt;a href=&quot;#signal.SIGKILL&quot;&gt; &lt;code&gt;SIGKILL&lt;/code&gt; &lt;/a&gt; and &lt;code&gt;SIGSTOP&lt;/code&gt; cannot be blocked.</target>
        </trans-unit>
        <trans-unit id="2a23065a516fae4e986055971249b42f39027a6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;/a&gt;: The set of blocked signals is the union of the current set and the &lt;em&gt;mask&lt;/em&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;#signal.SIG_BLOCK&quot;&gt; &lt;code&gt;SIG_BLOCK&lt;/code&gt; &lt;/a&gt; : 차단 된 신호 세트는 현재 세트와&lt;em&gt; 마스크&lt;/em&gt; 인수의 합집합입니다.</target>
        </trans-unit>
        <trans-unit id="fd0d935aa2fecf0493587a94fbfd0f61a28fc22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;/a&gt;: The set of blocked signals is set to the &lt;em&gt;mask&lt;/em&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;#signal.SIG_SETMASK&quot;&gt; &lt;code&gt;SIG_SETMASK&lt;/code&gt; &lt;/a&gt; : 차단 된 신호 세트가&lt;em&gt; 마스크&lt;/em&gt; 인수로설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5879c4b57f836b305535eac7e2e174f77dfe2092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;/a&gt;: The signals in &lt;em&gt;mask&lt;/em&gt; are removed from the current set of blocked signals. It is permissible to attempt to unblock a signal which is not blocked.</source>
          <target state="translated">&lt;a href=&quot;#signal.SIG_UNBLOCK&quot;&gt; &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; &lt;/a&gt; :&lt;em&gt; 마스크&lt;/em&gt; 의 신호가현재 차단 된 신호 세트에서 제거됩니다. 차단되지 않은 신호를 차단 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="482bbfc72f2e87f2aa8d256a8e33ebfe5feb3aa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_ALG&quot;&gt;&lt;code&gt;AF_ALG&lt;/code&gt;&lt;/a&gt; is a Linux-only socket based interface to Kernel cryptography. An algorithm socket is configured with a tuple of two to four elements &lt;code&gt;(type, name [, feat [, mask]])&lt;/code&gt;, where:</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_ALG&quot;&gt; &lt;code&gt;AF_ALG&lt;/code&gt; &lt;/a&gt; 는 커널 암호화에 대한 Linux 전용 소켓 기반 인터페이스입니다. 알고리즘 소켓은 2-4 개의 요소 &lt;code&gt;(type, name [, feat [, mask]])&lt;/code&gt; . 여기서,</target>
        </trans-unit>
        <trans-unit id="df536194415e1ca1c320279fd9459d566a4b2058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_PACKET&quot;&gt;&lt;code&gt;AF_PACKET&lt;/code&gt;&lt;/a&gt; is a low-level interface directly to network devices. The packets are represented by the tuple &lt;code&gt;(ifname, proto[, pkttype[, hatype[, addr]]])&lt;/code&gt; where:</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_PACKET&quot;&gt; &lt;code&gt;AF_PACKET&lt;/code&gt; &lt;/a&gt; 은 네트워크 장치에 직접 연결되는 저수준 인터페이스입니다. 패킷은 튜플 &lt;code&gt;(ifname, proto[, pkttype[, hatype[, addr]]])&lt;/code&gt; 로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ea703e80b7f21f4cfee2f92c39e51ca86cf0b092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_QIPCRTR&quot;&gt;&lt;code&gt;AF_QIPCRTR&lt;/code&gt;&lt;/a&gt; is a Linux-only socket based interface for communicating with services running on co-processors in Qualcomm platforms. The address family is represented as a &lt;code&gt;(node, port)&lt;/code&gt; tuple where the &lt;em&gt;node&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt; are non-negative integers.</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_QIPCRTR&quot;&gt; &lt;code&gt;AF_QIPCRTR&lt;/code&gt; &lt;/a&gt; 은 Qualcomm 플랫폼의 보조 프로세서에서 실행되는 서비스와 통신하기위한 Linux 전용 소켓 기반 인터페이스입니다. 주소 패밀리는&lt;em&gt; 노드&lt;/em&gt; 및&lt;em&gt; 포트&lt;/em&gt; 가 음이 아닌 정수인 &lt;code&gt;(node, port)&lt;/code&gt; 튜플로표시됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a7a0a10ba7dec56c423dc9129bbadb31119d30c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.AF_VSOCK&quot;&gt;&lt;code&gt;AF_VSOCK&lt;/code&gt;&lt;/a&gt; allows communication between virtual machines and their hosts. The sockets are represented as a &lt;code&gt;(CID, port)&lt;/code&gt; tuple where the context ID or CID and port are integers.</source>
          <target state="translated">&lt;a href=&quot;#socket.AF_VSOCK&quot;&gt; &lt;code&gt;AF_VSOCK&lt;/code&gt; &lt;/a&gt; 는 가상 머신과 해당 호스트 간의 통신을 허용합니다. 소켓은컨텍스트 ID 또는 CID 및 포트가 정수인 &lt;code&gt;(CID, port)&lt;/code&gt; 튜플로표시됩니다.</target>
        </trans-unit>
        <trans-unit id="daeda219b4093cf36c54ab49773a0316a60238b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.CAN_ISOTP&quot;&gt;&lt;code&gt;CAN_ISOTP&lt;/code&gt;&lt;/a&gt; protocol require a tuple &lt;code&gt;(interface, rx_addr, tx_addr)&lt;/code&gt; where both additional parameters are unsigned long integer that represent a CAN identifier (standard or extended).</source>
          <target state="translated">&lt;a href=&quot;#socket.CAN_ISOTP&quot;&gt; &lt;code&gt;CAN_ISOTP&lt;/code&gt; &lt;/a&gt; 프로토콜에는 튜플 &lt;code&gt;(interface, rx_addr, tx_addr)&lt;/code&gt; 여기서 추가 매개 변수는 모두 CAN 식별자 (표준 또는 확장)를 나타내는 부호없는 긴 정수입니다.</target>
        </trans-unit>
        <trans-unit id="d81368a8816f9c864a70f1ea8b923854886b3731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.CAN_J1939&quot;&gt;&lt;code&gt;CAN_J1939&lt;/code&gt;&lt;/a&gt; protocol require a tuple &lt;code&gt;(interface, name, pgn, addr)&lt;/code&gt; where additional parameters are 64-bit unsigned integer representing the ECU name, a 32-bit unsigned integer representing the Parameter Group Number (PGN), and an 8-bit integer representing the address.</source>
          <target state="translated">&lt;a href=&quot;#socket.CAN_J1939&quot;&gt; &lt;code&gt;CAN_J1939&lt;/code&gt; &lt;/a&gt; protocol require a tuple &lt;code&gt;(interface, name, pgn, addr)&lt;/code&gt; where additional parameters are 64-bit unsigned integer representing the ECU name, a 32-bit unsigned integer representing the Parameter Group Number (PGN), and an 8-bit integer representing the address.</target>
        </trans-unit>
        <trans-unit id="4555981aac888d8064b85928e7057a5a30929885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; releases the resource associated with a connection but does not necessarily close the connection immediately. If you want to close the connection in a timely fashion, call &lt;a href=&quot;#socket.socket.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; before &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 는 연결과 관련된 리소스를 해제하지만 연결을 즉시 닫을 필요는 없습니다. 당신이 적시, 통화에서 연결을 종료하려면&lt;a href=&quot;#socket.socket.shutdown&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; 전에&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0b3798ee4adcdb1ff22be84405043716a135eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.inet_aton&quot;&gt;&lt;code&gt;inet_aton()&lt;/code&gt;&lt;/a&gt; also accepts strings with less than three dots; see the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/inet(3)&quot;&gt;inet(3)&lt;/a&gt;&lt;/em&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;#socket.inet_aton&quot;&gt; &lt;code&gt;inet_aton()&lt;/code&gt; &lt;/a&gt; 은 점이 3 개 미만인 문자열도 허용합니다. 자세한 내용은 Unix 매뉴얼 페이지&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/inet(3)&quot;&gt; inet (3)&lt;/a&gt;&lt;/em&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b83b69f99b76afd962ebe3f980446195ec548d4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socket.inet_aton&quot;&gt;&lt;code&gt;inet_aton()&lt;/code&gt;&lt;/a&gt; does not support IPv6, and &lt;a href=&quot;#socket.inet_pton&quot;&gt;&lt;code&gt;inet_pton()&lt;/code&gt;&lt;/a&gt; should be used instead for IPv4/v6 dual stack support.</source>
          <target state="translated">&lt;a href=&quot;#socket.inet_aton&quot;&gt; &lt;code&gt;inet_aton()&lt;/code&gt; &lt;/a&gt; 은 IPv6을 지원하지 않으며IPv4 / v6 이중 스택 지원에는&lt;a href=&quot;#socket.inet_pton&quot;&gt; &lt;code&gt;inet_pton()&lt;/code&gt; &lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4468c17e5aad9246f127395aa50efe7285433607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; and the Forking classes mentioned below are only available on POSIX platforms that support &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;아래 언급 된 ForkingMixIn 및 Forking 클래스는&lt;a href=&quot;os#os.fork&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt; 를 지원하는 POSIX 플랫폼에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecb9d5741e28da479ddcb559ca577ec91c8e080a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="translated">&lt;a href=&quot;#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt; 예</target>
        </trans-unit>
        <trans-unit id="ef35ed04c2ba20709a8cbe8b828f51a7e8689f9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#socketserver.UDPServer&quot;&gt;&lt;code&gt;socketserver.UDPServer&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="translated">&lt;a href=&quot;#socketserver.UDPServer&quot;&gt; &lt;code&gt;socketserver.UDPServer&lt;/code&gt; &lt;/a&gt; 예</target>
        </trans-unit>
        <trans-unit id="500adec272551052886927afb687622dcc282e8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; will only execute a single SQL statement. If you try to execute more than one statement with it, it will raise a &lt;a href=&quot;#sqlite3.Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt;&lt;code&gt;executescript()&lt;/code&gt;&lt;/a&gt; if you want to execute multiple SQL statements with one call.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt; 는 단일 SQL 문만 실행합니다. 둘 이상의 명령문을 실행하려고하면&lt;a href=&quot;#sqlite3.Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 한 번의 호출로 여러 SQL 문을 실행하려면&lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt; &lt;code&gt;executescript()&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d912f14f42845f5ed5939626e6bcab414a412edf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.CertificateError&quot;&gt;&lt;code&gt;CertificateError&lt;/code&gt;&lt;/a&gt; is raised on failure. On success, the function returns nothing:</source>
          <target state="translated">&lt;a href=&quot;#ssl.CertificateError&quot;&gt; &lt;code&gt;CertificateError&lt;/code&gt; &lt;/a&gt;실패하면 CertificateError 가 발생합니다. 성공하면이 함수는 아무것도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a363091ed3a0c343a9355acfac17655444da9137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; disables SSLv2 with &lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt;&lt;code&gt;OP_NO_SSLv2&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 는 기본적으로&lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt; &lt;code&gt;OP_NO_SSLv2&lt;/code&gt; &lt;/a&gt; 와 함께 SSLv2를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9ab012b2fd560cb8431d30aaa3116233ca627965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; disables SSLv3 with &lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt;&lt;code&gt;OP_NO_SSLv3&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 는 기본적으로&lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt; &lt;code&gt;OP_NO_SSLv3&lt;/code&gt; &lt;/a&gt; 과 함께 SSLv3을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="fddd79a227ff4772a3e20a8c06c5b16ccaef5d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; objects have the following methods and attributes:</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 메서드와 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="24b88f74ce90237f0241f86f6764920c18eeeb95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt; ignores the env vars &lt;code id=&quot;index-20&quot;&gt;SSL_CERT_FILE&lt;/code&gt; and &lt;code id=&quot;index-21&quot;&gt;SSL_CERT_PATH&lt;/code&gt; although &lt;a href=&quot;#ssl.get_default_verify_paths&quot;&gt;&lt;code&gt;get_default_verify_paths()&lt;/code&gt;&lt;/a&gt; still reports them.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt; &lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#ssl.get_default_verify_paths&quot;&gt; &lt;code&gt;get_default_verify_paths()&lt;/code&gt; &lt;/a&gt; 여전히보고하지만 SSLContext.set_default_verify_paths () 는 env vars &lt;code id=&quot;index-20&quot;&gt;SSL_CERT_FILE&lt;/code&gt; 및 &lt;code id=&quot;index-21&quot;&gt;SSL_CERT_PATH&lt;/code&gt; 를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a574cb247da6c848a0e8680fb36161dfd87e789e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; lets the &lt;a href=&quot;#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module choose security settings for a given purpose.</source>
          <target state="translated">&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt; 사용하면&lt;a href=&quot;#module-ssl&quot;&gt; &lt;code&gt;ssl&lt;/code&gt; &lt;/a&gt; 모듈이 주어진 목적에 맞는 보안 설정을 선택할수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aeefa5b8aece28f43d9c91ecf59d92821f6b87f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#stat.S_IFDOOR&quot;&gt;&lt;code&gt;S_IFDOOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stat.S_IFPORT&quot;&gt;&lt;code&gt;S_IFPORT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#stat.S_IFWHT&quot;&gt;&lt;code&gt;S_IFWHT&lt;/code&gt;&lt;/a&gt; are defined as 0 when the platform does not have support for the file types.</source>
          <target state="translated">&lt;a href=&quot;#stat.S_IFDOOR&quot;&gt; &lt;code&gt;S_IFDOOR&lt;/code&gt; &lt;/a&gt;플랫폼이 파일 유형을 지원하지 않는 경우 S_IFDOOR ,&lt;a href=&quot;#stat.S_IFPORT&quot;&gt; &lt;code&gt;S_IFPORT&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#stat.S_IFWHT&quot;&gt; &lt;code&gt;S_IFWHT&lt;/code&gt; &lt;/a&gt; 는 0으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3ba051df58e0aa39f169badd0319744a281f9d1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; Examples and Recipes</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt; 예제 및 레시피</target>
        </trans-unit>
        <trans-unit id="88b77ad2c2c61244324656a30b29b20ad1032498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; is a tool for creating and manipulating normal distributions of a &lt;a href=&quot;http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm&quot;&gt;random variable&lt;/a&gt;. It is a class that treats the mean and standard deviation of data measurements as a single entity.</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;http://www.stat.yale.edu/Courses/1997-98/101/ranvar.htm&quot;&gt; 랜덤 변수&lt;/a&gt; 의 정규 분포를 만들고 조작하는 도구입니다. 데이터 측정의 평균 및 표준 편차를 단일 엔터티로 취급하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e8d1d40c41e873fdede1540fc2b9462266d0229d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; readily solves classic probability problems.</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt; 는 고전적인 확률 문제를 쉽게 해결합니다.</target>
        </trans-unit>
        <trans-unit id="e696cbed7025faab670b06aafd40eaa03bea6c3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;data&lt;/em&gt; is empty, or any element is less than zero.</source>
          <target state="translated">&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;데이터&lt;/em&gt; 가 비어 있거나 요소가 0보다 작은경우 StatisticsError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7af3a5cb3d5bd8fdc1548bd993fbe937e4254d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#string.Formatter.format_field&quot;&gt;&lt;code&gt;format_field()&lt;/code&gt;&lt;/a&gt; simply calls the global &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; built-in. The method is provided so that subclasses can override it.</source>
          <target state="translated">&lt;a href=&quot;#string.Formatter.format_field&quot;&gt; &lt;code&gt;format_field()&lt;/code&gt; &lt;/a&gt; 단순히 전역&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 내장을호출합니다. 서브 클래스가이를 대체 할 수 있도록 메소드가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7f0fec6869a80fbc2ff0b2991405fd5edb803410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; instances also provide one public data attribute:</source>
          <target state="translated">&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt; 인스턴스는 하나의 공개 데이터 속성도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="940b112799693aa091efe5c2944b8f0629ddc078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; raises an exception if the execution fails.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;실행이 실패하면 Popen 에서 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="706495cb51ad10b7e6dcefd3a0bbe585021a10d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; returns a tuple &lt;code&gt;(stdout_data, stderr_data)&lt;/code&gt;. The data will be strings if streams were opened in text mode; otherwise, bytes.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(stdout_data, stderr_data)&lt;/code&gt; () 은 튜플 (stdout_data, stderr_data)을 반환합니다. 스트림이 텍스트 모드에서 열린 경우 데이터는 문자열이됩니다. 그렇지 않으면 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="122da96940b819ad71840fd8f473352a4c07b3df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.SW_HIDE&quot;&gt;&lt;code&gt;SW_HIDE&lt;/code&gt;&lt;/a&gt; is provided for this attribute. It is used when &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; is called with &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.SW_HIDE&quot;&gt; &lt;code&gt;SW_HIDE&lt;/code&gt; &lt;/a&gt;이 속성에는 SW_HIDE 가 제공됩니다. &lt;code&gt;shell=True&lt;/code&gt; &lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt; 을 호출할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4db7b5563bddfaa3e1947bbe11dc2d2dc8bfaa2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subprocess.check_call&quot;&gt;&lt;code&gt;check_call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; if the called process returns a non-zero return code.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.check_call&quot;&gt; &lt;code&gt;check_call()&lt;/code&gt; &lt;/a&gt;호출 된 프로세스가 0이 아닌 리턴 코드를 리턴하면 check_call () 및&lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2a1349b96e1a415a02d044cf2f8f41b2309ee804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.audit&quot;&gt;&lt;code&gt;sys.audit()&lt;/code&gt;&lt;/a&gt; will call the existing auditing hooks, passing the event name and arguments, and will re-raise the first exception from any hook. In general, if an exception is raised, it should not be handled and the process should be terminated as quickly as possible. This allows hook implementations to decide how to respond to particular events: they can merely log the event or abort the operation by raising an exception.</source>
          <target state="translated">&lt;a href=&quot;#sys.audit&quot;&gt; &lt;code&gt;sys.audit()&lt;/code&gt; &lt;/a&gt; will call the existing auditing hooks, passing the event name and arguments, and will re-raise the first exception from any hook. In general, if an exception is raised, it should not be handled and the process should be terminated as quickly as possible. This allows hook implementations to decide how to respond to particular events: they can merely log the event or abort the operation by raising an exception.</target>
        </trans-unit>
        <trans-unit id="bb8edd6fba6e426acb927a85d3406d6da0d95e02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.getsizeof&quot;&gt;&lt;code&gt;getsizeof()&lt;/code&gt;&lt;/a&gt; calls the object&amp;rsquo;s &lt;code&gt;__sizeof__&lt;/code&gt; method and adds an additional garbage collector overhead if the object is managed by the garbage collector.</source>
          <target state="translated">&lt;a href=&quot;#sys.getsizeof&quot;&gt; &lt;code&gt;getsizeof()&lt;/code&gt; &lt;/a&gt; 는 객체의 &lt;code&gt;__sizeof__&lt;/code&gt; 메소드를호출하고 객체가가비지 수집기에 의해 관리되는 경우 추가 가비지 수집기 오버 헤드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5bada06f56a551b35e2ce6385d5232b2510cf21f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; may contain additional attributes specific to the Python implementation. These non-standard attributes must start with an underscore, and are not described here. Regardless of its contents, &lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; will not change during a run of the interpreter, nor between implementation versions. (It may change between Python language versions, however.) See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;#sys.implementation&quot;&gt; &lt;code&gt;sys.implementation&lt;/code&gt; &lt;/a&gt; 에는 Python 구현과 관련된 추가 속성이 포함될 수 있습니다. 이러한 비표준 속성은 밑줄로 시작해야하며 여기에서는 설명하지 않습니다. 내용에 관계없이&lt;a href=&quot;#sys.implementation&quot;&gt; &lt;code&gt;sys.implementation&lt;/code&gt; &lt;/a&gt; 은 인터프리터 실행 중이나 구현 버전간에 변경되지 않습니다. (그러나 파이썬 언어 버전간에 변경 될 수 있습니다.) 자세한 내용은&lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt; PEP 421&lt;/strong&gt;&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ad67032335db7d5342005dcfaf7b0160ef7c8e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; may contain additional attributes specific to the Python implementation. These non-standard attributes must start with an underscore, and are not described here. Regardless of its contents, &lt;a href=&quot;#sys.implementation&quot;&gt;&lt;code&gt;sys.implementation&lt;/code&gt;&lt;/a&gt; will not change during a run of the interpreter, nor between implementation versions. (It may change between Python language versions, however.) See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;#sys.implementation&quot;&gt; &lt;code&gt;sys.implementation&lt;/code&gt; &lt;/a&gt; may contain additional attributes specific to the Python implementation. These non-standard attributes must start with an underscore, and are not described here. Regardless of its contents, &lt;a href=&quot;#sys.implementation&quot;&gt; &lt;code&gt;sys.implementation&lt;/code&gt; &lt;/a&gt; will not change during a run of the interpreter, nor between implementation versions. (It may change between Python language versions, however.) See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="e7de13218b91537f2c6c4d790f44e6b8c5437e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; can be overridden to control how unraisable exceptions are handled.</source>
          <target state="translated">&lt;a href=&quot;#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt; 수없는 예외 처리 방법을 제어하기 위해 sys.unraisablehook () 을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af1d955951e8ed9ee08abe63aeab4b8ed5676ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sysconfig.get_path&quot;&gt;&lt;code&gt;get_path()&lt;/code&gt;&lt;/a&gt; will use the variables returned by &lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt;&lt;code&gt;get_config_vars()&lt;/code&gt;&lt;/a&gt; to expand the path. All variables have default values for each platform so one may call this function and get the default value.</source>
          <target state="translated">&lt;a href=&quot;#sysconfig.get_path&quot;&gt; &lt;code&gt;get_path()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#sysconfig.get_config_vars&quot;&gt; &lt;code&gt;get_config_vars()&lt;/code&gt; &lt;/a&gt; 에의해 반환 된 변수를 사용하여 경로를 확장합니다. 모든 변수에는 각 플랫폼마다 기본값이 있으므로이 함수를 호출하여 기본값을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d12486f37f39ef9b62e0ec9f82c4ddf11a30c6bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects are returned by &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s methods &lt;code&gt;getmember()&lt;/code&gt;, &lt;code&gt;getmembers()&lt;/code&gt; and &lt;code&gt;gettarinfo()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt; 의 메소드 &lt;code&gt;getmember()&lt;/code&gt; , &lt;code&gt;getmembers()&lt;/code&gt; 및 &lt;code&gt;gettarinfo()&lt;/code&gt; 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cb55801a480fe43ef65e87eb2ea1141dfa319f38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#telnetlib.Telnet&quot;&gt; &lt;code&gt;Telnet&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a4ddaa72fdbe6763df11bd6eb0148ffa0ddcaa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; represents a connection to a Telnet server. The instance is initially not connected by default; the &lt;a href=&quot;#telnetlib.Telnet.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method must be used to establish a connection. Alternatively, the host name and optional port number can be passed to the constructor too, in which case the connection to the server will be established before the constructor returns. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used).</source>
          <target state="translated">&lt;a href=&quot;#telnetlib.Telnet&quot;&gt; &lt;code&gt;Telnet&lt;/code&gt; &lt;/a&gt; 은 Telnet 서버에 대한 연결을 나타냅니다. 기본적으로 인스턴스는 연결되어 있지 않습니다. &lt;a href=&quot;#telnetlib.Telnet.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 메소드는 연결을 설정하는 데 사용되어야합니다. 또는 호스트 이름과 선택적 포트 번호를 생성자에게 전달할 수도 있습니다.이 경우 생성자가 리턴하기 전에 서버에 대한 연결이 설정됩니다. 선택적&lt;em&gt; timeout&lt;/em&gt; 매개 변수는 연결 시도와 같은 작업을 차단하기위한 시간 초과를 초 단위로 지정합니다 (지정하지 않으면 전역 기본 시간 초과 설정이 사용됨).</target>
        </trans-unit>
        <trans-unit id="32a950b5d45deba59e2257be170323cfc4be4ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; returns the absolute pathname of the new directory.</source>
          <target state="translated">&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt; 는 새 디렉토리의 절대 경로 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="204450194fe0a0879687e8f716faee890f99f825" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; returns a tuple containing an OS-level handle to an open file (as would be returned by &lt;a href=&quot;os#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt;) and the absolute pathname of that file, in that order.</source>
          <target state="translated">&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt; 는 OS 레벨 핸들을 포함하는 튜플을 열린 파일 (&lt;a href=&quot;os#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt; 의해 리턴되는 것처럼)과 해당 파일의 절대 경로 이름 순서로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3644feaacb0db8a325c4cae968d2b57e75a7133b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; also provides some public methods, analogous to the module-level convenience functions:</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 는 또한 모듈 수준의 편의 기능과 유사한 몇 가지 공용 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8dcb29a86249de3b71fe79b833a3d3611c080ef6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.TextWrapper.fix_sentence_endings&quot;&gt;&lt;code&gt;fix_sentence_endings&lt;/code&gt;&lt;/a&gt; is false by default.</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper.fix_sentence_endings&quot;&gt; &lt;code&gt;fix_sentence_endings&lt;/code&gt; &lt;/a&gt; 는 기본적으로 false입니다.</target>
        </trans-unit>
        <trans-unit id="4f194a88a823d4ddabeea7a79c92ed31909b22e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#textwrap.shorten&quot;&gt;&lt;code&gt;shorten()&lt;/code&gt;&lt;/a&gt; work by creating a &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; instance and calling a single method on it. That instance is not reused, so for applications that process many text strings using &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt;, it may be more efficient to create your own &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#textwrap.wrap&quot;&gt; &lt;code&gt;wrap()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#textwrap.shorten&quot;&gt; &lt;code&gt;shorten()&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 인스턴스를 만들고단일 메서드를 호출하여작동합니다. 해당 인스턴스는 재사용되지 않으므로&lt;a href=&quot;#textwrap.wrap&quot;&gt; &lt;code&gt;wrap()&lt;/code&gt; &lt;/a&gt; 및 / 또는&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt; 사용하여 많은 텍스트 문자열을 처리하는 응용 프로그램의 경우 고유 한&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 객체를 만드는 것이 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5c820fa9b0a4eea9964d4d4e2ccb16a93813437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; Example</source>
          <target state="translated">&lt;a href=&quot;#threading.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt; 예</target>
        </trans-unit>
        <trans-unit id="21040c589805e61376662f0b5d2307182d021287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; raises a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if an attempt is made to join the current thread as that would cause a deadlock. It is also an error to &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; a thread before it has been started and attempts to do so raise the same exception.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;현재 스레드에 교착 상태가 발생하여 조인하려고 시도하면 join () 이&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다. 스레드가 시작되기 전에&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; 하는것은 오류이며 그렇게하려고 시도하면 동일한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="092ffcc867124292606acdefca0b00036e878f8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; can be overridden to control how uncaught exceptions raised by &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;Thread.run()&lt;/code&gt;&lt;/a&gt; are handled.</source>
          <target state="translated">&lt;a href=&quot;#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; &lt;/a&gt; 을 재정 의하여&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;Thread.run()&lt;/code&gt; &lt;/a&gt; 의해 발생 된 포착되지 않은 예외를 처리하는 방법을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf6cd28a5a0c63cba18c27a28dbe983739921aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; in UTC</source>
          <target state="translated">&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt; (UTC)</target>
        </trans-unit>
        <trans-unit id="499177cbfe226da86b68335b6a2102c0993ff3a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; in local time</source>
          <target state="translated">&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;현지 시간으로 struct_time</target>
        </trans-unit>
        <trans-unit id="4a79ab5c71363eb7330679832a40c4be6175edcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#timeit.default_timer&quot;&gt;&lt;code&gt;default_timer()&lt;/code&gt;&lt;/a&gt; measurements can be affected by other programs running on the same machine, so the best thing to do when accurate timing is necessary is to repeat the timing a few times and use the best time. The &lt;a href=&quot;#cmdoption-timeit-r&quot;&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/a&gt; option is good for this; the default of 5 repetitions is probably enough in most cases. You can use &lt;a href=&quot;time#time.process_time&quot;&gt;&lt;code&gt;time.process_time()&lt;/code&gt;&lt;/a&gt; to measure CPU time.</source>
          <target state="translated">&lt;a href=&quot;#timeit.default_timer&quot;&gt; &lt;code&gt;default_timer()&lt;/code&gt; &lt;/a&gt; 측정은 동일한 머신에서 실행되는 다른 프로그램의 영향을받을 수 있으므로 정확한 타이밍이 필요할 때 가장 좋은 방법은 타이밍을 몇 번 반복하고 최상의 시간을 사용하는 것입니다. &lt;a href=&quot;#cmdoption-timeit-r&quot;&gt; &lt;code&gt;-r&lt;/code&gt; &lt;/a&gt; 옵션은이 좋다; 대부분의 경우 기본값 5 반복으로 충분합니다. &lt;a href=&quot;time#time.process_time&quot;&gt; &lt;code&gt;time.process_time()&lt;/code&gt; &lt;/a&gt; 을사용하여 CPU 시간을 측정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36483c16dad58a240b71d4de13de6100d9bba22e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; determines the source encoding of the file by looking for a UTF-8 BOM or encoding cookie, according to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 263&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt; PEP 263&lt;/strong&gt;&lt;/a&gt; 에 따라 UTF-8 BOM 또는 인코딩 쿠키를 찾아 파일의 소스 인코딩을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="32e27eebd3e0f021c8379d446c10899c852df14c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; needs to detect the encoding of source files it tokenizes. The function it uses to do this is available:</source>
          <target state="translated">&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt; 는 토큰 화 하는 소스 파일의 인코딩을 감지해야합니다. 이를 위해 사용되는 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f753f9f4b16ed0a6f315ee534717f61058687676" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects represent a single frame in a traceback.</source>
          <target state="translated">&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt; 객체는 역 추적에서 단일 프레임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="93ea3fa1a3162132489e4353c61b9bec90aa516c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; objects represent a call stack ready for formatting.</source>
          <target state="translated">&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; &lt;/a&gt; 객체는 서식을 지정할 준비가 된 호출 스택을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4eb25827b8bfff5bd018dca6ea2ef181f369f7be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traceback.TracebackException&quot;&gt;&lt;code&gt;TracebackException&lt;/code&gt;&lt;/a&gt; objects are created from actual exceptions to capture data for later printing in a lightweight fashion.</source>
          <target state="translated">&lt;a href=&quot;#traceback.TracebackException&quot;&gt; &lt;code&gt;TracebackException&lt;/code&gt; &lt;/a&gt; 객체는 실제 예외에서 만들어져 나중에 인쇄하기 위해 데이터를 간단한 방식으로 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="7cf701da5bf360d18a8cd35e66c424a7fe2be275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tracemalloc.Snapshot.compare_to&quot;&gt;&lt;code&gt;Snapshot.compare_to()&lt;/code&gt;&lt;/a&gt; returns a list of &lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt;&lt;code&gt;StatisticDiff&lt;/code&gt;&lt;/a&gt; instances. See also the &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.Snapshot.compare_to&quot;&gt; &lt;code&gt;Snapshot.compare_to()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt; &lt;code&gt;StatisticDiff&lt;/code&gt; &lt;/a&gt; 인스턴스목록을 반환합니다. &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt; &lt;code&gt;Statistic&lt;/code&gt; &lt;/a&gt; 클래스도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bfb1b2351f92af6ec8f941602270beb3677f5a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#tracemalloc.Snapshot.statistics&quot;&gt;&lt;code&gt;Snapshot.statistics()&lt;/code&gt;&lt;/a&gt; returns a list of &lt;a href=&quot;#tracemalloc.Statistic&quot;&gt;&lt;code&gt;Statistic&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.Snapshot.statistics&quot;&gt; &lt;code&gt;Snapshot.statistics()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#tracemalloc.Statistic&quot;&gt; &lt;code&gt;Statistic&lt;/code&gt; &lt;/a&gt; 인스턴스목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c781610b3c7168f18c4a30d30212aa3605516c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#turtle.RawTurtle&quot;&gt;&lt;code&gt;RawTurtle&lt;/code&gt;&lt;/a&gt; (alias: &lt;a href=&quot;#turtle.RawPen&quot;&gt;&lt;code&gt;RawPen&lt;/code&gt;&lt;/a&gt;) defines Turtle objects which draw on a &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt;. Its constructor needs a Canvas, ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know where to draw.</source>
          <target state="translated">&lt;a href=&quot;#turtle.RawTurtle&quot;&gt; &lt;code&gt;RawTurtle&lt;/code&gt; &lt;/a&gt; (별칭 :&lt;a href=&quot;#turtle.RawPen&quot;&gt; &lt;code&gt;RawPen&lt;/code&gt; 은&lt;/a&gt; )는 무승부 거북이 객체 정의&lt;a href=&quot;#turtle.TurtleScreen&quot;&gt; &lt;code&gt;TurtleScreen&lt;/code&gt; 을&lt;/a&gt; . 생성자에는 Canvas, ScrolledCanvas 또는 TurtleScreen이 인수로 필요하므로 RawTurtle 객체는 그릴 위치를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbac0f775a48b3325cabe44cd5cc420539f9db2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; - The type to which the command-line argument should be converted.</source>
          <target state="translated">&lt;a href=&quot;#type&quot;&gt;type-&lt;/a&gt; 명령 줄 인수를 변환 할 형식입니다.</target>
        </trans-unit>
        <trans-unit id="0ed668dac454ab003b399b1d5941db1e44f20a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; is compatible with every type.</source>
          <target state="translated">&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt; 모든 유형과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="55fc766753426b52ad8dafb0f29d898a6f29daaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; accepts only types and cannot be further subscribed.</source>
          <target state="translated">&lt;a href=&quot;#typing.ClassVar&quot;&gt; &lt;code&gt;ClassVar&lt;/code&gt; &lt;/a&gt; 는 형식 만 허용하며 더 이상 구독 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9e1c9fcd2f95b68b52645b404f2b757f5871feb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; is not a class itself, and should not be used with &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt; does not change Python runtime behavior, but it can be used by third-party type checkers. For example, a type checker might flag the following code as an error:</source>
          <target state="translated">&lt;a href=&quot;#typing.ClassVar&quot;&gt; &lt;code&gt;ClassVar&lt;/code&gt; &lt;/a&gt; 는 클래스 자체가 아니며&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; &lt;/a&gt; 와 함께 사용해서는 안됩니다. &lt;a href=&quot;#typing.ClassVar&quot;&gt; &lt;code&gt;ClassVar&lt;/code&gt; &lt;/a&gt; 는 Python 런타임 동작을 변경하지 않지만 타사 유형 검사기에서 사용할 수 있습니다. 예를 들어, 유형 검사기는 다음 코드를 오류로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6958d37b99cb7eba1e3bdb9cf91b0381a91a92a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; is a special form.</source>
          <target state="translated">&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; is a special form.</target>
        </trans-unit>
        <trans-unit id="8962856b77e7adc3d35b0dffef1f66fbd2863d8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#typing.runtime_checkable&quot;&gt;&lt;code&gt;runtime_checkable()&lt;/code&gt;&lt;/a&gt; will check only the presence of the required methods, not their type signatures! For example, &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;builtins.complex&lt;/code&gt;&lt;/a&gt; implements &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt;, therefore it passes an &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt; check against &lt;a href=&quot;#typing.SupportsFloat&quot;&gt;&lt;code&gt;SupportsFloat&lt;/code&gt;&lt;/a&gt;. However, the &lt;code&gt;complex.__float__&lt;/code&gt; method exists only to raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; with a more informative message.</source>
          <target state="translated">&lt;a href=&quot;#typing.runtime_checkable&quot;&gt; &lt;code&gt;runtime_checkable()&lt;/code&gt; &lt;/a&gt; will check only the presence of the required methods, not their type signatures! For example, &lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;builtins.complex&lt;/code&gt; &lt;/a&gt; implements &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;, therefore it passes an &lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; &lt;/a&gt; check against &lt;a href=&quot;#typing.SupportsFloat&quot;&gt; &lt;code&gt;SupportsFloat&lt;/code&gt; &lt;/a&gt;. However, the &lt;code&gt;complex.__float__&lt;/code&gt; method exists only to raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; with a more informative message.</target>
        </trans-unit>
        <trans-unit id="d52619c641d90d1cb6d82e7c0a9861bb3f35ec1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances provide three groups of methods: one group used to run the test, another used by the test implementation to check conditions and report failures, and some inquiry methods allowing information about the test itself to be gathered.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 인스턴스는 테스트를 실행하는 데 사용되는 하나의 그룹, 조건을 확인하고 실패를보고하기 위해 테스트 구현에 사용되는 그룹, 테스트 자체에 대한 정보를 수집 할 수있는 일부 조회 방법의 세 가지 그룹을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e5b863c836afc53015d6e4d1c48801ab3aa00be1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt;&lt;code&gt;doCleanups()&lt;/code&gt;&lt;/a&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt; &lt;code&gt;doCleanups()&lt;/code&gt; &lt;/a&gt; 는 한 번에 하나씩 정리 함수 스택에서 메소드를 팝하므로 언제든지 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="396e8a331df05b907d4abec9e85b8751e2bc2d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;TestCase.setUp()&lt;/code&gt;&lt;/a&gt; can also skip the test. This is useful when a resource that needs to be set up is not available.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;TestCase.setUp()&lt;/code&gt; &lt;/a&gt; 도 테스트를 건너 뛸 수 있습니다. 설정해야하는 리소스를 사용할 수없는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2975a64dcf528b003140ff17ce73fb696b25dd79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; objects have the following attributes:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cad58472689dc8d52f0e386d4e1ba242b6dc89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; objects have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt; 객체에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1a240994852fcc2a0e44e8ab29cbe94bd5f405f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; instances have the following attributes that will be of interest when inspecting the results of running a set of tests:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt; 인스턴스에는 일련의 테스트 실행 결과를 검사 할 때 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="74adfc86d68fc44d0c1be075a7b1dee88e736195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; objects behave much like &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; objects, except they do not actually implement a test. Instead, they are used to aggregate tests into groups of tests that should be run together. Some additional methods are available to add tests to &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 객체는실제로 테스트를 구현하지 않는다는 점을 제외하면&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 객체와 매우 유사하게 작동합니다. 대신, 테스트를 함께 실행해야하는 테스트 그룹으로 집계하는 데 사용됩니다. &lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 인스턴스에 테스트를 추가 할 수있는 몇 가지 추가 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="03d3bbd9c5e9a5fcade8885bd2a0c27562c408f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; shares the following methods with &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 와 다음 방법을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="8772aef43cc0f37fba93d236c207bdb9f5e6813d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt;&lt;code&gt;doModuleCleanups()&lt;/code&gt;&lt;/a&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="translated">&lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt; &lt;code&gt;doModuleCleanups()&lt;/code&gt; &lt;/a&gt; 는 한 번에 하나씩 정리 함수 스택에서 메소드를 팝하므로 언제든지 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a91305de8507ac83c8c471b82c35e6114321f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.ANY&quot;&gt;&lt;code&gt;ANY&lt;/code&gt;&lt;/a&gt; can also be used in comparisons with call lists like &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.ANY&quot;&gt; &lt;code&gt;ANY&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt; 와 같은 통화 목록과 비교할 때 ANY를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1070df6710178f4b0f77f0512102c3c30b0d7041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt; is a module level variable that controls the way mock objects respond to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; (only for Python 2.6 or more recent). The default is &lt;code&gt;True&lt;/code&gt;, which uses the filtering described below, to only show useful members. If you dislike this filtering, or need to switch it off for diagnostic purposes, then set &lt;code&gt;mock.FILTER_DIR = False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt; &lt;code&gt;FILTER_DIR&lt;/code&gt; &lt;/a&gt; 은 모의 객체가&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt; 응답하는 방식을 제어하는 ​​모듈 수준 변수입니다(Python 2.6 이상에서만). 기본값은 &lt;code&gt;True&lt;/code&gt; 로 , 아래 설명 된 필터링을 사용하여 유용한 멤버 만 표시합니다. 이 필터링을 싫어하거나 진단 목적으로 필터링을 해제 &lt;code&gt;mock.FILTER_DIR = False&lt;/code&gt; 로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="45771aa6e516383e7facae95159d31f10254fe55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; with all the magic methods pre-created and ready to use. There are also non-callable variants, useful when you are mocking out objects that aren&amp;rsquo;t callable: &lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt;&lt;code&gt;NonCallableMock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.NonCallableMagicMock&quot;&gt;&lt;code&gt;NonCallableMagicMock&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 의 서브 클래스로, 모든 매직 메소드가 미리 만들어져 있으며 바로 사용할 수 있습니다. 호출 할 수없는 변형도 있습니다.&lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt; &lt;code&gt;NonCallableMock&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#unittest.mock.NonCallableMagicMock&quot;&gt; &lt;code&gt;NonCallableMagicMock&lt;/code&gt; &lt;/a&gt; 은 호출 할 수없는 객체를 모방 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2d3a70b5dc2ccf054e91009b1a3bd14c2f021006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; objects create all attributes and methods as you access them and store details of how they have been used. You can configure them, to specify return values or limit what attributes are available, and then make assertions about how they have been used:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt; 객체는 액세스 할 때 모든 속성 및 메소드를 작성하고 사용 방식에 대한 세부 사항을 저장합니다. 반환 값을 지정하거나 사용 가능한 속성을 제한 한 다음 사용 방법에 대한 어설 션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a02488f6e8b10e862669d2bc5a5389924d685e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; is a flexible mock object intended to replace the use of stubs and test doubles throughout your code. Mocks are callable and create attributes as new mocks when you access them &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. Accessing the same attribute will always return the same mock. Mocks record how you use them, allowing you to make assertions about what your code has done to them.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 은 코드 전체에서 스텁 및 테스트 더블 사용을 대체하기위한 유연한 모의 객체입니다. Mocks는 호출 가능하며 속성에 액세스 할 때 새로운 모의 속성을 작성합니다&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt; 1&lt;/a&gt; . 동일한 속성에 액세스하면 항상 동일한 모형을 반환합니다. Mocks는 사용 방법을 기록하여 코드가 수행 한 작업에 대한 어설 션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c0c1263a67dde9aa6856c27f4ba54d29d53c470" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; is a very powerful and flexible object, but it suffers from two flaws when used to mock out objects from a system under test. One of these flaws is specific to the &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; api and the other is a more general problem with using mock objects.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 은 매우 강력하고 유연한 객체이지만 테스트중인 시스템에서 객체를 조롱 할 때 두 가지 결함이 있습니다. 이러한 결함 중 하나는&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; API에만 해당되며다른 하나는 모의 객체 사용에 대한보다 일반적인 문제입니다.</target>
        </trans-unit>
        <trans-unit id="e81b9b64f712149a2fc14f8814283d97c14ca8c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; objects limit the results of &lt;code&gt;dir(some_mock)&lt;/code&gt; to useful results. For mocks with a &lt;em&gt;spec&lt;/em&gt; this includes all the permitted attributes for the mock.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;dir(some_mock)&lt;/code&gt; 결과를 유용한 결과로제한합니다. A를 망신 시켰를 들어&lt;em&gt; 사양&lt;/em&gt; 이 모의에 대한 모든 허용 된 속성이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a8e9bd32fac08624f8094f41598e8bbb405b756" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; supports mocking the Python protocol methods, also known as &amp;ldquo;magic methods&amp;rdquo;. This allows mock objects to replace containers or other objects that implement Python protocols.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 은 &quot;매직 메소드&quot;라고도하는 Python 프로토콜 메소드의 조롱을 지원합니다. 이를 통해 모의 객체가 컨테이너 또는 Python 프로토콜을 구현하는 다른 객체를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41b33ae3317f7b02d5615d0fdfb18dcc6900304c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/a&gt; is assignable to, this allows a mock to pass an &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; check without forcing you to use a spec:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;/a&gt; 는 할당할 수 있습니다. 이는 스펙을 사용하지 않고도mock이&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt; 검사를 통과하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="feb017efea255fad51674a9ff8fc9822b7eca1c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt;, along with members of the lists &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These are tuples, so they can be unpacked to get at the individual arguments and make more complex assertions. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;call_args&lt;/code&gt; _list&lt;/a&gt; 목록과 함께&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 객체입니다. 이들은 튜플이므로 개별 인수를 얻고 더 복잡한 주장을하기 위해 압축을 풀 수 있습니다. &lt;a href=&quot;#calls-as-tuples&quot;&gt;튜플로 호출을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="100629e9b36544f9fa9b7eefa4f64f414f141690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt; exists to make it easier to do configuration after the mock has been created.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt; &lt;code&gt;configure_mock()&lt;/code&gt; &lt;/a&gt; 은 mock을 만든 후 구성을 쉽게 수행 할 수 있도록하기 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a4b9e5d27f9ecaa4f70fa10d43daf8b009f94ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; records &lt;em&gt;all&lt;/em&gt; calls to the mock object, its methods, magic methods &lt;em&gt;and&lt;/em&gt; return value mocks.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt; 는 mock 객체에 대한&lt;em&gt; 모든&lt;/em&gt; 호출, 메서드, magic 메서드&lt;em&gt; 및&lt;/em&gt; 반환 값mock을기록&lt;em&gt; 합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cd540f3a2146ee0984c02aa2ce91fb317e1b2bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; can also be set in the constructor:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt; 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2fae1805cff59bcbfe7ee55bf4e989559348893" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; can be set in the constructor. Here&amp;rsquo;s an example that adds one to the value the mock is called with and returns it:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt; 는 생성자에서 설정할 수 있습니다. 다음은 mock이 호출 된 값에 1을 추가하여 반환하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="663c2e3c0ff9627cc3dba730eea5b775a750f1bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; is a helper object for making simpler assertions, for comparing with &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;call_args&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; can also be used with &lt;a href=&quot;#unittest.mock.Mock.assert_has_calls&quot;&gt;&lt;code&gt;assert_has_calls()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;call_args&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; &lt;/a&gt; 와 비교하기 위해 더 간단한 어설 션을 만들기위한 도우미 개체입니다. &lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#unittest.mock.Mock.assert_has_calls&quot;&gt; &lt;code&gt;assert_has_calls()&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d2ae0423814682b87547710444b28b0b712ed75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.call.call_list&quot;&gt;&lt;code&gt;call_list()&lt;/code&gt;&lt;/a&gt; can construct the sequence of calls from the same chained call:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.call.call_list&quot;&gt; &lt;code&gt;call_list()&lt;/code&gt; &lt;/a&gt; 는 동일한 체인 호출에서 호출 시퀀스를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7591a05fba8d531101c65b3635fc9abe95faeed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; also takes arbitrary keyword arguments that are passed to the constructor of the created mock.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt; 은 생성 된 모의 생성자에 전달되는 임의의 키워드 인수도 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a75d411d15d6369beb95474ab23024f0999d1aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; can also be used on classes, where it copies the signature of the &lt;code&gt;__init__&lt;/code&gt; method, and on callable objects where it copies the signature of the &lt;code&gt;__call__&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt; 은 클래스, &lt;code&gt;__init__&lt;/code&gt; 메소드의 서명을 복사하는 클래스및 &lt;code&gt;__call__&lt;/code&gt; 메소드의 서명을 복사하는 호출 가능한 객체에서도 사용할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="6e536645d600bf96e55624dadf411725a5b8f18c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; acts as a function decorator, class decorator or a context manager. Inside the body of the function or with statement, the &lt;em&gt;target&lt;/em&gt; is patched with a &lt;em&gt;new&lt;/em&gt; object. When the function/with statement exits the patch is undone.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 는 함수 데코레이터, 클래스 데코레이터 또는 컨텍스트 관리자 역할을합니다. 함수 본문 또는 with 문 내에서&lt;em&gt; 대상&lt;/em&gt; 은&lt;em&gt; 새&lt;/em&gt; 객체로패치됩니다. 함수 / with 문이 종료되면 패치가 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="90ab8f996fb547515f7de9ef664bb5e77f94aed9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; as function decorator, creating the mock for you and passing it into the decorated function:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;함수 데코레이터로 patch () 를 사용하여 모의 객체를 만들어 장식 된 함수에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="1f0846037ef272035b0013e9c5430db4d9119ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is straightforward to use. The key is to do the patching in the right namespace. See the section &lt;a href=&quot;#id6&quot;&gt;where to patch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 는 사용하기 간단합니다. 핵심은 올바른 네임 스페이스에서 패치를 수행하는 것입니다. &lt;a href=&quot;#id6&quot;&gt;패치&lt;/a&gt; 할 부분을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="18b43847c5c4fb273de1bd0ce36f4fcc48c8d70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; takes arbitrary keyword arguments. These will be passed to &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the patched object is asynchronous, to &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; otherwise or to &lt;em&gt;new_callable&lt;/em&gt; if specified.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; takes arbitrary keyword arguments. These will be passed to &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt; if the patched object is asynchronous, to &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt; otherwise or to &lt;em&gt;new_callable&lt;/em&gt; if specified.</target>
        </trans-unit>
        <trans-unit id="b4c3443ecfbe5bb0f10a00a71ac044d6cd6f17e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; takes arbitrary keyword arguments. These will be passed to the &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; (or &lt;em&gt;new_callable&lt;/em&gt;) on construction.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 는 임의의 키워드 인수를 사용합니다. 이것들은 생성시&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; (또는&lt;em&gt; new_callable&lt;/em&gt; )으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2f34f5a365abcef0937fe48a704dbda1595042bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; works by (temporarily) changing the object that a &lt;em&gt;name&lt;/em&gt; points to with another one. There can be many names pointing to any individual object, so for patching to work you must ensure that you patch the name used by the system under test.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 는&lt;em&gt; 이름이&lt;/em&gt; 가리키는객체를다른객체로 (임시로) 변경하여 작동합니다. 개별 객체를 가리키는 많은 이름이있을 수 있으므로 패치가 작동하려면 테스트중인 시스템에서 사용하는 이름을 패치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4812f25bf783824b19d944686ea522000811f442" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can also be called with arbitrary keyword arguments to set values in the dictionary.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; 를 임의의 키워드 인수와 함께 호출하여 사전에 값을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2c97c768d1ec73d9e7bee5487d96bde8c5ae9f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used as a context manager, decorator or class decorator:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; 는 컨텍스트 관리자, 데코레이터 또는 클래스 데코레이터로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de68701e185558e1855fc84debad7c83ea2b56d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used to add members to a dictionary, or simply let a test change a dictionary, and ensure the dictionary is restored when the test ends.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; 를 사용하여 사전에 멤버를 추가하거나 테스트에서 사전을 변경하도록하고 테스트가 끝나면 사전이 복원되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a520e94efcaa68c5b34b13cee601682af56b76f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used with dictionary like objects that aren&amp;rsquo;t actually dictionaries. At the very minimum they must support item getting, setting, deleting and either iteration or membership test. This corresponds to the magic methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and either &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; 는 실제로 사전이 아닌 객체와 같은 사전과 함께 사용할 수 있습니다. 최소한 아이템 가져 오기, 설정, 삭제 및 반복 또는 멤버쉽 테스트를 지원해야합니다. 이것은 매직 메소드&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f9b325aecf4ff99c69b8ce825340779b27c7ba7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; can be used with dictionary like objects that aren&amp;rsquo;t actually dictionaries. At the very minimum they must support item getting, setting, deleting and either iteration or membership test. This corresponds to the magic methods &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and either &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; can be used with dictionary like objects that aren&amp;rsquo;t actually dictionaries. At the very minimum they must support item getting, setting, deleting and either iteration or membership test. This corresponds to the magic methods &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt; and either &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3d10daa3909fd49335ba961995749c24a7d40cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; can be nested with other &lt;code&gt;patch&lt;/code&gt; decorators, but put arguments passed by keyword &lt;em&gt;after&lt;/em&gt; any of the standard arguments created by &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt; 은 다른 &lt;code&gt;patch&lt;/code&gt; 데코레이터와 중첩 될 수있지만&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 만든 표준 인수&lt;em&gt; 뒤에&lt;/em&gt; 키워드로 전달되는 인수를 넣습니다.</target>
        </trans-unit>
        <trans-unit id="cbee2b136c8ee11ef28521cab0b48a7e63e10ee2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; can be used as a decorator, class decorator or a context manager. The arguments &lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;spec_set&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt;, &lt;em&gt;autospec&lt;/em&gt; and &lt;em&gt;new_callable&lt;/em&gt; have the same meaning as for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. These arguments will be applied to &lt;em&gt;all&lt;/em&gt; patches done by &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt; 은 데코레이터, 클래스 데코레이터 또는 컨텍스트 관리자로 사용할 수 있습니다. 인수&lt;em&gt; 사양&lt;/em&gt; ,&lt;em&gt; spec_set&lt;/em&gt; ,&lt;em&gt; 생성&lt;/em&gt; ,&lt;em&gt; autospec&lt;/em&gt; 및&lt;em&gt; new_callable가&lt;/em&gt; 와 동일한 의미를 갖는다&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; . 이 인수는&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt; 의해 수행 된&lt;em&gt; 모든&lt;/em&gt; 패치에적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b44066751ec51f16d6f1c8b3e049e578741c8089" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; can be used as a decorator, class decorator or a context manager. Arguments &lt;em&gt;new&lt;/em&gt;, &lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt;, &lt;em&gt;spec_set&lt;/em&gt;, &lt;em&gt;autospec&lt;/em&gt; and &lt;em&gt;new_callable&lt;/em&gt; have the same meaning as for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. Like &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; takes arbitrary keyword arguments for configuring the mock object it creates.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt; &lt;code&gt;patch.object()&lt;/code&gt; &lt;/a&gt; 는 데코레이터, 클래스 데코레이터 또는 컨텍스트 관리자로 사용할 수 있습니다. 인수&lt;em&gt; 새&lt;/em&gt; ,&lt;em&gt; 사양&lt;/em&gt; ,&lt;em&gt; 생성&lt;/em&gt; ,&lt;em&gt; spec_set&lt;/em&gt; ,&lt;em&gt; autospec&lt;/em&gt; 및&lt;em&gt; new_callable가&lt;/em&gt; 와 동일한 의미를 갖는다&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; . 마찬가지로&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#unittest.mock.patch.object&quot;&gt; &lt;code&gt;patch.object()&lt;/code&gt; &lt;/a&gt; 이 생성 mock 객체를 구성하는 임의의 키워드 인수를 취합니다.</target>
        </trans-unit>
        <trans-unit id="f022ea08cb2d117df5b23e8975abc578364f3165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; objects provide a couple of methods that are directly useful, and others that are meant to be used by derived classes. These are intended for direct use:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 객체는 직접적으로 유용한 몇 가지 메소드와 파생 클래스에서 사용하기위한 메소드를 제공합니다. 이들은 직접 사용하기위한 것입니다 :</target>
        </trans-unit>
        <trans-unit id="774643659f15713b50270e9b3aca2678bdcc370b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.CacheFTPHandler&quot;&gt;&lt;code&gt;CacheFTPHandler&lt;/code&gt;&lt;/a&gt; objects are &lt;a href=&quot;#urllib.request.FTPHandler&quot;&gt;&lt;code&gt;FTPHandler&lt;/code&gt;&lt;/a&gt; objects with the following additional methods:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.CacheFTPHandler&quot;&gt; &lt;code&gt;CacheFTPHandler&lt;/code&gt; &lt;/a&gt; 객체는다음과 같은 추가 방법이있는&lt;a href=&quot;#urllib.request.FTPHandler&quot;&gt; &lt;code&gt;FTPHandler&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4a535bcfc12c945e86b2892350704a53a05e1861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; subclasses &lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; providing default handling for the following HTTP response codes: 301, 302, 303, 307 and 401. For the 30x response codes listed above, the &lt;em&gt;Location&lt;/em&gt; header is used to fetch the actual URL. For 401 response codes (authentication required), basic HTTP authentication is performed. For the 30x response codes, recursion is bounded by the value of the &lt;em&gt;maxtries&lt;/em&gt; attribute, which defaults to 10.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; 는&lt;/a&gt; 301, 302, 303, 307 및 401 HTTP 응답 코드에 대한 기본 처리를 제공하는&lt;a href=&quot;#urllib.request.URLopener&quot;&gt; &lt;code&gt;URLopener&lt;/code&gt; 를&lt;/a&gt; 서브 클래 싱합니다. 위에 나열된 30x 응답 코드의 경우&lt;em&gt; Location&lt;/em&gt; 헤더는 실제 URL을 가져 오는 데 사용됩니다. 401 응답 코드 (인증 필요)의 경우 기본 HTTP 인증이 수행됩니다. 30x 응답 코드의 경우 재귀는&lt;em&gt; maxtries&lt;/em&gt; 속성값에 의해 제한되며기본값은 10입니다.</target>
        </trans-unit>
        <trans-unit id="e3e8471a05d3d026cf09015fa1aa429915d55973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.HTTPCookieProcessor&quot;&gt;&lt;code&gt;HTTPCookieProcessor&lt;/code&gt;&lt;/a&gt; instances have one attribute:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.HTTPCookieProcessor&quot;&gt; &lt;code&gt;HTTPCookieProcessor&lt;/code&gt; &lt;/a&gt; 인스턴스에는 하나의 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed559984296391f26e5a1ce904bd270c6987aa9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; automatically adds a &lt;em&gt;User-Agent&lt;/em&gt; header to every &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;. To change this:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt; 는모든&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; 에&lt;/a&gt;&lt;em&gt; User-Agent&lt;/em&gt; 헤더를자동으로 추가합니다. 이것을 바꾸려면 :</target>
        </trans-unit>
        <trans-unit id="f58b7fb1c72f3291619b1a688cdd0884b0bf666b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb6ace86222e222a090b714518670c86d1d4f767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.URLopener&quot;&gt;&lt;code&gt;URLopener&lt;/code&gt;&lt;/a&gt; objects will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception if the server returns an error code.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.URLopener&quot;&gt; &lt;code&gt;URLopener&lt;/code&gt; &lt;/a&gt;서버가 오류 코드를 반환하면 URLopener 객체는&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f14ebd0dfa9a2626977213c49c7eed522460a140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.build_opener&quot;&gt;&lt;code&gt;build_opener()&lt;/code&gt;&lt;/a&gt; provides many handlers by default, including a &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt;. By default, &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; uses the environment variables named &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt;, where &lt;code&gt;&amp;lt;scheme&amp;gt;&lt;/code&gt; is the URL scheme involved. For example, the &lt;code id=&quot;index-9&quot;&gt;http_proxy&lt;/code&gt; environment variable is read to obtain the HTTP proxy&amp;rsquo;s URL.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.build_opener&quot;&gt; &lt;code&gt;build_opener()&lt;/code&gt; &lt;/a&gt; 는 기본적으로&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; 를&lt;/a&gt; 포함하여 많은 핸들러를 제공합니다. 기본적으로&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt; 환경 변수를 사용합니다. 여기서 &lt;code&gt;&amp;lt;scheme&amp;gt;&lt;/code&gt; 은 관련된 URL 체계입니다. 예를 들어,HTTP 프록시의 URL을 얻기위해 &lt;code id=&quot;index-9&quot;&gt;http_proxy&lt;/code&gt; 환경 변수를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5c5d0bfd1faf4d27738216cefc89fccc82b88abb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; will raise &lt;code&gt;ContentTooShortError&lt;/code&gt; when it detects that the amount of data available was less than the expected amount (which is the size reported by a &lt;em&gt;Content-Length&lt;/em&gt; header). This can occur, for example, when the download is interrupted.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt; 는사용 가능한 데이터 양이 예상 양 (&lt;em&gt; Content-Length&lt;/em&gt; 헤더에의해보고 된 크기)보다 작은 것을 감지하면 &lt;code&gt;ContentTooShortError&lt;/code&gt; 를 발생시킵니다. 예를 들어 다운로드가 중단 된 경우에 발생할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e90dbeecbb76ca306e20d120ff3ace90bb9a0ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#usage&quot;&gt;usage&lt;/a&gt; - The string describing the program usage (default: generated from arguments added to parser)</source>
          <target state="translated">&lt;a href=&quot;#usage&quot;&gt;usage-&lt;/a&gt; 프로그램 사용법을 설명하는 문자열 (기본값 : 파서에 추가 된 인수에서 생성됨)</target>
        </trans-unit>
        <trans-unit id="1d33b6de8f88a68c160ba4947cfb68c5691d1bc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#uu.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; may print a warning to standard error if the input was produced by an incorrect uuencoder and Python could recover from that error. Setting &lt;em&gt;quiet&lt;/em&gt; to a true value silences this warning.</source>
          <target state="translated">&lt;a href=&quot;#uu.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;잘못된 uuencoder에 의해 입력이 생성되고 Python이 해당 오류를 복구 할 수있는 경우 decode () 가 표준 오류에 대한 경고를 인쇄 할 수 있습니다. &lt;em&gt;quiet&lt;/em&gt; 를 true 값으로설정하면이 경고가 사라집니다.</target>
        </trans-unit>
        <trans-unit id="0616bf6444b2655989eafb676a65e1efdf3c4b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; instances have these read-only attributes:</source>
          <target state="translated">&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 읽기 전용 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffe451ebcda16ce05ea4b542972db2dea356080d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; use weak references in their implementation, setting up callback functions on the weak references that notify the weak dictionaries when a key or value has been reclaimed by garbage collection. &lt;a href=&quot;#weakref.WeakSet&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; interface, but keeps weak references to its elements, just like a &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="translated">&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; 는&lt;/a&gt; 키 값 또는 가비지 수집 회수되었을 때 약한 사전 통지 약한 참조에 콜백 함수를 설정하는, 구현에 약한 참조를 사용한다.&lt;a href=&quot;#weakref.WeakSet&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; 인터페이스를구현하지만&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 해당 요소에 대한 약한 참조를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="079e2fffe69a0bd470685477e9b191d251a7076f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; objects have an additional method that exposes the internal references directly. The references are not guaranteed to be &amp;ldquo;live&amp;rdquo; at the time they are used, so the result of calling the references needs to be checked before being used. This can be used to avoid creating references that will cause the garbage collector to keep the keys around longer than needed.</source>
          <target state="translated">&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 개체에는 내부 참조를 직접 노출시키는 추가 메서드가 있습니다. 참조는 참조 시점에 &quot;실시간&quot;으로 보장되지 않으므로 참조를 호출 한 결과를 사용하기 전에 확인해야합니다. 가비지 콜렉터가 키를 필요 이상으로 길게 유지하는 참조를 작성하지 않도록하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4182393b3b49f4cf83f24ab33d17c9ccffc0f127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt;&lt;code&gt;WeakValueDictionary&lt;/code&gt;&lt;/a&gt; objects have an additional method that has the same issues as the &lt;code&gt;keyrefs()&lt;/code&gt; method of &lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt;&lt;code&gt;WeakKeyDictionary&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#weakref.WeakValueDictionary&quot;&gt; &lt;code&gt;WeakValueDictionary&lt;/code&gt; &lt;/a&gt; 개체는 같은 문제가있는 부가적인 방법이 &lt;code&gt;keyrefs()&lt;/code&gt; 방법&lt;a href=&quot;#weakref.WeakKeyDictionary&quot;&gt; &lt;code&gt;WeakKeyDictionary&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="023b1cf0223528502668be84d525b9797f30d1e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; provides a straight forward way to register a cleanup function to be called when an object is garbage collected. This is simpler to use than setting up a callback function on a raw weak reference, since the module automatically ensures that the finalizer remains alive until the object is collected.</source>
          <target state="translated">&lt;a href=&quot;#weakref.finalize&quot;&gt; &lt;code&gt;finalize&lt;/code&gt; &lt;/a&gt; 는 객체가 가비지 수집 될 때 호출 될 정리 함수를 등록하는 간단한 방법을 제공합니다. 이 모듈은 원시 약한 참조에 콜백 함수를 설정하는 것보다 사용하기가 더 쉽습니다. 모듈은 객체가 수집 될 때까지 종료자가 활성 상태로 유지되도록하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="c58d6962edd07a341dc880d6d3eeafd661f0e75f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6106e13f000f4d13159099a26156c28b6318bced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; instances have only one method intended for external use:</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 인스턴스에는 외부 사용을위한 하나의 메소드 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68f4266cbecc28940401461aa9f8f4741ec407d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects also support &lt;code&gt;keys()&lt;/code&gt;, &lt;code&gt;values()&lt;/code&gt;, and &lt;code&gt;items()&lt;/code&gt; methods. The lists returned by &lt;code&gt;keys()&lt;/code&gt; and &lt;code&gt;items()&lt;/code&gt; can include the same key more than once if there is a multi-valued header. The &lt;code&gt;len()&lt;/code&gt; of a &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object is the same as the length of its &lt;code&gt;items()&lt;/code&gt;, which is the same as the length of the wrapped header list. In fact, the &lt;code&gt;items()&lt;/code&gt; method just returns a copy of the wrapped header list.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; 객체는 &lt;code&gt;keys()&lt;/code&gt; , &lt;code&gt;values()&lt;/code&gt; 및 &lt;code&gt;items()&lt;/code&gt; 메서드도 지원 합니다 .값이 여러 개인 헤더가있는 경우 &lt;code&gt;keys()&lt;/code&gt; 및 &lt;code&gt;items()&lt;/code&gt; 가반환 한 목록에는 동일한 키가 두 번 이상 포함될 수 있습니다.&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; 객체의 &lt;code&gt;len()&lt;/code&gt; 은 &lt;code&gt;items()&lt;/code&gt; 의 길이와 같으며, 이는 랩핑 된 헤더 목록의 길이와 같습니다. 실제로 &lt;code&gt;items()&lt;/code&gt; 메서드는 래핑 된 헤더 목록의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6510d49a294dc4b6e940f9107bb6fdc026bc3b63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects support typical mapping operations including &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;setdefault()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;. For each of these methods, the key is the header name (treated case-insensitively), and the value is the first value associated with that header name. Setting a header deletes any existing values for that header, then adds a new value at the end of the wrapped header list. Headers&amp;rsquo; existing order is generally maintained, with new headers added to the end of the wrapped list.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; 객체는&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;get()&lt;/code&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;setdefault()&lt;/code&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt; 등 일반적인 매핑 작업을 지원합니다. 이러한 각 방법에서 키는 헤더 이름 (대소 문자를 구분하지 않음)이고 값은 해당 헤더 이름과 연관된 첫 번째 값입니다. 헤더를 설정하면 해당 헤더에 대한 기존 값이 삭제되고 래핑 된 헤더 목록 끝에 새 값이 추가됩니다. 래핑 된 목록의 끝에 새 헤더가 추가되어 헤더의 기존 순서가 일반적으로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="739f6ed5c5cd6db18328d97f2c7ad33c9388fa65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects support typical mapping operations including &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;setdefault()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;. For each of these methods, the key is the header name (treated case-insensitively), and the value is the first value associated with that header name. Setting a header deletes any existing values for that header, then adds a new value at the end of the wrapped header list. Headers&amp;rsquo; existing order is generally maintained, with new headers added to the end of the wrapped list.</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt; objects support typical mapping operations including &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;, &lt;code&gt;get()&lt;/code&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;, &lt;code&gt;setdefault()&lt;/code&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;. For each of these methods, the key is the header name (treated case-insensitively), and the value is the first value associated with that header name. Setting a header deletes any existing values for that header, then adds a new value at the end of the wrapped header list. Headers&amp;rsquo; existing order is generally maintained, with new headers added to the end of the wrapped list.</target>
        </trans-unit>
        <trans-unit id="7d0f2a4edf89050072842608a52a98cdcba47804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt;&lt;code&gt;WSGIServer&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;http.server#http.server.HTTPServer&quot;&gt;&lt;code&gt;http.server.HTTPServer&lt;/code&gt;&lt;/a&gt;, so all of its methods (such as &lt;code&gt;serve_forever()&lt;/code&gt; and &lt;code&gt;handle_request()&lt;/code&gt;) are available. &lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt;&lt;code&gt;WSGIServer&lt;/code&gt;&lt;/a&gt; also provides these WSGI-specific methods:</source>
          <target state="translated">&lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt; &lt;code&gt;WSGIServer&lt;/code&gt; 는&lt;/a&gt; 의 서브&lt;a href=&quot;http.server#http.server.HTTPServer&quot;&gt; &lt;code&gt;http.server.HTTPServer&lt;/code&gt; &lt;/a&gt; 그래서 전체 (등의 방법으로, &lt;code&gt;serve_forever()&lt;/code&gt; 와 &lt;code&gt;handle_request()&lt;/code&gt; 사용할 수있다).&lt;a href=&quot;#wsgiref.simple_server.WSGIServer&quot;&gt; &lt;code&gt;WSGIServer&lt;/code&gt; &lt;/a&gt; 는 또한 다음과 같은 WSGI 고유 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ed64c4c41cca18fc208bbe4912e564502cd9112f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; instances have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer&quot;&gt; &lt;code&gt;Packer&lt;/code&gt; &lt;/a&gt; 인스턴스에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="36c3373e4db257c527e7b3b126f0792097658f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; is the class for packing data into XDR representation. The &lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt; class is instantiated with no arguments.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer&quot;&gt; &lt;code&gt;Packer&lt;/code&gt; &lt;/a&gt; 는 XDR 표현으로 데이터를 포장하는 클래스입니다. &lt;a href=&quot;#xdrlib.Packer&quot;&gt; &lt;code&gt;Packer&lt;/code&gt; &lt;/a&gt; 클래스는 인수없이 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="94448daf87b77d27727b14e8673c311b9a9ec95b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; has some useful methods that help iterate recursively over all the sub-tree below it (its children, their children, and so on). For example, &lt;a href=&quot;#xml.etree.ElementTree.Element.iter&quot;&gt;&lt;code&gt;Element.iter()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 에는 그 아래의 모든 하위 트리 (자식, 자식 등)를 반복적으로 반복하는 데 유용한 유용한 방법이 있습니다. 예를 들어&lt;a href=&quot;#xml.etree.ElementTree.Element.iter&quot;&gt; &lt;code&gt;Element.iter()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="79a2935e7a3eea6a28ee89759cb37954495751fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects also support the following sequence type methods for working with subelements: &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 객체는 또한 하위 요소 작업을위한 다음 시퀀스 유형 메소드를 지원합니다 :&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbba87a79c25d9383cf927b12610137910a48265" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects also support the following sequence type methods for working with subelements: &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt;&lt;code&gt;__delitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; objects also support the following sequence type methods for working with subelements: &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delitem__&quot;&gt; &lt;code&gt;__delitem__()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4a2fed83e0245745436047da7ec75073fc7daa1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt;&lt;code&gt;Element.findall()&lt;/code&gt;&lt;/a&gt; finds only elements with a tag which are direct children of the current element. &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt;&lt;code&gt;Element.find()&lt;/code&gt;&lt;/a&gt; finds the &lt;em&gt;first&lt;/em&gt; child with a particular tag, and &lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt;&lt;code&gt;Element.text&lt;/code&gt;&lt;/a&gt; accesses the element&amp;rsquo;s text content. &lt;a href=&quot;#xml.etree.ElementTree.Element.get&quot;&gt;&lt;code&gt;Element.get()&lt;/code&gt;&lt;/a&gt; accesses the element&amp;rsquo;s attributes:</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt; &lt;code&gt;Element.findall()&lt;/code&gt; &lt;/a&gt; 은 현재 요소의 직접적인 하위 요소 인 태그가있는 요소 만 찾습니다. &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt; &lt;code&gt;Element.find()&lt;/code&gt; &lt;/a&gt; 는특정 태그가있는&lt;em&gt; 첫 번째&lt;/em&gt; 자식을찾고&lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt; &lt;code&gt;Element.text&lt;/code&gt; &lt;/a&gt; 는 요소의 텍스트 내용에 액세스합니다. &lt;a href=&quot;#xml.etree.ElementTree.Element.get&quot;&gt; &lt;code&gt;Element.get()&lt;/code&gt; &lt;/a&gt; 은 요소의 속성에 액세스합니다 :</target>
        </trans-unit>
        <trans-unit id="8accc47fe19c8837485a5ed2817135fc939296b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; provides a simple way to build XML documents and write them to files. The &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;ElementTree.write()&lt;/code&gt;&lt;/a&gt; method serves this purpose.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt; 는 XML 문서를 작성하고 파일에 쓰는 간단한 방법을 제공합니다. &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;ElementTree.write()&lt;/code&gt; &lt;/a&gt; 메소드는이 목적을 제공.</target>
        </trans-unit>
        <trans-unit id="c7b7a303c8733d25c685bffe8dffc215252889a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt;&lt;code&gt;XMLParser.feed()&lt;/code&gt;&lt;/a&gt; calls &lt;em&gt;target&lt;/em&gt;&amp;rsquo;s &lt;code&gt;start(tag, attrs_dict)&lt;/code&gt; method for each opening tag, its &lt;code&gt;end(tag)&lt;/code&gt; method for each closing tag, and data is processed by method &lt;code&gt;data(data)&lt;/code&gt;. For further supported callback methods, see the &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; class. &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.close&quot;&gt;&lt;code&gt;XMLParser.close()&lt;/code&gt;&lt;/a&gt; calls &lt;em&gt;target&lt;/em&gt;&amp;rsquo;s method &lt;code&gt;close()&lt;/code&gt;. &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; can be used not only for building a tree structure. This is an example of counting the maximum depth of an XML file:</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt; &lt;code&gt;XMLParser.feed()&lt;/code&gt; &lt;/a&gt; 는각 시작 태그에 대해&lt;em&gt; target&lt;/em&gt; 의 &lt;code&gt;start(tag, attrs_dict)&lt;/code&gt; 메소드를호출하고 각 닫기 태그에 대한 &lt;code&gt;end(tag)&lt;/code&gt; 메소드를호출하며 데이터는 메소드 &lt;code&gt;data(data)&lt;/code&gt; 의해 처리됩니다. 추가로 지원되는 콜백 메소드는&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt; 클래스를참조하십시오.&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.close&quot;&gt; &lt;code&gt;XMLParser.close()&lt;/code&gt; &lt;/a&gt; 는&lt;em&gt; target&lt;/em&gt; 의 메소드 &lt;code&gt;close()&lt;/code&gt; ()를 호출합니다.&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 는 트리 구조를 구축 할뿐만 아니라 사용할 수 있습니다. 다음은 XML 파일의 최대 깊이를 계산하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="35771670c7968e831f1f2e7f2b3cab16312b9317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt; only guarantees that it has seen the &amp;ldquo;&amp;gt;&amp;rdquo; character of a starting tag when it emits a &amp;ldquo;start&amp;rdquo; event, so the attributes are defined, but the contents of the text and tail attributes are undefined at that point. The same applies to the element children; they may or may not be present.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt; 는 &quot;start&quot;이벤트를 생성 할 때 시작 태그의 &quot;&amp;gt;&quot;문자 만 보았으므로 속성이 정의되지만 text 및 tail 속성의 내용은 그 시점에서 정의되지 않습니다. 자식 요소에도 동일하게 적용됩니다. 그들은 존재하거나 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3ea71118340eb50b63af0d6f6a44b3aa5d5d850" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.fromstring&quot;&gt;&lt;code&gt;fromstring()&lt;/code&gt;&lt;/a&gt; parses XML from a string directly into an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, which is the root element of the parsed tree. Other parsing functions may create an &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt;. Check the documentation to be sure.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.fromstring&quot;&gt; &lt;code&gt;fromstring()&lt;/code&gt; &lt;/a&gt; 은 문자열에서 XML을구문 분석 된 트리의 루트 요소 인&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 로 직접구문 분석합니다. 다른 파싱 함수는&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; 를&lt;/a&gt; 생성 할 수 있습니다. 설명서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dcdd0c7df94719f39b947ee21424a80bdc5ae026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt;&lt;code&gt;iterparse()&lt;/code&gt;&lt;/a&gt; only guarantees that it has seen the &amp;ldquo;&amp;gt;&amp;rdquo; character of a starting tag when it emits a &amp;ldquo;start&amp;rdquo; event, so the attributes are defined, but the contents of the text and tail attributes are undefined at that point. The same applies to the element children; they may or may not be present.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt; &lt;code&gt;iterparse()&lt;/code&gt; &lt;/a&gt; 는 &quot;start&quot;이벤트를 생성 할 때 시작 태그의 &quot;&amp;gt;&quot;문자 만 보았으므로 속성이 정의되지만 text 및 tail 속성의 내용은 그 시점에서 정의되지 않습니다. 자식 요소에도 동일하게 적용됩니다. 그들은 존재하거나 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c08cdf2bb7ebc10b73391ad596a622de97fafbcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; exceptions have a number of interesting attributes:</source>
          <target state="translated">&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; &lt;/a&gt; 예외에는 여러 가지 흥미로운 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="02ffc13568539c0443909ab791d76c329512289f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xml.sax.handler.DTDHandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt; instances provide the following methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.handler.DTDHandler&quot;&gt; &lt;code&gt;DTDHandler&lt;/code&gt; &lt;/a&gt; 인스턴스는 다음 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d57da0c912cf7d44f5a322c743be850a864a8b1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; objects have the following methods, supported mainly for internal use by the marshalling/unmarshalling code:</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt; 객체에는 마샬링 / 비 정렬 화 코드에서 주로 내부 용으로 지원되는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ae73665fbf7177a8487eec29bd199c7a68796d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. Returned type depends on the value of the &lt;em&gt;use_builtin_types&lt;/em&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 또는 바이트 &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; . 리턴 된 유형은&lt;em&gt; use_builtin_types&lt;/em&gt; 플래그의 값에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9a5eb36e0a09437f23a56a109dde5ec95a53642c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#xmlrpc.client.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;. Returned type depends on values of &lt;em&gt;use_builtin_types&lt;/em&gt; and &lt;em&gt;use_datetime&lt;/em&gt; flags.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt; 입니다. 리턴되는 유형은&lt;em&gt; use_builtin_types&lt;/em&gt; 및&lt;em&gt; use_datetime&lt;/em&gt; 플래그의값에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="fe62926db4ffc65310a4cca30b284f055e30f90f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; in conjunction with the &lt;code&gt;*&lt;/code&gt; operator can be used to unzip a list:</source>
          <target state="translated">&lt;a href=&quot;#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;*&lt;/code&gt; 연산자와 함께 zip () 을사용하여 목록을 압축 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2beb52099c2fab77f7b87cc882f11661883b906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; should only be used with unequal length inputs when you don&amp;rsquo;t care about trailing, unmatched values from the longer iterables. If those values are important, use &lt;a href=&quot;itertools#itertools.zip_longest&quot;&gt;&lt;code&gt;itertools.zip_longest()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; 은 더 긴 반복 가능 항목의 후행, 일치하지 않는 값에 신경 쓰지 않을 때 길이가 다른 입력에만 사용해야합니다. 해당 값이 중요한 경우&lt;a href=&quot;itertools#itertools.zip_longest&quot;&gt; &lt;code&gt;itertools.zip_longest()&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="180a0d8e42ba203d6f3752a78b24223c47d2169a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 또한 컨텍스트 관리자이므로&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을지원합니다.</target>
        </trans-unit>
        <trans-unit id="bc6f3d3f0fc0b1258c2a96d719735cdf3dfff328" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; is also a context manager and therefore supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement:</target>
        </trans-unit>
        <trans-unit id="a8a52c74a77ba516989a6c40514fb59d2de56fa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;archivepath&lt;/em&gt; doesn&amp;rsquo;t point to a valid ZIP archive.</source>
          <target state="translated">&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;archivepath&lt;/em&gt; 가 유효한 ZIP 아카이브를 가리 키지않으면 ZipImportError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a76fb562f8e589b2c375fbc30682297c7815cd3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimporter&lt;/code&gt;&lt;/a&gt; is the class for importing ZIP files.</source>
          <target state="translated">&lt;a href=&quot;#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimporter&lt;/code&gt; &lt;/a&gt; 는 ZIP 파일을 가져 오기위한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6271a9a8d7cced27c4d8f38a90abeb2340d6b93c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt;&lt;code&gt;TZPATH&lt;/code&gt;&lt;/a&gt; can be configured using &lt;a href=&quot;#zoneinfo-data-environment-var&quot;&gt;an environment variable&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt; &lt;code&gt;TZPATH&lt;/code&gt; &lt;/a&gt; can be configured using &lt;a href=&quot;#zoneinfo-data-environment-var&quot;&gt;an environment variable&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b9f4d25efa87586ba8ca1dda22a1c8c3bd08a7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; is a concrete implementation of the &lt;a href=&quot;datetime#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; abstract base class, and is intended to be attached to &lt;code&gt;tzinfo&lt;/code&gt;, either via the constructor, the &lt;a href=&quot;datetime#datetime.datetime.replace&quot;&gt;&lt;code&gt;datetime.replace&lt;/code&gt;&lt;/a&gt; method or &lt;a href=&quot;datetime#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;datetime.astimezone&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt; &lt;code&gt;ZoneInfo&lt;/code&gt; &lt;/a&gt; is a concrete implementation of the &lt;a href=&quot;datetime#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt; abstract base class, and is intended to be attached to &lt;code&gt;tzinfo&lt;/code&gt; , either via the constructor, the &lt;a href=&quot;datetime#datetime.datetime.replace&quot;&gt; &lt;code&gt;datetime.replace&lt;/code&gt; &lt;/a&gt; method or &lt;a href=&quot;datetime#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;datetime.astimezone&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="f803cf85ce51af39a29c1afa5483d692174cd82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-call-later&quot;&gt;Using loop.call_later()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-call-later&quot;&gt;loop.call_later () 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4382475df6ce27527ec098a6ea16bd9cf85b32a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-lowlevel-helloworld&quot;&gt;Using asyncio.get_event_loop() and loop.run_forever()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-lowlevel-helloworld&quot;&gt;loop.run_forever asyncio.get_event_loop ()와 ()를 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="001cf52249293d604dcad1b637d25d708a651652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-unix-signals&quot;&gt;Using loop.add_signal_handler()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-unix-signals&quot;&gt;loop.add_signal_handler () 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="824da9fa83100f7495ab7d54bc0e20b355dc8c5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;Using add_reader() to watch an FD for read events&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;add_reader ()를 사용하여 FD에서 읽기 이벤트를 감시합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c78fb58d6480a53b06b7ca4099a0867d49e287ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; has the following limitations:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dac74d61e6af78593f40c0f301d8715ce404884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; has the following limitations:</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt; 에는 다음과 같은 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="395a2dcfc61497fa6266a7756883b6130208d02a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; cannot be used to monitor file I/O.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt; &lt;code&gt;loop.add_writer()&lt;/code&gt; &lt;/a&gt; 를 사용하여 파일 I / O를 모니터 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6bac952f62bd728b72560e8ac17b67325855e648" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; only accept socket handles (e.g. pipe file descriptors are not supported).</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt; &lt;code&gt;loop.add_writer()&lt;/code&gt; &lt;/a&gt; 는 소켓 핸들 만 허용합니다 (예 : 파이프 파일 디스크립터는 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="14de1f41df17fa2775bccbabde087d637a5ff102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_signal_handler&quot;&gt;&lt;code&gt;loop.add_signal_handler()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.remove_signal_handler&quot;&gt;&lt;code&gt;loop.remove_signal_handler()&lt;/code&gt;&lt;/a&gt; are not supported.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_signal_handler&quot;&gt; &lt;code&gt;loop.add_signal_handler()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-eventloop#asyncio.loop.remove_signal_handler&quot;&gt; &lt;code&gt;loop.remove_signal_handler()&lt;/code&gt; &lt;/a&gt; 는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bae8b992a8a05052c9b5975a700f0b10f2aea56c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt; are not supported. The &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt;&lt;code&gt;socket.AF_UNIX&lt;/code&gt;&lt;/a&gt; socket family is specific to Unix.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt; &lt;code&gt;loop.create_unix_server()&lt;/code&gt; &lt;/a&gt; 는 지원되지 않습니다. &lt;a href=&quot;socket#socket.AF_UNIX&quot;&gt; &lt;code&gt;socket.AF_UNIX&lt;/code&gt; 의&lt;/a&gt; 소켓 제품군은 유닉스에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="83cae06ec17351eb97a87bc1ae73a885d72617ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-future#asyncio-example-future&quot;&gt;Using asyncio.get_running_loop()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-future#asyncio-example-future&quot;&gt;asyncio.get_running_loop 사용 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="768fe6cb0ca08c99b9f7e24b7565c977121c594d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-future#asyncio-futures&quot;&gt;bridge&lt;/a&gt; callback-based libraries and code with async/await syntax.</source>
          <target state="translated">&lt;a href=&quot;asyncio-future#asyncio-futures&quot;&gt;&lt;/a&gt;콜백 기반 라이브러리 및 코드를 비동기 / 대기 구문으로 브리지</target>
        </trans-unit>
        <trans-unit id="1cf24824edffd41ee468f03aec77a5ff04605f9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-protocol#asyncio-example-subprocess-proto&quot;&gt;Using loop.subprocess_exec()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-protocol#asyncio-example-subprocess-proto&quot;&gt;loop.subprocess_exec () 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abb830d9a8f3b0456dbc972ba387ea99484de15d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-queue#asyncio-example-queue-dist&quot;&gt;Using asyncio.Queue to distribute workload between several Tasks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-queue#asyncio-example-queue-dist&quot;&gt;asyncio.Queue를 사용하여 여러 작업간에 작업 부하를 분산시킵니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4622a9e590e89c5af14f7468d598df8eb874c37e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-stream#asyncio-example-stream&quot;&gt;Example TCP client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-example-stream&quot;&gt;TCP 클라이언트 예&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="646331441857d069327129d8e28d944a435cc066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-subprocess#asyncio-example-subprocess-shell&quot;&gt;Executing a shell command&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-subprocess#asyncio-example-subprocess-shell&quot;&gt;쉘 명령 실행&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e054c36bb8af1d29b9f9bd0c0845bbb4d268f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-subprocess#asyncio-subprocess&quot;&gt;Subprocesses&lt;/a&gt; are not supported, i.e. &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; methods are not implemented.</source>
          <target state="translated">&lt;a href=&quot;asyncio-subprocess#asyncio-subprocess&quot;&gt;&lt;/a&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt; 프로세스 는 지원되지 않습니다. 즉 loop.subprocess_exec () 및 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt; 메소드는 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e5ea641f6a93d6793f719e5642f77b49f2353f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-sync#asyncio-example-sync-event&quot;&gt;Using asyncio.Event&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-sync#asyncio-example-sync-event&quot;&gt;asyncio.Event 사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1cb6bf22e5d25a1e9a29a17318b265dc3c1c7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-sync#asyncio-sync&quot;&gt;synchronize&lt;/a&gt; concurrent code;</source>
          <target state="translated">&lt;a href=&quot;asyncio-sync#asyncio-sync&quot;&gt;&lt;/a&gt;동시 코드 동기화 ;</target>
        </trans-unit>
        <trans-unit id="5b6487c7a376185610e905a0cc77c9bd65a93f8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-gather&quot;&gt;Using asyncio.gather() to run things in parallel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio-example-gather&quot;&gt;asyncio.gather ()를 사용하여 병렬로 작업을 실행&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="58aefb43a6caff14da5c3fbf0af4c7a5c2a6b00f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;Using asyncio.sleep()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio-example-sleep&quot;&gt;asyncio.sleep 사용 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f093e23dc875d921ba8e4ecd7d30fc3aa9c2548f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;Cancellation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;Cancellation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5911fb451596fe2583ddfab9ac852b7973cc497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;Handling CancelledError to run code on cancellation request&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio-example-task-cancel&quot;&gt;CancelledError 취급 취소 요청에 코드를 실행합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de7dd14925222b1b5e5566c003547171d03ef22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#asyncio-example-waitfor&quot;&gt;Using asyncio.wait_for() to enforce a timeout&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio-example-waitfor&quot;&gt;asyncio.wait_for ()를 사용하여 시간 초과를 시행합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50940aab3132e582ec1339b8e17fd14ef21833a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;run Python coroutines&lt;/a&gt; concurrently and have full control over their execution;</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#coroutine&quot;&gt;파이썬 코 루틴을&lt;/a&gt; 동시에 실행하고 실행을 완전히 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c1007a89acb3d662afe718aae4fd3f90c7e1f5e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base64#base64.encodebytes&quot;&gt;&lt;code&gt;base64.encodebytes()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;base64#base64.decodebytes&quot;&gt;&lt;code&gt;base64.decodebytes()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;base64#base64.encodebytes&quot;&gt; &lt;code&gt;base64.encodebytes()&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;base64#base64.decodebytes&quot;&gt; &lt;code&gt;base64.decodebytes()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11c14b23232f1d0f96b0f9172fabd91e8b16dd86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binascii#binascii.b2a_hex&quot;&gt;&lt;code&gt;binascii.b2a_hex()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;binascii#binascii.a2b_hex&quot;&gt;&lt;code&gt;binascii.a2b_hex()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;binascii#binascii.b2a_hex&quot;&gt; &lt;code&gt;binascii.b2a_hex()&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;binascii#binascii.a2b_hex&quot;&gt; &lt;code&gt;binascii.a2b_hex()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8a57bb02aa94b7be52ec51d1866a76db68aabb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bz2#bz2.compress&quot;&gt;&lt;code&gt;bz2.compress()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;bz2#bz2.decompress&quot;&gt;&lt;code&gt;bz2.decompress()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bz2#bz2.compress&quot;&gt; &lt;code&gt;bz2.compress()&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;bz2#bz2.decompress&quot;&gt; &lt;code&gt;bz2.decompress()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e870d074016687fa38674ca721bc561d65567a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collections#collections.deque&quot;&gt;&lt;code&gt;collections.deque&lt;/code&gt;&lt;/a&gt; is an alternative implementation of unbounded queues with fast atomic &lt;a href=&quot;collections#collections.deque.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collections#collections.deque.popleft&quot;&gt;&lt;code&gt;popleft()&lt;/code&gt;&lt;/a&gt; operations that do not require locking and also support indexing.</source>
          <target state="translated">&lt;a href=&quot;collections#collections.deque&quot;&gt; &lt;code&gt;collections.deque&lt;/code&gt; &lt;/a&gt; 는 빠른 원자&lt;a href=&quot;collections#collections.deque.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;collections#collections.deque.popleft&quot;&gt; &lt;code&gt;popleft()&lt;/code&gt; &lt;/a&gt; 작업을 사용하여 잠금을 요구하지 않고 인덱싱을 지원하는 언 바운드 큐의 대체 구현입니다.</target>
        </trans-unit>
        <trans-unit id="8e84a254d4cf802de588977033b62bf2476e4ac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;concurrent.futures#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; &amp;ndash; Launching parallel tasks</source>
          <target state="translated">&lt;a href=&quot;concurrent.futures#module-concurrent.futures&quot;&gt; &lt;code&gt;concurrent.futures&lt;/code&gt; &lt;/a&gt; &amp;ndash; 병렬 작업 시작</target>
        </trans-unit>
        <trans-unit id="bb9f5cee78dc0ca16dae45b64757244c4193a1ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;: Autodetect the file format</source>
          <target state="translated">&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; : 파일 형식 자동 감지</target>
        </trans-unit>
        <trans-unit id="9e613bb273245a070f711e7e9d2b1e0fc69b6cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; if a transaction is active (there are uncommitted changes), &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; otherwise. Read-only attribute.</source>
          <target state="translated">&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;트랜잭션이 활성화되어 있으면 (커밋되지 않은 변경 사항이있는 경우) True 이고그렇지 않으면&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; 입니다. 읽기 전용 속성</target>
        </trans-unit>
        <trans-unit id="58a6295c3f6d833ac0b402445a642fdc2e057d32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ctypes#ctypes._CData.from_buffer&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ctypes#ctypes._CData.from_buffer_copy&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ctypes#ctypes._CData.from_buffer&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ctypes#ctypes._CData.from_buffer_copy&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="714f00aabf7fe67cb40561e605acbb5940409708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;. Returned type only.</source>
          <target state="translated">&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt; . 반환 된 유형 만.</target>
        </trans-unit>
        <trans-unit id="4456e38fe6912f6f5ff8e42d7d6ca3695184f960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of ALERT_DESCRIPTION_* constants.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt; * 상수의 enum.IntEnum 컬렉션.</target>
        </trans-unit>
        <trans-unit id="f934805abd13c3978f5d561c2a7eeb7d4e2f9038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of CERT_* constants.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt; * 상수의 enum.IntEnum 컬렉션.</target>
        </trans-unit>
        <trans-unit id="4d1d94cc49f0420c6a56b05c782fa8af653df72e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of SSL and TLS versions for &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt;&lt;code&gt;SSLContext.minimum_version&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;SSLContext.maximum_version&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt; &lt;code&gt;SSLContext.minimum_version&lt;/code&gt; 에&lt;/a&gt; 대한 SSL 및 TLS 버전의 enum.IntEnum 콜렉션.</target>
        </trans-unit>
        <trans-unit id="669e5758a4213417d5d77828094b5a4009ebe301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;enum.IntEnum&lt;/code&gt;&lt;/a&gt; collection of SSL_ERROR_* constants.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;enum.IntEnum&lt;/code&gt; &lt;/a&gt; * 상수의 enum.IntEnum 컬렉션.</target>
        </trans-unit>
        <trans-unit id="41851f2907a12af631ac0c184be83690b70909d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collection of OP_* constants.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt; * 상수의 enum.IntFlag 수집.</target>
        </trans-unit>
        <trans-unit id="ed8eaa3e99923c1810e96abf72bcdb7fe4b238be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt; collection of VERIFY_* constants.</source>
          <target state="translated">&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt; * 상수의 enum.IntFlag 컬렉션.</target>
        </trans-unit>
        <trans-unit id="c146cc6b96738219658c6beb7d40ebdf133eec46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; &amp;ndash; If a failure occurred when traversing the object hierarchy within the imported package to get to the desired object.</source>
          <target state="translated">&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt; &amp;ndash; If a failure occurred when traversing the object hierarchy within the imported package to get to the desired object.</target>
        </trans-unit>
        <trans-unit id="01a02a025cb0436114d42086106f0dbd8aca135c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is now raised if the file opened in exclusive creation mode (&lt;code&gt;'x'&lt;/code&gt;) already exists.</source>
          <target state="translated">&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;배타적 작성 모드 ( &lt;code&gt;'x'&lt;/code&gt; )로열린 파일이이미 존재하면 FileExistsError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ea4d72576748b2c69944d8dd1622bf4fd32600d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; used to be raised, it is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생했지만 이제는&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="9f348562cfae5f3e57286b8a390839469072888c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; &amp;ndash; if an import failed when it shouldn&amp;rsquo;t have.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; &amp;ndash; if an import failed when it shouldn&amp;rsquo;t have.</target>
        </trans-unit>
        <trans-unit id="07a672ada1a6fd2b16ffada848a6267c6863a313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; is raised if &lt;strong&gt;name&lt;/strong&gt; is a relative module name but &lt;strong&gt;package&lt;/strong&gt; is a false value (e.g. &lt;code&gt;None&lt;/code&gt; or the empty string). &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; is also raised a relative name would escape its containing package (e.g. requesting &lt;code&gt;..bacon&lt;/code&gt; from within the &lt;code&gt;spam&lt;/code&gt; package).</source>
          <target state="translated">&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; is raised if &lt;strong&gt;name&lt;/strong&gt; is a relative module name but &lt;strong&gt;package&lt;/strong&gt; is a false value (e.g. &lt;code&gt;None&lt;/code&gt; or the empty string). &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; is also raised a relative name would escape its containing package (e.g. requesting &lt;code&gt;..bacon&lt;/code&gt; from within the &lt;code&gt;spam&lt;/code&gt; package).</target>
        </trans-unit>
        <trans-unit id="ce19862bf8f65bf27de1883bf0be9308367c87a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised when the function is called by an unprivileged user.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;권한이없는 사용자가 함수를 호출하면 OSError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="32136607a78775c73cf05fc43a3144d00fc1a3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;func&lt;/em&gt; is not a Python function or method.</source>
          <target state="translated">&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;&lt;em&gt;func&lt;/em&gt; 가 Python 함수 또는 메소드가 아닌경우 TypeError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ae5cf09b7ed295be8a5aebc407b0f78291304357" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if a field without a default value follows a field with a default value. This is true either when this occurs in a single class, or as a result of class inheritance.</source>
          <target state="translated">&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;기본값이없는 필드가 기본값이있는 필드 뒤에 오는 경우 TypeError 가 발생합니다. 이는 단일 클래스에서 발생하거나 클래스 상속의 결과로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0d6c9d22175bceb44b484a5daf2f39480fb6a71c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; &amp;ndash; if &lt;em&gt;name&lt;/em&gt; isn&amp;rsquo;t in a recognised format.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; &amp;ndash; if &lt;em&gt;name&lt;/em&gt; isn&amp;rsquo;t in a recognised format.</target>
        </trans-unit>
        <trans-unit id="f0fa359bd0fd15291a6e5d7889adc1c99ae50003" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;strong&gt;name&lt;/strong&gt; is a relative module name but package is a false value (e.g. &lt;code&gt;None&lt;/code&gt; or the empty string). &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is also raised a relative name would escape its containing package (e.g. requesting &lt;code&gt;..bacon&lt;/code&gt; from within the &lt;code&gt;spam&lt;/code&gt; package).</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;name&lt;/strong&gt; 이 상대 모듈 이름이지만 package가 잘못된 값이면 (예 : &lt;code&gt;None&lt;/code&gt; 또는 빈 문자열) ValueError 가 발생합니다. &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 는 상대 이름이 포함 된 패키지를 이스케이프합니다 (예 : &lt;code&gt;spam&lt;/code&gt; 패키지내에서 &lt;code&gt;..bacon&lt;/code&gt; 요청).</target>
        </trans-unit>
        <trans-unit id="0431313001db21d4250a1b3db743db1727a1a838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if a cycle is encountered.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;사이클이 발생하면 ValueError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="12835bcbede4ec0dccc6a597bab1b6c7c7c68fcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the date_string and format can&amp;rsquo;t be parsed by &lt;a href=&quot;time#time.strptime&quot;&gt;&lt;code&gt;time.strptime()&lt;/code&gt;&lt;/a&gt; or if it returns a value which isn&amp;rsquo;t a time tuple. For a complete list of formatting directives, see &lt;a href=&quot;#strftime-strptime-behavior&quot;&gt;strftime() and strptime() Behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;date_string 및 형식을&lt;a href=&quot;time#time.strptime&quot;&gt; &lt;code&gt;time.strptime()&lt;/code&gt; &lt;/a&gt; 으로 구문 분석 할 수 없거나시간 튜플이 아닌 값을 리턴하는경우 ValueError 가 발생합니다. 형식 지정 지시문의 전체 목록은&lt;a href=&quot;#strftime-strptime-behavior&quot;&gt; strftime () 및 strptime () 동작을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d58c763f8205fdc2fffa29feccdb4f7f7e8c18e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised unless &lt;code&gt;1 &amp;lt;= ordinal &amp;lt;=
date.max.toordinal()&lt;/code&gt;. For any date &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;date.fromordinal(d.toordinal()) == d&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;1 &amp;lt;= ordinal &amp;lt;= date.max.toordinal()&lt;/code&gt; 아니면 ValueError 가 발생합니다. 날짜&lt;em&gt; d&lt;/em&gt; 에 대해 &lt;code&gt;date.fromordinal(d.toordinal()) == d&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1fbb0c1725c07b368f81d57b070a705ca7635778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised when you call an &lt;code&gt;stdcall&lt;/code&gt; function with the &lt;code&gt;cdecl&lt;/code&gt; calling convention, or vice versa:</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;cdecl&lt;/code&gt; 호출 규칙을사용하여 &lt;code&gt;stdcall&lt;/code&gt; 함수를호출하거나 그 반대의 경우 ValueError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="645c32ac108ed28339abea9f2594e4ab0551003d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised on an invalid &lt;em&gt;timespec&lt;/em&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;잘못된&lt;em&gt; timespec&lt;/em&gt; 인수에서 ValueError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b940dcf209d1f77cd6fe07c4db3e81426ab2b7c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised on an invalid &lt;em&gt;timespec&lt;/em&gt; argument:</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;잘못된&lt;em&gt; timespec&lt;/em&gt; 인수에서 ValueError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="39c82e9660b8a7ad8a47d1fb4e3054dfad1f8444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt; is raised when the second argument of a division or modulo operation is zero.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt; is raised when the second argument of a division or modulo operation is zero.</target>
        </trans-unit>
        <trans-unit id="6962b7bf7edf70ff09da2539b478d7fc3d662708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ftplib#ftplib.FTP.sendcmd&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ftplib#ftplib.FTP.voidcmd&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ftplib#ftplib.FTP.sendcmd&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;ftplib#ftplib.FTP.voidcmd&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8075ef70f9eb264b280db46d032610c2d351e16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#eval&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;functions#exec&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;functions#eval&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;functions#exec&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4c40508d612fdad7b26cb1ab01a3065461255de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Values get the &lt;code&gt;&amp;lt;double&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; . 값은 &lt;code&gt;&amp;lt;double&amp;gt;&lt;/code&gt; 태그를얻습니다.</target>
        </trans-unit>
        <trans-unit id="3267765ac77dd0accb7ea77fe3ec926afbd1adb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; in range from -2147483648 to 2147483647. Values get the &lt;code&gt;&amp;lt;int&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 범위는 -2147483648에서 2147483647입니다. 값은 &lt;code&gt;&amp;lt;int&amp;gt;&lt;/code&gt; 태그를가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4b7b658d52d2cc1bd6627b800fab54f766aec2c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions#open&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;io#io.open&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.open&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;functions#open&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;io#io.open&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.open&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b298d06e6d8252bf848b5b0970945a4cc8020622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; can be used to pass parameters to the callback, e.g.:</source>
          <target state="translated">&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt; 을 사용하여 매개 변수를 콜백에 전달할 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="6b9b5515aa963251b4764d99df672394fcf81b6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glob#glob.glob&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;glob#glob.iglob&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;glob#glob.glob&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;glob#glob.iglob&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdf50f9122d37569f4312713de92c18fefd41dd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html.entities#module-html.entities&quot;&gt;&lt;code&gt;html.entities&lt;/code&gt;&lt;/a&gt; &amp;ndash; HTML entity definitions</source>
          <target state="translated">&lt;a href=&quot;html.entities#module-html.entities&quot;&gt; &lt;code&gt;html.entities&lt;/code&gt; &lt;/a&gt; &amp;ndash; HTML 엔티티 정의</target>
        </trans-unit>
        <trans-unit id="115b29a1ea7549ff874c9cb13a6c7bcfe96d11f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html.parser#module-html.parser&quot;&gt;&lt;code&gt;html.parser&lt;/code&gt;&lt;/a&gt; &amp;ndash; HTML/XHTML parser with lenient parsing mode</source>
          <target state="translated">&lt;a href=&quot;html.parser#module-html.parser&quot;&gt; &lt;code&gt;html.parser&lt;/code&gt; &lt;/a&gt; &amp;ndash; 관대 한 구문 분석 모드가있는 HTML / XHTML 파서</target>
        </trans-unit>
        <trans-unit id="5de2b0e547b81de3681c3da11c6af31539f5e718" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; is a low-level HTTP protocol client; for high-level URL opening use &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt; 는 저수준 HTTP 프로토콜 클라이언트입니다. 높은 수준의 URL을 열려면&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="29184972921fadd9f0705d88ee4d903ea6b96e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; provides persistence of cookies</source>
          <target state="translated">&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt; 는 쿠키의 지속성을 제공합니다</target>
        </trans-unit>
        <trans-unit id="9668d5a692dcfafca80a9dc59fc1682c5e5b5a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; has utilities for implementing state management with cookies</source>
          <target state="translated">&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt; 는 쿠키로 상태 관리를 구현하기위한 유틸리티를 가지고 있습니다</target>
        </trans-unit>
        <trans-unit id="ebcc0447d020db0974d51d7ddee89ae7192b0b4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt; contains basic HTTP server classes based on &lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http.server#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt; 에는 socketserver를 기반으로하는 기본 HTTP 서버 클래스가 포함&lt;a href=&quot;socketserver#module-socketserver&quot;&gt; &lt;code&gt;socketserver&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59d345e2f9d43a6d7d1d7874c8dcb17b795386d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://json.org&quot;&gt;JSON (JavaScript Object Notation)&lt;/a&gt;, specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; (which obsoletes &lt;a href=&quot;https://tools.ietf.org/html/rfc4627.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt;) and by &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404&lt;/a&gt;, is a lightweight data interchange format inspired by &lt;a href=&quot;https://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; object literal syntax (although it is not a strict subset of JavaScript &lt;a href=&quot;#rfc-errata&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; ).</source>
          <target state="translated">&lt;a href=&quot;http://json.org&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; ( &lt;a href=&quot;https://tools.ietf.org/html/rfc4627.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt; 사용되지 않음 ) 및 &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404에&lt;/a&gt; 의해 지정된 JSON (JavaScript Object Notation) 은 &lt;a href=&quot;https://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; 객체 리터럴 구문에서 영감을 얻은 가벼운 데이터 교환 형식 입니다 (JavaScript &lt;a href=&quot;#rfc-errata&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 의 엄격한 하위 집합은 아니지만 ).</target>
        </trans-unit>
        <trans-unit id="9fd58734450b27fdefd41455444c9517ae04a472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://leoeditor.com/appendices.html#leoast-py&quot;&gt;leoAst.py&lt;/a&gt; unifies the token-based and parse-tree-based views of python programs by inserting two-way links between tokens and ast nodes.</source>
          <target state="translated">&lt;a href=&quot;http://leoeditor.com/appendices.html#leoast-py&quot;&gt;leoAst.py&lt;/a&gt; unifies the token-based and parse-tree-based views of python programs by inserting two-way links between tokens and ast nodes.</target>
        </trans-unit>
        <trans-unit id="93ec98965351e6c9ad3b351341e707f37dfc8878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Economics.ipynb&quot;&gt;Economics Simulation&lt;/a&gt; a simulation of a marketplace by &lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig&lt;/a&gt; that shows effective use of many of the tools and distributions provided by this module (gauss, uniform, sample, betavariate, choice, triangular, and randrange).</source>
          <target state="translated">&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Economics.ipynb&quot;&gt;경제성 &lt;/a&gt;&lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig&lt;/a&gt; 의 시장 시뮬레이션을 통해이 모듈에서 제공하는 많은 도구와 분포 (가우스, 균일, 샘플, 베타 변형, 선택, 삼각, 랜디 드)의 효과적인 사용을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f649f4ff0960caf220fa21e494dd01d617abf4c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Probability.ipynb&quot;&gt;A Concrete Introduction to Probability (using Python)&lt;/a&gt; a tutorial by &lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig&lt;/a&gt; covering the basics of probability theory, how to write simulations, and how to perform data analysis using Python.</source>
          <target state="translated">&lt;a href=&quot;http://nbviewer.jupyter.org/url/norvig.com/ipython/Probability.ipynb&quot;&gt;&lt;/a&gt;확률 이론 (Python 사용)에 대한 구체적인 소개 &lt;a href=&quot;http://norvig.com/bio.html&quot;&gt;Peter Norvig가 제공&lt;/a&gt; 하는 자습서 에서 확률 이론의 기초, 시뮬레이션 작성 방법 및 Python을 사용한 데이터 분석 수행 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2b7266197b7bdda6b6278bf5d5d927f429097447" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/TixIntro.htm&quot;&gt;Tix&lt;/a&gt; introduces over 40 widget classes to the &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; repertoire.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/TixIntro.htm&quot;&gt;Tix&lt;/a&gt; 는 &lt;a href=&quot;tkinter#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt; 레퍼토리에 40 개가 넘는 위젯 클래스를 소개 합니다.</target>
        </trans-unit>
        <trans-unit id="7516b181e52ff38172f82bded7fabc937cb14b97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/compound.htm&quot;&gt;Compound&lt;/a&gt; image types can be used to create images that consists of multiple horizontal lines; each line is composed of a series of items (texts, bitmaps, images or spaces) arranged from left to right. For example, a compound image can be used to display a bitmap and a text string simultaneously in a Tk &lt;code&gt;Button&lt;/code&gt; widget.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/compound.htm&quot;&gt;복합&lt;/a&gt; 이미지 유형을 사용하여 여러 가로줄로 구성된 이미지를 만들 수 있습니다. 각 줄은 왼쪽에서 오른쪽으로 배열 된 일련의 항목 (텍스트, 비트 맵, 이미지 또는 공백)으로 구성됩니다. 예를 들어, 복합 이미지를 사용하여 Tk &lt;code&gt;Button&lt;/code&gt; 위젯 에서 비트 맵과 텍스트 문자열을 동시에 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="811ec9dc861be3b8b21b2325ea95fe0a94548b78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/pixmap.htm&quot;&gt;pixmap&lt;/a&gt; capabilities to all &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; widgets to create color images from XPM files.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/pixmap.htm&quot;&gt;&lt;/a&gt;모든 &lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;tkinter#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt; 위젯에 대한 pixmap 기능 은 XPM 파일에서 컬러 이미지를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a4007d9ce17f3875fa1eb78b7162f73e63f47f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://udrepper.livejournal.com/20407.html&quot;&gt;Secure File Descriptor Handling&lt;/a&gt; for a more thorough explanation.</source>
          <target state="translated">&lt;a href=&quot;http://udrepper.livejournal.com/20407.html&quot;&gt;&lt;/a&gt;보다 철저한 설명을 위해 안전한 파일 디스크립터 처리</target>
        </trans-unit>
        <trans-unit id="daeec00adca03a1caba7dabe6dfe1ac94d668f69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm&quot;&gt;C++ multisets&lt;/a&gt; tutorial with examples.</source>
          <target state="translated">&lt;a href=&quot;http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm&quot;&gt;&lt;/a&gt;예제가 포함 된 C ++ 다중 세트 학습서.</target>
        </trans-unit>
        <trans-unit id="426248c6b6d788d7139392a0f723e425bc47d814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://allendowney.com/research/rand/downey07randfloat.pdf&quot;&gt;Generating Pseudo-random Floating-Point Values&lt;/a&gt; a paper by Allen B. Downey describing ways to generate more fine-grained floats than normally generated by &lt;a href=&quot;#random.random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://allendowney.com/research/rand/downey07randfloat.pdf&quot;&gt;Generating Pseudo-random Floating-Point Values&lt;/a&gt; a paper by Allen B. Downey describing ways to generate more fine-grained floats than normally generated by &lt;a href=&quot;#random.random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d0920bc5b72e83aaec7dc703eb42dc4ed85b9f49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://asttokens.readthedocs.io/en/latest/user-guide.html&quot;&gt;ASTTokens&lt;/a&gt; annotates Python ASTs with the positions of tokens and text in the source code that generated them. This is helpful for tools that make source code transformations.</source>
          <target state="translated">&lt;a href=&quot;https://asttokens.readthedocs.io/en/latest/user-guide.html&quot;&gt;ASTTokens&lt;/a&gt; annotates Python ASTs with the positions of tokens and text in the source code that generated them. This is helpful for tools that make source code transformations.</target>
        </trans-unit>
        <trans-unit id="4ae68be1a16dfd7298f1e2af4c501923996b640c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2&lt;/a&gt; is a cryptographic hash function defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7693.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7693&lt;/strong&gt;&lt;/a&gt; that comes in two flavors:</source>
          <target state="translated">&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2&lt;/a&gt; 는 &lt;a href=&quot;https://tools.ietf.org/html/rfc7693.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 7693에&lt;/strong&gt;&lt;/a&gt; 정의 된 암호화 해시 함수 로 두 가지 특징이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e492792ef99a2856866b2056e2e4cdaecb8792b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2&lt;/a&gt; was designed by &lt;em&gt;Jean-Philippe Aumasson&lt;/em&gt;, &lt;em&gt;Samuel Neves&lt;/em&gt;, &lt;em&gt;Zooko Wilcox-O&amp;rsquo;Hearn&lt;/em&gt;, and &lt;em&gt;Christian Winnerlein&lt;/em&gt; based on &lt;a href=&quot;https://en.wikipedia.org/wiki/NIST_hash_function_competition&quot;&gt;SHA-3&lt;/a&gt; finalist &lt;a href=&quot;https://131002.net/blake/&quot;&gt;BLAKE&lt;/a&gt; created by &lt;em&gt;Jean-Philippe Aumasson&lt;/em&gt;, &lt;em&gt;Luca Henzen&lt;/em&gt;, &lt;em&gt;Willi Meier&lt;/em&gt;, and &lt;em&gt;Raphael C.-W. Phan&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://blake2.net&quot;&gt;BLAKE2가&lt;/a&gt; 디자인 한 &lt;em&gt;장 - 필립 Aumasson&lt;/em&gt; , &lt;em&gt;사무엘 네 베스&lt;/em&gt; , &lt;em&gt;주코 윌콕스 오헌&lt;/em&gt; , 그리고 &lt;em&gt;기독교 Winnerlein&lt;/em&gt; 에 따라 &lt;a href=&quot;https://en.wikipedia.org/wiki/NIST_hash_function_competition&quot;&gt;SHA-3&lt;/a&gt; 결승전 &lt;a href=&quot;https://131002.net/blake/&quot;&gt;BLAKE&lt;/a&gt; 에 의해 생성 &lt;em&gt;장 - 필립 Aumasson&lt;/em&gt; , &lt;em&gt;루카 Henzen&lt;/em&gt; , &lt;em&gt;빌리 마이어&lt;/em&gt; , 그리고 &lt;em&gt;라파엘 C.-W. 판&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6af84567e300fad67a6ffce925f64225be70c8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576642/&quot;&gt;Persistent dictionary recipe&lt;/a&gt; with widely supported storage formats and having the speed of native dictionaries.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/576642/&quot;&gt;&lt;/a&gt;광범위하게 지원되는 저장소 형식을 사용하고 기본 사전 속도를 유지하는 영구 사전 레시피 .</target>
        </trans-unit>
        <trans-unit id="d2bf31840453821198b3fd9050afb927b9d279d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576694/&quot;&gt;OrderedSet recipe&lt;/a&gt; for an example built on &lt;a href=&quot;#collections.abc.MutableSet&quot;&gt;&lt;code&gt;MutableSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/576694/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#collections.abc.MutableSet&quot;&gt; &lt;code&gt;MutableSet&lt;/code&gt; 에&lt;/a&gt; 빌드 된 예제의 OrderedSet 레시피 .</target>
        </trans-unit>
        <trans-unit id="a7f2e170e1c6eef020d72d157729f3fae1438397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576707/&quot;&gt;Complementary-Multiply-with-Carry recipe&lt;/a&gt; for a compatible alternative random number generator with a long period and comparatively simple update operations.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/576707/&quot;&gt;&lt;/a&gt;오랜 기간 동안 비교적 간단한 업데이트 작업으로 호환 가능한 대체 난수 생성기를위한 보완-배수-레시피 레시피 .</target>
        </trans-unit>
        <trans-unit id="e989768cffd9aa89e93cb70b061fd4c205abe8b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/576729/&quot;&gt;Simple version control recipe&lt;/a&gt; for a small application built with &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/576729/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; 로&lt;/a&gt; 구축 된 소규모 응용 프로그램을위한 간단한 버전 제어 레시피 .</target>
        </trans-unit>
        <trans-unit id="b293944b0a48003504237b5e0ba44427f2e900b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://code.activestate.com/recipes/577197-sortedcollection/&quot;&gt;SortedCollection recipe&lt;/a&gt; that uses bisect to build a full-featured collection class with straight-forward search methods and support for a key-function. The keys are precomputed to save unnecessary calls to the key function during searches.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/577197-sortedcollection/&quot;&gt;&lt;/a&gt;bisect를 사용하여 간단한 검색 방법과 키 기능을 지원하는 완전한 기능을 갖춘 컬렉션 클래스를 만드는 SortedCollection 레시피 . 키는 검색 중에 키 기능에 대한 불필요한 호출을 저장하기 위해 사전 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="1ff5c06678bd530221734302f40a722d7c823434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/cpp/build/reference/dependents&quot;&gt;Microsoft DUMPBIN tool&lt;/a&gt; &amp;ndash; A tool to find DLL dependents.</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/cpp/build/reference/dependents&quot;&gt;Microsoft DUMPBIN tool&lt;/a&gt; &amp;ndash; A tool to find DLL dependents.</target>
        </trans-unit>
        <trans-unit id="b2b12b97444ff3f181934241a24aee131f8e61f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-ca/windows/desktop/FileIO/i-o-completion-ports&quot;&gt;MSDN documentation on I/O Completion Ports&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-ca/windows/desktop/FileIO/i-o-completion-ports&quot;&gt;I / O 완료 포트에 대한 MSDN 설명서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7308b1a71ce44238c883835b69541912e866520c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;sys#sys.addaudithook&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;sys#sys.addaudithook&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44ffd65846a4c07b8ad32560e66d4b5eeb630e71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;Coroutine&lt;/a&gt; objects and instances of the &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; ABC are all instances of this ABC.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;코 루틴&lt;/a&gt; 객체와 코 &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt; ABC의 인스턴스는 모두이 ABC의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="ffdd1d4475daf4b7bc2f43359bff32cb074dc24b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;Coroutines&lt;/a&gt; declared with the async/await syntax is the preferred way of writing asyncio applications. For example, the following snippet of code (requires Python 3.7+) prints &amp;ldquo;hello&amp;rdquo;, waits 1 second, and then prints &amp;ldquo;world&amp;rdquo;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;&lt;/a&gt;asyncio 응용 프로그램을 작성하는 기본 방법은 async / await 구문으로 선언 된 코 루틴 입니다. 예를 들어 다음 코드 조각 (Python 3.7 이상 필요)은 &quot;hello&quot;를 인쇄하고 1 초 후에 &quot;world&quot;를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="3c59505fbefcee5596b205e25804b614da6d2ab2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;File objects&lt;/a&gt; used by the interpreter for standard input, output and errors:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;&lt;/a&gt;표준 입력, 출력 및 오류에 대해 인터프리터가 사용하는 파일 객체 :</target>
        </trans-unit>
        <trans-unit id="b6e0c905bbfed96877a686e4805a7168afedf3fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;Finder&lt;/a&gt; for modules declared in the Windows registry. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; ABC.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;&lt;/a&gt;Windows 레지스트리에 선언 된 모듈의 파인더 이 클래스는 &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt; ABC를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="00f8cb5827dfec93268ca1b3c868794c0bbb7bfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;Loader&lt;/a&gt; that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;&lt;/a&gt;파이썬의 &quot;클래식&quot;임포트 알고리즘을 래핑하는 로더 .</target>
        </trans-unit>
        <trans-unit id="7cdec2262f26a8e5777ae482f587b0b5ed75b2a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Android.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : Android.</target>
        </trans-unit>
        <trans-unit id="f6fd53f69f2064a2721e7865050690de6e3aa27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: BSD, OSX.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : BSD, OSX.</target>
        </trans-unit>
        <trans-unit id="ff992ade8c505b85c4e78fc9d507d7b9700ae31e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD 9 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : FreeBSD 9 이상.</target>
        </trans-unit>
        <trans-unit id="a756b191daa16b064ab811633faa0b971233ffa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, NetBSD 7 or later, OpenBSD.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : FreeBSD, NetBSD 7 이상, OpenBSD.</target>
        </trans-unit>
        <trans-unit id="21e8fc99cbe4dcf8af3fc75db2e396f27c74ba51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, OpenBSD 5.5 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : FreeBSD, OpenBSD 5.5 이상.</target>
        </trans-unit>
        <trans-unit id="fffe6ff798202f2228fb5a0fcd0500b750f3af3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: LibreSSL ignores the environment vars &lt;code&gt;openssl_cafile_env&lt;/code&gt; and &lt;code&gt;openssl_capath_env&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : LibreSSL은 vars &lt;code&gt;openssl_cafile_env&lt;/code&gt; 및 &lt;code&gt;openssl_capath_env&lt;/code&gt; 환경을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="6e79de2e247d63d50299b918f6adbdf08db23fc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.2.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 2.2.</target>
        </trans-unit>
        <trans-unit id="2923f281aa7bfc33ca463c8c3ca5b5ac3ec27744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.25.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 2.6.25.</target>
        </trans-unit>
        <trans-unit id="83f45edd50e4820e28cabbf6b3d952b891028c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.27.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 2.6.27.</target>
        </trans-unit>
        <trans-unit id="c5979098c0b9c273f037197bd9e264c101b065c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.30.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 2.6.30.</target>
        </trans-unit>
        <trans-unit id="cb9e8c9b548a8f9b498a2a0df072af5ba331fad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.38.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 2.6.38.</target>
        </trans-unit>
        <trans-unit id="3fc14731b1100dbbe618e4c8aabe1271864644b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 3.6.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 3.6.</target>
        </trans-unit>
        <trans-unit id="6b3eb0168b9fa1d1ba83e421f2387fba4daab46c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.7.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 4.7.</target>
        </trans-unit>
        <trans-unit id="dbc2b8c768717045b5381569767d22f5df668450" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8 QEMU &amp;gt;= 2.8 ESX &amp;gt;= 4.0 ESX Workstation &amp;gt;= 6.5.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 4.8 QEMU&amp;gt; = 2.8 ESX&amp;gt; = 4.0 ESX Workstation&amp;gt; = 6.5.</target>
        </trans-unit>
        <trans-unit id="0e3e694f1bb5db045a99b22069681681731400c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux&amp;gt; = 4.8.</target>
        </trans-unit>
        <trans-unit id="a6a7788b894f535fbac3f0d8b59983187bc79f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.12 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.12 이상.</target>
        </trans-unit>
        <trans-unit id="8ba1102a00e9a029806a38b9e45ea8103f4f1d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.25 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.25 이상.</target>
        </trans-unit>
        <trans-unit id="b1a63073ca89729d461945180917c802c785c06c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.28 and newer, macOS 10.12 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.28 이상, macOS 10.12 이상</target>
        </trans-unit>
        <trans-unit id="c7e4d7ba1e3ac876ba78d05da316570bd4d6a48b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer. Using flags requires Linux 4.6 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.30 이상, FreeBSD 6.0 이상, OpenBSD 2.7 이상 플래그를 사용하려면 Linux 4.6 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c827b4e89fe7ea675dfd736e2237b192321c6179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer. Using flags requires Linux 4.7 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.30 이상, FreeBSD 6.0 이상, OpenBSD 2.7 이상 플래그를 사용하려면 Linux 4.7 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="df2b73c66c45926cc2aa118a7fa8373fef4c4a1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.36 or later with glibc 2.13 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : glibc 2.13 이상이 설치된 Linux 2.6.36 이상</target>
        </trans-unit>
        <trans-unit id="a3b2b6a38d76f5da5541cdc8b68d0fa4c3fdf8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.38, some algorithm types require more recent Kernels.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.38, 일부 알고리즘 유형에는 최신 커널이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c5e7019f74bb4ccbe0115f7300abc8206c7e031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.39 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.39 이상.</target>
        </trans-unit>
        <trans-unit id="21e4d39a8d9b53b678f5b72776799719f41f6923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.8 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 2.6.8 이상.</target>
        </trans-unit>
        <trans-unit id="5771062cc120a432002f474a150593f9425a1650" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 3.17 이상.</target>
        </trans-unit>
        <trans-unit id="a31b7679f5933f11fed10ace5f805ed55940f305" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : glibc 2.27 이상이 설치된 Linux 3.17 이상</target>
        </trans-unit>
        <trans-unit id="c28bade66e75b7cbebcd8f211d0a08c72255a3f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer. The &lt;code&gt;MFD_HUGE*&lt;/code&gt; flags are only available since Linux 4.14.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : glibc 2.27 이상이 설치된 Linux 3.17 이상 &lt;code&gt;MFD_HUGE*&lt;/code&gt; 플래그 리눅스 4.14 이후에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1edbbe380964bf2b997c9bf342575981dac7570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.14 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.14 이상</target>
        </trans-unit>
        <trans-unit id="9ea3c46ddfa87df266a9e0866c34b115d2f9f366" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.6 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.6 이상</target>
        </trans-unit>
        <trans-unit id="b4a372e8724f04b50a77dfb0333c62d830f17e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.7 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.7 이상</target>
        </trans-unit>
        <trans-unit id="8126d92e58b84df572a41dd478aa23bdd9cdf6d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux kernel &amp;gt;= 4.5 or glibc &amp;gt;= 2.27.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : Linux 커널&amp;gt; = 4.5 또는 glibc&amp;gt; = 2.27.</target>
        </trans-unit>
        <trans-unit id="dd3b4e7d5ba7a339b01d9afb0c1daaf35380665c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.0.2+.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : OpenSSL 1.0.2 이상.</target>
        </trans-unit>
        <trans-unit id="d05fe6d5b6554d440d5948888070e4ca11508229" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.1+.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : OpenSSL 1.1 이상.</target>
        </trans-unit>
        <trans-unit id="ec6587fb23d3cac05ba27535dc4dfc926b5e2a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: POSIX &amp;amp; Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : POSIX &amp;amp; Windows.</target>
        </trans-unit>
        <trans-unit id="858febadab1c14598784651ccc492fee8a74aa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Requires &lt;a href=&quot;#threading.get_native_id&quot;&gt;&lt;code&gt;get_native_id()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#threading.get_native_id&quot;&gt; &lt;code&gt;get_native_id()&lt;/code&gt; &lt;/a&gt; 함수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="3a2628834ca39185296b874bee3b5ff93cdbcd33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: See &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="141b049f700d85b67c2ef8567737e77c76964a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Solaris.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Solaris.</target>
        </trans-unit>
        <trans-unit id="4b7b9251e796fbd185c08f2699db873dfe0e2612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스</target>
        </trans-unit>
        <trans-unit id="7a6a5b617ac77504a374b695ea163446e6dba96c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (maybe not all platforms), Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스 (일부 플랫폼은 아님), Windows.</target>
        </trans-unit>
        <trans-unit id="7be10b48e159bc7d996788229ca711ab291578cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (see the man page for &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_getcpuclockid(3)&quot;&gt;pthread_getcpuclockid(3)&lt;/a&gt;&lt;/em&gt; for further information).</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스 (자세한 내용은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_getcpuclockid(3)&quot;&gt;pthread_getcpuclockid (3)&lt;/a&gt;&lt;/em&gt; 매뉴얼 페이지 참조 ).</target>
        </trans-unit>
        <trans-unit id="cab64852e120b11ac033cf8a36eddc95a3ab2802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스, 윈도우.</target>
        </trans-unit>
        <trans-unit id="0cd852453906c25d541e019475671b24de19b3cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows. &lt;a href=&quot;#os.spawnlp&quot;&gt;&lt;code&gt;spawnlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlpe&quot;&gt;&lt;code&gt;spawnlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnvp&quot;&gt;&lt;code&gt;spawnvp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnvpe&quot;&gt;&lt;code&gt;spawnvpe()&lt;/code&gt;&lt;/a&gt; are not available on Windows. &lt;a href=&quot;#os.spawnle&quot;&gt;&lt;code&gt;spawnle()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnve&quot;&gt;&lt;code&gt;spawnve()&lt;/code&gt;&lt;/a&gt; are not thread-safe on Windows; we advise you to use the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스, 윈도우. &lt;a href=&quot;#os.spawnlp&quot;&gt; &lt;code&gt;spawnlp()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnlpe&quot;&gt; &lt;code&gt;spawnlpe()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnvp&quot;&gt; &lt;code&gt;spawnvp()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.spawnvpe&quot;&gt; &lt;code&gt;spawnvpe()&lt;/code&gt; &lt;/a&gt; 는 Windows에서 사용할 수 없습니다. &lt;a href=&quot;#os.spawnle&quot;&gt; &lt;code&gt;spawnle()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.spawnve&quot;&gt; &lt;code&gt;spawnve()&lt;/code&gt; &lt;/a&gt; 는 Windows에서 스레드로부터 안전하지 않습니다. 대신 &lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt; 모듈 을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7a881d735b574701d6f2a59cf2726eb7d650392a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스.</target>
        </trans-unit>
        <trans-unit id="a355b797f4157d852f5f0b38fea78964e0bc4ccd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. Not available on VxWorks.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. VxWorks에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2a154f243efd5657848682e09c07833e2717806f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm (2)&lt;/a&gt;&lt;/em&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="9d6c0ab89bfc1f8e5bca6461b228a48c2d4b1c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_kill(3)&quot;&gt;pthread_kill(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_kill(3)&quot;&gt;pthread_kill (3)&lt;/a&gt;&lt;/em&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="05833bdfa96418e35bb2687d653f85e160e8fffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/siginterrupt(3)&quot;&gt;siginterrupt(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 맨 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/siginterrupt(3)&quot;&gt;siginterrupt (3)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="5ac2a6b0a2fe3c005cfdaecbc999d05131885892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 맨 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;신호 (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="801e2256c076229379e2cd5641ffeae79214ab0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigpending(2)&quot;&gt;sigpending(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigpending(2)&quot;&gt;sigpending (2)&lt;/a&gt;&lt;/em&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5508ae21e03e95ec74d7bcdab5be46acf2d687df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigprocmask(3)&quot;&gt;sigprocmask(3)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_sigmask(3)&quot;&gt;pthread_sigmask(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 맨 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigprocmask(3)&quot;&gt;sigprocmask (3)&lt;/a&gt;&lt;/em&gt; 및 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_sigmask(3)&quot;&gt;pthread_sigmask (3)&lt;/a&gt;&lt;/em&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a83285c3541631079a1dfbb09a8bf30ec550f9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigtimedwait(2)&quot;&gt;sigtimedwait(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 맨 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigtimedwait(2)&quot;&gt;sigtimedwait (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="5e9980dd2d8069b5bbfb3bd2d4d989b389acc5ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwait(3)&quot;&gt;sigwait(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 맨 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwait(3)&quot;&gt;sigwait (3)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="8e62b5fe606eb8be427a3099a2734279146c8845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwaitinfo(2)&quot;&gt;sigwaitinfo(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwaitinfo(2)&quot;&gt;sigwaitinfo (2)&lt;/a&gt;&lt;/em&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24f6d2ed373b9835c0501352159a369fd7713185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows 전용.</target>
        </trans-unit>
        <trans-unit id="d54feea6f3cce8e89e2f2a976056df6d4a5ae203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, FreeBSD, Linux, macOS, OpenBSD, NetBSD, AIX.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows, FreeBSD, Linux, macOS, OpenBSD, NetBSD, AIX.</target>
        </trans-unit>
        <trans-unit id="4317f54c6cf4d0021edcaf0f5d3d52633c65c7f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, Linux, Unix systems supporting &lt;code&gt;CLOCK_THREAD_CPUTIME_ID&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;code&gt;CLOCK_THREAD_CPUTIME_ID&lt;/code&gt; 를 지원하는 Windows, Linux, Unix 시스템 .</target>
        </trans-unit>
        <trans-unit id="571cd19957f22f79de3973b5b6121ea2af046cd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, systems with POSIX threads.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows, POSIX 스레드가있는 시스템.</target>
        </trans-unit>
        <trans-unit id="1c96439d0f97634528966f65b0caf38de6ab5cbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows.</target>
        </trans-unit>
        <trans-unit id="dd8f23dec67e321f82bfa803d74dcc6671d29ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: macOS 10.12 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : macOS 10.12 이상</target>
        </trans-unit>
        <trans-unit id="e4cccbcb0e677cb523a8fa7a5e02cddfc49e5c25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most Unix platforms, possibly others.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 대부분의 유닉스 플랫폼, 아마도 다른 플랫폼.</target>
        </trans-unit>
        <trans-unit id="9c1f68fd1f5ee17e9bc9ffd4b858fa35d5f8617f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix, Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : 대부분의 Unix, Windows 버전.</target>
        </trans-unit>
        <trans-unit id="92b6534648c4384c8ec9cf302c7b26ae7d71b497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 대부분의 유닉스 맛.</target>
        </trans-unit>
        <trans-unit id="ea4773e92e4bc7f7a89d9920f796c1f6c5aa827e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: not available with LibreSSL and OpenSSL &amp;gt; 1.1.0.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : LibreSSL 및 OpenSSL&amp;gt; 1.1.0에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="31d6ddf6ff25d08e9457297ae263dfa4ec49c268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: recent flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;사용 가능 여부&lt;/a&gt; : 최근 Unix의 맛.</target>
        </trans-unit>
        <trans-unit id="c115a6529a011be3320ec77a39c988efafb83f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some Unix systems.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 일부 유닉스 시스템.</target>
        </trans-unit>
        <trans-unit id="2525a1224adabc9e6c8d4b23d7db6deca7ed7134" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스의 일부 맛.</target>
        </trans-unit>
        <trans-unit id="67909c6b2fecd7ada769b8bbf1683e139584cec2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; has special behavior: It allows loading a shared library by accessing it as attribute of a library loader instance. The result is cached, so repeated attribute accesses return the same library each time.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt; 에는 특별한 동작이 있습니다. 공유 라이브러리를 라이브러리 로더 인스턴스의 속성으로 액세스하여 공유 라이브러리를로드 할 수 있습니다. 결과는 캐시되므로 반복 된 속성 액세스는 매번 동일한 라이브러리를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c115d329751421c47babd7769a308ea3cd140127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is used by built-in &lt;a href=&quot;functions#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt;, and when objects are added to hashed collections such as dictionaries and sets. Having a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; implies that instances of the class are immutable. Mutability is a complicated property that depends on the programmer&amp;rsquo;s intent, the existence and behavior of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, and the values of the &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; flags in the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 는 내장&lt;a href=&quot;functions#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; &lt;/a&gt; 에서 사용되며사전 및 집합과 같은 해시 모음에 객체가 추가 될 때 사용됩니다. 갖는&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스는 불변 것을 의미한다. 변경 가능성은 프로그래머의 의도,&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; 의 존재 및 동작,&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; 데코레이터의 &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;frozen&lt;/code&gt; 플래그값에따라 달라지는 복잡한 속성입니다.</target>
        </trans-unit>
        <trans-unit id="ec7c1842c622efad5ec3d490538bc50ba7aa422e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; must be used whenever you want to customize the actual value of the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; member. Any other modifications may go in either &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, with &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; being preferred.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 멤버의 실제 값을 사용자 지정할 때마다 __new __ ()를 사용해야합니다. 다른 수정 사항은&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;진행할 수있으며&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="ffeec5eca52c7825b3a24bed81f152c95cb5d81e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, if specified, must create and return the enum members; it is also a very good idea to set the member&amp;rsquo;s &lt;code&gt;_value_&lt;/code&gt; appropriately. Once all the members are created it is no longer used.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 는 지정된 경우 열거 형 멤버를 작성하고 리턴해야합니다. 멤버의 &lt;code&gt;_value_&lt;/code&gt; 를 적절하게설정하는 것도 좋습니다. 모든 멤버가 작성되면 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7292f12f4a8a27f50592e65e665649cca34d392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; will use the mixed-in type&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; is desired, use the &lt;code&gt;!s&lt;/code&gt; or &lt;code&gt;!r&lt;/code&gt; format codes.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;형식이 지정된 문자열 리터럴&lt;/a&gt; , &lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 은 혼합 형식의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt; 합니다. 만약 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스의 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 사용을 원하는됩니다 &lt;code&gt;!s&lt;/code&gt; 나 &lt;code&gt;!r&lt;/code&gt; 형식 코드를.</target>
        </trans-unit>
        <trans-unit id="97aa317ef2a0df4bfe75d880f60c49c6f5422f16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad296f62523ad457249547760c593dc2d2e7caec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67c1cf9911a32f272d6ecfa1114ad3a191d1861a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e255ce3b510f2a28123ba6b3e0b0409358a6b258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-general&quot;&gt;Command line and environment&lt;/a&gt; - CPython command line details</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-general&quot;&gt;명령 행 및 환경&lt;/a&gt; -CPython 명령 행 세부 사항</target>
        </trans-unit>
        <trans-unit id="7904a415e2ed0dc9af7d67d5ee3a4931f2a1c955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;Interface options&lt;/a&gt; for equivalent functionality on the command line (&lt;code&gt;python path/to/script&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;&lt;/a&gt;명령 행에서 동등한 기능을위한 인터페이스 옵션 ( &lt;code&gt;python path/to/script&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6bc948b26717ac5d95b7b703e916ed10abd1ae1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;sys#sys.addaudithook&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PySys_AddAuditHook&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;sys#sys.addaudithook&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ce5478ab9f858ebd8894caecf71d94b89d4e88e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;Coroutine&lt;/a&gt; objects and instances of the &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt;&lt;code&gt;Coroutine&lt;/code&gt;&lt;/a&gt; ABC are all instances of this ABC.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;Coroutine&lt;/a&gt; objects and instances of the &lt;a href=&quot;#collections.abc.Coroutine&quot;&gt; &lt;code&gt;Coroutine&lt;/code&gt; &lt;/a&gt; ABC are all instances of this ABC.</target>
        </trans-unit>
        <trans-unit id="53b3dd2e46274126b3eb9b05188a83fedb533a24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;Coroutines&lt;/a&gt; declared with the async/await syntax is the preferred way of writing asyncio applications. For example, the following snippet of code (requires Python 3.7+) prints &amp;ldquo;hello&amp;rdquo;, waits 1 second, and then prints &amp;ldquo;world&amp;rdquo;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;Coroutines&lt;/a&gt; declared with the async/await syntax is the preferred way of writing asyncio applications. For example, the following snippet of code (requires Python 3.7+) prints &amp;ldquo;hello&amp;rdquo;, waits 1 second, and then prints &amp;ldquo;world&amp;rdquo;:</target>
        </trans-unit>
        <trans-unit id="63a2c1e63648441eadb1bdad9282f685c84598a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;File objects&lt;/a&gt; used by the interpreter for standard input, output and errors:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;File objects&lt;/a&gt; used by the interpreter for standard input, output and errors:</target>
        </trans-unit>
        <trans-unit id="5dfffea494aa91624abb42fc4ca8582ddf04fad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;Finder&lt;/a&gt; for modules declared in the Windows registry. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; ABC.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;Finder&lt;/a&gt; for modules declared in the Windows registry. This class implements the &lt;a href=&quot;#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt; ABC.</target>
        </trans-unit>
        <trans-unit id="a3541ee5809da65eb6000c60f124de04c04960e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;Loader&lt;/a&gt; that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;Loader&lt;/a&gt; that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</target>
        </trans-unit>
        <trans-unit id="15ee16076b510514d43300cbce382e3e288fc1b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Android.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Android.</target>
        </trans-unit>
        <trans-unit id="39c0ce96f6afb2c97be4386e4021fcff54199194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: BSD, OSX.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: BSD, OSX.</target>
        </trans-unit>
        <trans-unit id="282aab20617f2c0d917efcd098ddb3e99b0e39c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD 9 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD 9 or later.</target>
        </trans-unit>
        <trans-unit id="232620fc39389229ee00dcc22d91814075a0001a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, NetBSD 7 or later, OpenBSD.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, NetBSD 7 or later, OpenBSD.</target>
        </trans-unit>
        <trans-unit id="770bcfcb1d31e18fb7a09b8298ecddbaef6c00b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, OpenBSD 5.5 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: FreeBSD, OpenBSD 5.5 or later.</target>
        </trans-unit>
        <trans-unit id="ad6e958c147286e2e5875770046d29ba50e88544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: LibreSSL ignores the environment vars &lt;code&gt;openssl_cafile_env&lt;/code&gt; and &lt;code&gt;openssl_capath_env&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: LibreSSL ignores the environment vars &lt;code&gt;openssl_cafile_env&lt;/code&gt; and &lt;code&gt;openssl_capath_env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d72b1229af12e3a42bbe92571af2b90146151846" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.2.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.2.</target>
        </trans-unit>
        <trans-unit id="141e5f528205e1f97ac393e6d689daa76e0d6179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.20, FreeBSD &amp;gt;= 10.1-RELEASE</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.20, FreeBSD &amp;gt;= 10.1-RELEASE</target>
        </trans-unit>
        <trans-unit id="19e1b7aaa76c1312b087abd22b5445d606474d7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.25.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.25.</target>
        </trans-unit>
        <trans-unit id="cfa8f2e8b0b0213bf8a92665e859d90b5db3e5cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.27.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.27.</target>
        </trans-unit>
        <trans-unit id="04f6bac680d561cc8f48447a3e5d66fe7614512e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.30.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.30.</target>
        </trans-unit>
        <trans-unit id="06b5ee335baf90df0a155353c9e16f07ccb191db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.38.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 2.6.38.</target>
        </trans-unit>
        <trans-unit id="587921a72ea16df8ab1e5f69da70727eb9c2e924" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 3.6.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 3.6.</target>
        </trans-unit>
        <trans-unit id="869ad20f54981874fc6774abb6d0bc6e31d51f7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.1.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.1.</target>
        </trans-unit>
        <trans-unit id="5aba5871417db8739e1a5344d9f1bde583c76bf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.7.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.7.</target>
        </trans-unit>
        <trans-unit id="69848153015870f0d0689c8612bd21ae73789b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8 QEMU &amp;gt;= 2.8 ESX &amp;gt;= 4.0 ESX Workstation &amp;gt;= 6.5.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8 QEMU &amp;gt;= 2.8 ESX &amp;gt;= 4.0 ESX Workstation &amp;gt;= 6.5.</target>
        </trans-unit>
        <trans-unit id="bdc5a458dc04691b4f1a68839d18e04abb230a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 4.8.</target>
        </trans-unit>
        <trans-unit id="33b4850be953f2c762e3cd65c56e3eecb6dd96dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 5.4.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux &amp;gt;= 5.4.</target>
        </trans-unit>
        <trans-unit id="c13be41d4a3e6a4b17524ef441607b8cc49f9265" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.12 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.12 or later.</target>
        </trans-unit>
        <trans-unit id="2c6a636360c620f0a815a907e541b6f382ef3f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.25 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.25 or later.</target>
        </trans-unit>
        <trans-unit id="674c31c5ed596ba2e88fdb68fc1a52a80a383a04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.28 and newer, macOS 10.12 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.28 and newer, macOS 10.12 and newer.</target>
        </trans-unit>
        <trans-unit id="38e76aaf40c0450654d540c287fea44e40c28724" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer, AIX 7.1 and newer. Using flags requires Linux 4.6 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer, AIX 7.1 and newer. Using flags requires Linux 4.6 or newer.</target>
        </trans-unit>
        <trans-unit id="43f721420afcb9b26afdde5e2b4867be50e94cd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer, AIX 7.1 and newer. Using flags requires Linux 4.7 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.30 and newer, FreeBSD 6.0 and newer, OpenBSD 2.7 and newer, AIX 7.1 and newer. Using flags requires Linux 4.7 or newer.</target>
        </trans-unit>
        <trans-unit id="6eef630cb51cdfff97c648b82d3d3cf857bf939c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.36 or later with glibc 2.13 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.36 or later with glibc 2.13 or later.</target>
        </trans-unit>
        <trans-unit id="4b295c8b3b74ed4e4ce271a5c47d35fe721a99c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.38, some algorithm types require more recent Kernels.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.38, some algorithm types require more recent Kernels.</target>
        </trans-unit>
        <trans-unit id="e6dfa09ca31e3fdffa74a7cb04943b8e84659d22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.39 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.39 or later.</target>
        </trans-unit>
        <trans-unit id="cc9ab4b1fdfa9119aab6f55426d2d52195bad7b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.8 or later.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 2.6.8 or later.</target>
        </trans-unit>
        <trans-unit id="9beaf69a6599759e25af08e3b703ef17c0db535a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 and newer.</target>
        </trans-unit>
        <trans-unit id="d78b29010382ecbcc04eedc62f441db83ffe4395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer.</target>
        </trans-unit>
        <trans-unit id="1c14f472d430ecd04e330764fd6069893d045209" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 3.17 or newer with glibc 2.27 or newer. The &lt;code&gt;MFD_HUGE*&lt;/code&gt; flags are only available since Linux 4.14.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 3.17 이상 (glibc 2.27 이상 포함). &lt;code&gt;MFD_HUGE*&lt;/code&gt; 플래그 리눅스 4.14 이후에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74e40fe32683935593921ef2dd6db09d06143113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.14 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.14 이상.</target>
        </trans-unit>
        <trans-unit id="554ef4a3fc2f25739cd64fba71728d44e44767d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.6 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.6 이상.</target>
        </trans-unit>
        <trans-unit id="dcb4d79c9064bb517cb69f1c72cea1b8ccf0981c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 4.7 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 4.7 이상.</target>
        </trans-unit>
        <trans-unit id="357a02245d544d65109be88c34a7730096b7d8db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 5.1+</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 5.1 이상</target>
        </trans-unit>
        <trans-unit id="21b91c34dab23cc789e6951676a6263040339f9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 5.3+</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 5.3 이상</target>
        </trans-unit>
        <trans-unit id="55a7ecb50664e79b61037c3449ce6f4ca2b370b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux 5.4+</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 5.4 이상</target>
        </trans-unit>
        <trans-unit id="5155875a79319f95e0837303d010ba3bfc011c22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux kernel &amp;gt;= 4.5 or glibc &amp;gt;= 2.27.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux 커널&amp;gt; = 4.5 또는 glibc&amp;gt; = 2.27.</target>
        </trans-unit>
        <trans-unit id="16851174e91d03525e459551a57288414aa418e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Linux.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Linux.</target>
        </trans-unit>
        <trans-unit id="85fc3baa70276311120ffd54ef6053cc5673f8e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.0.2+.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : OpenSSL 1.0.2 이상.</target>
        </trans-unit>
        <trans-unit id="417fa253e7b43fd4b38b5d90d69ec125e34a0994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: OpenSSL 1.1+.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : OpenSSL 1.1 이상.</target>
        </trans-unit>
        <trans-unit id="0b7b88d7b45ed5fc52e251a7e86ed4346a2ac4f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: POSIX</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : POSIX</target>
        </trans-unit>
        <trans-unit id="fe3f272b88107ea3946dcb291697fb21ccdfb01a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: POSIX &amp;amp; Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : POSIX 및 Windows.</target>
        </trans-unit>
        <trans-unit id="882fb5b2f31f4ba6b61059e71e4f3ac098730968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Requires &lt;a href=&quot;#threading.get_native_id&quot;&gt;&lt;code&gt;get_native_id()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#threading.get_native_id&quot;&gt; &lt;code&gt;get_native_id()&lt;/code&gt; &lt;/a&gt; 함수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="906085251988a72b88cba49ed08db73e8e0b17e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: See &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3177c6634e59555e2792165d23d9cb88985fe8b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Solaris.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Solaris.</target>
        </trans-unit>
        <trans-unit id="1b59fe1fe9f380060ce5f0d57016580d39c96f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스</target>
        </trans-unit>
        <trans-unit id="944871437cea15d99a75661acca2173d60fba69b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (maybe not all platforms), Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Unix (모든 플랫폼이 아닐 수도 있음), Windows.</target>
        </trans-unit>
        <trans-unit id="aa496dcbfe9f8c96e68379e30cb8ae1500cf34f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix (see the man page for &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_getcpuclockid(3)&quot;&gt;pthread_getcpuclockid(3)&lt;/a&gt;&lt;/em&gt; for further information).</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스 (자세한 내용은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_getcpuclockid(3)&quot;&gt;pthread_getcpuclockid (3)&lt;/a&gt;&lt;/em&gt; 의 man 페이지를 참조하십시오 ).</target>
        </trans-unit>
        <trans-unit id="25e52d9fce712928a3ed35c756d296049148e7d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix supporting &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SCM_RIGHTS&lt;/code&gt; 메커니즘을 지원하는 유닉스 .</target>
        </trans-unit>
        <trans-unit id="b47644a9c4fab17fd94b30e0556ad0cc5bd030ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix supporting &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SCM_RIGHTS&lt;/code&gt; 메커니즘을 지원하는 유닉스 .</target>
        </trans-unit>
        <trans-unit id="7f50930f1444089a77ae5c96605eb1182f070441" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Unix, Windows.</target>
        </trans-unit>
        <trans-unit id="8edc7d74fac781867552d9ecce3f6fcece7cd79d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix, Windows. &lt;a href=&quot;#os.spawnlp&quot;&gt;&lt;code&gt;spawnlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlpe&quot;&gt;&lt;code&gt;spawnlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnvp&quot;&gt;&lt;code&gt;spawnvp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnvpe&quot;&gt;&lt;code&gt;spawnvpe()&lt;/code&gt;&lt;/a&gt; are not available on Windows. &lt;a href=&quot;#os.spawnle&quot;&gt;&lt;code&gt;spawnle()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnve&quot;&gt;&lt;code&gt;spawnve()&lt;/code&gt;&lt;/a&gt; are not thread-safe on Windows; we advise you to use the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Unix, Windows. &lt;a href=&quot;#os.spawnlp&quot;&gt; &lt;code&gt;spawnlp()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnlpe&quot;&gt; &lt;code&gt;spawnlpe()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnvp&quot;&gt; &lt;code&gt;spawnvp()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.spawnvpe&quot;&gt; &lt;code&gt;spawnvpe()&lt;/code&gt; &lt;/a&gt; 는 Windows에서 사용할 수 없습니다. &lt;a href=&quot;#os.spawnle&quot;&gt; &lt;code&gt;spawnle()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.spawnve&quot;&gt; &lt;code&gt;spawnve()&lt;/code&gt; &lt;/a&gt; 는 Windows에서 스레드로부터 안전하지 않습니다. 대신 &lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt; 모듈 을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8ea1e4df14a938e1c57426f061c742621228994f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스.</target>
        </trans-unit>
        <trans-unit id="3389638cb53c52f8213425da924eb084a9b0a2f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. Not available on VxWorks.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. VxWorks에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="59317f4f39d2695716b8687f3deb722658042fae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 man 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/alarm(2)&quot;&gt;alarm (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="867563e1b43fe6d232c69fbfde789c52e882521a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_kill(3)&quot;&gt;pthread_kill(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_kill(3)&quot;&gt;pthread_kill (3)&lt;/a&gt;&lt;/em&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="f5c87362ed7a12a7e3954d048c74dd4b138f9c3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/siginterrupt(3)&quot;&gt;siginterrupt(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/siginterrupt(3)&quot;&gt;siginterrupt (3)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="11e0c5fc9f5c85afd3ab1f652783ab31da3b6993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 man 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/signal(2)&quot;&gt;signal (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="2e7efe15160f343c8b23a627b7d2b8198b6a0ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigpending(2)&quot;&gt;sigpending(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 man 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigpending(2)&quot;&gt;sigpending (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="d0eac03072abc0a1a934fb0ae49569d6ff1b3373" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigprocmask(3)&quot;&gt;sigprocmask(3)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_sigmask(3)&quot;&gt;pthread_sigmask(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigprocmask(3)&quot;&gt;sigprocmask (3)&lt;/a&gt;&lt;/em&gt; 및 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/pthread_sigmask(3)&quot;&gt;pthread_sigmask (3)&lt;/a&gt;&lt;/em&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="65186f5df12d111073eefd2d5622aa7659fe3f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigtimedwait(2)&quot;&gt;sigtimedwait(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 man 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigtimedwait(2)&quot;&gt;sigtimedwait (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="cca830b9c6b97c300ffcb15e3a6db362ee071a35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwait(3)&quot;&gt;sigwait(3)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwait(3)&quot;&gt;sigwait (3)&lt;/a&gt;&lt;/em&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fce03b81cd8833ddd6fa377776c8c35275974c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Unix. See the man page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwaitinfo(2)&quot;&gt;sigwaitinfo(2)&lt;/a&gt;&lt;/em&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스. 자세한 내용은 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/sigwaitinfo(2)&quot;&gt;sigwaitinfo (2)&lt;/a&gt;&lt;/em&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="242db3aac075e9f360a5ee0a8db6fc1df76967d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows 전용.</target>
        </trans-unit>
        <trans-unit id="9607a3c60e6628346bfd6062b0f949ad794c9653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, FreeBSD, Linux, macOS, OpenBSD, NetBSD, AIX.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows, FreeBSD, Linux, macOS, OpenBSD, NetBSD, AIX.</target>
        </trans-unit>
        <trans-unit id="0f91e4e059d2c0c202de781437726810bb7563f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, Linux, Unix systems supporting &lt;code&gt;CLOCK_THREAD_CPUTIME_ID&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : &lt;code&gt;CLOCK_THREAD_CPUTIME_ID&lt;/code&gt; 를 지원하는 Windows, Linux, Unix 시스템 .</target>
        </trans-unit>
        <trans-unit id="886abcc73a095180bc54684adc36ee21ea0ef78f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows, systems with POSIX threads.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows, POSIX 스레드가있는 시스템.</target>
        </trans-unit>
        <trans-unit id="5d30110d6e4721d5079bcaf835161c8e08a41896" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : Windows.</target>
        </trans-unit>
        <trans-unit id="8f891803b65996a6d7d9cb3b6b692b24ba55e7d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: macOS 10.12 and newer.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : macOS 10.12 이상.</target>
        </trans-unit>
        <trans-unit id="960fff0b6327d605f51d3a9be46371570f808e43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most Unix platforms, possibly others.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 대부분의 유닉스 플랫폼, 아마도 다른 플랫폼.</target>
        </trans-unit>
        <trans-unit id="1e51790b50d4db36a54bb40b30205a104637ba0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix, Windows.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 대부분의 Unix, Windows.</target>
        </trans-unit>
        <trans-unit id="30cb47cf602029f77aa41460b5df2d4a6f3ae9a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: most flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 대부분의 유닉스 버전.</target>
        </trans-unit>
        <trans-unit id="f6004f431e1041901357d777a1f88a9f22bac78f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: not available with LibreSSL and OpenSSL &amp;gt; 1.1.0.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : LibreSSL 및 OpenSSL&amp;gt; 1.1.0에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4ea62ab28a7cf200da1f66b0554e185a83b05764" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: recent flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스의 최신 버전.</target>
        </trans-unit>
        <trans-unit id="509263412755e257d71052536ab16986a379c7ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some Unix systems.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 일부 유닉스 시스템.</target>
        </trans-unit>
        <trans-unit id="ebed7c3ee6d8320a2178be883758835e6f510aed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;Availability&lt;/a&gt;: some flavors of Unix.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/library/intro.html#availability&quot;&gt;가용성&lt;/a&gt; : 유닉스의 일부 맛.</target>
        </trans-unit>
        <trans-unit id="e64d73905ca52b5948a054403d7c724d7398ae87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; &amp;ndash; Used to implement parameterized generics.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt; &amp;ndash; 매개 변수화 된 제네릭을 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="71589b45219bb33f5443e2c2d57b9f7139e8fb56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; has special behavior: It allows loading a shared library by accessing it as attribute of a library loader instance. The result is cached, so repeated attribute accesses return the same library each time.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt; 에는 특별한 동작이 있습니다. 라이브러리 로더 인스턴스의 속성으로 액세스하여 공유 라이브러리를로드 할 수 있습니다. 결과는 캐시되므로 반복 된 속성 액세스는 매번 동일한 라이브러리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cd7535ad9ec2751b8e5e121ffb9d8354fb8a0a31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is used by built-in &lt;a href=&quot;functions#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt;, and when objects are added to hashed collections such as dictionaries and sets. Having a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; implies that instances of the class are immutable. Mutability is a complicated property that depends on the programmer&amp;rsquo;s intent, the existence and behavior of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, and the values of the &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; flags in the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 는 내장&lt;a href=&quot;functions#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; &lt;/a&gt; 에 의해 사용되며객체가 사전 및 세트와 같은 해시 된 컬렉션에 추가 될 때 사용됩니다. 갖는&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스는 불변 것을 의미한다. 가변성은 프로그래머의 의도,&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; 의 존재 및 동작,&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt; 데코레이터의 &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;frozen&lt;/code&gt; 플래그값에따라 달라지는 복잡한 속성입니다.</target>
        </trans-unit>
        <trans-unit id="8333342f897dc41eeca77c621e675b5699b29645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; must be used whenever you want to customize the actual value of the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; member. Any other modifications may go in either &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, with &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; being preferred.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 멤버의 실제 값을 사용자 지정할 때마다 사용해야합니다. 다른 모든 수정은&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 에서 가능하며&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="a92d8c6e72b5fed5953df3d7118542680aa9e733" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, if specified, must create and return the enum members; it is also a very good idea to set the member&amp;rsquo;s &lt;code&gt;_value_&lt;/code&gt; appropriately. Once all the members are created it is no longer used.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt; 는 지정된 경우 열거 형 멤버를 만들고 반환해야합니다. 멤버의 &lt;code&gt;_value_&lt;/code&gt; 를 적절하게설정하는 것도 매우 좋은 생각입니다. 모든 구성원이 생성되면 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0161143be5fcdfdd4fe581e1f839da15ce102f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;Formatted string literals&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; will use the mixed-in type&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; unless &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; is overridden in the subclass, in which case the overridden methods or &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; methods will be used. Use the !s and !r format codes to force usage of the &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;형식화 된 문자열 리터럴&lt;/a&gt; , &lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; 은 하위 클래스에서 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt; 이 재정의 되지 않는 한 혼합 유형의 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt; 을 사용합니다.이 경우 재정의 된 메서드 또는 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 메서드가 사용됩니다. . ! s 및! r 형식 코드를 사용하여 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 클래스의 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 메서드 를 강제로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="172c2b2477fb04d92e60e4f9798b5d19f352af37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt;&lt;code&gt;-OO&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-oo&quot;&gt; &lt;code&gt;-OO&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="460c0a35d8acde99382d90e04cd63797c702bc43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X dev&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X dev&lt;/code&gt; &lt;/a&gt; (&lt;a href=&quot;devmode#devmode&quot;&gt; Python 개발 모드&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7b1a587f605975eb019d3fd35b41a84374a99a9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-general&quot;&gt;Command line and environment&lt;/a&gt; - CPython command line details</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-general&quot;&gt;명령 줄 및 환경&lt;/a&gt; -CPython 명령 줄 세부 정보</target>
        </trans-unit>
        <trans-unit id="5dd3c456dd28c376663d2750b6aa16b041f35964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;Interface options&lt;/a&gt; for equivalent functionality on the command line (&lt;code&gt;python path/to/script&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;&lt;/a&gt;명령 줄에서 동등한 기능을위한 인터페이스 옵션 ( &lt;code&gt;python path/to/script&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a434d17daae32db68cac8a1c70ca9d6524c29b80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Document_type_definition&quot;&gt;DTD&lt;/a&gt; retrieval</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Document_type_definition&quot;&gt;DTD&lt;/a&gt; 검색</target>
        </trans-unit>
        <trans-unit id="6dfa32be87dd032482ee7af2c80c52017c2f8a50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;Hyperbolic functions&lt;/a&gt; are analogs of trigonometric functions that are based on hyperbolas instead of circles.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;쌍곡선 함수&lt;/a&gt; 는 원 대신 쌍곡선을 기반으로하는 삼각 함수의 아날로그입니다.</target>
        </trans-unit>
        <trans-unit id="6c859252a5d36ccc32013c07ec1122755feecd79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://greentreesnakes.readthedocs.io/&quot;&gt;Green Tree Snakes&lt;/a&gt;, an external documentation resource, has good details on working with Python ASTs.</source>
          <target state="translated">&lt;a href=&quot;https://greentreesnakes.readthedocs.io/&quot;&gt;&lt;/a&gt;외부 문서 리소스 인 Green Tree Snakes 에는 Python AST 작업에 대한 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="75b8b01183d91c35de14e817cae7dd5facb70656" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://libcst.readthedocs.io/&quot;&gt;LibCST&lt;/a&gt; parses code as a Concrete Syntax Tree that looks like an ast tree and keeps all formatting details. It&amp;rsquo;s useful for building automated refactoring (codemod) applications and linters.</source>
          <target state="translated">&lt;a href=&quot;https://libcst.readthedocs.io/&quot;&gt;LibCST&lt;/a&gt; 는 코드를 ast 트리처럼 보이는 구체적인 구문 트리로 구문 분석하고 모든 서식 세부 정보를 유지합니다. 자동화 된 리팩토링 (codemod) 애플리케이션 및 linter를 빌드하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b71647a4e5003d4774b16e70125d49463aada09f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb432265.aspx&quot;&gt;FCICreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379205.aspx&quot;&gt;UuidCreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379352.aspx&quot;&gt;UuidToString&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb432265.aspx&quot;&gt;FCICreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379205.aspx&quot;&gt;UuidCreate&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379352.aspx&quot;&gt;UuidToString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16cbd24fa7b5e380783aff7fefa4da67350dd5f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368286.aspx&quot;&gt;Dialog Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368044.aspx&quot;&gt;Control Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368039.aspx&quot;&gt;Control Types&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368035.aspx&quot;&gt;ControlCondition Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368037.aspx&quot;&gt;ControlEvent Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368559.aspx&quot;&gt;EventMapping Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370962.aspx&quot;&gt;RadioButton Table&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368286.aspx&quot;&gt;대화 표 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368044.aspx&quot;&gt;제어 표 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368039.aspx&quot;&gt;제어 유형 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368035.aspx&quot;&gt;ControlCondition 표 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368037.aspx&quot;&gt;ControlEvent 표 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368559.aspx&quot;&gt;EventMapping 테이블 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370962.aspx&quot;&gt;의 RadioButton 표&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1f8dbe06ed7c82e0113c4d78922f2e44537f87a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368295.aspx&quot;&gt;Directory Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368596.aspx&quot;&gt;File Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368007.aspx&quot;&gt;Component Table&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368579.aspx&quot;&gt;FeatureComponents Table&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368295.aspx&quot;&gt;디렉토리 테이블 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368596.aspx&quot;&gt;파일 테이블 &lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368007.aspx&quot;&gt;구성 요소 &lt;/a&gt;테이블 기능 구성 요소 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa368579.aspx&quot;&gt;테이블&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b9c3d5fe45a49e00499e27cf061a696785f4b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370082.aspx&quot;&gt;MSIDatabaseOpenView&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370075.aspx&quot;&gt;MSIDatabaseCommit&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370301.aspx&quot;&gt;MSIGetSummaryInformation&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370067.aspx&quot;&gt;MsiCloseHandle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370082.aspx&quot;&gt;MSIDatabaseOpenView&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370075.aspx&quot;&gt;MSIDatabaseCommit&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370301.aspx&quot;&gt;MSIGetSummaryInformation&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370067.aspx&quot;&gt;MsiCloseHandle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="907886d3e64bf9a4a3b8e9e298ae811685341198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370366.aspx&quot;&gt;MsiRecordGetFieldCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370373.aspx&quot;&gt;MsiRecordSetString&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370372.aspx&quot;&gt;MsiRecordSetStream&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370371.aspx&quot;&gt;MsiRecordSetInteger&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370364.aspx&quot;&gt;MsiRecordClearData&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370366.aspx&quot;&gt;MsiRecordGetFieldCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370373.aspx&quot;&gt;MsiRecordSetString&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370372.aspx&quot;&gt;MsiRecordSetStream&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370371.aspx&quot;&gt;MsiRecordSetInteger&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370364.aspx&quot;&gt;MsiRecordClearData&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e8feefb98b8375d63541b898ccb07207c125423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370409.aspx&quot;&gt;MsiSummaryInfoGetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370488.aspx&quot;&gt;MsiSummaryInfoGetPropertyCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370491.aspx&quot;&gt;MsiSummaryInfoSetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370490.aspx&quot;&gt;MsiSummaryInfoPersist&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370409.aspx&quot;&gt;MsiSummaryInfoGetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370488.aspx&quot;&gt;MsiSummaryInfoGetPropertyCount&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370491.aspx&quot;&gt;MsiSummaryInfoSetProperty&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370490.aspx&quot;&gt;MsiSummaryInfoPersist&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c7b512d237bec4f0eaaf4c3df06056f167441dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370513.aspx&quot;&gt;MsiViewExecute&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370516.aspx&quot;&gt;MSIViewGetColumnInfo&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370514.aspx&quot;&gt;MsiViewFetch&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370519.aspx&quot;&gt;MsiViewModify&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370510.aspx&quot;&gt;MsiViewClose&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370513.aspx&quot;&gt;MsiViewExecute&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370516.aspx&quot;&gt;MSIViewGetColumnInfo&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370514.aspx&quot;&gt;MsiViewFetch&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370519.aspx&quot;&gt;MsiViewModify&lt;/a&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa370510.aspx&quot;&gt;MsiViewClose&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33c6dbd8c490e00e9b6120df9cb457db93468ebe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://parso.readthedocs.io&quot;&gt;Parso&lt;/a&gt; is a Python parser that supports error recovery and round-trip parsing for different Python versions (in multiple Python versions). Parso is also able to list multiple syntax errors in your python file.</source>
          <target state="translated">&lt;a href=&quot;https://parso.readthedocs.io&quot;&gt;Parso&lt;/a&gt; 는 여러 Python 버전 (여러 Python 버전에서)에 대한 오류 복구 및 왕복 구문 분석을 지원하는 Python 파서입니다. Parso는 또한 파이썬 파일에 여러 구문 오류를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8785a282c8650e2a80556729a89d008182297d82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedexpat/&quot;&gt;defusedexpat&lt;/a&gt; provides a modified libexpat and a patched &lt;code&gt;pyexpat&lt;/code&gt; module that have countermeasures against entity expansion DoS attacks. The &lt;code&gt;defusedexpat&lt;/code&gt; module still allows a sane and configurable amount of entity expansions. The modifications may be included in some future release of Python, but will not be included in any bugfix releases of Python because they break backward compatibility.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/defusedexpat/&quot;&gt;defusedexpat&lt;/a&gt; 는 엔티티 확장 DoS 공격에 대비 한 수정 된 libexpat 및 패치 된 &lt;code&gt;pyexpat&lt;/code&gt; 모듈을 제공합니다 . &lt;code&gt;defusedexpat&lt;/code&gt; 의 모듈은 여전히 엔티티 확장의 제정신 및 구성 가능한 양을 수 있습니다. 수정 사항은 이후의 일부 Python 릴리스에 포함될 수 있지만 이전 버전과의 호환성을 손상시키기 때문에 Python의 모든 버그 수정 릴리스에는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d606a9b82d9a00e28d1b21cd978020e5e3f1411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; is a pure Python package with modified subclasses of all stdlib XML parsers that prevent any potentially malicious operation. Use of this package is recommended for any server code that parses untrusted XML data. The package also ships with example exploits and extended documentation on more XML exploits such as XPath injection.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; 은 잠재적으로 악의적 인 작업을 방지하는 모든 stdlib XML 파서의 수정 된 서브 클래스가 포함 된 순수 Python 패키지입니다. 신뢰할 수없는 XML 데이터를 구문 분석하는 모든 서버 코드에이 패키지를 사용하는 것이 좋습니다. 이 패키지는 또한 XPath 주입과 같은 더 많은 XML 익스플로잇에 대한 익스플로잇 예제 및 익스플로잇 문서와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3fc157b89595a8f3aaccc5c63f84172f870e406a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt; - XDR: External Data Representation Standard</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt; -XDR : 외부 데이터 표현 표준</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
