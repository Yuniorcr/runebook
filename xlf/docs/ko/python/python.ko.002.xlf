<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="8785a282c8650e2a80556729a89d008182297d82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedexpat/&quot;&gt;defusedexpat&lt;/a&gt; provides a modified libexpat and a patched &lt;code&gt;pyexpat&lt;/code&gt; module that have countermeasures against entity expansion DoS attacks. The &lt;code&gt;defusedexpat&lt;/code&gt; module still allows a sane and configurable amount of entity expansions. The modifications may be included in some future release of Python, but will not be included in any bugfix releases of Python because they break backward compatibility.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/defusedexpat/&quot;&gt;defusedexpat&lt;/a&gt; 는 엔티티 확장 DoS 공격에 대비 한 수정 된 libexpat 및 패치 된 &lt;code&gt;pyexpat&lt;/code&gt; 모듈을 제공합니다 . &lt;code&gt;defusedexpat&lt;/code&gt; 의 모듈은 여전히 엔티티 확장의 제정신 및 구성 가능한 양을 수 있습니다. 수정 사항은 이후의 일부 Python 릴리스에 포함될 수 있지만 이전 버전과의 호환성을 손상시키기 때문에 Python의 모든 버그 수정 릴리스에는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d606a9b82d9a00e28d1b21cd978020e5e3f1411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; is a pure Python package with modified subclasses of all stdlib XML parsers that prevent any potentially malicious operation. Use of this package is recommended for any server code that parses untrusted XML data. The package also ships with example exploits and extended documentation on more XML exploits such as XPath injection.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; 은 잠재적으로 악의적 인 작업을 방지하는 모든 stdlib XML 파서의 수정 된 서브 클래스가 포함 된 순수 Python 패키지입니다. 신뢰할 수없는 XML 데이터를 구문 분석하는 모든 서버 코드에이 패키지를 사용하는 것이 좋습니다. 이 패키지는 또한 XPath 주입과 같은 더 많은 XML 익스플로잇에 대한 익스플로잇 예제 및 익스플로잇 문서와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3fc157b89595a8f3aaccc5c63f84172f870e406a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt; - XDR: External Data Representation Standard</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt; -XDR : 외부 데이터 표현 표준</target>
        </trans-unit>
        <trans-unit id="8255d8669cc7cd018c0597e5cc875f59d1d8ab6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt; - MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt; -MIME (Multipurpose Internet Mail Extensions) 1 부 : 인터넷 메시지 본문 형식 지정 및 설명을위한 메커니즘</target>
        </trans-unit>
        <trans-unit id="e03d067e5908ef1b8b0d6d76e3cbed9ef9eeb656" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1738.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 1738&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Locators (URL)</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1738.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 1738&lt;/strong&gt;&lt;/a&gt; -URL (Uniform Resource Locator)</target>
        </trans-unit>
        <trans-unit id="ee0fa224b173fa5a6f706e2cb7ae6fbb473b5af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 1808&lt;/strong&gt;&lt;/a&gt; - Relative Uniform Resource Locators</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 1808-&lt;/strong&gt;&lt;/a&gt; 상대 균일 자원 로케이터</target>
        </trans-unit>
        <trans-unit id="ff1bdca5810ec1e6284928cbcc872c4db6775fed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1832.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1832&lt;/strong&gt;&lt;/a&gt; - XDR: External Data Representation Standard</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1832.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1832&lt;/strong&gt;&lt;/a&gt; -XDR : 외부 데이터 표현 표준</target>
        </trans-unit>
        <trans-unit id="06f8c34d492e76346f76cd494c7cb44c0f0ddc08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; - SMTP Service Extensions</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; -SMTP 서비스 확장</target>
        </trans-unit>
        <trans-unit id="9140f6b034c6a044c97c65d0e7b550f225dd2c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; defines a message&amp;rsquo;s default type to be &lt;em&gt;text/plain&lt;/em&gt; unless it appears inside a &lt;em&gt;multipart/digest&lt;/em&gt; container, in which case it would be &lt;em&gt;message/rfc822&lt;/em&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header has an invalid type specification, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; mandates that the default type be &lt;em&gt;text/plain&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; 는&lt;em&gt; 멀티 파트 / 다이제스트&lt;/em&gt; 컨테이너내에 표시되지 않는한 메시지의 기본 유형을&lt;em&gt; 텍스트 / 일반&lt;/em&gt; 으로 정의합니다.이 경우&lt;em&gt; 메시지 / rfc822&lt;/em&gt; 입니다. 경우&lt;em&gt; 컨텐츠 유형&lt;/em&gt; 헤더가 유효하지 않은 유형의 사양을 가지고,&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt; RFC 2045&lt;/strong&gt;&lt;/a&gt; 의무는 기본 유형은 것이&lt;em&gt; 일반 텍스트 /&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5a122b048c72934f4d39570101d7f608a865754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; -HTTP 상태 관리 메커니즘</target>
        </trans-unit>
        <trans-unit id="47cb4202b71a898353f940bc68cf20c255d7044f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; -HTTP 상태 관리 메커니즘</target>
        </trans-unit>
        <trans-unit id="3dbf07e2d53e763784dd60059d7215c28f3c5b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2368.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2368&lt;/strong&gt;&lt;/a&gt; - The mailto URL scheme.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2368.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2368&lt;/strong&gt;&lt;/a&gt; -mailto URL 체계.</target>
        </trans-unit>
        <trans-unit id="2bacfcd4c08880b248871c908162645c2c2a7de1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Identifiers (URI): Generic Syntax</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; -URI (Uniform Resource Identifier) ​​: 일반 구문</target>
        </trans-unit>
        <trans-unit id="0d0e5f6b57592592200e28d67de60d8d54b2d828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2732.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2732&lt;/strong&gt;&lt;/a&gt; - Format for Literal IPv6 Addresses in URL&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2732.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2732&lt;/strong&gt;&lt;/a&gt; -URL의 리터럴 IPv6 주소 형식.</target>
        </trans-unit>
        <trans-unit id="b3e34776dc8fbf5a4a57036fc2e1a497393aabac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; is the base standard that describes the format of email messages. It derives from the older &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; standard which came into widespread use at a time when most email was composed of ASCII characters only. &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; is a specification written assuming email contains only 7-bit ASCII characters.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; 는 전자 메일 메시지 형식을 설명하는 기본 표준입니다. 대부분의 전자 메일이 ASCII 문자로만 구성된 당시에 널리 사용 된이전&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt; RFC 822&lt;/strong&gt;&lt;/a&gt; 표준에서 파생됩니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; 는 전자 메일에 7 비트 ASCII 문자 만 포함되어 있다고 가정 한 사양입니다.</target>
        </trans-unit>
        <trans-unit id="a8a850c091c63de49cc71d84836dfaca33e0e772" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2964.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2964&lt;/strong&gt;&lt;/a&gt; - Use of HTTP State Management</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2964.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2964&lt;/strong&gt;&lt;/a&gt; -HTTP 상태 관리 사용</target>
        </trans-unit>
        <trans-unit id="d697e6703240f43c3ead47899b925ba5824b4942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; protocol strictness switches:</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; 프로토콜 엄격 성 스위치 :</target>
        </trans-unit>
        <trans-unit id="6d78911cb90335ffc1dc579a43247c8e89572d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; - HTTP State Management Mechanism</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; -HTTP 상태 관리 메커니즘</target>
        </trans-unit>
        <trans-unit id="284862831a8638eca43245e1363947ca141e5d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3454.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3454&lt;/strong&gt;&lt;/a&gt; defines a procedure for &amp;ldquo;preparing&amp;rdquo; Unicode strings in internet protocols. Before passing strings onto the wire, they are processed with the preparation procedure, after which they have a certain normalized form. The RFC defines a set of tables, which can be combined into profiles. Each profile must define which tables it uses, and what other optional parts of the &lt;code&gt;stringprep&lt;/code&gt; procedure are part of the profile. One example of a &lt;code&gt;stringprep&lt;/code&gt; profile is &lt;code&gt;nameprep&lt;/code&gt;, which is used for internationalized domain names.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3454.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3454&lt;/strong&gt;&lt;/a&gt; 는 인터넷 프로토콜에서 유니 코드 문자열을 &quot;준비&quot;하는 절차를 정의합니다. 스트링을 와이어로 전달하기 전에 준비 절차를 거쳐 처리 된 후 특정 정규화 된 형태를 갖습니다. RFC는 테이블 세트를 정의하며 프로파일 세트로 결합 될 수 있습니다. 각 프로파일은 사용하는 테이블과 &lt;code&gt;stringprep&lt;/code&gt; 프로 시저의 다른 선택적 부분을프로파일의 일부로정의해야합니다. &lt;code&gt;stringprep&lt;/code&gt; 프로파일의 한 예는국제화 된 도메인 이름에 사용되는 &lt;code&gt;nameprep&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91d65ebad5ecda8971dca63fb3a82d21e23460c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt; allows for optional mapping of the digit 0 (zero) to the letter O (oh), and for optional mapping of the digit 1 (one) to either the letter I (eye) or letter L (el). The optional argument &lt;em&gt;map01&lt;/em&gt; when not &lt;code&gt;None&lt;/code&gt;, specifies which letter the digit 1 should be mapped to (when &lt;em&gt;map01&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the digit 0 is always mapped to the letter O). For security purposes the default is &lt;code&gt;None&lt;/code&gt;, so that 0 and 1 are not allowed in the input.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3548을&lt;/strong&gt;&lt;/a&gt; 사용하면 숫자 0 (영)을 문자 O (oh)로 선택적으로 매핑하고 숫자 1 (1)을 문자 I (눈) 또는 문자 L (el)로 선택적 맵핑 할 수 있습니다. &lt;code&gt;None&lt;/code&gt; 이&lt;em&gt;아닌&lt;/em&gt; 경우선택적 인수&lt;em&gt; map01&lt;/em&gt; 은 숫자 1을 맵핑 할 문자를 지정합니다 (&lt;em&gt; map01&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; 이 아닌경우 숫자 0은 항상 문자 O에 맵핑 됨). 보안을 위해 기본값은 &lt;code&gt;None&lt;/code&gt; 이므로 0과 1은 입력에 허용되지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7a357c215b507253598cd8d680a390d26d1e893" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt; - Uniform Resource Identifiers</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3986-&lt;/strong&gt;&lt;/a&gt; 균일 한 자원 식별자</target>
        </trans-unit>
        <trans-unit id="5020d2e5753e3cd7275d6fc5b2bbcde08e2cdfbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt; - A Universally Unique IDentifier (UUID) URN Namespace</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt; -UUID (Universally Unique Identifier) ​​URN 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="d055dd319630e43539064ce4baa8902cd40a6a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; specifies a very specific format for dates within email headers. The &lt;code&gt;DateHeader&lt;/code&gt; parser recognizes that date format, as well as recognizing a number of variant forms that are sometimes found &amp;ldquo;in the wild&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; 는 이메일 헤더 내의 날짜에 대해 매우 구체적인 형식을 지정합니다. &lt;code&gt;DateHeader&lt;/code&gt; 파서는 날짜 형식뿐만 아니라 때로는 &quot;야생에서&quot;발견 된 변종 형태의 번호를 인식하는 인식합니다.</target>
        </trans-unit>
        <trans-unit id="65305d75d2bfa7688b54145d90ae9a11ff3d989e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt; - Simple Mail Transfer Protocol</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 821-&lt;/strong&gt;&lt;/a&gt; 단순 메일 전송 프로토콜</target>
        </trans-unit>
        <trans-unit id="92231a723d666abf2e0515fe89875cdd0c0b4c06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt; - Telnet Protocol Specification</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 854-&lt;/strong&gt;&lt;/a&gt; 텔넷 프로토콜 사양</target>
        </trans-unit>
        <trans-unit id="7887d546eeabec0e105ccf7f727ba43898f7f891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://udrepper.livejournal.com/20407.html&quot;&gt;Secure File Descriptor Handling&lt;/a&gt; for a more thorough explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2997014b6331d71544797ea559eb475d887cf356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag.html&quot;&gt;Bag class&lt;/a&gt; in Smalltalk.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag.html&quot;&gt;&lt;/a&gt;스몰 토크의 가방 클래스 .</target>
        </trans-unit>
        <trans-unit id="ca333b452a6f6ad9479e61688b44c83e66b2f329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0205&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 205&lt;/strong&gt;&lt;/a&gt; - Weak References</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0205&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 205-&lt;/strong&gt;&lt;/a&gt; 약한 참조</target>
        </trans-unit>
        <trans-unit id="b4fe7528c8156746e406c2ac6e58ee9fc9d93bcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0205&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 205&lt;/strong&gt;&lt;/a&gt; - Weak References</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0205&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 205-&lt;/strong&gt;&lt;/a&gt; 약한 참조</target>
        </trans-unit>
        <trans-unit id="8dc59a0ced5900b2e0fc8257399fd996d42b214d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0227&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 227&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Statically Nested Scopes&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0227&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 227&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 정적으로 중첩 된 범위&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fc77793cecde5a543e0db0673f3c52092ab38e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0238&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 238&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Changing the Division Operator&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0238&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 238&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 부서 운영자 변경&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d23c8c96ea300affa52210b556f0d113aa4e288e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt; - Database API Specification 2.0</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249-&lt;/strong&gt;&lt;/a&gt; 데이터베이스 API 사양 2.0</target>
        </trans-unit>
        <trans-unit id="a261a7bc3be8329f4554d33ffab231451eecac8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0255&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 255&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Simple Generators&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0255&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 255&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 간단한 발전기&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca87799777d83fcc80dd280ebf04217823b3b872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0273&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 273&lt;/strong&gt;&lt;/a&gt; - Import Modules from Zip Archives</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0273&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 273&lt;/strong&gt;&lt;/a&gt; -Zip 아카이브에서 모듈 가져 오기</target>
        </trans-unit>
        <trans-unit id="0a826a5fc15d66e239791e15fc7a5ea539b8b00c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 282&lt;/strong&gt;&lt;/a&gt; - A Logging System</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 282-&lt;/strong&gt;&lt;/a&gt; 로깅 시스템</target>
        </trans-unit>
        <trans-unit id="051b62a79f2a6ca35d8ab93113d42654c00e90c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; Finder that wraps Python&amp;rsquo;s &amp;ldquo;classic&amp;rdquo; import algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; Python의 &quot;클래식&quot;임포트 알고리즘을 래핑하는 파인더.</target>
        </trans-unit>
        <trans-unit id="02203b221e04b3e97a8385462160a696180220ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; - New Import Hooks</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 302-&lt;/strong&gt;&lt;/a&gt; 새로운 수입품 후크</target>
        </trans-unit>
        <trans-unit id="46e9af2b805434852d6c64cb60f8a2f13f0a1348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0305&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 305&lt;/strong&gt;&lt;/a&gt; - CSV File API</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0305&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 305&lt;/strong&gt;&lt;/a&gt; -CSV 파일 API</target>
        </trans-unit>
        <trans-unit id="6e3893c9afc4d9187a5bc54dad1bf0a7b2a99061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0324&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 324&lt;/strong&gt;&lt;/a&gt; &amp;ndash; PEP proposing the subprocess module</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0324&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 324&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 하위 프로세스 모듈을 제안하는 PEP</target>
        </trans-unit>
        <trans-unit id="98c7be39e17a82d560bd807822118cee8ff3b9d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Imports: Multi-Line and Absolute/Relative&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 수입 : 다중 라인 및 절대 / 상대&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81e717daefa9a631788b771e5e9d3eed65dd92d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0338&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 338&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Executing modules as scripts</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0338&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 338&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 스크립트로 모듈 실행</target>
        </trans-unit>
        <trans-unit id="941a1390d7f9db0451e737c32f078b657c6c8538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt; - The &amp;ldquo;with&amp;rdquo; statement</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 343-&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;with&amp;rdquo;진술</target>
        </trans-unit>
        <trans-unit id="7c34d49ebba57ec85cc86e53ce3e68deb4103b2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;The &amp;ldquo;with&amp;rdquo; Statement&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0343&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 343&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; &amp;ldquo;with&amp;rdquo;진술&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3619488188183a462dc07db0d7fa06f7d278cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0362&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 362&lt;/strong&gt;&lt;/a&gt; - Function Signature Object.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0362&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 362-&lt;/strong&gt;&lt;/a&gt; 기능 서명 객체.</target>
        </trans-unit>
        <trans-unit id="178e6e7e9f9ce0db7e34c0551fbbad9d7f57aae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0366&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 366&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Main module explicit relative imports</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0366&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 366&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 메인 모듈 명시 적 상대 수입</target>
        </trans-unit>
        <trans-unit id="748813b22d464cb9ebc56cb0a92b733a8beb0403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0370&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 370&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Per user site-packages directory</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0370&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 370&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 사용자 별 사이트 패키지 디렉토리</target>
        </trans-unit>
        <trans-unit id="f764945475d3fac04119a7e3a1fe116e2f0c1cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0370&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 370&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Per user site-packages directory</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0370&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 370&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 사용자 별 사이트 패키지 디렉토리</target>
        </trans-unit>
        <trans-unit id="8d70761bbd86b1b7016ca525d7aeae7e4d4b458c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0428&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 428&lt;/strong&gt;&lt;/a&gt;: The pathlib module &amp;ndash; object-oriented filesystem paths.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0428&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 428&lt;/strong&gt;&lt;/a&gt; : pathlib 모듈 &amp;ndash; 객체 지향 파일 시스템 경로.</target>
        </trans-unit>
        <trans-unit id="3f7110568fad512fa5780c55042b2f04843328c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt; &amp;ndash; A ModuleSpec Type for the Import System</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0451&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 451&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 수입 시스템을위한 ModuleSpec 유형</target>
        </trans-unit>
        <trans-unit id="20e132673e36b31e8ac7714a79104ab9b9415307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0453&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 453&lt;/strong&gt;&lt;/a&gt;: Explicit bootstrapping of pip in Python installations</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0453&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 453&lt;/strong&gt;&lt;/a&gt; : Python 설치에서 pip의 명시 적 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="c1130bebe3a0585ac85f5e9f1c5c6bb8f4b0d455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0461&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP 461&lt;/strong&gt;&lt;/a&gt; - Adding % formatting to bytes and bytearray</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0461&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP&lt;/strong&gt;&lt;/a&gt; 461-바이트 및 바이트 배열에 % 서식 추가</target>
        </trans-unit>
        <trans-unit id="e5d0c1e18b37370ab4d497976162d7fb4d6c66a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;StopIteration handling inside generators&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 발전기 내부의 StopIteration 처리&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2af95db1d1cd9ae8a0fbf3b81ac9c648788b6dee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0485&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 485&lt;/strong&gt;&lt;/a&gt; &amp;ndash; A function for testing approximate equality</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0485&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 485&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 근사 평등을 테스트하는 기능</target>
        </trans-unit>
        <trans-unit id="ec713f10ae73b9fa7f3645c578a7c4270c4dd0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt; allows to solve this problem by allowing users to write the above code without explicit base classes in the class definition, allowing &lt;code&gt;Bucket&lt;/code&gt; to be implicitly considered a subtype of both &lt;code&gt;Sized&lt;/code&gt; and &lt;code&gt;Iterable[int]&lt;/code&gt; by static type checkers. This is known as &lt;em&gt;structural subtyping&lt;/em&gt; (or static duck-typing):</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt; 는 사용자가 클래스 정의에서 명시 적 기본 클래스없이 위의 코드를 작성할 수있게하여이 문제를 해결할 수있게하여 정적 유형 검사기에 의해 &lt;code&gt;Bucket&lt;/code&gt; 이 암시 적으로 &lt;code&gt;Sized&lt;/code&gt; 및 &lt;code&gt;Iterable[int]&lt;/code&gt; 의 하위 유형으로 간주되도록합니다. 이것을&lt;em&gt; 구조적 서브&lt;/em&gt; 타이핑 (또는 정적 오리 타이핑)이라고합니다.</target>
        </trans-unit>
        <trans-unit id="e00e989e8742b681d096ba52d3dd34807cb6b9ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 560&lt;/strong&gt;&lt;/a&gt; - Core support for typing module and generic types</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0560&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 560-&lt;/strong&gt;&lt;/a&gt; 입력 모듈 및 일반 유형에 대한 핵심 지원</target>
        </trans-unit>
        <trans-unit id="1b82fe6ab8a040fffaf280536a51891c355e27a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0563&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 563&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Postponed evaluation of annotations&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0563&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 563&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 주석의 평가 연기&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="613dae09e386bcc977ae60723e29ca275ba30b5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; &amp;ndash; Pickle protocol 5 with out-of-band data</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 대역 외 데이터가 포함 된 피클 프로토콜 5</target>
        </trans-unit>
        <trans-unit id="3ecccac8ede47abaa7dbbfcb89830b5aa2a945ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0585&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;PEP 585&lt;/strong&gt;&lt;/a&gt; &amp;ndash; &amp;ldquo;Type Hinting Generics In Standard Collections&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0585&quot; id=&quot;index-55&quot;&gt;&lt;strong&gt;PEP 585&lt;/strong&gt;&lt;/a&gt; &amp;ndash; &quot;표준 컬렉션의 유형 힌팅 제네릭&quot;</target>
        </trans-unit>
        <trans-unit id="47179477580a520814c523dfb86f18bf02ea5c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3105&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 3105&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Make print a function&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3105&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 3105&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; 인쇄 기능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a51b7160a63fe7afc1d77480a8fb978d81a6dfe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3112&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 3112&lt;/strong&gt;&lt;/a&gt;: &lt;em&gt;Bytes literals in Python 3000&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3112&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 3112&lt;/strong&gt;&lt;/a&gt; :&lt;em&gt; Python 3000의 리터럴 바이트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c9007d2cd5c49c5329d51b96d3cc78ad406a8ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3115&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3115&lt;/strong&gt;&lt;/a&gt; - Metaclasses in Python 3000</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3115&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3115&lt;/strong&gt;&lt;/a&gt; -Python 3000의 메타 클래스</target>
        </trans-unit>
        <trans-unit id="f410a6cabc34a30a1ffe7520737a16af07da51a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3148&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3148&lt;/strong&gt;&lt;/a&gt; &amp;ndash; futures - execute computations asynchronously</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3148&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3148&lt;/strong&gt;&lt;/a&gt; &amp;ndash; 선물-계산을 비동기 적으로 실행</target>
        </trans-unit>
        <trans-unit id="99453e2ebc2f0aed1e20b622460c129335ca434f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt; - Reworking the OS and IO exception hierarchy</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3151&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 3151&lt;/strong&gt;&lt;/a&gt; -OS 및 IO 예외 계층 구조 재 작업</target>
        </trans-unit>
        <trans-unit id="569979da6c6cd11e3da222a0aaf7a0c5f5171951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/xml-c14n2/&quot;&gt;C14N 2.0&lt;/a&gt; transformation function.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xml-c14n2/&quot;&gt;C14N 2.0&lt;/a&gt; 변환 기능.</target>
        </trans-unit>
        <trans-unit id="c45f391af5bee850de0de58d21ca059d8e1d2abc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=Iq9DzN6mvYA&quot;&gt;Statistics for Hackers&lt;/a&gt; a video tutorial by &lt;a href=&quot;https://us.pycon.org/2016/speaker/profile/295/&quot;&gt;Jake Vanderplas&lt;/a&gt; on statistical analysis using just a few fundamental concepts including simulation, sampling, shuffling, and cross-validation.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=Iq9DzN6mvYA&quot;&gt;Hackers for Statistics는&lt;/a&gt; 시뮬레이션, 샘플링, 셔플 링 및 교차 검증을 포함한 몇 가지 기본 개념을 사용하여 통계 분석에 대한 &lt;a href=&quot;https://us.pycon.org/2016/speaker/profile/295/&quot;&gt;Jake Vanderplas&lt;/a&gt; 의 비디오 자습서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a21d2c535a28214be3e063189cfdeed63ec97635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;logging#logging.captureWarnings&quot;&gt;&lt;code&gt;logging.captureWarnings()&lt;/code&gt;&lt;/a&gt; allows you to handle all warnings with the standard logging infrastructure.</source>
          <target state="translated">&lt;a href=&quot;logging#logging.captureWarnings&quot;&gt; &lt;code&gt;logging.captureWarnings()&lt;/code&gt; &lt;/a&gt; 사용하면 표준 로깅 인프라로 모든 경고를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="ec75c39fa91eb692b05d8aecfaeeb4234dfd05db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; cannot be used to serialize user-defined classes and their instances. &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; can save and restore class instances transparently, however the class definition must be importable and live in the same module as when the object was stored.</source>
          <target state="translated">&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 은 사용자 정의 클래스 및 해당 인스턴스를 직렬화하는 데 사용할 수 없습니다. &lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 은 클래스 인스턴스를 투명하게 저장 및 복원 할 수 있지만 클래스 정의는 가져 오기 가능해야하며 오브젝트가 저장된 시점과 동일한 모듈에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="810813a2a6ef64fa346e6382c9cc8c21810d8552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;nntplib#nntplib.NNTP&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;nntplib#nntplib.NNTP_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;nntplib#nntplib.NNTP&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;nntplib#nntplib.NNTP_SSL&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c292eef2d42b700d03cb8c7e5fc919bad3e41996" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.chdir&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchdir&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.chdir&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchdir&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="314d34fc23ef2b428f9bd3dab2da25daa53ea930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.chflags&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.lchflags&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.chflags&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.lchflags&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9586fb74547f07eee2b216a261ee43b2c731a099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.chmod&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchmod&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.lchmod&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.chmod&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchmod&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.lchmod&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f288601fd4f7b909b3bb3c5e7adfbc475ea21ac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.chown&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchown&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.lchown&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.chown&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.fchown&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.lchown&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c80eef3afaa243287bc76e5657b6c88d515b4a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.fsencode&quot;&gt;&lt;code&gt;os.fsencode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.fsdecode&quot;&gt;&lt;code&gt;os.fsdecode()&lt;/code&gt;&lt;/a&gt; should be used to ensure that the correct encoding and errors mode are used.</source>
          <target state="translated">&lt;a href=&quot;os#os.fsencode&quot;&gt; &lt;code&gt;os.fsencode()&lt;/code&gt; &lt;/a&gt;올바른 인코딩 및 오류 모드를 사용하려면 os.fsencode () 및&lt;a href=&quot;os#os.fsdecode&quot;&gt; &lt;code&gt;os.fsdecode()&lt;/code&gt; &lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9d55c45a7d82ed90e788e0e98f9e9eddc50fa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.ftruncate&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.truncate&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.ftruncate&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.truncate&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d70d281c539aa4024d9e3b9400b1858b9db77e80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.makedirs&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.mkdir&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.makedirs&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.mkdir&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cc713cad8f7be1182dfd0722114f9ef91e9221d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt; has a coarser granularity. &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; gives system-dependent version information.</source>
          <target state="translated">&lt;a href=&quot;os#os.name&quot;&gt; &lt;code&gt;os.name&lt;/code&gt; &lt;/a&gt; 은 더 세분화됩니다. &lt;a href=&quot;os#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; &lt;/a&gt; 은 시스템 종속 버전 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="36e947e412c283e75b598e7409f4b1c9685da8a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.posix_spawn&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.posix_spawnp&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.posix_spawn&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.posix_spawnp&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e964f9d1cb7ef11f47617f5d23a8b484848e9ef8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.remove&quot;&gt;&lt;code&gt;os.remove()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.remove&quot;&gt; &lt;code&gt;os.remove()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;os#os.unlink&quot;&gt; &lt;code&gt;os.unlink()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="501c978b45bdbbad893de82f8e28c45ab8dbf95c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.remove&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.removedirs&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.unlink&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.remove&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.removedirs&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.unlink&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e427d6a0d73e35c63e397b0738f79acd443b05b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;os#os.rename&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.renames&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.replace&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;os#os.rename&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;os#os.renames&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;os#os.replace&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04abba0bc1284e4b264bbf9685a7632fefc22a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#poplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#poplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3eb766819b8aa1c1b528562e2f44c468df4fc092" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#popplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;poplib#poplib.POP3&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;poplib#popplib.POP3_SSL&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce09066e50c9c7dfd5b56dc2d782e3b98b0211ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt;: the Expat parser binding</source>
          <target state="translated">&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt; : Expat 파서 바인딩</target>
        </trans-unit>
        <trans-unit id="ffade159d98dab01253c095070b2760cad96ea1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quopri#quopri.encode&quot;&gt;&lt;code&gt;quopri.encode()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;quotetabs=True&lt;/code&gt; / &lt;a href=&quot;quopri#quopri.decode&quot;&gt;&lt;code&gt;quopri.decode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;quopri#quopri.encode&quot;&gt; &lt;code&gt;quopri.encode()&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;quotetabs=True&lt;/code&gt; /의&lt;a href=&quot;quopri#quopri.decode&quot;&gt; &lt;code&gt;quopri.decode()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3adae86809f19ae252a9f479634d7c1053d13611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="translated">&lt;a href=&quot;select#select.devpoll&quot;&gt; &lt;code&gt;select.devpoll()&lt;/code&gt; &lt;/a&gt; 기반 선택기</target>
        </trans-unit>
        <trans-unit id="eb41febd30644c7b7caf0418956f23aa56245d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="translated">&lt;a href=&quot;select#select.epoll&quot;&gt; &lt;code&gt;select.epoll()&lt;/code&gt; &lt;/a&gt; 기반 선택기</target>
        </trans-unit>
        <trans-unit id="390866a4dd99e2aece0c63cb9f5211edc9876ddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="translated">&lt;a href=&quot;select#select.kqueue&quot;&gt; &lt;code&gt;select.kqueue()&lt;/code&gt; &lt;/a&gt; 기반 선택기</target>
        </trans-unit>
        <trans-unit id="297f30e13184596902e4879af3db28edec5db8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;select.poll()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="translated">&lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;select.poll()&lt;/code&gt; &lt;/a&gt; 기반 선택기</target>
        </trans-unit>
        <trans-unit id="2f9fb0622b05a691ca5620febca29e99f609e23a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt;-based selector.</source>
          <target state="translated">&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select.select()&lt;/code&gt; &lt;/a&gt; 기반 선택기</target>
        </trans-unit>
        <trans-unit id="a46a00e2feca8319187af58c6969f3ea962731a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt; is used to wait on socket events: it supports sockets and is limited to 512 sockets.</source>
          <target state="translated">&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt; &lt;code&gt;SelectSelector&lt;/code&gt; &lt;/a&gt; 는 소켓 이벤트를 기다리는 데 사용됩니다. 소켓을 지원하며 512 개의 소켓으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="d30a94b8ed9ed4643c41c7ecd3c717d593a4e233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shlex#shlex.split&quot;&gt;&lt;code&gt;shlex.split()&lt;/code&gt;&lt;/a&gt; can be useful when determining the correct tokenization for &lt;em&gt;args&lt;/em&gt;, especially in complex cases:</source>
          <target state="translated">&lt;a href=&quot;shlex#shlex.split&quot;&gt; &lt;code&gt;shlex.split()&lt;/code&gt; &lt;/a&gt; 은특히 복잡한 경우에&lt;em&gt; args&lt;/em&gt; 에대한 올바른 토큰 화를 결정할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="700d907e86c40dc83013f74ceba55d6198522490" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shutil#shutil.copy&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copy2&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copyfile&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shutil#shutil.copy&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copy2&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copyfile&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4422925fffe76f92a70544df7c92514a6ac4dd37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shutil#shutil.copy&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copymode&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shutil#shutil.copy&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copymode&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ac32d2d6faa2a776eae94ac53e57f478692cdff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shutil#shutil.copy2&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copystat&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shutil#shutil.copy2&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;shutil#shutil.copystat&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0f2596e55366f422ec33695d731b29283a56c42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shutil#shutil.get_terminal_size&quot;&gt;&lt;code&gt;shutil.get_terminal_size()&lt;/code&gt;&lt;/a&gt; is the high-level function which should normally be used, &lt;code&gt;os.get_terminal_size&lt;/code&gt; is the low-level implementation.</source>
          <target state="translated">&lt;a href=&quot;shutil#shutil.get_terminal_size&quot;&gt; &lt;code&gt;shutil.get_terminal_size()&lt;/code&gt; &lt;/a&gt; 는 일반적으로 사용해야하는 고급 기능이며 &lt;code&gt;os.get_terminal_size&lt;/code&gt; 는 저수준 구현입니다.</target>
        </trans-unit>
        <trans-unit id="29d6741e04db1db2a93d80e0f730bfa7d1e40e06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.gethostbyname&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.gethostbyname_ex&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#socket.gethostbyname&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.gethostbyname_ex&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4b883628f83c5113dd8f737b5e20b61f3a7accb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.connect&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.socket.connect_ex&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.connect&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;socket#socket.socket.connect_ex&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd3746afe00d119a5feb0805c21c8e45a2f5de2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt;&lt;code&gt;getpeername()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt;&lt;code&gt;getsockname()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt; &lt;code&gt;getpeername()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt; &lt;code&gt;getsockname()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b741436ba8e3f366ddb99bc7c27874600df437b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.getsockopt&quot;&gt;&lt;code&gt;getsockopt()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.setsockopt&quot;&gt;&lt;code&gt;setsockopt()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.getsockopt&quot;&gt; &lt;code&gt;getsockopt()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.setsockopt&quot;&gt; &lt;code&gt;setsockopt()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55213ec1e1fdbb5c8fcf1a31a268ded1ef20b094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.gettimeout&quot;&gt;&lt;code&gt;gettimeout()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.setblocking&quot;&gt;&lt;code&gt;setblocking()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.gettimeout&quot;&gt; &lt;code&gt;gettimeout()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.setblocking&quot;&gt; &lt;code&gt;setblocking()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06aa776f2c887132d0fee84106fe2965c2a020fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt;&lt;code&gt;recv_into()&lt;/code&gt;&lt;/a&gt; (but passing a non-zero &lt;code&gt;flags&lt;/code&gt; argument is not allowed)</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.recv_into&quot;&gt; &lt;code&gt;recv_into()&lt;/code&gt; &lt;/a&gt; (0이 아닌 &lt;code&gt;flags&lt;/code&gt; 인수를전달하는것은 허용되지 않음)</target>
        </trans-unit>
        <trans-unit id="3e2f14cb3d1075bc57b56e796ed6cf10f474093c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#socket.socket.sendall&quot;&gt;&lt;code&gt;sendall()&lt;/code&gt;&lt;/a&gt; (with the same limitation)</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;socket#socket.socket.sendall&quot;&gt; &lt;code&gt;sendall()&lt;/code&gt; &lt;/a&gt; (동일한 제한)</target>
        </trans-unit>
        <trans-unit id="f3b408f4644db3ec46a296456785a822e6a3a014" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#socket.socket.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt; (but &lt;a href=&quot;os#os.sendfile&quot;&gt;&lt;code&gt;os.sendfile&lt;/code&gt;&lt;/a&gt; will be used for plain-text sockets only, else &lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; will be used)</source>
          <target state="translated">&lt;a href=&quot;socket#socket.socket.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; &lt;/a&gt; (그러나&lt;a href=&quot;os#os.sendfile&quot;&gt; &lt;code&gt;os.sendfile&lt;/code&gt; &lt;/a&gt; 은 일반 텍스트 소켓에만 사용되며 그렇지 않으면&lt;a href=&quot;socket#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt; 가 사용됨)</target>
        </trans-unit>
        <trans-unit id="f22da6cfc46ec701d72e4375f4e304037d4b7b95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. Keys must be strings, values may be any conformable type. Objects of user-defined classes can be passed in; only their &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute is transmitted.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; . 키는 문자열이어야하며 값은 적합한 유형일 수 있습니다. 사용자 정의 클래스의 객체를 전달할 수 있습니다. &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt; 속성만전송됩니다.</target>
        </trans-unit>
        <trans-unit id="c9deaeaaa8d99b0baafdf1aa1f364e3b0aee28f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#int.bit_length&quot;&gt;&lt;code&gt;int.bit_length()&lt;/code&gt;&lt;/a&gt; returns the number of bits necessary to represent an integer in binary, excluding the sign and leading zeros.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#int.bit_length&quot;&gt; &lt;code&gt;int.bit_length()&lt;/code&gt; &lt;/a&gt; 는 부호와 선행 0을 제외하고 2 진수로 정수를 나타내는 데 필요한 비트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="16d0d0ad607177dda255fa0fc96b8b4eb910bbe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; containing conformable elements. Arrays are returned as &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;lists&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;적합한 요소를 포함하는 목록 또는&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt; . 배열은&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;lists&lt;/code&gt; &lt;/a&gt; 로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2321ffb1bb6a068fa9572248cd83245998d6bbdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="c4ac5aaa5d766c3927bce838558d7914db8d5946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook()&lt;/code&gt;&lt;/a&gt; handles uncaught exceptions.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.excepthook&quot;&gt; &lt;code&gt;sys.excepthook()&lt;/code&gt; &lt;/a&gt; 은 포착되지 않은 예외를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="4efdf2b661d7872d5dca935e7c425cbbb69cdeae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt; has a finer granularity. &lt;a href=&quot;#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; gives system-dependent version information.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt; 은 더 세분화되어 있습니다. &lt;a href=&quot;#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; &lt;/a&gt; 은 시스템 종속 버전 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e349ca194ba338a7186a5a0fd71a2e000703a884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tempfile#tempfile.NamedTemporaryFile&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.TemporaryFile&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tempfile#tempfile.NamedTemporaryFile&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.TemporaryFile&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53ff0d968044dc6e1640a86bbe5df5ac30f388fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tempfile#tempfile.TemporaryDirectory&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tempfile#tempfile.TemporaryDirectory&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a0545558c81a57984ae85e70759794f35b11e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threading#threading.Lock&quot;&gt;&lt;code&gt;threading.Lock&lt;/code&gt;&lt;/a&gt; is an example of a reusable, but not reentrant, context manager (for a reentrant lock, it is necessary to use &lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="translated">&lt;a href=&quot;threading#threading.Lock&quot;&gt; &lt;code&gt;threading.Lock&lt;/code&gt; &lt;/a&gt; 은 재사용 가능하지만 재진입 할 ​​수없는 컨텍스트 관리자의 예입니다 (재진입 자 잠금의 경우&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; 을&lt;/a&gt; 대신사용해야 함).</target>
        </trans-unit>
        <trans-unit id="e8f6030a669fd3028bef35eef93b3ec76f516f27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;threading#threading.RLock&quot;&gt;&lt;code&gt;threading.RLock&lt;/code&gt;&lt;/a&gt; is an example of a reentrant context manager, as are &lt;a href=&quot;#contextlib.suppress&quot;&gt;&lt;code&gt;suppress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt;&lt;code&gt;redirect_stdout()&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a very simple example of reentrant use:</source>
          <target state="translated">&lt;a href=&quot;threading#threading.RLock&quot;&gt; &lt;code&gt;threading.RLock&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#contextlib.suppress&quot;&gt; &lt;code&gt;suppress()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt; &lt;code&gt;redirect_stdout()&lt;/code&gt; &lt;/a&gt; 과같이 재진입 컨텍스트 관리자의 예입니다. 재진입 사용의 매우 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c33ba6f0fc14483f345463f0c5e7dae3d3fe2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;types.MappingProxyType&lt;/code&gt;&lt;/a&gt; can be used to create a read-only view of a &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;types#types.MappingProxyType&quot;&gt; &lt;code&gt;types.MappingProxyType&lt;/code&gt; &lt;/a&gt; 을 사용하여&lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 의 읽기 전용보기를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b8524c6d03751a305eaa45610863b2f7211d7d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typing#generics&quot;&gt;Generics&lt;/a&gt; &amp;ndash; Generics in the &lt;a href=&quot;typing#module-typing&quot;&gt;&lt;code&gt;typing&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;typing#generics&quot;&gt;Generics&lt;/a&gt; &amp;ndash; &lt;a href=&quot;typing#module-typing&quot;&gt; &lt;code&gt;typing&lt;/code&gt; &lt;/a&gt; 모듈의 Generics .</target>
        </trans-unit>
        <trans-unit id="858d41006255d2dab84484fde929c8be724bdb9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.error#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; containing the exceptions raised by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;urllib.error#module-urllib.error&quot;&gt; &lt;code&gt;urllib.error&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 에&lt;/a&gt; 의해 발생한 예외를 포함하는 urllib.error</target>
        </trans-unit>
        <trans-unit id="a34e6744582f9ff95c47077e763c19b6d9e7808d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.parse#module-urllib.parse&quot;&gt;&lt;code&gt;urllib.parse&lt;/code&gt;&lt;/a&gt; for parsing URLs</source>
          <target state="translated">&lt;a href=&quot;urllib.parse#module-urllib.parse&quot;&gt; &lt;code&gt;urllib.parse&lt;/code&gt; &lt;/a&gt;URL 구문 분석을위한 urllib.parse</target>
        </trans-unit>
        <trans-unit id="fc2f4abe2283da2dea1b9a97b6158c4a7957591d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; for opening and reading URLs</source>
          <target state="translated">&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;URL 열기 및 읽기를위한 urllib.request</target>
        </trans-unit>
        <trans-unit id="982d428fefa8db1012560beb05ab8ab2b7f2f5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;urllib.robotparser#module-urllib.robotparser&quot;&gt;&lt;code&gt;urllib.robotparser&lt;/code&gt;&lt;/a&gt; for parsing &lt;code&gt;robots.txt&lt;/code&gt; files</source>
          <target state="translated">&lt;a href=&quot;urllib.robotparser#module-urllib.robotparser&quot;&gt; &lt;code&gt;urllib.robotparser&lt;/code&gt; &lt;/a&gt; &lt;code&gt;robots.txt&lt;/code&gt; 파일을 구문 분석하기위한 urllib.robotparser</target>
        </trans-unit>
        <trans-unit id="d6e026fbe9f0b9f7fbc3aeb844ac3270c22b5d5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uu#uu.encode&quot;&gt;&lt;code&gt;uu.encode()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;uu#uu.decode&quot;&gt;&lt;code&gt;uu.decode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;uu#uu.encode&quot;&gt; &lt;code&gt;uu.encode()&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;uu#uu.decode&quot;&gt; &lt;code&gt;uu.decode()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9bdb7db3e33161cd85f1cae2db2671834855e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b598f461b8764514a4fd968ddddea755d372f081" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.OpenKey&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;winreg#winreg.CreateKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.CreateKeyEx&quot;&gt;[2]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.OpenKey&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c03e0985f555c8d2f417ed24be37f51c6d3d58a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.DeleteKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.DeleteKeyEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;winreg#winreg.DeleteKey&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.DeleteKeyEx&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a3dfee327cbfd46dfef0cddbc865bdc9b9fb0fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.QueryValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.QueryValueEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;winreg#winreg.QueryValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.QueryValueEx&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4351c64126895bf6ae87fe9664e2b9a03c6a8d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;winreg#winreg.SetValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.SetValueEx&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;winreg#winreg.SetValue&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;winreg#winreg.SetValueEx&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3f3d8c5d16862412a24ff59b3e0066d16b4925e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt;: the DOM API definition</source>
          <target state="translated">&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt; : DOM API 정의</target>
        </trans-unit>
        <trans-unit id="8b7eb6111a53c57116d135b2e2c76d97d18c3d5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t expand external entities and simply returns the unexpanded entity verbatim.</source>
          <target state="translated">&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt; 은 외부 엔터티를 확장하지 않고 단순히 확장되지 않은 엔터티를 그대로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c7350437ca1f5220157e6b6c94aef6977c57f498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;: a minimal DOM implementation</source>
          <target state="translated">&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt; : 최소한의 DOM 구현</target>
        </trans-unit>
        <trans-unit id="c9c0a0caab9909d8656fb26b537078ed9c73a705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.dom.pulldom#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt;: support for building partial DOM trees</source>
          <target state="translated">&lt;a href=&quot;xml.dom.pulldom#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; &lt;/a&gt; : 부분 DOM 트리 작성 지원</target>
        </trans-unit>
        <trans-unit id="30c349cb0a1157e41c1da350a0b98b46b42db13f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t expand external entities and raises a &lt;code&gt;ParserError&lt;/code&gt; when an entity occurs.</source>
          <target state="translated">&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt; 는 외부 엔터티를 확장하지 않으며엔터티가 발생할 때 &lt;code&gt;ParserError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="77a96522ee3a2ec3433d5a7e97559c5d7565dbe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt;: the ElementTree API, a simple and lightweight XML processor</source>
          <target state="translated">&lt;a href=&quot;xml.etree.elementtree#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt; : 단순하고 가벼운 XML 프로세서 인 ElementTree API</target>
        </trans-unit>
        <trans-unit id="2256a2cead20aa9a237e985a735a66a67c577de2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt;: SAX2 base classes and convenience functions</source>
          <target state="translated">&lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt; : SAX2 기본 클래스 및 편의 기능</target>
        </trans-unit>
        <trans-unit id="5d4fa144bc90b123938dad99cff9728e3ca81cce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zlib#zlib.compress&quot;&gt;&lt;code&gt;zlib.compress()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;zlib#zlib.decompress&quot;&gt;&lt;code&gt;zlib.decompress()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;zlib#zlib.compress&quot;&gt; &lt;code&gt;zlib.compress()&lt;/code&gt; &lt;/a&gt; /&lt;a href=&quot;zlib#zlib.decompress&quot;&gt; &lt;code&gt;zlib.decompress()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24e9072c39ad0c9e9606f1826136aa782939eb5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Infinity&quot;&lt;/code&gt;, indicating that the operand is positive infinity.</source>
          <target state="translated">&lt;code&gt;&quot;+Infinity&quot;&lt;/code&gt; - 피연산자가 양의 무한대임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1951da6521c3d85b8643731d9e9bd73f20b00fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Normal&quot;&lt;/code&gt;, indicating that the operand is a positive normal number.</source>
          <target state="translated">&lt;code&gt;&quot;+Normal&quot;&lt;/code&gt; , 피연산자가 양의 정규수임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f659260ee5a8588a77add5a723786a48fa162b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Subnormal&quot;&lt;/code&gt;, indicating that the operand is positive and subnormal.</source>
          <target state="translated">&lt;code&gt;&quot;+Subnormal&quot;&lt;/code&gt; , 피연산자가 양수이고 아수 이하 임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c9903c84dd946ed2f4694d827df9240ac054b181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+Zero&quot;&lt;/code&gt;, indicating that the operand is a positive zero.</source>
          <target state="translated">&lt;code&gt;&quot;+Zero&quot;&lt;/code&gt; - 피연산자가 양의 0임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fd2993831a009c6ec1a779810c5d0367d3dc9f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Infinity&quot;&lt;/code&gt;, indicating that the operand is negative infinity.</source>
          <target state="translated">&lt;code&gt;&quot;-Infinity&quot;&lt;/code&gt; - 피연산자가 음의 무한대임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ca4322f2d2cbc0444dd2596532b76037add251e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Normal&quot;&lt;/code&gt;, indicating that the operand is a negative normal number.</source>
          <target state="translated">&lt;code&gt;&quot;-Normal&quot;&lt;/code&gt; , 피연산자가 음의 일반 숫자임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c6c130284e564cc546daf1e016cd10a136e0bd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Subnormal&quot;&lt;/code&gt;, indicating that the operand is negative and subnormal.</source>
          <target state="translated">&lt;code&gt;&quot;-Subnormal&quot;&lt;/code&gt; , 피연산자가 음수이고 아수 이하 임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="490d50fabdcb7247eefeccbdd8fbd2f83167330d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;-Zero&quot;&lt;/code&gt;, indicating that the operand is a negative zero.</source>
          <target state="translated">&lt;code&gt;&quot;-Zero&quot;&lt;/code&gt; 는 피연산자가 음의 0임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cfd5e472a203450bddf8941e6e9938355cdb0dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;NaN&quot;&lt;/code&gt;, indicating that the operand is a quiet NaN (Not a Number).</source>
          <target state="translated">&lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 은 피연산자가 조용한 NaN (숫자가 아님)임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5149b13db72dd7538bcb3e2d43fed1d6a9302ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_call&quot;&lt;/code&gt;: A C function is about to be called.</source>
          <target state="translated">&lt;code&gt;&quot;c_call&quot;&lt;/code&gt; : AC 기능을 호출하려고합니다.</target>
        </trans-unit>
        <trans-unit id="c9f850032fccc4e2f600160adaf810930373db55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_exception&quot;&lt;/code&gt;: A C function has raised an exception.</source>
          <target state="translated">&lt;code&gt;&quot;c_exception&quot;&lt;/code&gt; : AC 기능에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="ef51cfa438b2edcb5d80969e5b1a83d6f7feb8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c_return&quot;&lt;/code&gt;: A C function has returned.</source>
          <target state="translated">&lt;code&gt;&quot;c_return&quot;&lt;/code&gt; : AC 기능이 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="13d11c8adc043fef07049ef349bae55e4c237013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;call&quot;&lt;/code&gt;: A function is about to be called, or another code block entered.</source>
          <target state="translated">&lt;code&gt;&quot;call&quot;&lt;/code&gt; : 함수를 호출 하려고하거나 다른 코드 블록을 입력했습니다.</target>
        </trans-unit>
        <trans-unit id="0d4fda3e2b73c4d3e435939a6437b66fe22659f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;exception&quot;&lt;/code&gt;: An exception has occurred.</source>
          <target state="translated">&lt;code&gt;&quot;exception&quot;&lt;/code&gt; : 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="581820441b319714d83f79664e50991f7cd7ed9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;line&quot;&lt;/code&gt;: A new line of code is going to be executed.</source>
          <target state="translated">&lt;code&gt;&quot;line&quot;&lt;/code&gt; : 새로운 코드 줄이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="da79f882f184e36d724a407e22f35c65b8ce1417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;return&quot;&lt;/code&gt;: A function or other code block is about to return.</source>
          <target state="translated">&lt;code&gt;&quot;return&quot;&lt;/code&gt; : 함수 또는 다른 코드 블록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1571ed4da272eb9723ba6dd563f449277ad28a2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;sNaN&quot;&lt;/code&gt;, indicating that the operand is a signaling NaN.</source>
          <target state="translated">&lt;code&gt;&quot;sNaN&quot;&lt;/code&gt; 은 피연산자가 신호 NaN임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96bd9332932e72892b5a94af5cc385b29080a9b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$$&lt;/code&gt; is an escape; it is replaced with a single &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$$&lt;/code&gt; 는 탈출입니다. 단일 &lt;code&gt;$&lt;/code&gt; 로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="58c3ae6b727dcde667cdf1622e19078707b7d853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$identifier&lt;/code&gt; names a substitution placeholder matching a mapping key of &lt;code&gt;&quot;identifier&quot;&lt;/code&gt;. By default, &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; is restricted to any case-insensitive ASCII alphanumeric string (including underscores) that starts with an underscore or ASCII letter. The first non-identifier character after the &lt;code&gt;$&lt;/code&gt; character terminates this placeholder specification.</source>
          <target state="translated">&lt;code&gt;$identifier&lt;/code&gt; 는 &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; 의 매핑 키와 일치하는 대체 자리 표시 자의 이름을 지정합니다 . 기본적으로 &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; 는 밑줄 또는 ASCII 문자로 시작하는 대소 문자를 구분하지 않는 ASCII 영숫자 문자열 (밑줄 포함)로 제한됩니다. &lt;code&gt;$&lt;/code&gt; 문자 다음의 첫 번째 비 식별자 문자는 이 자리 표시 자 사양을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="edf8f663daf0d0f2e941a5b19996241f13e302eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;${identifier}&lt;/code&gt; is equivalent to &lt;code&gt;$identifier&lt;/code&gt;. It is required when valid identifier characters follow the placeholder but are not part of the placeholder, such as &lt;code&gt;&quot;${noun}ification&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;${identifier}&lt;/code&gt; 는 &lt;code&gt;$identifier&lt;/code&gt; 와 같습니다 . 유효한 식별자 문자가 자리 표시 자 뒤에 있지만 &lt;code&gt;&quot;${noun}ification&quot;&lt;/code&gt; 과 같이 자리 표시 자의 일부가 아닌 경우에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="f97c4fe051f32e6160e2bf6d58d4d837e9f89b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%e&lt;/code&gt;, &lt;code&gt;%E&lt;/code&gt;, &lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;%e&lt;/code&gt; , &lt;code&gt;%E&lt;/code&gt; , &lt;code&gt;%f&lt;/code&gt; , &lt;code&gt;%g&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70175f848a290b693762479c692a31c337f394ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%x&lt;/code&gt;, &lt;code&gt;%X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;%x&lt;/code&gt; , &lt;code&gt;%X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61b445480aa4640a8bb466019304a7fb70eea15e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_error()&lt;/code&gt; &amp;mdash; signal that the handler knows how to handle errors from (non-&lt;code&gt;http&lt;/code&gt;) &lt;em&gt;protocol&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_error()&lt;/code&gt; &amp;mdash; 핸들러가 ( &lt;code&gt;http&lt;/code&gt; 가 아닌 ) &lt;em&gt;프로토콜의&lt;/em&gt; 오류를 처리하는 방법을 알고 있음 &lt;em&gt;을 나타&lt;/em&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="ca48eefbfeae3f89f5c146aa6148d5e8d974f535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; &amp;mdash; signal that the handler knows how to open &lt;em&gt;protocol&lt;/em&gt; URLs.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; &amp;mdash; 핸들러가 &lt;em&gt;프로토콜&lt;/em&gt; URL 을 여는 방법을 알고 있음을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="f781fab33d9d24bde1831771d36d2f6af6bd7a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; &amp;mdash; signal that the handler knows how to pre-process &lt;em&gt;protocol&lt;/em&gt; requests.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; &amp;mdash; 핸들러가 &lt;em&gt;프로토콜&lt;/em&gt; 요청 을 사전 처리하는 방법을 알고 있음을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="8d9dec87328d966378084235e8fae7a70229713e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; &amp;mdash; signal that the handler knows how to post-process &lt;em&gt;protocol&lt;/em&gt; responses.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; &amp;mdash; 핸들러가 &lt;em&gt;프로토콜&lt;/em&gt; 응답 을 사후 처리하는 방법을 알고 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1d59ff2d2853b4f186f3440ece56364361ee42b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'*'&lt;/code&gt;. All command-line arguments present are gathered into a list. Note that it generally doesn&amp;rsquo;t make much sense to have more than one positional argument with &lt;code&gt;nargs='*'&lt;/code&gt;, but multiple optional arguments with &lt;code&gt;nargs='*'&lt;/code&gt; is possible. For example:</source>
          <target state="translated">&lt;code&gt;'*'&lt;/code&gt; . 존재하는 모든 명령 행 인수는 목록으로 수집됩니다. 그것은 일반적으로 훨씬 이해가되지 않습니다는 더 이상의 위치 인수해야하는 &lt;code&gt;nargs='*'&lt;/code&gt; 하지만, 여러 선택적 인수와 &lt;code&gt;nargs='*'&lt;/code&gt; 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1eee821c4ee558a62f1436e96b6536ee1c4f346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'+'&lt;/code&gt;. Just like &lt;code&gt;'*'&lt;/code&gt;, all command-line args present are gathered into a list. Additionally, an error message will be generated if there wasn&amp;rsquo;t at least one command-line argument present. For example:</source>
          <target state="translated">&lt;code&gt;'+'&lt;/code&gt; . &lt;code&gt;'*'&lt;/code&gt; 와 마찬가지로 존재하는 모든 명령 행 인수는 목록으로 수집됩니다. 또한 하나 이상의 명령 줄 인수가 없으면 오류 메시지가 생성됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7fdb1881997e9d4b21d64714a7c76b2c778dc110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'?'&lt;/code&gt;. One argument will be consumed from the command line if possible, and produced as a single item. If no command-line argument is present, the value from &lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt; will be produced. Note that for optional arguments, there is an additional case - the option string is present but not followed by a command-line argument. In this case the value from &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; will be produced. Some examples to illustrate this:</source>
          <target state="translated">&lt;code&gt;'?'&lt;/code&gt; . 가능한 경우 명령 행에서 하나의 인수가 사용되며 단일 항목으로 생성됩니다. 명령 줄 인수가 없으면 &lt;a href=&quot;#default&quot;&gt;기본값&lt;/a&gt; 의 값 이 생성됩니다. 선택적 인수의 경우 옵션 문자열이 있지만 명령 줄 인수가없는 추가 사례가 있습니다. 이 경우 &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; 의 값 이 생성됩니다. 이것을 설명하는 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="ae62ea0bfa937e66e84166a9e23a781c45613ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'\u'&lt;/code&gt;, &lt;code&gt;'\U'&lt;/code&gt;, and &lt;code&gt;'\N'&lt;/code&gt; escape sequences are only recognized in Unicode patterns. In bytes patterns they are errors. Unknown escapes of ASCII letters are reserved for future use and treated as errors.</source>
          <target state="translated">&lt;code&gt;'\u'&lt;/code&gt; , &lt;code&gt;'\U'&lt;/code&gt; 및 &lt;code&gt;'\N'&lt;/code&gt; 이스케이프 시퀀스는 유니 코드 패턴으로 만 인식됩니다. 바이트 패턴에서는 오류입니다. ASCII 문자의 알 수없는 이스케이프는 향후 사용을 위해 예약되어 있으며 오류로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="dc0059e4f8b92f5385ccd893ef5b8eeef274015d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'__main__'&lt;/code&gt; is the name of the scope in which top-level code executes. A module&amp;rsquo;s __name__ is set equal to &lt;code&gt;'__main__'&lt;/code&gt; when read from standard input, a script, or from an interactive prompt.</source>
          <target state="translated">&lt;code&gt;'__main__'&lt;/code&gt; 은 최상위 코드가 실행되는 범위의 이름입니다. 표준 입력, 스크립트 또는 대화식 프롬프트에서 읽을 때 모듈의 __name__은 &lt;code&gt;'__main__'&lt;/code&gt; 과 동일하게 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="8a5fbd21e5e58418163c3adb848ad467b05d250d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'append'&lt;/code&gt; - This stores a list, and appends each argument value to the list. This is useful to allow an option to be specified multiple times. Example usage:</source>
          <target state="translated">&lt;code&gt;'append'&lt;/code&gt; - 목록을 저장하고 각 인수 값을 목록에 추가합니다. 옵션을 여러 번 지정할 수 있도록하는 데 유용합니다. 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="bf19bf46b56222e48573e964388f844b62ff5123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'append_const'&lt;/code&gt; - This stores a list, and appends the value specified by the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument to the list. (Note that the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument defaults to &lt;code&gt;None&lt;/code&gt;.) The &lt;code&gt;'append_const'&lt;/code&gt; action is typically useful when multiple arguments need to store constants to the same list. For example:</source>
          <target state="translated">&lt;code&gt;'append_const'&lt;/code&gt; - 목록을 저장하고 &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; 키워드 인수로 지정된 값을 목록에 추가 합니다. (주 그 &lt;a href=&quot;#const&quot;&gt;CONST&lt;/a&gt; 키워드 인수 기본값 &lt;code&gt;None&lt;/code&gt; .)를 &lt;code&gt;'append_const'&lt;/code&gt; 여러 인수가 같은 목록에 상수를 저장해야 할 경우 작업은 일반적으로 유용하다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bb873102e52e33a71e85744cf52f09c9e3608b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt;: Same as &lt;code&gt;'seconds'&lt;/code&gt; if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0, same as &lt;code&gt;'microseconds'&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;'auto'&lt;/code&gt; : 동일 &lt;code&gt;'seconds'&lt;/code&gt; 경우 &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; , 동일 0 &lt;code&gt;'microseconds'&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="be04250d7310b0fad61b99de57e535440a9a5bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt;: Same as &lt;code&gt;'seconds'&lt;/code&gt; if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0, same as &lt;code&gt;'microseconds'&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;'auto'&lt;/code&gt; : 동일 &lt;code&gt;'seconds'&lt;/code&gt; 경우 &lt;a href=&quot;#datetime.time.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; , 동일 0 &lt;code&gt;'microseconds'&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="2115129fd2bcf61d10d22c7c5b09c1130b27a128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'backslashreplace'&lt;/code&gt; replaces malformed data by Python&amp;rsquo;s backslashed escape sequences.</source>
          <target state="translated">&lt;code&gt;'backslashreplace'&lt;/code&gt; 는 변형 된 데이터를 Python의 백 슬래시 이스케이프 시퀀스로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="dc132d0e5d5ae50656aa0f7d1fce95598cdc4df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'cipher'&lt;/code&gt;: a three-value tuple containing the name of the cipher being used, the version of the SSL protocol that defines its use, and the number of secret bits being used; result of &lt;a href=&quot;ssl#ssl.SSLSocket.cipher&quot;&gt;&lt;code&gt;ssl.SSLSocket.cipher()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'cipher'&lt;/code&gt; : 사용중인 암호 이름, 사용을 정의하는 SSL 프로토콜 버전 및 사용되는 비밀 비트 수를 포함하는 3 값 튜플; &lt;a href=&quot;ssl#ssl.SSLSocket.cipher&quot;&gt; &lt;code&gt;ssl.SSLSocket.cipher()&lt;/code&gt; &lt;/a&gt; 결과</target>
        </trans-unit>
        <trans-unit id="01f2e656faa5143a4863c0873281df2d1bcc116f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'compression'&lt;/code&gt;: the compression algorithm being used as a string, or &lt;code&gt;None&lt;/code&gt; if the connection isn&amp;rsquo;t compressed; result of &lt;a href=&quot;ssl#ssl.SSLSocket.compression&quot;&gt;&lt;code&gt;ssl.SSLSocket.compression()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'compression'&lt;/code&gt; : 문자열로 사용되는 압축 알고리즘 또는 연결이 압축되지 않은 경우 &lt;code&gt;None&lt;/code&gt; ; &lt;a href=&quot;ssl#ssl.SSLSocket.compression&quot;&gt; &lt;code&gt;ssl.SSLSocket.compression()&lt;/code&gt; &lt;/a&gt; 결과</target>
        </trans-unit>
        <trans-unit id="4fba3128115d93a1d8f79313d096dcb88f2e42a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'count'&lt;/code&gt; - This counts the number of times a keyword argument occurs. For example, this is useful for increasing verbosity levels:</source>
          <target state="translated">&lt;code&gt;'count'&lt;/code&gt; - 키워드 인수가 발생한 횟수를 계산합니다. 예를 들어, 자세한 표시 수준을 높이는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9589d4e8fad6acab391d15068c7f877c175453f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'extend'&lt;/code&gt; - This stores a list, and extends each argument value to the list. Example usage:</source>
          <target state="translated">&lt;code&gt;'extend'&lt;/code&gt; - 목록을 저장하고 각 인수 값을 목록으로 확장합니다. 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="c08248f8e0083d6d51ae3e5830486f9f493b57f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'help'&lt;/code&gt; - This prints a complete help message for all the options in the current parser and then exits. By default a help action is automatically added to the parser. See &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; for details of how the output is created.</source>
          <target state="translated">&lt;code&gt;'help'&lt;/code&gt; help'-현재 파서의 모든 옵션에 대한 완전한 도움말 메시지를 인쇄 한 다음 종료됩니다. 기본적으로 도움말 작업이 파서에 자동으로 추가됩니다. 출력 생성 방법에 대한 자세한 내용은 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bdb113ed0feefb81b2df0054dcbda7d9a962cb6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hours'&lt;/code&gt;: Include the &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; in the two-digit &lt;code&gt;HH&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'hours'&lt;/code&gt; : &lt;a href=&quot;#datetime.datetime.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; 을 두 자리 &lt;code&gt;HH&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="536ecf7cf154aa4178a30129d463e0c2f6c32cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hours'&lt;/code&gt;: Include the &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; in the two-digit &lt;code&gt;HH&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'hours'&lt;/code&gt; : &lt;a href=&quot;#datetime.time.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; 을 두 자리 &lt;code&gt;HH&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a09c0a03756dd7f0c9d93fc0747a96adbcc3e343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt; ignores errors. Note that ignoring encoding errors can lead to data loss.</source>
          <target state="translated">&lt;code&gt;'ignore'&lt;/code&gt; 는 오류를 무시합니다. 인코딩 오류를 무시하면 데이터가 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="108dcd2625fb2212623762c58c02c7795e85063e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'microseconds'&lt;/code&gt;: Include full time in &lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'microseconds'&lt;/code&gt; : &lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt; 형식의 풀 타임 포함 .</target>
        </trans-unit>
        <trans-unit id="e8852119e753d000fd6f33859d97a6fb2eb985d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'milliseconds'&lt;/code&gt;: Include full time, but truncate fractional second part to milliseconds. &lt;code&gt;HH:MM:SS.sss&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'milliseconds'&lt;/code&gt; : 풀 타임을 포함하지만 소수 부분을 밀리 초로 자릅니다. &lt;code&gt;HH:MM:SS.sss&lt;/code&gt; 형식</target>
        </trans-unit>
        <trans-unit id="2f131b7a98df841a966a528576670693f0153c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'minutes'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'minutes'&lt;/code&gt; : &lt;a href=&quot;#datetime.datetime.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#datetime.datetime.minute&quot;&gt; &lt;code&gt;minute&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;HH:MM&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a34b97dac8ecb58e51519deeaf583383afd087c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'minutes'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.time.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'minutes'&lt;/code&gt; : &lt;a href=&quot;#datetime.time.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#datetime.time.minute&quot;&gt; &lt;code&gt;minute&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;HH:MM&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="9f31906aca316ff8b57d19aca5194eba09630bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'monotonic'&lt;/code&gt;: &lt;a href=&quot;#time.monotonic&quot;&gt;&lt;code&gt;time.monotonic()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'monotonic'&lt;/code&gt; : &lt;a href=&quot;#time.monotonic&quot;&gt; &lt;code&gt;time.monotonic()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="540b18b61e118f48ed8f329e8d1a3c57ce40d556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mtime'&lt;/code&gt; (mandatory): an integer or floating-point number representing the modification time of the source code;</source>
          <target state="translated">&lt;code&gt;'mtime'&lt;/code&gt; (필수) : 소스 코드의 수정 시간을 나타내는 정수 또는 부동 소수점 숫자;</target>
        </trans-unit>
        <trans-unit id="57317cfd0a22140533320b39a486ec23b153dc9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mutex+cond'&lt;/code&gt;: a lock uses a mutex and a condition variable</source>
          <target state="translated">&lt;code&gt;'mutex+cond'&lt;/code&gt; : 잠금은 뮤텍스와 조건 변수를 사용합니다</target>
        </trans-unit>
        <trans-unit id="cd0398b292319c23ac113148a0b713bb32c5bb4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'namereplace'&lt;/code&gt; (also only supported when writing) replaces unsupported characters with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences.</source>
          <target state="translated">&lt;code&gt;'namereplace'&lt;/code&gt; (쓰기시에만 지원됨)는 지원되지 않는 문자를 &lt;code&gt;\N{...}&lt;/code&gt; 이스케이프 시퀀스로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="d5cabc9e693f6ff3c70987022b9b5d01c57d6b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'nt'&lt;/code&gt;: Windows threads</source>
          <target state="translated">&lt;code&gt;'nt'&lt;/code&gt; : Windows 스레드</target>
        </trans-unit>
        <trans-unit id="48c8aad4beff560e8409561b93517a2d37a76579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'peercert'&lt;/code&gt;: peer certificate; result of &lt;a href=&quot;ssl#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;ssl.SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'peercert'&lt;/code&gt; : 피어 인증서; &lt;a href=&quot;ssl#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;ssl.SSLSocket.getpeercert()&lt;/code&gt; &lt;/a&gt; 결과</target>
        </trans-unit>
        <trans-unit id="718ff024330163c488122f4667005753a252ba7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'peername'&lt;/code&gt;: the remote address to which the socket is connected, result of &lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.socket.getpeername()&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;None&lt;/code&gt; on error)</source>
          <target state="translated">&lt;code&gt;'peername'&lt;/code&gt; : 소켓이 연결된 원격 주소, socket.socket.getpeername &lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt; &lt;code&gt;socket.socket.getpeername()&lt;/code&gt; &lt;/a&gt; 결과 ( 오류시 &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="52544336112bed9357960af37923b7feaeefff7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'perf_counter'&lt;/code&gt;: &lt;a href=&quot;#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'perf_counter'&lt;/code&gt; : &lt;a href=&quot;#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb76c6878d6fcf14983d39e50c843c82349a242a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pipe'&lt;/code&gt;: pipe object</source>
          <target state="translated">&lt;code&gt;'pipe'&lt;/code&gt; : 파이프 객체</target>
        </trans-unit>
        <trans-unit id="bcbbbb7d5ea7db27b1282688b6f98115ef9e4ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'process_time'&lt;/code&gt;: &lt;a href=&quot;#time.process_time&quot;&gt;&lt;code&gt;time.process_time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'process_time'&lt;/code&gt; : &lt;a href=&quot;#time.process_time&quot;&gt; &lt;code&gt;time.process_time()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cca4536cbfbe7ef66e0a7e333a8d462f378dcfa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pthread'&lt;/code&gt;: POSIX threads</source>
          <target state="translated">&lt;code&gt;'pthread'&lt;/code&gt; : POSIX 스레드</target>
        </trans-unit>
        <trans-unit id="f1100cbce12d7845cc9ec84ec2d8a7c51d697ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'r'&lt;/code&gt; is an alias for &lt;code&gt;'a'&lt;/code&gt; and should only be used for Python2/3 code bases.</source>
          <target state="translated">&lt;code&gt;'r'&lt;/code&gt; 은 &lt;code&gt;'a'&lt;/code&gt; 의 별명 이며 Python2 / 3 코드 기반에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="62094339ca9c86e42d9bc5046a7d0b1b39a1d389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'replace'&lt;/code&gt; causes a replacement marker (such as &lt;code&gt;'?'&lt;/code&gt;) to be inserted where there is malformed data.</source>
          <target state="translated">&lt;code&gt;'replace'&lt;/code&gt; 는 변형 된 데이터가있는 곳에 대체 마커 (예 : &lt;code&gt;'?'&lt;/code&gt; )를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="24a9657138f1d083933ee247a2d11ecd429459f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'s'&lt;/code&gt; is an alias for &lt;code&gt;'b'&lt;/code&gt; and should only be used for Python2/3 code bases.</source>
          <target state="translated">&lt;code&gt;'s'&lt;/code&gt; 는 &lt;code&gt;'b'&lt;/code&gt; 의 별명 이며 Python2 / 3 코드 기반에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2abb25359256e933e6a836abcdf78c9809a6ea07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'seconds'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.datetime.second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM:SS&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'seconds'&lt;/code&gt; : &lt;a href=&quot;#datetime.datetime.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#datetime.datetime.minute&quot;&gt; &lt;code&gt;minute&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#datetime.datetime.second&quot;&gt; &lt;code&gt;second&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;HH:MM:SS&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="165d7df61f26c004d63129ef5a114eef8e2f4787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'seconds'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.time.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.time.second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM:SS&lt;/code&gt; format.</source>
          <target state="translated">&lt;code&gt;'seconds'&lt;/code&gt; : &lt;a href=&quot;#datetime.time.hour&quot;&gt; &lt;code&gt;hour&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#datetime.time.minute&quot;&gt; &lt;code&gt;minute&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#datetime.time.second&quot;&gt; &lt;code&gt;second&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;HH:MM:SS&lt;/code&gt; 형식으로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0991cee8b9956c479562db2492caed8424c2ba98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'semaphore'&lt;/code&gt;: a lock uses a semaphore</source>
          <target state="translated">&lt;code&gt;'semaphore'&lt;/code&gt; : 잠금은 세마포어를 사용합니다</target>
        </trans-unit>
        <trans-unit id="4567b8660163981f42d5c3421cf6619138283f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'size'&lt;/code&gt; (optional): the size in bytes of the source code.</source>
          <target state="translated">&lt;code&gt;'size'&lt;/code&gt; (선택 사항) : 소스 코드의 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="567e45bf32eb623356d2284df67a5ad11d9ac618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'socket'&lt;/code&gt;: &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="translated">&lt;code&gt;'socket'&lt;/code&gt; : &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="ed57a3a552c07bf9c2e17bf57d34370ecc4f9224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sockname'&lt;/code&gt;: the socket&amp;rsquo;s own address, result of &lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt;&lt;code&gt;socket.socket.getsockname()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'sockname'&lt;/code&gt; : 소켓의 자체 주소, socket.socket.getsockname &lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt; &lt;code&gt;socket.socket.getsockname()&lt;/code&gt; &lt;/a&gt; 결과</target>
        </trans-unit>
        <trans-unit id="6bcd922d45c4408ee112ab378bd1205e862e6761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'solaris'&lt;/code&gt;: Solaris threads</source>
          <target state="translated">&lt;code&gt;'solaris'&lt;/code&gt; : Solaris 스레드</target>
        </trans-unit>
        <trans-unit id="5332c0dd72463c990c65efc6ca71b4a600138c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ssl_object'&lt;/code&gt;: &lt;a href=&quot;ssl#ssl.SSLObject&quot;&gt;&lt;code&gt;ssl.SSLObject&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ssl#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="translated">&lt;code&gt;'ssl_object'&lt;/code&gt; : &lt;a href=&quot;ssl#ssl.SSLObject&quot;&gt; &lt;code&gt;ssl.SSLObject&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;ssl#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="8b1dd70f636ba5a953ef9652213b0d021cb3f069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sslcontext'&lt;/code&gt;: &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="translated">&lt;code&gt;'sslcontext'&lt;/code&gt; : &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="c9683724d5821e7d84e6feae26374c2a0e5a5d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store'&lt;/code&gt; - This just stores the argument&amp;rsquo;s value. This is the default action. For example:</source>
          <target state="translated">&lt;code&gt;'store'&lt;/code&gt; - 인수의 값만 저장합니다. 이것이 기본 동작입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8887a60ad0d00053bc1e781218e9c65603c48a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store_const'&lt;/code&gt; - This stores the value specified by the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument. The &lt;code&gt;'store_const'&lt;/code&gt; action is most commonly used with optional arguments that specify some sort of flag. For example:</source>
          <target state="translated">&lt;code&gt;'store_const'&lt;/code&gt; - &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; 키워드 인수로 지정된 값을 저장합니다 . &lt;code&gt;'store_const'&lt;/code&gt; 작업이 가장 일반적으로 국기의 일종을 지정하는 선택적 인수와 함께 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2acd69b3853aecc9e0568eee9396170fb95910bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store_true'&lt;/code&gt; and &lt;code&gt;'store_false'&lt;/code&gt; - These are special cases of &lt;code&gt;'store_const'&lt;/code&gt; used for storing the values &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; respectively. In addition, they create default values of &lt;code&gt;False&lt;/code&gt; and &lt;code&gt;True&lt;/code&gt; respectively. For example:</source>
          <target state="translated">&lt;code&gt;'store_true'&lt;/code&gt; 및 &lt;code&gt;'store_false'&lt;/code&gt; - 각각 &lt;code&gt;True&lt;/code&gt; 및 &lt;code&gt;False&lt;/code&gt; 값을 저장하는 데 사용되는 &lt;code&gt;'store_const'&lt;/code&gt; 의 특수한 경우입니다 . 또한 각각 &lt;code&gt;False&lt;/code&gt; 및 &lt;code&gt;True&lt;/code&gt; 의 기본값을 만듭니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="82f1edf8eac4bdf234e7c11e24fb9b49bd47ad87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'strict'&lt;/code&gt; to raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception if there is an encoding error. The default value of &lt;code&gt;None&lt;/code&gt; has the same effect.</source>
          <target state="translated">&lt;code&gt;'strict'&lt;/code&gt; 인코딩 오류가있는 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 예외를 발생 시키려면 'strict' 기본값 &lt;code&gt;None&lt;/code&gt; 은 동일한 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ffb61987b693445a6df8bf680359d6a9967eacbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'subprocess'&lt;/code&gt;: &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="translated">&lt;code&gt;'subprocess'&lt;/code&gt; : &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="dd36e921d2e629e61a196cca9b6df26df026af6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'surrogateescape'&lt;/code&gt; will represent any incorrect bytes as code points in the Unicode Private Use Area ranging from U+DC80 to U+DCFF. These private code points will then be turned back into the same bytes when the &lt;code&gt;surrogateescape&lt;/code&gt; error handler is used when writing data. This is useful for processing files in an unknown encoding.</source>
          <target state="translated">&lt;code&gt;'surrogateescape'&lt;/code&gt; 는 U + DC80에서 U + DCFF 범위의 유니 코드 개인 사용 영역에서 코드 포인트로 잘못된 바이트를 나타냅니다. 이 개인 코드 포인트는 데이터를 쓸 때 &lt;code&gt;surrogateescape&lt;/code&gt; 오류 처리기를 사용할 때 동일한 바이트로 다시 변환 됩니다. 이것은 알 수없는 인코딩으로 파일을 처리 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="673401bf699b177486abfdf88e771d847712f671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'thread_time'&lt;/code&gt;: &lt;a href=&quot;#time.thread_time&quot;&gt;&lt;code&gt;time.thread_time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'thread_time'&lt;/code&gt; : &lt;a href=&quot;#time.thread_time&quot;&gt; &lt;code&gt;time.thread_time()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de4aeb2ae0456fce9f7946c410c5e2eb84dca23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'time'&lt;/code&gt;: &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'time'&lt;/code&gt; : &lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time.time()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10bc69ba4b82876326069e338caccc249a393c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'u'&lt;/code&gt; will be removed together with the rest of the &lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt;&lt;code&gt;Py_UNICODE&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">&lt;code&gt;'u'&lt;/code&gt; 는 나머지 &lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt; &lt;code&gt;Py_UNICODE&lt;/code&gt; &lt;/a&gt; API 와 함께 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f5f82d9d8a6a37b201fee89fb0cda3032f97d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'version'&lt;/code&gt; - This expects a &lt;code&gt;version=&lt;/code&gt; keyword argument in the &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; call, and prints version information and exits when invoked:</source>
          <target state="translated">&lt;code&gt;'version'&lt;/code&gt; - 이것은 기대 &lt;code&gt;version=&lt;/code&gt; 에 키워드 인수를 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 호출 및 인쇄 버전 정보 및 종료가 호출 할 때 :</target>
        </trans-unit>
        <trans-unit id="7fd63877e2643a1ba3bbaf0c9a4d5da319659d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'x:'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'x'&lt;/code&gt; 또는 &lt;code&gt;'x:'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09f98948a4e289a1d4fd974d404bf3231ff3f178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; is only supported when writing to a file. Characters not supported by the encoding are replaced with the appropriate XML character reference &lt;code&gt;&amp;amp;#nnn;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; 는 파일에 쓸 때만 지원됩니다. 인코딩에서 지원하지 않는 문자는 적절한 XML 문자 참조로 대체됩니다 &lt;code&gt;&amp;amp;#nnn;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27598726a17a9a23c407ae74fe262f2592e1d070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?P=quote)&lt;/code&gt; (as shown)</source>
          <target state="translated">&lt;code&gt;(?P=quote)&lt;/code&gt; (표시된대로)</target>
        </trans-unit>
        <trans-unit id="87a11f2a418edf76cd42230ae4483d415e5d0ff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x00&lt;/code&gt;: &lt;em&gt;value&lt;/em&gt; is formatted as-is.</source>
          <target state="translated">&lt;code&gt;(flags &amp;amp; 0x03) == 0x00&lt;/code&gt; : &lt;em&gt;값&lt;/em&gt; 은 그대로 형식이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="53759a823e71d63b0c46b76d91c963fada6afc25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x01&lt;/code&gt;: call &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="translated">&lt;code&gt;(flags &amp;amp; 0x03) == 0x01&lt;/code&gt; : &lt;em&gt;값&lt;/em&gt; 을 포맷하기 전에 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7899c7f4d6cd0cbadae1122f30aced1d585db08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x02&lt;/code&gt;: call &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="translated">&lt;code&gt;(flags &amp;amp; 0x03) == 0x02&lt;/code&gt; : 포맷하기 전에 &lt;em&gt;값&lt;/em&gt; 에 &lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60ff8b1d321507b037e70091a7ac694ad4e29af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x03&lt;/code&gt;: call &lt;a href=&quot;functions#ascii&quot;&gt;&lt;code&gt;ascii()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="translated">&lt;code&gt;(flags &amp;amp; 0x03) == 0x03&lt;/code&gt; : 형식을 지정하기 전에 &lt;em&gt;값&lt;/em&gt; 에 대해 &lt;a href=&quot;functions#ascii&quot;&gt; &lt;code&gt;ascii()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="238bfb40a4369ea6c85dce39d9ebfb6fd9fd2fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x04) == 0x04&lt;/code&gt;: pop &lt;em&gt;fmt_spec&lt;/em&gt; from the stack and use it, else use an empty &lt;em&gt;fmt_spec&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;(flags &amp;amp; 0x04) == 0x04&lt;/code&gt; : 스택에서 pop &lt;em&gt;fmt_spec&lt;/em&gt; 을 사용하고 그렇지 않으면 빈 &lt;em&gt;fmt_spec을&lt;/em&gt; 사용 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d0d4f988f5a0e3f9403d98fac850a0577504be46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--altinstall&lt;/code&gt;: if an alternate installation is requested, the &lt;code&gt;pipX&lt;/code&gt; script will &lt;em&gt;not&lt;/em&gt; be installed.</source>
          <target state="translated">&lt;code&gt;--altinstall&lt;/code&gt; : 대체 설치가 요청되면 &lt;code&gt;pipX&lt;/code&gt; 스크립트가 설치 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f0b6c7ffa2d09dbbe538b5285ef09560a04c8df1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--default-pip&lt;/code&gt;: if a &amp;ldquo;default pip&amp;rdquo; installation is requested, the &lt;code&gt;pip&lt;/code&gt; script will be installed in addition to the two regular scripts.</source>
          <target state="translated">&lt;code&gt;--default-pip&lt;/code&gt; :&amp;ldquo;default pip&amp;rdquo;설치가 요청되면 두 개의 일반 스크립트와 함께 &lt;code&gt;pip&lt;/code&gt; 스크립트가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="3b568d37749b011e3d9a284c17e4c16c3e365d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--root &amp;lt;dir&amp;gt;&lt;/code&gt;: Installs &lt;code&gt;pip&lt;/code&gt; relative to the given root directory rather than the root of the currently active virtual environment (if any) or the default root for the current Python installation.</source>
          <target state="translated">&lt;code&gt;--root &amp;lt;dir&amp;gt;&lt;/code&gt; : 현재 활성 가상 환경의 루트 (있는 경우) 또는 현재 Python 설치의 기본 루트가 아닌 지정된 루트 디렉토리를 기준으로 &lt;code&gt;pip&lt;/code&gt; 를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="227298702c24d7dc20e93d0ff02fc7518c7164a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--user&lt;/code&gt;: Installs &lt;code&gt;pip&lt;/code&gt; into the user site packages directory rather than globally for the current Python installation (this option is not permitted inside an active virtual environment).</source>
          <target state="translated">&lt;code&gt;--user&lt;/code&gt; : 현재 Python 설치를 위해 전역이 아닌 사용자 사이트 패키지 디렉토리에 &lt;code&gt;pip&lt;/code&gt; 를 설치합니다 (이 옵션은 활성 가상 환경에서는 허용되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="5f9226dce0af56e2bcc9c63f58384a8621a4e4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m&lt;/code&gt; specifies that a module is being profiled instead of a script.</source>
          <target state="translated">&lt;code&gt;-m&lt;/code&gt; 은 스크립트 대신 모듈이 프로파일 링되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e86d4fa9208b566668873bf923c519e0b97366ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; writes the profile results to a file instead of to stdout</source>
          <target state="translated">&lt;code&gt;-o&lt;/code&gt; 는 stdout 대신 파일에 프로파일 결과를 씁니다.</target>
        </trans-unit>
        <trans-unit id="9fd00da6433bba97d59f53562bc4d4d0f2bc0101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; specifies one of the &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt;&lt;code&gt;sort_stats()&lt;/code&gt;&lt;/a&gt; sort values to sort the output by. This only applies when &lt;code&gt;-o&lt;/code&gt; is not supplied.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 는 출력을 정렬 할 &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt; &lt;code&gt;sort_stats()&lt;/code&gt; &lt;/a&gt; 정렬 값 중 하나를 지정합니다 . &lt;code&gt;-o&lt;/code&gt; 가 제공되지 않은 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="12440d2881d6ac58abdd3f9361508fbe4729ffde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dev/poll&lt;/code&gt; Polling Objects</source>
          <target state="translated">&lt;code&gt;/dev/poll&lt;/code&gt; 폴링 오브젝트</target>
        </trans-unit>
        <trans-unit id="0cbb0009eb49ffaac681560fb35cce1458e262bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dev/poll&lt;/code&gt; behaviour is very close to the standard &lt;code&gt;poll()&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;/dev/poll&lt;/code&gt; 동작은 표준 &lt;code&gt;poll()&lt;/code&gt; 객체와 매우 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="9f0353366b824babadb3b564a8ffcb41ba94f081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/lib/pythonX.Y/site-packages/&lt;/code&gt; (always use &lt;code&gt;lib&lt;/code&gt;, not &lt;a href=&quot;#sys.platlibdir&quot;&gt;&lt;code&gt;sys.platlibdir&lt;/code&gt;&lt;/a&gt;): Third-party modules</source>
          <target state="translated">&lt;code&gt;/usr/lib/pythonX.Y/site-packages/&lt;/code&gt; (항상 &lt;a href=&quot;#sys.platlibdir&quot;&gt; &lt;code&gt;sys.platlibdir&lt;/code&gt; 이&lt;/a&gt; 아니라 &lt;code&gt;lib&lt;/code&gt; 사용 ) : 타사 모듈</target>
        </trans-unit>
        <trans-unit id="10fa2c9de6d14b8f54a65a4f1b66d9e80dec3d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/lib64/pythonX.Y/&lt;/code&gt;: Standard library (like &lt;code&gt;os.py&lt;/code&gt; of the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module)</source>
          <target state="translated">&lt;code&gt;/usr/lib64/pythonX.Y/&lt;/code&gt; : 표준 라이브러리 (같은 &lt;code&gt;os.py&lt;/code&gt; 의 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 모듈)</target>
        </trans-unit>
        <trans-unit id="cceefaff8403e30c3c2e6e2e49e17c4f8c641d5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/lib64/pythonX.Y/lib-dynload/&lt;/code&gt;: C extension modules of the standard library (like the &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; module, the exact filename is platform specific)</source>
          <target state="translated">&lt;code&gt;/usr/lib64/pythonX.Y/lib-dynload/&lt;/code&gt; : 표준 라이브러리의 C 확장 모듈 ( &lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt; 모듈과 같이 정확한 파일 이름은 플랫폼에 따라 다름)</target>
        </trans-unit>
        <trans-unit id="2ee76b2df24780f85d4dd16e16969a2c2f2ff528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/usr/lib64/pythonX.Y/site-packages/&lt;/code&gt;: C extension modules of third-party packages</source>
          <target state="translated">&lt;code&gt;/usr/lib64/pythonX.Y/site-packages/&lt;/code&gt; : 타사 패키지의 C 확장 모듈</target>
        </trans-unit>
        <trans-unit id="18b5956caff09f9e96914a309854ffc8adc6547a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= hour &amp;lt; 24&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= hour &amp;lt; 24&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="31e943899022b8726ce052c1a47772eb1d3fe1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= microsecond &amp;lt; 1000000&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= microsecond &amp;lt; 1000000&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="aa586f27a3667eb6f3f60a47c66b07e873d54d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= minute &amp;lt; 60&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= minute &amp;lt; 60&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="66d8291be8107d6cb9709f2eaf28067646431ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= second &amp;lt; 60&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= second &amp;lt; 60&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6ca8329c347b7e464d48bdb296e78839fed8b68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= seconds &amp;lt; 3600*24&lt;/code&gt; (the number of seconds in one day)</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= seconds &amp;lt; 3600*24&lt;/code&gt; (하루의 초 수)</target>
        </trans-unit>
        <trans-unit id="a3d726829f3f0bbfd9dbe4e2b98595fa7d9acca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; &amp;ndash; relative to the start of the file (&lt;a href=&quot;os#os.SEEK_SET&quot;&gt;&lt;code&gt;os.SEEK_SET&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &amp;ndash; 파일 시작을 기준으로 ( &lt;a href=&quot;os#os.SEEK_SET&quot;&gt; &lt;code&gt;os.SEEK_SET&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9ca531b1fa645b911482471c596cd393c1661b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; means unbuffered (read and write are one system call and can return short)</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 은 버퍼되지 않음을 의미합니다 (읽기 및 쓰기는 하나의 시스템 호출이며 짧게 리턴 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="af14cc8438cb9dc120b4423e00b9f86dedb604f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: readable streaming transport of the standard input (&lt;em&gt;stdin&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stdin=PIPE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; : 표준 입력 ( &lt;em&gt;stdin&lt;/em&gt; ) 의 읽기 가능한 스트리밍 전송 또는 &lt;code&gt;stdin=PIPE&lt;/code&gt; 로 서브 프로세스가 작성되지 않은 경우 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95593851abe57b44ebabef5e19fae4e285a6846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x01&lt;/code&gt; a tuple of default values for positional-only and positional-or-keyword parameters in positional order</source>
          <target state="translated">&lt;code&gt;0x01&lt;/code&gt; 위치 전용 및 위치 또는 키워드 매개 변수에 대한 기본값의 0x01 튜플 (위치 순서)</target>
        </trans-unit>
        <trans-unit id="ec632c6ce88cc3e52871e6266d3cac9f7e03f1bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x02&lt;/code&gt; a dictionary of keyword-only parameters&amp;rsquo; default values</source>
          <target state="translated">&lt;code&gt;0x02&lt;/code&gt; 키워드 전용 매개 변수의 사전 사전</target>
        </trans-unit>
        <trans-unit id="b67f7d9bbee97966bb8a9fb2d2d6edf0304e4f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x04&lt;/code&gt; an annotation dictionary</source>
          <target state="translated">&lt;code&gt;0x04&lt;/code&gt; 주석 사전 0x04</target>
        </trans-unit>
        <trans-unit id="61edddeb3328a94fff8f21aeb1291e5fd7acfd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x08&lt;/code&gt; a tuple containing cells for free variables, making a closure</source>
          <target state="translated">&lt;code&gt;0x08&lt;/code&gt; 자유 변수에 대한 셀을 포함하는 튜플</target>
        </trans-unit>
        <trans-unit id="9d8220e8e27d8a3b85f2af0a5d60ef235bed9fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1 &amp;lt;= day &amp;lt;= number of days in the given month and year&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;1 &amp;lt;= day &amp;lt;= number of days in the given month and year&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c1898d26648bf8e53fc88ab1ff7977512cc5bac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1 &amp;lt;= month &amp;lt;= 12&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;1 &amp;lt;= month &amp;lt;= 12&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="3f4608457736ec3549ea2d9546b37272f132c562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; &amp;ndash; relative to the current buffer position (&lt;a href=&quot;os#os.SEEK_CUR&quot;&gt;&lt;code&gt;os.SEEK_CUR&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; &amp;ndash; 현재 버퍼 위치를 기준으로 ( &lt;a href=&quot;os#os.SEEK_CUR&quot;&gt; &lt;code&gt;os.SEEK_CUR&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="794dc4eeaa6267317ec702b7d873140be2ae7e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; means line buffered (only usable if &lt;code&gt;universal_newlines=True&lt;/code&gt; i.e., in a text mode)</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 은 라인 버퍼링을 의미합니다 ( &lt;code&gt;universal_newlines=True&lt;/code&gt; , 즉 텍스트 모드 인 경우에만 사용 가능 )</target>
        </trans-unit>
        <trans-unit id="0f2d3c290016c1f2a8059a53ffdd3c9a04c43d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: writable streaming transport of the standard output (&lt;em&gt;stdout&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stdout=PIPE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; : 표준 출력 ( &lt;em&gt;stdout&lt;/em&gt; ) 의 쓰기 가능한 스트리밍 전송 또는 &lt;code&gt;stdout=PIPE&lt;/code&gt; 로 서브 프로세스가 작성되지 않은 경우 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c4d7e47703ba540dbd05297cff18d288570e5ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; &amp;ndash; relative to the end of the file (&lt;a href=&quot;os#os.SEEK_END&quot;&gt;&lt;code&gt;os.SEEK_END&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; &amp;ndash; 파일 끝을 기준으로 ( &lt;a href=&quot;os#os.SEEK_END&quot;&gt; &lt;code&gt;os.SEEK_END&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="24c4e684e442ea6b08ef1d7f529d93a3d63d7459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;: writable streaming transport of the standard error (&lt;em&gt;stderr&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stderr=PIPE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; : 표준 오류의 쓰기 가능한 스트리밍 전송 ( &lt;em&gt;stderr&lt;/em&gt; ) 또는 서브 프로세스가 &lt;code&gt;stderr=PIPE&lt;/code&gt; 로 작성되지 않은 경우 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9efd686c80e33f67b28b37ef19f48d2aca24436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=foo.bar&lt;/code&gt;: Articles are filed in the &lt;code&gt;foo.bar&lt;/code&gt; group instead.</source>
          <target state="translated">&lt;code&gt;=foo.bar&lt;/code&gt; : 기사는 &lt;code&gt;foo.bar&lt;/code&gt; 그룹에 대신 제출 됩니다.</target>
        </trans-unit>
        <trans-unit id="f828e94b979973b97a7c39e70d15e99c9344e21f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@singledispatchmethod&lt;/code&gt; supports nesting with other decorators such as &lt;code&gt;@classmethod&lt;/code&gt;. Note that to allow for &lt;code&gt;dispatcher.register&lt;/code&gt;, &lt;code&gt;singledispatchmethod&lt;/code&gt; must be the &lt;em&gt;outer most&lt;/em&gt; decorator. Here is the &lt;code&gt;Negator&lt;/code&gt; class with the &lt;code&gt;neg&lt;/code&gt; methods being class bound:</source>
          <target state="translated">&lt;code&gt;@singledispatchmethod&lt;/code&gt; 같은 다른 장식과 중첩 지지체 &lt;code&gt;@classmethod&lt;/code&gt; . 수 있도록 그주의 &lt;code&gt;dispatcher.register&lt;/code&gt; , &lt;code&gt;singledispatchmethod&lt;/code&gt; 이 해야 &lt;em&gt;외부 대부분의&lt;/em&gt; 장식. 다음은 &lt;code&gt;neg&lt;/code&gt; 메소드가 클래스 바인딩 된 &lt;code&gt;Negator&lt;/code&gt; 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="2d43897b47ce330452e0d255d84f56b433025f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_BLUETOOTH&lt;/code&gt; supports the following protocols and address formats:</source>
          <target state="translated">&lt;code&gt;AF_BLUETOOTH&lt;/code&gt; 는 다음 프로토콜 및 주소 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="198992cf5a80b83dd7a4a2d74b03db4262aae020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_NETLINK&lt;/code&gt; sockets are represented as pairs &lt;code&gt;(pid, groups)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AF_NETLINK&lt;/code&gt; 소켓은 쌍 &lt;code&gt;(pid, groups)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="2a0a953a068fd327df1f5c0c6a78c7dc1e7f493f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Annotated&lt;/code&gt; can be used with nested and generic aliases:</source>
          <target state="translated">&lt;code&gt;Annotated&lt;/code&gt; 는 중첩 및 일반 별칭과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="355660fe8dd845c9a863e9a3145e5bfe6ccc7eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Annotated&lt;/code&gt; must be called with at least two arguments ( &lt;code&gt;Annotated[int]&lt;/code&gt; is not valid)</source>
          <target state="translated">&lt;code&gt;Annotated&lt;/code&gt; 는 최소한 두 개의 인수로 호출해야합니다. &lt;code&gt;Annotated[int]&lt;/code&gt; 는 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="af01875ca3276d4b1397c4447440d5a94e5ee792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnyStr&lt;/code&gt; is a type variable defined as &lt;code&gt;AnyStr = TypeVar('AnyStr', str, bytes)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AnyStr&lt;/code&gt; 은 &lt;code&gt;AnyStr = TypeVar('AnyStr', str, bytes)&lt;/code&gt; 로 정의 된 유형 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="d8aece7e559300fb1a3dba7bdf5660d7ccd1815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attr&lt;/code&gt; inherits from &lt;code&gt;Node&lt;/code&gt;, so inherits all its attributes.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 은 &lt;code&gt;Node&lt;/code&gt; 에서 상속하므로 모든 속성을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="03c44c93937707512379249b8934aefd83f98863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attributes&lt;/code&gt; objects implement a portion of the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mapping protocol&lt;/a&gt;, including the methods &lt;code&gt;copy()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;items()&lt;/code&gt;, &lt;code&gt;keys()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;. The following methods are also provided:</source>
          <target state="translated">&lt;code&gt;Attributes&lt;/code&gt; 오브젝트는 &lt;code&gt;copy()&lt;/code&gt; , &lt;code&gt;get()&lt;/code&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;items()&lt;/code&gt; , &lt;code&gt;keys()&lt;/code&gt; 및 &lt;code&gt;values()&lt;/code&gt; 메소드를 포함 하여 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;맵핑 프로토콜&lt;/a&gt; 의 일부를 구현합니다 . 다음과 같은 방법도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="cb1d2196c5f1ec9948bee49e935cf7107d187920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attributes&lt;/code&gt; objects implement a portion of the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;mapping protocol&lt;/a&gt;, including the methods &lt;code&gt;copy()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;items()&lt;/code&gt;, &lt;code&gt;keys()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;. The following methods are also provided:</source>
          <target state="translated">&lt;code&gt;Attributes&lt;/code&gt; 객체는 &lt;code&gt;copy()&lt;/code&gt; , &lt;code&gt;get()&lt;/code&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;items()&lt;/code&gt; , &lt;code&gt;keys()&lt;/code&gt; 및 &lt;code&gt;values()&lt;/code&gt; 메서드를 포함 하여 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-mapping&quot;&gt;매핑 프로토콜&lt;/a&gt; 의 일부를 구현합니다 . 다음 방법도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a2311686b155d5b1ab8cf869b4ebb8b085621587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A|B&lt;/code&gt;, where &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt; can be arbitrary REs, creates a regular expression that will match either &lt;em&gt;A&lt;/em&gt; or &lt;em&gt;B&lt;/em&gt;. An arbitrary number of REs can be separated by the &lt;code&gt;'|'&lt;/code&gt; in this way. This can be used inside groups (see below) as well. As the target string is scanned, REs separated by &lt;code&gt;'|'&lt;/code&gt; are tried from left to right. When one pattern completely matches, that branch is accepted. This means that once &lt;em&gt;A&lt;/em&gt; matches, &lt;em&gt;B&lt;/em&gt; will not be tested further, even if it would produce a longer overall match. In other words, the &lt;code&gt;'|'&lt;/code&gt; operator is never greedy. To match a literal &lt;code&gt;'|'&lt;/code&gt;, use &lt;code&gt;\|&lt;/code&gt;, or enclose it inside a character class, as in &lt;code&gt;[|]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A|B&lt;/code&gt; , 와 &lt;em&gt;B는&lt;/em&gt; 임의의 RE가 될 수는 중 하나와 일치하는 정규 표현식 생성 또는 &lt;em&gt;B를&lt;/em&gt; . 임의의 수의 RE는 &lt;code&gt;'|'&lt;/code&gt; 이런 식으로. 그룹 내부에서도 사용할 수 있습니다 (아래 참조). 대상 문자열이 스캔 될 때 RE는 &lt;code&gt;'|'&lt;/code&gt; 로 구분됩니다. 왼쪽에서 오른쪽으로 시도됩니다. 하나의 패턴이 완전히 일치하면 해당 분기가 승인됩니다. 즉 , &lt;em&gt;A가&lt;/em&gt; 일치하면 &lt;em&gt;B&lt;/em&gt; 가 더 긴 전체 일치를 생성하더라도 더 이상 테스트되지 않습니다. 다시 말해 &lt;code&gt;'|'&lt;/code&gt; 운영자는 결코 욕심이 없습니다. 리터럴 &lt;code&gt;'|'&lt;/code&gt; 와 일치 시키려면 &lt;code&gt;\|&lt;/code&gt; 사용 하십시오.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; &lt;code&gt;[|]&lt;/code&gt; 에서와 같이 문자 클래스 안에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="b1e4b7898db8a6999203d4e2a4ea05f5c96761a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_HCI&lt;/code&gt; accepts &lt;code&gt;(device_id,)&lt;/code&gt; where &lt;code&gt;device_id&lt;/code&gt; is either an integer or a string with the Bluetooth address of the interface. (This depends on your OS; NetBSD and DragonFlyBSD expect a Bluetooth address while everything else expects an integer.)</source>
          <target state="translated">&lt;code&gt;BTPROTO_HCI&lt;/code&gt; 는 &lt;code&gt;(device_id,)&lt;/code&gt; 허용합니다. 여기서 &lt;code&gt;device_id&lt;/code&gt; 는 정수 또는 인터페이스의 Bluetooth 주소를 가진 문자열입니다. (여러분의 OS에 따라 다릅니다; NetBSD와 DragonFlyBSD는 블루투스 주소를 요구하지만 다른 모든 것은 정수를 요구합니다.)</target>
        </trans-unit>
        <trans-unit id="6ab8ee92c44c6d069a309008b5920178ab3031f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_L2CAP&lt;/code&gt; accepts &lt;code&gt;(bdaddr, psm)&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is the Bluetooth address as a string and &lt;code&gt;psm&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;BTPROTO_L2CAP&lt;/code&gt; 는 &lt;code&gt;(bdaddr, psm)&lt;/code&gt; 허용합니다. 여기서 &lt;code&gt;bdaddr&lt;/code&gt; 은 Bluetooth 주소이고 문자열 은 &lt;code&gt;psm&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ecb91b5a4638140c488a8eecfa58af0ec5f708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_RFCOMM&lt;/code&gt; accepts &lt;code&gt;(bdaddr, channel)&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is the Bluetooth address as a string and &lt;code&gt;channel&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;BTPROTO_RFCOMM&lt;/code&gt; 은 &lt;code&gt;(bdaddr, channel)&lt;/code&gt; 허용합니다. 여기서 &lt;code&gt;bdaddr&lt;/code&gt; 은 블루투스 주소이며 문자열 은 &lt;code&gt;channel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="19bb83a6ff91ada559fc678d7596d6e7fe51fe3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_SCO&lt;/code&gt; accepts &lt;code&gt;bdaddr&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing the Bluetooth address in a string format. (ex. &lt;code&gt;b'12:23:34:45:56:67'&lt;/code&gt;) This protocol is not supported under FreeBSD.</source>
          <target state="translated">&lt;code&gt;BTPROTO_SCO&lt;/code&gt; 는 &lt;code&gt;bdaddr&lt;/code&gt; 을 허용합니다. 여기서 &lt;code&gt;bdaddr&lt;/code&gt; 은 문자열 형식의 Bluetooth 주소를 포함 하는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 개체입니다. (ex. &lt;code&gt;b'12:23:34:45:56:67'&lt;/code&gt; )이 프로토콜은 FreeBSD에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6dc2eb7c0bf37977492e54986a2ad1737fd8896a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt; also provides the following method, which is called by the email library code and should not in general be called by application programs:</source>
          <target state="translated">&lt;code&gt;BaseHeader&lt;/code&gt; 는 또한 전자 우편 라이브러리 코드에 의해 호출되며 일반적으로 응용 프로그램에 의해 호출되어서는 안되는 다음과 같은 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b00ef5c2aa6bda410dd86d779713298a7c7e6691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt; by itself cannot be used to create a header object. It defines a protocol that each specialized header cooperates with in order to produce the header object. Specifically, &lt;code&gt;BaseHeader&lt;/code&gt; requires that the specialized class provide a &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;parse&lt;/code&gt;. This method is called as follows:</source>
          <target state="translated">&lt;code&gt;BaseHeader&lt;/code&gt; 자체만으로는 헤더 객체를 만들 수 없습니다. 헤더 객체를 생성하기 위해 각 특수 헤더가 협력하는 프로토콜을 정의합니다. 특히 &lt;code&gt;BaseHeader&lt;/code&gt; 를 사용 하려면 특수 클래스에서 &lt;code&gt;parse&lt;/code&gt; 라는 &lt;a href=&quot;functions#classmethod&quot;&gt; &lt;code&gt;classmethod()&lt;/code&gt; &lt;/a&gt; 제공해야합니다 . 이 메소드는 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e883a65a4adfb3e6abd26b4c0c1ce12f1cea39f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt;&amp;rsquo;s &lt;code&gt;__new__&lt;/code&gt; then creates the header instance, and calls its &lt;code&gt;init&lt;/code&gt; method. The specialized class only needs to provide an &lt;code&gt;init&lt;/code&gt; method if it wishes to set additional attributes beyond those provided by &lt;code&gt;BaseHeader&lt;/code&gt; itself. Such an &lt;code&gt;init&lt;/code&gt; method should look like this:</source>
          <target state="translated">&lt;code&gt;BaseHeader&lt;/code&gt; 의 &lt;code&gt;__new__&lt;/code&gt; 는 헤더 인스턴스를 만들고 &lt;code&gt;init&lt;/code&gt; 메소드를 호출합니다 . 특수화 된 클래스 는 &lt;code&gt;BaseHeader&lt;/code&gt; 자체가 제공하는 것 이상의 추가 속성을 설정하려는 경우 에만 &lt;code&gt;init&lt;/code&gt; 메소드 를 제공하면 됩니다. 이러한 &lt;code&gt;init&lt;/code&gt; 메소드는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="3aebd2c82b37cd89d8485c624a738bd5eb6f44ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitmapImage&lt;/code&gt; for images in XBM format.</source>
          <target state="translated">&lt;code&gt;BitmapImage&lt;/code&gt; XBM 형식의 이미지에 대한 BitmapImage 입니다.</target>
        </trans-unit>
        <trans-unit id="63afd500c60744dec53a915842119dbc8cd55226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufferedProtocol&lt;/code&gt; implementations allow explicit manual allocation and control of the receive buffer. Event loops can then use the buffer provided by the protocol to avoid unnecessary data copies. This can result in noticeable performance improvement for protocols that receive big amounts of data. Sophisticated protocol implementations can significantly reduce the number of buffer allocations.</source>
          <target state="translated">&lt;code&gt;BufferedProtocol&lt;/code&gt; 구현은 수신 버퍼의 명시적인 수동 할당 및 제어를 허용합니다. 그런 다음 이벤트 루프는 프로토콜이 제공하는 버퍼를 사용하여 불필요한 데이터 복사를 피할 수 있습니다. 이로 인해 많은 양의 데이터를 수신하는 프로토콜의 성능이 크게 향상 될 수 있습니다. 정교한 프로토콜 구현으로 버퍼 할당 수를 크게 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d1d6f90cee4e690ace4f897aa0c90b39f726de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Built-in function&lt;/code&gt;&lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Built-in function&lt;/code&gt; &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b1c85d6e081f27b6dcf53deee5f912049f25a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_CRC32&lt;/code&gt;: 32-bit Cyclic Redundancy Check.</source>
          <target state="translated">&lt;code&gt;CHECK_CRC32&lt;/code&gt; : 32 비트 순환 중복 검사.</target>
        </trans-unit>
        <trans-unit id="f859d3aba42f7e49dc1d9a1d7d3526c6903d91f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_CRC64&lt;/code&gt;: 64-bit Cyclic Redundancy Check. This is the default for &lt;code&gt;FORMAT_XZ&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CHECK_CRC64&lt;/code&gt; : 64 비트 순환 중복 검사. &lt;code&gt;FORMAT_XZ&lt;/code&gt; 의 기본값입니다 .</target>
        </trans-unit>
        <trans-unit id="22024fe818e766c4ef70037bc35f4b6be34a726c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_NONE&lt;/code&gt; and &lt;code&gt;CHECK_CRC32&lt;/code&gt; are always supported. &lt;code&gt;CHECK_CRC64&lt;/code&gt; and &lt;code&gt;CHECK_SHA256&lt;/code&gt; may be unavailable if you are using a version of &lt;strong&gt;liblzma&lt;/strong&gt; that was compiled with a limited feature set.</source>
          <target state="translated">&lt;code&gt;CHECK_NONE&lt;/code&gt; 및 &lt;code&gt;CHECK_CRC32&lt;/code&gt; 는 항상 지원됩니다. 제한된 기능 세트로 컴파일 된 &lt;strong&gt;liblzma&lt;/strong&gt; 버전을 사용하는 경우 &lt;code&gt;CHECK_CRC64&lt;/code&gt; 및 &lt;code&gt;CHECK_SHA256&lt;/code&gt; 을 사용하지 못할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b0d09b20eb2cc929c03ebf2dc38d0a562fae620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_NONE&lt;/code&gt;: No integrity check. This is the default (and the only acceptable value) for &lt;code&gt;FORMAT_ALONE&lt;/code&gt; and &lt;code&gt;FORMAT_RAW&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CHECK_NONE&lt;/code&gt; : 무결성 검사가 없습니다. 이것이 &lt;code&gt;FORMAT_ALONE&lt;/code&gt; 및 &lt;code&gt;FORMAT_RAW&lt;/code&gt; 의 기본값이며 유일하게 허용되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="daef6fe0699e43edb7ac41d91dbf1d205dad4c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_SHA256&lt;/code&gt;: 256-bit Secure Hash Algorithm.</source>
          <target state="translated">&lt;code&gt;CHECK_SHA256&lt;/code&gt; : 256 비트 보안 해시 알고리즘.</target>
        </trans-unit>
        <trans-unit id="241db193b959ca40e3df350f8b91f2356299ccbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;multiprocessing#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;multiprocessing#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a40b04dd6e66dba433a934a165b064eeeb30ea58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34e77c0dbf59d988de373ba11ac9df9ac52d4d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CloseBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; A start boundary was found, but no corresponding close boundary was ever found.</source>
          <target state="translated">&lt;code&gt;CloseBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; 시작 경계가 발견되었지만 해당하는 가까운 경계가 발견되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="413a9e55a7b8f9a3dbb777d055862c699afdd533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comment&lt;/code&gt; represents a comment in the XML document. It is a subclass of &lt;code&gt;Node&lt;/code&gt;, but cannot have child nodes.</source>
          <target state="translated">&lt;code&gt;Comment&lt;/code&gt; XML 문서에 코멘트를 나타냅니다. &lt;code&gt;Node&lt;/code&gt; 의 서브 클래스 이지만 자식 노드를 가질 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bad9466a2fdc43a7aabb2607bfc284cd4ff50628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Context()&lt;/code&gt; creates an empty context with no values in it. To get a copy of the current context use the &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;Context()&lt;/code&gt; 는 값이없는 빈 컨텍스트를 만듭니다. 현재 컨텍스트의 사본을 얻으려면 &lt;a href=&quot;#contextvars.copy_context&quot;&gt; &lt;code&gt;copy_context()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbb559a5c90a377c922c0abcff85fb6823f61df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContextDecorator&lt;/code&gt; is used by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt;, so you get this functionality automatically.</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; 는 &lt;a href=&quot;#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextmanager()&lt;/code&gt; &lt;/a&gt; 에서 사용 되므로이 기능을 자동으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4dc4d271f27e3b8ebab6d0189f83400502e317d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContextDecorator&lt;/code&gt; lets you instead write:</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; 를 사용하면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4574dfabe40d1ae8e0d35394d97955893a97392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULTSECT&lt;/code&gt; cannot be removed from the parser:</source>
          <target state="translated">&lt;code&gt;DEFAULTSECT&lt;/code&gt; 파서에서 DEFAULTSECT 를 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc1d8d689967131e8e688f0766260565659d8afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMException&lt;/code&gt; is currently not supported in &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;. Instead, &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; uses standard Python exceptions such as &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DOMException&lt;/code&gt; 은 현재 &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt; 에서 지원되지 않습니다 . 대신 &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt; 와 같은 표준 Python 예외를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="44385e1b8eaca4cf9c2814b94675bf1ddc3e3bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimal(0) ** Decimal(0)&lt;/code&gt; results in &lt;code&gt;InvalidOperation&lt;/code&gt;, and if &lt;code&gt;InvalidOperation&lt;/code&gt; is not trapped, then results in &lt;code&gt;Decimal('NaN')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Decimal(0) ** Decimal(0)&lt;/code&gt; 은 &lt;code&gt;InvalidOperation&lt;/code&gt; 을 생성하고 &lt;code&gt;InvalidOperation&lt;/code&gt; 이 트랩되지 않은 경우 &lt;code&gt;Decimal('NaN')&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a9015607c2ff774ddd087c7cfcedc1c380ac7e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; is a specialization of &lt;code&gt;Node&lt;/code&gt;, and adds the following attributes:</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; 은 &lt;code&gt;Node&lt;/code&gt; 의 전문화 영역으로 다음과 같은 속성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e6879c3d5a876f3c19a11352d9d87412a27b5470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Element&lt;/code&gt; is a subclass of &lt;code&gt;Node&lt;/code&gt;, so inherits all the attributes of that class.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 는 &lt;code&gt;Node&lt;/code&gt; 의 서브 클래스 이므로 해당 클래스의 모든 속성을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="fbf1f870ab774f5431966cc0f6cebc3cd4f858fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum&lt;/code&gt; classes with methods</source>
          <target state="translated">&lt;code&gt;Enum&lt;/code&gt; 메소드가있는 열거 형 클래스</target>
        </trans-unit>
        <trans-unit id="1403fca6d621d15c249081283fd5db4dc11816f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum&lt;/code&gt; member type</source>
          <target state="translated">&lt;code&gt;Enum&lt;/code&gt; 형 멤버 유형</target>
        </trans-unit>
        <trans-unit id="e3aff4818663630b50aeec9ae84230bc23bfa4ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_LZMA1&lt;/code&gt; (for use with &lt;code&gt;FORMAT_ALONE&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;FILTER_LZMA1&lt;/code&gt; (함께 사용 &lt;code&gt;FORMAT_ALONE&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="676df170faa309ed6e33ac496b83ef45e2bce988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_LZMA2&lt;/code&gt; (for use with &lt;code&gt;FORMAT_XZ&lt;/code&gt; and &lt;code&gt;FORMAT_RAW&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;FILTER_LZMA2&lt;/code&gt; ( &lt;code&gt;FORMAT_XZ&lt;/code&gt; 및 &lt;code&gt;FORMAT_RAW&lt;/code&gt; 와 함께 사용 )</target>
        </trans-unit>
        <trans-unit id="ef6cebaf9a6067c628f65cf7c1e1d452a59e3ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if an item of &lt;em&gt;s&lt;/em&gt; is equal to &lt;em&gt;x&lt;/em&gt;, else &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; &lt;em&gt;s&lt;/em&gt; 의 항목이 &lt;em&gt;x&lt;/em&gt; 와 같으면 False , 그렇지 않으면 &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1daa586f72aef07a105cb4c4a0620082a281377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method can provide more decompressed data before requiring new uncompressed input.</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; &lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt; 새로운 입력을 요구하기 전에 decompress () 메소드가 압축 해제 된 데이터를 더 많이 제공 할 수 있으면 False 입니다.</target>
        </trans-unit>
        <trans-unit id="7d137d74dbe224c6f73f9c6c38c9b862aeedfda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method can provide more decompressed data before requiring new uncompressed input.</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; &lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt; 새로운 입력을 요구하기 전에 decompress () 메소드가 압축 해제 된 데이터를 더 많이 제공 할 수 있으면 False 입니다.</target>
        </trans-unit>
        <trans-unit id="0a4b1c0a6b02bb351219f13522e8abdbd1650690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; is also returned if the path doesn&amp;rsquo;t exist or is a broken symlink; other errors (such as permission errors) are propagated.</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; 경로가 존재하지 않거나 깨진 심볼릭 링크 인 경우 False 도 반환됩니다. 다른 오류 (예 : 권한 오류)가 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="a8820a85da1f880d99fe92a81421a3ba523da9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; is also returned if the path doesn&amp;rsquo;t exist; other errors (such as permission errors) are propagated.</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; 경로가 존재하지 않으면 False 도 리턴됩니다. 다른 오류 (예 : 권한 오류)가 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="fbcc76b05547caa8dd4081c9579c17f2d0e2c583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldStorage&lt;/code&gt; objects also support being used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, which will automatically close them when done.</source>
          <target state="translated">&lt;code&gt;FieldStorage&lt;/code&gt; 객체는 또한 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용되도록 지원하며 완료되면 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="ebc6e1c34e9af09ca8aa3cd54fbf4f4b8671c211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldStorage&lt;/code&gt; objects also support being used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, which will automatically close them when done.</source>
          <target state="translated">&lt;code&gt;FieldStorage&lt;/code&gt; 개체는 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용되는 것을 지원 하므로 완료되면 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="ddcbd75862651631c85be60963b3e9f47e85d3f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(False, &quot;&amp;lt;unknown&amp;gt;&quot;)&lt;/code&gt; excludes empty tracebacks</source>
          <target state="translated">&lt;code&gt;Filter(False, &quot;&amp;lt;unknown&amp;gt;&quot;)&lt;/code&gt; 빈 역 추적을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="9e7081dee2301d32f4409555afef61919ce3653e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(False, tracemalloc.__file__)&lt;/code&gt; excludes traces of the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;code&gt;Filter(False, tracemalloc.__file__)&lt;/code&gt; 는 &lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt; 모듈의 추적을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="3204d728578d3ea979404e19ebdb4329346f1b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(True, subprocess.__file__)&lt;/code&gt; only includes traces of the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;code&gt;Filter(True, subprocess.__file__)&lt;/code&gt; 에는 &lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt; 모듈의 추적 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b6af8b6ca8689d078e0804edd80862633bd1784d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filters&lt;/code&gt; can be used by &lt;code&gt;Handlers&lt;/code&gt; and &lt;code&gt;Loggers&lt;/code&gt; for more sophisticated filtering than is provided by levels. The base filter class only allows events which are below a certain point in the logger hierarchy. For example, a filter initialized with &amp;lsquo;A.B&amp;rsquo; will allow events logged by loggers &amp;lsquo;A.B&amp;rsquo;, &amp;lsquo;A.B.C&amp;rsquo;, &amp;lsquo;A.B.C.D&amp;rsquo;, &amp;lsquo;A.B.D&amp;rsquo; etc. but not &amp;lsquo;A.BB&amp;rsquo;, &amp;lsquo;B.A.B&amp;rsquo; etc. If initialized with the empty string, all events are passed.</source>
          <target state="translated">&lt;code&gt;Filters&lt;/code&gt; 레벨에서 제공하는 것보다 더 정교한 필터링을 위해 &lt;code&gt;Handlers&lt;/code&gt; 및 &lt;code&gt;Loggers&lt;/code&gt; 에서 필터를 사용할 수 있습니다 . 기본 필터 클래스는 로거 계층 구조의 특정 지점 아래에있는 이벤트 만 허용합니다. 예를 들어 'AB'로 초기화 된 필터는 로거 'A.B', 'ABC', 'ABCD', 'ABD'등이 기록하지만 'A.BB', 'BAB'등은 기록하지 않는 이벤트를 허용합니다. 빈 문자열을 사용하면 모든 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2127f407505c7f8cd158ddfb63abdf0912c342c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FirstHeaderLineIsContinuationDefect&lt;/code&gt; &amp;ndash; The message had a continuation line as its first header line.</source>
          <target state="translated">&lt;code&gt;FirstHeaderLineIsContinuationDefect&lt;/code&gt; &amp;ndash; 메시지에 첫 번째 헤더 행으로 연속 줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e59f82ec9f6aa0d2b397af06dd01d534d841062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericAlias&lt;/code&gt; objects are created by subscripting a class (usually a container), such as &lt;code&gt;list[int]&lt;/code&gt;. They are intended primarily for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-annotation&quot;&gt;type annotations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GenericAlias&lt;/code&gt; 객체는 &lt;code&gt;list[int]&lt;/code&gt; 와 같은 클래스 (일반적으로 컨테이너)를 첨자로 작성하여 만듭니다. 이들은 주로 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-annotation&quot;&gt;유형 주석을&lt;/a&gt; 위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d86bb2ee77146830a9c1b67bca0060df5e7502c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Generic[T]&lt;/code&gt; as a base class defines that the class &lt;code&gt;LoggedVar&lt;/code&gt; takes a single type parameter &lt;code&gt;T&lt;/code&gt; . This also makes &lt;code&gt;T&lt;/code&gt; valid as a type within the class body.</source>
          <target state="translated">&lt;code&gt;Generic[T]&lt;/code&gt; 기본 클래스 인 Generic [T] 는 &lt;code&gt;LoggedVar&lt;/code&gt; 클래스 가 단일 유형 매개 변수 &lt;code&gt;T&lt;/code&gt; 를갖도록 정의합니다 . 또한 클래스 본문 내에서 &lt;code&gt;T&lt;/code&gt; 를 형식으로 유효 하게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e0014957e6e6dec3a258f998c1fc1fd1d3f8b865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0 and &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt; , &lt;a href=&quot;#datetime.time.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0이고 &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;None&lt;/code&gt; 을 반환하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="ccdbf80b2d8ff19edf4c80b850b55ca7c48397e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt; , 경우를 &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt; 반환되지 않는다 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab4b8a03b44a56cec7af348bf87320b06cf77bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="translated">&lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt; &lt;a href=&quot;#datetime.time.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0이 아닌 경우 HH : MM : SS.ffffff</target>
        </trans-unit>
        <trans-unit id="7fd6e44986f07a11cb09a9f522e59d4f8a9b49a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="translated">&lt;code&gt;HH:MM:SS&lt;/code&gt; &lt;a href=&quot;#datetime.time.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0 인 경우 HH : MM : SS</target>
        </trans-unit>
        <trans-unit id="228a5960f728abc99721887a90aa2baf452f0fe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLCalendar&lt;/code&gt; has the following attributes you can override to customize the CSS classes used by the calendar:</source>
          <target state="translated">&lt;code&gt;HTMLCalendar&lt;/code&gt; 에는 달력에서 사용하는 CSS 클래스를 사용자 정의하기 위해 재정의 할 수있는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="522c1fb8fc0d82f1328091e50b992f505ad44a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLCalendar&lt;/code&gt; instances have the following methods:</source>
          <target state="translated">&lt;code&gt;HTMLCalendar&lt;/code&gt; 인스턴스에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff4d399666acf5bd4c034a5183ffefd43d1a70f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_PROXY&lt;/code&gt; will be ignored if a variable &lt;code&gt;REQUEST_METHOD&lt;/code&gt; is set; see the documentation on &lt;a href=&quot;#urllib.request.getproxies&quot;&gt;&lt;code&gt;getproxies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HTTP_PROXY&lt;/code&gt; 변수 &lt;code&gt;REQUEST_METHOD&lt;/code&gt; 가 설정 되면 HTTP_PROXY 가 무시됩니다 . &lt;a href=&quot;#urllib.request.getproxies&quot;&gt; &lt;code&gt;getproxies()&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50804600b6c9c4f8ac2bddd79ba7e6d155bc9eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeaderRegistry&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;HeaderRegistry&lt;/code&gt; 에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="86567a691ef9cad3c1c01afa04874e93bbe75f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IPPROTO_UDPLITE&lt;/code&gt; is a variant of UDP which allows you to specify what portion of a packet is covered with the checksum. It adds two socket options that you can change. &lt;code&gt;self.setsockopt(IPPROTO_UDPLITE, UDPLITE_SEND_CSCOV, length)&lt;/code&gt; will change what portion of outgoing packets are covered by the checksum and &lt;code&gt;self.setsockopt(IPPROTO_UDPLITE, UDPLITE_RECV_CSCOV, length)&lt;/code&gt; will filter out packets which cover too little of their data. In both cases &lt;code&gt;length&lt;/code&gt; should be in &lt;code&gt;range(8, 2**16, 8)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IPPROTO_UDPLITE&lt;/code&gt; 는 체크섬으로 처리되는 패킷 부분을 지정할 수있는 UDP의 변형입니다. 변경할 수있는 두 개의 소켓 옵션을 추가합니다. &lt;code&gt;self.setsockopt(IPPROTO_UDPLITE, UDPLITE_SEND_CSCOV, length)&lt;/code&gt; 는 체크섬에 포함되는 나가는 패킷 부분을 변경하고 &lt;code&gt;self.setsockopt(IPPROTO_UDPLITE, UDPLITE_RECV_CSCOV, length)&lt;/code&gt; 는 데이터를 너무 적게 포함하는 패킷을 필터링합니다. 두 경우 모두 &lt;code&gt;length&lt;/code&gt; 는 &lt;code&gt;range(8, 2**16, 8)&lt;/code&gt; 내에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8d3d27acbe7b44b4bfaed8077089d427dfc20d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, characters outside the base64 alphabet were encountered. The characters are ignored, but the resulting decoded bytes may be invalid.</source>
          <target state="translated">&lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; &amp;ndash; base64로 인코딩 된 바이트 블록을 디코딩 할 때 base64 알파벳 이외의 문자가 발견되었습니다. 문자는 무시되지만 결과적으로 디코딩 된 바이트는 유효하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="313f4b7c0f892c4bdc419efa130bf4e83d9bd03b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64LengthDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, the number of non-padding base64 characters was invalid (1 more than a multiple of 4). The encoded block was kept as-is.</source>
          <target state="translated">&lt;code&gt;InvalidBase64LengthDefect&lt;/code&gt; &amp;ndash; base64로 인코딩 된 바이트 블록을 디코딩 할 때 비 패딩 base64 문자 수가 유효하지 않습니다 (4의 배수보다 1 이상). 인코딩 된 블록은 그대로 유지되었다.</target>
        </trans-unit>
        <trans-unit id="275ab03520ba5867fc213142d04e7e3af7a8c840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, the padding was not correct. Enough padding is added to perform the decode, but the resulting decoded bytes may be invalid.</source>
          <target state="translated">&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; &amp;ndash; base64로 인코딩 된 바이트 블록을 디코딩 할 때 패딩이 올바르지 않습니다. 디코딩을 수행하기 위해 충분한 패딩이 추가되었지만 결과로 디코딩 된 바이트가 유효하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4329b1a764892e2d06e50fd6434aa61cf4e46cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_NETDEV&lt;/code&gt; filter flags (not available on Mac OS X):</source>
          <target state="translated">&lt;code&gt;KQ_FILTER_NETDEV&lt;/code&gt; 필터 플래그 (Mac OS X에서는 사용할 수 없음) :</target>
        </trans-unit>
        <trans-unit id="97b091cb33c56617cd57e122b0f11316b83f76ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_PROC&lt;/code&gt; filter flags:</source>
          <target state="translated">&lt;code&gt;KQ_FILTER_PROC&lt;/code&gt; 필터 플래그 :</target>
        </trans-unit>
        <trans-unit id="b8b2c2601cc9bafa890b3cd81df6f66aa78ba38d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_READ&lt;/code&gt; and &lt;code&gt;KQ_FILTER_WRITE&lt;/code&gt; filter flags:</source>
          <target state="translated">&lt;code&gt;KQ_FILTER_READ&lt;/code&gt; 및 &lt;code&gt;KQ_FILTER_WRITE&lt;/code&gt; 필터 플래그 :</target>
        </trans-unit>
        <trans-unit id="dae0a9120bd0d0ef2d879471708049c95fb85c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_VNODE&lt;/code&gt; filter flags:</source>
          <target state="translated">&lt;code&gt;KQ_FILTER_VNODE&lt;/code&gt; 필터 플래그 :</target>
        </trans-unit>
        <trans-unit id="a3a69c167edbc2a1dc61d99c28d266cea41f0907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_EX&lt;/code&gt; &amp;ndash; acquire an exclusive lock</source>
          <target state="translated">&lt;code&gt;LOCK_EX&lt;/code&gt; &amp;ndash; 독점 잠금 획득</target>
        </trans-unit>
        <trans-unit id="a580c51f2d6d57f05ce3b8c8ec6184a56c3769f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_SH&lt;/code&gt; &amp;ndash; acquire a shared lock</source>
          <target state="translated">&lt;code&gt;LOCK_SH&lt;/code&gt; &amp;ndash; 공유 잠금 획득</target>
        </trans-unit>
        <trans-unit id="5dfc08c7488a3dbe51defff1f9a20d56a2a3d90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_UN&lt;/code&gt; &amp;ndash; unlock</source>
          <target state="translated">&lt;code&gt;LOCK_UN&lt;/code&gt; &amp;ndash; 잠금 해제</target>
        </trans-unit>
        <trans-unit id="a99ef93488d3878d0d4df0daa292fc2572ca636b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_EMERG&lt;/code&gt;, &lt;code&gt;LOG_ALERT&lt;/code&gt;, &lt;code&gt;LOG_CRIT&lt;/code&gt;, &lt;code&gt;LOG_ERR&lt;/code&gt;, &lt;code&gt;LOG_WARNING&lt;/code&gt;, &lt;code&gt;LOG_NOTICE&lt;/code&gt;, &lt;code&gt;LOG_INFO&lt;/code&gt;, &lt;code&gt;LOG_DEBUG&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOG_EMERG&lt;/code&gt; , &lt;code&gt;LOG_ALERT&lt;/code&gt; , &lt;code&gt;LOG_CRIT&lt;/code&gt; , &lt;code&gt;LOG_ERR&lt;/code&gt; , &lt;code&gt;LOG_WARNING&lt;/code&gt; , &lt;code&gt;LOG_NOTICE&lt;/code&gt; , &lt;code&gt;LOG_INFO&lt;/code&gt; , &lt;code&gt;LOG_DEBUG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a21ec660ccf1622bb6c3b4a5ee1be82bd68b3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_KERN&lt;/code&gt;, &lt;code&gt;LOG_USER&lt;/code&gt;, &lt;code&gt;LOG_MAIL&lt;/code&gt;, &lt;code&gt;LOG_DAEMON&lt;/code&gt;, &lt;code&gt;LOG_AUTH&lt;/code&gt;, &lt;code&gt;LOG_LPR&lt;/code&gt;, &lt;code&gt;LOG_NEWS&lt;/code&gt;, &lt;code&gt;LOG_UUCP&lt;/code&gt;, &lt;code&gt;LOG_CRON&lt;/code&gt;, &lt;code&gt;LOG_SYSLOG&lt;/code&gt;, &lt;code&gt;LOG_LOCAL0&lt;/code&gt; to &lt;code&gt;LOG_LOCAL7&lt;/code&gt;, and, if defined in &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt;, &lt;code&gt;LOG_AUTHPRIV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOG_KERN&lt;/code&gt; , &lt;code&gt;LOG_USER&lt;/code&gt; , &lt;code&gt;LOG_MAIL&lt;/code&gt; , &lt;code&gt;LOG_DAEMON&lt;/code&gt; , &lt;code&gt;LOG_AUTH&lt;/code&gt; , &lt;code&gt;LOG_LPR&lt;/code&gt; , &lt;code&gt;LOG_NEWS&lt;/code&gt; , &lt;code&gt;LOG_UUCP&lt;/code&gt; , &lt;code&gt;LOG_CRON&lt;/code&gt; , &lt;code&gt;LOG_SYSLOG&lt;/code&gt; , &lt;code&gt;LOG_LOCAL0&lt;/code&gt; 에 &lt;code&gt;LOG_LOCAL7&lt;/code&gt; 하고, 정의 경우 &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt; , &lt;code&gt;LOG_AUTHPRIV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89b41b8e33d814b43f37e66181a4956074e9df71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_PID&lt;/code&gt;, &lt;code&gt;LOG_CONS&lt;/code&gt;, &lt;code&gt;LOG_NDELAY&lt;/code&gt;, and, if defined in &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt;, &lt;code&gt;LOG_ODELAY&lt;/code&gt;, &lt;code&gt;LOG_NOWAIT&lt;/code&gt;, and &lt;code&gt;LOG_PERROR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOG_PID&lt;/code&gt; , &lt;code&gt;LOG_CONS&lt;/code&gt; , &lt;code&gt;LOG_NDELAY&lt;/code&gt; 하고, 정의 경우 &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt; , &lt;code&gt;LOG_ODELAY&lt;/code&gt; , &lt;code&gt;LOG_NOWAIT&lt;/code&gt; 및 &lt;code&gt;LOG_PERROR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="243dbd0d930b86613b02abc47a0f22b192576f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Literal[...]&lt;/code&gt; cannot be subclassed. At runtime, an arbitrary value is allowed as type argument to &lt;code&gt;Literal[...]&lt;/code&gt;, but type checkers may impose restrictions. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt; for more details about literal types.</source>
          <target state="translated">&lt;code&gt;Literal[...]&lt;/code&gt; 은 서브 클래 싱 할 수 없습니다. 런타임시 &lt;code&gt;Literal[...]&lt;/code&gt; 유형 인수로 임의의 값이 허용 되지만 유형 검사기는 제한을 부과 할 수 있습니다. 참조 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-17&quot;&gt;&lt;strong&gt;PEP 586을&lt;/strong&gt;&lt;/a&gt; 문자 유형에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="beb1a2f104e3d8a66e71684121acfa0b4dcfadaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Literal[...]&lt;/code&gt; cannot be subclassed. At runtime, an arbitrary value is allowed as type argument to &lt;code&gt;Literal[...]&lt;/code&gt;, but type checkers may impose restrictions. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt; for more details about literal types.</source>
          <target state="translated">&lt;code&gt;Literal[...]&lt;/code&gt; 은 서브 클래스 화 될 수 없습니다. 런타임에 임의의 값이 &lt;code&gt;Literal[...]&lt;/code&gt; 유형 인수로 허용 되지만 유형 검사기는 제한 사항을 부과 할 수 있습니다. 참조 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 586을&lt;/strong&gt;&lt;/a&gt; 문자 유형에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="84206a6b2e04974df4452bffe4d7a7a8af6a3179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINYEAR &amp;lt;= year &amp;lt;= MAXYEAR&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;MINYEAR &amp;lt;= year &amp;lt;= MAXYEAR&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="70a4db1b0cb0464de8ef883bd432da6cf27f9b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MagicMock&lt;/code&gt; has all of the supported magic methods configured except for some of the obscure and obsolete ones. You can still set these up if you want.</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; 에는 불분명하고 쓸모없는 방법을 제외하고 지원되는 모든 마술 방법이 구성되어 있습니다. 원하는 경우 여전히 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d47764681a3b37e85d87105ae50383989f031ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MagicMock&lt;/code&gt; is a subclass of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; with default implementations of most of the magic methods. You can use &lt;code&gt;MagicMock&lt;/code&gt; without having to configure the magic methods yourself.</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; 은 대부분의 매직 메소드를 기본적으로 구현 한 &lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 . 매직 방법을 직접 구성 할 필요없이 &lt;code&gt;MagicMock&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8bee06bdb416ee659e8cba9becf58431af6b81cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MalformedHeaderDefect&lt;/code&gt; &amp;ndash; A header was found that was missing a colon, or was otherwise malformed.</source>
          <target state="translated">&lt;code&gt;MalformedHeaderDefect&lt;/code&gt; &amp;ndash; 콜론이 없거나 헤더가 잘못된 헤더가 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="07dca505478b98055186d2ddd46c279a4e011326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MisplacedEnvelopeHeaderDefect&lt;/code&gt; - A &amp;ldquo;Unix From&amp;rdquo; header was found in the middle of a header block.</source>
          <target state="translated">&lt;code&gt;MisplacedEnvelopeHeaderDefect&lt;/code&gt; &amp;ndash;&amp;ldquo;Unix From&amp;rdquo;헤더가 헤더 블록 중간에 있습니다.</target>
        </trans-unit>
        <trans-unit id="012704a6ec2c1ce6c49b8c880fca8aa0e59e3e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MissingHeaderBodySeparatorDefect&lt;/code&gt; - A line was found while parsing headers that had no leading white space but contained no &amp;lsquo;:&amp;rsquo;. Parsing continues assuming that the line represents the first line of the body.</source>
          <target state="translated">&lt;code&gt;MissingHeaderBodySeparatorDefect&lt;/code&gt; - 선행 공백은 없지만 ':'가 포함되지 않은 헤더를 구문 분석하는 중에 행이 발견되었습니다. 라인이 본문의 첫 번째 라인을 나타내는 것으로 가정하여 구문 분석이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="0ff461a9ce6419c65439f224fb06e6a41bf5856e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module:&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module:&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d491aaed8a338d1e4ae831c6f334e09edc181e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03dc17fa88242790d0d7c5b9f707bab81550693a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd0f66229b0efea5b566c67d48e019c58a20a95f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0111a08ca228b6a60c38172c56244aa7c49a98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a24079cd1a3fa7a80fe060003d61fd12accec50a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binascii#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binascii#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d12ff29eafa50fa0cca748464b1b344d1423109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df665357d3a68e95b80c8c56309d7ead1a068139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5721fe8e3254f2a08afba845e4f6ca58cacf8fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;cmath#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;cmath#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff747402ed8b81346eb4108c8e23120ab5e027d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;compileall#module-compileall&quot;&gt;&lt;code&gt;compileall&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;compileall#module-compileall&quot;&gt;&lt;code&gt;compileall&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df926356580905e53f0293560089d2e6bf26fafd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3a348516bd811005954aeae5a8f48728d63c406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dff6062f46c3f831a8da06a26aa2f7da545f3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05ea3661d414865017ce86c522a98b38d59e21de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.ascii#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.ascii#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0d468c52d69926d62307c15f0054c7ca64eb01d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.panel#module-curses.panel&quot;&gt;&lt;code&gt;curses.panel&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.panel#module-curses.panel&quot;&gt;&lt;code&gt;curses.panel&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b84a198fe16c6351b7363ec3b0892a0447eb870" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c499d968c3a0255ce3288e9462ed1317a2f8179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01b268b7a1496cbd154c1bd1f58f0018be64c065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dialog#module-tkinter.commondialog&quot;&gt;&lt;code&gt;tkinter.commondialog&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dialog#module-tkinter.commondialog&quot;&gt;&lt;code&gt;tkinter.commondialog&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2dc3623dbd355a98e8d949db0e7dc2b8376b485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f278b3574afba01210a795edb77f1da6d29d4331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc6e7edc6e9fd366ae9e83a728d201f26c352fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ddf7ef7d02310d9178919fdb92028aaeec34d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2662076c4c2db38a4a92ce774c96bbee165c3845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;grp#module-grp&quot;&gt;&lt;code&gt;grp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;grp#module-grp&quot;&gt;&lt;code&gt;grp&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d965701b82e4539cfdd5a77589edabac7ccfbbc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec354f9f6ce78bd292c38a6adb1bd1abea0aba13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbd5f74703b3d6c1eae26c6168e7ae194068b693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4772643072c8d55d655cadffbe975836e40c8fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0e2359af31a1001e213100ca7e7e5ff6f27c42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c160138ed02c2ff68d7a148fe1467eee4552581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;imaplib#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;imaplib#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78a56cfc957763671f91d7f918cfb1912dbb2cb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;io#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;io#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70b7822fe520d54c2af43b0ecabbc42922d3577a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3da792ffac963b6e8e0c64f0fe7fa55a6a5d2a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;locale#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;locale#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a69099eb485b48072e7dd4e1c7fa2584d7a46e56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ae9a4b0614a079b95b6e53b4431411977b7fc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.config#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.config#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6c8cdbdccf7cb1ae55868aa2063e055897ec5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aadb382a73705bfc20b30c0ec8afe56b0d140cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f3969795b7d54b0ce7033c6ea6c9abfdf95ee66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f08b04f235b2397084d5e6be7f5a48ce88c8f5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;netrc#module-netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;netrc#module-netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb2e426bd77fbe45d267c227298a515c724473c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="117989504cf1bd4ddae4d71bc0db4fcf71340f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ccd0d46cc9db9721c678d98b82d84498416e9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4578090f008cae0fa99f4eb9b688e30e35d47d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c1f80becbfcefb91ee2db6f5e2cc9b13f6414f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ac6acd28c1980f05dcf52b7e131322fc3f9be6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;poplib#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;poplib#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e390161680603e9f1f14f00824a9f131273766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7267fa2ad071db33d4117f05c9bda52b55c1b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;py_compile#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;py_compile#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5d330f5b2dbcdb870b66f6e69fe1cd54490f404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;quopri#module-quopri&quot;&gt;&lt;code&gt;quopri&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;quopri#module-quopri&quot;&gt;&lt;code&gt;quopri&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3e6bf3b1e4ce0feb9a28d79a66163d7e2d6e985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aac17e6df56a0583662f8d6375bf58dbde62140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="170e1a3d20fce6e9d05fcdb2cd7da0365d015058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f4eb6cea86af3b63f6381eec599df1987342597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtpd#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtpd#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84ae2f8dfd10e8d267e50ccb69ddd612a7f08179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b20caf2b8bc6bb6f3c1d0c796621f88bea00d9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2440e9b4b3b06f7219d5158f9604ec9a3a082ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ea215bfd577b71b7bedb491c4e84376b1bfdd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65874aaf7295a78108ac775af29abf9577259785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5615e6136f69e0d91c55b29f5b52eed7a547d55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d76f6276308b08972b04e522009ec5fdd90d5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47048c918113f50e496530160375a97f7a91ecab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a68cff0871de0600fe68d2c39d485581a0bcc84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65ffd3850ff69959a545f0f87e0ed518835dcc74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f81dc0f5e9cb1066874dbde55dce4e9cae2f5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tty#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tty#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ced029f03cb60a82c164d7da7a1ab4c1e776b896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de02da4575c27f782b79375518043127ecd3aeb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bcd10a38fdfa6d7be221cb399d413292dc76983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4593b5d2c4f90b9fe169ed5888606d236bb3b722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xdrlib#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xdrlib#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9751171f88f1e5b7d249e560b1851b9daf81217b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7b7f24b236ceae1f5bb4ccbe0c8b27b8cdb81ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt;&lt;code&gt;xml.sax.xmlreader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt;&lt;code&gt;xml.sax.xmlreader&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36fb7c9fd6dd7da2f9a47e526fd2632cee2923e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.utils#module-xml.sax.saxutils&quot;&gt;&lt;code&gt;xml.sax.saxutils&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.utils#module-xml.sax.saxutils&quot;&gt;&lt;code&gt;xml.sax.saxutils&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e08c20c27c2ebbca577231c859350d825a1a0e3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64604eeccf9214010e285e436fee5b03df0a7406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46cb1f9fa66b701cbd7b7a00047bc35466ce30b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultipartInvariantViolationDefect&lt;/code&gt; &amp;ndash; A message claimed to be a &lt;em&gt;multipart&lt;/em&gt;, but no subparts were found. Note that when a message has this defect, its &lt;a href=&quot;email.compat32-message#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method may return &lt;code&gt;False&lt;/code&gt; even though its content type claims to be &lt;em&gt;multipart&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;MultipartInvariantViolationDefect&lt;/code&gt; &amp;ndash; 메시지가 &lt;em&gt;multipart로&lt;/em&gt; 주장 되었지만 서브 &lt;em&gt;파트가&lt;/em&gt; 없습니다. 메시지에이 결함이 &lt;a href=&quot;email.compat32-message#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 메소드는 컨텐츠 유형이 &lt;em&gt;multipart라고&lt;/em&gt; 주장하더라도 &lt;code&gt;False&lt;/code&gt; 를 리턴 할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee841b85c5ecfa04e30d63e79429c73d74badf06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; (an integer). &lt;code&gt;N&lt;/code&gt; arguments from the command line will be gathered together into a list. For example:</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; (정수). 명령 행의 &lt;code&gt;N&lt;/code&gt; 개의 인수는 함께 목록으로 수집됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e877428c082b566d7276caa7185605e6fbc43e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedNodeMap&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; inherit from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NamedNodeMap&lt;/code&gt; 은 &lt;code&gt;Node&lt;/code&gt; 에서 상속 하지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6261f07d0bf4297f521e8b4d831649c9edf9ca56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedTuple&lt;/code&gt; subclasses can also have docstrings and methods:</source>
          <target state="translated">&lt;code&gt;NamedTuple&lt;/code&gt; 서브 클래스는 또한 docstring과 메소드를 가질 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="8523f6d9b06f62959dea96172ab6b58cffa36aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoBoundaryInMultipartDefect&lt;/code&gt; &amp;ndash; A message claimed to be a multipart, but had no &lt;em&gt;boundary&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;code&gt;NoBoundaryInMultipartDefect&lt;/code&gt; &amp;ndash; 멀티 파트라고 주장하지만 &lt;em&gt;경계&lt;/em&gt; 매개 변수 가없는 메시지 .</target>
        </trans-unit>
        <trans-unit id="5089821c6f095df8f6d0a0bf4cfb945098bac582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeList&lt;/code&gt; objects are implemented using Python&amp;rsquo;s built-in list type. These objects provide the interface defined in the DOM specification, but with earlier versions of Python they do not support the official API. They are, however, much more &amp;ldquo;Pythonic&amp;rdquo; than the interface defined in the W3C recommendations.</source>
          <target state="translated">&lt;code&gt;NodeList&lt;/code&gt; 객체는 Python의 내장 목록 유형을 사용하여 구현됩니다. 이러한 객체는 DOM 사양에 정의 된 인터페이스를 제공하지만 이전 버전의 Python에서는 공식 API를 지원하지 않습니다. 그러나 W3C 권장 사항에 정의 된 인터페이스보다 훨씬 많은 &quot;Pythonic&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="678467b47e50bbe058a7bb725859a8d80de20b83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; (a compound shape has to be constructed using the &lt;a href=&quot;#turtle.Shape.addcomponent&quot;&gt;&lt;code&gt;addcomponent()&lt;/code&gt;&lt;/a&gt; method)</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; ( &lt;a href=&quot;#turtle.Shape.addcomponent&quot;&gt; &lt;code&gt;addcomponent()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 복합 모양을 구성해야 함 )</target>
        </trans-unit>
        <trans-unit id="cfc35590c7f924a62879d024d3f14c2fe637bdef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; if this information is unknown</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 이 정보를 알 수 없으면 없음</target>
        </trans-unit>
        <trans-unit id="d8d837c401b39f670ae79ea11998538e3c05364f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; is returned to indicate success. An exception is raised when the call failed.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 성공을 나타 내기 위해 아무 것도 반환 되지 않습니다 . 호출이 실패하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b93241e7879960f38d250b2396089425c777966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; , &lt;code&gt;True&lt;/code&gt; 및 &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44aad10253a4203088a0d9bdceb44b3a30a5e18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, integers, bytes objects and (unicode) strings are the only native Python objects that can directly be used as parameters in these function calls. &lt;code&gt;None&lt;/code&gt; is passed as a C &lt;code&gt;NULL&lt;/code&gt; pointer, bytes objects and strings are passed as pointer to the memory block that contains their data (&lt;code&gt;char *&lt;/code&gt; or &lt;code&gt;wchar_t *&lt;/code&gt;). Python integers are passed as the platforms default C &lt;code&gt;int&lt;/code&gt; type, their value is masked to fit into the C type.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; , 정수, 바이트 객체 및 (유니 코드) 문자열은 이러한 함수 호출에서 매개 변수로 직접 사용할 수있는 유일한 기본 Python 객체입니다. &lt;code&gt;None&lt;/code&gt; 은 C &lt;code&gt;NULL&lt;/code&gt; 포인터 로 전달되며 , 바이트 오브젝트 및 문자열은 해당 데이터 ( &lt;code&gt;char *&lt;/code&gt; 또는 &lt;code&gt;wchar_t *&lt;/code&gt; ) 를 포함하는 메모리 블록에 대한 포인터로 전달됩니다 . Python 정수는 플랫폼 기본 C &lt;code&gt;int&lt;/code&gt; 유형 으로 전달되며 해당 값은 C 유형에 맞게 마스크됩니다.</target>
        </trans-unit>
        <trans-unit id="726b691dd6a3ba578bf890b6b5dd5eb804696681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotImplementedError&lt;/code&gt; and &lt;code&gt;NotImplemented&lt;/code&gt; are not interchangeable, even though they have similar names and purposes. See &lt;a href=&quot;constants#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; for details on when to use it.</source>
          <target state="translated">&lt;code&gt;NotImplementedError&lt;/code&gt; 와 &lt;code&gt;NotImplemented&lt;/code&gt; 는 이름과 목적이 비슷하더라도 서로 바꿔 쓸 수 없습니다. 사용시기에 대한 자세한 내용 은 &lt;a href=&quot;constants#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d827694637bae1dc98fe721d2de20e38ad221ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotImplementedError&lt;/code&gt; and &lt;code&gt;NotImplemented&lt;/code&gt; are not interchangeable, even though they have similar names and purposes. See &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; for details on when to use it.</source>
          <target state="translated">&lt;code&gt;NotImplementedError&lt;/code&gt; 와 &lt;code&gt;NotImplemented&lt;/code&gt; 는 이름과 목적이 비슷하더라도 서로 바꿔 쓸 수 없습니다. 사용시기에 대한 자세한 내용 은 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96d11a2917928765fc33e1320570cb7e6653e84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional[X]&lt;/code&gt; is equivalent to &lt;code&gt;Union[X, None]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Optional[X]&lt;/code&gt; 는 &lt;code&gt;Union[X, None]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99b2ce5bd075752edce7cb6267e10afd100991d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_BROADCAST&lt;/code&gt; - Physical-layer broadcast packet.</source>
          <target state="translated">&lt;code&gt;PACKET_BROADCAST&lt;/code&gt; - 물리 계층 브로드 캐스트 패킷.</target>
        </trans-unit>
        <trans-unit id="8589ee04639c6140011c54a64e23d2b823eba769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_HOST&lt;/code&gt; (the default) - Packet addressed to the local host.</source>
          <target state="translated">&lt;code&gt;PACKET_HOST&lt;/code&gt; (기본값)-로컬 호스트로 주소가 지정된 패킷.</target>
        </trans-unit>
        <trans-unit id="2a3dd57664b403979e3e8fae7e396d0815e23703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_MULTIHOST&lt;/code&gt; - Packet sent to a physical-layer multicast address.</source>
          <target state="translated">&lt;code&gt;PACKET_MULTIHOST&lt;/code&gt; - 물리 계층 멀티 캐스트 주소로 전송 된 패킷.</target>
        </trans-unit>
        <trans-unit id="776b6129516f77e4d01a218633d6df00f0bf307b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_OTHERHOST&lt;/code&gt; - Packet to some other host that has been caught by a device driver in promiscuous mode.</source>
          <target state="translated">&lt;code&gt;PACKET_OTHERHOST&lt;/code&gt; - 무차별 모드에서 장치 드라이버에 의해 잡힌 다른 호스트로의 패킷.</target>
        </trans-unit>
        <trans-unit id="ec06c21d68911b200b53511fc38d05fbc524be93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_OUTGOING&lt;/code&gt; - Packet originating from the local host that is looped back to a packet socket.</source>
          <target state="translated">&lt;code&gt;PACKET_OUTGOING&lt;/code&gt; - 패킷 소켓으로 루프백되는 로컬 호스트에서 시작된 패킷.</target>
        </trans-unit>
        <trans-unit id="228d9ccca958f850c994a93311f2a9914f88e381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhotoImage&lt;/code&gt; for images in PGM, PPM, GIF and PNG formats. The latter is supported starting with Tk 8.6.</source>
          <target state="translated">&lt;code&gt;PhotoImage&lt;/code&gt; PGM, PPM, GIF 및 PNG 형식의 이미지 용 PhotoImage . 후자는 Tk 8.6부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ee2483c79c3692775eb1cf87101aee4fae11b9b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; objects are not callable, so the return value of instantiating our mocked out &lt;code&gt;request.Request&lt;/code&gt; is a non-callable mock. With the spec in place any typos in our asserts will raise the correct error:</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; 객체는 호출 할 수 없으므로 모의 &lt;code&gt;request.Request&lt;/code&gt; 을 인스턴스화 한 반환 값. 요청 은 호출 할 수없는 모의입니다. 사양을 적용하면 어설 션에 오타가 있으면 올바른 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dafa4fb0961d6008a123d1abcbf09ca262ee86db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_CUR&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; &amp;ndash; current stream position; &lt;em&gt;offset&lt;/em&gt; may be negative</source>
          <target state="translated">&lt;code&gt;SEEK_CUR&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; &amp;ndash; 현재 스트림 위치; &lt;em&gt;오프셋&lt;/em&gt; 은 음수 일 수 있습니다</target>
        </trans-unit>
        <trans-unit id="70b2b6a5409494fae402e1ea064036734789ecc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_CUR&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;: &amp;ldquo;seek&amp;rdquo; to the current position; &lt;em&gt;offset&lt;/em&gt; must be zero, which is a no-operation (all other values are unsupported).</source>
          <target state="translated">&lt;code&gt;SEEK_CUR&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; : 현재 위치로&amp;ldquo;탐색&amp;rdquo;; &lt;em&gt;오프셋&lt;/em&gt; 은 작동하지 않는 0이어야합니다 (다른 모든 값은 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="224bc629310fd4e526394d0688c609e0b07c505d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_END&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; &amp;ndash; end of the stream; &lt;em&gt;offset&lt;/em&gt; is usually negative</source>
          <target state="translated">&lt;code&gt;SEEK_END&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; &amp;ndash; 스트림 끝; &lt;em&gt;오프셋&lt;/em&gt; 은 일반적으로 음수</target>
        </trans-unit>
        <trans-unit id="f6f968a610688da614fdbfce8670aba65a2f933f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_END&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;: seek to the end of the stream; &lt;em&gt;offset&lt;/em&gt; must be zero (all other values are unsupported).</source>
          <target state="translated">&lt;code&gt;SEEK_END&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; : 스트림의 끝을 찾으십시오. &lt;em&gt;오프셋&lt;/em&gt; 은 0이어야합니다 (다른 모든 값은 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="d3be8655900e5b79b9bcfb826f472c70933ab8e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_SET&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; &amp;ndash; start of the stream (the default); &lt;em&gt;offset&lt;/em&gt; should be zero or positive</source>
          <target state="translated">&lt;code&gt;SEEK_SET&lt;/code&gt; 또는 &lt;code&gt;0&lt;/code&gt; &amp;ndash; 스트림 시작 (기본값); &lt;em&gt;오프셋&lt;/em&gt; 은 0 또는 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="38c526dc57d11b18aaf46af39f4c9cb078ce072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_SET&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;: seek from the start of the stream (the default); &lt;em&gt;offset&lt;/em&gt; must either be a number returned by &lt;a href=&quot;#io.TextIOBase.tell&quot;&gt;&lt;code&gt;TextIOBase.tell()&lt;/code&gt;&lt;/a&gt;, or zero. Any other &lt;em&gt;offset&lt;/em&gt; value produces undefined behaviour.</source>
          <target state="translated">&lt;code&gt;SEEK_SET&lt;/code&gt; 또는 &lt;code&gt;0&lt;/code&gt; : 스트림의 시작부터 검색합니다 (기본값). &lt;em&gt;오프셋&lt;/em&gt; 은 &lt;a href=&quot;#io.TextIOBase.tell&quot;&gt; &lt;code&gt;TextIOBase.tell()&lt;/code&gt; &lt;/a&gt; 반환 한 숫자 이거나 0이어야합니다. 다른 &lt;em&gt;오프셋&lt;/em&gt; 값은 정의되지 않은 동작을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3d7834f8eccd042627eb164556a948438f7b56d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SMTPUTF8&lt;/code&gt; was given in the &lt;em&gt;mail_options&lt;/em&gt; but is not supported by the server.</source>
          <target state="translated">&lt;code&gt;SMTPUTF8&lt;/code&gt; 는 에 주어진 &lt;em&gt;mail_options&lt;/em&gt; 하지만 서버에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9dfb3838ee142ac2172444b4140bd653f237dd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server&lt;/code&gt; additionally has an &lt;a href=&quot;#multiprocessing.managers.BaseManager.address&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">&lt;code&gt;Server&lt;/code&gt; 에는 추가적으로 &lt;a href=&quot;#multiprocessing.managers.BaseManager.address&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba1a72607e6305a41ba14948b9fcebf1c805888f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server&lt;/code&gt; is retained as an alias for &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; for backwards compatibility. New code should use &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Server&lt;/code&gt; 는 이전 버전과의 호환성을 위해 &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt; &lt;code&gt;ServerProxy&lt;/code&gt; &lt;/a&gt; 의 별칭으로 유지 됩니다. 새 코드는 &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt; &lt;code&gt;ServerProxy&lt;/code&gt; 를&lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="59cf3772f9d26e2913a32bc586a13a6da6390eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleNamespace&lt;/code&gt; may be useful as a replacement for &lt;code&gt;class NS: pass&lt;/code&gt;. However, for a structured record type use &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;SimpleNamespace&lt;/code&gt; 는 &lt;code&gt;class NS: pass&lt;/code&gt; 대체하는 데 유용 할 수 있습니다 . 그러나 구조화 된 레코드 유형의 경우 &lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="62c5db67e8462033f2e1776b1b1d386598adc560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; The start boundary claimed in the &lt;em&gt;Content-Type&lt;/em&gt; header was never found.</source>
          <target state="translated">&lt;code&gt;StartBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; &lt;em&gt;Content-Type&lt;/em&gt; 헤더에 청구 된 시작 경계를 찾지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="331c7ed9922a0c62619e6e5eb06a2331b718ff76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartElementHandler&lt;/code&gt; will receive the following strings for each element:</source>
          <target state="translated">&lt;code&gt;StartElementHandler&lt;/code&gt; 는 각 요소에 대해 다음 문자열을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="bb16e6c1a7627d79ad1d006f2473a69942573074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TZPATH&lt;/code&gt; may contain only absolute paths, never relative paths, regardless of how it is configured.</source>
          <target state="translated">&lt;code&gt;TZPATH&lt;/code&gt; 는 구성 방법에 관계없이 절대 경로 만 포함 할 수 있으며 상대 경로는 포함하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="105fab404c5b06739ff5dc12b1b3c70befa8ffd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text&lt;/code&gt; is an alias for &lt;code&gt;str&lt;/code&gt;. It is provided to supply a forward compatible path for Python 2 code: in Python 2, &lt;code&gt;Text&lt;/code&gt; is an alias for &lt;code&gt;unicode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; 는 &lt;code&gt;str&lt;/code&gt; 의 별명입니다 . Python 2 코드에 대한 순방향 호환 경로를 제공하기 위해 제공됩니다. Python 2에서 &lt;code&gt;Text&lt;/code&gt; 는 &lt;code&gt;unicode&lt;/code&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="697501498495624c355c008305361dc09c86d0fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; is a command-line front-end to this class and contains a good example of its use.</source>
          <target state="translated">&lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; 는이 클래스의 명령 행 프론트 엔드이며 그 사용법에 대한 좋은 예를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="065f2a3263c882472116173b1101a084dbf40717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tools/scripts/ndiff.py&lt;/code&gt; is a command-line front-end to this function.</source>
          <target state="translated">&lt;code&gt;Tools/scripts/ndiff.py&lt;/code&gt; 는이 기능의 명령 행 프론트 엔드입니다.</target>
        </trans-unit>
        <trans-unit id="87b8a5735f626bb15a7737826ce34325fe1e1a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if a domain was explicitly specified by the server.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 서버가 도메인을 명시 적으로 지정한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="85d383673736ac4428e8b421cc3cf26d863e6fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if a port or set of ports was explicitly specified by the server (in the &lt;em&gt;Set-Cookie&lt;/em&gt; / &lt;em&gt;Set-Cookie2&lt;/em&gt; header).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 포트의 포트 또는 세트는 명시 적으로합니다 (의 서버에 의해 지정된 경우 &lt;em&gt;설정 - 쿠키&lt;/em&gt; / &lt;em&gt;하는 Set-Cookie2의&lt;/em&gt; 헤더).</target>
        </trans-unit>
        <trans-unit id="9bdb437a6648e8cb306ce86ad2fc69be137fbb85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if an item of &lt;em&gt;s&lt;/em&gt; is equal to &lt;em&gt;x&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;em&gt;s&lt;/em&gt; 의 항목이 &lt;em&gt;x&lt;/em&gt; 와 같으면 true , 그렇지 않으면 &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01fe00235cf4e4527a9ca0548865482259dae1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if arbitrary Unicode strings can be used as file names (within limitations imposed by the file system).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 임의의 유니 코드 문자열을 파일 이름으로 사용할 수있는 경우 (파일 시스템에 의해 부과 된 제한 내에서) true 입니다.</target>
        </trans-unit>
        <trans-unit id="a10296320d6a296e2c2a5e70214a55e54dd2e2f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if cookie has passed the time at which the server requested it should expire. If &lt;em&gt;now&lt;/em&gt; is given (in seconds since the epoch), return whether the cookie has expired at the specified time.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 경우 쿠키는 서버가 만료해야 요청한 시간을 통과했다. &lt;em&gt;지금&lt;/em&gt; (에포크 이후 초 단위로) 지정된 경우 쿠키가 지정된 시간에 만료되었는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3715f1ab7c99907fd36f5e389527fefc8edf6e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if cookie should only be returned over a secure connection.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 쿠키는 보안 연결을 통해 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="089703c3b70669d0937760dec1bedfb1e3715e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if other code jumps to here, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 다른 코드가 여기로 이동하면 True , 그렇지 않으면 &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c52cf2c30a611b33898f2ea26c365e2761d4da34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is tracing Python memory allocations, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt; 모듈이 Python 메모리 할당을 추적 하는 경우 true 이고 , &lt;code&gt;False&lt;/code&gt; 않으면 False 입니다.</target>
        </trans-unit>
        <trans-unit id="73eddc4810a51631fa2d60c12260422a76b74300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is allocated for private networks. See &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;iana-ipv4-special-registry&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;iana-ipv6-special-registry&lt;/a&gt; (for IPv6).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 개인 네트워크에 할당 된 경우 true 입니다. 참조 &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;IANA를-의 IPv4 특수 레지스트리&lt;/a&gt; (IPv4의 경우) 또는 &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;IANA에서 IPv6-특수 레지스트리&lt;/a&gt; (IPv6에 대한 참조).</target>
        </trans-unit>
        <trans-unit id="3360c1cd0f068be5265c184d1b1a8db80445782e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is allocated for public networks. See &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;iana-ipv4-special-registry&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;iana-ipv6-special-registry&lt;/a&gt; (for IPv6).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 공용 네트워크에 할당 된 경우 true 입니다. 참조 &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;IANA를-의 IPv4 특수 레지스트리&lt;/a&gt; (IPv4의 경우) 또는 &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;IANA에서 IPv6-특수 레지스트리&lt;/a&gt; (IPv6에 대한 참조).</target>
        </trans-unit>
        <trans-unit id="f1a886f04f0ee6f36191b8332e0a5697d75b2822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is otherwise IETF reserved.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 그렇지 않으면 IETF 예약 된 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="bd56c4d5dec5d35db1e58924dfbef4979632f2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for link-local usage. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3927.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3927&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 링크 로컬 사용을 위해 예약 된 경우 true 입니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc3927.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3927을&lt;/strong&gt;&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="772b438bc8a2c5dcec9d79a1cd4ba6963f160691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for multicast use. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3171.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3171&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 멀티 캐스트 용으로 예약되어 있으면 참 입니다. 참조 &lt;a href=&quot;https://tools.ietf.org/html/rfc3171.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3171&lt;/strong&gt;&lt;/a&gt; (IPv4의 경우) 또는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (IPv6에 대한).</target>
        </trans-unit>
        <trans-unit id="bd9dd18ce0abccc7c6db883a02cbd521fbe765b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for site-local usage. Note that the site-local address space has been deprecated by &lt;a href=&quot;https://tools.ietf.org/html/rfc3879.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 3879&lt;/strong&gt;&lt;/a&gt;. Use &lt;a href=&quot;#ipaddress.IPv4Address.is_private&quot;&gt;&lt;code&gt;is_private&lt;/code&gt;&lt;/a&gt; to test if this address is in the space of unique local addresses as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4193.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 4193&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 사이트 로컬 사용을 위해 예약 된 경우 true 입니다. 사이트 로컬 주소 공간은 &lt;a href=&quot;https://tools.ietf.org/html/rfc3879.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 3879&lt;/strong&gt;&lt;/a&gt; 에서 더 이상 사용되지 않습니다 . &lt;a href=&quot;#ipaddress.IPv4Address.is_private&quot;&gt; &lt;code&gt;is_private&lt;/code&gt; &lt;/a&gt; 를 사용 하여이 주소가 &lt;a href=&quot;https://tools.ietf.org/html/rfc4193.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 4193에&lt;/strong&gt;&lt;/a&gt; 정의 된 고유 한 로컬 주소 공간에 있는지 테스트 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4dbba5e70ccbb0d6431d83334d8aa2f4803ff2f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for site-local usage. Note that the site-local address space has been deprecated by &lt;a href=&quot;https://tools.ietf.org/html/rfc3879.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3879&lt;/strong&gt;&lt;/a&gt;. Use &lt;a href=&quot;#ipaddress.IPv4Address.is_private&quot;&gt;&lt;code&gt;is_private&lt;/code&gt;&lt;/a&gt; to test if this address is in the space of unique local addresses as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4193.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 4193&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 사이트 로컬 사용을 위해 예약 된 경우 True 입니다. 사이트 로컬 주소 공간은 &lt;a href=&quot;https://tools.ietf.org/html/rfc3879.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 3879&lt;/strong&gt;&lt;/a&gt; 에서 더 이상 사용되지 않습니다 . &lt;a href=&quot;#ipaddress.IPv4Address.is_private&quot;&gt; &lt;code&gt;is_private&lt;/code&gt; &lt;/a&gt; 를 사용 하여이 주소가 &lt;a href=&quot;https://tools.ietf.org/html/rfc4193.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 4193에&lt;/strong&gt;&lt;/a&gt; 정의 된 고유 한 로컬 주소 공간에 있는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="2c029d9b6792c8513f54cb7062ebaca8de3697f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is unspecified. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5735.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5735&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 주소가 지정되지 않은 경우 true 입니다. 참조 &lt;a href=&quot;https://tools.ietf.org/html/rfc5735.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5735&lt;/strong&gt;&lt;/a&gt; (IPv4의 경우) 또는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (IPv6에 대한).</target>
        </trans-unit>
        <trans-unit id="6f1ec2bb80a61cd28b0d6fc3a2fd17a70a925102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the domain explicitly specified by the server began with a dot (&lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 서버에서 명시 적으로 지정한 도메인이 점 ( &lt;code&gt;'.'&lt;/code&gt; )으로 시작한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="0ec00c16f4b00dbf97e26dbc91cbe352f9bce5a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the end-of-stream marker has been reached.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 스트림 끝 마커에 도달하면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="bd4d824e854e9a4af6f535420fafc5b27c4e02b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the epoll object is closed.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; epoll 오브젝트가 닫혀 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="031938879a8c7e71c8971443edfb6df76fc50169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the file is closed.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 파일이 닫혀 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="5ddf22c4454d4bc36be0f53cd8afc72c5d1be89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the kqueue object is closed.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; kqueue 객체가 닫혀 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="687a41be906b6a25c636435feb65114fa5149ee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the native OS type of the environment is bytes (eg. &lt;code&gt;False&lt;/code&gt; on Windows).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 환경의 기본 OS 유형이 바이트 (예 : Windows의 &lt;code&gt;False&lt;/code&gt; ) 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="634f1a4fd3ac9b15410283662e835f01b8c301ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the polling object is closed.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 폴링 개체가 닫혀 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="5d6d3c2791383915bec2a08ce103f53afba04644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the running interpreter is Jython.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 실행중인 인터프리터가 Jython 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="981551f27707c9b43e39b5675c52a157f4dc6e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the stream is closed.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 스트림이 닫혀 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="e717dfc45ddf8fa78a955cb72c4f2462a0805875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the system is Android.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 시스템이 안드로이드됩니다.</target>
        </trans-unit>
        <trans-unit id="f1c6482c0254488fab5a5083f6929f57c67ad317" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this cookie was received as an &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookie (ie. the cookie arrived in a &lt;em&gt;Set-Cookie&lt;/em&gt; header, and the value of the Version cookie-attribute in that header was 1). This attribute is provided because &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; may &amp;lsquo;downgrade&amp;rsquo; RFC 2109 cookies to Netscape cookies, in which case &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; is 0.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이 쿠키는로받은 경우 &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; 의 쿠키 (예. 쿠키는에 도착 &lt;em&gt;설정 쿠키&lt;/em&gt; 헤더 및 해당 헤더의 버전 쿠키 속성의 값은 1). &lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt; 가 RFC 2109 쿠키를 Netscape 쿠키로 '다운 그레이드'할 수 있기 때문에이 속성이 제공 되며이 경우 &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="0ef5285db725314394e8a3871d85960782c3e1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this is a loopback address. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3330.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3330&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이것이 루프백 주소이면 참 입니다. 참조 &lt;a href=&quot;https://tools.ietf.org/html/rfc3330.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3330&lt;/strong&gt;&lt;/a&gt; (IPv4의 경우) 또는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (IPv6에 대한).</target>
        </trans-unit>
        <trans-unit id="231c6f7ed15136e131fedd2e7ce796ca8b89c5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this is a session cookie.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이 세션 쿠키의 경우.</target>
        </trans-unit>
        <trans-unit id="b258d37a17d357605b7e8b2bb7ecd4349c412ff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this network is partly or wholly contained in &lt;em&gt;other&lt;/em&gt; or &lt;em&gt;other&lt;/em&gt; is wholly contained in this network.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이 네트워크는 부분적으로 또는 전부에 포함되는 경우 &lt;em&gt;, 다른&lt;/em&gt; 또는 &lt;em&gt;다른 하나는&lt;/em&gt; 전적으로이 네트워크에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="69c115941e811302cf7868fe89a886d0e5503074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when verbose output is enabled. Should be checked when more detailed information is desired about a running test. &lt;em&gt;verbose&lt;/em&gt; is set by &lt;code&gt;test.regrtest&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 자세한 출력이 활성화되면 true 입니다. 실행중인 테스트에 대한 자세한 정보가 필요한 경우 확인해야합니다. &lt;em&gt;verbose&lt;/em&gt; 는 &lt;code&gt;test.regrtest&lt;/code&gt; 에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ff20a25f9f9bbe9f585eed9337a30905340b6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt;/&lt;code&gt;False&lt;/code&gt; value indicating whether the item&amp;rsquo;s children should be displayed or hidden.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 항목의 자식 표시 여부를 나타내는 True / &lt;code&gt;False&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="40260a4b17f04d743794e0c93be3e2227e2f7dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type[Any]&lt;/code&gt; is equivalent to &lt;code&gt;Type&lt;/code&gt; which in turn is equivalent to &lt;code&gt;type&lt;/code&gt;, which is the root of Python&amp;rsquo;s metaclass hierarchy.</source>
          <target state="translated">&lt;code&gt;Type[Any]&lt;/code&gt; 는 &lt;code&gt;Type&lt;/code&gt; 과 동등하며 , 파이썬의 메타 클래스 계층 구조의 루트 인 &lt;code&gt;type&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe18b0438a24195e2e85ec47ef86770f0fcb729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedDict&lt;/code&gt; creates a dictionary type that expects all of its instances to have a certain set of keys, where each key is associated with a value of a consistent type. This expectation is not checked at runtime but is only enforced by type checkers. Usage:</source>
          <target state="translated">&lt;code&gt;TypedDict&lt;/code&gt; 는 모든 인스턴스에 특정 키 세트가있을 것으로 예상하는 사전 유형을 작성합니다. 여기서 각 키는 일관된 유형의 값과 연관됩니다. 이 기대치는 런타임에 확인되지 않고 유형 검사기에만 적용됩니다. 용법:</target>
        </trans-unit>
        <trans-unit id="c9575f2325991efc7a610b0cdb4289e4183298cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedDict&lt;/code&gt; declares a dictionary type that expects all of its instances to have a certain set of keys, where each key is associated with a value of a consistent type. This expectation is not checked at runtime but is only enforced by type checkers. Usage:</source>
          <target state="translated">&lt;code&gt;TypedDict&lt;/code&gt; 는 모든 인스턴스에 특정 키 집합이있을 것으로 예상하는 사전 형식을 선언합니다. 여기서 각 키는 일관된 형식의 값과 연결됩니다. 이 예상은 런타임시 확인되지 않지만 유형 검사기에서만 적용됩니다. 용법:</target>
        </trans-unit>
        <trans-unit id="6c7b1adf598548410e29b657190dc44b612707b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000007F&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U-00000000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000007F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87f1dd35c3eb0acb5a57f4ff9c7d216ad08a621d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000080&lt;/code&gt; &amp;hellip; &lt;code&gt;U-000007FF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U-00000080&lt;/code&gt; &amp;hellip; &lt;code&gt;U-000007FF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba5bca33f57885324d0a08b6b300eb59a1131834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000800&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000FFFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U-00000800&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000FFFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10e2d589941d4784b5bbe40534284aac90c7314f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00010000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0010FFFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U-00010000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0010FFFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0d218df63e3e14b9431121a137b9c0c0cd900a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpacker&lt;/code&gt; is the complementary class which unpacks XDR data values from a string buffer. The input buffer is given as &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;Unpacker&lt;/code&gt; 는 문자열 버퍼에서 XDR 데이터 값을 압축 해제하는 보완 클래스입니다. 입력 버퍼는 &lt;em&gt;data&lt;/em&gt; 로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="4946de6a101e02f29f92199c61ce2e8f0357d08e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WinError&lt;/code&gt; is a function which will call Windows &lt;code&gt;FormatMessage()&lt;/code&gt; api to get the string representation of an error code, and &lt;em&gt;returns&lt;/em&gt; an exception. &lt;code&gt;WinError&lt;/code&gt; takes an optional error code parameter, if no one is used, it calls &lt;a href=&quot;#ctypes.GetLastError&quot;&gt;&lt;code&gt;GetLastError()&lt;/code&gt;&lt;/a&gt; to retrieve it.</source>
          <target state="translated">&lt;code&gt;WinError&lt;/code&gt; 는 Windows &lt;code&gt;FormatMessage()&lt;/code&gt; api를 호출 하여 오류 코드의 문자열 표현을 가져 &lt;em&gt;오고&lt;/em&gt; 예외를 &lt;em&gt;반환&lt;/em&gt; 하는 &lt;em&gt;함수&lt;/em&gt; 입니다. &lt;code&gt;WinError&lt;/code&gt; 는 선택적 오류 코드 매개 변수를 사용합니다. 아무도 사용하지 않으면 &lt;a href=&quot;#ctypes.GetLastError&quot;&gt; &lt;code&gt;GetLastError()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d4bfed01725c066df3aa967ccc3cc915077c8d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Writer&lt;/code&gt; objects (&lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; instances and objects returned by the &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; function) have the following public methods. A &lt;em&gt;row&lt;/em&gt; must be an iterable of strings or numbers for &lt;code&gt;Writer&lt;/code&gt; objects and a dictionary mapping fieldnames to strings or numbers (by passing them through &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; first) for &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; objects. Note that complex numbers are written out surrounded by parens. This may cause some problems for other programs which read CSV files (assuming they support complex numbers at all).</source>
          <target state="translated">&lt;code&gt;Writer&lt;/code&gt; 객체 ( &lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; &lt;/a&gt; 인스턴스 및 &lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer()&lt;/code&gt; &lt;/a&gt; 함수가 반환 한 객체 )에는 다음과 같은 공용 메서드가 있습니다. &lt;em&gt;행&lt;/em&gt; 에 대한 문자열이나 숫자의 반복 가능한이어야 &lt;code&gt;Writer&lt;/code&gt; 객체와 문자열이나 숫자에 대한 사전 매핑 fieldName에 (통해 전달하여 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 첫번째)에 대한 &lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; 이&lt;/a&gt; 객체. 복소수는 괄호로 둘러싸여 작성됩니다. 이로 인해 CSV 파일을 읽는 다른 프로그램에 문제가 발생할 수 있습니다 (복소수를 전혀 지원한다고 가정).</target>
        </trans-unit>
        <trans-unit id="7605b951672655f0371560ddfc74430b6af927df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="translated">&lt;code&gt;YYYY-MM-DDTHH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt; &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0 인 경우 YYYY-MM-DDTHH : MM : SS + HH : MM [: SS [.ffffff]]</target>
        </trans-unit>
        <trans-unit id="d4fe1400328fac243f87fe23413226bb2dffda31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="translated">&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt; &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0이 아닌 경우)</target>
        </trans-unit>
        <trans-unit id="daf64d448a68f885b0219634ffe0cea66ee7d241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="translated">&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff&lt;/code&gt; &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0이 아닌 경우 YYYY-MM-DDTHH : MM : SS.ffffff</target>
        </trans-unit>
        <trans-unit id="ea9f0b8104aaa5d14bb70fbbfa28f960288d71ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="translated">&lt;code&gt;YYYY-MM-DDTHH:MM:SS&lt;/code&gt; &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt; &lt;code&gt;microsecond&lt;/code&gt; &lt;/a&gt; 0 인 경우 YYYY-MM-DDTHH : MM : SS</target>
        </trans-unit>
        <trans-unit id="451792b850110be012cea7e9b20b168a9474bcb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneInfo(key)&lt;/code&gt;: When constructed with the primary constructor, a &lt;code&gt;ZoneInfo&lt;/code&gt; object is serialized by key, and when deserialized, the deserializing process uses the primary and thus it is expected that these are expected to be the same object as other references to the same time zone. For example, if &lt;code&gt;europe_berlin_pkl&lt;/code&gt; is a string containing a pickle constructed from &lt;code&gt;ZoneInfo(&quot;Europe/Berlin&quot;)&lt;/code&gt;, one would expect the following behavior:</source>
          <target state="translated">&lt;code&gt;ZoneInfo(key)&lt;/code&gt; : 기본 생성자로 생성되면 &lt;code&gt;ZoneInfo&lt;/code&gt; 개체가 키로 직렬화되고 역 직렬화되면 역 직렬화 프로세스에서 기본을 사용하므로 동일한 개체에 대한 다른 참조와 동일한 개체가 될 것으로 예상됩니다. 시간대. 예를 들어 &lt;code&gt;europe_berlin_pkl&lt;/code&gt; 이 &lt;code&gt;ZoneInfo(&quot;Europe/Berlin&quot;)&lt;/code&gt; 에서 생성 된 피클을 포함하는 문자열 인 경우 다음과 같은 동작이 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="8d3b38f959824d42c03a1b68bd841787e1d83962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneInfo.from_file(fobj, /, key=None)&lt;/code&gt;: When constructed from a file, the &lt;code&gt;ZoneInfo&lt;/code&gt; object raises an exception on pickling. If an end user wants to pickle a &lt;code&gt;ZoneInfo&lt;/code&gt; constructed from a file, it is recommended that they use a wrapper type or a custom serialization function: either serializing by key or storing the contents of the file object and serializing that.</source>
          <target state="translated">&lt;code&gt;ZoneInfo.from_file(fobj, /, key=None)&lt;/code&gt; : 파일에서 생성 될 때 &lt;code&gt;ZoneInfo&lt;/code&gt; 객체는 피클 링에서 예외를 발생시킵니다. 최종 사용자가 파일에서 생성 된 &lt;code&gt;ZoneInfo&lt;/code&gt; 를 피클하려는 경우 래퍼 유형 또는 사용자 지정 직렬화 함수를 사용하는 것이 좋습니다. 키로 직렬화하거나 파일 객체의 내용을 저장하고이를 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="c3a250192890ea609f3974c5d3505d35c0c356b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneInfo.no_cache(key)&lt;/code&gt;: When constructed from the cache-bypassing constructor, the &lt;code&gt;ZoneInfo&lt;/code&gt; object is also serialized by key, but when deserialized, the deserializing process uses the cache bypassing constructor. If &lt;code&gt;europe_berlin_pkl_nc&lt;/code&gt; is a string containing a pickle constructed from &lt;code&gt;ZoneInfo.no_cache(&quot;Europe/Berlin&quot;)&lt;/code&gt;, one would expect the following behavior:</source>
          <target state="translated">&lt;code&gt;ZoneInfo.no_cache(key)&lt;/code&gt; : 캐시 우회 생성자에서 생성되면 &lt;code&gt;ZoneInfo&lt;/code&gt; 객체도 키로 직렬화되지만 역 직렬화되면 역 직렬화 프로세스에서 캐시 우회 생성자를 사용합니다. 경우 &lt;code&gt;europe_berlin_pkl_nc&lt;/code&gt; 이 로 구성 피클이 포함 된 문자열입니다 &lt;code&gt;ZoneInfo.no_cache(&quot;Europe/Berlin&quot;)&lt;/code&gt; , 하나는 다음과 같은 동작을 기대 :</target>
        </trans-unit>
        <trans-unit id="9190b93c230660d9a16f37e20376c2de20b2f348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; or &lt;code&gt;\x0c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\f&lt;/code&gt; 또는 &lt;code&gt;\x0c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cbdce735af311d68a8d0e3b9f6670b9dc3787cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; or &lt;code&gt;\x0b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\v&lt;/code&gt; 또는 &lt;code&gt;\x0b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d978477ee996b12301724abe7326aecebf18a8d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_BIN_NAME__&lt;/code&gt; is replaced with the name of the bin directory (either &lt;code&gt;bin&lt;/code&gt; or &lt;code&gt;Scripts&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;__VENV_BIN_NAME__&lt;/code&gt; 은 bin 디렉토리의 이름 ( &lt;code&gt;bin&lt;/code&gt; 또는 &lt;code&gt;Scripts&lt;/code&gt; ) 으로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="865feace518d32a0eac63c7910eadaa099dbe4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_DIR__&lt;/code&gt; is replaced with the absolute path of the environment directory.</source>
          <target state="translated">&lt;code&gt;__VENV_DIR__&lt;/code&gt; 은 환경 디렉토리의 절대 경로로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="7f58c0a05e5a12346cbe4f79dac01c2ddb5dcf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_NAME__&lt;/code&gt; is replaced with the environment name (final path segment of environment directory).</source>
          <target state="translated">&lt;code&gt;__VENV_NAME__&lt;/code&gt; 은 환경 이름 (환경 디렉토리의 최종 경로 세그먼트)으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="b6308235848123ba3e04c445cb3d9675f5d77a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_PROMPT__&lt;/code&gt; is replaced with the prompt (the environment name surrounded by parentheses and with a following space)</source>
          <target state="translated">&lt;code&gt;__VENV_PROMPT__&lt;/code&gt; 가 프롬프트로 대체됩니다 (환경 이름은 괄호로 묶고 다음 공백으로 둘러싸 임).</target>
        </trans-unit>
        <trans-unit id="21e8d7aa9aa4d2b40805f6572d34d11c83534e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_PYTHON__&lt;/code&gt; is replaced with the absolute path of the environment&amp;rsquo;s executable.</source>
          <target state="translated">&lt;code&gt;__VENV_PYTHON__&lt;/code&gt; 은 환경 실행 파일의 절대 경로로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="001b6ed0ae0e32d3579018daf226d194cc592d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__aexit__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__aexit__&lt;/code&gt; : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac98801cbad94e8f29ac641ffd53863853507f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__bool__&lt;/code&gt;: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__bool__&lt;/code&gt; : &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6683dfc639b0ef02507cc3b0cf781d317d5950c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__complex__&lt;/code&gt;: &lt;code&gt;1j&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__complex__&lt;/code&gt; : &lt;code&gt;1j&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32b257396150b3ec976bbf80e573363cf077d666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcdee527045fd02254c2ed531697afa19aa5f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d35e0ac39a57cd7b6436f010415f5561bd91b5a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;discard&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt; , &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;discard&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605be098952e92e27a8f117c957d24b5a242aacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__reversed__&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, and &lt;code&gt;count&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__reversed__&lt;/code&gt; , &lt;code&gt;index&lt;/code&gt; 및 &lt;code&gt;count&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f91b2e5a8c003b1e07c01100bb4833a56ca2b63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;items&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; , &lt;code&gt;keys&lt;/code&gt; , &lt;code&gt;items&lt;/code&gt; , &lt;code&gt;values&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;__eq__&lt;/code&gt; 및 &lt;code&gt;__ne__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31e5de90cfc88097315094413f31698293824f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__contains__&lt;/code&gt; : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c60197214381850a31219849341973f0c68fd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__dir__&lt;/code&gt;, &lt;code&gt;__format__&lt;/code&gt; and &lt;code&gt;__subclasses__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__dir__&lt;/code&gt; , &lt;code&gt;__format__&lt;/code&gt; 및 &lt;code&gt;__subclasses__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c49a22469e9e307a382503d4a91e38ecdb78548f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__exit__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__exit__&lt;/code&gt; : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8fef09b3be2feaa45f4c9860b7ef9e3fee3aa94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__file__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; are &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#import-mod-attrs&quot;&gt;set as normal&lt;/a&gt; based on the module spec.</source>
          <target state="translated">&lt;code&gt;__file__&lt;/code&gt; , &lt;code&gt;__cached__&lt;/code&gt; , &lt;code&gt;__loader__&lt;/code&gt; 및 &lt;code&gt;__package__&lt;/code&gt; 는 모듈 사양에 따라 &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#import-mod-attrs&quot;&gt;정상적으로 설정됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="416da2ee5a8e93c88163eab10f2e4838c4be3770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__file__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; are &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#import-mod-attrs&quot;&gt;set as normal&lt;/a&gt; based on the module spec.</source>
          <target state="translated">&lt;code&gt;__file__&lt;/code&gt; , &lt;code&gt;__cached__&lt;/code&gt; , &lt;code&gt;__loader__&lt;/code&gt; 및 &lt;code&gt;__package__&lt;/code&gt; 는 모듈 사양에 따라 &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#import-mod-attrs&quot;&gt;정상&lt;/a&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0dcc087a24e219889f3c13e8075f61a9f2bd7537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float__&lt;/code&gt;: &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__float__&lt;/code&gt; : &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71e57cfb1f896034b088cd7c09b584cc62ddce4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__future__&lt;/code&gt; &amp;mdash; Future statement definitions</source>
          <target state="translated">&lt;code&gt;__future__&lt;/code&gt; &amp;mdash; 향후 진술 정의</target>
        </trans-unit>
        <trans-unit id="c05f303b3ef4722b3302d9320d6574d7799f98f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__ge__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__ge__&lt;/code&gt; : &lt;code&gt;NotImplemented&lt;/code&gt; 않음</target>
        </trans-unit>
        <trans-unit id="6177f674de0a25970d061e3c5df652fe7fc7bee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__get__&lt;/code&gt;, &lt;code&gt;__set__&lt;/code&gt; and &lt;code&gt;__delete__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__get__&lt;/code&gt; , &lt;code&gt;__set__&lt;/code&gt; 및 &lt;code&gt;__delete__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0fbd50d760f3c8c2c634b984cc4c5ad146eb6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getattr__&lt;/code&gt;, &lt;code&gt;__setattr__&lt;/code&gt;, &lt;code&gt;__init__&lt;/code&gt; and &lt;code&gt;__new__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getattr__&lt;/code&gt; , &lt;code&gt;__setattr__&lt;/code&gt; , &lt;code&gt;__init__&lt;/code&gt; 및 &lt;code&gt;__new__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e17b7f7a30adbc9927de1d3acd6ebd485f6cd79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getformat__&lt;/code&gt; and &lt;code&gt;__setformat__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getformat__&lt;/code&gt; 및 &lt;code&gt;__setformat__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c4a1558b641b59c9795c378d9382b61cc2c2aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getitem__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0b226697c2d30f3242e108dbd90de2b3d7d7964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getitem__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="219dcd9e1c3251516f2a107d77135d480c55dc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__setitem__&lt;/code&gt;, &lt;code&gt;__delitem__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getitem__&lt;/code&gt; , &lt;code&gt;__setitem__&lt;/code&gt; , &lt;code&gt;__delitem__&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="569ba1b503aef5aa9c69c24764dc1ce3b1f37a11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__setitem__&lt;/code&gt;, &lt;code&gt;__delitem__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__getitem__&lt;/code&gt; , &lt;code&gt;__setitem__&lt;/code&gt; , &lt;code&gt;__delitem__&lt;/code&gt; , &lt;code&gt;__len__&lt;/code&gt; , &lt;code&gt;insert&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d789b12e3615bb9b93e269dd4de26d7dea3ae56a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__gt__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__gt__&lt;/code&gt; : &lt;code&gt;NotImplemented&lt;/code&gt; 않음</target>
        </trans-unit>
        <trans-unit id="ed54e4988bb2cab07cc46503e9efc959b3463434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__hash__&lt;/code&gt;, &lt;code&gt;__sizeof__&lt;/code&gt;, &lt;code&gt;__repr__&lt;/code&gt; and &lt;code&gt;__str__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__hash__&lt;/code&gt; , &lt;code&gt;__sizeof__&lt;/code&gt; , &lt;code&gt;__repr__&lt;/code&gt; 및 &lt;code&gt;__str__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6201e988c33fa886bfbbf59c4fb1fb43d840c5b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__hash__&lt;/code&gt;: default hash for the mock</source>
          <target state="translated">&lt;code&gt;__hash__&lt;/code&gt; : 모의의 기본 해시</target>
        </trans-unit>
        <trans-unit id="35157bed390373878a7a450c28cffd04e4e06ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__index__&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__index__&lt;/code&gt; : &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="344dbec80e98bd78d5c5ba28cebe49cf79e4edbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__int64&lt;/code&gt; or &lt;code&gt;long long&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__int64&lt;/code&gt; 또는 &lt;code&gt;long long&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c8c09554bfab33286cc054db89a2c2f63631abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__int__&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__int__&lt;/code&gt; : &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b017900b9c2bb7dea7c30cd3fa722a2dd25072e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__iter__&lt;/code&gt;: &lt;code&gt;iter([])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__iter__&lt;/code&gt; : &lt;code&gt;iter([])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cb45dd876077f4f31630254d244888b73920f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__le__&lt;/code&gt;, &lt;code&gt;__lt__&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt;, &lt;code&gt;__ne__&lt;/code&gt;, &lt;code&gt;__gt__&lt;/code&gt;, &lt;code&gt;__ge__&lt;/code&gt;, &lt;code&gt;__and__&lt;/code&gt;, &lt;code&gt;__or__&lt;/code&gt;, &lt;code&gt;__sub__&lt;/code&gt;, &lt;code&gt;__xor__&lt;/code&gt;, and &lt;code&gt;isdisjoint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__le__&lt;/code&gt; , &lt;code&gt;__lt__&lt;/code&gt; , &lt;code&gt;__eq__&lt;/code&gt; , &lt;code&gt;__ne__&lt;/code&gt; , &lt;code&gt;__gt__&lt;/code&gt; , &lt;code&gt;__ge__&lt;/code&gt; , &lt;code&gt;__and__&lt;/code&gt; , &lt;code&gt;__or__&lt;/code&gt; , &lt;code&gt;__sub__&lt;/code&gt; , &lt;code&gt;__xor__&lt;/code&gt; 및 &lt;code&gt;isdisjoint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4806ec79e047ddce51126d03e643801c7e2a0e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__le__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__le__&lt;/code&gt; : &lt;code&gt;NotImplemented&lt;/code&gt; 않음</target>
        </trans-unit>
        <trans-unit id="de025175288b178e94bb4011180efc397ecd3904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__len__&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__len__&lt;/code&gt; : &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d2f6660531fbf0196b56936f761c4ca759399b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__lt__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__lt__&lt;/code&gt; : &lt;code&gt;NotImplemented&lt;/code&gt; 않음</target>
        </trans-unit>
        <trans-unit id="02d4af7788289ae25cae58b7520c176895d29e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__main__&lt;/code&gt; &amp;mdash; Top-level script environment</source>
          <target state="translated">&lt;code&gt;__main__&lt;/code&gt; &amp;mdash; 최상위 스크립트 환경</target>
        </trans-unit>
        <trans-unit id="1938c939dc3fb107efde1180b4489a494b189c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__members__&lt;/code&gt; is a read-only ordered mapping of &lt;code&gt;member_name&lt;/code&gt;:&lt;code&gt;member&lt;/code&gt; items. It is only available on the class.</source>
          <target state="translated">&lt;code&gt;__members__&lt;/code&gt; 는 &lt;code&gt;member_name&lt;/code&gt; : &lt;code&gt;member&lt;/code&gt; 항목 의 읽기 전용 순서 매핑입니다 . 수업에서만 이용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3533a837103e2e07075171c32e77828557fc7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__name__&lt;/code&gt; is set to &lt;em&gt;run_name&lt;/em&gt; if this optional argument is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and to &lt;code&gt;'&amp;lt;run_path&amp;gt;'&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;__name__&lt;/code&gt; 이 설정되어 &lt;em&gt;run_name&lt;/em&gt; 이 선택적 인수하지 않는 경우 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 과에 &lt;code&gt;'&amp;lt;run_path&amp;gt;'&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="5ac4a8ad88fee85df8ae2740ae6a89f904c32425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__name__&lt;/code&gt; is set to &lt;em&gt;run_name&lt;/em&gt; if this optional argument is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, to &lt;code&gt;mod_name + '.__main__'&lt;/code&gt; if the named module is a package and to the &lt;em&gt;mod_name&lt;/em&gt; argument otherwise.</source>
          <target state="translated">&lt;code&gt;__name__&lt;/code&gt; 로 설정되어 &lt;em&gt;run_name&lt;/em&gt; 이 선택적 인수하지 않는 경우 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을, &lt;code&gt;mod_name + '.__main__'&lt;/code&gt; 명명 된 모듈은 패키지와에있는 경우 &lt;em&gt;mod_name의&lt;/em&gt; 다른 인수.</target>
        </trans-unit>
        <trans-unit id="85e19aae50dd7b9e272dd0315e2cbb44e06438d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__prepare__&lt;/code&gt;, &lt;code&gt;__instancecheck__&lt;/code&gt;, &lt;code&gt;__subclasscheck__&lt;/code&gt;, &lt;code&gt;__del__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__prepare__&lt;/code&gt; , &lt;code&gt;__instancecheck__&lt;/code&gt; , &lt;code&gt;__subclasscheck__&lt;/code&gt; , &lt;code&gt;__del__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4f0ec8c3e75700a1ec5337eb5ba3c71c5626b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__reduce__&lt;/code&gt;, &lt;code&gt;__reduce_ex__&lt;/code&gt;, &lt;code&gt;__getinitargs__&lt;/code&gt;, &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__getstate__&lt;/code&gt; and &lt;code&gt;__setstate__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__reduce__&lt;/code&gt; , &lt;code&gt;__reduce_ex__&lt;/code&gt; , &lt;code&gt;__getinitargs__&lt;/code&gt; , &lt;code&gt;__getnewargs__&lt;/code&gt; , &lt;code&gt;__getstate__&lt;/code&gt; 및 &lt;code&gt;__setstate__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2f2ffb61376efdcc09fbfa202d6f97ee25aa703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__reversed__&lt;/code&gt; and &lt;code&gt;__missing__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__reversed__&lt;/code&gt; 및 &lt;code&gt;__missing__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd6a0306f27d5571676ca8aaab2dd8ca39dc51ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__round__&lt;/code&gt;, &lt;code&gt;__floor__&lt;/code&gt;, &lt;code&gt;__trunc__&lt;/code&gt; and &lt;code&gt;__ceil__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__round__&lt;/code&gt; , &lt;code&gt;__floor__&lt;/code&gt; , &lt;code&gt;__trunc__&lt;/code&gt; 및 &lt;code&gt;__ceil__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26ab76c5ceb3e1b70cc99c18454eff14c65240a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__sizeof__&lt;/code&gt;: default sizeof for the mock</source>
          <target state="translated">&lt;code&gt;__sizeof__&lt;/code&gt; : 모의의 기본 sizeof</target>
        </trans-unit>
        <trans-unit id="bded4cc6c32b0cdac8b5588f955ec7f3bce60d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__spec__&lt;/code&gt; will be set appropriately for the &lt;em&gt;actually&lt;/em&gt; imported module (that is, &lt;code&gt;__spec__.name&lt;/code&gt; will always be &lt;em&gt;mod_name&lt;/em&gt; or &lt;code&gt;mod_name + '.__main__&lt;/code&gt;, never &lt;em&gt;run_name&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;__spec__&lt;/code&gt; 은 &lt;em&gt;실제로&lt;/em&gt; 가져온 모듈에 적절하게 설정됩니다 (즉, &lt;code&gt;__spec__.name&lt;/code&gt; 은 항상 &lt;em&gt;mod_name&lt;/em&gt; 또는 &lt;code&gt;mod_name + '.__main__&lt;/code&gt; 이며 &lt;em&gt;run_name&lt;/em&gt; 은 &lt;em&gt;아닙니다&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="30b6ea90281d49856a1d2325694c447cad2de64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__str__&lt;/code&gt;: default str for the mock</source>
          <target state="translated">&lt;code&gt;__str__&lt;/code&gt; : 모의의 기본 str</target>
        </trans-unit>
        <trans-unit id="d9061158b3c03e1d60c43590badfea1e793b415b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_dummy_thread&lt;/code&gt; &amp;mdash; Drop-in replacement for the &lt;code&gt;_thread&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;_dummy_thread&lt;/code&gt; &amp;mdash; &lt;code&gt;_thread&lt;/code&gt; 모듈의 드롭 인 교체</target>
        </trans-unit>
        <trans-unit id="c85c0786413098f80ab2d907cbd48d9bafa0cea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_generate_next_value_&lt;/code&gt; &amp;ndash; used by the &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt; and by &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; to get an appropriate value for an enum member; may be overridden</source>
          <target state="translated">&lt;code&gt;_generate_next_value_&lt;/code&gt; &amp;ndash; 열거 형 멤버에 적절한 값을 얻기 위해 &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt; 및 &lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; 에서 사용&lt;/a&gt; 합니다. 무시 될 수있다</target>
        </trans-unit>
        <trans-unit id="431b40bed257ef18e30fb32bfe2915e2c550f2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_ignore_&lt;/code&gt; &amp;ndash; a list of names, either as a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt;, that will not be transformed into members, and will be removed from the final class</source>
          <target state="translated">&lt;code&gt;_ignore_&lt;/code&gt; &amp;ndash; 멤버로 변환되지 않고 최종 클래스에서 제거 될 &lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 의 이름 목록</target>
        </trans-unit>
        <trans-unit id="bfe8ea3cce9f099e1707a2040f5f64b263410f49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_ignore_&lt;/code&gt; &amp;ndash; a list of names, either as a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, that will not be transformed into members, and will be removed from the final class</source>
          <target state="translated">&lt;code&gt;_ignore_&lt;/code&gt; &amp;ndash; 멤버로 변환되지 않고 최종 클래스에서 제거 될 &lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 형식&lt;/a&gt; 의 이름 목록</target>
        </trans-unit>
        <trans-unit id="ba139d0fae1d2a78db2c9146a3200c272f938213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_makeResult()&lt;/code&gt; instantiates the class or callable passed in the &lt;code&gt;TextTestRunner&lt;/code&gt; constructor as the &lt;code&gt;resultclass&lt;/code&gt; argument. It defaults to &lt;a href=&quot;#unittest.TextTestResult&quot;&gt;&lt;code&gt;TextTestResult&lt;/code&gt;&lt;/a&gt; if no &lt;code&gt;resultclass&lt;/code&gt; is provided. The result class is instantiated with the following arguments:</source>
          <target state="translated">&lt;code&gt;_makeResult()&lt;/code&gt; 는 &lt;code&gt;TextTestRunner&lt;/code&gt; 생성자에 전달 된 클래스 또는 호출 가능 클래스를 &lt;code&gt;resultclass&lt;/code&gt; 인수 로 인스턴스화합니다 . 결과 &lt;code&gt;resultclass&lt;/code&gt; 가 제공 되지 않으면 기본적으로 &lt;a href=&quot;#unittest.TextTestResult&quot;&gt; &lt;code&gt;TextTestResult&lt;/code&gt; &lt;/a&gt; 입니다. 결과 클래스는 다음 인수로 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="6726e9833aad36802fba1ea973f44dbde21588ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_missing_&lt;/code&gt; &amp;ndash; a lookup function used when a value is not found; may be overridden</source>
          <target state="translated">&lt;code&gt;_missing_&lt;/code&gt; &amp;ndash; 값을 찾을 수 없을 때 사용되는 조회 기능. 무시 될 수있다</target>
        </trans-unit>
        <trans-unit id="84913308961d97b84bbc99cbe7282937048a628f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_name_&lt;/code&gt; &amp;ndash; name of the member</source>
          <target state="translated">&lt;code&gt;_name_&lt;/code&gt; &amp;ndash; 회원의 이름</target>
        </trans-unit>
        <trans-unit id="4aa8e63aec5bd970871cb95fbb520ccce4a02fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_order_&lt;/code&gt; &amp;ndash; used in Python 2/3 code to ensure member order is consistent (class attribute, removed during class creation)</source>
          <target state="translated">&lt;code&gt;_order_&lt;/code&gt; &amp;ndash; 파이썬 2/3 코드에서 멤버 순서의 일관성을 유지하기 위해 사용됩니다 (클래스 생성 중 제거 된 클래스 속성).</target>
        </trans-unit>
        <trans-unit id="045759c2365a4adcc7c553aff064af5e4753d131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_thread&lt;/code&gt; &amp;mdash; Low-level threading API</source>
          <target state="translated">&lt;code&gt;_thread&lt;/code&gt; &amp;mdash; 저수준 스레딩 API</target>
        </trans-unit>
        <trans-unit id="ebbdf45cce28b3f5422a971763ebe03199af2f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_value_&lt;/code&gt; &amp;ndash; value of the member; can be set / modified in &lt;code&gt;__new__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_value_&lt;/code&gt; &amp;ndash; 회원의 가치; &lt;code&gt;__new__&lt;/code&gt; 에서 설정 / 수정 가능</target>
        </trans-unit>
        <trans-unit id="56e6a53fd62b9339c1fc37960a98473939a804b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a * b&lt;/code&gt; inner product</source>
          <target state="translated">&lt;code&gt;a * b&lt;/code&gt; 내부 제품</target>
        </trans-unit>
        <trans-unit id="c1a9bad395a807333e812f9fc55516ae540ccd61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a + b&lt;/code&gt; vector addition</source>
          <target state="translated">&lt;code&gt;a + b&lt;/code&gt; 벡터 더하기</target>
        </trans-unit>
        <trans-unit id="69d2838671991f904dff74e5691651c55d5c9096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a - b&lt;/code&gt; vector subtraction</source>
          <target state="translated">&lt;code&gt;a - b&lt;/code&gt; 벡터 빼기</target>
        </trans-unit>
        <trans-unit id="9d4edf2696f74a439bcad9a185bc2909386f2a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iadd(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a += b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = iadd(a, b)&lt;/code&gt; 는 &lt;code&gt;a += b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6f8ea8dafdd506ccfaf94bda643047614c53ea75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iand(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;amp;= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = iand(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;amp;= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2e8e240081f01b59f957490b7033eaf770d17041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iconcat(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a += b&lt;/code&gt; for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; sequences.</source>
          <target state="translated">&lt;code&gt;a = iconcat(a, b)&lt;/code&gt; 등가 인 &lt;code&gt;a += b&lt;/code&gt; 대한 및 &lt;em&gt;B&lt;/em&gt; 서열.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee2bed680afca0243a053171bf15dbe2e4afa060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ifloordiv(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a //= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = ifloordiv(a, b)&lt;/code&gt; 는 &lt;code&gt;a //= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="68f13febb8c36d7c88fad77699e604c96bc155c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ilshift(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;&amp;lt;= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = ilshift(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;lt;&amp;lt;= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="eae0a2c8e477573676b6a11d6baef0272dd455d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imatmul(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a @= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = imatmul(a, b)&lt;/code&gt; 는 &lt;code&gt;a @= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="66b466e1f4418679a9da9e6acb6cd8bd6b6f316f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imod(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a %= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = imod(a, b)&lt;/code&gt; 는 &lt;code&gt;a %= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="596108bcb67e2c1d9e79b4d129b501bf7aa77cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imul(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a *= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = imul(a, b)&lt;/code&gt; 는 &lt;code&gt;a *= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5cf707601ede9ce97dae3eed62f29f28897cef36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ior(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a |= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = ior(a, b)&lt;/code&gt; 는 &lt;code&gt;a |= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e5b1af570814e0c1a6c78d1cc7baeace2937fc7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ipow(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a **= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = ipow(a, b)&lt;/code&gt; 는 &lt;code&gt;a **= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="df1bff2b652b8afe3db6dd257f1c69eb823e0f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = irshift(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt;&amp;gt;= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = irshift(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;gt;&amp;gt;= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bda9d1011f6c86cdf5d8039a3c078b1e009bc04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = isub(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a -= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = isub(a, b)&lt;/code&gt; 는 a- &lt;code&gt;a -= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="12cf42dde7227f91a79c05d7098d32285e65550a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = itruediv(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a /= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = itruediv(a, b)&lt;/code&gt; 는 &lt;code&gt;a /= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="35b15258a5f991e37c2cad8ae8591cc385c05300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ixor(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a ^= b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a = ixor(a, b)&lt;/code&gt; 는 &lt;code&gt;a ^= b&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b771d231049aad29d2982967399228ecb6483034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.rotate(angle)&lt;/code&gt; rotation</source>
          <target state="translated">&lt;code&gt;a.rotate(angle)&lt;/code&gt; 회전 (각도)</target>
        </trans-unit>
        <trans-unit id="097cf0e3f458d3cc4ca87f37734de946e2359fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a2b_*&lt;/code&gt; functions accept Unicode strings containing only ASCII characters. Other functions only accept &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; (such as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and other objects that support the buffer protocol).</source>
          <target state="translated">&lt;code&gt;a2b_*&lt;/code&gt; 함수는 ASCII 문자 만 포함 된 유니 코드 문자열을 허용합니다. 다른 함수는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; (예 : &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 및 버퍼 프로토콜을 지원하는 기타 객체) 만 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="0866ddaa2bec0e1b9edf0808533b8fb705bb7df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a2b_*&lt;/code&gt; functions accept Unicode strings containing only ASCII characters. Other functions only accept &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; (such as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and other objects that support the buffer protocol).</source>
          <target state="translated">&lt;code&gt;a2b_*&lt;/code&gt; 함수는 ASCII 문자 만 포함하는 유니 코드 문자열을 허용합니다. 다른 함수는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; (예 : &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 및 버퍼 프로토콜을 지원하는 기타 객체) 만 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="4ffdcd0dd49bca5871ae64957441e0f22571d41d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2] == b[j1:j2]&lt;/code&gt; (the sub-sequences are equal).</source>
          <target state="translated">&lt;code&gt;a[i1:i2] == b[j1:j2]&lt;/code&gt; (하위 시퀀스는 동일 함).</target>
        </trans-unit>
        <trans-unit id="2b7fd099c8785598fb2d990ae4a1c78467697e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2]&lt;/code&gt; should be deleted. Note that &lt;code&gt;j1 == j2&lt;/code&gt; in this case.</source>
          <target state="translated">&lt;code&gt;a[i1:i2]&lt;/code&gt; 를 삭제해야합니다. 참고 &lt;code&gt;j1 == j2&lt;/code&gt; 이 경우이다.</target>
        </trans-unit>
        <trans-unit id="e4394f0f4e391c04e33c285cfa7d743da7812ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2]&lt;/code&gt; should be replaced by &lt;code&gt;b[j1:j2]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a[i1:i2]&lt;/code&gt; 는 &lt;code&gt;b[j1:j2]&lt;/code&gt; 로 바꿔야합니다 .</target>
        </trans-unit>
        <trans-unit id="1102c99e7621ceb51f44a70f2512bc71e6f37897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abc&lt;/code&gt; &amp;mdash; Abstract Base Classes</source>
          <target state="translated">&lt;code&gt;abc&lt;/code&gt; &amp;mdash; 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="3133c8b314c3926124955af17490b1b76019db73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(a)&lt;/code&gt; absolute value of a</source>
          <target state="translated">&lt;code&gt;abs(a)&lt;/code&gt; 절대 값</target>
        </trans-unit>
        <trans-unit id="def2ba7fad2b5a45d7da284f0b04d93843634abd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclose&lt;/code&gt;, &lt;code&gt;__aiter__&lt;/code&gt;, &lt;code&gt;__anext__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aclose&lt;/code&gt; , &lt;code&gt;__aiter__&lt;/code&gt; , &lt;code&gt;__anext__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06e531aa95b843f2e4be28caf6fe648e4f4cbba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3104bcd8341bee22b33322c76f330198d158b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aifc&lt;/code&gt; &amp;mdash; Read and write AIFF and AIFC files</source>
          <target state="translated">&lt;code&gt;aifc&lt;/code&gt; &amp;mdash; AIFF 및 AIFC 파일 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="ece14fc7626c5a56d7bcd0c88ccbab30c14ccaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application_name&lt;/code&gt;, &lt;code&gt;command_line&lt;/code&gt;, &lt;code&gt;current_directory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application_name&lt;/code&gt; , &lt;code&gt;command_line&lt;/code&gt; , &lt;code&gt;current_directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2aba006c6079b9146b8f7888f84dab647e22a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argparse.REMAINDER&lt;/code&gt;. All the remaining command-line arguments are gathered into a list. This is commonly useful for command line utilities that dispatch to other command line utilities:</source>
          <target state="translated">&lt;code&gt;argparse.REMAINDER&lt;/code&gt; . 나머지 모든 명령 줄 인수는 목록으로 수집됩니다. 이것은 일반적으로 다른 명령 행 유틸리티로 디스패치하는 명령 행 유틸리티에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a0fc7b47519dbcf27d6748094ba20eb980d4042c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argparse&lt;/code&gt; &amp;mdash; Parser for command-line options, arguments and sub-commands</source>
          <target state="translated">&lt;code&gt;argparse&lt;/code&gt; &amp;mdash; 명령 줄 옵션, 인수 및 하위 명령에 대한 파서</target>
        </trans-unit>
        <trans-unit id="eb223bcfde51c29ac297490308ed46ba2f735ff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; holds a list of the arguments passed by position.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 위치에 의해 전달 된 인수 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="9e99439a4c3c5bc1e2e216a4fa2ece036bfbf375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is a &lt;a href=&quot;#ast.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; node.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 &lt;a href=&quot;#ast.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 노드입니다.</target>
        </trans-unit>
        <trans-unit id="722b50cd661fcdf6d77ba8f5ae7d83fac773b16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argtypes&lt;/code&gt; must be a sequence of C data types (the &lt;code&gt;printf&lt;/code&gt; function is probably not a good example here, because it takes a variable number and different types of parameters depending on the format string, on the other hand this is quite handy to experiment with this feature):</source>
          <target state="translated">&lt;code&gt;argtypes&lt;/code&gt; 는 일련의 C 데이터 형식이어야합니다. &lt;code&gt;printf&lt;/code&gt; 함수는 형식 문자열에 따라 변수 번호와 다른 유형의 매개 변수를 사용하기 때문에 여기서는 좋은 예가 아닐 수 있습니다. 특색):</target>
        </trans-unit>
        <trans-unit id="0d4f82324fa90b74a666f0318c6cbf40d12d41a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; &amp;mdash; Efficient arrays of numeric values</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; &amp;mdash; 효율적인 숫자 값 배열</target>
        </trans-unit>
        <trans-unit id="3cada8ac3a38274cea07e4d88570d5e0d26bb8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asend&lt;/code&gt;, &lt;code&gt;athrow&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asend&lt;/code&gt; , &lt;code&gt;athrow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d150f02e9b6d0b5851b26c75afc05f648e201e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ast&lt;/code&gt; &amp;mdash; Abstract Syntax Trees</source>
          <target state="translated">&lt;code&gt;ast&lt;/code&gt; &amp;mdash; 추상 구문 트리</target>
        </trans-unit>
        <trans-unit id="573dfd7ceeae7023e6502d7df00344254f1e0a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async for&lt;/code&gt; loops and &lt;code&gt;async with&lt;/code&gt; context managers. They have the same fields as &lt;a href=&quot;#ast.For&quot;&gt;&lt;code&gt;For&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ast.With&quot;&gt;&lt;code&gt;With&lt;/code&gt;&lt;/a&gt;, respectively. Only valid in the body of an &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt;&lt;code&gt;AsyncFunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;async for&lt;/code&gt; 루프 및 컨텍스트 관리자 와 &lt;code&gt;async with&lt;/code&gt; . &lt;a href=&quot;#ast.For&quot;&gt; &lt;code&gt;For&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ast.With&quot;&gt; &lt;code&gt;With&lt;/code&gt; 와&lt;/a&gt; 같은 필드가 각각 있습니다. &lt;a href=&quot;#ast.AsyncFunctionDef&quot;&gt; &lt;code&gt;AsyncFunctionDef&lt;/code&gt; &lt;/a&gt; 의 본문에서만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="edc6ebbf538e0ee478a132ba4ad80e7e63f2b133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asynchat&lt;/code&gt; &amp;mdash; Asynchronous socket command/response handler</source>
          <target state="translated">&lt;code&gt;asynchat&lt;/code&gt; &amp;mdash; 비동기 소켓 명령 / 응답 핸들러</target>
        </trans-unit>
        <trans-unit id="8139fbe907a7813ea5c94a90abdb5309e3ac2c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncio&lt;/code&gt; &amp;mdash; Asynchronous I/O</source>
          <target state="translated">&lt;code&gt;asyncio&lt;/code&gt; &amp;mdash; 비동기 I / O</target>
        </trans-unit>
        <trans-unit id="c5acf7d10bf43cfaf496016c683aa1f93b288107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncore&lt;/code&gt; &amp;mdash; Asynchronous socket handler</source>
          <target state="translated">&lt;code&gt;asyncore&lt;/code&gt; &amp;mdash; 비동기 소켓 핸들러</target>
        </trans-unit>
        <trans-unit id="5afe9793c04168b2ab967e235427515bbbff0d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at&lt;/code&gt; specifies the location of this Path within the zipfile, e.g. &amp;lsquo;dir/file.txt&amp;rsquo;, &amp;lsquo;dir/&amp;rsquo;, or &amp;lsquo;&amp;rsquo;. Defaults to the empty string, indicating the root.</source>
          <target state="translated">&lt;code&gt;at&lt;/code&gt; 은 zip 파일 내에서이 경로의 위치 를 지정합니다 (예 : 'dir / file.txt', 'dir /'또는 ''). 기본값은 빈 문자열이며 루트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="484a504ade8388e949ef02ce418c0b9a1c326faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atexit&lt;/code&gt; &amp;mdash; Exit handlers</source>
          <target state="translated">&lt;code&gt;atexit&lt;/code&gt; &amp;mdash; 종료 핸들러</target>
        </trans-unit>
        <trans-unit id="83b1467f42671b745582f7946ba41cd3b6abcd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audioop&lt;/code&gt; &amp;mdash; Manipulate raw audio data</source>
          <target state="translated">&lt;code&gt;audioop&lt;/code&gt; &amp;mdash; 원시 오디오 데이터를 조작합니다</target>
        </trans-unit>
        <trans-unit id="4531eab2000ecdf0f9ef07e5c897f3864700e4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autocommit&lt;/code&gt; mode means that statements that modify the database take effect immediately. A &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;SAVEPOINT&lt;/code&gt; statement disables &lt;code&gt;autocommit&lt;/code&gt; mode, and a &lt;code&gt;COMMIT&lt;/code&gt;, a &lt;code&gt;ROLLBACK&lt;/code&gt;, or a &lt;code&gt;RELEASE&lt;/code&gt; that ends the outermost transaction, turns &lt;code&gt;autocommit&lt;/code&gt; mode back on.</source>
          <target state="translated">&lt;code&gt;autocommit&lt;/code&gt; 모드는 데이터베이스를 수정하는 문이 즉시 적용됨을 의미합니다. A는 &lt;code&gt;BEGIN&lt;/code&gt; 이나 &lt;code&gt;SAVEPOINT&lt;/code&gt; 문 비활성화의 &lt;code&gt;autocommit&lt;/code&gt; 모드와는 &lt;code&gt;COMMIT&lt;/code&gt; 하는 &lt;code&gt;ROLLBACK&lt;/code&gt; 또는 &lt;code&gt;RELEASE&lt;/code&gt; 끝 바깥 쪽 트랜잭션이, 켜지는지 &lt;code&gt;autocommit&lt;/code&gt; 에 모드 다시.</target>
        </trans-unit>
        <trans-unit id="0ec585495eb897cada6b9079f15b9b7948389886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9df0f3ef06ba5db5cdae61908ffbbf28e4650f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2323f06e7d1ac32ceea5f86b044359b0a0c68df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="992cabd7cbafb46472eaa5525b58568dbe58e19f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2daab23da110b31a3acd52e924cebdfef30cd8bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6364ccf62991b0f9419768caf5eb13194a47a4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c73f45c174ae4c6e300bc09d9fe16e489067c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="409f3fc251d7f4a9ab6a964c907475eff42e1eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="031cfebac118c9e0061d01ce7e0148fb389a2c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;loop.getaddrinfo()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;loop.getaddrinfo()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f15cb9a1bd2ca1a6b6ca871b1687da1b9333b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getnameinfo&quot;&gt;&lt;code&gt;loop.getnameinfo()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getnameinfo&quot;&gt;&lt;code&gt;loop.getnameinfo()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67316184321e67dfe7edfd54cbe5e99d1c3b3912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64dc3e5a0908d53a4ead39a91dcf33da2e6a01ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f32789a7e08230f627141e908f301538fc460aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_asyncgens&quot;&gt;&lt;code&gt;loop.shutdown_asyncgens()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_asyncgens&quot;&gt;&lt;code&gt;loop.shutdown_asyncgens()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ec33770b6cea79f2d4d4cc3080f141d69de6a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_accept&quot;&gt;&lt;code&gt;loop.sock_accept()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_accept&quot;&gt;&lt;code&gt;loop.sock_accept()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cea1406acdbf667b1683ac1f52670dd1c85e0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_connect&quot;&gt;&lt;code&gt;loop.sock_connect()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_connect&quot;&gt;&lt;code&gt;loop.sock_connect()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27dd012d3ea5efc04d8634c63ffd7b9fab0a2245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv&quot;&gt;&lt;code&gt;loop.sock_recv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv&quot;&gt;&lt;code&gt;loop.sock_recv()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d7665eec5e7962de080f62e743d9f7c97b405d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv_into&quot;&gt;&lt;code&gt;loop.sock_recv_into()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv_into&quot;&gt;&lt;code&gt;loop.sock_recv_into()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f7cf176945d1f0bd4ac292be436e69027229813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendall&quot;&gt;&lt;code&gt;loop.sock_sendall()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendall&quot;&gt;&lt;code&gt;loop.sock_sendall()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfdd764f68ecf40e9a3397011d222a66f9069638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendfile&quot;&gt;&lt;code&gt;loop.sock_sendfile()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendfile&quot;&gt;&lt;code&gt;loop.sock_sendfile()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e39373ad0e85bec2133398f853b3abfe64e182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.start_tls&quot;&gt;&lt;code&gt;loop.start_tls()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.start_tls&quot;&gt;&lt;code&gt;loop.start_tls()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20325ba972bfb6da22830495567f27580b5c878b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="717ea30e22b0d2869a104c80b1a6c3795f2748e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_unix_connection&quot;&gt;&lt;code&gt;open_unix_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_unix_connection&quot;&gt;&lt;code&gt;open_unix_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4b0ea16b425bd1a58cb0897eca73cfb2fe33501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53bb1bdedf91b824f0d53eb9430e55e2d2d4ab4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt;&lt;code&gt;start_unix_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt;&lt;code&gt;start_unix_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="254a07792779145328e6aa8810dc7058dc07d0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;create_subprocess_exec()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;create_subprocess_exec()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44de0c20577e68631f5e65bbbc573b67b23e2253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b72fdcf9efcf6f6ddf8a3d2e8938f95bf6749c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.gather&quot;&gt;&lt;code&gt;gather()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.gather&quot;&gt;&lt;code&gt;gather()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18634ad7721c77f99d75992424b1545e08a90cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e650cea110781e95534dc801abf14e6bba68d624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cee0dd80293717fc5791d0de02f2b4074e88abe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="260efaaa58fc758498194018569c690bcea0a58f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fa930fdf756d97893fdad7505a7056ab8430e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'%r'&lt;/code&gt; is deprecated, but will not be removed during the 3.x series.</source>
          <target state="translated">&lt;code&gt;b'%r'&lt;/code&gt; 은 사용되지 않지만 3.x 시리즈 중에는 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9ff0af98e5ac097291f7e48aa53cae00e9ff8d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'%s'&lt;/code&gt; is deprecated, but will not be removed during the 3.x series.</source>
          <target state="translated">&lt;code&gt;b'%s'&lt;/code&gt; 은 사용되지 않지만 3.x 시리즈 중에는 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e95454fc99963131dc54d8a3b7d45fae8944fe8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b[j1:j2]&lt;/code&gt; should be inserted at &lt;code&gt;a[i1:i1]&lt;/code&gt;. Note that &lt;code&gt;i1 == i2&lt;/code&gt; in this case.</source>
          <target state="translated">&lt;code&gt;b[j1:j2]&lt;/code&gt; 는 &lt;code&gt;a[i1:i1]&lt;/code&gt; 삽입해야합니다 . 참고 &lt;code&gt;i1 == i2&lt;/code&gt; 이 경우.</target>
        </trans-unit>
        <trans-unit id="37576007030c60a8a1e305800ffb5d6ac78e3cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base64&lt;/code&gt; &amp;mdash; Base16, Base32, Base64, Base85 Data Encodings</source>
          <target state="translated">&lt;code&gt;base64&lt;/code&gt; &amp;mdash; Base16, Base32, Base64, Base85 데이터 인코딩</target>
        </trans-unit>
        <trans-unit id="c119ceb60d3565265f8b38d20511ca4c6908e46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_name&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;root_dir&lt;/code&gt;, &lt;code&gt;base_dir&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;base_name&lt;/code&gt; , &lt;code&gt;format&lt;/code&gt; , &lt;code&gt;root_dir&lt;/code&gt; , &lt;code&gt;base_dir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e45e1535e48b127a665cdf6e59a0e51cf04f2467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bases&lt;/code&gt; is a list of nodes for explicitly specified base classes.</source>
          <target state="translated">&lt;code&gt;bases&lt;/code&gt; 는 명시 적으로 지정된 기본 클래스에 대한 노드 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e345ba440024db1b359457fef4330007f988e2a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bdb&lt;/code&gt; &amp;mdash; Debugger framework</source>
          <target state="translated">&lt;code&gt;bdb&lt;/code&gt; &amp;mdash; 디버거 프레임 워크</target>
        </trans-unit>
        <trans-unit id="c63f68b80303e767acbe67964926d9f9dbd3f050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binascii&lt;/code&gt; &amp;mdash; Convert between binary and ASCII</source>
          <target state="translated">&lt;code&gt;binascii&lt;/code&gt; &amp;mdash; 바이너리와 ASCII 간 변환</target>
        </trans-unit>
        <trans-unit id="8892cabab37cb37ae49675dd2b3fb46718595dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binhex&lt;/code&gt; &amp;mdash; Encode and decode binhex4 files</source>
          <target state="translated">&lt;code&gt;binhex&lt;/code&gt; &amp;mdash; binhex4 파일을 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="d26cf5ec3aac5f117e2b69f9fe49e7aafd4adb7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bisect&lt;/code&gt; &amp;mdash; Array bisection algorithm</source>
          <target state="translated">&lt;code&gt;bisect&lt;/code&gt; &amp;mdash; 배열 이분법 알고리즘</target>
        </trans-unit>
        <trans-unit id="178ed7b0f34602974b4aa500ce8d9e95afbc0235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; is a list of nodes representing the code within the class definition.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; 는 클래스 정의 내의 코드를 나타내는 노드 목록입니다.</target>
        </trans-unit>
        <trans-unit id="31fb84193f1bb1cd263a38a9b50d4f0bd1ffe544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; is the list of nodes inside the function.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; 는 함수 내부의 노드 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4072bda41e42312f06fcf49a98131cf59cd41ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 또는 &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b1dc5033de4d0c1ccc24ec76d6bf1984743fe14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt; &amp;mdash; Built-in objects</source>
          <target state="translated">&lt;code&gt;builtins&lt;/code&gt; &amp;mdash; 내장 객체</target>
        </trans-unit>
        <trans-unit id="1b2b5810c475442630eab81d2af046bccba76430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;byref(obj, offset)&lt;/code&gt; corresponds to this C code:</source>
          <target state="translated">&lt;code&gt;byref(obj, offset)&lt;/code&gt; 은이 C 코드에 해당합니다 :</target>
        </trans-unit>
        <trans-unit id="c9aa5a1ad07db723031f6dfd483c6829334a3358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bz2&lt;/code&gt; &amp;mdash; Support for &lt;strong&gt;bzip2&lt;/strong&gt; compression</source>
          <target state="translated">&lt;code&gt;bz2&lt;/code&gt; &amp;mdash; &lt;strong&gt;bzip2&lt;/strong&gt; 압축 지원</target>
        </trans-unit>
        <trans-unit id="1b23b213e52ac40bd5b3256e17d7a8fdab7f13e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cafile&lt;/code&gt; - resolved path to cafile or &lt;code&gt;None&lt;/code&gt; if the file doesn&amp;rsquo;t exist,</source>
          <target state="translated">&lt;code&gt;cafile&lt;/code&gt; - cafile의 경로를 확인하거나 파일이 없으면 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="034eecaf6cfd471f49262ccad66697b42636c334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calendar&lt;/code&gt; &amp;mdash; General calendar-related functions</source>
          <target state="translated">&lt;code&gt;calendar&lt;/code&gt; &amp;mdash; 일반 달력 관련 기능</target>
        </trans-unit>
        <trans-unit id="68e3c895aa60510d1f2cc44918177fc3a072c81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_list&lt;/code&gt; is particularly useful for making assertions on &amp;ldquo;chained calls&amp;rdquo;. A chained call is multiple calls on a single line of code. This results in multiple entries in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; on a mock. Manually constructing the sequence of calls can be tedious.</source>
          <target state="translated">&lt;code&gt;call_list&lt;/code&gt; 는 특히 &quot;연결된 통화&quot;에 대한 어설 션을 만드는 데 유용합니다. 연결 통화는 한 줄의 코드에서 여러 번의 통화입니다. 이로 인해 mock의 &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; &lt;/a&gt; 에 여러 항목이 생성됩니다 . 호출 순서를 수동으로 구성하는 것은 지루할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59c978d8263d0a144bb4e6d439d27c25965ff00a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;connection_lost()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;connection_lost()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf05736efa54d8d4f70a428e33554329a90c53ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_made&quot;&gt;&lt;code&gt;connection_made()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_made&quot;&gt;&lt;code&gt;connection_made()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23071bfd1a469d58362286c641ba62ffe23597a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f758b6e8241eda6b0fd51243eff72e624b091b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8a9edcc598ff24e79f7054468a560cdb5989059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8a3cabd65b13bc4f6f6c995225eb5ff8e123e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="445ec692cd59e49988302d38ee03291065a88ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37c633633070e08aef01975ae1d19cfac8965999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.datagram_received&quot;&gt;&lt;code&gt;datagram_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.datagram_received&quot;&gt;&lt;code&gt;datagram_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="373e8fc97faee2f21a3d5a7623e900632b59b867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.error_received&quot;&gt;&lt;code&gt;error_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.error_received&quot;&gt;&lt;code&gt;error_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c607d93c45e0f2e12216f5abbe262b987a25101f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;data_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;data_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca9680f46788ea9ab7d5536720cbb563e34bb155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f222c44da339c4a22c98d8a0ad8a7311f786b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_connection_lost&quot;&gt;&lt;code&gt;pipe_connection_lost()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_connection_lost&quot;&gt;&lt;code&gt;pipe_connection_lost()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47e93db9c3f876d754c19573fa270ae851b80b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_data_received&quot;&gt;&lt;code&gt;pipe_data_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_data_received&quot;&gt;&lt;code&gt;pipe_data_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6de4d1f1eb32bef8e6dfaf6cbbafd3a60ec3af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.process_exited&quot;&gt;&lt;code&gt;process_exited()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.process_exited&quot;&gt;&lt;code&gt;process_exited()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b88e188674a19c5c74277b06e62865221161f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capath&lt;/code&gt; - resolved path to capath or &lt;code&gt;None&lt;/code&gt; if the directory doesn&amp;rsquo;t exist,</source>
          <target state="translated">&lt;code&gt;capath&lt;/code&gt; - capath에 대한 경로를 해결하거나 디렉토리가 존재하지 않는 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d404c500864085110eb916c36c603174e212833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cgi&lt;/code&gt; &amp;mdash; Common Gateway Interface support</source>
          <target state="translated">&lt;code&gt;cgi&lt;/code&gt; &amp;mdash; 공통 게이트웨이 인터페이스 지원</target>
        </trans-unit>
        <trans-unit id="e7fcca8bce79735616536ac62c1e1f2fc38b3afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cgitb&lt;/code&gt; &amp;mdash; Traceback manager for CGI scripts</source>
          <target state="translated">&lt;code&gt;cgitb&lt;/code&gt; &amp;mdash; CGI 스크립트의 트레이스 백 관리자</target>
        </trans-unit>
        <trans-unit id="c5e5024fbfce645d85803c8940665c38b1b621f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channels()&lt;/code&gt; to set the number of channels</source>
          <target state="translated">&lt;code&gt;channels()&lt;/code&gt; 수를 설정하는 channels ()</target>
        </trans-unit>
        <trans-unit id="ba6db5891a0baa45d6c6894327429552045c8503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char *&lt;/code&gt; (NUL terminated)</source>
          <target state="translated">&lt;code&gt;char *&lt;/code&gt; (NUL 종료)</target>
        </trans-unit>
        <trans-unit id="553a0f371a4622b36a3ba5dadeda848ff7798410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_warnings&lt;/code&gt; accepts 2-tuples of the form &lt;code&gt;(&quot;message regexp&quot;,
WarningCategory)&lt;/code&gt; as positional arguments. If one or more &lt;em&gt;filters&lt;/em&gt; are provided, or if the optional keyword argument &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, it checks to make sure the warnings are as expected: each specified filter must match at least one of the warnings raised by the enclosed code or the test fails, and if any warnings are raised that do not match any of the specified filters the test fails. To disable the first of these checks, set &lt;em&gt;quiet&lt;/em&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;check_warnings&lt;/code&gt; 는 형식 인수 &lt;code&gt;(&quot;message regexp&quot;, WarningCategory)&lt;/code&gt; 의 2- 튜플을 위치 인수로 허용합니다. 하나 이상의 &lt;em&gt;필터&lt;/em&gt; 가 제공되거나 선택적 키워드 인수 &lt;em&gt;quiet&lt;/em&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 경고가 예상대로 이루어 졌는지 확인합니다. 지정된 각 필터는 동봉 된 코드에서 발생한 경고 중 하나 이상과 일치해야합니다. 그렇지 않으면 테스트가 실패합니다. 지정된 필터와 일치하지 않는 경고가 발생하면 테스트가 실패합니다. 이러한 검사 중 첫 번째 검사를 비활성화하려면 &lt;em&gt;quiet&lt;/em&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f8983d317678d52b5c8b8b9f85e9f6b1f1f9404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children_system&lt;/code&gt; - system time of all child processes</source>
          <target state="translated">&lt;code&gt;children_system&lt;/code&gt; - 모든 하위 프로세스의 시스템 시간</target>
        </trans-unit>
        <trans-unit id="9552501d04cd75a46e369af6d1977a83197606b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children_user&lt;/code&gt; - user time of all child processes</source>
          <target state="translated">&lt;code&gt;children_user&lt;/code&gt; - 모든 하위 프로세스의 사용자 시간</target>
        </trans-unit>
        <trans-unit id="8ff3ca1d3d47407b4f69b975901d71d98475df6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; &amp;mdash; Read IFF chunked data</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; &amp;mdash; IFF 청크 데이터 읽기</target>
        </trans-unit>
        <trans-unit id="7b62b22d4e434a89781bac1e5d39860d921c0f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; (mandatory). This is the fully qualified name of the handler class.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; (필수). 핸들러 클래스의 완전한 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f7611ba0a16f8288fabce1c0970f68316db3e366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear()&lt;/code&gt; and &lt;code&gt;copy()&lt;/code&gt; are included for consistency with the interfaces of mutable containers that don&amp;rsquo;t support slicing operations (such as &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;copy()&lt;/code&gt; is not part of the &lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt;&lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;&lt;/a&gt; ABC, but most concrete mutable sequence classes provide it.</source>
          <target state="translated">&lt;code&gt;clear()&lt;/code&gt; 및 &lt;code&gt;copy()&lt;/code&gt; 는 슬라이싱 작업 (예 : &lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; )을 지원하지 않는 가변 컨테이너의 인터페이스와 일관성을 유지하기 위해 포함되었습니다 . &lt;code&gt;copy()&lt;/code&gt; 는 &lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt; &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt; &lt;/a&gt; ABC의 일부는 아니지만 대부분의 구체적 가변 시퀀스 클래스가이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="14412d9b086223a921f62fe2f06b00bf84a659a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear&lt;/code&gt; &amp;ndash; a Boolean value which, if true, will delete the contents of any existing target directory, before creating the environment.</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; &amp;ndash; true 인 경우 환경을 만들기 전에 기존 대상 디렉토리의 내용을 삭제하는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="00c50438cfdcd9c2b0d629d6cccff87455bd0603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clone()&lt;/code&gt;, &lt;code&gt;undo()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clone()&lt;/code&gt; , &lt;code&gt;undo()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424961deec643df67c00efa73ca78a2f2a23f182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__next__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__next__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bea5f4c3d60d9ff26b7b1f96462ceca84529bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;, &lt;code&gt;closed&lt;/code&gt;, &lt;code&gt;__enter__&lt;/code&gt;, &lt;code&gt;__exit__&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;isatty&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__next__&lt;/code&gt;, &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readlines&lt;/code&gt;, &lt;code&gt;seekable&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, and &lt;code&gt;writelines&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; , &lt;code&gt;closed&lt;/code&gt; , &lt;code&gt;__enter__&lt;/code&gt; , &lt;code&gt;__exit__&lt;/code&gt; , &lt;code&gt;flush&lt;/code&gt; , &lt;code&gt;isatty&lt;/code&gt; , &lt;code&gt;__iter__&lt;/code&gt; , &lt;code&gt;__next__&lt;/code&gt; , &lt;code&gt;readable&lt;/code&gt; , &lt;code&gt;readline&lt;/code&gt; , &lt;code&gt;readlines&lt;/code&gt; , &lt;code&gt;seekable&lt;/code&gt; , &lt;code&gt;tell&lt;/code&gt; , &lt;code&gt;writable&lt;/code&gt; 및 &lt;code&gt;writelines&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9e49da2427040ea8dcd9f3db1dbf3686c6d2eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmath&lt;/code&gt; &amp;mdash; Mathematical functions for complex numbers</source>
          <target state="translated">&lt;code&gt;cmath&lt;/code&gt; &amp;mdash; 복소수에 대한 수학 함수</target>
        </trans-unit>
        <trans-unit id="57b2b6fa9224fd6cbbd3439f518ed609d67c69db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmd&lt;/code&gt; &amp;mdash; Support for line-oriented command interpreters</source>
          <target state="translated">&lt;code&gt;cmd&lt;/code&gt; &amp;mdash; 라인 지향 명령 인터프리터 지원</target>
        </trans-unit>
        <trans-unit id="66c882dafc9c55cf95619cca55e2b8db5e1bb5f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt; &amp;mdash; Interpreter base classes</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; &amp;mdash; 통역사 기본 클래스</target>
        </trans-unit>
        <trans-unit id="bea12faf5214341720d4416bdeea2af0095d12d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;argcount&lt;/code&gt;, &lt;code&gt;posonlyargcount&lt;/code&gt;, &lt;code&gt;kwonlyargcount&lt;/code&gt;, &lt;code&gt;nlocals&lt;/code&gt;, &lt;code&gt;stacksize&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;argcount&lt;/code&gt; , &lt;code&gt;posonlyargcount&lt;/code&gt; , &lt;code&gt;kwonlyargcount&lt;/code&gt; , &lt;code&gt;nlocals&lt;/code&gt; , &lt;code&gt;stacksize&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1a528213c7a127116264c010c573f1bb14549b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codecs&lt;/code&gt; &amp;mdash; Codec registry and base classes</source>
          <target state="translated">&lt;code&gt;codecs&lt;/code&gt; &amp;mdash; 코덱 레지스트리 및 기본 클래스</target>
        </trans-unit>
        <trans-unit id="61059a05d267a572cc03760fb1a4f5963fe22085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeop&lt;/code&gt; &amp;mdash; Compile Python code</source>
          <target state="translated">&lt;code&gt;codeop&lt;/code&gt; &amp;mdash; 파이썬 코드 컴파일</target>
        </trans-unit>
        <trans-unit id="22eef332ba7800bdefd3a97e3ba9d6354a776434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collected&lt;/code&gt; is the total number of objects collected inside this generation;</source>
          <target state="translated">&lt;code&gt;collected&lt;/code&gt; 은이 세대 내에서 수집 된 총 개체 수입니다.</target>
        </trans-unit>
        <trans-unit id="d510838ce0dcbd9a50687a494da66bdaca123e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections.abc&lt;/code&gt; &amp;mdash; Abstract Base Classes for Containers</source>
          <target state="translated">&lt;code&gt;collections.abc&lt;/code&gt; &amp;mdash; 컨테이너의 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="7986a71fc2aab30b885e6e27c6967c119be9c549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections&lt;/code&gt; &amp;mdash; Container datatypes</source>
          <target state="translated">&lt;code&gt;collections&lt;/code&gt; &amp;mdash; 컨테이너 데이터 유형</target>
        </trans-unit>
        <trans-unit id="940deff6714a5205da48b089bd01b6ca9665eaf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections&lt;/code&gt; is the number of times this generation was collected;</source>
          <target state="translated">&lt;code&gt;collections&lt;/code&gt; 은이 세대가 수집 된 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="630e6d8992fe84b7866d1718a574d6bd054d24ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colorsys&lt;/code&gt; &amp;mdash; Conversions between color systems</source>
          <target state="translated">&lt;code&gt;colorsys&lt;/code&gt; &amp;mdash; 컬러 시스템 간 변환</target>
        </trans-unit>
        <trans-unit id="a21292283eac16340b6291f9f64048df9594164c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;: the current comment / processing instruction</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; , &lt;code&gt;pi&lt;/code&gt; : 현재 주석 / 처리 명령</target>
        </trans-unit>
        <trans-unit id="42ab8638ce7eeba6890bb976363f043aadb7aa7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare&lt;/code&gt;: If true (the default), this field is included in the generated equality and comparison methods (&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, et al.).</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; : true (기본값) 인 경우이 필드는 생성 된 동등성 및 비교 방법 ( &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt; 등)에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1993e8163b69927fcd84f4838bfbfbd1d01173fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare&lt;/code&gt;: If true (the default), this field is included in the generated equality and comparison methods (&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, et al.).</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; : true (기본값) 인 경우이 필드는 생성 된 같음 및 비교 메서드 ( &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt; 등)에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6c91754cc0d20c9773187a80f67e8f59c599b57b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compileall&lt;/code&gt; &amp;mdash; Byte-compile Python libraries</source>
          <target state="translated">&lt;code&gt;compileall&lt;/code&gt; &amp;mdash; 바이트 컴파일 파이썬 라이브러리</target>
        </trans-unit>
        <trans-unit id="eebd82698bb2370925fd8f9823f82e58fb8e75b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computer_name&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;computer_name&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fd6a32b91ddfe2db8fe79feea04d1f8a294cdc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concurrent.futures&lt;/code&gt; &amp;mdash; Launching parallel tasks</source>
          <target state="translated">&lt;code&gt;concurrent.futures&lt;/code&gt; &amp;mdash; 병렬 작업 시작</target>
        </trans-unit>
        <trans-unit id="98adf06a0c4dd5300a22a0f4868e79bf8b8e9aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configparser&lt;/code&gt; &amp;mdash; Configuration file parser</source>
          <target state="translated">&lt;code&gt;configparser&lt;/code&gt; &amp;mdash; 구성 파일 파서</target>
        </trans-unit>
        <trans-unit id="bc5a68aeee24825fd50f299550bc69527321dfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; declarations map to variables in their respective scope (e.g. &lt;code&gt;xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE&lt;/code&gt;); they must not be changed.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 선언은 해당 범위의 변수에 매핑됩니다 (예 : &lt;code&gt;xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE&lt;/code&gt; ). 그것들은 변경되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a0b59369777a53701a8833251eaeece8cf16aebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextlib&lt;/code&gt; &amp;mdash; Utilities for &lt;code&gt;with&lt;/code&gt;-statement contexts</source>
          <target state="translated">&lt;code&gt;contextlib&lt;/code&gt; -에 대한 유틸리티 &lt;code&gt;with&lt;/code&gt; -statement 상황</target>
        </trans-unit>
        <trans-unit id="c7bdd4c369b48e22c50a96969c136cf6df332df9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextvars&lt;/code&gt; &amp;mdash; Context Variables</source>
          <target state="translated">&lt;code&gt;contextvars&lt;/code&gt; &amp;mdash; 컨텍스트 변수</target>
        </trans-unit>
        <trans-unit id="26d7945b7f23bbd04e71e9413027470b3c6317a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conversion&lt;/code&gt; is an integer:</source>
          <target state="translated">&lt;code&gt;conversion&lt;/code&gt; 은 정수입니다.</target>
        </trans-unit>
        <trans-unit id="76262400f9682fd0b89fa8d4f8089476aa42d240" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy&lt;/code&gt; &amp;mdash; Shallow and deep copy operations</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; &amp;mdash; 얕은 및 깊은 복사 작업</target>
        </trans-unit>
        <trans-unit id="21621aaf4f65aa0c25af4ef4ecefdabdc23354ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copyreg&lt;/code&gt; &amp;mdash; Register &lt;code&gt;pickle&lt;/code&gt; support functions</source>
          <target state="translated">&lt;code&gt;copyreg&lt;/code&gt; &amp;mdash; &lt;code&gt;pickle&lt;/code&gt; 지원 기능 등록</target>
        </trans-unit>
        <trans-unit id="03fa13b99fe71fb7dcfa1fa282c7a0387ba7f5db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crit&lt;/code&gt; or &lt;code&gt;critical&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crit&lt;/code&gt; 또는 &lt;code&gt;critical&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1a9cddb9ebb2612a331b35f957f8ae6448b4928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypt&lt;/code&gt; &amp;mdash; Function to check Unix passwords</source>
          <target state="translated">&lt;code&gt;crypt&lt;/code&gt; &amp;mdash; 유닉스 암호를 확인하는 기능</target>
        </trans-unit>
        <trans-unit id="af82eb8f2060b61ee05c840c74f180806ba119f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;csv&lt;/code&gt; &amp;mdash; CSV File Reading and Writing</source>
          <target state="translated">&lt;code&gt;csv&lt;/code&gt; &amp;mdash; CSV 파일 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="996d60594f32845466fa0f8743709ac99d0e9d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctypes&lt;/code&gt; &amp;mdash; A foreign function library for Python</source>
          <target state="translated">&lt;code&gt;ctypes&lt;/code&gt; &amp;mdash; 파이썬을위한 외부 함수 라이브러리</target>
        </trans-unit>
        <trans-unit id="f3795c27396058f4777bc3e982f3155e25101865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.ascii&lt;/code&gt; &amp;mdash; Utilities for ASCII characters</source>
          <target state="translated">&lt;code&gt;curses.ascii&lt;/code&gt; &amp;mdash; ASCII 문자를위한 유틸리티</target>
        </trans-unit>
        <trans-unit id="73c1a8770d701512cee8f7b598aa79b58a6a58b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.panel&lt;/code&gt; &amp;mdash; A panel stack extension for curses</source>
          <target state="translated">&lt;code&gt;curses.panel&lt;/code&gt; &amp;mdash; curses 용 패널 스택 확장</target>
        </trans-unit>
        <trans-unit id="1c595fbb18714fb01b6d467d5f7f4d4654164755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.textpad&lt;/code&gt; &amp;mdash; Text input widget for curses programs</source>
          <target state="translated">&lt;code&gt;curses.textpad&lt;/code&gt; &amp;mdash; curses 프로그램을위한 텍스트 입력 위젯</target>
        </trans-unit>
        <trans-unit id="2b1d6a87df7bdabbab3b605c2a72a23805362db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses&lt;/code&gt; &amp;mdash; Terminal handling for character-cell displays</source>
          <target state="translated">&lt;code&gt;curses&lt;/code&gt; &amp;mdash; 문자 셀 디스플레이의 터미널 처리</target>
        </trans-unit>
        <trans-unit id="cec6a16a6c74dd4455854897feda1475e7a4ef69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.ctime()&lt;/code&gt; is equivalent to:</source>
          <target state="translated">&lt;code&gt;d.ctime()&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb6d8a009b0f9135df3ddf99333f870310f7536f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.timetuple()&lt;/code&gt; is equivalent to:</source>
          <target state="translated">&lt;code&gt;d.timetuple()&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83e6a9e7ff8e25f47be6c173b94614e82d27d12d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.tzinfo.utcoffset(d)&lt;/code&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d.tzinfo.utcoffset(d)&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 을 반환하지 않습니다</target>
        </trans-unit>
        <trans-unit id="819edf157a9aef952da98ec05f525c2c67bdc381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.tzinfo&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d.tzinfo&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아님</target>
        </trans-unit>
        <trans-unit id="b2ff82e8f593905f953c355ecd1000d9cbaacb92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclasses&lt;/code&gt; &amp;mdash; Data Classes</source>
          <target state="translated">&lt;code&gt;dataclasses&lt;/code&gt; &amp;mdash; 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="38151843b63a8632eeb03ec16bfedd9cd5dc19e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; &amp;mdash; Basic date and time types</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; &amp;mdash; 기본 날짜 및 시간 유형</target>
        </trans-unit>
        <trans-unit id="336760b29a811410a15887eafec165b80aba0052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbm&lt;/code&gt; &amp;mdash; Interfaces to Unix &amp;ldquo;databases&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;dbm&lt;/code&gt; &amp;mdash; 유닉스&amp;ldquo;데이터베이스&amp;rdquo;에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="d68e77055d9280fb50436c72e7a4b8c252605fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; &amp;mdash; Decimal fixed point and floating point arithmetic</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; &amp;mdash; 10 진 고정 소수점 및 부동 소수점 산술</target>
        </trans-unit>
        <trans-unit id="d59bdc7a4db2ce4066f05a3c0c274bd7d04b3a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorator_list&lt;/code&gt; is a list of nodes, as in &lt;a href=&quot;#ast.FunctionDef&quot;&gt;&lt;code&gt;FunctionDef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;decorator_list&lt;/code&gt; 는 &lt;a href=&quot;#ast.FunctionDef&quot;&gt; &lt;code&gt;FunctionDef&lt;/code&gt; &lt;/a&gt; 에서와 같이 노드 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="2ab315bc8401de748163c1ba8e9796614a966c18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorator_list&lt;/code&gt; is the list of decorators to be applied, stored outermost first (i.e. the first in the list will be applied last).</source>
          <target state="translated">&lt;code&gt;decorator_list&lt;/code&gt; 는 적용 할 데코레이터 목록이며 가장 바깥쪽에 먼저 저장됩니다 (즉, 목록의 첫 번째 항목이 마지막에 적용됨).</target>
        </trans-unit>
        <trans-unit id="ad1411115c2cae951bdc16e288004f85119b9125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;, &lt;code&gt;default_factory&lt;/code&gt;, &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;repr&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;compare&lt;/code&gt;, and &lt;code&gt;metadata&lt;/code&gt; have the identical meaning and values as they do in the &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; declaration.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; , &lt;code&gt;default_factory&lt;/code&gt; , &lt;code&gt;init&lt;/code&gt; , &lt;code&gt;repr&lt;/code&gt; , &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;compare&lt;/code&gt; 및 &lt;code&gt;metadata&lt;/code&gt; 는 &lt;a href=&quot;#dataclasses.field&quot;&gt; &lt;code&gt;field()&lt;/code&gt; &lt;/a&gt; 선언 에서와 동일한 의미와 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="98ad39573e8e8f56e8cdfedf15e690de8793b69f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: If provided, this will be the default value for this field. This is needed because the &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; call itself replaces the normal position of the default value.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; : 제공된 경우이 필드의 기본값입니다. &lt;a href=&quot;#dataclasses.field&quot;&gt; &lt;code&gt;field()&lt;/code&gt; &lt;/a&gt; 호출 자체가 기본값의 정상 위치를 대체 하기 때문에이 작업이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="a746a501436d63d64217e1f2127f8bc09a069a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_factory&lt;/code&gt;: If provided, it must be a zero-argument callable that will be called when a default value is needed for this field. Among other purposes, this can be used to specify fields with mutable default values, as discussed below. It is an error to specify both &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;default_factory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default_factory&lt;/code&gt; : 제공되는 경우이 필드에 기본값이 필요할 때 호출되는 인수가없는 인수 여야합니다. 다른 목적 중에서도 아래에서 설명하는 것처럼 변경 가능한 기본값으로 필드를 지정하는 데 사용할 수 있습니다. &lt;code&gt;default&lt;/code&gt; 및 &lt;code&gt;default_factory&lt;/code&gt; 를 모두 지정하면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="020e17eef366a56a4cd621bf9be10cf7e06325bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaults&lt;/code&gt; is a list of default values for arguments that can be passed positionally. If there are fewer defaults, they correspond to the last n arguments.</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; 는 위치 적으로 전달할 수있는 인수의 기본값 목록입니다. 기본값이 더 적 으면 마지막 n 개 인수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="33a00d9b7bde4c0fb64798c522b4e3da4d67c9ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth&lt;/code&gt;: Maximum search depth used by match finder. 0 (default) means to select automatically based on other filter options.</source>
          <target state="translated">&lt;code&gt;depth&lt;/code&gt; : 일치 검색기에 사용되는 최대 검색 깊이. 0 (기본값)은 다른 필터 옵션을 기반으로 자동 선택 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b13f8f72d1d5acae29045417330696daed7aa82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; &amp;ndash; Description associated with the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; &amp;ndash; 비 &lt;em&gt;텍스트&lt;/em&gt; 부분 과 관련된 설명</target>
        </trans-unit>
        <trans-unit id="ebf336ee5ac78201aa5b94782a489c00b6279f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dest&lt;/code&gt; allows a custom attribute name to be provided:</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; 를 사용하면 사용자 정의 속성 이름을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d03e3fc313bb2fd3a7f3f09a7b64470bae1ade43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;read1&lt;/code&gt;, and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;detach&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;read1&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e93fac9a80dc1491c9540773fa7b5a5f19611c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;detach&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;readline&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="951f913772b19be87f2cc08ed2b84f510c5acfd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devpoll()&lt;/code&gt; objects are linked to the number of file descriptors allowed at the time of instantiation. If your program reduces this value, &lt;code&gt;devpoll()&lt;/code&gt; will fail. If your program increases this value, &lt;code&gt;devpoll()&lt;/code&gt; may return an incomplete list of active file descriptors.</source>
          <target state="translated">&lt;code&gt;devpoll()&lt;/code&gt; 객체는 인스턴스화시 허용되는 파일 디스크립터 수에 연결됩니다. 프로그램이이 값을 &lt;code&gt;devpoll()&lt;/code&gt; 이 실패합니다. 프로그램이이 값을 &lt;code&gt;devpoll()&lt;/code&gt; 은 불완전한 활성 파일 디스크립터 목록을 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="081a647557327a7a1a44b2722683e21b66b88f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict_size&lt;/code&gt;: Dictionary size in bytes. This should be between 4 KiB and 1.5 GiB (inclusive).</source>
          <target state="translated">&lt;code&gt;dict_size&lt;/code&gt; : 바이트 단위의 사전 크기. 4KiB와 1.5GiB 사이 여야합니다 (포함).</target>
        </trans-unit>
        <trans-unit id="300c468f0510cdc978ef26f3dcb6e902bcc76a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;difflib&lt;/code&gt; &amp;mdash; Helpers for computing deltas</source>
          <target state="translated">&lt;code&gt;difflib&lt;/code&gt; &amp;mdash; 델타 계산을위한 헬퍼</target>
        </trans-unit>
        <trans-unit id="dda29a589a2fdcd3ebba9a96ea4e76c9ee14dd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dis&lt;/code&gt; &amp;mdash; Disassembler for Python bytecode</source>
          <target state="translated">&lt;code&gt;dis&lt;/code&gt; &amp;mdash; 파이썬 바이트 코드를위한 디스어셈블러</target>
        </trans-unit>
        <trans-unit id="0044a0e24f5659014a25f7ccd04fcae963a059ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distutils&lt;/code&gt; &amp;mdash; Building and installing Python modules</source>
          <target state="translated">&lt;code&gt;distutils&lt;/code&gt; &amp;mdash; 파이썬 모듈 빌드 및 설치</target>
        </trans-unit>
        <trans-unit id="7f36ce35370e4aa3d3b8a09f43d9d3e96a2714ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doCleanupsClass()&lt;/code&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="translated">&lt;code&gt;doCleanupsClass()&lt;/code&gt; 는 한 번에 하나씩 정리 함수 스택에서 메소드를 팝하므로 언제든지 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7675b53dd83a3f86764d1f600bbc8428ce5e0b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doctest&lt;/code&gt; &amp;mdash; Test interactive Python examples</source>
          <target state="translated">&lt;code&gt;doctest&lt;/code&gt; &amp;mdash; 대화식 파이썬 예제 테스트</target>
        </trans-unit>
        <trans-unit id="df77f39f60cde265002456e41c2ebc6b638b2283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;double&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 또는 &lt;code&gt;float&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d9ed3ea3399456e360171b10cf9a299b96621a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dummy_threading&lt;/code&gt; &amp;mdash; Drop-in replacement for the &lt;code&gt;threading&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;dummy_threading&lt;/code&gt; &amp;mdash; &lt;code&gt;threading&lt;/code&gt; 모듈의 드롭 인 교체</target>
        </trans-unit>
        <trans-unit id="f624cdb197f60df194255f4ece576c743e3c7155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elapsed&lt;/code&gt; - elapsed real time since a fixed point in the past</source>
          <target state="translated">&lt;code&gt;elapsed&lt;/code&gt; -과거의 고정 소수점 이후 실시간 경과</target>
        </trans-unit>
        <trans-unit id="f531092ab37a7dec44f2a7b80fd09ca8bd89f565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elif&lt;/code&gt; clauses don&amp;rsquo;t have a special representation in the AST, but rather appear as extra &lt;a href=&quot;#ast.If&quot;&gt;&lt;code&gt;If&lt;/code&gt;&lt;/a&gt; nodes within the &lt;code&gt;orelse&lt;/code&gt; section of the previous one.</source>
          <target state="translated">&lt;code&gt;elif&lt;/code&gt; 절은 AST에 특별한 표현이 없지만 이전 항목의 &lt;code&gt;orelse&lt;/code&gt; 섹션 내에서 추가 &lt;a href=&quot;#ast.If&quot;&gt; &lt;code&gt;If&lt;/code&gt; &lt;/a&gt; 노드 로 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="efe718bc73fb0f42568ecb0922d7a44b6098122d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.charset&lt;/code&gt;: Representing character sets</source>
          <target state="translated">&lt;code&gt;email.charset&lt;/code&gt; : 문자 세트 표현</target>
        </trans-unit>
        <trans-unit id="2a4d5c40324527545186f7c8f1550aaa486b5bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.contentmanager&lt;/code&gt;: Managing MIME Content</source>
          <target state="translated">&lt;code&gt;email.contentmanager&lt;/code&gt; : MIME 컨텐츠 관리</target>
        </trans-unit>
        <trans-unit id="57184f1d4422a08bc25f767baecc858d4db4c210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.encoders&lt;/code&gt;: Encoders</source>
          <target state="translated">&lt;code&gt;email.encoders&lt;/code&gt; : 인코더</target>
        </trans-unit>
        <trans-unit id="cbeef0325e419a6811e5343282d6895940d9cfc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.errors&lt;/code&gt;: Exception and Defect classes</source>
          <target state="translated">&lt;code&gt;email.errors&lt;/code&gt; : 예외 및 결함 클래스</target>
        </trans-unit>
        <trans-unit id="04349d5a820f1f92378c770070bfd8f6c594ff6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.generator&lt;/code&gt;: Generating MIME documents</source>
          <target state="translated">&lt;code&gt;email.generator&lt;/code&gt; : MIME 문서 생성</target>
        </trans-unit>
        <trans-unit id="376e25c49a7f54246fb2994d8f730eb0b1d69b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.header&lt;/code&gt;: Internationalized headers</source>
          <target state="translated">&lt;code&gt;email.header&lt;/code&gt; : 국제화 된 헤더</target>
        </trans-unit>
        <trans-unit id="4225f5aecaa21ee94ee78ea7bd0204eafd29ff33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.headerregistry&lt;/code&gt;: Custom Header Objects</source>
          <target state="translated">&lt;code&gt;email.headerregistry&lt;/code&gt; : 사용자 정의 헤더 객체</target>
        </trans-unit>
        <trans-unit id="c6677c97546ab2a5d1f5887bdc9e5da9a57e7cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.iterators&lt;/code&gt;: Iterators</source>
          <target state="translated">&lt;code&gt;email.iterators&lt;/code&gt; : 반복자</target>
        </trans-unit>
        <trans-unit id="3e94955c97a50a6125f9c74f34d903a39677bcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.message.Message&lt;/code&gt;: Representing an email message using the &lt;code&gt;compat32&lt;/code&gt; API</source>
          <target state="translated">&lt;code&gt;email.message.Message&lt;/code&gt; : &lt;code&gt;compat32&lt;/code&gt; API를 사용하여 이메일 메시지 표시</target>
        </trans-unit>
        <trans-unit id="ba5c4a2130cd5778b71b1691159784d206fedb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.message&lt;/code&gt;: Representing an email message</source>
          <target state="translated">&lt;code&gt;email.message&lt;/code&gt; : 이메일 메시지를 나타냅니다</target>
        </trans-unit>
        <trans-unit id="d06255de90547e578c5740be657e631cd14a1b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.mime&lt;/code&gt;: Creating email and MIME objects from scratch</source>
          <target state="translated">&lt;code&gt;email.mime&lt;/code&gt; : 처음부터 이메일 및 MIME 객체 만들기</target>
        </trans-unit>
        <trans-unit id="bb1a95f95ca473cb019f715bb44dadb8119ab85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.parser&lt;/code&gt;: Parsing email messages</source>
          <target state="translated">&lt;code&gt;email.parser&lt;/code&gt; : 이메일 메시지 파싱</target>
        </trans-unit>
        <trans-unit id="0dae879254f9dc91108d45db26c32df50a5ec01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.policy&lt;/code&gt;: Policy Objects</source>
          <target state="translated">&lt;code&gt;email.policy&lt;/code&gt; : 정책 객체</target>
        </trans-unit>
        <trans-unit id="3d258a1b629c9b4bcd3b9fd4eb3b4db004ea0964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.utils&lt;/code&gt;: Miscellaneous utilities</source>
          <target state="translated">&lt;code&gt;email.utils&lt;/code&gt; : 기타 유틸리티</target>
        </trans-unit>
        <trans-unit id="74aa3bb9683be692ae2c3f1adae0da702fbbb5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email&lt;/code&gt; &amp;mdash; An email and MIME handling package</source>
          <target state="translated">&lt;code&gt;email&lt;/code&gt; &amp;mdash; 이메일 및 MIME 처리 패키지</target>
        </trans-unit>
        <trans-unit id="c46fe1cea88fc319d1beda0adcbd7b669d492894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email&lt;/code&gt;: Examples</source>
          <target state="translated">&lt;code&gt;email&lt;/code&gt; : 예</target>
        </trans-unit>
        <trans-unit id="6817135ed4e443599ad42a45f4e0ce1cdd7b5e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emerg&lt;/code&gt; or &lt;code&gt;panic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;emerg&lt;/code&gt; 또는 &lt;code&gt;panic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d414e288bd5537776b210b4aa70bdb1406b03920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; &amp;ndash; Content transfer encoding of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; &amp;ndash; &lt;em&gt;텍스트&lt;/em&gt; 가 아닌 부분 의 컨텐츠 전송 인코딩</target>
        </trans-unit>
        <trans-unit id="13551862b24d431c316183ea895e6fb5d1ba9969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-ns&lt;/code&gt;: &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; (this may change in a future version)</source>
          <target state="translated">&lt;code&gt;end-ns&lt;/code&gt; : &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; (향후 버전에서 변경 될 수 있음)</target>
        </trans-unit>
        <trans-unit id="ae96d313db5e896f25abd0312f67427124572c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ensurepip&lt;/code&gt; &amp;mdash; Bootstrapping the &lt;code&gt;pip&lt;/code&gt; installer</source>
          <target state="translated">&lt;code&gt;ensurepip&lt;/code&gt; &amp;mdash; &lt;code&gt;pip&lt;/code&gt; 인스톨러 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="bdeaa19c52a5ceaa07bbb9c7fd50d5e0ac3bbb83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; &amp;mdash; Support for enumerations</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; &amp;mdash; 열거 지원</target>
        </trans-unit>
        <trans-unit id="019726c73cb2fa874e73c2b7ea6430af0d4f8968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epoll&lt;/code&gt; objects support the context management protocol: when used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the new file descriptor is automatically closed at the end of the block.</source>
          <target state="translated">&lt;code&gt;epoll&lt;/code&gt; 객체는 컨텍스트 관리 프로토콜을 지원합니다. &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용될 때 새 파일 디스크립터는 블록 끝에 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="edcc5c743c61af9f16e286278328f5dc7db4d1c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epoll&lt;/code&gt; objects support the context management protocol: when used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the new file descriptor is automatically closed at the end of the block.</source>
          <target state="translated">&lt;code&gt;epoll&lt;/code&gt; 객체는 컨텍스트 관리 프로토콜을 지원합니다. &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 에서 사용될 때 새 파일 설명자는 블록 끝에서 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="69fcb511efad215151e650772304e46586edcdab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eq&lt;/code&gt;: If true (the default), an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method will be generated. This method compares the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type.</source>
          <target state="translated">&lt;code&gt;eq&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 이 메소드는 클래스를 필드의 튜플 인 것처럼 클래스를 순서대로 비교합니다. 비교에서 두 인스턴스는 동일한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2701030b3691d9ab55fdd65a249fd33eb2d452bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eq&lt;/code&gt;: If true (the default), an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method will be generated. This method compares the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type.</source>
          <target state="translated">&lt;code&gt;eq&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 이 메서드는 클래스를 필드의 튜플 인 것처럼 순서대로 비교합니다. 비교의 두 인스턴스는 동일한 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="7755546bf3d97a2f7ad47048f386359bbb006557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;err&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;err&lt;/code&gt; 또는 &lt;code&gt;error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b03233824abfb8e0330905cdd037f865d25e00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errno&lt;/code&gt; &amp;mdash; Standard errno system symbols</source>
          <target state="translated">&lt;code&gt;errno&lt;/code&gt; &amp;mdash; 표준 errno 시스템 심볼</target>
        </trans-unit>
        <trans-unit id="d1402dcc6434c7c23500ba2c372c3d7bdd08fcab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt; is a constant and can be one of:</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 는 상수이며 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="069e6d93f40f24446a9c1dc5dadbb6763367ae92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;cwd&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;executable&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;cwd&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edb78501b93d584d25a512018e1597d9b185e86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;faulthandler&lt;/code&gt; &amp;mdash; Dump the Python traceback</source>
          <target state="translated">&lt;code&gt;faulthandler&lt;/code&gt; &amp;mdash; 파이썬 역 추적 덤프</target>
        </trans-unit>
        <trans-unit id="23e85ff13da9c3eb0bb9d09941bb7b0a0a77dba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fcntl&lt;/code&gt; &amp;mdash; The &lt;code&gt;fcntl&lt;/code&gt; and &lt;code&gt;ioctl&lt;/code&gt; system calls</source>
          <target state="translated">&lt;code&gt;fcntl&lt;/code&gt; &amp;mdash; &lt;code&gt;fcntl&lt;/code&gt; 및 &lt;code&gt;ioctl&lt;/code&gt; 시스템 호출</target>
        </trans-unit>
        <trans-unit id="faaed6b2e2f6f7afc8a48695b3b2ebc6bcdb3265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;arg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07d477f4e83429cfa96450453ef83db604493899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;len&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65870414692e26bded1888e9a2c20b4a6e3957da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;whence&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;len&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;whence&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a3686ee3c4e342dc374e7c997effde344a655d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fca90250d9e6bc5d668aeadd43c6c7a1b5d548a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;nbytes&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;nbytes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58ef85350090d80355a953a78ba18f057a0acff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;operation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d18d3428840a2e47f7924369422c15096cd7848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;request&lt;/code&gt; , &lt;code&gt;arg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="823e3cc60a6ddd1e6a84a193ba1f6204ff159e9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;s may optionally specify a default value, using normal Python syntax:</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt; 는 일반 Python 구문을 사용하여 선택적으로 기본값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30dab4068f2f6a4ac1be5332e7389ac50c7d9639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="099c849982ed4ef81848370e76e94b16521ce9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file_name&lt;/code&gt;, &lt;code&gt;desired_access&lt;/code&gt;, &lt;code&gt;share_mode&lt;/code&gt;, &lt;code&gt;creation_disposition&lt;/code&gt;, &lt;code&gt;flags_and_attributes&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;file_name&lt;/code&gt; , &lt;code&gt;desired_access&lt;/code&gt; , &lt;code&gt;share_mode&lt;/code&gt; , &lt;code&gt;creation_disposition&lt;/code&gt; , &lt;code&gt;flags_and_attributes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaf74b479b6c232a71a8ac2b034653fb8859216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filecmp&lt;/code&gt; &amp;mdash; File and Directory Comparisons</source>
          <target state="translated">&lt;code&gt;filecmp&lt;/code&gt; &amp;mdash; 파일 및 디렉토리 비교</target>
        </trans-unit>
        <trans-unit id="768279ae7557ca9b1c8eadba7b04a8b97c395921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileinput&lt;/code&gt; &amp;mdash; Iterate over lines from multiple input streams</source>
          <target state="translated">&lt;code&gt;fileinput&lt;/code&gt; &amp;mdash; 여러 입력 스트림에서 라인을 반복</target>
        </trans-unit>
        <trans-unit id="316b2e8de46fbd8def8a4febfd9493b34b88ef5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; &amp;ndash; Filename of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; &amp;ndash; &lt;em&gt;텍스트&lt;/em&gt; 가 아닌 부분의 파일 이름</target>
        </trans-unit>
        <trans-unit id="d5e524f26b26949870b964296a0ddc2bbd19e329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;extract_dir&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; , &lt;code&gt;extract_dir&lt;/code&gt; , &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b3a8718061071d4185cb7a60f7fa27af254a4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fileno&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; , &lt;code&gt;access&lt;/code&gt; , &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a7d6c2e474ed78eaa41f4d377b0d26fc0045e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;seek&lt;/code&gt;, and &lt;code&gt;truncate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fileno&lt;/code&gt; , &lt;code&gt;seek&lt;/code&gt; 및 &lt;code&gt;truncate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="513e8ea76bb2ad391bc14885c142799457aa03ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filters&lt;/code&gt; (optional). A list of ids of the filters for this handler.</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; (선택 사항). 이 핸들러의 필터 ID 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a8f1c6fcb3da4cd94ee71704cde678e9443cb6fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filters&lt;/code&gt; (optional). A list of ids of the filters for this logger.</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; (선택 사항). 이 로거의 필터 ID 목록입니다.</target>
        </trans-unit>
        <trans-unit id="8df4824e7363fcc22920fbda01ca45dcb3166de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fnmatch&lt;/code&gt; &amp;mdash; Unix filename pattern matching</source>
          <target state="translated">&lt;code&gt;fnmatch&lt;/code&gt; &amp;mdash; 유닉스 파일 이름 패턴 일치</target>
        </trans-unit>
        <trans-unit id="2d4c2d62dc6d734a32da29fa925425f3a30ef7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold in [0, 1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold in [0, 1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df85021d1cc6c9a7c679db7b996f20877de8f03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for in&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.as_completed&quot;&gt;&lt;code&gt;as_completed()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;for in&lt;/code&gt; &lt;a href=&quot;asyncio-task#asyncio.as_completed&quot;&gt; &lt;code&gt;as_completed()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82cf29bff5d8b8003e81e912df7ab0f4d536ccc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format_spec&lt;/code&gt; is a &lt;a href=&quot;#ast.JoinedStr&quot;&gt;&lt;code&gt;JoinedStr&lt;/code&gt;&lt;/a&gt; node representing the formatting of the value, or &lt;code&gt;None&lt;/code&gt; if no format was specified. Both &lt;code&gt;conversion&lt;/code&gt; and &lt;code&gt;format_spec&lt;/code&gt; can be set at the same time.</source>
          <target state="translated">&lt;code&gt;format_spec&lt;/code&gt; 은 값의 형식을 나타내는 &lt;a href=&quot;#ast.JoinedStr&quot;&gt; &lt;code&gt;JoinedStr&lt;/code&gt; &lt;/a&gt; 노드이거나 형식이 지정되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 입니다. 모두 &lt;code&gt;conversion&lt;/code&gt; 및 &lt;code&gt;format_spec&lt;/code&gt; 은 동시에 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf84c5ba6a00d652c627e5f2bd4e749a63252015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; &amp;mdash; Generic output formatting</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; &amp;mdash; 일반 출력 형식</target>
        </trans-unit>
        <trans-unit id="b71cb0cb02f865f82d72b91e24796615e9164bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; (optional). The id of the formatter for this handler.</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; (선택 사항). 이 핸들러의 포맷터 ID입니다.</target>
        </trans-unit>
        <trans-unit id="05f175bd2a6f0f4d28a78edc2313ca6f1bc66e1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fractions&lt;/code&gt; &amp;mdash; Rational numbers</source>
          <target state="translated">&lt;code&gt;fractions&lt;/code&gt; &amp;mdash; 유리수</target>
        </trans-unit>
        <trans-unit id="98bcfd9483a2fa4c2abca60e54d45fce784f76e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frozen&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), assigning to fields will generate an exception. This emulates read-only frozen instances. If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is defined in the class, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. See the discussion below.</source>
          <target state="translated">&lt;code&gt;frozen&lt;/code&gt; : true 인 경우 (기본값은 &lt;code&gt;False&lt;/code&gt; ) 필드에 지정하면 예외가 발생합니다. 읽기 전용 고정 인스턴스를 에뮬레이트합니다. 경우 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 다음 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 발생합니다. 아래 토론을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1cbd3876b78c909a3b27ba44b04e97c5aa18147" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frozen&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), assigning to fields will generate an exception. This emulates read-only frozen instances. If &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is defined in the class, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. See the discussion below.</source>
          <target state="translated">&lt;code&gt;frozen&lt;/code&gt; : true이면 (기본값은 &lt;code&gt;False&lt;/code&gt; ) 필드에 할당하면 예외가 생성됩니다. 이것은 읽기 전용 고정 인스턴스를 에뮬레이트합니다. 경우 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 다음 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 발생합니다. 아래 토론을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55f012efd3d22ba86ca6ee8ea119c9d7c9c975d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ftplib&lt;/code&gt; &amp;mdash; FTP protocol client</source>
          <target state="translated">&lt;code&gt;ftplib&lt;/code&gt; &amp;mdash; FTP 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="ea0942aa38608ac20fa2abaa42d4eabaa348a3a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullurl&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fullurl&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5807c41ee14fc3e6f88342ed5c119231d51adbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;exc&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; &lt;em&gt;exc를&lt;/em&gt; 올립니다&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5fb1fbd483ccd9a2199d8cc4718d15da794d32b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;exc&lt;/em&gt; and the message matches regex &lt;em&gt;r&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; 가 &lt;em&gt;exc&lt;/em&gt; 를 발생시키고 메시지가 regex &lt;em&gt;r&lt;/em&gt; 과 일치 함&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="891c5fc6642048b9bc769924b272874d6888df7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;warn&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; 레이즈 &lt;em&gt;경고&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f5ee4e06a10be013a8c1a5d22120074965d2bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;warn&lt;/em&gt; and the message matches regex &lt;em&gt;r&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; 레이즈는 &lt;em&gt;경고&lt;/em&gt; 와 메시지가 정규식과 일치하는 &lt;em&gt;연구를&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf2a70a7cd0c19aa6a396cdaa8665c94d41986f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;func_pointer&lt;/code&gt;, &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;func_pointer&lt;/code&gt; , &lt;code&gt;arguments&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc28c24ee063847aec81aaed33e1f2db5838cce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functools&lt;/code&gt; &amp;mdash; Higher-order functions and operations on callable objects</source>
          <target state="translated">&lt;code&gt;functools&lt;/code&gt; &amp;mdash; 호출 가능한 객체에 대한 상위 함수 및 작업</target>
        </trans-unit>
        <trans-unit id="c4fd225c1b68d10e4ce8084c1543edaf16bd3f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gc&lt;/code&gt; &amp;mdash; Garbage Collector interface</source>
          <target state="translated">&lt;code&gt;gc&lt;/code&gt; &amp;mdash; 가비지 콜렉터 인터페이스</target>
        </trans-unit>
        <trans-unit id="ea83fb800192e9479a18d0df6c561b53c6e55436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generators&lt;/code&gt; is a list of &lt;a href=&quot;#ast.comprehension&quot;&gt;&lt;code&gt;comprehension&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">&lt;code&gt;generators&lt;/code&gt; 는 &lt;a href=&quot;#ast.comprehension&quot;&gt; &lt;code&gt;comprehension&lt;/code&gt; &lt;/a&gt; 노드 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="838949aa2d81fcace22f340c52ae5e42be6703f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_buffer()&lt;/code&gt; must return an object implementing the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;get_buffer()&lt;/code&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;버퍼 프로토콜을&lt;/a&gt; 구현하는 객체를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="0283b15510d6b29f22cbdb37b9f84244f3284b87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_buffer()&lt;/code&gt; must return an object implementing the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;get_buffer()&lt;/code&gt; 는 &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;버퍼 프로토콜을&lt;/a&gt; 구현하는 객체를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="030cac35faa1aeb0a1ac95a915d2216951ac99a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getcode()&lt;/code&gt; &amp;ndash; return the HTTP status code of the response.</source>
          <target state="translated">&lt;code&gt;getcode()&lt;/code&gt; &amp;ndash; 응답의 HTTP 상태 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a08f950cbd3f178ae1691b2dcfd1c25858cf373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getopt&lt;/code&gt; &amp;mdash; C-style parser for command line options</source>
          <target state="translated">&lt;code&gt;getopt&lt;/code&gt; &amp;mdash; 명령 행 옵션을위한 C 스타일 파서</target>
        </trans-unit>
        <trans-unit id="193c9e1a651eac01dfd606c0a68192926ada97a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getpass&lt;/code&gt; &amp;mdash; Portable password input</source>
          <target state="translated">&lt;code&gt;getpass&lt;/code&gt; &amp;mdash; 휴대용 암호 입력</target>
        </trans-unit>
        <trans-unit id="08cda361973b427905030d4fb94e9f6fdb76b159" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getrandom()&lt;/code&gt; relies on entropy gathered from device drivers and other sources of environmental noise. Unnecessarily reading large quantities of data will have a negative impact on other users of the &lt;code&gt;/dev/random&lt;/code&gt; and &lt;code&gt;/dev/urandom&lt;/code&gt; devices.</source>
          <target state="translated">&lt;code&gt;getrandom()&lt;/code&gt; 은 장치 드라이버 및 기타 환경 소음원에서 수집 한 엔트로피에 의존합니다. 불필요하게 많은 양의 데이터를 읽으면 다른 &lt;code&gt;/dev/random&lt;/code&gt; 및 &lt;code&gt;/dev/urandom&lt;/code&gt; 장치 사용자에게 부정적인 영향을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="d5e52d76d6ea1c2fb40380ad816c1e0a27a08f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gettext&lt;/code&gt; &amp;mdash; Multilingual internationalization services</source>
          <target state="translated">&lt;code&gt;gettext&lt;/code&gt; &amp;mdash; 다국어 국제화 서비스</target>
        </trans-unit>
        <trans-unit id="98f75c72498bd61d6eaf17109a8162d25bb88e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;geturl()&lt;/code&gt; &amp;mdash; return the URL of the resource retrieved, commonly used to determine if a redirect was followed</source>
          <target state="translated">&lt;code&gt;geturl()&lt;/code&gt; &amp;mdash; 검색된 리소스의 URL을 반환하며 일반적으로 리디렉션이 따라 왔는지 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1b893b2256c650e826e77b7829f562b4261232f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glob&lt;/code&gt; &amp;mdash; Unix style pathname pattern expansion</source>
          <target state="translated">&lt;code&gt;glob&lt;/code&gt; &amp;mdash; 유닉스 스타일 경로명 패턴 확장</target>
        </trans-unit>
        <trans-unit id="37e75a1edd441e4e34bdfb9e591f9da7e500b355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; and &lt;code&gt;nonlocal&lt;/code&gt; statements. &lt;code&gt;names&lt;/code&gt; is a list of raw strings.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 및 &lt;code&gt;nonlocal&lt;/code&gt; 문. &lt;code&gt;names&lt;/code&gt; 는 원시 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="8052e849bb3d82e7d2225cefcea93ea06228cdfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;graphlib&lt;/code&gt; &amp;mdash; Functionality to operate with graph-like structures</source>
          <target state="translated">&lt;code&gt;graphlib&lt;/code&gt; &amp;mdash; 그래프와 유사한 구조로 작동하는 기능</target>
        </trans-unit>
        <trans-unit id="c89dfcc1658dd65d64d11cd731efce1c63edb89b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grp&lt;/code&gt; &amp;mdash; The group database</source>
          <target state="translated">&lt;code&gt;grp&lt;/code&gt; &amp;mdash; 그룹 데이터베이스</target>
        </trans-unit>
        <trans-unit id="40ef27da404c365f471f47a0f22a4082700e9912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gzip&lt;/code&gt; &amp;mdash; Support for &lt;strong&gt;gzip&lt;/strong&gt; files</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; &amp;mdash; &lt;strong&gt;gzip&lt;/strong&gt; 파일 지원</target>
        </trans-unit>
        <trans-unit id="d1d8d458c217282f48727e1b52d97c9ec0e305f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;exit_code&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; , &lt;code&gt;exit_code&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="398bff7aa038ff11e44671f2a694de578a52eed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49170bf3ed47c185262b0fb8b72c11bf75d9c179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a414ebe6e4dc01871389761a08b7d5e6ed31023d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handlers&lt;/code&gt; (optional). A list of ids of the handlers for this logger.</source>
          <target state="translated">&lt;code&gt;handlers&lt;/code&gt; (선택 사항). 이 로거의 핸들러 ID 목록입니다.</target>
        </trans-unit>
        <trans-unit id="af0e8f888876de15ee1d27d7906bf618591578b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt;: This can be a bool or &lt;code&gt;None&lt;/code&gt;. If true, this field is included in the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. If &lt;code&gt;None&lt;/code&gt; (the default), use the value of &lt;code&gt;compare&lt;/code&gt;: this would normally be the expected behavior. A field should be considered in the hash if it&amp;rsquo;s used for comparisons. Setting this value to anything other than &lt;code&gt;None&lt;/code&gt; is discouraged.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; : 이것은 bool 또는 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 . true 인 경우이 필드는 생성 된 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 메서드에 포함됩니다. 경우 &lt;code&gt;None&lt;/code&gt; (기본값)의 값을 사용하지 않는 &lt;code&gt;compare&lt;/code&gt; 이 일반적으로 예상되는 동작 할 것이다. 비교에 사용되는 경우 해시에서 필드를 고려해야합니다. 이 값을 &lt;code&gt;None&lt;/code&gt; 이외의 값으로 설정 하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="770cd9aae8389c81ac959d76d1e3401c3951eb1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt;: This can be a bool or &lt;code&gt;None&lt;/code&gt;. If true, this field is included in the generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. If &lt;code&gt;None&lt;/code&gt; (the default), use the value of &lt;code&gt;compare&lt;/code&gt;: this would normally be the expected behavior. A field should be considered in the hash if it&amp;rsquo;s used for comparisons. Setting this value to anything other than &lt;code&gt;None&lt;/code&gt; is discouraged.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; : bool 또는 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 . true이면이 필드가 생성 된 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 메서드에 포함됩니다. 경우 &lt;code&gt;None&lt;/code&gt; (기본값)의 값을 사용하지 않는 &lt;code&gt;compare&lt;/code&gt; 이 일반적으로 예상되는 동작 할 것이다. 비교에 사용되는 필드는 해시에서 고려되어야합니다. 이 값을 &lt;code&gt;None&lt;/code&gt; 이외의 값으로 설정하는 것은 권장 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f03f77ab060b86df90285078ae870ddc47911ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashlib&lt;/code&gt; &amp;mdash; Secure hashes and message digests</source>
          <target state="translated">&lt;code&gt;hashlib&lt;/code&gt; &amp;mdash; 보안 해시 및 메시지 요약</target>
        </trans-unit>
        <trans-unit id="53e25838ec69a7351e77f674478925519d474923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heapq&lt;/code&gt; &amp;mdash; Heap queue algorithm</source>
          <target state="translated">&lt;code&gt;heapq&lt;/code&gt; &amp;mdash; 힙 큐 알고리즘</target>
        </trans-unit>
        <trans-unit id="95fc081d20c29692a5332ee03b6e0169543a0310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hmac&lt;/code&gt; &amp;mdash; Keyed-Hashing for Message Authentication</source>
          <target state="translated">&lt;code&gt;hmac&lt;/code&gt; &amp;mdash; 메시지 인증을위한 키 해싱</target>
        </trans-unit>
        <trans-unit id="ea40ddc2c1053ba505db9c1d58547bd99d9460e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;traceback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hook&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;traceback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06a33a9b7fe67df82ea20d10c84e080a54c9f54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;unraisable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hook&lt;/code&gt; , &lt;code&gt;unraisable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d089d3d76a4bb1616d3e1feaeb25b60b9d02fddf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;family&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d12bc0cc08ccde3d27d8c4dc1e75c8b9e9b5f1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html.entities&lt;/code&gt; &amp;mdash; Definitions of HTML general entities</source>
          <target state="translated">&lt;code&gt;html.entities&lt;/code&gt; &amp;mdash; HTML 일반 엔티티의 정의</target>
        </trans-unit>
        <trans-unit id="5b0796ce3c4d1f4af7ad64de54bb22253df1a64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html.parser&lt;/code&gt; &amp;mdash; Simple HTML and XHTML parser</source>
          <target state="translated">&lt;code&gt;html.parser&lt;/code&gt; &amp;mdash; 간단한 HTML 및 XHTML 파서</target>
        </trans-unit>
        <trans-unit id="ae78e7911c437cef0187f92add226117d1496e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt; &amp;mdash; HyperText Markup Language support</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; &amp;mdash; 하이퍼 텍스트 마크 업 언어 지원</target>
        </trans-unit>
        <trans-unit id="f0a5019e9e8198a9ed7d167e02ef4f4eb4f84141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.client&lt;/code&gt; &amp;mdash; HTTP protocol client</source>
          <target state="translated">&lt;code&gt;http.client&lt;/code&gt; &amp;mdash; HTTP 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="b1236d64358dc00c635305a63e9430d0a714fdf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.cookiejar&lt;/code&gt; &amp;mdash; Cookie handling for HTTP clients</source>
          <target state="translated">&lt;code&gt;http.cookiejar&lt;/code&gt; &amp;mdash; HTTP 클라이언트를위한 쿠키 처리</target>
        </trans-unit>
        <trans-unit id="31cf0116dec54524e99b69e997eb79b1b391c4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.cookies&lt;/code&gt; &amp;mdash; HTTP state management</source>
          <target state="translated">&lt;code&gt;http.cookies&lt;/code&gt; &amp;mdash; HTTP 상태 관리</target>
        </trans-unit>
        <trans-unit id="f33993e186065f1fa46c6e890f1a0d7af48dbc6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.server&lt;/code&gt; &amp;mdash; HTTP servers</source>
          <target state="translated">&lt;code&gt;http.server&lt;/code&gt; &amp;mdash; HTTP 서버</target>
        </trans-unit>
        <trans-unit id="a2d1b35bb6910efea04e6976a59e30d4cf68b51e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http&lt;/code&gt; &amp;mdash; HTTP modules</source>
          <target state="translated">&lt;code&gt;http&lt;/code&gt; &amp;mdash; HTTP 모듈</target>
        </trans-unit>
        <trans-unit id="8ded9b54404df7e3ae31bef263462b92f9f903ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; &amp;mdash; signal that the handler knows how to handle HTTP errors with HTTP error code &lt;em&gt;type&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; &amp;mdash; 핸들러가 HTTP 오류 코드 &lt;em&gt;type&lt;/em&gt; 으로 HTTP 오류를 처리하는 방법을 알고 있음을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="13b43110e5ba00c5373b32029cc93860d520b7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;logoption&lt;/code&gt;, &lt;code&gt;facility&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ident&lt;/code&gt; , &lt;code&gt;logoption&lt;/code&gt; , &lt;code&gt;facility&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d84300de051acef8db37bf50011d3317233ce51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imaplib&lt;/code&gt; &amp;mdash; IMAP4 protocol client</source>
          <target state="translated">&lt;code&gt;imaplib&lt;/code&gt; &amp;mdash; IMAP4 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="09ca5c3ff1e32d33977f0fd38b92b6031002ebcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imghdr&lt;/code&gt; &amp;mdash; Determine the type of an image</source>
          <target state="translated">&lt;code&gt;imghdr&lt;/code&gt; &amp;mdash; 이미지의 유형을 결정합니다</target>
        </trans-unit>
        <trans-unit id="24e038371c8dd559f9853972441ade33e8bb18db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imp&lt;/code&gt; &amp;mdash; Access the import internals</source>
          <target state="translated">&lt;code&gt;imp&lt;/code&gt; &amp;mdash; 가져 오기 내부에 액세스</target>
        </trans-unit>
        <trans-unit id="79d3a158a2ab6af3127d07ddb321454c1f0656ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importlib.metadata&lt;/code&gt; is a library that provides for access to installed package metadata. Built in part on Python&amp;rsquo;s import system, this library intends to replace similar functionality in the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points&quot;&gt;entry point API&lt;/a&gt; and &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#metadata-api&quot;&gt;metadata API&lt;/a&gt; of &lt;code&gt;pkg_resources&lt;/code&gt;. Along with &lt;a href=&quot;importlib#module-importlib.resources&quot;&gt;&lt;code&gt;importlib.resources&lt;/code&gt;&lt;/a&gt; in Python 3.7 and newer (backported as &lt;a href=&quot;https://importlib-resources.readthedocs.io/en/latest/index.html&quot;&gt;importlib_resources&lt;/a&gt; for older versions of Python), this can eliminate the need to use the older and less efficient &lt;code&gt;pkg_resources&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;importlib.metadata&lt;/code&gt; 는 설치된 패키지 메타 데이터에 대한 액세스를 제공하는 라이브러리입니다. 파이썬의 수입 시스템에 부분적으로 지어진이 라이브러리는 비슷한 기능을 대체하고자하는 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points&quot;&gt;진입 점 API&lt;/a&gt; 및 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#metadata-api&quot;&gt;메타 데이터 API&lt;/a&gt; 의 &lt;code&gt;pkg_resources&lt;/code&gt; . 함께 &lt;a href=&quot;importlib#module-importlib.resources&quot;&gt; &lt;code&gt;importlib.resources&lt;/code&gt; &lt;/a&gt; 파이썬 (로 백 포트 3.7 및 최신의 &lt;a href=&quot;https://importlib-resources.readthedocs.io/en/latest/index.html&quot;&gt;importlib_resources&lt;/a&gt; 파이썬의 이전 버전)이 오래되고 비효율적 사용할 필요가 제거 할 수 &lt;code&gt;pkg_resources&lt;/code&gt; 의 패키지를.</target>
        </trans-unit>
        <trans-unit id="2e719565972e7dcbe705f07a7c2aacbc664d70e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importlib.metadata&lt;/code&gt; is a library that provides for access to installed package metadata. Built in part on Python&amp;rsquo;s import system, this library intends to replace similar functionality in the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points&quot;&gt;entry point API&lt;/a&gt; and &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#metadata-api&quot;&gt;metadata API&lt;/a&gt; of &lt;code&gt;pkg_resources&lt;/code&gt;. Along with &lt;code&gt;importlib.resources&lt;/code&gt; in &lt;a href=&quot;https://docs.python.org/3/library/importlib.html#module-importlib.resources&quot;&gt;Python 3.7 and newer&lt;/a&gt; (backported as &lt;a href=&quot;https://importlib-resources.readthedocs.io/en/latest/index.html&quot;&gt;importlib_resources&lt;/a&gt; for older versions of Python), this can eliminate the need to use the older and less efficient &lt;code&gt;pkg_resources&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;importlib.metadata&lt;/code&gt; 는 설치된 패키지 메타 데이터에 대한 액세스를 제공하는 라이브러리입니다. 파이썬의 수입 시스템에 부분적으로 지어진이 라이브러리는 비슷한 기능을 대체하고자하는 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points&quot;&gt;진입 점 API&lt;/a&gt; 및 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#metadata-api&quot;&gt;메타 데이터 API&lt;/a&gt; 의 &lt;code&gt;pkg_resources&lt;/code&gt; . 함께 &lt;code&gt;importlib.resources&lt;/code&gt; 에 &lt;a href=&quot;https://docs.python.org/3/library/importlib.html#module-importlib.resources&quot;&gt;파이썬 3.7 및 최신&lt;/a&gt; (으로 백 포트 &lt;a href=&quot;https://importlib-resources.readthedocs.io/en/latest/index.html&quot;&gt;importlib_resources&lt;/a&gt; 파이썬의 이전 버전)이 오래되고 비효율적 사용할 필요가 제거 할 수 &lt;code&gt;pkg_resources&lt;/code&gt; 의 패키지를.</target>
        </trans-unit>
        <trans-unit id="90c5a8e1317a073781afd262b83843cb08552496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importlib&lt;/code&gt; &amp;mdash; The implementation of &lt;code&gt;import&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;importlib&lt;/code&gt; &amp;mdash; &lt;code&gt;import&lt;/code&gt; 구현</target>
        </trans-unit>
        <trans-unit id="053bd951dcbf30db1926d22ca97a8a21aedc284d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;x&lt;/em&gt; is not found in &lt;em&gt;s&lt;/em&gt;. Not all implementations support passing the additional arguments &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt;. These arguments allow efficient searching of subsections of the sequence. Passing the extra arguments is roughly equivalent to using &lt;code&gt;s[i:j].index(x)&lt;/code&gt;, only without copying any data and with the returned index being relative to the start of the sequence rather than the start of the slice.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 상승 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 할 때 &lt;em&gt;X는&lt;/em&gt; 발견되지 않았습니다 &lt;em&gt;의&lt;/em&gt; . 모든 구현이 추가 인수 &lt;em&gt;i&lt;/em&gt; 및 &lt;em&gt;j&lt;/em&gt; 전달을 지원하지는 않습니다 . 이 인수를 사용하면 시퀀스의 하위 섹션을 효율적으로 검색 할 수 있습니다. 추가 인수를 전달하는 것은 &lt;code&gt;s[i:j].index(x)&lt;/code&gt; 를 사용하는 것과 거의 같습니다 . 데이터를 복사하지 않고 슬라이스의 시작이 아니라 시퀀스의 시작에 상대적으로 반환 된 인덱스가있는 경우에만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="6b59ad68beed25c2cecba3a16569531410cf69ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info()&lt;/code&gt; &amp;mdash; return the meta-information of the page, such as headers, in the form of an &lt;a href=&quot;email.parser#email.message_from_string&quot;&gt;&lt;code&gt;email.message_from_string()&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;http://jkorpela.fi/http.html&quot;&gt;Quick Reference to HTTP Headers&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;info()&lt;/code&gt; &amp;mdash; 페이지의 메타 정보 ( 예 : 헤더)를 &lt;a href=&quot;email.parser#email.message_from_string&quot;&gt; &lt;code&gt;email.message_from_string()&lt;/code&gt; &lt;/a&gt; 인스턴스 형식으로 반환합니다 (&lt;a href=&quot;http://jkorpela.fi/http.html&quot;&gt; HTTP 헤더에&lt;/a&gt; 대한 빠른 참조 참조 )</target>
        </trans-unit>
        <trans-unit id="0b73a6eb20ad7de6fc87173bdcc3c2b98a38c37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0494d49caeff1e643ed0ec699131e6fba46a7dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method will be generated.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="76a646fa2e51490edc1b390b55cdf47da976c5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method will be generated.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ea1e28629d86349bcd471d632718493127d487f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), this field is included as a parameter to the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; : true (기본값) 인 경우이 필드는 생성 된 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 매개 변수로 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="af57ea8eb99d49cbe9b5ac601dd961b09c39bf4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), this field is included as a parameter to the generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; : true (기본값)이면이 필드는 생성 된 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 매개 변수로 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="930b8dc0626cbfbb2e41cea7024ac1fdc7b1b760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline&lt;/code&gt; and &lt;code&gt;attachment&lt;/code&gt; are the only valid values in common use.</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; 및 &lt;code&gt;attachment&lt;/code&gt; 는 일반적으로 사용되는 유일한 유효한 값입니다.</target>
        </trans-unit>
        <trans-unit id="4968834876922be6b49c0632c4d080b085fbf477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inspect&lt;/code&gt; &amp;mdash; Inspect live objects</source>
          <target state="translated">&lt;code&gt;inspect&lt;/code&gt; &amp;mdash; 라이브 객체 검사</target>
        </trans-unit>
        <trans-unit id="c7cb4f5c367df4d89decfb58e7c47ee817aadb6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;i1&lt;/code&gt;, &lt;code&gt;i2&lt;/code&gt;, &lt;code&gt;i4&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt; or &lt;code&gt;biginteger&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; , &lt;code&gt;i1&lt;/code&gt; , &lt;code&gt;i2&lt;/code&gt; , &lt;code&gt;i4&lt;/code&gt; , &lt;code&gt;i8&lt;/code&gt; 또는 &lt;code&gt;biginteger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fab0459bf8bd36aad31c3f30d57c2d11e0c9ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io&lt;/code&gt; &amp;mdash; Core tools for working with streams</source>
          <target state="translated">&lt;code&gt;io&lt;/code&gt; &amp;mdash; 스트림 작업을위한 핵심 도구</target>
        </trans-unit>
        <trans-unit id="b86535f4fedd849135c30b10a68f69dac65e5896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ipaddress&lt;/code&gt; &amp;mdash; IPv4/IPv6 manipulation library</source>
          <target state="translated">&lt;code&gt;ipaddress&lt;/code&gt; &amp;mdash; IPv4 / IPv6 조작 라이브러리</target>
        </trans-unit>
        <trans-unit id="33944e1298cab77fbec834e2ae13646eff314358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_async&lt;/code&gt; indicates a comprehension is asynchronous (using an &lt;code&gt;async for&lt;/code&gt; instead of &lt;code&gt;for&lt;/code&gt;). The value is an integer (0 or 1).</source>
          <target state="translated">&lt;code&gt;is_async&lt;/code&gt; 은 (AN 사용 이해가 비동기 나타낸다 &lt;code&gt;async for&lt;/code&gt; 대신 &lt;code&gt;for&lt;/code&gt; ). 값은 정수 (0 또는 1)입니다.</target>
        </trans-unit>
        <trans-unit id="bb5bbca05067167f750614c7fc4faef861ad2257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itertools&lt;/code&gt; &amp;mdash; Functions creating iterators for efficient looping</source>
          <target state="translated">&lt;code&gt;itertools&lt;/code&gt; &amp;mdash; 효율적인 반복을 위해 반복자를 만드는 함수</target>
        </trans-unit>
        <trans-unit id="4819cd316d51226e8b444fd636bcd4a0c7d08d6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt;: Articles from peers are filed in the junk group instead.</source>
          <target state="translated">&lt;code&gt;j&lt;/code&gt; : 동료의 기사가 대신 정크 그룹에 정리됩니다.</target>
        </trans-unit>
        <trans-unit id="44064800036f2111320e079df201907a5292f35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;json&lt;/code&gt; &amp;mdash; JSON encoder and decoder</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; &amp;mdash; JSON 인코더 및 디코더</target>
        </trans-unit>
        <trans-unit id="ce9b2a8283274a38541a3a33214009da4610c86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;k * a&lt;/code&gt; and &lt;code&gt;a * k&lt;/code&gt; multiplication with scalar</source>
          <target state="translated">&lt;code&gt;k * a&lt;/code&gt; 스칼라를 사용한 k * a 및 &lt;code&gt;a * k&lt;/code&gt; 곱셈</target>
        </trans-unit>
        <trans-unit id="3e8d6a478befa829d9feaed0c05bbec432582837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; must be in the form of a relative, normalized POSIX path, with no up-level references. The constructor will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if a non-conforming key is passed.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 는 상위 수준 참조가없는 상대적이고 정규화 된 POSIX 경로 형식이어야합니다. 생성자는 부적합한 키가 전달 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="479ad980986f8f26949ff56b3250df6f7043d920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;file_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3849b9b17e89e8173802379061c6f73183070b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="568a338ca905c8a73054f88134b3df131ccb83a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;sub_key&lt;/code&gt; , &lt;code&gt;access&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f7fc919055ca883b74c33dd80136b24fc8a70bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;sub_key&lt;/code&gt; , &lt;code&gt;file_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff4d5b14bd3d53226bf308a53775cd8022a54fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;sub_key&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c742f88c588515f5ef8e573bc7ea97b855e2651f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;value_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;sub_key&lt;/code&gt; , &lt;code&gt;value_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80b76e9bf8b22a566934d41ee5eea02b6daf8fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dedb93dbb8ceeb91e4ffd49fe3e083188a59ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyword&lt;/code&gt; &amp;mdash; Testing for Python keywords</source>
          <target state="translated">&lt;code&gt;keyword&lt;/code&gt; &amp;mdash; 파이썬 키워드 테스트</target>
        </trans-unit>
        <trans-unit id="bffa24f4a758bd6a8aec20ee5c7d445ee2e622d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keywords&lt;/code&gt; holds a list of &lt;a href=&quot;keyword#module-keyword&quot;&gt;&lt;code&gt;keyword&lt;/code&gt;&lt;/a&gt; objects representing arguments passed by keyword.</source>
          <target state="translated">&lt;code&gt;keywords&lt;/code&gt; 는 &lt;a href=&quot;keyword#module-keyword&quot;&gt; &lt;code&gt;keyword&lt;/code&gt; &lt;/a&gt; 전달 된 인수를 나타내는 키워드 객체 목록을 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="a0eb53500f5b9491bd6c77421e7677e413809340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keywords&lt;/code&gt; is a list of &lt;a href=&quot;keyword#module-keyword&quot;&gt;&lt;code&gt;keyword&lt;/code&gt;&lt;/a&gt; nodes, principally for &amp;lsquo;metaclass&amp;rsquo;. Other keywords will be passed to the metaclass, as per &lt;a href=&quot;http://www.python.org/dev/peps/pep-3115/&quot;&gt;PEP-3115&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;keywords&lt;/code&gt; 는 주로 'metaclass'에 대한 &lt;a href=&quot;keyword#module-keyword&quot;&gt; &lt;code&gt;keyword&lt;/code&gt; &lt;/a&gt; 노드 목록입니다 . &lt;a href=&quot;http://www.python.org/dev/peps/pep-3115/&quot;&gt;PEP-3115에&lt;/a&gt; 따라 다른 키워드는 메타 클래스에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2df99b982f299a9d8353f39c03d0f3befaa8f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keywords&lt;/code&gt; is a list of &lt;a href=&quot;keyword#module-keyword&quot;&gt;&lt;code&gt;keyword&lt;/code&gt;&lt;/a&gt; nodes, principally for &amp;lsquo;metaclass&amp;rsquo;. Other keywords will be passed to the metaclass, as per &lt;a href=&quot;https://www.python.org/dev/peps/pep-3115/&quot;&gt;PEP-3115&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a7101e056fbd5b0044c3ee3ef304d3fd99d3b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kw_defaults&lt;/code&gt; is a list of default values for keyword-only arguments. If one is &lt;code&gt;None&lt;/code&gt;, the corresponding argument is required.</source>
          <target state="translated">&lt;code&gt;kw_defaults&lt;/code&gt; 는 키워드 전용 인수의 기본값 목록입니다. 하나가 없으면 &lt;code&gt;None&lt;/code&gt; 해당 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ae9dacefd03d20490d58d313eadaa9ba373365f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kwds&lt;/code&gt; is a dictionary containing one pre-initialized key, &lt;code&gt;defects&lt;/code&gt;. &lt;code&gt;defects&lt;/code&gt; is an empty list. The parse method should append any detected defects to this list. On return, the &lt;code&gt;kwds&lt;/code&gt; dictionary &lt;em&gt;must&lt;/em&gt; contain values for at least the keys &lt;code&gt;decoded&lt;/code&gt; and &lt;code&gt;defects&lt;/code&gt;. &lt;code&gt;decoded&lt;/code&gt; should be the string value for the header (that is, the header value fully decoded to unicode). The parse method should assume that &lt;em&gt;string&lt;/em&gt; may contain content-transfer-encoded parts, but should correctly handle all valid unicode characters as well so that it can parse un-encoded header values.</source>
          <target state="translated">&lt;code&gt;kwds&lt;/code&gt; 는 하나의 사전 초기화 된 키 &lt;code&gt;defects&lt;/code&gt; 포함하는 사전 입니다. &lt;code&gt;defects&lt;/code&gt; 은 빈 목록입니다. 구문 분석 방법은 감지 된 결함을이 목록에 추가해야합니다. 돌아 왔을 때, &lt;code&gt;kwds&lt;/code&gt; 딕셔너리 &lt;em&gt;는&lt;/em&gt; 최소한 &lt;code&gt;decoded&lt;/code&gt; 키 와 &lt;code&gt;defects&lt;/code&gt; 대한 값을 포함 &lt;em&gt;해야&lt;/em&gt; 합니다 . &lt;code&gt;decoded&lt;/code&gt; 은 헤더의 문자열 값이어야합니다 (즉, 유니 코드로 완전히 디코딩 된 헤더 값). 구문 분석 방법은 &lt;em&gt;문자열에&lt;/em&gt; 컨텐츠 전송 인코딩 된 부분이 포함될 수 있지만 인코딩되지 않은 헤더 값을 구문 분석 할 수 있도록 모든 유효한 유니 코드 문자를 올바르게 처리 해야한다고 가정 해야합니다.</target>
        </trans-unit>
        <trans-unit id="117df01ce15e9a19f1285f7542bdbc08ecb544b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lambda&lt;/code&gt; is a minimal function definition that can be used inside an expression. Unlike &lt;a href=&quot;#ast.FunctionDef&quot;&gt;&lt;code&gt;FunctionDef&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;body&lt;/code&gt; holds a single node.</source>
          <target state="translated">&lt;code&gt;lambda&lt;/code&gt; 는 식 내에서 사용할 수있는 최소 함수 정의입니다. 달리 &lt;a href=&quot;#ast.FunctionDef&quot;&gt; &lt;code&gt;FunctionDef&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;body&lt;/code&gt; 하나의 노드를 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4e3f817932e1b1d836ac776a8937b06b8c20cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lc&lt;/code&gt;: Number of literal context bits.</source>
          <target state="translated">&lt;code&gt;lc&lt;/code&gt; : 리터럴 컨텍스트 비트 수입니다.</target>
        </trans-unit>
        <trans-unit id="36cc15ba1632e6a0b18265d38377f16fcc6c9752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len(view)&lt;/code&gt; is equal to the length of &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;view.ndim = 0&lt;/code&gt;, the length is 1. If &lt;code&gt;view.ndim = 1&lt;/code&gt;, the length is equal to the number of elements in the view. For higher dimensions, the length is equal to the length of the nested list representation of the view. The &lt;a href=&quot;#memoryview.itemsize&quot;&gt;&lt;code&gt;itemsize&lt;/code&gt;&lt;/a&gt; attribute will give you the number of bytes in a single element.</source>
          <target state="translated">&lt;code&gt;len(view)&lt;/code&gt; 는 &lt;a href=&quot;#memoryview.tolist&quot;&gt; &lt;code&gt;tolist&lt;/code&gt; &lt;/a&gt; 의 길이와 같습니다 . 경우 &lt;code&gt;view.ndim = 0&lt;/code&gt; , 길이가 1 인 경우 &lt;code&gt;view.ndim = 1&lt;/code&gt; 길이는 뷰 내의 요소들의 수와 동일하다. 더 큰 차원의 경우 길이는 뷰의 중첩 목록 표현의 길이와 같습니다. &lt;a href=&quot;#memoryview.itemsize&quot;&gt; &lt;code&gt;itemsize&lt;/code&gt; 의&lt;/a&gt; 속성은 하나의 요소에서 당신에게 바이트 수를 줄 것이다.</target>
        </trans-unit>
        <trans-unit id="c20d16372c4cefc2155fe6e1370f6156c8abb574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; (optional). The level of the handler.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; (선택 사항). 핸들러의 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="955ead5725dabc945c9017a9574ede70c0bb08af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; (optional). The level of the logger.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; (선택 사항). 로거의 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="e96d4cfd1443b6fae1c3065011a086eae7571f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib2to3&lt;/code&gt; - 2to3&amp;rsquo;s library</source>
          <target state="translated">&lt;code&gt;lib2to3&lt;/code&gt; -2to3 의 라이브러리</target>
        </trans-unit>
        <trans-unit id="eb0568be695bd9b2170093b293069373376357a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;library&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b6fca047a03e8e50d0a4279faaa6ea9620e502f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linecache&lt;/code&gt; &amp;mdash; Random access to text lines</source>
          <target state="translated">&lt;code&gt;linecache&lt;/code&gt; &amp;mdash; 텍스트 줄에 대한 임의 액세스</target>
        </trans-unit>
        <trans-unit id="d1c12d8fb677c042e4c1f204aac13b60bd052125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt; &amp;mdash; Internationalization services</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; &amp;mdash; 국제화 서비스</target>
        </trans-unit>
        <trans-unit id="ae27f3c275f0ac8fbc0028458e1e81127a4acfb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.config&lt;/code&gt; &amp;mdash; Logging configuration</source>
          <target state="translated">&lt;code&gt;logging.config&lt;/code&gt; &amp;mdash; 로깅 구성</target>
        </trans-unit>
        <trans-unit id="8f100f770bc24eddfa74f41b9e5e3c5fc7566dbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.handlers&lt;/code&gt; &amp;mdash; Logging handlers</source>
          <target state="translated">&lt;code&gt;logging.handlers&lt;/code&gt; &amp;mdash; 로깅 핸들러</target>
        </trans-unit>
        <trans-unit id="792a31f8013992d82a559b7b542b0fbbebc3b48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging&lt;/code&gt; &amp;mdash; Logging facility for Python</source>
          <target state="translated">&lt;code&gt;logging&lt;/code&gt; &amp;mdash; 파이썬을위한 로깅 기능</target>
        </trans-unit>
        <trans-unit id="6210c59012d742b6ed60c2407de2b2fabb405bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lp&lt;/code&gt;: Number of literal position bits. The sum &lt;code&gt;lc + lp&lt;/code&gt; must be at most 4.</source>
          <target state="translated">&lt;code&gt;lp&lt;/code&gt; : 리터럴 위치 비트 수. &lt;code&gt;lc + lp&lt;/code&gt; 의 합 은 최대 4 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ad81279d25e367cd70abb8bc30f220f576cdbec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lzma&lt;/code&gt; &amp;mdash; Compression using the LZMA algorithm</source>
          <target state="translated">&lt;code&gt;lzma&lt;/code&gt; &amp;mdash; LZMA 알고리즘을 사용한 압축</target>
        </trans-unit>
        <trans-unit id="6cb0f25d74200ed1e0334a7126af0958c5b9f1fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m.end('quote')&lt;/code&gt; (etc.)</source>
          <target state="translated">&lt;code&gt;m.end('quote')&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="695da2490dd970429cd51b7eaa78a2e3d7457bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: The group is moderated and all postings must be approved.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; : 그룹이 조정되었으며 모든 게시가 승인되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e9e5b1ec29f8b1a6f6196fa4a245c3e0c02edc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;machine&lt;/code&gt; - hardware identifier</source>
          <target state="translated">&lt;code&gt;machine&lt;/code&gt; -하드웨어 식별자</target>
        </trans-unit>
        <trans-unit id="bdba150064a973117636345341367983a8c32c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mailbox&lt;/code&gt; &amp;mdash; Manipulate mailboxes in various formats</source>
          <target state="translated">&lt;code&gt;mailbox&lt;/code&gt; &amp;mdash; 다양한 형식으로 사서함을 조작합니다</target>
        </trans-unit>
        <trans-unit id="6e5dbe411aa1dd20775e2668b90093b6943a3105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mailcap&lt;/code&gt; &amp;mdash; Mailcap file handling</source>
          <target state="translated">&lt;code&gt;mailcap&lt;/code&gt; &amp;mdash; 메일 캡 파일 처리</target>
        </trans-unit>
        <trans-unit id="a47e916981186e5cf5599aef3cd287983902accc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main&lt;/code&gt; supports being used from the interactive interpreter by passing in the argument &lt;code&gt;exit=False&lt;/code&gt;. This displays the result on standard output without calling &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; &lt;code&gt;exit=False&lt;/code&gt; 인수를 전달하여 대화식 인터프리터에서 사용되는 기본 지원 . &lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt; 를 호출하지 않고 표준 출력에 결과를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="70a65c6e36c0f3b2af60b4265283c3684a4abc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maintype&lt;/code&gt; &amp;ndash; Main MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;maintype&lt;/code&gt; &amp;ndash; &lt;em&gt;텍스트&lt;/em&gt; 가 아닌 부분 의 기본 MIME 유형</target>
        </trans-unit>
        <trans-unit id="bb4dc8b874b5968af9c06806b075cb9514b74371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marshal&lt;/code&gt; &amp;mdash; Internal Python object serialization</source>
          <target state="translated">&lt;code&gt;marshal&lt;/code&gt; &amp;mdash; 내부 파이썬 객체 직렬화</target>
        </trans-unit>
        <trans-unit id="a10b9506db3447f964629520f910823569477c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math.nextafter(x, -math.inf)&lt;/code&gt; goes down: towards minus infinity.</source>
          <target state="translated">&lt;code&gt;math.nextafter(x, -math.inf)&lt;/code&gt; 는 아래로 내려갑니다 : 마이너스 무한대로.</target>
        </trans-unit>
        <trans-unit id="52127cf40ab6bc4b8a121cf402986bfdc4940698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math.nextafter(x, 0.0)&lt;/code&gt; goes towards zero.</source>
          <target state="translated">&lt;code&gt;math.nextafter(x, 0.0)&lt;/code&gt; 는 0을 향합니다.</target>
        </trans-unit>
        <trans-unit id="bfbd36058bfdb0d42d166c78db275e3ffab3348d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math.nextafter(x, math.copysign(math.inf, x))&lt;/code&gt; goes away from zero.</source>
          <target state="translated">&lt;code&gt;math.nextafter(x, math.copysign(math.inf, x))&lt;/code&gt; 는 0에서 멀어집니다.</target>
        </trans-unit>
        <trans-unit id="28a0b725093fd532e8a4d9c817a1df38bfda3b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math.nextafter(x, math.inf)&lt;/code&gt; goes up: towards positive infinity.</source>
          <target state="translated">&lt;code&gt;math.nextafter(x, math.inf)&lt;/code&gt; 가 올라갑니다 : 양의 무한대로.</target>
        </trans-unit>
        <trans-unit id="800175d7e6580d2899120ad1e0ab6c80b1d815ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; &amp;mdash; Mathematical functions</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; &amp;mdash; 수학 함수</target>
        </trans-unit>
        <trans-unit id="e3f0e12df8f4f811c80883070acb89fa6001a137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;metadata&lt;/code&gt;: This can be a mapping or None. None is treated as an empty dict. This value is wrapped in &lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;MappingProxyType()&lt;/code&gt;&lt;/a&gt; to make it read-only, and exposed on the &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; object. It is not used at all by Data Classes, and is provided as a third-party extension mechanism. Multiple third-parties can each have their own key, to use as a namespace in the metadata.</source>
          <target state="translated">&lt;code&gt;metadata&lt;/code&gt; : 매핑 또는 없음 일 수 있습니다. 아무것도 빈 dict로 취급되지 않습니다. 이 값은 &lt;a href=&quot;types#types.MappingProxyType&quot;&gt; &lt;code&gt;MappingProxyType()&lt;/code&gt; &lt;/a&gt; 으로 래핑되어 읽기 전용이되고 &lt;a href=&quot;#dataclasses.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 객체 에 노출됩니다 . 데이터 클래스에서 전혀 사용되지 않으며 타사 확장 메커니즘으로 제공됩니다. 여러 타사가 메타 데이터에서 네임 스페이스로 사용하기 위해 각각 자체 키를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b02870214939398f55b9b5e1489ab3c520413cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mf&lt;/code&gt;: What match finder to use &amp;ndash; &lt;code&gt;MF_HC3&lt;/code&gt;, &lt;code&gt;MF_HC4&lt;/code&gt;, &lt;code&gt;MF_BT2&lt;/code&gt;, &lt;code&gt;MF_BT3&lt;/code&gt;, or &lt;code&gt;MF_BT4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mf&lt;/code&gt; : 사용할 일치 검색기 &amp;ndash; &lt;code&gt;MF_HC3&lt;/code&gt; , &lt;code&gt;MF_HC4&lt;/code&gt; , &lt;code&gt;MF_BT2&lt;/code&gt; , &lt;code&gt;MF_BT3&lt;/code&gt; 또는 &lt;code&gt;MF_BT4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d400ba0cfacb9f189bda312f3bd452ee7cc5ff74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mimetypes&lt;/code&gt; &amp;mdash; Map filenames to MIME types</source>
          <target state="translated">&lt;code&gt;mimetypes&lt;/code&gt; &amp;mdash; 파일 이름을 MIME 형식으로 매핑</target>
        </trans-unit>
        <trans-unit id="3080fda03321329c4a90f94dc914b7ac2c6bcee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mmap&lt;/code&gt; &amp;mdash; Memory-mapped file support</source>
          <target state="translated">&lt;code&gt;mmap&lt;/code&gt; &amp;mdash; 메모리 매핑 된 파일 지원</target>
        </trans-unit>
        <trans-unit id="ab9f756e0e6af7b0452e5652d705ec23b745756c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt; already provides a feature to help with this, called speccing. If you use a class or instance as the &lt;code&gt;spec&lt;/code&gt; for a mock then you can only access attributes on the mock that exist on the real class:</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; 은 이미 speccing이라고하는 기능을 제공합니다. 클래스 또는 인스턴스를 모의 &lt;code&gt;spec&lt;/code&gt; 으로 사용하는 경우 실제 클래스에 존재하는 모의 속성에만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="768eabab9ce29f7acb2be40dec84f2485a69b579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; assumes discrete data and returns a single value. This is the standard treatment of the mode as commonly taught in schools:</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 는 이산 데이터를 가정하고 단일 값을 반환합니다. 이것은 학교에서 일반적으로 가르치는 모드의 표준 치료입니다.</target>
        </trans-unit>
        <trans-unit id="a79fd79e05eaf895e1618943b5bd11c29fc825e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb37378f27481730bcd890276dbff9af11492f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt;: &lt;code&gt;MODE_FAST&lt;/code&gt; or &lt;code&gt;MODE_NORMAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; : &lt;code&gt;MODE_FAST&lt;/code&gt; 또는 &lt;code&gt;MODE_NORMAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c33ce84aa7059422ed60ff940338dcc63aea2487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;sys.path&lt;/code&gt;, &lt;code&gt;sys.meta_path&lt;/code&gt;, &lt;code&gt;sys.path_hooks&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; , &lt;code&gt;sys.path&lt;/code&gt; , &lt;code&gt;sys.meta_path&lt;/code&gt; , &lt;code&gt;sys.path_hooks&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9db37f6703e03af48cf66d3b9f4e3dcbc7f262ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91c0a53b8b0926db0d21d1bd6a71eb11d165859c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulefinder&lt;/code&gt; &amp;mdash; Find modules used by a script</source>
          <target state="translated">&lt;code&gt;modulefinder&lt;/code&gt; &amp;mdash; 스크립트에서 사용하는 모듈을 찾습니다</target>
        </trans-unit>
        <trans-unit id="47dc14f20abe013ba283f896d092ae64e2936242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulo&lt;/code&gt; must be nonzero and have at most &amp;lsquo;precision&amp;rsquo; digits</source>
          <target state="translated">&lt;code&gt;modulo&lt;/code&gt; 는 0이 아니어야하며 최대 '정밀도'숫자를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="e66045ce1217ce1870926bc6bcb8c415df4810e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msilib&lt;/code&gt; &amp;mdash; Read and write Microsoft Installer files</source>
          <target state="translated">&lt;code&gt;msilib&lt;/code&gt; &amp;mdash; Microsoft Installer 파일 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="98345bb3c7f5cdc241a65db5c50a5c3818eaf40c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msvcrt&lt;/code&gt; &amp;mdash; Useful routines from the MS VC++ runtime</source>
          <target state="translated">&lt;code&gt;msvcrt&lt;/code&gt; &amp;mdash; MS VC ++ 런타임의 유용한 루틴</target>
        </trans-unit>
        <trans-unit id="8ded59b54db0ecdbbca103cc22dd5c015b561842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiprocessing.shared_memory&lt;/code&gt; &amp;mdash; Provides shared memory for direct access across processes</source>
          <target state="translated">&lt;code&gt;multiprocessing.shared_memory&lt;/code&gt; &amp;mdash; 프로세스 간 직접 액세스를위한 공유 메모리를 제공합니다</target>
        </trans-unit>
        <trans-unit id="4b70968453eb1de834a04bc5398d65898c96a319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiprocessing&lt;/code&gt; &amp;mdash; Process-based parallelism</source>
          <target state="translated">&lt;code&gt;multiprocessing&lt;/code&gt; &amp;mdash; 프로세스 기반 병렬 처리</target>
        </trans-unit>
        <trans-unit id="b8f1e9bb5182c723b3c4702b369bcb6739c08d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: No local postings are allowed, only articles from peers.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; : 로컬 게시물이 허용되지 않으며 동료의 기사 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="d85b4cd0b99899fbfd11b1ac3690a60dc93b6ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a raw string for the class name</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 은 클래스 이름의 원시 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0842d4bedd98171d34eb5dd0ebd3cc1b5b957ed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a raw string of the function name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 은 함수 이름의 원시 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="402af55ac3117b725db2e17ba76cb78a857e7c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;open_mode&lt;/code&gt;, &lt;code&gt;pipe_mode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; , &lt;code&gt;open_mode&lt;/code&gt; , &lt;code&gt;pipe_mode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="079e71a34aa9247c8da3acf9c0abc02e3da1e029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the field.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 필드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="343efc2d1a4e7e103ab33f37327bccc82373db5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt; - The &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object that will be returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. Most actions add an attribute to this object using &lt;a href=&quot;functions#setattr&quot;&gt;&lt;code&gt;setattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; - &lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 에 의해 반환되는 객체 &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; . 대부분의 작업은 &lt;a href=&quot;functions#setattr&quot;&gt; &lt;code&gt;setattr()&lt;/code&gt; &lt;/a&gt; 사용하여이 객체에 속성을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="13d66f072667bb55df0611f1d76f920fa1144347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nbytes == product(shape) * itemsize == len(m.tobytes())&lt;/code&gt;. This is the amount of space in bytes that the array would use in a contiguous representation. It is not necessarily equal to &lt;code&gt;len(m)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;nbytes == product(shape) * itemsize == len(m.tobytes())&lt;/code&gt; 입니다. 이것은 배열이 연속 표현에 사용할 바이트 단위의 공간입니다. 반드시 &lt;code&gt;len(m)&lt;/code&gt; 과 같을 필요는 없습니다 :</target>
        </trans-unit>
        <trans-unit id="0fea316f497677c1e973a2f9059b1c1632bed25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;netrc&lt;/code&gt; &amp;mdash; netrc file processing</source>
          <target state="translated">&lt;code&gt;netrc&lt;/code&gt; &amp;mdash; netrc 파일 처리</target>
        </trans-unit>
        <trans-unit id="d642445bc8fed133eac2f2cd6342b6745168e2e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nice_len&lt;/code&gt;: What should be considered a &amp;ldquo;nice length&amp;rdquo; for a match. This should be 273 or less.</source>
          <target state="translated">&lt;code&gt;nice_len&lt;/code&gt; : 경기에서 &quot;좋은 길이&quot;로 간주되는 것. 273 이하 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f9ca6dd3564f4e549639c3a78012db080f7935a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nis&lt;/code&gt; &amp;mdash; Interface to Sun&amp;rsquo;s NIS (Yellow Pages)</source>
          <target state="translated">&lt;code&gt;nis&lt;/code&gt; &amp;mdash; Sun의 NIS에 대한 인터페이스 (노란색 페이지)</target>
        </trans-unit>
        <trans-unit id="dd2765672ef5583ec2ca31e5b581a1492316deac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nntplib&lt;/code&gt; &amp;mdash; NNTP protocol client</source>
          <target state="translated">&lt;code&gt;nntplib&lt;/code&gt; &amp;mdash; NNTP 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="b5e5f2238522f34c4f95a3fc3994aba25e55fbea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is an object of type &lt;code&gt;xml.dom.minidom.Document&lt;/code&gt;, &lt;code&gt;xml.dom.minidom.Element&lt;/code&gt; or &lt;code&gt;xml.dom.minidom.Text&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 는 &lt;code&gt;xml.dom.minidom.Document&lt;/code&gt; , &lt;code&gt;xml.dom.minidom.Element&lt;/code&gt; 또는 &lt;code&gt;xml.dom.minidom.Text&lt;/code&gt; 유형의 오브젝트입니다 .</target>
        </trans-unit>
        <trans-unit id="f59ef9581b68ee8df291163aba4d63e59c637801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodename&lt;/code&gt; - name of machine on network (implementation-defined)</source>
          <target state="translated">&lt;code&gt;nodename&lt;/code&gt; - 네트워크상의 머신 이름 (구현 정의)</target>
        </trans-unit>
        <trans-unit id="f0b91aae740079e93a2c7e5ca2d0ca3487bf6be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt; has a lower priority than non-Boolean operators, so &lt;code&gt;not a == b&lt;/code&gt; is interpreted as &lt;code&gt;not (a == b)&lt;/code&gt;, and &lt;code&gt;a == not b&lt;/code&gt; is a syntax error.</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt; 않은 부울 연산자보다 낮은 우선 순위를 가지므로 &lt;code&gt;not a == b&lt;/code&gt; 로 해석 &lt;code&gt;not (a == b)&lt;/code&gt; , 그리고 &lt;code&gt;a == not b&lt;/code&gt; 구문 오류이다.</target>
        </trans-unit>
        <trans-unit id="8e3d27d1c477ee9484c2f42a4b286c863fc83338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ntpath&lt;/code&gt; for Windows paths</source>
          <target state="translated">&lt;code&gt;ntpath&lt;/code&gt; Windows 경로의 ntpath</target>
        </trans-unit>
        <trans-unit id="9732aa29cbe1ff46efdde086041a34af736b45bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;numbers&lt;/code&gt; &amp;mdash; Numeric abstract base classes</source>
          <target state="translated">&lt;code&gt;numbers&lt;/code&gt; &amp;mdash; 숫자 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="f805394ca01f1d5d4c51232e2ac199ae017da9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3f55be0f1d1f243142b8948a5220c06668cccb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1c41e6be6db1459df3cb09ac7096ce3deb39926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_cafile&lt;/code&gt; - hard coded path to a cafile,</source>
          <target state="translated">&lt;code&gt;openssl_cafile&lt;/code&gt; -cafile에 대한 하드 코딩 된 경로</target>
        </trans-unit>
        <trans-unit id="529ba27bd4d01c7caf9972b9508a28b8cc4f1fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_cafile_env&lt;/code&gt; - OpenSSL&amp;rsquo;s environment key that points to a cafile,</source>
          <target state="translated">&lt;code&gt;openssl_cafile_env&lt;/code&gt; -cafile을 가리키는 OpenSSL의 환경 키</target>
        </trans-unit>
        <trans-unit id="314f603df9f440eaa05c388da786c3dec6b21acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_capath&lt;/code&gt; - hard coded path to a capath directory</source>
          <target state="translated">&lt;code&gt;openssl_capath&lt;/code&gt; -capath 디렉토리에 대한 하드 코딩 된 경로</target>
        </trans-unit>
        <trans-unit id="3e0f3d2cc97824f1f9a4fcf41a428cddad815e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_capath_env&lt;/code&gt; - OpenSSL&amp;rsquo;s environment key that points to a capath,</source>
          <target state="translated">&lt;code&gt;openssl_capath_env&lt;/code&gt; -Capath를 가리키는 OpenSSL의 환경 키</target>
        </trans-unit>
        <trans-unit id="57f8f4f5ec0ba00fa16661a4ea6f531f7d6ec1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; &amp;mdash; Standard operators as functions</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; &amp;mdash; 함수로서 표준 연산자</target>
        </trans-unit>
        <trans-unit id="93420ef3b261f118abcc2669060e1b8f9df4d98c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option_string&lt;/code&gt; - The option string that was used to invoke this action. The &lt;code&gt;option_string&lt;/code&gt; argument is optional, and will be absent if the action is associated with a positional argument.</source>
          <target state="translated">&lt;code&gt;option_string&lt;/code&gt; - 이 조치를 호출하는 데 사용 된 옵션 문자열. &lt;code&gt;option_string&lt;/code&gt; 인수는 선택 사항이며, 작업은 위치 인수와 관련된 경우 결석 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="d2631fd522f41eb8cc9a7d95d957e7aad7059fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optparse&lt;/code&gt; &amp;mdash; Parser for command line options</source>
          <target state="translated">&lt;code&gt;optparse&lt;/code&gt; &amp;mdash; 명령 행 옵션을위한 파서</target>
        </trans-unit>
        <trans-unit id="03bf8017cc200a849a329a43e44196b8a0942e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; methods will be generated. These compare the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type. If &lt;code&gt;order&lt;/code&gt; is true and &lt;code&gt;eq&lt;/code&gt; is false, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; : true (기본값은 &lt;code&gt;False&lt;/code&gt; )이면 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 이들은 클래스를 마치 필드의 튜플 인 것처럼 비교합니다. 비교에서 두 인스턴스는 동일한 유형이어야합니다. 경우 &lt;code&gt;order&lt;/code&gt; 사실이고 &lt;code&gt;eq&lt;/code&gt; 거짓하는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="16b062139eca21107098d2b0e80d92e5a94ec0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; methods will be generated. These compare the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type. If &lt;code&gt;order&lt;/code&gt; is true and &lt;code&gt;eq&lt;/code&gt; is false, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; : true이면 (기본값은 &lt;code&gt;False&lt;/code&gt; ), &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 이들은 클래스가 필드의 튜플 인 것처럼 순서대로 비교합니다. 비교의 두 인스턴스는 동일한 유형이어야합니다. 경우 &lt;code&gt;order&lt;/code&gt; 사실이고 &lt;code&gt;eq&lt;/code&gt; 거짓하는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="20ec86cc2cdd479a21c517065e81fac400b4880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.DirEntry&lt;/code&gt; instances are not intended to be stored in long-lived data structures; if you know the file metadata has changed or if a long time has elapsed since calling &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;, call &lt;code&gt;os.stat(entry.path)&lt;/code&gt; to fetch up-to-date information.</source>
          <target state="translated">&lt;code&gt;os.DirEntry&lt;/code&gt; 인스턴스는 오래 지속되는 데이터 구조로 저장되지 않습니다. 파일 메타 데이터가 변경되었음을 알거나 &lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt; 호출 한 후 오랜 시간이 경과 한 경우 &lt;code&gt;os.stat(entry.path)&lt;/code&gt; 를 호출 하여 최신 정보를 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="f18ff901710ef8ab2bcc00fa31013265b6f4c911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.close(fp.fileno())&lt;/code&gt; closes the file descriptor. When the file object finalizer tries to close the file descriptor again, it fails with the &lt;code&gt;Bad
file descriptor&lt;/code&gt; error. A file descriptor must be closed only once. In the worst case scenario, closing it twice can lead to a crash (see &lt;a href=&quot;https://bugs.python.org/issue18748&quot;&gt;bpo-18748&lt;/a&gt; for an example).</source>
          <target state="translated">&lt;code&gt;os.close(fp.fileno())&lt;/code&gt; 는 파일 설명자를 닫습니다. 파일 개체 종료자가 파일 설명자를 다시 닫으려고하면 &lt;code&gt;Bad file descriptor&lt;/code&gt; 오류 와 함께 실패합니다 . 파일 설명자는 한 번만 닫아야합니다. 최악의 시나리오에서 두 번 닫으면 충돌이 발생할 수 있습니다 ( 예 : &lt;a href=&quot;https://bugs.python.org/issue18748&quot;&gt;bpo-18748&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0c997ef24647a430cabc19b6fa90ef260b392215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.path&lt;/code&gt; &amp;mdash; Common pathname manipulations</source>
          <target state="translated">&lt;code&gt;os.path&lt;/code&gt; &amp;mdash; 일반적인 경로명 조작</target>
        </trans-unit>
        <trans-unit id="d61ce8e607060646a3fdc4b8a2d734bf21860e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os&lt;/code&gt; &amp;mdash; Miscellaneous operating system interfaces</source>
          <target state="translated">&lt;code&gt;os&lt;/code&gt; &amp;mdash; 기타 운영 체제 인터페이스</target>
        </trans-unit>
        <trans-unit id="3205197a03576dbc305ae4ea2b1858ce31be9912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ossaudiodev&lt;/code&gt; &amp;mdash; Access to OSS-compatible audio devices</source>
          <target state="translated">&lt;code&gt;ossaudiodev&lt;/code&gt; &amp;mdash; OSS 호환 오디오 장치에 액세스</target>
        </trans-unit>
        <trans-unit id="d2cef2ebb4a9513318dfaba3baa397b52b9239d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.clear()&lt;/code&gt; leaves it intact,</source>
          <target state="translated">&lt;code&gt;parser.clear()&lt;/code&gt; 는 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="f3811187aeb10d3d2e9016b873855bec6bcad986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.get(section, option, **kwargs)&lt;/code&gt; - the second argument is &lt;strong&gt;not&lt;/strong&gt; a fallback value. Note however that the section-level &lt;code&gt;get()&lt;/code&gt; methods are compatible both with the mapping protocol and the classic configparser API.</source>
          <target state="translated">&lt;code&gt;parser.get(section, option, **kwargs)&lt;/code&gt; -두 번째 인수는 폴백 값 이 &lt;strong&gt;아닙니다&lt;/strong&gt; . 그러나 섹션 레벨 &lt;code&gt;get()&lt;/code&gt; 메소드는 맵핑 프로토콜 및 클래식 구성 기 API와 모두 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="dd12c687cff5269cb3ab355ddb04d990ef221d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.items()&lt;/code&gt; is compatible with the mapping protocol (returns a list of &lt;em&gt;section_name&lt;/em&gt;, &lt;em&gt;section_proxy&lt;/em&gt; pairs including the DEFAULTSECT). However, this method can also be invoked with arguments: &lt;code&gt;parser.items(section, raw,
vars)&lt;/code&gt;. The latter call returns a list of &lt;em&gt;option&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; pairs for a specified &lt;code&gt;section&lt;/code&gt;, with all interpolations expanded (unless &lt;code&gt;raw=True&lt;/code&gt; is provided).</source>
          <target state="translated">&lt;code&gt;parser.items()&lt;/code&gt; 는 매핑 프로토콜과 호환됩니다 ( DEFAULTSECT를 포함한 &lt;em&gt;section_name&lt;/em&gt; , &lt;em&gt;section_proxy&lt;/em&gt; 쌍 의 목록을 반환 함 ). 그러나이 메소드는 &lt;code&gt;parser.items(section, raw, vars)&lt;/code&gt; 인수와 함께 호출 할 수도 있습니다 . 후자의 호출은 모든 &lt;code&gt;section&lt;/code&gt; 확장 된 ( &lt;code&gt;raw=True&lt;/code&gt; 가 제공 되지 않는 한) 지정된 섹션 의 &lt;em&gt;옵션&lt;/em&gt; , &lt;em&gt;값&lt;/em&gt; 쌍 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a9e4fb4ef35ceeae3bb72dd107bc114201cac6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.popitem()&lt;/code&gt; never returns it.</source>
          <target state="translated">&lt;code&gt;parser.popitem()&lt;/code&gt; 은 그것을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="034318fb979885b0efbae3abcbe8b9d6292dda10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; &amp;mdash; Access Python parse trees</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; &amp;mdash; 파이썬 파싱 트리에 접근</target>
        </trans-unit>
        <trans-unit id="2c5b98ada9d0a084fb8c2e87ac749202af1fec0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; - The ArgumentParser object which contains this action.</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; - 이 액션을 포함하는 ArgumentParser 객체</target>
        </trans-unit>
        <trans-unit id="f1e4402c6cf84b075d0646f0045f0db1733842b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser['section']&lt;/code&gt; in particular returns a proxy for the section&amp;rsquo;s data in the parser. This means that the values are not copied but they are taken from the original parser on demand. What&amp;rsquo;s even more important is that when values are changed on a section proxy, they are actually mutated in the original parser.</source>
          <target state="translated">&lt;code&gt;parser['section']&lt;/code&gt; 는 특히 파서의 섹션 데이터에 대한 프록시를 반환합니다. 즉, 값은 복사되지 않지만 요청시 원래 파서에서 가져옵니다. 더욱 중요한 것은 섹션 프록시에서 값이 변경되면 실제로 원래 파서에서 변경된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e472f63f077c1f0b4aca934f7ae82f3fe5bda80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patch.dict(...)&lt;/code&gt;, &lt;code&gt;patch.multiple(...)&lt;/code&gt; and &lt;code&gt;patch.object(...)&lt;/code&gt; are available for alternate use-cases.</source>
          <target state="translated">&lt;code&gt;patch.dict(...)&lt;/code&gt; , &lt;code&gt;patch.multiple(...)&lt;/code&gt; 및 &lt;code&gt;patch.object(...)&lt;/code&gt; 는 대체 사용 사례에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a9e6c40eab0e696a6444f3929ad62c4f2e876e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and an absolute path.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 및 절대 경로 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="80e1a9f4a30491b44c6e297234e8ecc2796f0fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be an absolute path.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 는 절대 경로 여야합니다.</target>
        </trans-unit>
        <trans-unit id="da9e11aed110d46cae088cf774fe7dbdf12850aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f4623f770424a0efeb94b3093a5efd69edd08b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;argv&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;argv&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5040f53a96c303daae50cee048fcc0f4936edd34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;attribute&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e63667c6826688dc320dba12e4a20c4789cb602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;attribute&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ed9c0a31c67e1d1fe42844b0070f2489e668d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fedc48d653347bd51c462980db6092825cc62c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9ff82314edd23c3d1cc743bf4e7dec09ef4de49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3f1626eab8f80343f55b0e03fbb02ddf71c38b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;operation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="112b225c6c973ca71a08cd5c47e2944616f3b1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;times&lt;/code&gt;, &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;times&lt;/code&gt; , &lt;code&gt;ns&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21bae445c126de9fc0cce22c93606ff89c61473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; , &lt;code&gt;gid&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="deb8ccbdf4aca567f247ad06d12d7cac6ed47289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; , &lt;code&gt;user&lt;/code&gt; , &lt;code&gt;group&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43942fdffbe56d1fa42e3a791dafbbf17809b508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathlib&lt;/code&gt; &amp;mdash; Object-oriented filesystem paths</source>
          <target state="translated">&lt;code&gt;pathlib&lt;/code&gt; &amp;mdash; 객체 지향 파일 시스템 경로</target>
        </trans-unit>
        <trans-unit id="5cc9cc2f41cc0a7eefbf8f9413168cd02e8550e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;recursive&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;recursive&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71f0736271b8c4ef0e38832e5c439dc920b598e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pb&lt;/code&gt;: Number of position bits; must be at most 4.</source>
          <target state="translated">&lt;code&gt;pb&lt;/code&gt; : 위치 비트 수; 최대 4 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8ff87ed0af900e518fa1a59c616d64d12c9b916b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdb.py&lt;/code&gt; can also be invoked as a script to debug other scripts. For example:</source>
          <target state="translated">&lt;code&gt;pdb.py&lt;/code&gt; 는 다른 스크립트를 디버그하기위한 스크립트로 호출 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ff56e3f8d9f5d3650cf0e9fc99a0c17d9cdb4adc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdb&lt;/code&gt; &amp;mdash; The Python Debugger</source>
          <target state="translated">&lt;code&gt;pdb&lt;/code&gt; &amp;mdash; 파이썬 디버거</target>
        </trans-unit>
        <trans-unit id="495cc969471948a9bc63856126878fb1135eb5a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pgid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pgid&lt;/code&gt; , &lt;code&gt;sig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5065a1300b8fb1619e1e7b8a065caf54fd823a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pickle&lt;/code&gt; &amp;mdash; Python object serialization</source>
          <target state="translated">&lt;code&gt;pickle&lt;/code&gt; &amp;mdash; 파이썬 객체 직렬화</target>
        </trans-unit>
        <trans-unit id="0ba0daac21482270652049221711ef1b648f6d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pickletools&lt;/code&gt; &amp;mdash; Tools for pickle developers</source>
          <target state="translated">&lt;code&gt;pickletools&lt;/code&gt; &amp;mdash; 피클 개발자를위한 도구</target>
        </trans-unit>
        <trans-unit id="56a604c3896a82b868c61615f2ce640fb5e113a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; , &lt;code&gt;resource&lt;/code&gt; , &lt;code&gt;limits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a7187d3b7bcd8cb73721eb436d668a006107a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; , &lt;code&gt;sig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="415a23b81312764a0296f74ffa3c2b9f3bc35b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipes&lt;/code&gt; &amp;mdash; Interface to shell pipelines</source>
          <target state="translated">&lt;code&gt;pipes&lt;/code&gt; &amp;mdash; 쉘 파이프 라인에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="865f4a0973f03d9d399bbd391e83cb1c77a66056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pkgutil&lt;/code&gt; &amp;mdash; Package extension utility</source>
          <target state="translated">&lt;code&gt;pkgutil&lt;/code&gt; &amp;mdash; 패키지 확장 유틸리티</target>
        </trans-unit>
        <trans-unit id="0d3fba1a26739e4043bb4b3ea34d56406dc87842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platform&lt;/code&gt; &amp;mdash; Access to underlying platform&amp;rsquo;s identifying data</source>
          <target state="translated">&lt;code&gt;platform&lt;/code&gt; &amp;mdash; 기본 플랫폼의 식별 데이터에 액세스</target>
        </trans-unit>
        <trans-unit id="8614b351adffaba8a8b531e837758eab46805aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platform&lt;/code&gt; value</source>
          <target state="translated">&lt;code&gt;platform&lt;/code&gt; 가치</target>
        </trans-unit>
        <trans-unit id="0e26dfb7c8baf05e80d2e76d235b08e6d988c291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plistlib&lt;/code&gt; &amp;mdash; Generate and parse Apple &lt;code&gt;.plist&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;plistlib&lt;/code&gt; &amp;mdash; Apple &lt;code&gt;.plist&lt;/code&gt; 파일 생성 및 구문 분석</target>
        </trans-unit>
        <trans-unit id="4814dee4606e285d7e6db987251d6258829f6c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plistlib&lt;/code&gt; &amp;mdash; Generate and parse Mac OS X &lt;code&gt;.plist&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;plistlib&lt;/code&gt; &amp;mdash; Mac OS X &lt;code&gt;.plist&lt;/code&gt; 파일 생성 및 구문 분석</target>
        </trans-unit>
        <trans-unit id="aa08a6f3fceed8ce16fb349b2887974ccdc4ffe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pointer&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; , &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f596d5bba3d2c33764d1e0dab25e80047d7d4354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popen2.Popen3&lt;/code&gt; and &lt;code&gt;popen2.Popen4&lt;/code&gt; basically work as &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt;, except that:</source>
          <target state="translated">&lt;code&gt;popen2.Popen3&lt;/code&gt; 및 &lt;code&gt;popen2.Popen4&lt;/code&gt; 는 기본적으로 &lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt; 으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="69cebd4e70be8503928dc2f74d5a5b2c24679146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;poplib&lt;/code&gt; &amp;mdash; POP3 protocol client</source>
          <target state="translated">&lt;code&gt;poplib&lt;/code&gt; &amp;mdash; POP3 프로토콜 클라이언트</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
