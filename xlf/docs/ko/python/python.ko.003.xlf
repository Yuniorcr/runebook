<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="84688598f264c02c2a8fea2ec73fc98dba8094cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preset&lt;/code&gt;: A compression preset to use as a source of default values for options that are not specified explicitly.</source>
          <target state="translated">&lt;code&gt;preset&lt;/code&gt; : 명시 적으로 지정되지 않은 옵션의 기본값 소스로 사용할 압축 사전 설정.</target>
        </trans-unit>
        <trans-unit id="e949ce1a23b1ae7d35043df6ab88facab290cde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print()&lt;/code&gt; can also be used, but is not a debugger command &amp;mdash; this executes the Python &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;print()&lt;/code&gt; 도 사용할 수 있지만 디버거 명령은 아닙니다. 이렇게하면 Python &lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt; 함수가 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0cc38d5e4cc01b483c6120e14f6f505306f136a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;printf&lt;/code&gt;-style Bytes Formatting</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; 스타일 바이트 포맷팅</target>
        </trans-unit>
        <trans-unit id="71e44ec7183788ca440893aac3d61c16a0d1c060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;printf&lt;/code&gt;-style String Formatting</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; 스타일 문자열 형식</target>
        </trans-unit>
        <trans-unit id="2992ba7cefc799ecc20e8618831fabc95f5d7ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88384071d62640b44592a99849f9d8299362fdbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process_id&lt;/code&gt;, &lt;code&gt;desired_access&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;process_id&lt;/code&gt; , &lt;code&gt;desired_access&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe5ef86b171dd0a29fdb3c92a70b90e7a169b1cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prompt&lt;/code&gt; &amp;ndash; a String to be used after virtual environment is activated (defaults to &lt;code&gt;None&lt;/code&gt; which means directory name of the environment would be used).</source>
          <target state="translated">&lt;code&gt;prompt&lt;/code&gt; &amp;ndash; 가상 환경이 활성화 된 후 사용될 문자열 (기본값은 &lt;code&gt;None&lt;/code&gt; 이며 환경의 디렉토리 이름이 사용됨).</target>
        </trans-unit>
        <trans-unit id="17e72665189b3e8760aca43e8294e47f6471d175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prompt&lt;/code&gt; &amp;ndash; a String to be used after virtual environment is activated (defaults to &lt;code&gt;None&lt;/code&gt; which means directory name of the environment would be used). If the special string &lt;code&gt;&quot;.&quot;&lt;/code&gt; is provided, the basename of the current directory is used as the prompt.</source>
          <target state="translated">&lt;code&gt;prompt&lt;/code&gt; &amp;ndash; 가상 환경이 활성화 된 후 사용할 문자열입니다 (기본값은 &lt;code&gt;None&lt;/code&gt; 으로 환경의 디렉토리 이름이 사용됨을 의미 함). 특수 문자열 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 제공되면 현재 디렉토리의 기본 이름이 프롬프트로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="db0a648051799d62d0e8474b8f0d26e80f811935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propagate&lt;/code&gt; (optional). The propagation setting of the logger.</source>
          <target state="translated">&lt;code&gt;propagate&lt;/code&gt; (선택 사항). 로거의 전파 설정</target>
        </trans-unit>
        <trans-unit id="ae822d505f33caa2744411801f8fdf413818ee65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pty&lt;/code&gt; &amp;mdash; Pseudo-terminal utilities</source>
          <target state="translated">&lt;code&gt;pty&lt;/code&gt; &amp;mdash; 의사 터미널 유틸리티</target>
        </trans-unit>
        <trans-unit id="7d5b46dfb63a4b9a5f96af8642ba041a6f83c59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pwd&lt;/code&gt; &amp;mdash; The password database</source>
          <target state="translated">&lt;code&gt;pwd&lt;/code&gt; &amp;mdash; 비밀번호 데이터베이스</target>
        </trans-unit>
        <trans-unit id="a0c74ba470e4722f18eb0b2fdc87be6305f304ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;py_compile&lt;/code&gt; &amp;mdash; Compile Python source files</source>
          <target state="translated">&lt;code&gt;py_compile&lt;/code&gt; &amp;mdash; 파이썬 소스 파일 컴파일</target>
        </trans-unit>
        <trans-unit id="c5369208136176e89086db06f10a2fd8b8d18519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pyclbr&lt;/code&gt; &amp;mdash; Python class browser support</source>
          <target state="translated">&lt;code&gt;pyclbr&lt;/code&gt; &amp;mdash; 파이썬 클래스 브라우저 지원</target>
        </trans-unit>
        <trans-unit id="39c6f81aaa21e0e3b4bbe09aab35697d69be3fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pyclbr&lt;/code&gt; &amp;mdash; Python module browser support</source>
          <target state="translated">&lt;code&gt;pyclbr&lt;/code&gt; &amp;mdash; Python 모듈 브라우저 지원</target>
        </trans-unit>
        <trans-unit id="e9f7ece301253ea81d4bc3d60dd5acaeba3d000d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pydoc&lt;/code&gt; &amp;mdash; Documentation generator and online help system</source>
          <target state="translated">&lt;code&gt;pydoc&lt;/code&gt; &amp;mdash; 문서 생성기 및 온라인 도움말 시스템</target>
        </trans-unit>
        <trans-unit id="1b047f9eab69f0e2bdfc6bab32db4985303fe2b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qsort()&lt;/code&gt; must be called with a pointer to the data to sort, the number of items in the data array, the size of one item, and a pointer to the comparison function, the callback. The callback will then be called with two pointers to items, and it must return a negative integer if the first item is smaller than the second, a zero if they are equal, and a positive integer otherwise.</source>
          <target state="translated">&lt;code&gt;qsort()&lt;/code&gt; 정렬 할 데이터에 대한 포인터, 데이터 배열의 항목 수, 한 항목의 크기 및 비교 함수에 대한 포인터 인 콜백을 사용하여 qsort () 를 호출해야합니다. 콜백은 아이템에 대한 두 개의 포인터로 호출되며, 첫 번째 아이템이 두 번째보다 작 으면 음의 정수를 반환하고, 같으면 0을, 그렇지 않으면 양의 정수를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="dc6d504dae37289ec8d668b32d4aecd686120dc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queue&lt;/code&gt; &amp;mdash; A synchronized queue class</source>
          <target state="translated">&lt;code&gt;queue&lt;/code&gt; &amp;mdash; 동기화 된 큐 클래스</target>
        </trans-unit>
        <trans-unit id="51702e08830aa491f4d9013e44d344a06153419d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quopri&lt;/code&gt; &amp;mdash; Encode and decode MIME quoted-printable data</source>
          <target state="translated">&lt;code&gt;quopri&lt;/code&gt; &amp;mdash; MIME 인용 인쇄 가능 데이터를 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="7a1cd788b172678903fda74c6d6f849b84c91f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r'\.\pipe{PipeName}'&lt;/code&gt;. To use &lt;a href=&quot;#multiprocessing.connection.Client&quot;&gt;&lt;code&gt;Client()&lt;/code&gt;&lt;/a&gt; to connect to a named pipe on a remote computer called &lt;em&gt;ServerName&lt;/em&gt; one should use an address of the form &lt;code&gt;r'\&lt;em&gt;ServerName&lt;/em&gt;\pipe{PipeName}'&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;r'\.\pipe{PipeName}'&lt;/code&gt; 입니다. 사용하려면 &lt;a href=&quot;#multiprocessing.connection.Client&quot;&gt; &lt;code&gt;Client()&lt;/code&gt; &lt;/a&gt; 원격 컴퓨터라고 불리는 명명 된 파이프에 연결 &lt;em&gt;서버 이름의&lt;/em&gt; 형식의 주소를 사용해야 하나의 &lt;code&gt;r'\&lt;em&gt;ServerName&lt;/em&gt;\pipe{PipeName}'&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="2e97461f6bb48d26fb325cba8b9e772be5f6e838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;random&lt;/code&gt; &amp;mdash; Generate pseudo-random numbers</source>
          <target state="translated">&lt;code&gt;random&lt;/code&gt; &amp;mdash; 의사 난수 생성</target>
        </trans-unit>
        <trans-unit id="4b2cccd59ff6645127260dbb7a2865511fb33c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ratio()&lt;/code&gt; returns a float in [0, 1], measuring the similarity of the sequences. As a rule of thumb, a &lt;code&gt;ratio()&lt;/code&gt; value over 0.6 means the sequences are close matches:</source>
          <target state="translated">&lt;code&gt;ratio()&lt;/code&gt; 는 시퀀스의 유사성을 측정하여 [0, 1]의 부동 소수점을 반환합니다. 경험상, 0.6 이상의 &lt;code&gt;ratio()&lt;/code&gt; 값은 시퀀스가 ​​일치한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="df16280357559aad20a426127e011c9cf600fa05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;re&lt;/code&gt; &amp;mdash; Regular expression operations</source>
          <target state="translated">&lt;code&gt;re&lt;/code&gt; &amp;mdash; 정규 표현식 작업</target>
        </trans-unit>
        <trans-unit id="3f2dcd0d3084cf2653ea24d947931bb3ab305a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readinto&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;readinto&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af578bdb94e021771804112316d4432c619de35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readline&lt;/code&gt; &amp;mdash; GNU readline interface</source>
          <target state="translated">&lt;code&gt;readline&lt;/code&gt; &amp;mdash; GNU readline 인터페이스</target>
        </trans-unit>
        <trans-unit id="da12b8bfe76e77657354718029655beeeaaf8887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;register_function()&lt;/code&gt; can also be used as a decorator. The previous server example can register functions in a decorator way:</source>
          <target state="translated">&lt;code&gt;register_function()&lt;/code&gt; 은 데코레이터로도 사용할 수 있습니다. 이전 서버 예제는 데코레이터 방식으로 함수를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ae7eac25002eb86d941f9f2c0e132982858ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&lt;/code&gt; - operating system release</source>
          <target state="translated">&lt;code&gt;release&lt;/code&gt; -운영 체제 릴리스</target>
        </trans-unit>
        <trans-unit id="0c6f29aa6e6d09b3c42b63d1ddc8928ad2e88db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove()&lt;/code&gt; raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;x&lt;/em&gt; is not found in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;remove()&lt;/code&gt; &lt;em&gt;s&lt;/em&gt; 에서 &lt;em&gt;x&lt;/em&gt; 를 찾을 수 없으면 remove () 가 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e6a58ba5a155f2bd0c98366ed6be0d759785ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method will be generated. The generated repr string will have the class name and the name and repr of each field, in the order they are defined in the class. Fields that are marked as being excluded from the repr are not included. For example: &lt;code&gt;InventoryItem(name='widget', unit_price=3.0, quantity_on_hand=10)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 생성 된 repr 문자열은 클래스 이름과 클래스에 정의 된 순서대로 각 필드의 이름과 repr을 갖습니다. repr에서 제외 된 것으로 표시된 필드는 포함되지 않습니다. 예를 들어 &lt;code&gt;InventoryItem(name='widget', unit_price=3.0, quantity_on_hand=10)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d212e41be66cf90e0dd1a5ee7705e1b5e6ee016b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method will be generated. The generated repr string will have the class name and the name and repr of each field, in the order they are defined in the class. Fields that are marked as being excluded from the repr are not included. For example: &lt;code&gt;InventoryItem(name='widget', unit_price=3.0, quantity_on_hand=10)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; : true (기본값)이면 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다. 생성 된 repr 문자열에는 클래스에 정의 된 순서대로 각 필드의 클래스 이름과 이름 및 repr이 있습니다. repr에서 제외 된 것으로 표시된 필드는 포함되지 않습니다. 예 : &lt;code&gt;InventoryItem(name='widget', unit_price=3.0, quantity_on_hand=10)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2091342b777ae18dae8f6d9d11bbff7a9b70686b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), this field is included in the string returned by the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; : true (기본값)이면이 필드는 생성 된 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 한 문자열에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="99d8b910cb2f75063980312f334e27919343e3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), this field is included in the string returned by the generated &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; : true (기본값)이면이 필드는 생성 된 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 된 문자열에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="91cd3d7ef825f5904224059869b308a41fef172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reprlib&lt;/code&gt; &amp;mdash; Alternate &lt;code&gt;repr()&lt;/code&gt; implementation</source>
          <target state="translated">&lt;code&gt;reprlib&lt;/code&gt; &amp;mdash; 대체 &lt;code&gt;repr()&lt;/code&gt; 구현</target>
        </trans-unit>
        <trans-unit id="fd5a2a527d4427b67e2f7a98c70ad8ac9e74e41c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource&lt;/code&gt; &amp;mdash; Resource usage information</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; &amp;mdash; 자원 사용 정보</target>
        </trans-unit>
        <trans-unit id="2f18ca5d1112cd4bca6640e4d327e049ffb8d6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource&lt;/code&gt;, &lt;code&gt;limits&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; , &lt;code&gt;limits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc64711bfafbea943aa03695e7128e9aeb58ed3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result&lt;/code&gt; is a list of strings, so let&amp;rsquo;s pretty-print it:</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; 는 문자열 목록이므로 예쁘게 인쇄하겠습니다.</target>
        </trans-unit>
        <trans-unit id="006f3e80008b649bee0fe4341d0a40eacbfd5c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryFactor&lt;/code&gt; (multiplier, defaulting to 2.0).</source>
          <target state="translated">&lt;code&gt;retryFactor&lt;/code&gt; (승수, 기본값은 2.0).</target>
        </trans-unit>
        <trans-unit id="e3247f19604dfce9acbf2e9ab56350d29e9a9426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryMax&lt;/code&gt; (maximum delay, defaulting to 30.0 seconds).</source>
          <target state="translated">&lt;code&gt;retryMax&lt;/code&gt; (최대 지연, 기본값은 30.0 초)</target>
        </trans-unit>
        <trans-unit id="b76e7521b1ccbd6a196858f1582316ada21b4883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryStart&lt;/code&gt; (initial delay, defaulting to 1.0 seconds).</source>
          <target state="translated">&lt;code&gt;retryStart&lt;/code&gt; (초기 지연, 기본값은 1.0 초).</target>
        </trans-unit>
        <trans-unit id="ec1464a27d9d81b9ed50d1c7d05ea27478fe1d9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returns&lt;/code&gt; is the return annotation.</source>
          <target state="translated">&lt;code&gt;returns&lt;/code&gt; 은 반환 주석입니다.</target>
        </trans-unit>
        <trans-unit id="c018e95cdd97eeb377ef33772875425c5c00bfc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rlcompleter&lt;/code&gt; &amp;mdash; Completion function for GNU readline</source>
          <target state="translated">&lt;code&gt;rlcompleter&lt;/code&gt; &amp;mdash; GNU readline을위한 완성 함수</target>
        </trans-unit>
        <trans-unit id="79533c56f190dcc1974e43e8b4b81eb5f015190b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runpy&lt;/code&gt; &amp;mdash; Locating and executing Python modules</source>
          <target state="translated">&lt;code&gt;runpy&lt;/code&gt; &amp;mdash; Python 모듈 찾기 및 실행</target>
        </trans-unit>
        <trans-unit id="5b8c5bbf0ca27d85883a789b708792bb61500d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s * n&lt;/code&gt; or &lt;code&gt;n * s&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;s * n&lt;/code&gt; 또는 &lt;code&gt;n * s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad804d337bb039defdcff62e3a26f3842a124d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s.extend(t)&lt;/code&gt; or &lt;code&gt;s += t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;s.extend(t)&lt;/code&gt; 또는 &lt;code&gt;s += t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f70dd17eb07067852f34c45e61ed374123e19490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scanf()&lt;/code&gt; Token</source>
          <target state="translated">&lt;code&gt;scanf()&lt;/code&gt; 토큰</target>
        </trans-unit>
        <trans-unit id="aec44f6f5a05d7a8c9d2e0604741d247542c1cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sched&lt;/code&gt; &amp;mdash; Event scheduler</source>
          <target state="translated">&lt;code&gt;sched&lt;/code&gt; &amp;mdash; 이벤트 스케줄러</target>
        </trans-unit>
        <trans-unit id="1cb7ea14011599238611bda3e858fde7142e93c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secrets&lt;/code&gt; &amp;mdash; Generate secure random numbers for managing secrets</source>
          <target state="translated">&lt;code&gt;secrets&lt;/code&gt; &amp;mdash; 비밀 관리를위한 안전한 난수 생성</target>
        </trans-unit>
        <trans-unit id="eaa492374376c569f0abb5579abe0e3c36717872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; &amp;mdash; Waiting for I/O completion</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; &amp;mdash; I / O 완료 대기</target>
        </trans-unit>
        <trans-unit id="1fd291b95ecb3ad221ffb054030d3deed57391a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selectors&lt;/code&gt; &amp;mdash; High-level I/O multiplexing</source>
          <target state="translated">&lt;code&gt;selectors&lt;/code&gt; &amp;mdash; 고급 I / O 멀티플렉싱</target>
        </trans-unit>
        <trans-unit id="8b1807cde150af7f313990ba23249bfc08468ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;address&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93d98b120d39d836f25e09fcd2be25c708a8343a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;buffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ddf833f41441419e8d8c471a9334050f99bb2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d1785eac67262d2ac2a2e705f49091c60dbf61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4eb945a1deb3b92fea3fe905dbc732f0e378d7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;family&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c347cc6c0a2008c99a6c24b3e85474f39b2f543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c453adb1b31ecc2c4c6dd8bfdec228f0e29e76ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;line&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e64165c183ffcb6156f49de7a5b65567e1b86ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;pattern&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92e02d37f196b6fffc82a7c0f63ff8ec5c80eba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;send&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d097b1a5b455f77f48af0f8edc03c95840cf3fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_message&lt;/code&gt; serializes &lt;em&gt;msg&lt;/em&gt; using &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;\r\n&lt;/code&gt; as the &lt;em&gt;linesep&lt;/em&gt;, and calls &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; to transmit the resulting message. Regardless of the values of &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt;, &lt;code&gt;send_message&lt;/code&gt; does not transmit any &lt;em&gt;Bcc&lt;/em&gt; or &lt;em&gt;Resent-Bcc&lt;/em&gt; headers that may appear in &lt;em&gt;msg&lt;/em&gt;. If any of the addresses in &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; contain non-ASCII characters and the server does not advertise &lt;code&gt;SMTPUTF8&lt;/code&gt; support, an &lt;code&gt;SMTPNotSupported&lt;/code&gt; error is raised. Otherwise the &lt;code&gt;Message&lt;/code&gt; is serialized with a clone of its &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt;&lt;code&gt;utf8&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;SMTPUTF8&lt;/code&gt; and &lt;code&gt;BODY=8BITMIME&lt;/code&gt; are added to &lt;em&gt;mail_options&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;send_message&lt;/code&gt; 직렬화 &lt;em&gt;MSG&lt;/em&gt; 사용 &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; 을&lt;/a&gt; 가진 &lt;code&gt;\r\n&lt;/code&gt; 은 AS &lt;em&gt;linesep&lt;/em&gt; 및 통화 &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt; 생성 된 메시지를 송신한다. 상관없이 값 &lt;em&gt;from_addr&lt;/em&gt; 및 &lt;em&gt;to_addrs&lt;/em&gt; , &lt;code&gt;send_message&lt;/code&gt; 은 모든 송신하지 않는다 &lt;em&gt;숨은&lt;/em&gt; 또는 &lt;em&gt;재전송-숨은&lt;/em&gt; 에서 나타나는 헤더 &lt;em&gt;MSG를&lt;/em&gt; . &lt;em&gt;from_addr&lt;/em&gt; 및 &lt;em&gt;to_addrs&lt;/em&gt; 의 주소 중 &lt;em&gt;하나에&lt;/em&gt; ASCII가 아닌 문자가 포함되어 있고 서버가 &lt;code&gt;SMTPUTF8&lt;/code&gt; 지원을 알리지 않는 경우 &lt;code&gt;SMTPNotSupported&lt;/code&gt; 오류가 발생합니다. 그렇지 않으면 &lt;code&gt;Message&lt;/code&gt; 자사의 복제와 직렬화 &lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt; &lt;code&gt;utf8&lt;/code&gt; &lt;/a&gt; 에 속성 세트 &lt;code&gt;True&lt;/code&gt; , 그리고 &lt;code&gt;SMTPUTF8&lt;/code&gt; 및 &lt;code&gt;BODY=8BITMIME&lt;/code&gt; 이 추가됩니다 &lt;em&gt;mail_options&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b01adabb98ab6e6557481ba0fcedd10379209f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;servicename&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;servicename&lt;/code&gt; , &lt;code&gt;protocolname&lt;/code&gt; 이름</target>
        </trans-unit>
        <trans-unit id="8b597ee73967a125a627ac6dacb28011341b1ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setfmt()&lt;/code&gt; to set the output format</source>
          <target state="translated">&lt;code&gt;setfmt()&lt;/code&gt; 출력 형식을 설정하는 setfmt ()</target>
        </trans-unit>
        <trans-unit id="6a0251a1550f66d8de088e79d8d3a3eb581f0559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setrlimit&lt;/code&gt; may also raise &lt;a href=&quot;#resource.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; if the underlying system call fails.</source>
          <target state="translated">&lt;code&gt;setrlimit&lt;/code&gt; 기본 시스템 호출이 실패하면 setrlimit에서 &lt;a href=&quot;#resource.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt; 발생할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f94673bf727750d63a84db62e93544ed360a8965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shelve&lt;/code&gt; &amp;mdash; Python object persistence</source>
          <target state="translated">&lt;code&gt;shelve&lt;/code&gt; &amp;mdash; 파이썬 객체 지속성</target>
        </trans-unit>
        <trans-unit id="c2ce6d8fd3d872857eb6e86032648c5ee58be6ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shlex&lt;/code&gt; &amp;mdash; Simple lexical analysis</source>
          <target state="translated">&lt;code&gt;shlex&lt;/code&gt; &amp;mdash; 간단한 어휘 분석</target>
        </trans-unit>
        <trans-unit id="151fb674bc6413b9c67df6844cbc24eda5ae353c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutil&lt;/code&gt; &amp;mdash; High-level file operations</source>
          <target state="translated">&lt;code&gt;shutil&lt;/code&gt; &amp;mdash; 고급 파일 작업</target>
        </trans-unit>
        <trans-unit id="f4a280dcd08694b82ab84e47a9a0934abf58cfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;side_effect&lt;/code&gt; allows you to perform side effects, including raising an exception when a mock is called:</source>
          <target state="translated">&lt;code&gt;side_effect&lt;/code&gt; 를 사용하면 모의 호출시 예외 발생을 포함하여 부작용을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f02edb01df33e15b5fe90258796e8eb7da5a425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signal&lt;/code&gt; &amp;mdash; Set handlers for asynchronous events</source>
          <target state="translated">&lt;code&gt;signal&lt;/code&gt; &amp;mdash; 비동기 이벤트에 대한 핸들러 설정</target>
        </trans-unit>
        <trans-unit id="172b4b677840cc8324ddae64b29b5b76066afbe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;site&lt;/code&gt; &amp;mdash; Site-specific configuration hook</source>
          <target state="translated">&lt;code&gt;site&lt;/code&gt; &amp;mdash; 사이트 별 구성 후크</target>
        </trans-unit>
        <trans-unit id="50da3bd0d7cd936201da3ee1196ff88eaa8801e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sleep()&lt;/code&gt; always suspends the current task, allowing other tasks to run.</source>
          <target state="translated">&lt;code&gt;sleep()&lt;/code&gt; 항상 현재 작업을 일시 중단하여 다른 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f83ea6edded6b0abc0f5b7fc232bd9c927e2347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smtpd&lt;/code&gt; &amp;mdash; SMTP Server</source>
          <target state="translated">&lt;code&gt;smtpd&lt;/code&gt; &amp;mdash; SMTP 서버</target>
        </trans-unit>
        <trans-unit id="cc48b4dd1ea2ec1c6ae23477749e21895572dfc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smtplib&lt;/code&gt; &amp;mdash; SMTP protocol client</source>
          <target state="translated">&lt;code&gt;smtplib&lt;/code&gt; &amp;mdash; SMTP 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="b37100c35e8f549bf50a3cf5330493c69be054bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sndhdr&lt;/code&gt; &amp;mdash; Determine type of sound file</source>
          <target state="translated">&lt;code&gt;sndhdr&lt;/code&gt; &amp;mdash; 사운드 파일 유형 결정</target>
        </trans-unit>
        <trans-unit id="cec146811c821f63acf1da44e3f8d486082df1cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sock.setblocking(False)&lt;/code&gt; is equivalent to &lt;code&gt;sock.settimeout(0.0)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sock.setblocking(False)&lt;/code&gt; 은 &lt;code&gt;sock.settimeout(0.0)&lt;/code&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="92edd9727ca5ac687843dacba284aca5c3baf231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sock.setblocking(True)&lt;/code&gt; is equivalent to &lt;code&gt;sock.settimeout(None)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sock.setblocking(True)&lt;/code&gt; 는 &lt;code&gt;sock.settimeout(None)&lt;/code&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b5525b984a70b59b6ada91b59e14205dffe470fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket&lt;/code&gt; &amp;mdash; Low-level networking interface</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; &amp;mdash; 저수준 네트워킹 인터페이스</target>
        </trans-unit>
        <trans-unit id="09b651b889e572369f3d2d248961fe215674bfe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; waits until all child processes complete, except if &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; attribute is false.</source>
          <target state="translated">&lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; 는 &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; 속성이 false 인 경우를 제외하고 모든 하위 프로세스가 완료 될 때까지 대기 합니다.</target>
        </trans-unit>
        <trans-unit id="920a306dd45393bbd73fe8c0bd08bf66d019f4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; waits until all non-daemon threads complete, except if &lt;code&gt;socketserver.ThreadingMixIn.block_on_close&lt;/code&gt; attribute is false. Use daemonic threads by setting &lt;code&gt;ThreadingMixIn.daemon_threads&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; to not wait until threads complete.</source>
          <target state="translated">&lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; 는 &lt;code&gt;socketserver.ThreadingMixIn.block_on_close&lt;/code&gt; 속성이 false 인 경우를 제외하고 모든 비 데몬 스레드가 완료 될 때까지 대기 합니다. 스레드가 완료 될 때까지 기다리지 않도록 &lt;code&gt;ThreadingMixIn.daemon_threads&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하여 데몬 스레드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a9af15e6054f314e31383230355f61986d34db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver&lt;/code&gt; &amp;mdash; A framework for network servers</source>
          <target state="translated">&lt;code&gt;socketserver&lt;/code&gt; &amp;mdash; 네트워크 서버를위한 프레임 워크</target>
        </trans-unit>
        <trans-unit id="2be688dc7afa956f8f396584b4474b0ee8662503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91036538e22e62f5b8a8fe11772e669caa84c685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;speed()&lt;/code&gt; to set the sample rate</source>
          <target state="translated">&lt;code&gt;speed()&lt;/code&gt; 샘플 속도를 설정하는 speed ()</target>
        </trans-unit>
        <trans-unit id="e6a1db0b4b46be0a676ead2ad859807fe7aee90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spwd&lt;/code&gt; &amp;mdash; The shadow password database</source>
          <target state="translated">&lt;code&gt;spwd&lt;/code&gt; &amp;mdash; 섀도 비밀번호 데이터베이스</target>
        </trans-unit>
        <trans-unit id="b65090dd6bb75c92d5a31a55659232f62d2861d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sqlite3&lt;/code&gt; &amp;mdash; DB-API 2.0 interface for SQLite databases</source>
          <target state="translated">&lt;code&gt;sqlite3&lt;/code&gt; &amp;mdash; SQLite 데이터베이스 용 DB-API 2.0 인터페이스</target>
        </trans-unit>
        <trans-unit id="6d581bfa5c8815cc4c238c75f67a110bc2b039a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; , &lt;code&gt;dst&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f40990a3cde84c283750247554dd27ce525f459d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; , &lt;code&gt;dst&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6f878c8e0e5d1026b974c78907e5c343966db45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;, &lt;code&gt;src_dir_fd&lt;/code&gt;, &lt;code&gt;dst_dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; , &lt;code&gt;dst&lt;/code&gt; , &lt;code&gt;src_dir_fd&lt;/code&gt; , &lt;code&gt;dst_dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fcad9d63d30f01a247444435ca8b64a89003a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src_path&lt;/code&gt;, &lt;code&gt;dst_path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;src_path&lt;/code&gt; , &lt;code&gt;dst_path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98953aca80f1174202b1fe50332aee9591fffb27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssize_t&lt;/code&gt; or &lt;code&gt;Py_ssize_t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssize_t&lt;/code&gt; 또는 &lt;code&gt;Py_ssize_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2922a228d693e2c415a8df44e950725842755383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl&lt;/code&gt; &amp;mdash; TLS/SSL wrapper for socket objects</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; &amp;mdash; 소켓 객체를위한 TLS / SSL 래퍼</target>
        </trans-unit>
        <trans-unit id="634076403f09921b49cb5c1c113eac7c4a08bb6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;starargs&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt; are each a single node, as in a function call. starargs will be expanded to join the list of base classes, and kwargs will be passed to the metaclass.</source>
          <target state="translated">&lt;code&gt;starargs&lt;/code&gt; 및 &lt;code&gt;kwargs&lt;/code&gt; 는 함수 호출에서와 같이 각각 단일 노드입니다. starargs는 기본 클래스 목록에 포함되도록 확장되고 kwargs는 메타 클래스로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="361170780ce765f59cb9182fd25d9f4181835989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start-ns&lt;/code&gt;: a tuple &lt;code&gt;(prefix, uri)&lt;/code&gt; naming the declared namespace mapping.</source>
          <target state="translated">&lt;code&gt;start-ns&lt;/code&gt; : 선언 된 네임 스페이스 매핑을 명명 하는 튜플 &lt;code&gt;(prefix, uri)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e33f8ef8398f20abab55a757d1f437cefad9460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;: the current Element.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; : 현재 요소.</target>
        </trans-unit>
        <trans-unit id="974725e5d86bc49f9754d01b90715e1a699da699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stat&lt;/code&gt; &amp;mdash; Interpreting &lt;code&gt;stat()&lt;/code&gt; results</source>
          <target state="translated">&lt;code&gt;stat&lt;/code&gt; &amp;mdash; &lt;code&gt;stat()&lt;/code&gt; 결과 해석</target>
        </trans-unit>
        <trans-unit id="6e843e5230b69b5582c46cd9dace466f38710a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics&lt;/code&gt; &amp;mdash; Mathematical statistics functions</source>
          <target state="translated">&lt;code&gt;statistics&lt;/code&gt; &amp;mdash; 수학 통계 함수</target>
        </trans-unit>
        <trans-unit id="74c19198b446070ae8686a02adcbd42d77756abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdin&lt;/code&gt; is used for all interactive input (including calls to &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;);</source>
          <target state="translated">&lt;code&gt;stdin&lt;/code&gt; 은 모든 대화식 입력에 사용됩니다 ( &lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt; 호출 포함 ).</target>
        </trans-unit>
        <trans-unit id="8bd302e0f91d3b6580f1b28e48c17cd36803e9b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdin=PIPE&lt;/code&gt; and &lt;code&gt;stdout=PIPE&lt;/code&gt; must be specified.</source>
          <target state="translated">&lt;code&gt;stdin=PIPE&lt;/code&gt; 및 &lt;code&gt;stdout=PIPE&lt;/code&gt; 를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="f07b200ff205b6fb0533ace6133694d6db0f59a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; is used for the output of &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; statements and for the prompts of &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; 은 &lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; 문의 출력 과 &lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt; 프롬프트에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="481508fe03560f442cf5607952408f987f9dfe7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; is used for the output of &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; statements and for the prompts of &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; 은 &lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;표현식&lt;/a&gt; 문의 출력 과 &lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt; 프롬프트에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6c510cb3e510919491211d00bf3e89c72169814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str(uuid)&lt;/code&gt; returns a string in the form &lt;code&gt;12345678-1234-5678-1234-567812345678&lt;/code&gt; where the 32 hexadecimal digits represent the UUID.</source>
          <target state="translated">&lt;code&gt;str(uuid)&lt;/code&gt; 는 &lt;code&gt;12345678-1234-5678-1234-567812345678&lt;/code&gt; 형식의 문자열을 반환합니다. 여기서 32 개의 16 진수는 UUID를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8134b79974d079ef840ea023bad9c7378a1de426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is the built-in string &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-class&quot;&gt;class&lt;/a&gt;. For general information about strings, see &lt;a href=&quot;stdtypes#textseq&quot;&gt;Text Sequence Type &amp;mdash; str&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 은 내장 문자열 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-class&quot;&gt;클래스&lt;/a&gt; 입니다. 문자열에 대한 일반적인 정보는 &lt;a href=&quot;stdtypes#textseq&quot;&gt;텍스트 시퀀스 유형 &amp;mdash; str을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2827cb76970bd23ebd90820081a6b49d2fd89625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is the built-in string &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-class&quot;&gt;class&lt;/a&gt;. For general information about strings, see &lt;a href=&quot;stdtypes#textseq&quot;&gt;Text Sequence Type &amp;mdash; str&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 은 내장 문자열 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-class&quot;&gt;클래스&lt;/a&gt; 입니다. 문자열에 대한 일반적인 정보는 &lt;a href=&quot;stdtypes#textseq&quot;&gt;텍스트 시퀀스 유형 &amp;mdash; str을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d90e3b513f8c6f8b3eff5f69d228c750985a090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; or &lt;code&gt;bytes&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;bytes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00e61393c0a849cc24befd885274100cd68a000c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;strptime()&lt;/code&gt; Behavior</source>
          <target state="translated">&lt;code&gt;strftime()&lt;/code&gt; 및 &lt;code&gt;strptime()&lt;/code&gt; 동작</target>
        </trans-unit>
        <trans-unit id="f41148cc760e2bbde8641dcbad7719d194826247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;strptime()&lt;/code&gt; Format Codes</source>
          <target state="translated">&lt;code&gt;strftime()&lt;/code&gt; 및 &lt;code&gt;strptime()&lt;/code&gt; 형식 코드</target>
        </trans-unit>
        <trans-unit id="ffcf422e329027c95d0a24889be1ae98547ef95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict_ns_domain&lt;/code&gt; is a collection of flags. Its value is constructed by or-ing together (for example, &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt; means both flags are set).</source>
          <target state="translated">&lt;code&gt;strict_ns_domain&lt;/code&gt; 은 플래그 모음입니다. 그 값은 함께 또는 연결하여 구성됩니다 (예 : &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt; 은 두 플래그가 설정됨을 의미 함).</target>
        </trans-unit>
        <trans-unit id="8516383530b42d9f130a335f85429235e8500206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; &amp;mdash; Common string operations</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &amp;mdash; 일반적인 문자열 연산</target>
        </trans-unit>
        <trans-unit id="468f7e4fa422e45b31c0c69acf4fb1e0a76721bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stringprep&lt;/code&gt; &amp;mdash; Internet String Preparation</source>
          <target state="translated">&lt;code&gt;stringprep&lt;/code&gt; &amp;mdash; 인터넷 문자열 준비</target>
        </trans-unit>
        <trans-unit id="d563994f74d8c8395a50581a9c46c9f98fae0fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strptime()&lt;/code&gt; only accepts certain values for &lt;code&gt;%Z&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;strptime()&lt;/code&gt; 은 &lt;code&gt;%Z&lt;/code&gt; 대한 특정 값만 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="5d97b65419a342c9e5ceb53803bf176104c24bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; &amp;mdash; Interpret bytes as packed binary data</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; &amp;mdash; 바이트를 팩형 이진 데이터로 해석</target>
        </trans-unit>
        <trans-unit id="ac6ac18b250c887d5f70490f170ac7dcc94d447f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subprocess&lt;/code&gt; &amp;mdash; Subprocess management</source>
          <target state="translated">&lt;code&gt;subprocess&lt;/code&gt; &amp;mdash; 하위 프로세스 관리</target>
        </trans-unit>
        <trans-unit id="04811ef0e28d7560145ca3308a6f97b948d52230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtype&lt;/code&gt; &amp;ndash; Sub-MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;subtype&lt;/code&gt; &amp;ndash; &lt;em&gt;텍스트&lt;/em&gt; 가 아닌 부분 의 하위 MIME 유형</target>
        </trans-unit>
        <trans-unit id="a31ec4301229b4b18a789cac1e6cdcb22016a867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sunau&lt;/code&gt; &amp;mdash; Read and write Sun AU files</source>
          <target state="translated">&lt;code&gt;sunau&lt;/code&gt; &amp;mdash; Sun AU 파일 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="174330a2e4be00f471fcb871f521a293bb9bec5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol&lt;/code&gt; &amp;mdash; Constants used with Python parse trees</source>
          <target state="translated">&lt;code&gt;symbol&lt;/code&gt; &amp;mdash; 파이썬 구문 분석 트리와 함께 사용되는 상수</target>
        </trans-unit>
        <trans-unit id="d7a4e47e8c0a295a11473b632fde8f83de2d1c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlinks&lt;/code&gt; &amp;ndash; a Boolean value indicating whether to attempt to symlink the Python binary rather than copying.</source>
          <target state="translated">&lt;code&gt;symlinks&lt;/code&gt; &amp;ndash; 복사하지 않고 Python 바이너리를 심볼릭 링크할지 여부를 나타내는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="6c35bc140a5254bb1838f5c24b5706b6d5e33596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symtable&lt;/code&gt; &amp;mdash; Access to the compiler&amp;rsquo;s symbol tables</source>
          <target state="translated">&lt;code&gt;symtable&lt;/code&gt; &amp;mdash; 컴파일러의 심볼 테이블에 액세스</target>
        </trans-unit>
        <trans-unit id="c1cf909c8cf73dd703fe714b8565769abb239424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.displayhook&lt;/code&gt; is called on the result of evaluating an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; entered in an interactive Python session. The display of these values can be customized by assigning another one-argument function to &lt;code&gt;sys.displayhook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sys.displayhook&lt;/code&gt; 은 대화식 Python 세션에 입력 된 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;표현식&lt;/a&gt; 을 평가 한 결과에 호출됩니다 . 이 값의 표시는 다른 하나의 인수 함수를 &lt;code&gt;sys.displayhook&lt;/code&gt; 에 지정하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1eac2dc7c1a1e63f515c442271d37cf1d94b508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.displayhook&lt;/code&gt; is called on the result of evaluating an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; entered in an interactive Python session. The display of these values can be customized by assigning another one-argument function to &lt;code&gt;sys.displayhook&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sys.displayhook&lt;/code&gt; 은 대화 형 Python 세션에 입력 된 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;표현식&lt;/a&gt; 을 평가 한 결과에 대해 호출됩니다 . 이러한 값의 표시는 다른 하나의 인수 함수를 &lt;code&gt;sys.displayhook&lt;/code&gt; 에 할당하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02e27835f07a9727a0480e264dd20c4995641256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys&lt;/code&gt; &amp;mdash; System-specific parameters and functions</source>
          <target state="translated">&lt;code&gt;sys&lt;/code&gt; &amp;mdash; 시스템 별 매개 변수 및 기능</target>
        </trans-unit>
        <trans-unit id="87202b0b7e52b7a1ef5c8cb16b75901d961c383a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sysconfig&lt;/code&gt; &amp;mdash; Provide access to Python&amp;rsquo;s configuration information</source>
          <target state="translated">&lt;code&gt;sysconfig&lt;/code&gt; &amp;mdash; Python의 구성 정보에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="ce35409267d178a3355163ca5eb42fe42331980d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syslog&lt;/code&gt; &amp;mdash; Unix syslog library routines</source>
          <target state="translated">&lt;code&gt;syslog&lt;/code&gt; &amp;mdash; 유닉스 syslog 라이브러리 루틴</target>
        </trans-unit>
        <trans-unit id="f4a8f909a1e8676971f96b6114303a2a0addf2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sysname&lt;/code&gt; - operating system name</source>
          <target state="translated">&lt;code&gt;sysname&lt;/code&gt; - 운영 체제 이름</target>
        </trans-unit>
        <trans-unit id="b23476cd87cd5f5fdb8b69cb81bc5f88dc6eaad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;system_site_packages&lt;/code&gt; &amp;ndash; a Boolean value indicating that the system Python site-packages should be available to the environment (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;system_site_packages&lt;/code&gt; &amp;ndash; 시스템 Python 사이트 패키지를 환경에서 사용할 수 있음을 나타내는 부울 값 (기본값은 &lt;code&gt;False&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="2a1fb94f13fd49b02cccd9ef0a6b7000dd498cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t.tzinfo.utcoffset(None)&lt;/code&gt; does not return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;t.tzinfo.utcoffset(None)&lt;/code&gt; 은 &lt;code&gt;None&lt;/code&gt; 을 반환하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1c3f3019c710b11fb5a98abc7fe4c8d8fcc76f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t.tzinfo&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t.tzinfo&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 이 아닙니다</target>
        </trans-unit>
        <trans-unit id="b6345e4b39537de9b9491609f62e728db48f273c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t1 = t2 // i&lt;/code&gt; or &lt;code&gt;t1 = t2 // t3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t1 = t2 // i&lt;/code&gt; 또는 &lt;code&gt;t1 = t2 // t3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fa78c9795b3e44f848a953569796eab0e041a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t_origin&lt;/code&gt; should be a non-parameterized generic class, such as &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; or &lt;code&gt;dict&lt;/code&gt;. &lt;code&gt;t_args&lt;/code&gt; should be a &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; (possibly of length 1) of types which parameterize &lt;code&gt;t_origin&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;t_origin&lt;/code&gt; 은 &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;tuple&lt;/code&gt; 또는 &lt;code&gt;dict&lt;/code&gt; 와 같이 매개 변수화되지 않은 제네릭 클래스 여야합니다 . &lt;code&gt;t_args&lt;/code&gt; 는 t_origin 을 매개 &lt;code&gt;t_origin&lt;/code&gt; 하는 유형 의 &lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt; (길이 1 일 수 있음) 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2283b4da2c4f0cd7bea3b9aee5bcd7f3f2ac3857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tabnanny&lt;/code&gt; &amp;mdash; Detection of ambiguous indentation</source>
          <target state="translated">&lt;code&gt;tabnanny&lt;/code&gt; &amp;mdash; 모호한 들여 쓰기 감지</target>
        </trans-unit>
        <trans-unit id="c5c69cb35bdd260b35b286f94819dfa7342ef2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tarfile&lt;/code&gt; &amp;mdash; Read and write tar archive files</source>
          <target state="translated">&lt;code&gt;tarfile&lt;/code&gt; &amp;mdash; tar 아카이브 파일을 읽고 씁니다.</target>
        </trans-unit>
        <trans-unit id="80e396a840f7b6d3325a1578f53a1d4058db111b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tee&lt;/code&gt; iterators are not threadsafe. A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; may be raised when using simultaneously iterators returned by the same &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt; call, even if the original &lt;em&gt;iterable&lt;/em&gt; is threadsafe.</source>
          <target state="translated">&lt;code&gt;tee&lt;/code&gt; 반복자는 스레드 안전하지 않습니다. &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 에가&lt;/a&gt; 동시에 동일한 의해 반환 반복자 사용하는 경우 발생 될 수 &lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt; 호출 원하더라도, &lt;em&gt;반복 가능한는&lt;/em&gt; 쓰레드이다.</target>
        </trans-unit>
        <trans-unit id="8862aba2b396a54619bbba227e4a4a8ed9e9d574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;telnetlib&lt;/code&gt; &amp;mdash; Telnet client</source>
          <target state="translated">&lt;code&gt;telnetlib&lt;/code&gt; &amp;mdash; 텔넷 클라이언트</target>
        </trans-unit>
        <trans-unit id="010beb5cfbcdc9c986d89bba15fa725ff0db45de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tempfile&lt;/code&gt; &amp;mdash; Generate temporary files and directories</source>
          <target state="translated">&lt;code&gt;tempfile&lt;/code&gt; &amp;mdash; 임시 파일 및 디렉토리 생성</target>
        </trans-unit>
        <trans-unit id="fb96181c55667085b343e1ea6e72d62654c487a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;termios&lt;/code&gt; &amp;mdash; POSIX style tty control</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; &amp;mdash; POSIX 스타일 tty 제어</target>
        </trans-unit>
        <trans-unit id="4656781596bf68c017f6d28bb951f5e516aba1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support.bytecode_helper&lt;/code&gt; &amp;mdash; Support tools for testing correct bytecode generation</source>
          <target state="translated">&lt;code&gt;test.support.bytecode_helper&lt;/code&gt; &amp;mdash; 올바른 바이트 코드 생성 테스트를위한 지원 도구</target>
        </trans-unit>
        <trans-unit id="9fb8f4580606f9d0abcf8de00f0f9fc588ddd9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support.script_helper&lt;/code&gt; &amp;mdash; Utilities for the Python execution tests</source>
          <target state="translated">&lt;code&gt;test.support.script_helper&lt;/code&gt; &amp;mdash; 파이썬 실행 테스트를위한 유틸리티</target>
        </trans-unit>
        <trans-unit id="41c1858fb8b17b9df090ad4f4d726052794a2810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support.socket_helper&lt;/code&gt; &amp;mdash; Utilities for socket tests</source>
          <target state="translated">&lt;code&gt;test.support.socket_helper&lt;/code&gt; &amp;mdash; 소켓 테스트를위한 유틸리티</target>
        </trans-unit>
        <trans-unit id="a02105dbefb91b12347c7f7e0e9576054b1ff8d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support&lt;/code&gt; &amp;mdash; Utilities for the Python test suite</source>
          <target state="translated">&lt;code&gt;test.support&lt;/code&gt; &amp;mdash; Python 테스트 스위트를위한 유틸리티</target>
        </trans-unit>
        <trans-unit id="e7dc34e898a66a367d69219eeb6a17f7a79e2075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; &amp;mdash; Regression tests package for Python</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; &amp;mdash; 파이썬을위한 회귀 테스트 패키지</target>
        </trans-unit>
        <trans-unit id="971b58467402fc405dd4493ed1097443be7464bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;textwrap&lt;/code&gt; &amp;mdash; Text wrapping and filling</source>
          <target state="translated">&lt;code&gt;textwrap&lt;/code&gt; &amp;mdash; 텍스트 줄 바꿈 및 채우기</target>
        </trans-unit>
        <trans-unit id="3ec29ca203de616a4dcec764ae200618e8af9f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread_id&lt;/code&gt;, &lt;code&gt;signalnum&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;thread_id&lt;/code&gt; , &lt;code&gt;signalnum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69b4563879b9dfb7c5a36f7d339258bb5b6f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;threading&lt;/code&gt; &amp;mdash; Thread-based parallelism</source>
          <target state="translated">&lt;code&gt;threading&lt;/code&gt; &amp;mdash; 스레드 기반 병렬 처리</target>
        </trans-unit>
        <trans-unit id="c7f41dac984548e51e64e7eb92a17ad0dbd69ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time&lt;/code&gt; &amp;mdash; Time access and conversions</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; &amp;mdash; 시간 액세스 및 변환</target>
        </trans-unit>
        <trans-unit id="63ceca89b1412460475bbaccaeaed97e19383f3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time&lt;/code&gt; has the same format as &lt;code&gt;offset&lt;/code&gt; except that no leading sign (&amp;lsquo;-&amp;lsquo; or &amp;lsquo;+&amp;rsquo;) is allowed. The default, if time is not given, is 02:00:00.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 은 선행 부호 ( '-'또는 '+')가 허용되지 않는다는 점을 제외하고 &lt;code&gt;offset&lt;/code&gt; 과 형식이 동일합니다 . 시간이 제공되지 않은 경우 기본값은 02:00:00입니다.</target>
        </trans-unit>
        <trans-unit id="e9f248606b93d9daaf9ef5d77392f9e8cc210f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timedelta.seconds&lt;/code&gt; and &lt;code&gt;timedelta.microseconds&lt;/code&gt; are ignored.</source>
          <target state="translated">&lt;code&gt;timedelta.seconds&lt;/code&gt; 및 &lt;code&gt;timedelta.microseconds&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f77fef27d62361a1799b12a11af1cffaf5136185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeit&lt;/code&gt; &amp;mdash; Measure execution time of small code snippets</source>
          <target state="translated">&lt;code&gt;timeit&lt;/code&gt; &amp;mdash; 작은 코드 스 니펫의 실행 시간 측정</target>
        </trans-unit>
        <trans-unit id="17deb14ae1f8065b7709e9bb298bd8d13c249804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.colorchooser&lt;/code&gt; &amp;mdash; Color choosing dialog</source>
          <target state="translated">&lt;code&gt;tkinter.colorchooser&lt;/code&gt; &amp;mdash; 색상 선택 대화 상자</target>
        </trans-unit>
        <trans-unit id="7192c512fe9ab61b2729ded070b463952ea0b592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.dnd&lt;/code&gt; &amp;mdash; Drag and drop support</source>
          <target state="translated">&lt;code&gt;tkinter.dnd&lt;/code&gt; &amp;mdash; 드래그 앤 드롭 지원</target>
        </trans-unit>
        <trans-unit id="43e8f9166df2482e27e2bba1137543fdfa9dc4c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.font&lt;/code&gt; &amp;mdash; Tkinter font wrapper</source>
          <target state="translated">&lt;code&gt;tkinter.font&lt;/code&gt; &amp;mdash; Tkinter 글꼴 래퍼</target>
        </trans-unit>
        <trans-unit id="f243464ebbb09261261bec07a10611a733e4a2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.messagebox&lt;/code&gt; &amp;mdash; Tkinter message prompts</source>
          <target state="translated">&lt;code&gt;tkinter.messagebox&lt;/code&gt; &amp;mdash; Tkinter 메시지 프롬프트</target>
        </trans-unit>
        <trans-unit id="4f394c7fd346c82e534d81fe65755be0d8ae95c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.scrolledtext&lt;/code&gt; &amp;mdash; Scrolled Text Widget</source>
          <target state="translated">&lt;code&gt;tkinter.scrolledtext&lt;/code&gt; &amp;mdash; 스크롤 텍스트 위젯</target>
        </trans-unit>
        <trans-unit id="40177f8c65499ca67a4fdbc1b150f99571bf0664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.tix&lt;/code&gt; &amp;mdash; Extension widgets for Tk</source>
          <target state="translated">&lt;code&gt;tkinter.tix&lt;/code&gt; &amp;mdash; Tk 용 확장 위젯</target>
        </trans-unit>
        <trans-unit id="6cf2edf3c1b7d1f572ab5cc1ae92b07b5e8fa9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.ttk&lt;/code&gt; &amp;mdash; Tk themed widgets</source>
          <target state="translated">&lt;code&gt;tkinter.ttk&lt;/code&gt; &amp;mdash; Tk 테마 위젯</target>
        </trans-unit>
        <trans-unit id="be1e1b4deee53e66410400c4be0dfce8ad89f5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter/__init__.py&lt;/code&gt; is a last resort for most, but can be a good place to go when nothing else makes sense.</source>
          <target state="translated">&lt;code&gt;tkinter/__init__.py&lt;/code&gt; 는 대부분의 최후의 수단이지만, 다른 의미가없는 경우 갈 수있는 좋은 장소가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b34adfc1245fa3d6fa240b31227af084736237bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter&lt;/code&gt; &amp;mdash; Python interface to Tcl/Tk</source>
          <target state="translated">&lt;code&gt;tkinter&lt;/code&gt; &amp;mdash; Tcl / Tk에 대한 파이썬 인터페이스</target>
        </trans-unit>
        <trans-unit id="ce584e7e5518c7c04a001d7f50269546d98aa456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt; &amp;mdash; Constants used with Python parse trees</source>
          <target state="translated">&lt;code&gt;token&lt;/code&gt; &amp;mdash; 파이썬 구문 분석 트리와 함께 사용되는 상수</target>
        </trans-unit>
        <trans-unit id="b3a86574087e288656f07a8eb05044a8c8f5b291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokenize&lt;/code&gt; &amp;mdash; Tokenizer for Python source</source>
          <target state="translated">&lt;code&gt;tokenize&lt;/code&gt; &amp;mdash; Python 소스 용 토큰 화</target>
        </trans-unit>
        <trans-unit id="595bf6fb94354ae782e1f4d7447d52dea9bec349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;follow_symlinks&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topdown&lt;/code&gt; , &lt;code&gt;onerror&lt;/code&gt; , &lt;code&gt;follow_symlinks&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e1bc9b1711e7960bec9b4257623eb418982a232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;followlinks&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topdown&lt;/code&gt; , &lt;code&gt;onerror&lt;/code&gt; , &lt;code&gt;followlinks&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47a64f24583d65d8d0e3ccbe237de017de21bcaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trace&lt;/code&gt; &amp;mdash; Trace or track Python statement execution</source>
          <target state="translated">&lt;code&gt;trace&lt;/code&gt; &amp;mdash; 파이썬 명령문 실행을 추적 또는 추적</target>
        </trans-unit>
        <trans-unit id="492c5be9b59cd56932c46e8e3fcb612e023b9138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traceback&lt;/code&gt; &amp;mdash; Print or retrieve a stack traceback</source>
          <target state="translated">&lt;code&gt;traceback&lt;/code&gt; &amp;mdash; 스택 역 추적 인쇄 또는 검색</target>
        </trans-unit>
        <trans-unit id="fab4db9d3fc90622d8714a9e44eb9cf826c8d693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracemalloc&lt;/code&gt; &amp;mdash; Trace memory allocations</source>
          <target state="translated">&lt;code&gt;tracemalloc&lt;/code&gt; &amp;mdash; 추적 메모리 할당</target>
        </trans-unit>
        <trans-unit id="9b5aeae2a9e93ad501043de4ab0b3d5b866d2bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracer()&lt;/code&gt;, delay, &lt;code&gt;update()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tracer()&lt;/code&gt; , 지연, &lt;code&gt;update()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="460b26a0d74573f7e8bc7ae06fd44a06ab2b17c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt; blocks. All attributes are list of nodes to execute, except for &lt;code&gt;handlers&lt;/code&gt;, which is a list of &lt;a href=&quot;#ast.ExceptHandler&quot;&gt;&lt;code&gt;ExceptHandler&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 블록을 시도하십시오 . &lt;a href=&quot;#ast.ExceptHandler&quot;&gt; &lt;code&gt;ExceptHandler&lt;/code&gt; &lt;/a&gt; 노드 목록 인 &lt;code&gt;handlers&lt;/code&gt; 를 제외하고 모든 속성은 실행할 노드 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ea49e785d6a336c11b1fa2189bad52c20cb476f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttk.Widget&lt;/code&gt; defines standard options and methods supported by Tk themed widgets and is not supposed to be directly instantiated.</source>
          <target state="translated">&lt;code&gt;ttk.Widget&lt;/code&gt; 은 Tk 테마 위젯이 지원하는 표준 옵션 및 메소드를 정의하며 직접 인스턴스화해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d51e2d4e1c6bae18c9108a20adcbc39cf3492016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; &amp;mdash; Terminal control functions</source>
          <target state="translated">&lt;code&gt;tty&lt;/code&gt; &amp;mdash; 터미널 제어 기능</target>
        </trans-unit>
        <trans-unit id="b5dae09b14ae63ee6156d92e509fbd05831a9daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;turtle&lt;/code&gt; &amp;mdash; Turtle graphics</source>
          <target state="translated">&lt;code&gt;turtle&lt;/code&gt; &amp;mdash; 거북이 그래픽</target>
        </trans-unit>
        <trans-unit id="1702ad1194f9a303a14743290f1b4d06f2c61445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; &amp;ndash; Full MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; &amp;ndash; 비 &lt;em&gt;텍스트&lt;/em&gt; 부분 의 전체 MIME 유형</target>
        </trans-unit>
        <trans-unit id="d1feeb041c7da35209005a4b872bd325dff6c711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: The type of the field.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; : 필드의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="eb2c13256732a4b1778c6c446e41950c37e7017e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type=&lt;/code&gt; can take any callable that takes a single string argument and returns the converted value:</source>
          <target state="translated">&lt;code&gt;type=&lt;/code&gt; 은 단일 문자열 인수를 사용하고 변환 된 값을 반환하는 호출 가능 항목을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccd54da8e914a8d9c9173caff2cee08e8af74689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_comment&lt;/code&gt; is an optional string with the type annotation as a comment</source>
          <target state="translated">&lt;code&gt;type_comment&lt;/code&gt; 는 주석으로 유형 주석이있는 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e126e050776f32129a2f31a8abe16f051a4c303c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_comment&lt;/code&gt; is an optional string with the type annotation as a comment.</source>
          <target state="translated">&lt;code&gt;type_comment&lt;/code&gt; 는 주석으로 유형 주석이있는 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5da1ad2b47535c4a96d2bbfbc727dcb3b2963ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typecode&lt;/code&gt;, &lt;code&gt;initializer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;typecode&lt;/code&gt; , &lt;code&gt;initializer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5474069c0c72ded04275a9b4fd85ba290212a692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt; &amp;mdash; Dynamic type creation and names for built-in types</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; &amp;mdash; 내장 유형의 동적 유형 작성 및 이름</target>
        </trans-unit>
        <trans-unit id="1d96241e1045e6627fdb62324dff599590ed994f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typing&lt;/code&gt; &amp;mdash; Support for type hints</source>
          <target state="translated">&lt;code&gt;typing&lt;/code&gt; &amp;mdash; 유형 힌트 지원</target>
        </trans-unit>
        <trans-unit id="a27b55f58278fbb3df36227e8541eeb26111115b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uncollectable&lt;/code&gt; is the total number of objects which were found to be uncollectable (and were therefore moved to the &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt; list) inside this generation.</source>
          <target state="translated">&lt;code&gt;uncollectable&lt;/code&gt; 은 이 세대 내 에서 수집 불가능하고 &lt;a href=&quot;#gc.garbage&quot;&gt; &lt;code&gt;garbage&lt;/code&gt; &lt;/a&gt; 목록으로 이동 된 것으로 확인 된 총 오브젝트 수입니다 .</target>
        </trans-unit>
        <trans-unit id="3aa21141acb2419cbfe53889a0078c7cd79304b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unicodedata&lt;/code&gt; &amp;mdash; Unicode Database</source>
          <target state="translated">&lt;code&gt;unicodedata&lt;/code&gt; &amp;mdash; 유니 코드 데이터베이스</target>
        </trans-unit>
        <trans-unit id="f7466b6bc52eb96c8f6c6b4d7a411dc2866a7d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; getting started</source>
          <target state="translated">&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; 시작하기</target>
        </trans-unit>
        <trans-unit id="44da8b2dc06242a039f923b7e1ef1e8dfe8d8260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; mock object library</source>
          <target state="translated">&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; 모의 객체 라이브러리</target>
        </trans-unit>
        <trans-unit id="8c367943278bd7e60592e7477c771f7059f860c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest&lt;/code&gt; &amp;mdash; Unit testing framework</source>
          <target state="translated">&lt;code&gt;unittest&lt;/code&gt; &amp;mdash; 단위 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="76f8cfb9b738411665582642ec6607f5844218d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_hash&lt;/code&gt;: If &lt;code&gt;False&lt;/code&gt; (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method is generated according to how &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are set.</source>
          <target state="translated">&lt;code&gt;unsafe_hash&lt;/code&gt; : &lt;code&gt;False&lt;/code&gt; (기본값) 인 경우 &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;frozen&lt;/code&gt; 설정 방법에 따라 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8a24ed699f29291b85afd33989cc0f84fa5a9d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_hash&lt;/code&gt;: If &lt;code&gt;False&lt;/code&gt; (the default), a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method is generated according to how &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are set.</source>
          <target state="translated">&lt;code&gt;unsafe_hash&lt;/code&gt; : &lt;code&gt;False&lt;/code&gt; (기본값)이면 &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;frozen&lt;/code&gt; 이 설정 되는 방식에 따라 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt; 메서드가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="84a5562d4c698add05bd9e459e2d7c1e8abf2c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsigned __int64&lt;/code&gt; or &lt;code&gt;unsigned long long&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsigned __int64&lt;/code&gt; 또는 &lt;code&gt;unsigned long long&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebdad96e0d04906041c67d314640942a5132173f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade&lt;/code&gt; &amp;ndash; a Boolean value which, if true, will upgrade an existing environment with the running Python - for use when that Python has been upgraded in-place (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;upgrade&lt;/code&gt; &amp;ndash; 부울 값으로, true 인 경우 실행중인 Python으로 기존 환경을 업그레이드합니다. Python이 현재 위치에서 업그레이드 될 때 사용됩니다 (기본값은 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a28574f6be2306fc9c95021c712721723ed243b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade_deps&lt;/code&gt; &amp;ndash; Update the base venv modules to the latest on PyPI</source>
          <target state="translated">&lt;code&gt;upgrade_deps&lt;/code&gt; &amp;ndash; 기본 venv 모듈을 최신 PyPI로 업데이트</target>
        </trans-unit>
        <trans-unit id="13cd748d86fa9b5ba4be0823ea7910bf28dd8512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.error&lt;/code&gt; &amp;mdash; Exception classes raised by urllib.request</source>
          <target state="translated">&lt;code&gt;urllib.error&lt;/code&gt; &amp;mdash; urllib.request에 의해 발생한 예외 클래스</target>
        </trans-unit>
        <trans-unit id="1d9b610460a53b18406a638a61773e8d3ab29ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.parse&lt;/code&gt; &amp;mdash; Parse URLs into components</source>
          <target state="translated">&lt;code&gt;urllib.parse&lt;/code&gt; &amp;mdash; URL을 구성 요소로 구문 분석</target>
        </trans-unit>
        <trans-unit id="f4b399b53ad2e20e230e70d66a2ca485bf5e6be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.request&lt;/code&gt; &amp;mdash; Extensible library for opening URLs</source>
          <target state="translated">&lt;code&gt;urllib.request&lt;/code&gt; &amp;mdash; URL을 열기위한 확장 가능한 라이브러리</target>
        </trans-unit>
        <trans-unit id="39f78301531be582a0b488349da0001152df6845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.response&lt;/code&gt; &amp;mdash; Response classes used by urllib</source>
          <target state="translated">&lt;code&gt;urllib.response&lt;/code&gt; &amp;mdash; urllib에서 사용하는 응답 클래스</target>
        </trans-unit>
        <trans-unit id="3cd631b9295157cf8c4c3b36e8afe1b70e5993ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.robotparser&lt;/code&gt; &amp;mdash; Parser for robots.txt</source>
          <target state="translated">&lt;code&gt;urllib.robotparser&lt;/code&gt; &amp;mdash; robots.txt 용 파서</target>
        </trans-unit>
        <trans-unit id="13ebd980b9a685f4a2c9f614ceccb725221f231b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib&lt;/code&gt; &amp;mdash; URL handling modules</source>
          <target state="translated">&lt;code&gt;urllib&lt;/code&gt; &amp;mdash; URL 처리 모듈</target>
        </trans-unit>
        <trans-unit id="7b538ee60646c26a40922d7f6e649bec109deab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib&lt;/code&gt; is a package that collects several modules for working with URLs:</source>
          <target state="translated">&lt;code&gt;urllib&lt;/code&gt; 는 URL 작업을위한 여러 모듈을 수집하는 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="f612661f450859be8af7f867cae6378025c7a8c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; - user time</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; -사용자 시간</target>
        </trans-unit>
        <trans-unit id="6b3b4723706c378c4dc52a044e4d7c15e4ffe7b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utcoffset()&lt;/code&gt; is transformed into a string of the form &lt;code&gt;&amp;plusmn;HHMM[SS[.ffffff]]&lt;/code&gt;, where &lt;code&gt;HH&lt;/code&gt; is a 2-digit string giving the number of UTC offset hours, &lt;code&gt;MM&lt;/code&gt; is a 2-digit string giving the number of UTC offset minutes, &lt;code&gt;SS&lt;/code&gt; is a 2-digit string giving the number of UTC offset seconds and &lt;code&gt;ffffff&lt;/code&gt; is a 6-digit string giving the number of UTC offset microseconds. The &lt;code&gt;ffffff&lt;/code&gt; part is omitted when the offset is a whole number of seconds and both the &lt;code&gt;ffffff&lt;/code&gt; and the &lt;code&gt;SS&lt;/code&gt; part is omitted when the offset is a whole number of minutes. For example, if &lt;code&gt;utcoffset()&lt;/code&gt; returns &lt;code&gt;timedelta(hours=-3, minutes=-30)&lt;/code&gt;, &lt;code&gt;%z&lt;/code&gt; is replaced with the string &lt;code&gt;'-0330'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;utcoffset()&lt;/code&gt; 은 &lt;code&gt;&amp;plusmn;HHMM[SS[.ffffff]]&lt;/code&gt; 형식의 문자열로 변환됩니다. 여기서 &lt;code&gt;HH&lt;/code&gt; 는 UTC 오프셋 시간 수를 제공하는 2 자리 문자열이고 &lt;code&gt;MM&lt;/code&gt; 은 UTC 오프셋 수를 제공하는 2 자리 문자열입니다. 분, &lt;code&gt;SS&lt;/code&gt; 는 UTC 오프셋 초 수를 제공하는 2 자리 문자열이고 &lt;code&gt;ffffff&lt;/code&gt; 는 UTC 오프셋 마이크로 초 수를 제공하는 6 자리 문자열입니다. &lt;code&gt;ffffff&lt;/code&gt; 초 정보의 전체 수를 오프 B 부분은 생략하고, 양 &lt;code&gt;ffffff&lt;/code&gt; 및 &lt;code&gt;SS&lt;/code&gt; 의 분의 정수를 오프 B 부분은 생략한다. 예를 들어 &lt;code&gt;utcoffset()&lt;/code&gt; 이 &lt;code&gt;timedelta(hours=-3, minutes=-30)&lt;/code&gt; 반환하는 경우, &lt;code&gt;%z&lt;/code&gt; 문자열로 대체 &lt;code&gt;'-0330'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d7c1f2a5f3df2e05d21da90a02a4d0c8dadb646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uu&lt;/code&gt; &amp;mdash; Encode and decode uuencode files</source>
          <target state="translated">&lt;code&gt;uu&lt;/code&gt; &amp;mdash; uuencode 파일을 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="33cfdfc758d03f084c5d8966eccba13b068e7736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uuid&lt;/code&gt; &amp;mdash; UUID objects according to &lt;strong&gt;RFC 4122&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;uuid&lt;/code&gt; &amp;mdash; &lt;strong&gt;RFC 4122&lt;/strong&gt; 에 따른 UUID 객체&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e23377b87c008919686c2d52ff49834996856c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is any expression node (such as a literal, a variable, or a function call).</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 는 모든 표현식 노드 (예 : 리터럴, 변수 또는 함수 호출)입니다.</target>
        </trans-unit>
        <trans-unit id="c68bec8eb060802496093aa7c9a049129544fed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;values&lt;/code&gt; - The associated command-line arguments, with any type conversions applied. Type conversions are specified with the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; - 모든 유형 변환이 적용된 관련 명령 줄 인수. 유형 변환은 &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; 키워드 인수를 사용하여 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="59c96154edbf0f681c53340b28899d42be114087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vararg&lt;/code&gt; and &lt;code&gt;kwarg&lt;/code&gt; are single &lt;a href=&quot;#ast.arg&quot;&gt;&lt;code&gt;arg&lt;/code&gt;&lt;/a&gt; nodes, referring to the &lt;code&gt;*args, **kwargs&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;code&gt;vararg&lt;/code&gt; 및 &lt;code&gt;kwarg&lt;/code&gt; 는 &lt;code&gt;*args, **kwargs&lt;/code&gt; 매개 변수를 참조하는 단일 &lt;a href=&quot;#ast.arg&quot;&gt; &lt;code&gt;arg&lt;/code&gt; &lt;/a&gt; 노드 입니다.</target>
        </trans-unit>
        <trans-unit id="474c8eb674d502fa8fa0f4ade3b68adc728680a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;venv&lt;/code&gt; &amp;mdash; Creation of virtual environments</source>
          <target state="translated">&lt;code&gt;venv&lt;/code&gt; &amp;mdash; 가상 환경 생성</target>
        </trans-unit>
        <trans-unit id="b4c8df304d06723365fc6bca305fbdfe774775e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; - operating system version</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; -운영 체제 버전</target>
        </trans-unit>
        <trans-unit id="6e8a17baff6b3cc73a05991bf63be60fd1f32558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait()&lt;/code&gt; schedules coroutines as Tasks automatically and later returns those implicitly created Task objects in &lt;code&gt;(done, pending)&lt;/code&gt; sets. Therefore the following code won&amp;rsquo;t work as expected:</source>
          <target state="translated">&lt;code&gt;wait()&lt;/code&gt; 코 루틴을 Tasks로 자동 예약하고 나중에 암시 적으로 작성된 Task 객체를 &lt;code&gt;(done, pending)&lt;/code&gt; 세트로 반환 합니다. 따라서 다음 코드는 예상대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8ce3d5f42b061a8c2e12dcbc73c005b300e1886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; can be used to convert the exit status into an exit code.</source>
          <target state="translated">&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt; 는 종료 상태를 종료 코드로 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7589c49ede8adab6cc68e24e3da434dd39dae64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;walk&lt;/code&gt; iterates over the subparts of any part where &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;, even though &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; may return &lt;code&gt;False&lt;/code&gt;. We can see this in our example by making use of the &lt;code&gt;_structure&lt;/code&gt; debug helper function:</source>
          <target state="translated">&lt;code&gt;walk&lt;/code&gt; 은 &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 를 반환 하더라도 &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 를 반환 하는 모든 부분의 하위 부분을 반복 합니다 . 예제에서 &lt;code&gt;_structure&lt;/code&gt; 디버그 도우미 함수를 사용하여이를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4bcc3059123c057bc3c32e8bb84a8d7d44505d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;walk&lt;/code&gt; iterates over the subparts of any part where &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;, even though &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; may return &lt;code&gt;False&lt;/code&gt;. We can see this in our example by making use of the &lt;code&gt;_structure&lt;/code&gt; debug helper function:</source>
          <target state="translated">&lt;code&gt;walk&lt;/code&gt; 은 &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 를 반환 하더라도 &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 를 반환 하는 모든 부분의 하위 부분을 반복 합니다 . 예제에서 &lt;code&gt;_structure&lt;/code&gt; 디버그 도우미 함수를 사용하여이를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68bd4453b0591b9a21eb565ee941d685432f0848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn&lt;/code&gt; or &lt;code&gt;warning&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;warn&lt;/code&gt; 또는 &lt;code&gt;warning&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="749d7cd07b3f23d268ebcc559dd2bdde872f53ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnings&lt;/code&gt; &amp;mdash; Warning control</source>
          <target state="translated">&lt;code&gt;warnings&lt;/code&gt; &amp;mdash; 경고 제어</target>
        </trans-unit>
        <trans-unit id="d039c2249756e2b54440fbffd7baf644711324a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wave&lt;/code&gt; &amp;mdash; Read and write WAV files</source>
          <target state="translated">&lt;code&gt;wave&lt;/code&gt; &amp;mdash; WAV 파일 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="b632bbf871e525d9358bab662a5638ba079dfcc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wchar_t *&lt;/code&gt; (NUL terminated)</source>
          <target state="translated">&lt;code&gt;wchar_t *&lt;/code&gt; (NUL 종료)</target>
        </trans-unit>
        <trans-unit id="d18794f2b432c54d807f1dc2c2c3c53ac3249f0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weakref&lt;/code&gt; &amp;mdash; Weak references</source>
          <target state="translated">&lt;code&gt;weakref&lt;/code&gt; &amp;mdash; 약한 참조</target>
        </trans-unit>
        <trans-unit id="d36f4f4704c5297c5e3d862ff31396424970696a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;webbrowser&lt;/code&gt; &amp;mdash; Convenient Web-browser controller</source>
          <target state="translated">&lt;code&gt;webbrowser&lt;/code&gt; &amp;mdash; 편리한 웹 브라우저 컨트롤러</target>
        </trans-unit>
        <trans-unit id="c1e177187af0951e85d5c8fe6b1a8f6ff7cfdfa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;winreg&lt;/code&gt; &amp;mdash; Windows registry access</source>
          <target state="translated">&lt;code&gt;winreg&lt;/code&gt; &amp;mdash; Windows 레지스트리 액세스</target>
        </trans-unit>
        <trans-unit id="d414880364f2815cc7541927f62d31a80dcad626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;winsound&lt;/code&gt; &amp;mdash; Sound-playing interface for Windows</source>
          <target state="translated">&lt;code&gt;winsound&lt;/code&gt; &amp;mdash; Windows 용 사운드 재생 인터페이스</target>
        </trans-unit>
        <trans-unit id="411ee440350ce571255063704be59af5f5615668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_pip&lt;/code&gt; &amp;ndash; a Boolean value which, if true, ensures pip is installed in the virtual environment. This uses &lt;a href=&quot;ensurepip#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;--default-pip&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;with_pip&lt;/code&gt; &amp;ndash; true이면 가상 환경에 pip가 설치되도록하는 부울 값입니다. &lt;a href=&quot;ensurepip#module-ensurepip&quot;&gt; &lt;code&gt;ensurepip&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--default-pip&lt;/code&gt; 옵션 과 함께 ensurepip 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="94a091c5b32911d51aa2d0307008be1d010075b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_prefixlen&lt;/code&gt; and &lt;code&gt;compressed&lt;/code&gt; are always the same as &lt;code&gt;str(network)&lt;/code&gt;. &lt;code&gt;exploded&lt;/code&gt; uses the exploded form the network address.</source>
          <target state="translated">&lt;code&gt;with_prefixlen&lt;/code&gt; 및 &lt;code&gt;compressed&lt;/code&gt; 은 항상 &lt;code&gt;str(network)&lt;/code&gt; 와 동일 합니다. &lt;code&gt;exploded&lt;/code&gt; 는 네트워크 주소에서 분해를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="227260faa470b48e40fec0a49d9c0f38509f1746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wsgiref&lt;/code&gt; &amp;mdash; WSGI Utilities and Reference Implementation</source>
          <target state="translated">&lt;code&gt;wsgiref&lt;/code&gt; &amp;mdash; WSGI 유틸리티 및 참조 구현</target>
        </trans-unit>
        <trans-unit id="cf405f59359745ec66621f63ffa688b585a13b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: No local postings, and articles from peers are ignored.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; : 로컬 게시물이 없으며 동료의 기사는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1cadeaf41f383247a963e06e859ac7f19c740bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xdrlib&lt;/code&gt; &amp;mdash; Encode and decode XDR data</source>
          <target state="translated">&lt;code&gt;xdrlib&lt;/code&gt; &amp;mdash; XDR 데이터를 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="23ef2afb74559d1bd4bf48e1a46428a1da260c03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom.minidom&lt;/code&gt; &amp;mdash; Minimal DOM implementation</source>
          <target state="translated">&lt;code&gt;xml.dom.minidom&lt;/code&gt; &amp;mdash; 최소 DOM 구현</target>
        </trans-unit>
        <trans-unit id="7a5778bfacf19cd2cec65af0527fa6e2c081bf3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom.pulldom&lt;/code&gt; &amp;mdash; Support for building partial DOM trees</source>
          <target state="translated">&lt;code&gt;xml.dom.pulldom&lt;/code&gt; &amp;mdash; 부분 DOM 트리 구축 지원</target>
        </trans-unit>
        <trans-unit id="41e40e8e593717d60902c356ec31aa9476adbd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom&lt;/code&gt; &amp;mdash; The Document Object Model API</source>
          <target state="translated">&lt;code&gt;xml.dom&lt;/code&gt; &amp;mdash; 문서 객체 모델 API</target>
        </trans-unit>
        <trans-unit id="b643921c8aabd21748d9d651d4f092eadd32d7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &amp;mdash; The ElementTree XML API</source>
          <target state="translated">&lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &amp;mdash; ElementTree XML API</target>
        </trans-unit>
        <trans-unit id="bbd72e1dc00a7bc21f48f6b5a9a07610d4d12393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.parsers.expat&lt;/code&gt; &amp;mdash; Fast XML parsing using Expat</source>
          <target state="translated">&lt;code&gt;xml.parsers.expat&lt;/code&gt; &amp;mdash; Expat를 사용한 빠른 XML 파싱</target>
        </trans-unit>
        <trans-unit id="5a6cc70865398609bd8ae7e2aa80092369f95651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.handler&lt;/code&gt; &amp;mdash; Base classes for SAX handlers</source>
          <target state="translated">&lt;code&gt;xml.sax.handler&lt;/code&gt; &amp;mdash; SAX 핸들러의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="4b86e6bc41d8f02d6684ee09e127803ff56e253e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.saxutils&lt;/code&gt; &amp;mdash; SAX Utilities</source>
          <target state="translated">&lt;code&gt;xml.sax.saxutils&lt;/code&gt; &amp;mdash; SAX 유틸리티</target>
        </trans-unit>
        <trans-unit id="ec6ce736a853749049d1d945ecdda425a2d5d486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.xmlreader&lt;/code&gt; &amp;mdash; Interface for XML parsers</source>
          <target state="translated">&lt;code&gt;xml.sax.xmlreader&lt;/code&gt; &amp;mdash; XML 파서 용 인터페이스</target>
        </trans-unit>
        <trans-unit id="590ee3047874390709270b4b864beed438d71d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax&lt;/code&gt; &amp;mdash; Support for SAX2 parsers</source>
          <target state="translated">&lt;code&gt;xml.sax&lt;/code&gt; &amp;mdash; SAX2 파서 지원</target>
        </trans-unit>
        <trans-unit id="0fc5243eaddf755adb5119e0b2621000c825867b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlparser&lt;/code&gt; objects have the following attributes:</source>
          <target state="translated">&lt;code&gt;xmlparser&lt;/code&gt; 객체에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cb9a3f81772b7833ca9f422d42a8932abd7e15e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlparser&lt;/code&gt; objects have the following methods:</source>
          <target state="translated">&lt;code&gt;xmlparser&lt;/code&gt; 객체에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a131450e23bb293609a4d4db7d03d0893a62b792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc.client&lt;/code&gt; &amp;mdash; XML-RPC client access</source>
          <target state="translated">&lt;code&gt;xmlrpc.client&lt;/code&gt; &amp;mdash; XML-RPC 클라이언트 액세스</target>
        </trans-unit>
        <trans-unit id="d6d51cc530d1ac0143c75c707a5b214b375de63a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc.server&lt;/code&gt; &amp;mdash; Basic XML-RPC servers</source>
          <target state="translated">&lt;code&gt;xmlrpc.server&lt;/code&gt; &amp;mdash; 기본 XML-RPC 서버</target>
        </trans-unit>
        <trans-unit id="b6dfc4e590b269e7c67cb973708b477f9046aa0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc&lt;/code&gt; &amp;mdash; XMLRPC server and client modules</source>
          <target state="translated">&lt;code&gt;xmlrpc&lt;/code&gt; &amp;mdash; XMLRPC 서버 및 클라이언트 모듈</target>
        </trans-unit>
        <trans-unit id="0640432bf9123c1512e82f722ce1188728b8b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc&lt;/code&gt; is a package that collects server and client modules implementing XML-RPC. The modules are:</source>
          <target state="translated">&lt;code&gt;xmlrpc&lt;/code&gt; 는 XML-RPC를 구현하는 서버 및 클라이언트 모듈을 수집하는 패키지입니다. 모듈은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e2dd2cc03d094db4ba4eb1ef8aa1e18422a024a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpclib&lt;/code&gt; doesn&amp;rsquo;t expand external entities and omits them.</source>
          <target state="translated">&lt;code&gt;xmlrpclib&lt;/code&gt; 는 외부 엔티티를 확장하지 않고 생략합니다.</target>
        </trans-unit>
        <trans-unit id="342fbf5ab72e7874c49c3ac1df3f37c6cd3cc936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; must be nonnegative</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; 는 음이 아니어야합니다</target>
        </trans-unit>
        <trans-unit id="0501b678bae2a9d3da88dd3f63645f43f8e1af50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt;: Local postings and articles from peers are allowed.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; : 지역 게시물 및 동료의 기사가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="56a060ea877cf61a2da73a11bc9dafc0d316e446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_time_func&lt;/code&gt; should return a single number, or a list of numbers whose sum is the current time (like what &lt;a href=&quot;os#os.times&quot;&gt;&lt;code&gt;os.times()&lt;/code&gt;&lt;/a&gt; returns). If the function returns a single time number, or the list of returned numbers has length 2, then you will get an especially fast version of the dispatch routine.</source>
          <target state="translated">&lt;code&gt;your_time_func&lt;/code&gt; 는 단일 숫자 또는 합계가 현재 시간 인 숫자 목록 ( &lt;a href=&quot;os#os.times&quot;&gt; &lt;code&gt;os.times()&lt;/code&gt; &lt;/a&gt; 반환하는 것과 같은 )을 반환해야합니다. 함수가 단일 시간 번호를 리턴하거나 리턴 된 숫자 목록의 길이가 2 인 경우, 특히 빠른 버전의 디스패치 루틴을 얻게됩니다.</target>
        </trans-unit>
        <trans-unit id="44f7051b2517b59143b3913309bc7e26ac8be2a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_time_func&lt;/code&gt; should return a single number. If it returns integers, you can also invoke the class constructor with a second argument specifying the real duration of one unit of time. For example, if &lt;code&gt;your_integer_time_func&lt;/code&gt; returns times measured in thousands of seconds, you would construct the &lt;code&gt;Profile&lt;/code&gt; instance as follows:</source>
          <target state="translated">&lt;code&gt;your_time_func&lt;/code&gt; 는 단일 숫자를 반환해야합니다. 정수를 반환하면 한 시간 단위의 실제 지속 시간을 지정하는 두 번째 인수로 클래스 생성자를 호출 할 수도 있습니다. 예를 들어, &lt;code&gt;your_integer_time_func&lt;/code&gt; 가 수천 초 단위로 측정 된 시간을 리턴하면 다음과 같이 &lt;code&gt;Profile&lt;/code&gt; 인스턴스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="4a24a57e8e84def95ed956f648ffbfe9fe9969d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipapp&lt;/code&gt; &amp;mdash; Manage executable Python zip archives</source>
          <target state="translated">&lt;code&gt;zipapp&lt;/code&gt; &amp;mdash; 실행 가능한 Python zip 아카이브 관리</target>
        </trans-unit>
        <trans-unit id="4206860b0275e92e258935b8138c644b2c5edec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipfile&lt;/code&gt; &amp;mdash; Work with ZIP archives</source>
          <target state="translated">&lt;code&gt;zipfile&lt;/code&gt; &amp;mdash; ZIP 아카이브 작업</target>
        </trans-unit>
        <trans-unit id="141060e1e296ca4539c5589407efb0dc2b378b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipimport&lt;/code&gt; &amp;mdash; Import modules from Zip archives</source>
          <target state="translated">&lt;code&gt;zipimport&lt;/code&gt; &amp;mdash; Zip 아카이브에서 모듈 가져 오기</target>
        </trans-unit>
        <trans-unit id="b561e59d8f0f4343f433bdcbc78033d463662a3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zlib&lt;/code&gt; &amp;mdash; Compression compatible with &lt;strong&gt;gzip&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;zlib&lt;/code&gt; &amp;mdash; &lt;strong&gt;gzip&lt;/strong&gt; 과 호환되는 압축&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c33a328971b5507de6584d943ba2a481dcf304b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zoneinfo&lt;/code&gt; &amp;mdash; IANA time zone support</source>
          <target state="translated">&lt;code&gt;zoneinfo&lt;/code&gt; &amp;mdash; IANA 시간대 지원</target>
        </trans-unit>
        <trans-unit id="821b0aa8d95f042ec22109940100faa0851ceaf0" translate="yes" xml:space="preserve">
          <source>&lt;em id=&quot;index-6&quot;&gt;newline&lt;/em&gt; controls how &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode works (it only applies to text mode). It can be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\r\n'&lt;/code&gt;. It works as follows:</source>
          <target state="translated">&lt;em id=&quot;index-6&quot;&gt;개행&lt;/em&gt; 은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;범용 개행&lt;/a&gt; 모드의 작동 방식을 제어합니다 (텍스트 모드에만 적용됨). 그것은있을 수 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;''&lt;/code&gt; , &lt;code&gt;'\n'&lt;/code&gt; , &lt;code&gt;'\r'&lt;/code&gt; , 및 &lt;code&gt;'\r\n'&lt;/code&gt; . 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bac096fef712ca345e987dc6b69816753d87462d" translate="yes" xml:space="preserve">
          <source>&lt;em id=&quot;index-6&quot;&gt;newline&lt;/em&gt; controls how &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode works (it only applies to text mode). It can be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\r\n'&lt;/code&gt;. It works as follows:</source>
          <target state="translated">&lt;em id=&quot;index-6&quot;&gt;개행&lt;/em&gt; 은 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;범용 개행&lt;/a&gt; 모드가 작동 하는 방식을 제어합니다 (텍스트 모드에만 적용됨). 그것은있을 수 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;''&lt;/code&gt; , &lt;code&gt;'\n'&lt;/code&gt; , &lt;code&gt;'\r'&lt;/code&gt; , 및 &lt;code&gt;'\r\n'&lt;/code&gt; . 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4cb8c465591baa9537e8dc4f5551d51338cb6efb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alexandr Sokolovskiy&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;알렉산드르 소콜 로브 스키&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f85c544b6713c787d0292c342b6673beda4828ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Advanced 4.3BSD Interprocess Communication Tutorial&lt;/em&gt;, by Samuel J. Leffler et al,</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Samuel J. Leffler 등 &lt;em&gt;의 고급 4.3BSD 프로세스 간 통신 자습서&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7b296588cffd17b7ebc3fbe5f30c173448ce1df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Introductory 4.3BSD Interprocess Communication Tutorial&lt;/em&gt;, by Stuart Sechrest</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Stuart Sechrest의 &lt;em&gt;4.3BSD 프로세스 간 통신 튜토리얼&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23e079d27ee60660bf4e7f0e036d3c01e8c07ea5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CompilerFlag&lt;/em&gt; is the (bitfield) flag that should be passed in the fourth argument to the built-in function &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; to enable the feature in dynamically compiled code. This flag is stored in the &lt;code&gt;compiler_flag&lt;/code&gt; attribute on &lt;code&gt;_Feature&lt;/code&gt; instances.</source>
          <target state="translated">&lt;em&gt;CompilerFlag&lt;/em&gt; 는 동적으로 컴파일 된 코드에서 기능을 사용 하기 위해 네 번째 인수로 내장 함수 &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; 에 전달해야하는 (비트 필드) 플래그입니다 . 이 플래그는 &lt;code&gt;_Feature&lt;/code&gt; 인스턴스 의 &lt;code&gt;compiler_flag&lt;/code&gt; 속성에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="beefd2449cdeea25de4ac44a134684d9280b6e2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deterministic profiling&lt;/em&gt; is meant to reflect the fact that all &lt;em&gt;function call&lt;/em&gt;, &lt;em&gt;function return&lt;/em&gt;, and &lt;em&gt;exception&lt;/em&gt; events are monitored, and precise timings are made for the intervals between these events (during which time the user&amp;rsquo;s code is executing). In contrast, &lt;em&gt;statistical profiling&lt;/em&gt; (which is not done by this module) randomly samples the effective instruction pointer, and deduces where time is being spent. The latter technique traditionally involves less overhead (as the code does not need to be instrumented), but provides only relative indications of where time is being spent.</source>
          <target state="translated">&lt;em&gt;결정적 프로파일 링&lt;/em&gt; 은 모든 &lt;em&gt;함수 호출&lt;/em&gt; , &lt;em&gt;함수 반환&lt;/em&gt; 및 &lt;em&gt;예외&lt;/em&gt; 이벤트가 모니터링되고 이러한 이벤트 사이의 간격 (사용자 코드가 실행되는 시간 동안)에 대한 정확한 타이밍이 &lt;em&gt;결정&lt;/em&gt; 된다는 사실을 반영하기 위한 것입니다. 반대로, &lt;em&gt;통계 프로파일 링&lt;/em&gt; (이 모듈에서 수행되지 않음)은 효과적인 명령 포인터를 무작위로 샘플링하여 시간이 소비되는 위치를 추론합니다. 후자의 기술은 전통적으로 코드를 계측 할 필요가 없기 때문에 오버 헤드가 적지 만 시간이 어디에서 소비되는지에 대한 상대적 표시 만 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d411a9e909ee803310360ceb3acb52bd2151707" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; may be given to set the desired error handling scheme. The default error handler is &lt;code&gt;'strict'&lt;/code&gt; meaning that decoding errors raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or a more codec specific subclass, such as &lt;a href=&quot;exceptions#UnicodeDecodeError&quot;&gt;&lt;code&gt;UnicodeDecodeError&lt;/code&gt;&lt;/a&gt;). Refer to &lt;a href=&quot;#codec-base-classes&quot;&gt;Codec Base Classes&lt;/a&gt; for more information on codec error handling.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;원하는 오류 처리 방식을 설정하기 위해 &lt;em&gt;오류&lt;/em&gt; 가 제공 될 수 있습니다. 기본 오류 처리기는 &lt;code&gt;'strict'&lt;/code&gt; 이므로 디코딩 오류로 인해 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;exceptions#UnicodeDecodeError&quot;&gt; &lt;code&gt;UnicodeDecodeError&lt;/code&gt; &lt;/a&gt; 와 같은 더 많은 코덱 관련 하위 클래스 )가 발생합니다. 를 참조하십시오 &lt;a href=&quot;#codec-base-classes&quot;&gt;코덱 기본 클래스&lt;/a&gt; 코덱 오류 처리에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="ef02afa8cc3aeb7b6d8dd5c02558e1322c1702ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; may be given to set the desired error handling scheme. The default error handler is &lt;code&gt;'strict'&lt;/code&gt; meaning that encoding errors raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or a more codec specific subclass, such as &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt;&lt;code&gt;UnicodeEncodeError&lt;/code&gt;&lt;/a&gt;). Refer to &lt;a href=&quot;#codec-base-classes&quot;&gt;Codec Base Classes&lt;/a&gt; for more information on codec error handling.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;원하는 오류 처리 방식을 설정하기 위해 &lt;em&gt;오류&lt;/em&gt; 가 제공 될 수 있습니다. 기본 오류 처리기는 &lt;code&gt;'strict'&lt;/code&gt; 이므로 인코딩 오류로 인해 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt; &lt;code&gt;UnicodeEncodeError&lt;/code&gt; &lt;/a&gt; 와 같은 더 많은 코덱 관련 하위 클래스 )가 발생합니다. 를 참조하십시오 &lt;a href=&quot;#codec-base-classes&quot;&gt;코덱 기본 클래스&lt;/a&gt; 코덱 오류 처리에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="3abd2633374bb70da27fbe846067852cf8a03d99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Future&lt;/em&gt; objects are used to bridge &lt;strong&gt;low-level callback-based code&lt;/strong&gt; with high-level async/await code.</source>
          <target state="translated">&lt;em&gt;미래의&lt;/em&gt; 객체는 &lt;strong&gt;저수준 콜백 기반 코드&lt;/strong&gt; 를 고급 비동기 / 대기 코드와 연결하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="cdb24f9a5195516a8b9c806f129b749c034d91d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incomplete Types&lt;/em&gt; are structures, unions or arrays whose members are not yet specified. In C, they are specified by forward declarations, which are defined later:</source>
          <target state="translated">&lt;em&gt;불완전한 유형&lt;/em&gt; 은 멤버가 아직 지정되지 않은 구조체, 공용체 또는 배열입니다. C에서는 순방향 선언으로 지정되며 나중에 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5a1e54295789c6d4ae642e287a2fe0f84232e923" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;KEYWORD_ONLY&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;KEYWORD_ONLY&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cae8b54777d248e24aed55f40c13db7e08b47a70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MandatoryRelease&lt;/em&gt; may also be &lt;code&gt;None&lt;/code&gt;, meaning that a planned feature got dropped.</source>
          <target state="translated">&lt;em&gt;MandatoryRelease&lt;/em&gt; 도 &lt;code&gt;None&lt;/code&gt; 일 수 있으며 계획된 기능이 삭제되었음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="fa904747f892753bd9f6f1a5c35966c1ab2035a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OptionalRelease&lt;/em&gt; records the first release in which the feature was accepted.</source>
          <target state="translated">&lt;em&gt;OptionalRelease&lt;/em&gt; 는 기능이 승인 된 첫 번째 릴리스를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="4b83e891d15815225a77b89464edaafae1a81795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;POSITIONAL_ONLY&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;POSITIONAL_ONLY&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8f2f9de0a77efb6e0afedc5e82bc7cccb5350b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;POSITIONAL_OR_KEYWORD&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;POSITIONAL_OR_KEYWORD&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2eafe1a1ebf1735931ce71588e7ab05be7736db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Polar coordinates&lt;/em&gt; give an alternative way to represent a complex number. In polar coordinates, a complex number &lt;em&gt;z&lt;/em&gt; is defined by the modulus &lt;em&gt;r&lt;/em&gt; and the phase angle &lt;em&gt;phi&lt;/em&gt;. The modulus &lt;em&gt;r&lt;/em&gt; is the distance from &lt;em&gt;z&lt;/em&gt; to the origin, while the phase &lt;em&gt;phi&lt;/em&gt; is the counterclockwise angle, measured in radians, from the positive x-axis to the line segment that joins the origin to &lt;em&gt;z&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;극좌표&lt;/em&gt; 는 복소수를 나타내는 다른 방법을 제공합니다. 극좌표에서 복소수 &lt;em&gt;z&lt;/em&gt; 는 모듈러스 &lt;em&gt;r&lt;/em&gt; 과 위상 각 &lt;em&gt;phi에&lt;/em&gt; 의해 정의됩니다 . 모듈러스 &lt;em&gt;r&lt;/em&gt; 은 &lt;em&gt;z&lt;/em&gt; 에서 원점 까지의 거리 이며, 위상 &lt;em&gt;phi&lt;/em&gt; 는 양의 x 축에서 원점을 &lt;em&gt;z에&lt;/em&gt; 연결하는 선분까지 라디안 단위의 반 시계 방향 각도 입니다.</target>
        </trans-unit>
        <trans-unit id="86761531f31ad11ca43f3455077878d64fdf98e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SSLv2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SSLv2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9dcc63c5acda946e46c9bc9728fb9c5e6b2089e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SSLv3&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SSLv3&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45aebfa5f3d312a3b7531768b9b6a9433f37e266" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Salted hashing&lt;/em&gt; (or just hashing) with BLAKE2 or any other general-purpose cryptographic hash function, such as SHA-256, is not suitable for hashing passwords. See &lt;a href=&quot;https://blake2.net/#qa&quot;&gt;BLAKE2 FAQ&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;BLAKE2 또는 SHA-256과 같은 기타 범용 암호화 해시 기능을 사용한 솔트 &lt;em&gt;해싱&lt;/em&gt; (또는 해싱)은 해싱 암호에 적합하지 않습니다. 자세한 내용은 &lt;a href=&quot;https://blake2.net/#qa&quot;&gt;BLAKE2 FAQ&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ddf1953df2339542c00bd4a510d94c690d8745d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server&lt;/em&gt; objects are asynchronous context managers. When used in an &lt;code&gt;async with&lt;/code&gt; statement, it&amp;rsquo;s guaranteed that the Server object is closed and not accepting new connections when the &lt;code&gt;async with&lt;/code&gt; statement is completed:</source>
          <target state="translated">&lt;em&gt;서버&lt;/em&gt; 객체는 비동기 컨텍스트 관리자입니다. &lt;code&gt;async with&lt;/code&gt; 문 에서 사용될 때 &lt;code&gt;async with&lt;/code&gt; 문이 완료되면 Server 객체가 닫히고 새 연결을 수락하지 않는 것이 보장 됩니다.</target>
        </trans-unit>
        <trans-unit id="39245f85e90e600e32291a1cbd5b327f64c76c1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Superseded by TraversableReader&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TraversableReader로 대체 됨&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cb163b1f469f9f05eee4643bf48b9bcd718bcd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLS&lt;/em&gt; (&lt;em&gt;SSLv23&lt;/em&gt;) &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;TLS&lt;/em&gt; ( &lt;em&gt;SSLv23&lt;/em&gt; ) &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d087c9a3674faf0d372d392ab89fcc9244de5a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1.1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1.1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f4dcf782a975949a26bc511f159526fd65d1f10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1.2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1.2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f3224fc7f021eec889253746f0fa0bfe35dcdd6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cb45e221299bfa502ec642cec5d6a59491735ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tasks&lt;/em&gt; are used to schedule coroutines &lt;em&gt;concurrently&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;작업&lt;/em&gt; 은 코 루틴을 &lt;em&gt;동시에&lt;/em&gt; 예약하는 데 사용 &lt;em&gt;됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="795b141759871709f69c8b195f8cc5c19dc29478" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This method can not delete keys with subkeys.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 방법은 하위 키가있는 키를 삭제할 수 없습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef7e62d3ec6ff8155b27747a93a118f64e8b0a0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Token&lt;/em&gt; objects are returned by the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; method. They can be passed to the &lt;a href=&quot;#contextvars.ContextVar.reset&quot;&gt;&lt;code&gt;ContextVar.reset()&lt;/code&gt;&lt;/a&gt; method to revert the value of the variable to what it was before the corresponding &lt;em&gt;set&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;토큰&lt;/em&gt; 오브젝트는 &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt; &lt;code&gt;ContextVar.set()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 . &lt;a href=&quot;#contextvars.ContextVar.reset&quot;&gt; &lt;code&gt;ContextVar.reset()&lt;/code&gt; &lt;/a&gt; 메소드에 전달되어 변수 값을 해당 &lt;em&gt;set&lt;/em&gt; 이전의 값으로 되돌릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69249b2d9b835636ad495bffa53d6fd0f5b3632f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAR_KEYWORD&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAR_KEYWORD&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131380ba96aabc467e48912541aba1e33e35c871" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAR_POSITIONAL&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAR_POSITIONAL&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f928ea26cccc9feda8b5b3a30d5dce259f1db94" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_maintype&lt;/em&gt; is the &lt;em&gt;Content-Type&lt;/em&gt; major type (e.g. &lt;em&gt;text&lt;/em&gt; or &lt;em&gt;image&lt;/em&gt;), and &lt;em&gt;_subtype&lt;/em&gt; is the &lt;em&gt;Content-Type&lt;/em&gt; minor type (e.g. &lt;em&gt;plain&lt;/em&gt; or &lt;em&gt;gif&lt;/em&gt;). &lt;em&gt;_params&lt;/em&gt; is a parameter key/value dictionary and is passed directly to &lt;a href=&quot;email.compat32-message#email.message.Message.add_header&quot;&gt;&lt;code&gt;Message.add_header&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;_maintype&lt;/em&gt; 은 &lt;em&gt;Content-Type&lt;/em&gt; 주요 유형 (예 : &lt;em&gt;text&lt;/em&gt; 또는 &lt;em&gt;image&lt;/em&gt; )이고 &lt;em&gt;_subtype&lt;/em&gt; 은 &lt;em&gt;Content-Type&lt;/em&gt; 부 유형 (예 : &lt;em&gt;plain&lt;/em&gt; 또는 &lt;em&gt;gif&lt;/em&gt; )입니다. &lt;em&gt;_params&lt;/em&gt; 는 매개 변수 키 / 값 사전이며 &lt;a href=&quot;email.compat32-message#email.message.Message.add_header&quot;&gt; &lt;code&gt;Message.add_header&lt;/code&gt; 로&lt;/a&gt; 직접 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa66ed169296bd6100ed2c4b70aa42b88635b3a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_params&lt;/em&gt; are passed straight through to the &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;em&gt;_params&lt;/em&gt; 는 &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt; 생성자로 바로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="9bfed3304adb6d44a24eb47fe4bbcd40f02def12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_params&lt;/em&gt; are passed straight through to the base class constructor.</source>
          <target state="translated">&lt;em&gt;_params&lt;/em&gt; 는 기본 클래스 생성자로 바로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="74b8264f15e14d37c9f47f078d80f57973b997b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_subparts&lt;/em&gt; is a sequence of initial subparts for the payload. It must be possible to convert this sequence to a list. You can always attach new subparts to the message by using the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;Message.attach&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;_subparts&lt;/em&gt; 는 페이로드에 대한 초기 하위 시퀀스입니다. 이 순서를 목록으로 변환 할 수 있어야합니다. &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt; &lt;code&gt;Message.attach&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 항상 새 하위 파트를 메시지에 첨부 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09c80ca7c5a538c8c31471e8766d750770121825" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; have the same elements in the same number, regardless of their order.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 는 순서에 관계없이 동일한 번호의 동일한 요소를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="c3544481cf283b036deb56d3fd50ef9a2c43b9f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;abs_tol&lt;/em&gt; is the minimum absolute tolerance &amp;ndash; useful for comparisons near zero. &lt;em&gt;abs_tol&lt;/em&gt; must be at least zero.</source>
          <target state="translated">&lt;em&gt;abs_tol&lt;/em&gt; 은 최소 절대 허용 오차로 0에 가까운 비교에 유용합니다. &lt;em&gt;abs_tol&lt;/em&gt; 은 0 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="381a809177a8c1ce23594dae4952225279726462" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_READ&quot;&gt;&lt;code&gt;KEY_READ&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="translated">&lt;em&gt;access&lt;/em&gt; 는 원하는 키에 대한 보안 액세스를 설명하는 액세스 마스크를 지정하는 정수입니다. 기본값은 &lt;a href=&quot;#winreg.KEY_READ&quot;&gt; &lt;code&gt;KEY_READ&lt;/code&gt; &lt;/a&gt; 입니다. 허용되는 다른 값 은 &lt;a href=&quot;#access-rights&quot;&gt;액세스 권한&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bea9a2f94e98a0078799f8533398285c93eae6ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_WOW64_64KEY&quot;&gt;&lt;code&gt;KEY_WOW64_64KEY&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="translated">&lt;em&gt;access&lt;/em&gt; 는 원하는 키에 대한 보안 액세스를 설명하는 액세스 마스크를 지정하는 정수입니다. 기본값은 &lt;a href=&quot;#winreg.KEY_WOW64_64KEY&quot;&gt; &lt;code&gt;KEY_WOW64_64KEY&lt;/code&gt; &lt;/a&gt; 입니다. 허용되는 다른 값 은 &lt;a href=&quot;#access-rights&quot;&gt;액세스 권한&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e39015e4f40da3fa78b19ca95ce15baf78970a43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_WRITE&quot;&gt;&lt;code&gt;KEY_WRITE&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="translated">&lt;em&gt;access&lt;/em&gt; 는 원하는 키에 대한 보안 액세스를 설명하는 액세스 마스크를 지정하는 정수입니다. 기본값은 &lt;a href=&quot;#winreg.KEY_WRITE&quot;&gt; &lt;code&gt;KEY_WRITE&lt;/code&gt; &lt;/a&gt; 입니다. 허용되는 다른 값 은 &lt;a href=&quot;#access-rights&quot;&gt;액세스 권한&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ed571ee0951f196ff19573e361b75c0dab2dbd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; may be specified in lieu of &lt;em&gt;flags&lt;/em&gt; and &lt;em&gt;prot&lt;/em&gt; as an optional keyword parameter. It is an error to specify both &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;prot&lt;/em&gt; and &lt;em&gt;access&lt;/em&gt;. See the description of &lt;em&gt;access&lt;/em&gt; above for information on how to use this parameter.</source>
          <target state="translated">&lt;em&gt;액세스는&lt;/em&gt; 대신에 지정 될 수 &lt;em&gt;플래그&lt;/em&gt; 와 &lt;em&gt;제자&lt;/em&gt; 선택적 키워드 매개 변수로. &lt;em&gt;플래그&lt;/em&gt; , &lt;em&gt;prot&lt;/em&gt; 및 &lt;em&gt;access를&lt;/em&gt; 모두 지정하는 것은 오류 입니다. 이 매개 변수 사용 방법에 대한 정보는 위 의 &lt;em&gt;액세스&lt;/em&gt; 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaa2ec5589aea1b2d867df6ada4f1fa6ca055e95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;action&lt;/em&gt; is one of the following strings:</source>
          <target state="translated">&lt;em&gt;action&lt;/em&gt; 은 다음 문자열 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="3637ee043ee917ad70b4e51e961a00e16f6b7b22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;addr&lt;/em&gt; - Optional bytes-like object specifying the hardware physical address, whose interpretation depends on the device.</source>
          <target state="translated">&lt;em&gt;addr-&lt;/em&gt; 하드웨어 물리적 주소를 지정하는 바이트와 유사한 선택적 객체. 해석은 장치에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="90d74f823c0fbb109478ad7e0ec2b5cbb9a72e4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;addr_type&lt;/em&gt; is one of &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt;, &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt;, or &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;addr_type&lt;/em&gt; 은 &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt; , &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt; 또는 &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2aac273cc286bdeb26ee96297a4de5125de1b3c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;address&lt;/em&gt; is the address on which the manager process listens for new connections. If &lt;em&gt;address&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then an arbitrary one is chosen.</source>
          <target state="translated">&lt;em&gt;address&lt;/em&gt; 는 관리자 프로세스가 새 연결을 수신하는 주소입니다. 경우 &lt;em&gt;주소가&lt;/em&gt; 없는 &lt;code&gt;None&lt;/code&gt; 그 다음 임의의 하나가 선택된다.</target>
        </trans-unit>
        <trans-unit id="8086c2484d83086a9a059d9eaa2e76b2203df6a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;address&lt;/em&gt; is the address to be used by the bound socket or named pipe of the listener object.</source>
          <target state="translated">&lt;em&gt;address&lt;/em&gt; 는 리스너 오브젝트의 바인드 된 소켓 또는 명명 된 파이프에서 사용할 주소입니다.</target>
        </trans-unit>
        <trans-unit id="303c27441d1edc80d68ab28fd7f1dc6026f420b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adjustable&lt;/em&gt;: &lt;code&gt;True&lt;/code&gt; if the clock can be changed automatically (e.g. by a NTP daemon) or manually by the system administrator, &lt;code&gt;False&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;em&gt;조정 가능&lt;/em&gt; : 시계가 자동으로 (예 : NTP 데몬에 의해) 또는 시스템 관리자에 의해 수동으로 변경 될 수 있으면 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;False&lt;/code&gt; 않으면 거짓</target>
        </trans-unit>
        <trans-unit id="ac39d868c04d336ea125c712046f8b7ed32be43c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adobe&lt;/em&gt; controls whether the encoded byte sequence is framed with &lt;code&gt;&amp;lt;~&lt;/code&gt; and &lt;code&gt;~&amp;gt;&lt;/code&gt;, which is used by the Adobe implementation.</source>
          <target state="translated">&lt;em&gt;adobe&lt;/em&gt; 는 인코딩 된 바이트 시퀀스가 Adobe 구현에서 사용되는 &lt;code&gt;&amp;lt;~&lt;/code&gt; 및 &lt;code&gt;~&amp;gt;&lt;/code&gt; 프레임인지 여부를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="056264efb18e37e96c2ef2c3d9f417c7ffd63ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adobe&lt;/em&gt; controls whether the input sequence is in Adobe Ascii85 format (i.e. is framed with &amp;lt;~ and ~&amp;gt;).</source>
          <target state="translated">&lt;em&gt;adobe&lt;/em&gt; 는 입력 시퀀스가 ​​Adobe Ascii85 형식인지 여부를 제어합니다 (예 : &amp;lt;~ 및 ~&amp;gt;으로 프레임).</target>
        </trans-unit>
        <trans-unit id="2958e52878e5fc5b54d6cfc155ad08052a5f3d35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;after_in_child&lt;/em&gt; is a function called from the child process.</source>
          <target state="translated">&lt;em&gt;after_in_child&lt;/em&gt; 는 자식 프로세스에서 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2409a4456ada2a702b3caa2c3964130c74b96886" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;after_in_parent&lt;/em&gt; is a function called from the parent process after forking a child process.</source>
          <target state="translated">&lt;em&gt;after_in_parent&lt;/em&gt; 는 자식 프로세스를 분기 한 후 부모 프로세스에서 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="b34ee0810cf969e6229da957a5cf4f33373690c1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;allow_broadcast&lt;/em&gt; tells the kernel to allow this endpoint to send messages to the broadcast address.</source>
          <target state="translated">&lt;em&gt;allow_broadcast&lt;/em&gt; 는이 엔드 포인트가 브로드 캐스트 주소로 메시지를 보낼 수 있도록 커널에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="bebed732f7de4d7c8d3b9abd5eecfafbca2d6a2f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;allow_no_value&lt;/em&gt;, default value: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;allow_no_value&lt;/em&gt; , 기본값 : &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="642d3102048c0bc8a8b274c161b9d04799049e42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;amount&lt;/em&gt; defaults to 1.0 if omitted.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;생략하면 &lt;em&gt;금액의&lt;/em&gt; 기본값은 1.0입니다.</target>
        </trans-unit>
        <trans-unit id="3a982de63b32a63f23073a80cf5696fc4b22831c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is a list of the positional parameter names. &lt;em&gt;varargs&lt;/em&gt; is the name of the &lt;code&gt;*&lt;/code&gt; parameter or &lt;code&gt;None&lt;/code&gt; if arbitrary positional arguments are not accepted. &lt;em&gt;varkw&lt;/em&gt; is the name of the &lt;code&gt;**&lt;/code&gt; parameter or &lt;code&gt;None&lt;/code&gt; if arbitrary keyword arguments are not accepted. &lt;em&gt;defaults&lt;/em&gt; is an &lt;em&gt;n&lt;/em&gt;-tuple of default argument values corresponding to the last &lt;em&gt;n&lt;/em&gt; positional parameters, or &lt;code&gt;None&lt;/code&gt; if there are no such defaults defined. &lt;em&gt;kwonlyargs&lt;/em&gt; is a list of keyword-only parameter names in declaration order. &lt;em&gt;kwonlydefaults&lt;/em&gt; is a dictionary mapping parameter names from &lt;em&gt;kwonlyargs&lt;/em&gt; to the default values used if no argument is supplied. &lt;em&gt;annotations&lt;/em&gt; is a dictionary mapping parameter names to annotations. The special key &lt;code&gt;&quot;return&quot;&lt;/code&gt; is used to report the function return value annotation (if any).</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 는 위치 매개 변수 이름의 목록입니다. &lt;em&gt;varargs&lt;/em&gt; 는 &lt;code&gt;*&lt;/code&gt; 매개 변수 의 이름 이거나 임의의 위치 인수가 허용되지 않으면 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;em&gt;varkw&lt;/em&gt; 는 &lt;code&gt;**&lt;/code&gt; 매개 변수 의 이름 이거나 임의의 키워드 인수가 허용되지 않으면 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;em&gt;defaults&lt;/em&gt; 는 마지막 &lt;em&gt;n 개의&lt;/em&gt; 위치 매개 변수에 해당하는 기본 인수 값 의 &lt;em&gt;n-&lt;/em&gt; 튜플 이거나, 이러한 기본값이 정의되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;em&gt;kwonlyargs&lt;/em&gt; 는 선언 순서로 키워드 전용 매개 변수 이름 목록입니다. &lt;em&gt;kwonlydefaults&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;kwonlyargs&lt;/em&gt; 에서 인수가 제공되지 않은 경우 사용되는 기본값으로 의 사전 맵핑 매개 변수 이름입니다 . &lt;em&gt;주석은&lt;/em&gt; 매개 변수 이름을 주석에 매핑하는 사전입니다. 특수 키 &lt;code&gt;&quot;return&quot;&lt;/code&gt; 은 함수 반환 값 주석 (있는 경우)을보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5f4ad9e345bae367d42da01fb279e298d2f303cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is required for all calls and should be a string, or a sequence of program arguments. Providing a sequence of arguments is generally preferred, as it allows the module to take care of any required escaping and quoting of arguments (e.g. to permit spaces in file names). If passing a single string, either &lt;em&gt;shell&lt;/em&gt; must be &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; (see below) or else the string must simply name the program to be executed without specifying any arguments.</source>
          <target state="translated">&lt;em&gt;인수&lt;/em&gt; 는 모든 호출에 필요하며 문자열 또는 일련의 프로그램 인수 여야합니다. 인수가 필요한 이스케이프 및 인용을 처리 할 수 ​​있도록 (예를 들어 파일 이름에 공백을 허용) 인수 순서를 제공하는 것이 일반적으로 선호됩니다. 단일 문자열을 전달하는 경우 &lt;em&gt;셸&lt;/em&gt; 은 &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt; (아래 참조) 여야합니다. 그렇지 않으면 문자열은 인수를 지정하지 않고 실행할 프로그램의 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c440133bfa10957857be2df0f83d55d8ca2c832" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is the argument tuple for the target invocation. Defaults to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 는 대상 호출에 대한 인수 튜플입니다. 기본값은 &lt;code&gt;()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="788f14bda59dda3ec8f24b4967e2a49a1ed3ba40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; must be a list of strings represented by:</source>
          <target state="translated">&lt;em&gt;인수&lt;/em&gt; 는 다음으로 표시되는 문자열 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="66794e82a51c53c6e7f0e938aa19424793971d8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; should be a sequence of program arguments or else a single string or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. By default, the program to execute is the first item in &lt;em&gt;args&lt;/em&gt; if &lt;em&gt;args&lt;/em&gt; is a sequence. If &lt;em&gt;args&lt;/em&gt; is a string, the interpretation is platform-dependent and described below. See the &lt;em&gt;shell&lt;/em&gt; and &lt;em&gt;executable&lt;/em&gt; arguments for additional differences from the default behavior. Unless otherwise stated, it is recommended to pass &lt;em&gt;args&lt;/em&gt; as a sequence.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 는 일련의 프로그램 인수 또는 단일 문자열 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로 유사 객체&lt;/a&gt; 여야 합니다 . 기본적으로 &lt;em&gt;args&lt;/em&gt; 가 시퀀스 인 경우 실행할 프로그램은 &lt;em&gt;args&lt;/em&gt; 의 첫 번째 항목입니다 . 경우 &lt;em&gt;인수가&lt;/em&gt; 문자열 인, 해석은 플랫폼에 의존하고 설명한다. 기본 비헤이비어와의 추가 차이점 은 &lt;em&gt;셸&lt;/em&gt; 및 &lt;em&gt;실행 가능&lt;/em&gt; 인수를 참조하십시오 . 달리 명시되지 않는 한 &lt;em&gt;args&lt;/em&gt; 를 시퀀스 로 전달하는 것이 좋습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9df3b2b6e430a291db1d4c4fcbeb007867807d58" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; should be a sequence of program arguments or else a single string or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. By default, the program to execute is the first item in &lt;em&gt;args&lt;/em&gt; if &lt;em&gt;args&lt;/em&gt; is a sequence. If &lt;em&gt;args&lt;/em&gt; is a string, the interpretation is platform-dependent and described below. See the &lt;em&gt;shell&lt;/em&gt; and &lt;em&gt;executable&lt;/em&gt; arguments for additional differences from the default behavior. Unless otherwise stated, it is recommended to pass &lt;em&gt;args&lt;/em&gt; as a sequence.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 는 프로그램 인수의 시퀀스이거나 단일 문자열 또는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;경로 류 객체&lt;/a&gt; 여야 합니다 . 기본적으로 실행하는 프로그램의 첫 번째 항목으로 &lt;em&gt;인수는&lt;/em&gt; 경우 &lt;em&gt;에 args&lt;/em&gt; 서열이다. 경우 &lt;em&gt;인수가&lt;/em&gt; 문자열 인, 해석은 플랫폼에 의존하고 설명한다. 기본 동작과의 추가 차이점 은 &lt;em&gt;셸&lt;/em&gt; 및 &lt;em&gt;실행 가능한&lt;/em&gt; 인수를 참조하십시오 . 달리 명시되지 않는 한, &lt;em&gt;args&lt;/em&gt; 를 시퀀스 로 전달하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0fffb6abd09211c033d5a493f90529fcfeeff5e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;arguments&lt;/em&gt; is a tuple containing the parameters originally passed to the function call, this allows specializing the behavior on the arguments used.</source>
          <target state="translated">&lt;em&gt;arguments&lt;/em&gt; 는 원래 함수 호출에 전달 된 매개 변수를 포함하는 튜플이므로 사용 된 인수에 대한 동작을 특수화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="514d0aab322389b9c7bf237e18ea305d02d28674" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ascent&lt;/em&gt; - distance between baseline and highest point that a</source>
          <target state="translated">&lt;em&gt;상승&lt;/em&gt; -기준선과 가장 높은 지점 사이의 거리</target>
        </trans-unit>
        <trans-unit id="4588d39c42f70721cb9cd84e9b515abfaa362944" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authkey&lt;/em&gt; is the authentication key which will be used to check the validity of incoming connections to the server process. If &lt;em&gt;authkey&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;current_process().authkey&lt;/code&gt; is used. Otherwise &lt;em&gt;authkey&lt;/em&gt; is used and it must be a byte string.</source>
          <target state="translated">&lt;em&gt;authkey&lt;/em&gt; 는 서버 프로세스로 들어오는 연결의 유효성을 확인하는 데 사용되는 인증 키입니다. 경우 &lt;em&gt;인증 키가&lt;/em&gt; 없는 &lt;code&gt;None&lt;/code&gt; 다음 &lt;code&gt;current_process().authkey&lt;/code&gt; 사용됩니다. 그렇지 않으면 &lt;em&gt;authkey&lt;/em&gt; 가 사용되며 바이트 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b460f80da8a25ade7dc1594524c9c4b03d7f9079" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authobject&lt;/em&gt; must be a callable object taking an optional single argument:</source>
          <target state="translated">&lt;em&gt;authobject&lt;/em&gt; 는 선택적인 단일 인수를 취하는 호출 가능한 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a9172b133eb7149d9be01e9164102a076f107863" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authobject&lt;/em&gt; must be a callable object:</source>
          <target state="translated">&lt;em&gt;authobject&lt;/em&gt; 는 호출 가능한 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="44e59feac478db677927db2ffda0e085a14d6231" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authreq&lt;/em&gt; should be the name of the header where the information about the realm is included in the request, &lt;em&gt;host&lt;/em&gt; should be the host to authenticate to, &lt;em&gt;req&lt;/em&gt; should be the (failed) &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, and &lt;em&gt;headers&lt;/em&gt; should be the error headers.</source>
          <target state="translated">&lt;em&gt;authreq&lt;/em&gt; 는 영역에 대한 정보가 요청에 포함 된 헤더의 이름이어야하고, &lt;em&gt;호스트&lt;/em&gt; 는 인증 할 &lt;em&gt;호스트&lt;/em&gt; 여야하고, &lt;em&gt;req&lt;/em&gt; 는 (실패한) &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 오브젝트 여야 하고 &lt;em&gt;헤더&lt;/em&gt; 는 오류 헤더 여야합니다.</target>
        </trans-unit>
        <trans-unit id="03b15ecea3ccc64e3eb3de715d952dc4a91952e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;backlog&lt;/em&gt; is the maximum number of queued connections passed to &lt;a href=&quot;socket#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; (defaults to 100).</source>
          <target state="translated">&lt;em&gt;백로&lt;/em&gt; 그는 &lt;a href=&quot;socket#socket.socket.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt; 전달 된 최대 대기 연결 수입니다 (기본값은 100).</target>
        </trans-unit>
        <trans-unit id="c3da310f45d3dad786662f4c483fbc0105776abb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;base_dir&lt;/em&gt; is the directory where we start archiving from; i.e. &lt;em&gt;base_dir&lt;/em&gt; will be the common prefix of all files and directories in the archive.</source>
          <target state="translated">&lt;em&gt;base_dir&lt;/em&gt; 은 아카이브를 시작하는 디렉토리입니다. 즉, &lt;em&gt;base_dir&lt;/em&gt; 은 아카이브에있는 모든 파일과 디렉토리의 공통 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="cb6d4caa350d780c7fb1e1b87ef52d076652607f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;base_dir&lt;/em&gt; is the directory where we start archiving from; i.e. &lt;em&gt;base_dir&lt;/em&gt; will be the common prefix of all files and directories in the archive. &lt;em&gt;base_dir&lt;/em&gt; must be given relative to &lt;em&gt;root_dir&lt;/em&gt;. See &lt;a href=&quot;#shutil-archiving-example-with-basedir&quot;&gt;Archiving example with base_dir&lt;/a&gt; for how to use &lt;em&gt;base_dir&lt;/em&gt; and &lt;em&gt;root_dir&lt;/em&gt; together.</source>
          <target state="translated">&lt;em&gt;base_dir&lt;/em&gt; 은 아카이브를 시작하는 디렉토리입니다. 즉, &lt;em&gt;base_dir&lt;/em&gt; 은 아카이브에있는 모든 파일과 디렉토리의 공통 접두사입니다. &lt;em&gt;base_dir&lt;/em&gt; 은 &lt;em&gt;root_dir에&lt;/em&gt; 상대적으로 지정되어야합니다 . &lt;em&gt;base_dir&lt;/em&gt; 과 &lt;em&gt;root_dir을&lt;/em&gt; 함께 사용하는 방법 &lt;a href=&quot;#shutil-archiving-example-with-basedir&quot;&gt;은 base_dir&lt;/a&gt; 을 사용한 아카이브 예제를 참조하십시오 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="013ff68188ff4e8608df591b37ba6601444ae5f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;base_name&lt;/em&gt; is the name of the file to create, including the path, minus any format-specific extension. &lt;em&gt;format&lt;/em&gt; is the archive format: one of &amp;ldquo;zip&amp;rdquo; (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available), &amp;ldquo;tar&amp;rdquo;, &amp;ldquo;gztar&amp;rdquo; (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available), &amp;ldquo;bztar&amp;rdquo; (if the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module is available), or &amp;ldquo;xztar&amp;rdquo; (if the &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="translated">&lt;em&gt;base_name&lt;/em&gt; 은 경로를 포함하여 형식 별 확장자를 뺀 파일의 이름입니다. &lt;em&gt;형식&lt;/em&gt; 은 아카이브 형식입니다. &quot;zip&quot;( &lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우), &quot;tar&quot;, &quot;gztar&quot;( &lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우), &quot;bztar&quot;( &lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우) 또는 &quot; xztar&amp;rdquo;( &lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우).</target>
        </trans-unit>
        <trans-unit id="da2519ac9b58f1b8a80feccb933ae64c7655402a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;basename&lt;/em&gt; is intended for internal use only.</source>
          <target state="translated">&lt;em&gt;basename&lt;/em&gt; 은 내부 전용입니다.</target>
        </trans-unit>
        <trans-unit id="269f902a4db76aad94ed6115dc09f741dfa3eacd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;before&lt;/em&gt; is a function called before forking a child process.</source>
          <target state="translated">&lt;em&gt;before&lt;/em&gt; 는 자식 프로세스를 forking하기 전에 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c4145d3c34887c26d84321eedf9b2c3febde0f87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6009e75cf38fb8c09d9e7cac6cfa218964c0b97b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;blocked&lt;/em&gt; is an iterable of module names that are replaced with &lt;code&gt;None&lt;/code&gt; in the module cache during the import to ensure that attempts to import them raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;차단&lt;/em&gt; 은 가져 오는 동안 모듈 캐시에서 모듈 이름을 &lt;code&gt;None&lt;/code&gt; 으로 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 가져 오려고하면 ImportError 가 발생하는 반복 가능한 모듈 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7a5be62a1b483cd7dbb8f076d619bb2b0e66013a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;br&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;br&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1348f25bb558d963a90e88bf109004c5b84c3c09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;braced&lt;/em&gt; &amp;ndash; This group matches the brace enclosed placeholder name; it should not include either the delimiter or braces in the capturing group.</source>
          <target state="translated">&lt;em&gt;보강&lt;/em&gt; -이 그룹은 중괄호 동봉 자리 표시 자 이름과 일치; 캡처 그룹에 분리 문자 나 중괄호를 포함해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0da633a07e4fc6a29a8fecab56492eefeb8daea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;braceidpattern&lt;/em&gt; &amp;ndash; This is like &lt;em&gt;idpattern&lt;/em&gt; but describes the pattern for braced placeholders. Defaults to &lt;code&gt;None&lt;/code&gt; which means to fall back to &lt;em&gt;idpattern&lt;/em&gt; (i.e. the same pattern is used both inside and outside braces). If given, this allows you to define different patterns for braced and unbraced placeholders.</source>
          <target state="translated">&lt;em&gt;braceidpattern&lt;/em&gt; &amp;ndash; 이것은 &lt;em&gt;idpattern&lt;/em&gt; 과 &lt;em&gt;유사&lt;/em&gt; 하지만 &lt;em&gt;괄호&lt;/em&gt; 자리 표시 자의 패턴을 설명합니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 으로 설정되어 &lt;em&gt;idpattern&lt;/em&gt; 으로 &lt;em&gt;대체됩니다&lt;/em&gt; (즉, 동일한 패턴이 중괄호 내부와 외부에 모두 사용됨). 주어진 경우이를 통해 가새 및 가새 자리 표시 자에 대해 서로 다른 패턴을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6466d612569bc5db10c01f86f621eb34abe0e9f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6c264658fa91b0fee52204e72b9795ed6e0a921" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffer&lt;/em&gt; must be a writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. If &lt;em&gt;offset&lt;/em&gt; is given then the message will be written into the buffer from that position. Offset must be a non-negative integer less than the length of &lt;em&gt;buffer&lt;/em&gt; (in bytes).</source>
          <target state="translated">&lt;em&gt;buffer&lt;/em&gt; 는 쓰기 가능한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​비슷한 객체&lt;/a&gt; 여야 합니다 . 경우 &lt;em&gt;오프셋&lt;/em&gt; 지정되고있는 메시지는 그 위치에서 상기 버퍼에 기록한다. 오프셋은 &lt;em&gt;버퍼&lt;/em&gt; 길이 (바이트) 보다 작은 음이 아닌 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="66765ebb3b3a170fecb62bcb4069dcbfba2619ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffer&lt;/em&gt; must be a writable &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. If &lt;em&gt;offset&lt;/em&gt; is given then the message will be written into the buffer from that position. Offset must be a non-negative integer less than the length of &lt;em&gt;buffer&lt;/em&gt; (in bytes).</source>
          <target state="translated">&lt;em&gt;buffer&lt;/em&gt; 는 쓰기 가능한 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트 류 객체&lt;/a&gt; 여야 합니다 . 경우 &lt;em&gt;오프셋&lt;/em&gt; 지정되고있는 메시지는 그 위치에서 상기 버퍼에 기록한다. 오프셋은 &lt;em&gt;버퍼&lt;/em&gt; 길이 (바이트) 보다 작은 음이 아닌 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="dfd8755cb3adfd0bf31281754c59beb88315d556" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffering&lt;/em&gt; has the same meaning as for the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. It defaults to -1 which means that the default buffer size will be used.</source>
          <target state="translated">&lt;em&gt;버퍼링&lt;/em&gt; 은 내장 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 함수 와 같은 의미 입니다. 기본값은 -1이며 기본 버퍼 크기가 사용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ee13272464bebd9207ef626cf39c8f156a64905a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffering&lt;/em&gt; is an optional integer used to set the buffering policy. Pass 0 to switch buffering off (only allowed in binary mode), 1 to select line buffering (only usable in text mode), and an integer &amp;gt; 1 to indicate the size in bytes of a fixed-size chunk buffer. When no &lt;em&gt;buffering&lt;/em&gt; argument is given, the default buffering policy works as follows:</source>
          <target state="translated">&lt;em&gt;버퍼링&lt;/em&gt; 은 버퍼링 정책을 설정하는 데 사용되는 선택적 정수입니다. 버퍼링을 끄려면 0을 전달하고 (바이너리 모드에서만 허용) 1은 라인 버퍼링 (텍스트 모드에서만 사용 가능)을 선택하고 정수&amp;gt; 1은 고정 크기 청크 버퍼의 크기를 바이트 단위로 나타냅니다. &lt;em&gt;버퍼링&lt;/em&gt; 인수가 제공 되지 않으면 기본 버퍼링 정책은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b25376ac14ba5be1e597b4b21f9046297843a701" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufsize&lt;/em&gt; is the initial size of the buffer used to hold decompressed data. If more space is required, the buffer size will be increased as needed, so you don&amp;rsquo;t have to get this value exactly right; tuning it will only save a few calls to &lt;code&gt;malloc()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;bufsize&lt;/em&gt; 는 압축 해제 된 데이터를 보유하는 데 사용되는 버퍼의 초기 크기입니다. 더 많은 공간이 필요한 경우 필요에 따라 버퍼 크기가 증가하므로이 값을 정확하게 얻을 필요는 없습니다. 이를 조정하면 &lt;code&gt;malloc()&lt;/code&gt; 대한 몇 번의 호출 만 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="03e5fc810b2a59d6b8bb8c9f30d800d5676a83be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufsize&lt;/em&gt; will be supplied as the corresponding argument to the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function when creating the stdin/stdout/stderr pipe file objects:</source>
          <target state="translated">&lt;em&gt;budin&lt;/em&gt; 은 stdin / stdout / stderr 파이프 파일 객체를 생성 할 때 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 함수에 해당하는 인수로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="00c79e1eb639006313b1117912054c09bcdfd9dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bztar&lt;/em&gt;: bzip2&amp;rsquo;ed tar-file (if the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="translated">&lt;em&gt;bztar&lt;/em&gt; : bzip2의 tar 파일 ( &lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우)</target>
        </trans-unit>
        <trans-unit id="e2381d1a9682bbfc56aef04f15c80beec7179a5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cache_tag&lt;/em&gt; is the tag used by the import machinery in the filenames of cached modules. By convention, it would be a composite of the implementation&amp;rsquo;s name and version, like &lt;code&gt;'cpython-33'&lt;/code&gt;. However, a Python implementation may use some other value if appropriate. If &lt;code&gt;cache_tag&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt;, it indicates that module caching should be disabled.</source>
          <target state="translated">&lt;em&gt;cache_tag&lt;/em&gt; 는 임포트 기계가 캐시 된 모듈의 파일 이름에서 사용하는 태그입니다. 관례 상, 그것은 &lt;code&gt;'cpython-33'&lt;/code&gt; 과 같은 구현의 이름과 버전의 합성 일 것 입니다. 그러나 파이썬 구현은 적절한 경우 다른 값을 사용할 수 있습니다. &lt;code&gt;cache_tag&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 으로 설정 되면 모듈 캐싱을 비활성화해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="51abb8a198c83a3a855864f04f782c3ba6f1211e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cafile&lt;/em&gt;, &lt;em&gt;capath&lt;/em&gt;, &lt;em&gt;cadata&lt;/em&gt; represent optional CA certificates to trust for certificate verification, as in &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt;. If all three are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, this function can choose to trust the system&amp;rsquo;s default CA certificates instead.</source>
          <target state="translated">&lt;em&gt;cafile&lt;/em&gt; , &lt;em&gt;capath&lt;/em&gt; , &lt;em&gt;cadata&lt;/em&gt; 는 &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt; &lt;/a&gt; 와 같이 인증서 확인을 위해 신뢰할 수있는 선택적 CA 인증서를 나타냅니다 . 세 가지 모두가 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이면이 기능은 시스템의 기본 CA 인증서를 대신 신뢰하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b618eb00ac4e5f3d3b8b8d42ad85c6916e087398" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callable&lt;/em&gt; is a callable used for creating objects for this type identifier. If a manager instance will be connected to the server using the &lt;a href=&quot;#multiprocessing.managers.BaseManager.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; method, or if the &lt;em&gt;create_method&lt;/em&gt; argument is &lt;code&gt;False&lt;/code&gt; then this can be left as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;callable&lt;/em&gt; 은이 유형 식별자에 대한 객체를 만드는 데 사용되는 &lt;em&gt;callable&lt;/em&gt; 입니다. &lt;a href=&quot;#multiprocessing.managers.BaseManager.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 관리자 인스턴스가 서버에 연결 되거나 &lt;em&gt;create_method&lt;/em&gt; 인수가 &lt;code&gt;False&lt;/code&gt; 인 경우 &lt;code&gt;None&lt;/code&gt; 으로 남을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecc87e3cb2c13403210fc665017862e8b7c1978a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callback&lt;/em&gt; will be called exactly once. If two callbacks are scheduled for exactly the same time, the order in which they are called is undefined.</source>
          <target state="translated">&lt;em&gt;콜백&lt;/em&gt; 은 정확히 한 번만 호출됩니다. 두 개의 콜백이 정확히 같은 시간으로 예약 된 경우 호출되는 순서는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2580f22c5141228c179d335f3770843471e45b30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;category&lt;/em&gt; is a class (a subclass of &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt;) of which the warning category must be a subclass in order to match.</source>
          <target state="translated">&lt;em&gt;category&lt;/em&gt; 는 경고 범주가 일치하기 위해 하위 클래스 여야 하는 클래스 ( &lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; 의 하위 클래스 )입니다.</target>
        </trans-unit>
        <trans-unit id="013ce11adb0c561ef7c4921cb734357d7864de5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charjunk&lt;/em&gt;: A function that accepts a character (a string of length 1), and returns if the character is junk, or false if not. The default is module-level function &lt;a href=&quot;#difflib.IS_CHARACTER_JUNK&quot;&gt;&lt;code&gt;IS_CHARACTER_JUNK()&lt;/code&gt;&lt;/a&gt;, which filters out whitespace characters (a blank or tab; it&amp;rsquo;s a bad idea to include newline in this!).</source>
          <target state="translated">&lt;em&gt;charjunk&lt;/em&gt; : 문자 (길이 1의 문자열)를 받아들이고 문자가 정크인지 아닌지를 반환하는 함수. 기본값은 모듈 수준 함수 &lt;a href=&quot;#difflib.IS_CHARACTER_JUNK&quot;&gt; &lt;code&gt;IS_CHARACTER_JUNK()&lt;/code&gt; &lt;/a&gt; . 공백 문자 (공백 또는 탭;이 줄 바꿈을 포함하는 것은 좋지 않습니다!)를 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="9ad7ac05985510c1d4b8b641ca52a906bc2a867d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charjunk&lt;/em&gt;: A function that accepts a single character argument (a string of length 1), and returns true if the character is junk. The default is &lt;code&gt;None&lt;/code&gt;, meaning that no character is considered junk.</source>
          <target state="translated">&lt;em&gt;charjunk&lt;/em&gt; : 단일 문자 인수 (길이 1의 문자열)를 허용하고 문자가 정크 인 경우 true를 반환하는 함수입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 으로 , 문자가 정크 문자로 간주되지 않음 을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d35bd95604bca45b1a784d3f1172f3c62ad89e84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charset&lt;/em&gt; is the canonical name of a character set. &lt;em&gt;codecname&lt;/em&gt; is the name of a Python codec, as appropriate for the second argument to the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;캐릭터 세트는&lt;/em&gt; 문자 세트의 정식 이름입니다. &lt;em&gt;codecname&lt;/em&gt; 은 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; 메소드 에 대한 두 번째 인수에 적합한 Python 코덱의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4204a63058ef8cd46485ef9d7a1d42aa0514b772" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charset&lt;/em&gt; is the input character set, and must be the canonical name of a character set.</source>
          <target state="translated">&lt;em&gt;문자 세트&lt;/em&gt; 는 입력 문자 세트이며 문자 세트의 정식 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="93b6c6da2c816004128df8dc1be71552cf21f27c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;classCommand&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;classCommand&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8617465205129a8836ef965d261f671c8934d65" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;client&lt;/em&gt; / &lt;strong&gt;server&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;클라이언트&lt;/em&gt; / &lt;strong&gt;서버&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3b8c81a3f58e6974f384dfc56fd177f23cb80c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;client_connected_cb&lt;/em&gt; can be a plain callable or a &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;coroutine function&lt;/a&gt;; if it is a coroutine function, it will be automatically scheduled as a &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;client_connected_cb&lt;/em&gt; 는 일반 호출 가능 또는 &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;코 루틴 함수일 수 있습니다&lt;/a&gt; . 코 루틴 기능인 경우 &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; 으로 자동 예약됩니다 .</target>
        </trans-unit>
        <trans-unit id="2cd1b9087ccf6e5c539dbb6104203904e480be77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;comment_prefixes&lt;/em&gt;, default value: &lt;code&gt;('#', ';')&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;comment_prefixes&lt;/em&gt; , 기본값 : &lt;code&gt;('#', ';')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="028a685ed4d8a9959eab9978e300ead31dd9791d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compileflags&lt;/em&gt; gives the set of flags that should be used by the Python compiler when running the examples. If not specified, then it will default to the set of future-import flags that apply to &lt;em&gt;globs&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;compileflags&lt;/em&gt; 는 예제를 실행할 때 Python 컴파일러가 사용해야하는 플래그 세트를 제공합니다. 지정하지 않으면 &lt;em&gt;globs에&lt;/em&gt; 적용되는 미래 가져 오기 플래그 세트가 기본값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdeb3f853e7c26e447612c2814164e25906d9133" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compression&lt;/em&gt; is the ZIP compression method to use when writing the archive, and should be &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt;; unrecognized values will cause &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; to be raised. If &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt; is specified but the corresponding module (&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt;) is not available, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. The default is &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;compression&lt;/em&gt; 은 아카이브를 작성할 때 사용할 ZIP 압축 방법이며 &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt; &lt;code&gt;ZIP_STORED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt; &lt;code&gt;ZIP_DEFLATED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt; &lt;code&gt;ZIP_BZIP2&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt; &lt;code&gt;ZIP_LZMA&lt;/code&gt; 여야합니다&lt;/a&gt; . 인식 할 수없는 값은 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다. 경우 &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt; &lt;code&gt;ZIP_DEFLATED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt; &lt;code&gt;ZIP_BZIP2&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt; &lt;code&gt;ZIP_LZMA&lt;/code&gt; 가&lt;/a&gt; 지정되었지만 해당 모듈 (IS &lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;bz2#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt; )를 사용할 수없는, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 에가&lt;/a&gt; 상승한다. 기본값은 &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt; &lt;code&gt;ZIP_STORED&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d12ab70d23d8d06a197777944c953ea981b19981" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compresslevel&lt;/em&gt;, if given, must be an integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt;. The default is &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;compresslevel&lt;/em&gt; 이 지정되면 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;9&lt;/code&gt; 사이의 정수 여야합니다 . 기본값은 &lt;code&gt;9&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3834a03002b14c25ad40ff313034219b7a943f01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;computer_name&lt;/em&gt; is the name of the remote computer, of the form &lt;code&gt;r&quot;\\computername&quot;&lt;/code&gt;. If &lt;code&gt;None&lt;/code&gt;, the local computer is used.</source>
          <target state="translated">&lt;em&gt;computer_name&lt;/em&gt; 은 &lt;code&gt;r&quot;\\computername&quot;&lt;/code&gt; 형식의 원격 컴퓨터 이름입니다 . 경우 &lt;code&gt;None&lt;/code&gt; , 로컬 컴퓨터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f7f423113b649744bd8bda92d9ff58211d904574" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;conn&lt;/em&gt; and &lt;em&gt;addr&lt;/em&gt; are as per the instance variables described below.</source>
          <target state="translated">&lt;em&gt;conn&lt;/em&gt; 및 &lt;em&gt;addr&lt;/em&gt; 는 아래 설명 된 인스턴스 변수에 따라 &lt;em&gt;다릅니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="22923effb7a9752158b1df520a85659b837d4194" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;content&lt;/em&gt; may be a string or bytes instance; the &lt;code&gt;expat&lt;/code&gt; reader module always produces strings.</source>
          <target state="translated">&lt;em&gt;컨텐츠&lt;/em&gt; 는 문자열 또는 바이트 인스턴스 일 수 있습니다. &lt;code&gt;expat&lt;/code&gt; 리더 모듈은 항상 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f3b8ce1ec54f140ba9d5813f7620c6af6fba4ca8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; and &lt;em&gt;numlines&lt;/em&gt; are both optional keyword arguments. Set &lt;em&gt;context&lt;/em&gt; to &lt;code&gt;True&lt;/code&gt; when contextual differences are to be shown, else the default is &lt;code&gt;False&lt;/code&gt; to show the full files. &lt;em&gt;numlines&lt;/em&gt; defaults to &lt;code&gt;5&lt;/code&gt;. When &lt;em&gt;context&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;&lt;em&gt;numlines&lt;/em&gt; controls the number of context lines which surround the difference highlights. When &lt;em&gt;context&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;&lt;em&gt;numlines&lt;/em&gt; controls the number of lines which are shown before a difference highlight when using the &amp;ldquo;next&amp;rdquo; hyperlinks (setting to zero would cause the &amp;ldquo;next&amp;rdquo; hyperlinks to place the next difference highlight at the top of the browser without any leading context).</source>
          <target state="translated">&lt;em&gt;context&lt;/em&gt; 및 &lt;em&gt;numlines&lt;/em&gt; 는 모두 선택적 키워드 인수입니다. 컨텍스트 차이가 표시 될 때 &lt;em&gt;컨텍스트&lt;/em&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 . 그렇지 않으면 전체 파일을 표시하려면 기본값이 &lt;code&gt;False&lt;/code&gt; 입니다. &lt;em&gt;numlines의&lt;/em&gt; 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다. 경우 &lt;em&gt;컨텍스트&lt;/em&gt; 인 &lt;code&gt;True&lt;/code&gt; &lt;em&gt;numlines의&lt;/em&gt; 차이 하이라이트 둘러싸 컨텍스트 라인의 수를 제어한다. 때 &lt;em&gt;컨텍스트&lt;/em&gt; 입니다 &lt;code&gt;False&lt;/code&gt; &lt;em&gt;numlines&lt;/em&gt; &quot;다음&quot;하이퍼 링크를 사용할 때 차이 강조 표시 전에 표시되는 줄 수를 제어합니다 (0으로 설정하면 &quot;다음&quot;하이퍼 링크가 선행 컨텍스트없이 브라우저 상단에 다음 차이 강조 표시를 배치 함).</target>
        </trans-unit>
        <trans-unit id="03bbf36e10dbf9d3b3c6f6ed1881ad3ddd219b30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; can be used to specify the context used for starting the worker processes. Usually a pool is created using the function &lt;code&gt;multiprocessing.Pool()&lt;/code&gt; or the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool()&lt;/code&gt;&lt;/a&gt; method of a context object. In both cases &lt;em&gt;context&lt;/em&gt; is set appropriately.</source>
          <target state="translated">&lt;em&gt;컨텍스트&lt;/em&gt; 는 작업자 프로세스를 시작하는 데 사용되는 컨텍스트를 지정하는 데 사용될 수 있습니다. 일반적으로 풀은 &lt;code&gt;multiprocessing.Pool()&lt;/code&gt; 함수 또는 컨텍스트 객체 의 &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 생성됩니다. 두 경우 모두 &lt;em&gt;컨텍스트&lt;/em&gt; 가 적절하게 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f33053e53ce5cc387bd36697c91adba09e078f05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; is a &lt;code&gt;dict&lt;/code&gt; object containing the following keys (new keys may be introduced in future Python versions):</source>
          <target state="translated">&lt;em&gt;context&lt;/em&gt; 는 다음 키를 포함 하는 &lt;code&gt;dict&lt;/code&gt; 객체입니다 (새로운 Python이 향후 Python 버전에 도입 될 수 있음).</target>
        </trans-unit>
        <trans-unit id="36217babb50e45b83709379e8cb7a88dc5d062a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; parameter has the same meaning as in &lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt;&lt;code&gt;call_exception_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;context&lt;/em&gt; 매개 변수는 &lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt; &lt;code&gt;call_exception_handler()&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="0c68375f42b4f0af5a0222a36bd09ebe60baf0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; parameter is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">&lt;em&gt;context&lt;/em&gt; 매개 변수는 SSL 구성 옵션, 인증서 및 개인 키를 단일 (잠재적으로 오래 지속되는) 구조로 번들링 할 수 있는 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt; 객체입니다. 모범 사례는 &lt;a href=&quot;ssl#ssl-security&quot;&gt;보안 고려 사항&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="e3c6fa7431f405ed39264c1a56f690787a376298" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;converters&lt;/em&gt;, default value: not set</source>
          <target state="translated">&lt;em&gt;변환기&lt;/em&gt; , 기본값 : 설정되지 않음</target>
        </trans-unit>
        <trans-unit id="f50e64dcc1738a6d15f4981400e7b8b9bda5fefa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cookie&lt;/em&gt; is a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;request&lt;/em&gt; is an object implementing the interface defined by the documentation for &lt;a href=&quot;#http.cookiejar.CookieJar.add_cookie_header&quot;&gt;&lt;code&gt;CookieJar.add_cookie_header()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;cookie&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스입니다. &lt;em&gt;request&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.CookieJar.add_cookie_header&quot;&gt; &lt;code&gt;CookieJar.add_cookie_header()&lt;/code&gt; &lt;/a&gt; 문서에서 정의한 인터페이스를 구현하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="b988754a0324bf98332449b8b00baa2aed8372b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cookie&lt;/em&gt; is a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;request&lt;/em&gt; is an object implementing the interface defined by the documentation for &lt;a href=&quot;#http.cookiejar.CookieJar.extract_cookies&quot;&gt;&lt;code&gt;CookieJar.extract_cookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;cookie&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt; 인스턴스입니다. &lt;em&gt;request&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.CookieJar.extract_cookies&quot;&gt; &lt;code&gt;CookieJar.extract_cookies()&lt;/code&gt; &lt;/a&gt; 문서에서 정의한 인터페이스를 구현하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="1f9b0c5818f9139d53ceab6593a59b37f13d3ac6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;create&lt;/em&gt; controls whether a new shared memory block is created (&lt;code&gt;True&lt;/code&gt;) or an existing shared memory block is attached (&lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;create&lt;/em&gt; 는 새로운 공유 메모리 블록이 생성되는지 ( &lt;code&gt;True&lt;/code&gt; ) 또는 기존 공유 메모리 블록이 연결 되는지 ( &lt;code&gt;False&lt;/code&gt; )를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="5e34b28379b51f0b0dfb8616d502c729b60ee01e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;create_method&lt;/em&gt; determines whether a method should be created with name &lt;em&gt;typeid&lt;/em&gt; which can be used to tell the server process to create a new shared object and return a proxy for it. By default it is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;create_method&lt;/em&gt; 는 서버 프로세스에 새 공유 객체를 생성하고 프록시를 반환하도록 지시하는 데 사용할 수있는 name &lt;em&gt;typeid&lt;/em&gt; 로 메소드를 작성 &lt;em&gt;해야하는지&lt;/em&gt; 여부를 결정합니다 . 기본적으로 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0a8e393053c92d1da949efe5f16d3642d7dd968d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab904f54d24142b11fe5b86bae3bc618645622de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; is a non-empty bytes object containing the received data.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; 는 수신 된 데이터를 포함하는 비어 있지 않은 바이트 객체입니다.</target>
        </trans-unit>
        <trans-unit id="029d9f8184c71718da088170593ba71f47fd70f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be a record describing the new data.</source>
          <target state="translated">&lt;em&gt;데이터&lt;/em&gt; 는 새 데이터를 설명하는 레코드 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8bd2883f88fc08fb0e184aa42c3e758d5a84d795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be an object specifying additional data to be sent to the server, or &lt;code&gt;None&lt;/code&gt; if no such data is needed. See &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; 는 서버로 보낼 추가 데이터를 지정하는 객체이거나 그러한 데이터가 필요하지 않은 경우 &lt;code&gt;None&lt;/code&gt; 이어야 합니다. 자세한 내용은 &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="15c15432051028a1b2fabf2519610396a5a68546" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be an object specifying additional data to send to the server, or &lt;code&gt;None&lt;/code&gt; if no such data is needed. Currently HTTP requests are the only ones that use &lt;em&gt;data&lt;/em&gt;. The supported object types include bytes, file-like objects, and iterables of bytes-like objects. If no &lt;code&gt;Content-Length&lt;/code&gt; nor &lt;code&gt;Transfer-Encoding&lt;/code&gt; header field has been provided, &lt;a href=&quot;#urllib.request.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt; will set these headers according to the type of &lt;em&gt;data&lt;/em&gt;. &lt;code&gt;Content-Length&lt;/code&gt; will be used to send bytes objects, while &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1 will be used to send files and other iterables.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; 는 서버로 보낼 추가 데이터를 지정하는 객체이거나 그러한 데이터가 필요하지 않은 경우 &lt;code&gt;None&lt;/code&gt; 이어야 합니다. 현재 HTTP 요청은 &lt;em&gt;data&lt;/em&gt; 를 사용하는 유일한 요청 입니다. 지원되는 오브젝트 유형에는 바이트, 파일 유사 오브젝트 및 반복 가능 바이트 유사 오브젝트가 포함됩니다. 어떤 경우 &lt;code&gt;Content-Length&lt;/code&gt; 도 &lt;code&gt;Transfer-Encoding&lt;/code&gt; 헤더 필드가 제공되지 않은, &lt;a href=&quot;#urllib.request.HTTPHandler&quot;&gt; &lt;code&gt;HTTPHandler&lt;/code&gt; &lt;/a&gt; 의 종류에 따라 이러한 헤더를 설정합니다 &lt;em&gt;데이터&lt;/em&gt; . &lt;code&gt;Content-Length&lt;/code&gt; 는 바이트 오브젝트를 전송하는 데 사용되는 반면, &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7230에&lt;/strong&gt;&lt;/a&gt; 지정된대로 청크 섹션 3.3.1은 파일 및 기타 반복 가능 파일을 전송하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="02d329ee1a9ceab13d0c8a8fab3a104995e27760" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;: directory for data files.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; : 데이터 파일의 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="06970e08bffa697a291a2e244b40275186536c38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;: initial chunk of data to hash, which must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. It can be passed only as positional argument.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; : 해시 할 데이터의 초기 청크 . &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​같은 객체&lt;/a&gt; 여야 합니다 . 위치 인수로만 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecaa92f59dbfb35713557fb5dfd83aa86e0dbde0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;: initial chunk of data to hash, which must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. It can be passed only as positional argument.</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt; : 해시 할 데이터의 초기 청크 . &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 여야 합니다 . 위치 인수로만 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b2d36e372d90dd9c463c2e4ed07851997129306" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data_size_limit&lt;/em&gt; specifies the maximum number of bytes that will be accepted in a &lt;code&gt;DATA&lt;/code&gt; command. A value of &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; means no limit.</source>
          <target state="translated">&lt;em&gt;data_size_limit&lt;/em&gt; 는 &lt;code&gt;DATA&lt;/code&gt; 명령 에서 허용 할 최대 바이트 수를 지정합니다 . &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;0&lt;/code&gt; 의 값은 제한 이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="288e085fdc1c6e9a678da8d5bc5dc3954aaf3860" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;database&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the database file to be opened. You can use &lt;code&gt;&quot;:memory:&quot;&lt;/code&gt; to open a database connection to a database that resides in RAM instead of on disk.</source>
          <target state="translated">&lt;em&gt;데이터베이스&lt;/em&gt; 는 열려는 데이터베이스 파일의 경로 이름 (절대 또는 현재 작업 디렉토리에 상대적)을 제공 하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체&lt;/a&gt; 입니다. &lt;code&gt;&quot;:memory:&quot;&lt;/code&gt; 를 사용하여 디스크 대신 RAM에있는 데이터베이스에 대한 데이터베이스 연결을 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b0f6ee9fde89f22011a3dc73997f84331cfaf76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;database&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the database file to be opened. You can use &lt;code&gt;&quot;:memory:&quot;&lt;/code&gt; to open a database connection to a database that resides in RAM instead of on disk.</source>
          <target state="translated">&lt;em&gt;database&lt;/em&gt; 는 열릴 데이터베이스 파일의 경로명 (절대 또는 현재 작업 디렉토리에 상대적)을 제공하는 경로 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;류 객체&lt;/a&gt; 입니다. &lt;code&gt;&quot;:memory:&quot;&lt;/code&gt; 를 사용하여 디스크 대신 RAM에있는 데이터베이스에 대한 데이터베이스 연결을 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="108a45e45cf015e79404078efbd72adb47324575" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date1&lt;/em&gt; is considered less than &lt;em&gt;date2&lt;/em&gt; when &lt;em&gt;date1&lt;/em&gt; precedes &lt;em&gt;date2&lt;/em&gt; in time. (4)</source>
          <target state="translated">&lt;em&gt;날짜 1은&lt;/em&gt; 이하 간주됩니다 &lt;em&gt;DATE2&lt;/em&gt; 때 &lt;em&gt;날짜 1&lt;/em&gt; 선행이 &lt;em&gt;DATE2&lt;/em&gt; 시간에. (4)</target>
        </trans-unit>
        <trans-unit id="d311dc97cc4c69c426224ee0c36a4d01a8dbbd27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date2&lt;/em&gt; is &lt;code&gt;timedelta.days&lt;/code&gt; days removed from &lt;em&gt;date1&lt;/em&gt;. (1)</source>
          <target state="translated">&lt;em&gt;날짜 2는&lt;/em&gt; 이다 &lt;code&gt;timedelta.days&lt;/code&gt; 의 제거 일 &lt;em&gt;날짜 1&lt;/em&gt; . (1)</target>
        </trans-unit>
        <trans-unit id="af9ccdca0a208c28ac718680e7247c31b44bbee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date2&lt;/em&gt; is moved forward in time if &lt;code&gt;timedelta.days &amp;gt; 0&lt;/code&gt;, or backward if &lt;code&gt;timedelta.days &amp;lt; 0&lt;/code&gt;. Afterward &lt;code&gt;date2 - date1 == timedelta.days&lt;/code&gt;. &lt;code&gt;timedelta.seconds&lt;/code&gt; and &lt;code&gt;timedelta.microseconds&lt;/code&gt; are ignored. &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;date2.year&lt;/code&gt; would be smaller than &lt;a href=&quot;#datetime.MINYEAR&quot;&gt;&lt;code&gt;MINYEAR&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;#datetime.MAXYEAR&quot;&gt;&lt;code&gt;MAXYEAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;날짜 2는&lt;/em&gt; 시간에 있다면 전진 &lt;code&gt;timedelta.days &amp;gt; 0&lt;/code&gt; , 또는 역방향의 경우 &lt;code&gt;timedelta.days &amp;lt; 0&lt;/code&gt; . 이후 &lt;code&gt;date2 - date1 == timedelta.days&lt;/code&gt; . &lt;code&gt;timedelta.seconds&lt;/code&gt; 및 &lt;code&gt;timedelta.microseconds&lt;/code&gt; 는 무시됩니다. &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; 는&lt;/a&gt; 경우 발생 &lt;code&gt;date2.year&lt;/code&gt; 는 보다 작은 것 &lt;a href=&quot;#datetime.MINYEAR&quot;&gt; &lt;code&gt;MINYEAR&lt;/code&gt; &lt;/a&gt; 같거나 더 큰 &lt;a href=&quot;#datetime.MAXYEAR&quot;&gt; &lt;code&gt;MAXYEAR&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68f4f58074cfd9c65dcbc2b924b8405ba9d6e2e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;datefmt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;datefmt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c9c7d6fe2445b24fc051a68695e72cb9d58b910" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;datetime1&lt;/em&gt; is considered less than &lt;em&gt;datetime2&lt;/em&gt; when &lt;em&gt;datetime1&lt;/em&gt; precedes &lt;em&gt;datetime2&lt;/em&gt; in time.</source>
          <target state="translated">&lt;em&gt;datetime1은&lt;/em&gt; 이하 간주됩니다 &lt;em&gt;DATETIME2&lt;/em&gt; 때 &lt;em&gt;datetime1&lt;/em&gt; 선행이 &lt;em&gt;DATETIME2&lt;/em&gt; 시간에.</target>
        </trans-unit>
        <trans-unit id="af90badb3e619635841ef142a85d6f1240bad962" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dateutil.tz&lt;/em&gt; library brings the &lt;em&gt;IANA timezone database&lt;/em&gt; (also known as the Olson database) to Python, and its usage is recommended.</source>
          <target state="translated">&lt;em&gt;dateutil.tz&lt;/em&gt; 라이브러리는 &lt;em&gt;IANA 시간대 데이터베이스&lt;/em&gt; (Olson 데이터베이스라고도 함)를 Python에 제공하므로 사용법이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="0809765801c235c113f52aef9433616da84803d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;debug&lt;/em&gt; can be set from &lt;code&gt;0&lt;/code&gt; (no debug messages) up to &lt;code&gt;3&lt;/code&gt; (all debug messages). The messages are written to &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;디버그&lt;/em&gt; 는 &lt;code&gt;0&lt;/code&gt; (디버그 메시지 없음)에서 &lt;code&gt;3&lt;/code&gt; (모든 디버그 메시지) 까지 설정할 수 있습니다 . 메시지는 &lt;code&gt;sys.stderr&lt;/code&gt; 에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="5959e20259956b2e9c74c11d9b0c49550921b5dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;decode_data&lt;/em&gt; specifies whether the data portion of the SMTP transaction should be decoded using UTF-8. The default is &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="translated">&lt;em&gt;decode_data&lt;/em&gt; 는 SMTP 트랜잭션의 데이터 부분을 UTF-8을 사용하여 디코딩해야하는지 여부를 지정합니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. &lt;em&gt;decode_data&lt;/em&gt; 와 &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 을 동시에 &lt;code&gt;True&lt;/code&gt; 로 설정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4d008e5684bfb6b10e583cbfbd0737747519e3d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;decode_data&lt;/em&gt; specifies whether the data portion of the SMTP transaction should be decoded using UTF-8. When &lt;em&gt;decode_data&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default), the server advertises the &lt;code&gt;8BITMIME&lt;/code&gt; extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6152.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6152&lt;/strong&gt;&lt;/a&gt;), accepts the &lt;code&gt;BODY=8BITMIME&lt;/code&gt; parameter to the &lt;code&gt;MAIL&lt;/code&gt; command, and when present passes it to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;kwargs['mail_options']&lt;/code&gt; list. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="translated">&lt;em&gt;decode_data&lt;/em&gt; 는 SMTP 트랜잭션의 데이터 부분을 UTF-8을 사용하여 디코딩해야하는지 여부를 지정합니다. 경우 &lt;em&gt;decode_data가&lt;/em&gt; 인 &lt;code&gt;False&lt;/code&gt; (기본), 서버는 보급 &lt;code&gt;8BITMIME&lt;/code&gt; 의 확장자 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc6152.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;6152 RFC를&lt;/strong&gt;&lt;/a&gt; ,)를 수용 &lt;code&gt;BODY=8BITMIME&lt;/code&gt; 를 받는 파라미터 &lt;code&gt;MAIL&lt;/code&gt; 명령 때까지 본 패스를 &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt; &lt;code&gt;process_message()&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;kwargs['mail_options']&lt;/code&gt; 리스트. &lt;em&gt;decode_data&lt;/em&gt; 와 &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 을 동시에 &lt;code&gt;True&lt;/code&gt; 로 설정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8a4ee5e50941112e97d0af5f4f06d010efefea76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default&lt;/em&gt; is the value to return if the information is not available, or if the transport does not support querying it with the given third-party event loop implementation or on the current platform.</source>
          <target state="translated">&lt;em&gt;기본값&lt;/em&gt; 은 정보를 사용할 수 없거나 전송이 지정된 타사 이벤트 루프 구현 또는 현재 플랫폼에서 정보 조회를 지원하지 않는 경우 리턴 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="c0cc3d5bc9b97b3d2246ebad4077dbaf7aeb782a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default_section&lt;/em&gt;, default value: &lt;code&gt;configparser.DEFAULTSECT&lt;/code&gt; (that is: &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;em&gt;default_section&lt;/em&gt; , 기본값 : &lt;code&gt;configparser.DEFAULTSECT&lt;/code&gt; (즉, &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2e5e50eaa86a85c4954d4f8f3217df664fe53cf6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;defaults&lt;/em&gt; can be &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; of default values. Since fields with a default value must come after any fields without a default, the &lt;em&gt;defaults&lt;/em&gt; are applied to the rightmost parameters. For example, if the fieldnames are &lt;code&gt;['x', 'y', 'z']&lt;/code&gt; and the defaults are &lt;code&gt;(1, 2)&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be a required argument, &lt;code&gt;y&lt;/code&gt; will default to &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; will default to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;기본값&lt;/em&gt; 은 &lt;code&gt;None&lt;/code&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;반복 가능한 &lt;/a&gt;&lt;em&gt;기본값 일&lt;/em&gt; 수 있습니다 . 기본값이있는 필드는 &lt;em&gt;기본값&lt;/em&gt; 이 없는 필드 뒤에 와야하므로 &lt;em&gt;기본값&lt;/em&gt; 은 가장 오른쪽의 매개 변수에 적용됩니다. 예를 들어, 필드 이름이 &lt;code&gt;['x', 'y', 'z']&lt;/code&gt; 이고 기본값이 &lt;code&gt;(1, 2)&lt;/code&gt; 인 경우 &lt;code&gt;x&lt;/code&gt; 는 필수 인수이고 &lt;code&gt;y&lt;/code&gt; 는 기본적으로 &lt;code&gt;1&lt;/code&gt; 이며 &lt;code&gt;z&lt;/code&gt; 는 기본적으로 &lt;code&gt;2&lt;/code&gt; 입니다. .</target>
        </trans-unit>
        <trans-unit id="4e9dc0f5439f978e872737fe3e9169f5b72cee29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;defaults&lt;/em&gt; can be &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; of default values. Since fields with a default value must come after any fields without a default, the &lt;em&gt;defaults&lt;/em&gt; are applied to the rightmost parameters. For example, if the fieldnames are &lt;code&gt;['x', 'y', 'z']&lt;/code&gt; and the defaults are &lt;code&gt;(1, 2)&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be a required argument, &lt;code&gt;y&lt;/code&gt; will default to &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; will default to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;기본값&lt;/em&gt; 은 &lt;code&gt;None&lt;/code&gt; 또는 &lt;em&gt;기본값&lt;/em&gt; 의 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;반복 가능일&lt;/a&gt; 수 있습니다 . 기본값이있는 필드는 &lt;em&gt;기본값&lt;/em&gt; 이 없는 필드 뒤에 와야 하므로 가장 오른쪽 매개 변수에 &lt;em&gt;기본값&lt;/em&gt; 이 적용됩니다. 예를 들어 필드 이름이 &lt;code&gt;['x', 'y', 'z']&lt;/code&gt; 이고 기본값이 &lt;code&gt;(1, 2)&lt;/code&gt; 인 경우 &lt;code&gt;x&lt;/code&gt; 는 필수 인수이고 &lt;code&gt;y&lt;/code&gt; 는 기본값이 &lt;code&gt;1&lt;/code&gt; 이고 &lt;code&gt;z&lt;/code&gt; 는 기본값이 &lt;code&gt;2&lt;/code&gt; 입니다. .</target>
        </trans-unit>
        <trans-unit id="d9326606041cfb2059853887dbebb585547a8b58" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;defaults&lt;/em&gt;, default value: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;기본값&lt;/em&gt; , 기본값 : &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b6ccd5b8bf978826a159aaa04c3fbdeb70d296a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;delimiter&lt;/em&gt; &amp;ndash; This is the literal string describing a placeholder introducing delimiter. The default value is &lt;code&gt;$&lt;/code&gt;. Note that this should &lt;em&gt;not&lt;/em&gt; be a regular expression, as the implementation will call &lt;a href=&quot;re#re.escape&quot;&gt;&lt;code&gt;re.escape()&lt;/code&gt;&lt;/a&gt; on this string as needed. Note further that you cannot change the delimiter after class creation (i.e. a different delimiter must be set in the subclass&amp;rsquo;s class namespace).</source>
          <target state="translated">&lt;em&gt;구분 기호&lt;/em&gt; &amp;ndash; &lt;em&gt;구분 기호를&lt;/em&gt; 소개하는 자리 표시자를 설명하는 리터럴 문자열입니다. 기본값은 &lt;code&gt;$&lt;/code&gt; 입니다. 구현시 필요에 &lt;a href=&quot;re#re.escape&quot;&gt; &lt;code&gt;re.escape()&lt;/code&gt; &lt;/a&gt; 문자열에서 re.escape () 를 호출 하므로 정규 표현식 이 &lt;em&gt;아니&lt;/em&gt; 어야 합니다. 또한 클래스를 만든 후에는 구분 기호를 변경할 수 없습니다 (예 : 하위 클래스의 클래스 네임 스페이스에 다른 구분 기호를 설정해야 함).</target>
        </trans-unit>
        <trans-unit id="2c4e5104396f1f5ce0e100017578238c6339648a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;delimiters&lt;/em&gt;, default value: &lt;code&gt;('=', ':')&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;분리 문자&lt;/em&gt; , 기본값 : &lt;code&gt;('=', ':')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00e64abf8cff13a265a48aacb9a36a7e7d720433" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;depth&lt;/em&gt;: maximal depth of tree (1 to 255, 255 if unlimited, 1 in sequential mode).</source>
          <target state="translated">&lt;em&gt;depth&lt;/em&gt; : 트리의 최대 깊이 (1-255, 무제한 인 경우 255, 순차 모드의 경우 1).</target>
        </trans-unit>
        <trans-unit id="6c43b9f61b021c46723863c7bac040a9b77ce355" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;descent&lt;/em&gt; - distance between baseline and lowest point that a</source>
          <target state="translated">&lt;em&gt;descent&lt;/em&gt; - distance between baseline and lowest point that a</target>
        </trans-unit>
        <trans-unit id="180e69b201a8a47ce24048abf9431e493c48afbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;description&lt;/em&gt; can be provided to describe the format, and will be returned by the &lt;a href=&quot;#shutil.get_unpack_formats&quot;&gt;&lt;code&gt;get_unpack_formats()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;형식을 설명하기 위해 &lt;em&gt;description&lt;/em&gt; 을 제공 할 수 있으며 &lt;a href=&quot;#shutil.get_unpack_formats&quot;&gt; &lt;code&gt;get_unpack_formats()&lt;/code&gt; &lt;/a&gt; 함수에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="85549d2408c9bd6f8e0add9882d61c945c595db0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;description&lt;/em&gt; is used by &lt;a href=&quot;#shutil.get_archive_formats&quot;&gt;&lt;code&gt;get_archive_formats()&lt;/code&gt;&lt;/a&gt; which returns the list of archivers. Defaults to an empty string.</source>
          <target state="translated">&lt;em&gt;설명&lt;/em&gt; 은 아카이버 목록을 리턴하는 &lt;a href=&quot;#shutil.get_archive_formats&quot;&gt; &lt;code&gt;get_archive_formats()&lt;/code&gt; &lt;/a&gt; 의해 사용됩니다 . 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e5b67d924d970b690a6fbd631bd1189067c6336a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;detect_types&lt;/em&gt; defaults to 0 (i. e. off, no type detection), you can set it to any combination of &lt;a href=&quot;#sqlite3.PARSE_DECLTYPES&quot;&gt;&lt;code&gt;PARSE_DECLTYPES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sqlite3.PARSE_COLNAMES&quot;&gt;&lt;code&gt;PARSE_COLNAMES&lt;/code&gt;&lt;/a&gt; to turn type detection on.</source>
          <target state="translated">&lt;em&gt;detect_types의&lt;/em&gt; 기본값은 0입니다 (즉, 유형 감지 없음) . 유형 감지를 켜 &lt;a href=&quot;#sqlite3.PARSE_DECLTYPES&quot;&gt; &lt;code&gt;PARSE_DECLTYPES&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#sqlite3.PARSE_COLNAMES&quot;&gt; &lt;code&gt;PARSE_COLNAMES&lt;/code&gt; 의&lt;/a&gt; 조합으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="981dede2bba6db6f045e2ac54b5e24b896f0ef0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;device&lt;/em&gt; is the audio device filename to use. If it is not specified, this module first looks in the environment variable &lt;code id=&quot;index-0&quot;&gt;AUDIODEV&lt;/code&gt; for a device to use. If not found, it falls back to &lt;code&gt;/dev/dsp&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;device&lt;/em&gt; 는 사용할 오디오 장치 파일 이름입니다. 지정되지 않은 경우이 모듈은 먼저 환경 변수 &lt;code id=&quot;index-0&quot;&gt;AUDIODEV&lt;/code&gt; 에서 장치를 찾습니다 . 찾지 못하면 &lt;code&gt;/dev/dsp&lt;/code&gt; 로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="93ada909878e050bfe0fc00c7465ad5633292fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dict_type&lt;/em&gt;, default value: &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;dict_type&lt;/em&gt; , 기본값 : &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f871e1d4a6369b89d40d55bf489af5dc79022671" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;digest_size&lt;/em&gt;: size of output digest in bytes.</source>
          <target state="translated">&lt;em&gt;digest_size&lt;/em&gt; : 바이트 단위의 출력 요약 크기.</target>
        </trans-unit>
        <trans-unit id="007b877216de396e755abc71c3c9d2b91601846b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dirpath&lt;/em&gt; is a string, the path to the directory. &lt;em&gt;dirnames&lt;/em&gt; is a list of the names of the subdirectories in &lt;em&gt;dirpath&lt;/em&gt; (excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;). &lt;em&gt;filenames&lt;/em&gt; is a list of the names of the non-directory files in &lt;em&gt;dirpath&lt;/em&gt;. Note that the names in the lists contain no path components. To get a full path (which begins with &lt;em&gt;top&lt;/em&gt;) to a file or directory in &lt;em&gt;dirpath&lt;/em&gt;, do &lt;code&gt;os.path.join(dirpath, name)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;dirpath&lt;/em&gt; 는 디렉토리의 경로 인 문자열입니다. &lt;em&gt;dirnames이&lt;/em&gt; 있는 하위 디렉토리의 이름의 목록입니다 &lt;em&gt;dirpath&lt;/em&gt; (제외 &lt;code&gt;'.'&lt;/code&gt; 과 &lt;code&gt;'..'&lt;/code&gt; ). &lt;em&gt;filenames&lt;/em&gt; 는 &lt;em&gt;dirpath&lt;/em&gt; 의 비 디렉토리 파일 이름 목록입니다 . 목록의 이름에는 경로 구성 요소가 포함되어 있지 않습니다. (로 시작하는 전체 경로를 얻으려면 &lt;em&gt;상단&lt;/em&gt; 에있는 파일이나 디렉토리에) &lt;em&gt;dirpath을&lt;/em&gt; 수행 &lt;code&gt;os.path.join(dirpath, name)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="968511df033badec23ec922b79908548d98f46a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dirpath&lt;/em&gt; is a string, the path to the directory. &lt;em&gt;dirnames&lt;/em&gt; is a list of the names of the subdirectories in &lt;em&gt;dirpath&lt;/em&gt; (excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;). &lt;em&gt;filenames&lt;/em&gt; is a list of the names of the non-directory files in &lt;em&gt;dirpath&lt;/em&gt;. Note that the names in the lists contain no path components. To get a full path (which begins with &lt;em&gt;top&lt;/em&gt;) to a file or directory in &lt;em&gt;dirpath&lt;/em&gt;, do &lt;code&gt;os.path.join(dirpath, name)&lt;/code&gt;. Whether or not the lists are sorted depends on the file system. If a file is removed from or added to the &lt;em&gt;dirpath&lt;/em&gt; directory during generating the lists, whether a name for that file be included is unspecified.</source>
          <target state="translated">&lt;em&gt;dirpath&lt;/em&gt; is a string, the path to the directory. &lt;em&gt;dirnames&lt;/em&gt; is a list of the names of the subdirectories in &lt;em&gt;dirpath&lt;/em&gt; (excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; ). &lt;em&gt;filenames&lt;/em&gt; is a list of the names of the non-directory files in &lt;em&gt;dirpath&lt;/em&gt;. Note that the names in the lists contain no path components. To get a full path (which begins with &lt;em&gt;top&lt;/em&gt;) to a file or directory in &lt;em&gt;dirpath&lt;/em&gt;, do &lt;code&gt;os.path.join(dirpath, name)&lt;/code&gt; . Whether or not the lists are sorted depends on the file system. If a file is removed from or added to the &lt;em&gt;dirpath&lt;/em&gt; directory during generating the lists, whether a name for that file be included is unspecified.</target>
        </trans-unit>
        <trans-unit id="2859bfe9fb554dd720bc5cb08ccf5c5fb8a9ebba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dirpath&lt;/em&gt;, &lt;em&gt;dirnames&lt;/em&gt; and &lt;em&gt;filenames&lt;/em&gt; are identical to &lt;a href=&quot;#os.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; output, and &lt;em&gt;dirfd&lt;/em&gt; is a file descriptor referring to the directory &lt;em&gt;dirpath&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;dirpath&lt;/em&gt; , &lt;em&gt;dirnames&lt;/em&gt; 및 &lt;em&gt;filename&lt;/em&gt; 은 &lt;a href=&quot;#os.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt; 출력 과 동일 하며 &lt;em&gt;dirfd&lt;/em&gt; 는 &lt;em&gt;dirpath&lt;/em&gt; 디렉토리를 참조하는 파일 디스크립터 입니다.</target>
        </trans-unit>
        <trans-unit id="9d9810af6703f309fd47e9fbacc13448ca5f7f2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;disable_existing_loggers&lt;/em&gt; - whether any existing non-root loggers are to be disabled. This setting mirrors the parameter of the same name in &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt;. If absent, this parameter defaults to &lt;code&gt;True&lt;/code&gt;. This value is ignored if &lt;em&gt;incremental&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;disable_existing_loggers-&lt;/em&gt; 기존의 루트가 아닌 로거를 비활성화할지 여부 이 설정은 &lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt; 에서 동일한 이름의 매개 변수를 미러링합니다 . 없는 경우이 매개 변수의 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다. &lt;em&gt;incremental&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우이 값은 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="12235d809e777b162269bbb341c4fc9bd9b2c6d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dklen&lt;/em&gt; is the length of the derived key. If &lt;em&gt;dklen&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the digest size of the hash algorithm &lt;em&gt;hash_name&lt;/em&gt; is used, e.g. 64 for SHA-512.</source>
          <target state="translated">&lt;em&gt;dklen&lt;/em&gt; 은 파생 키의 길이입니다. 경우 &lt;em&gt;dklen가&lt;/em&gt; 없는 &lt;code&gt;None&lt;/code&gt; 그 해시 알고리즘의 다이제스트 크기 &lt;em&gt;hash_name가&lt;/em&gt; 사용되며, 예를 들어 64은 SHA-512.</target>
        </trans-unit>
        <trans-unit id="c8a95bda0ab6df1b15b780d89c2e98a8a025462c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dst&lt;/em&gt; must be the complete target file name; look at &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; for a copy that accepts a target directory path. If &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; specify the same file, &lt;a href=&quot;#shutil.SameFileError&quot;&gt;&lt;code&gt;SameFileError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;dst&lt;/em&gt; 는 완전한 대상 파일 이름이어야합니다. 대상 디렉토리 경로를 허용하는 사본 은 &lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 경우 &lt;em&gt;SRC&lt;/em&gt; 와 &lt;em&gt;DST가&lt;/em&gt; 같은 파일을 지정, &lt;a href=&quot;#shutil.SameFileError&quot;&gt; &lt;code&gt;SameFileError&lt;/code&gt; 가&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ab5bb70975f98621d7ed5119cc8fcbd24fc451df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;elem&lt;/em&gt; is an element tree or an individual element.</source>
          <target state="translated">&lt;em&gt;elem&lt;/em&gt; 은 요소 트리 또는 개별 요소입니다.</target>
        </trans-unit>
        <trans-unit id="3f1bb46af9fdcdd5f0f4c0fa18d44530dc2855b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element&lt;/em&gt; is the root element. The tree is initialized with the contents of the XML &lt;em&gt;file&lt;/em&gt; if given.</source>
          <target state="translated">&lt;em&gt;element&lt;/em&gt; 는 루트 요소입니다. 주어진 경우 XML &lt;em&gt;파일&lt;/em&gt; 의 내용으로 트리가 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="9843007738de39c9e9ff8caf4fbe51e57fed131f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element_factory&lt;/em&gt;, when given, must be a callable accepting two positional arguments: a tag and a dict of attributes. It is expected to return a new element instance.</source>
          <target state="translated">&lt;em&gt;element_factory&lt;/em&gt; 는 지정된 경우 두 개의 위치 인수 (태그 및 속성 dict)를 허용하는 호출 가능해야합니다. 새로운 요소 인스턴스를 반환 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="2b51897b6db35826329ab970036d3280c9f25caa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;empty_lines_in_values&lt;/em&gt;, default value: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;empty_lines_in_values&lt;/em&gt; , 기본값 : &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6eccdcee9b41b91a617e4848a706a4efa5fadea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; determines whether the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) should be enabled. The default is &lt;code&gt;False&lt;/code&gt;. When &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;SMTPUTF8&lt;/code&gt; is accepted as a parameter to the &lt;code&gt;MAIL&lt;/code&gt; command and when present is passed to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;kwargs['mail_options']&lt;/code&gt; list. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="translated">&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 은 &lt;code&gt;SMTPUTF8&lt;/code&gt; 확장 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531에&lt;/strong&gt;&lt;/a&gt; 정의 된 &lt;strong&gt;대로&lt;/strong&gt; )을 사용 할지 여부를 결정합니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 경우 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;SMTPUTF8&lt;/code&gt; 을 받는 파라미터로서 접수 &lt;code&gt;MAIL&lt;/code&gt; 본가 전달 될 때 명령 &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt; &lt;code&gt;process_message()&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;kwargs['mail_options']&lt;/code&gt; 리스트. &lt;em&gt;decode_data&lt;/em&gt; 와 &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 을 동시에 &lt;code&gt;True&lt;/code&gt; 로 설정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3c69a65cfe7b7b658df8737275b519bb1deb7fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; determines whether the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) should be enabled. The default is &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="translated">&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 은 &lt;code&gt;SMTPUTF8&lt;/code&gt; 확장 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6531에&lt;/strong&gt;&lt;/a&gt; 정의 된 &lt;strong&gt;대로&lt;/strong&gt; )을 사용 할지 여부를 결정합니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. &lt;em&gt;decode_data&lt;/em&gt; 와 &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; 을 동시에 &lt;code&gt;True&lt;/code&gt; 로 설정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e91ee6734e4bcca868c1cb21670e4e24baff8ea9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;encoding&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0c51f1fc7a50be1ce0e1496f76e787256a41690" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; defaults to &lt;code&gt;'utf-8'&lt;/code&gt;. &lt;em&gt;errors&lt;/em&gt; defaults to &lt;code&gt;'replace'&lt;/code&gt;, meaning invalid sequences are replaced by a placeholder character.</source>
          <target state="translated">&lt;em&gt;인코딩의&lt;/em&gt; 기본값은 &lt;code&gt;'utf-8'&lt;/code&gt; 입니다. &lt;em&gt;errors의&lt;/em&gt; 기본값은 &lt;code&gt;'replace'&lt;/code&gt; 입니다 . 즉, 잘못된 시퀀스는 자리 표시 자 문자로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="691e0a0372811b8b7b92eed45fa8664facb1a33a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; defines the character encoding to use for the metadata in the archive. The default value is &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;'ascii'&lt;/code&gt; as a fallback. Depending on whether the archive is read or written, the metadata must be either decoded or encoded. If &lt;em&gt;encoding&lt;/em&gt; is not set appropriately, this conversion may fail.</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 은 아카이브의 메타 데이터에 사용할 문자 인코딩을 정의합니다. 기본값은 &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;'ascii'&lt;/code&gt; 입니다. 아카이브를 읽거나 쓰는지 여부에 따라 메타 데이터를 디코딩하거나 인코딩해야합니다. 경우 &lt;em&gt;인코딩이&lt;/em&gt; 적절하게 설정되지 않은,이 변환이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7aa5550e1a648cd12c5f4fe31dfd8e32326e6b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; gives the name of the encoding that the stream will be decoded or encoded with. It defaults to &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 은 스트림이 디코딩되거나 인코딩 될 인코딩의 이름을 제공합니다. 기본값은 &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91f87281a2f743da03307d7ccf36ec28d88f87b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; for no encoding or the name of the program used to encode (e.g. &lt;strong&gt;compress&lt;/strong&gt; or &lt;strong&gt;gzip&lt;/strong&gt;). The encoding is suitable for use as a &lt;em&gt;Content-Encoding&lt;/em&gt; header, &lt;strong&gt;not&lt;/strong&gt; as a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. The mappings are table driven. Encoding suffixes are case sensitive; type suffixes are first tried case sensitively, then case insensitively.</source>
          <target state="translated">&lt;em&gt;인코딩은&lt;/em&gt; 없다 &lt;code&gt;None&lt;/code&gt; (예 아니오 인코딩하거나 인코딩하는 데 사용되는 프로그램 이름에 대한 &lt;strong&gt;압축&lt;/strong&gt; 또는 &lt;strong&gt;GZIP&lt;/strong&gt; ). 인코딩은로서 사용하기에 적합한 &lt;em&gt;콘텐츠 인코딩&lt;/em&gt; 헤더 &lt;strong&gt;하지&lt;/strong&gt; A와 &lt;em&gt;콘텐츠 전송 인코딩&lt;/em&gt; 헤더. 매핑은 테이블 중심입니다. 인코딩 접미사는 대소 문자를 구분합니다. 유형 접미사는 먼저 대소 문자를 구분하여 시도한 다음 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff92ed5a9af18f6ee804568dc08dffd3a594b6b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt; returns), but any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; supported by Python can be used. See the &lt;a href=&quot;codecs#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module for the list of supported encodings.</source>
          <target state="translated">&lt;em&gt;encoding&lt;/em&gt; 은 파일을 디코딩하거나 인코딩하는 데 사용되는 인코딩의 이름입니다. 텍스트 모드에서만 사용해야합니다. 기본 인코딩은 플랫폼에 따라 다르지만 ( &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt; 반환하는 방식) Python에서 지원하는 모든 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;텍스트 인코딩을&lt;/a&gt; 사용할 수 있습니다. 지원되는 인코딩 목록은 &lt;a href=&quot;codecs#module-codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8a384fb25e59a8cdc86779e7a23b0d4adc62e44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt; returns), but any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; supported by Python can be used. See the &lt;a href=&quot;codecs#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module for the list of supported encodings.</source>
          <target state="translated">&lt;em&gt;encoding&lt;/em&gt; is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt; returns), but any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; supported by Python can be used. See the &lt;a href=&quot;codecs#module-codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt; module for the list of supported encodings.</target>
        </trans-unit>
        <trans-unit id="af62b9f32594adeb4d66f2e87470a4b9bd0050ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; specifies the encoding which is to be used for the file. Any encoding that encodes to and decodes from bytes is allowed, and the data types supported by the file methods depend on the codec used.</source>
          <target state="translated">&lt;em&gt;encoding&lt;/em&gt; 은 파일에 사용될 &lt;em&gt;인코딩을&lt;/em&gt; 지정합니다. 바이트로 인코딩하고 바이트에서 디코딩하는 인코딩이 허용되며 파일 메서드에서 지원하는 데이터 형식은 사용 된 코덱에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="cfdba4de4daa27d67ac16f7fd8d1cf6bb8911efe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;err_msg&lt;/em&gt;: Error message, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;err_msg&lt;/em&gt; : 오류 메시지, &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c49f6f1f558b547ea0f5fff60137c8a6e9731acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;errors&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f76b437bbf0bd9fc061e42deaeecdefbac2a01ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; is an optional string that specifies how encoding and decoding errors are to be handled&amp;mdash;this cannot be used in binary mode. A variety of standard error handlers are available (listed under &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;), though any error handling name that has been registered with &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt; is also valid. The standard names include:</source>
          <target state="translated">&lt;em&gt;errors&lt;/em&gt; 는 인코딩 및 디코딩 오류를 처리하는 방법을 지정하는 선택적 문자열이며 이진 모드에서는 사용할 수 없습니다. &lt;a href=&quot;codecs#codecs.register_error&quot;&gt; &lt;code&gt;codecs.register_error()&lt;/code&gt; &lt;/a&gt; 로 등록 된 오류 처리 이름 도 유효 하지만 다양한 표준 오류 처리기 ( &lt;a href=&quot;codecs#error-handlers&quot;&gt;오류 처리기&lt;/a&gt; 아래에 나열 됨)를 사용할 수 있습니다 . 표준 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a0d608bf4a8fe34cd52b64f236d3408ba7fb0ae2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; is an optional string that specifies how encoding and decoding errors are to be handled. Pass &lt;code&gt;'strict'&lt;/code&gt; to raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception if there is an encoding error (the default of &lt;code&gt;None&lt;/code&gt; has the same effect), or pass &lt;code&gt;'ignore'&lt;/code&gt; to ignore errors. (Note that ignoring encoding errors can lead to data loss.) &lt;code&gt;'replace'&lt;/code&gt; causes a replacement marker (such as &lt;code&gt;'?'&lt;/code&gt;) to be inserted where there is malformed data. &lt;code&gt;'backslashreplace'&lt;/code&gt; causes malformed data to be replaced by a backslashed escape sequence. When writing, &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; (replace with the appropriate XML character reference) or &lt;code&gt;'namereplace'&lt;/code&gt; (replace with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences) can be used. Any other error handling name that has been registered with &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt; is also valid.</source>
          <target state="translated">&lt;em&gt;errors&lt;/em&gt; 는 인코딩 및 디코딩 오류 처리 방법을 지정하는 선택적 문자열입니다. 패스 &lt;code&gt;'strict'&lt;/code&gt; 인상하기 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 부호화 에러 (기본있을 경우 예외 &lt;code&gt;None&lt;/code&gt; 동일한 효과를 갖는다), 또는 패스 &lt;code&gt;'ignore'&lt;/code&gt; 에러를 무시. 인코딩 오류를 무시하면 데이터가 손실 될 수 있습니다. &lt;code&gt;'replace'&lt;/code&gt; 는 잘못된 데이터가있는 곳에 대체 마커 (예 : &lt;code&gt;'?'&lt;/code&gt; )가 삽입되도록합니다. &lt;code&gt;'backslashreplace'&lt;/code&gt; 는 잘못된 데이터를 백 슬래시 이스케이프 시퀀스로 대체합니다. , 쓸 때 &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; 을 (해당 XML 문자 참조로 대체) 또는 &lt;code&gt;'namereplace'&lt;/code&gt; ( &lt;code&gt;\N{...}&lt;/code&gt; 이스케이프 시퀀스로 대체 )를 사용할 수 있습니다. &lt;a href=&quot;codecs#codecs.register_error&quot;&gt; &lt;code&gt;codecs.register_error()&lt;/code&gt; &lt;/a&gt; 로 등록 된 다른 오류 처리 이름 도 유효합니다.</target>
        </trans-unit>
        <trans-unit id="8e5ea3df010940091084e201b01bed525a80bca7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; may be given to define the error handling. It defaults to &lt;code&gt;'strict'&lt;/code&gt; which causes a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised in case an encoding error occurs.</source>
          <target state="translated">&lt;em&gt;오류&lt;/em&gt; 처리를 정의하기 위해 오류가 제공 될 수 있습니다. 기본적으로 &lt;code&gt;'strict'&lt;/code&gt; 로 설정 되어 인코딩 오류가 발생할 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="34a2c7815f3885dced013d2b11e1571b296cb81b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; may be given to define the error handling. It defaults to &lt;code&gt;'strict'&lt;/code&gt;, which causes &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised in case an encoding error occurs.</source>
          <target state="translated">&lt;em&gt;오류&lt;/em&gt; 처리를 정의하기 위해 오류가 제공 될 수 있습니다. 기본값은 &lt;code&gt;'strict'&lt;/code&gt; 이며 인코딩 오류가 발생할 경우 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dc77642dabd9bc3d17e0fa4ff51f583981205c36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;escaped&lt;/em&gt; &amp;ndash; This group matches the escape sequence, e.g. &lt;code&gt;$$&lt;/code&gt;, in the default pattern.</source>
          <target state="translated">&lt;em&gt;escaped&lt;/em&gt; &amp;ndash;이 그룹 은 기본 패턴에서 이스케이프 시퀀스 (예 : &lt;code&gt;$$&lt;/code&gt; ) 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="2602d2fe2693cc74c5845d35e440bf10fc6ce44a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;eventmask&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9565a91107efbf72c4917b201714d8217e873e1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt; is an optional bitmask describing the type of events you want to check for, and can be a combination of the constants &lt;code&gt;POLLIN&lt;/code&gt;, &lt;code&gt;POLLPRI&lt;/code&gt;, and &lt;code&gt;POLLOUT&lt;/code&gt;, described in the table below. If not specified, the default value used will check for all 3 types of events.</source>
          <target state="translated">&lt;em&gt;eventmask&lt;/em&gt; 는 점검하려는 이벤트 유형을 설명하는 선택적 비트 마스크 이며 아래 표에 설명 된 상수 &lt;code&gt;POLLIN&lt;/code&gt; , &lt;code&gt;POLLPRI&lt;/code&gt; 및 &lt;code&gt;POLLOUT&lt;/code&gt; 의 조합 일 수 있습니다 . 지정하지 않으면 사용 된 기본값은 3 가지 유형의 이벤트를 모두 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c6e13ef155ba6eae677c9b9fd35bcbd90d8fe7ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt; is an optional bitmask describing the type of events you want to check for. The constants are the same that with &lt;code&gt;poll()&lt;/code&gt; object. The default value is a combination of the constants &lt;code&gt;POLLIN&lt;/code&gt;, &lt;code&gt;POLLPRI&lt;/code&gt;, and &lt;code&gt;POLLOUT&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;eventmask&lt;/em&gt; 는 확인할 이벤트 유형을 설명하는 선택적 비트 마스크입니다. 상수는 &lt;code&gt;poll()&lt;/code&gt; 객체 와 동일 합니다. 기본값은 상수 &lt;code&gt;POLLIN&lt;/code&gt; , &lt;code&gt;POLLPRI&lt;/code&gt; 및 &lt;code&gt;POLLOUT&lt;/code&gt; 의 조합입니다 .</target>
        </trans-unit>
        <trans-unit id="85059782032b60dfd066d2e0addb16be547f6176" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;exc_info&lt;/em&gt; is a tuple containing information about the unexpected exception (as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;). &lt;em&gt;test&lt;/em&gt; is the test containing &lt;em&gt;example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; 는 처리 될 예입니다. &lt;em&gt;exc_info&lt;/em&gt; 는 예기치 않은 예외에 대한 정보를 포함하는 튜플입니다 ( &lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt; 의해 반환 됨 ). &lt;em&gt;테스트&lt;/em&gt; 는 &lt;em&gt;예제를&lt;/em&gt; 포함하는 테스트입니다 . &lt;em&gt;out&lt;/em&gt; 은 &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt; &lt;code&gt;DocTestRunner.run()&lt;/code&gt; &lt;/a&gt; 에 전달 된 출력 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="0e247b37a8bd8787f7f97911aff7803aaa42c156" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;got&lt;/em&gt; is the actual output from the example. &lt;em&gt;test&lt;/em&gt; is the test containing &lt;em&gt;example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; 는 처리 될 예입니다. &lt;em&gt;got&lt;/em&gt; 은 예제의 실제 출력입니다. &lt;em&gt;테스트&lt;/em&gt; 는 &lt;em&gt;예제를&lt;/em&gt; 포함하는 테스트입니다 . &lt;em&gt;out&lt;/em&gt; 은 &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt; &lt;code&gt;DocTestRunner.run()&lt;/code&gt; &lt;/a&gt; 에 전달 된 출력 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="a95ec944452550ac6bf4e7e6465182179f751280" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;test&lt;/em&gt; is the test &lt;em&gt;containing example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;예&lt;/em&gt; 는 처리 될 예입니다. &lt;em&gt;테스트&lt;/em&gt; 는 &lt;em&gt;예제를 포함&lt;/em&gt; 하는 테스트 &lt;em&gt;입니다&lt;/em&gt; . &lt;em&gt;out&lt;/em&gt; 은 &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt; &lt;code&gt;DocTestRunner.run()&lt;/code&gt; &lt;/a&gt; 에 전달 된 출력 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="1fc04cc5af346c22622a72bf686666fecee8c3f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_traceback&lt;/em&gt;: Exception traceback, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;exc_traceback&lt;/em&gt; : 예외 추적은 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a807f97d1d4f85ccb27e5ed21273e70eb2d1fa05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_type&lt;/em&gt;: Exception type.</source>
          <target state="translated">&lt;em&gt;exc_type&lt;/em&gt; : 예외 유형.</target>
        </trans-unit>
        <trans-unit id="57c23ee0fcf6f75ab8d4d1c0721ace73b62f004c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_value&lt;/em&gt;: Exception value, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;exc_value&lt;/em&gt; : 예외 값은 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01db21a1485f51108648bb7eed119736aeb1be35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;except&lt;/em&gt; that if the coroutine containing it is cancelled, the Task running in &lt;code&gt;something()&lt;/code&gt; is not cancelled. From the point of view of &lt;code&gt;something()&lt;/code&gt;, the cancellation did not happen. Although its caller is still cancelled, so the &amp;ldquo;await&amp;rdquo; expression still raises a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;제외시켰다&lt;/em&gt; 을 포함하는 코 루틴이 취소 된 경우에 실행되는 작업하는 것이 &lt;code&gt;something()&lt;/code&gt; 취소되지 않습니다. &lt;code&gt;something()&lt;/code&gt; 관점 에서 취소가 발생하지 않았습니다. 호출자가 여전히 취소되었지만 &quot;await&quot;표현식은 여전히 &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d38307316c897245b450870d9674a1f273e88195" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exclude_attrs&lt;/em&gt;: a set of attribute names that should not be serialised</source>
          <target state="translated">&lt;em&gt;exclude_attrs&lt;/em&gt; : 직렬화해서는 안되는 속성 이름 세트</target>
        </trans-unit>
        <trans-unit id="b6d1e439d148aa0a2a8be2d171773929148770a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exclude_tags&lt;/em&gt;: a set of tag names that should not be serialised</source>
          <target state="translated">&lt;em&gt;exclude_tags&lt;/em&gt; : 직렬화해서는 안되는 태그 이름 세트</target>
        </trans-unit>
        <trans-unit id="f593f8276556a46fa8d67db51e068bfebfdcb64e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;executor&lt;/em&gt; must be an instance of &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;실행자는&lt;/em&gt; 의 인스턴스 여야합니다 &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc1cd50a1a80f5472d9a39e3bfddc0e2d7df1a2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exposed&lt;/em&gt; is used to specify a sequence of method names which proxies for this typeid should be allowed to access using &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt;&lt;code&gt;BaseProxy._callmethod()&lt;/code&gt;&lt;/a&gt;. (If &lt;em&gt;exposed&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._exposed_&lt;/code&gt; is used instead if it exists.) In the case where no exposed list is specified, all &amp;ldquo;public methods&amp;rdquo; of the shared object will be accessible. (Here a &amp;ldquo;public method&amp;rdquo; means any attribute which has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method and whose name does not begin with &lt;code&gt;'_'&lt;/code&gt;.)</source>
          <target state="translated">&lt;em&gt;exposed&lt;/em&gt; 는이 typeid의 프록시가 &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt; &lt;code&gt;BaseProxy._callmethod()&lt;/code&gt; &lt;/a&gt; 사용하여 액세스 할 수있는 일련의 메소드 이름을 지정하는 데 사용됩니다 . ( &lt;em&gt;노출&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; 경우 &lt;code&gt;proxytype._exposed_&lt;/code&gt; 가있는 경우 대신 사용됩니다.) 노출 된 목록이 지정되지 않은 경우 공유 객체의 모든 &quot;공용 메소드&quot;에 액세스 할 수 있습니다. (여기서&amp;ldquo;공개 메소드&amp;rdquo;는 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt; 메소드를 가지며 이름이 &lt;code&gt;'_'&lt;/code&gt; 로 시작하지 않는 속성을 의미합니다 .)</target>
        </trans-unit>
        <trans-unit id="12fc9c97a02a087ab1f0decc6c51726e66251826" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exposed&lt;/em&gt; is used to specify a sequence of method names which proxies for this typeid should be allowed to access using &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt;&lt;code&gt;BaseProxy._callmethod()&lt;/code&gt;&lt;/a&gt;. (If &lt;em&gt;exposed&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._exposed_&lt;/code&gt; is used instead if it exists.) In the case where no exposed list is specified, all &amp;ldquo;public methods&amp;rdquo; of the shared object will be accessible. (Here a &amp;ldquo;public method&amp;rdquo; means any attribute which has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method and whose name does not begin with &lt;code&gt;'_'&lt;/code&gt;.)</source>
          <target state="translated">&lt;em&gt;exposed&lt;/em&gt; is used to specify a sequence of method names which proxies for this typeid should be allowed to access using &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt; &lt;code&gt;BaseProxy._callmethod()&lt;/code&gt; &lt;/a&gt;. (If &lt;em&gt;exposed&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._exposed_&lt;/code&gt; is used instead if it exists.) In the case where no exposed list is specified, all &amp;ldquo;public methods&amp;rdquo; of the shared object will be accessible. (Here a &amp;ldquo;public method&amp;rdquo; means any attribute which has a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt; method and whose name does not begin with &lt;code&gt;'_'&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="430c33cec05e54d894e06be98323444a2ca05d85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extract_dir&lt;/em&gt; is the name of the target directory where the archive is unpacked. If not provided, the current working directory is used.</source>
          <target state="translated">&lt;em&gt;extract_dir&lt;/em&gt; 은 아카이브가 압축 해제 된 대상 디렉토리의 이름입니다. 제공되지 않으면 현재 작업 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95c48f3d293bc0c234f9cf0901512306340d84bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fallback&lt;/em&gt; set to &lt;code&gt;True&lt;/code&gt; makes asyncio to manually read and send the file when the platform does not support the sendfile system call (e.g. Windows or SSL socket on Unix).</source>
          <target state="translated">&lt;em&gt;폴백&lt;/em&gt; 을 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 플랫폼이 sendfile 시스템 호출 (예 : Unix의 Windows 또는 SSL 소켓)을 지원하지 않는 경우 asyncio가 파일을 수동으로 읽고 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b75fb94fbaae7415fa7bff818e306c50ac8aeedf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fallback&lt;/em&gt;, when set to &lt;code&gt;True&lt;/code&gt;, makes asyncio manually read and send the file when the platform does not support the sendfile syscall (e.g. Windows or SSL socket on Unix).</source>
          <target state="translated">&lt;em&gt;fallback&lt;/em&gt; 을 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 플랫폼이 sendfile syscall (예 : Unix의 Windows 또는 SSL 소켓)을 지원하지 않는 경우 asyncio가 파일을 수동으로 읽고 보냅니다.</target>
        </trans-unit>
        <trans-unit id="fcc9dd296edcae3a5a963541b85421d306467420" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; can be set to either &lt;a href=&quot;socket#socket.AF_INET&quot;&gt;&lt;code&gt;socket.AF_INET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;socket#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt; to force the socket to use IPv4 or IPv6. If not set, the &lt;em&gt;family&lt;/em&gt; will be determined from host name (defaults to &lt;code&gt;AF_UNSPEC&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;family&lt;/em&gt; 는 &lt;a href=&quot;socket#socket.AF_INET&quot;&gt; &lt;code&gt;socket.AF_INET&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;socket#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt; 으로 설정 하여 소켓이 IPv4 또는 IPv6을 사용하도록합니다. 설정하지 않으면 호스트 이름에서 &lt;em&gt;패밀리&lt;/em&gt; 가 결정됩니다 (기본값은 &lt;code&gt;AF_UNSPEC&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3cd24ebbdc1eead0f4a392de7dfb45f5d421b32" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; is the type of socket (or named pipe) to use. This can be one of the strings &lt;code&gt;'AF_INET'&lt;/code&gt; (for a TCP socket), &lt;code&gt;'AF_UNIX'&lt;/code&gt; (for a Unix domain socket) or &lt;code&gt;'AF_PIPE'&lt;/code&gt; (for a Windows named pipe). Of these only the first is guaranteed to be available. If &lt;em&gt;family&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the family is inferred from the format of &lt;em&gt;address&lt;/em&gt;. If &lt;em&gt;address&lt;/em&gt; is also &lt;code&gt;None&lt;/code&gt; then a default is chosen. This default is the family which is assumed to be the fastest available. See &lt;a href=&quot;#multiprocessing-address-formats&quot;&gt;Address Formats&lt;/a&gt;. Note that if &lt;em&gt;family&lt;/em&gt; is &lt;code&gt;'AF_UNIX'&lt;/code&gt; and address is &lt;code&gt;None&lt;/code&gt; then the socket will be created in a private temporary directory created using &lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt;&lt;code&gt;tempfile.mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;family&lt;/em&gt; 는 사용할 소켓 (또는 명명 된 파이프) 유형입니다. 문자열 &lt;code&gt;'AF_INET'&lt;/code&gt; (TCP 소켓의 경우), &lt;code&gt;'AF_UNIX'&lt;/code&gt; (유닉스 도메인 소켓의 경우) 또는 &lt;code&gt;'AF_PIPE'&lt;/code&gt; (Windows 명명 된 파이프의 경우) 중 하나 일 수 있습니다. 이 중 첫 번째 것만 사용할 수 있습니다. &lt;em&gt;family&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 이면 &lt;em&gt;가족&lt;/em&gt; 은 &lt;em&gt;주소&lt;/em&gt; 형식에서 유추됩니다 . 경우 &lt;em&gt;주소&lt;/em&gt; 도없는 &lt;code&gt;None&lt;/code&gt; 다음 기본이 선택됩니다. 이 기본값은 가장 빠른 것으로 가정되는 제품군입니다. &lt;a href=&quot;#multiprocessing-address-formats&quot;&gt;주소 형식을&lt;/a&gt; 참조하십시오 . 경우주의 &lt;em&gt;가족&lt;/em&gt; 입니다 &lt;code&gt;'AF_UNIX'&lt;/code&gt; 와 주소가없는 &lt;code&gt;None&lt;/code&gt; 소켓은 &lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt; &lt;code&gt;tempfile.mkstemp()&lt;/code&gt; &lt;/a&gt; 사용하여 작성된 개인 임시 디렉토리에 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c18d4cd5abae5871e96dbdf26e9bea5c0f5059e4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; should be either &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;backlog&lt;/em&gt; is the queue size passed to &lt;a href=&quot;#socket.socket.listen&quot;&gt;&lt;code&gt;socket.listen()&lt;/code&gt;&lt;/a&gt;; when &lt;code&gt;0&lt;/code&gt; a default reasonable value is chosen. &lt;em&gt;reuse_port&lt;/em&gt; dictates whether to set the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; socket option.</source>
          <target state="translated">&lt;em&gt;family&lt;/em&gt; 는 &lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt; 이어야합니다 . &lt;em&gt;백로 &lt;/em&gt;&lt;a href=&quot;#socket.socket.listen&quot;&gt; &lt;code&gt;socket.listen()&lt;/code&gt; &lt;/a&gt; 전달 된 큐 크기입니다 . 때 &lt;code&gt;0&lt;/code&gt; 기본 적절한 값을 선택한다. &lt;em&gt;reuse_port&lt;/em&gt; 는 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 소켓 옵션 설정 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="172f74bf8e83e70a3e9f6f8e2bebb033cf53cc8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt; are the optional address family, protocol and flags to be passed through to &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; for &lt;em&gt;host&lt;/em&gt; resolution. If given, these should all be integers from the corresponding &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module constants.</source>
          <target state="translated">&lt;em&gt;가족&lt;/em&gt; , &lt;em&gt;프로토는&lt;/em&gt; , &lt;em&gt;플래그&lt;/em&gt; 옵션 주소 패밀리, 프로토콜 및 플래그가 통과되어야 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;em&gt;호스트&lt;/em&gt; 해상도입니다. 주어진 경우, 이들은 모두 해당 &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 모듈 상수의 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="e5195186b1c7825b647dad14b809e41a043338ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt; are the optional address family, protocol and flags to be passed through to getaddrinfo() for &lt;em&gt;host&lt;/em&gt; resolution. If given, these should all be integers from the corresponding &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module constants.</source>
          <target state="translated">&lt;em&gt;family&lt;/em&gt; , &lt;em&gt;proto&lt;/em&gt; , &lt;em&gt;flags&lt;/em&gt; 는 &lt;em&gt;호스트 주소&lt;/em&gt; 확인 을 위해 getaddrinfo ()로 전달되는 선택적 주소 계열, 프로토콜 및 플래그 입니다. 주어진 경우, 이들은 모두 해당 &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 모듈 상수의 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="61c64bb7bff9bf6b69684f3b0d99abe40a3c73c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fanout&lt;/em&gt;: fanout (0 to 255, 0 if unlimited, 1 in sequential mode).</source>
          <target state="translated">&lt;em&gt;fanout&lt;/em&gt; : fanout (0-255, 무제한 인 경우 0, 순차적 모드 인 경우 1).</target>
        </trans-unit>
        <trans-unit id="927b17ea6ed9fe24ea9e8e608d3d0e46c7803976" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fd&lt;/em&gt; is the integer file descriptor of the pipe.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt; 는 파이프의 정수 파일 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="36380001fc7dc285809f376fbda054fa33556cbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fd&lt;/em&gt; is the integer file descriptor that was closed.</source>
          <target state="translated">&lt;em&gt;fd&lt;/em&gt; 는 닫힌 정수 파일 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="45ebca906d90d841c07ebcc3e1eed359c5fb274b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;feat&lt;/em&gt; and &lt;em&gt;mask&lt;/em&gt; are unsigned 32bit integers.</source>
          <target state="translated">&lt;em&gt;feat&lt;/em&gt; 및 &lt;em&gt;mask&lt;/em&gt; 는 부호없는 32 비트 정수입니다.</target>
        </trans-unit>
        <trans-unit id="d54fcc1286b345aa64c1eb5c65d5bd57f9e7722e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fget&lt;/em&gt; is a function for getting an attribute value. &lt;em&gt;fset&lt;/em&gt; is a function for setting an attribute value. &lt;em&gt;fdel&lt;/em&gt; is a function for deleting an attribute value. And &lt;em&gt;doc&lt;/em&gt; creates a docstring for the attribute.</source>
          <target state="translated">&lt;em&gt;fget&lt;/em&gt; 은 속성 값을 얻기위한 함수입니다. &lt;em&gt;fset&lt;/em&gt; 은 속성 값을 설정하는 기능입니다. &lt;em&gt;fdel&lt;/em&gt; 은 속성 값을 삭제하는 기능입니다. 그리고 &lt;em&gt;doc&lt;/em&gt; 은 속성에 대한 docstring을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="83e5e50b531731f8e9bdc5b82814d726dcc17462" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the file to be opened or an integer file descriptor of the file to be wrapped. (If a file descriptor is given, it is closed when the returned I/O object is closed, unless &lt;em&gt;closefd&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;.)</source>
          <target state="translated">&lt;em&gt;file&lt;/em&gt; 은 열려는 파일의 경로 이름 (절대 또는 현재 작업 디렉토리에 상대적) 또는 줄 바꿈 할 파일의 정수 파일 설명자를 제공 하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 유사한 객체&lt;/a&gt; 입니다. (파일 설명자가 제공되면 &lt;em&gt;closefd&lt;/em&gt; 가 &lt;code&gt;False&lt;/code&gt; 로 설정되어 있지 않으면 리턴 된 I / O 오브젝트가 닫힐 때 닫힙니다 .)</target>
        </trans-unit>
        <trans-unit id="9aadd506287f3118c03844b6916c48899088ed10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the file to be opened or an integer file descriptor of the file to be wrapped. (If a file descriptor is given, it is closed when the returned I/O object is closed, unless &lt;em&gt;closefd&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;.)</source>
          <target state="translated">&lt;em&gt;file&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the file to be opened or an integer file descriptor of the file to be wrapped. (If a file descriptor is given, it is closed when the returned I/O object is closed, unless &lt;em&gt;closefd&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="7ce333c98706e21d0e0601f57060559e541fb8a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; must be a regular file object open in binary mode.</source>
          <target state="translated">&lt;em&gt;파일&lt;/em&gt; 은 이진 모드로 열린 일반 파일 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d0fb76d2f9ed3ae3037b8f626ce2121db771a22f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; must be a regular file object opened in binary mode.</source>
          <target state="translated">&lt;em&gt;파일&lt;/em&gt; 은 이진 모드로 열린 일반 파일 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="4f592285f817085ce3a54652c6007454ab942ad3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file_name&lt;/em&gt; is the name of the file to load registry data from. This file must have been created with the &lt;a href=&quot;#winreg.SaveKey&quot;&gt;&lt;code&gt;SaveKey()&lt;/code&gt;&lt;/a&gt; function. Under the file allocation table (FAT) file system, the filename may not have an extension.</source>
          <target state="translated">&lt;em&gt;file_name&lt;/em&gt; 은 레지스트리 데이터를로드 할 파일의 이름입니다. 이 파일은 &lt;a href=&quot;#winreg.SaveKey&quot;&gt; &lt;code&gt;SaveKey()&lt;/code&gt; &lt;/a&gt; 함수 로 작성해야합니다 . FAT (파일 할당 테이블) 파일 시스템에서 파일 이름의 확장자가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21caf723b15c2d16148bab2ac5eca20765e170bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file_name&lt;/em&gt; is the name of the file to save registry data to. This file cannot already exist. If this filename includes an extension, it cannot be used on file allocation table (FAT) file systems by the &lt;a href=&quot;#winreg.LoadKey&quot;&gt;&lt;code&gt;LoadKey()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;file_name&lt;/em&gt; 은 레지스트리 데이터를 저장할 파일 이름입니다. 이 파일은 이미 존재하지 않습니다. 이 파일 이름에 확장자가 포함되어 있으면 &lt;a href=&quot;#winreg.LoadKey&quot;&gt; &lt;code&gt;LoadKey()&lt;/code&gt; &lt;/a&gt; 메서드로 FAT (파일 할당 테이블) 파일 시스템에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1e1094cc2173d8a7173b1ad2f31af7c84836a9a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filemode&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filemode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dcead532b80dc9fb40f0838681a62a1dfccb951" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c9ded2375c347fef97c0303ce660b9af1eb35fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; is the filename to be substituted for &lt;code&gt;%s&lt;/code&gt; in the command line; the default value is &lt;code&gt;'/dev/null'&lt;/code&gt; which is almost certainly not what you want, so usually you&amp;rsquo;ll override it by specifying a filename.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 은 명령 행에서 &lt;code&gt;%s&lt;/code&gt; 로 대체 될 파일 &lt;em&gt;이름&lt;/em&gt; 입니다 . 기본값은 &lt;code&gt;'/dev/null'&lt;/code&gt; 이며 원하는 값이 아닐 수도 있으므로 일반적으로 파일 이름을 지정하여 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="9fe4632e41e6c1ec78c51cab38d25b22af3a92cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; is the name of file in which to save cookies. If &lt;em&gt;filename&lt;/em&gt; is not specified, &lt;code&gt;self.filename&lt;/code&gt; is used (whose default is the value passed to the constructor, if any); if &lt;code&gt;self.filename&lt;/code&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 은 쿠키를 저장할 파일 이름입니다. 경우 &lt;em&gt;파일 이름이&lt;/em&gt; 지정되지 않은, &lt;code&gt;self.filename&lt;/code&gt; 이 사용된다 (그 기본 생성자에 전달 된 값이있는 경우); 경우 &lt;code&gt;self.filename&lt;/code&gt; 가 없습니다 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dcaf70eda8f60862ee243eacb5438d46e839740d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; should be the path to a file or directory on the filesystem.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 은 파일 시스템에서 파일 또는 디렉토리의 경로 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6e1a1c4dc0a6c834a09b320b23fcda6f172bbf3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; is not closed, when &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="translated">&lt;em&gt;TarFile&lt;/em&gt; 이 닫힐 때 &lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt; 가 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26e8506e902ad2ad40fcd48378aada5e660fd34e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; is the file object to monitor. It may either be an integer file descriptor or an object with a &lt;code&gt;fileno()&lt;/code&gt; method. &lt;em&gt;events&lt;/em&gt; is a bitwise mask of events to monitor. &lt;em&gt;data&lt;/em&gt; is an opaque object.</source>
          <target state="translated">&lt;em&gt;fileobj&lt;/em&gt; 는 모니터링 할 파일 객체입니다. 정수 파일 디스크립터이거나 &lt;code&gt;fileno()&lt;/code&gt; 메소드가 있는 오브젝트 일 수 있습니다 . &lt;em&gt;events&lt;/em&gt; 는 모니터링 할 이벤트의 비트 단위 마스크입니다. &lt;em&gt;데이터&lt;/em&gt; 는 불투명 한 객체입니다.</target>
        </trans-unit>
        <trans-unit id="009f38484704d91a695753502822247c81069016" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; must be a file object previously registered.</source>
          <target state="translated">&lt;em&gt;fileobj&lt;/em&gt; 는 이전에 등록 된 파일 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8050504faa48dbcbe356c8a41099095643949074" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filterfunc&lt;/em&gt;, if given, must be a function taking a single string argument. It will be passed each path (including each individual full file path) before it is added to the archive. If &lt;em&gt;filterfunc&lt;/em&gt; returns a false value, the path will not be added, and if it is a directory its contents will be ignored. For example, if our test files are all either in &lt;code&gt;test&lt;/code&gt; directories or start with the string &lt;code&gt;test_&lt;/code&gt;, we can use a &lt;em&gt;filterfunc&lt;/em&gt; to exclude them:</source>
          <target state="translated">&lt;em&gt;filterfunc (&lt;/em&gt; 제공된 경우)는 단일 문자열 인수를 취하는 함수 여야합니다. 아카이브에 추가되기 전에 각 경로 (각 개별 전체 파일 경로 포함)를 전달합니다. 경우 &lt;em&gt;filterfunc가&lt;/em&gt; false 값을 반환 경로는 추가되지 않습니다, 그리고 디렉토리의 경우 그 내용은 무시됩니다. 예를 들어 테스트 파일이 모두 &lt;code&gt;test&lt;/code&gt; 디렉토리에 있거나 문자열 &lt;code&gt;test_&lt;/code&gt; 로 시작 하는 경우 &lt;em&gt;filterfunc&lt;/em&gt; 를 사용 하여 제외시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55c2af6e2636ddbec1d1d14e6fcb176c0a0dc9b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filters&lt;/em&gt; - the corresponding value will be a dict in which each key is a filter id and each value is a dict describing how to configure the corresponding Filter instance.</source>
          <target state="translated">&lt;em&gt;필터&lt;/em&gt; - 대응하는 값이 각각의 키는 필터 ID이며, 각 값은 대응하는 필터 인스턴스를 구성하는 방법을 설명하기위한 딕셔너리되는 딕셔너리 것이다.</target>
        </trans-unit>
        <trans-unit id="1a6bc994b7e097c4189bd73764ba77d81580472d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fixed&lt;/em&gt; - 1 if font is fixed-width else 0</source>
          <target state="translated">&lt;em&gt;fixed&lt;/em&gt; - 1 if font is fixed-width else 0</target>
        </trans-unit>
        <trans-unit id="18defc7206188ac573ae4614612512c837ac3492" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; &amp;ndash; The regular expression flags that will be applied when compiling the regular expression used for recognizing substitutions. The default value is &lt;code&gt;re.IGNORECASE&lt;/code&gt;. Note that &lt;code&gt;re.VERBOSE&lt;/code&gt; will always be added to the flags, so custom &lt;em&gt;idpattern&lt;/em&gt;s must follow conventions for verbose regular expressions.</source>
          <target state="translated">&lt;em&gt;flags&lt;/em&gt; &amp;ndash; 대체 인식에 사용되는 정규식을 컴파일 할 때 적용되는 정규식 플래그입니다. 기본값은 &lt;code&gt;re.IGNORECASE&lt;/code&gt; 입니다. 주의 &lt;code&gt;re.VERBOSE&lt;/code&gt; 항상 사용자 정의 플래그에 추가됩니다 &lt;em&gt;idpattern&lt;/em&gt; 의이 자세한 정규식에 대한 규칙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="5da3acf9bf0611e10487dcd1d58836648480597a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is a bitmask for &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;flags&lt;/em&gt; 는 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; 의 비트 마스크입니다 .</target>
        </trans-unit>
        <trans-unit id="7f7aff633f8a45b09ea29bd4a0c311124852254a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is deprecated and completely ignored. However, when supplied, its value must be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;select.EPOLL_CLOEXEC&lt;/code&gt;, otherwise &lt;code&gt;OSError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 는 더 이상 사용되지 않으며 완전히 무시됩니다. 그러나 제공된 경우 해당 값은 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;select.EPOLL_CLOEXEC&lt;/code&gt; 이어야합니다 . 그렇지 않으면 &lt;code&gt;OSError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2d8025d0081b9105b73b150ee2b2ade3fd315d63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; specifies the nature of the mapping. &lt;code&gt;MAP_PRIVATE&lt;/code&gt; creates a private copy-on-write mapping, so changes to the contents of the mmap object will be private to this process, and &lt;code&gt;MAP_SHARED&lt;/code&gt; creates a mapping that&amp;rsquo;s shared with all other processes mapping the same areas of the file. The default value is &lt;code&gt;MAP_SHARED&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 는 매핑의 특성을 지정합니다. &lt;code&gt;MAP_PRIVATE&lt;/code&gt; 는 쓰기 전용 복사 맵핑을 작성하므로 mmap 오브젝트의 컨텐츠 변경 사항은이 프로세스에 대해 비공개이며 &lt;code&gt;MAP_SHARED&lt;/code&gt; 는 파일의 동일한 영역을 맵핑하는 다른 모든 프로세스와 공유되는 맵핑을 작성합니다. 기본값은 &lt;code&gt;MAP_SHARED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="659a6ea17b80c5dee0bc5fb0922edc0f05a58c82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foldspaces&lt;/em&gt; is a flag that specifies whether the &amp;lsquo;y&amp;rsquo; short sequence should be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature is not supported by the &amp;ldquo;standard&amp;rdquo; Ascii85 encoding.</source>
          <target state="translated">&lt;em&gt;foldspaces&lt;/em&gt; 는 'y'짧은 시퀀스를 4 개의 연속 공백 (ASCII 0x20)에 대한 속기로 받아 들여야하는지 여부를 지정하는 플래그입니다. 이 기능은 &quot;표준&quot;Ascii85 인코딩에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abd6459dbc2b50631e7e056cd75a4b5c28138796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foldspaces&lt;/em&gt; is an optional flag that uses the special short sequence &amp;lsquo;y&amp;rsquo; instead of 4 consecutive spaces (ASCII 0x20) as supported by &amp;lsquo;btoa&amp;rsquo;. This feature is not supported by the &amp;ldquo;standard&amp;rdquo; Ascii85 encoding.</source>
          <target state="translated">&lt;em&gt;foldspaces&lt;/em&gt; 는 'btoa'가 지원하는 4 개의 연속 공백 (ASCII 0x20) 대신 특수 짧은 시퀀스 'y'를 사용하는 선택적 플래그입니다. 이 기능은 &quot;표준&quot;Ascii85 인코딩에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5c079df71e1a725bce4df3832eaf389af6ed973" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;force&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2c4916a297253e425c6756ecc597aabaa9ca9b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fork&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fork&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3b322a32760c13efaabf701a03387efc54c5b4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;forkserver&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;forkserver&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bcb7ec9bf32d2969f141a03b6df92d8470242f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d5baab8f1c3cbde01d015562d6bf788f39248b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; controls the archive format for writing. It must be one of the constants &lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt;&lt;code&gt;USTAR_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt; that are defined at module level. When reading, format will be automatically detected, even if different formats are present in a single archive.</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt; 은 기록 할 아카이브 형식을 제어합니다. 모듈 레벨에서 정의 된 상수 &lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt; &lt;code&gt;USTAR_FORMAT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt; &lt;code&gt;GNU_FORMAT&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt; 중 하나 여야합니다 . 읽을 때 다른 형식이 단일 아카이브에 존재하더라도 형식이 자동으로 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0ba449c17f5e9e76a52cb13eab1fc8d761a0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; is the archive format: one of &amp;ldquo;zip&amp;rdquo;, &amp;ldquo;tar&amp;rdquo;, &amp;ldquo;gztar&amp;rdquo;, &amp;ldquo;bztar&amp;rdquo;, or &amp;ldquo;xztar&amp;rdquo;. Or any other format registered with &lt;a href=&quot;#shutil.register_unpack_format&quot;&gt;&lt;code&gt;register_unpack_format()&lt;/code&gt;&lt;/a&gt;. If not provided, &lt;a href=&quot;#shutil.unpack_archive&quot;&gt;&lt;code&gt;unpack_archive()&lt;/code&gt;&lt;/a&gt; will use the archive file name extension and see if an unpacker was registered for that extension. In case none is found, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;형식&lt;/em&gt; 은 &quot;zip&quot;, &quot;tar&quot;, &quot;gztar&quot;, &quot;bztar&quot;또는 &quot;xztar&quot;중 하나입니다. 또는 &lt;a href=&quot;#shutil.register_unpack_format&quot;&gt; &lt;code&gt;register_unpack_format()&lt;/code&gt; &lt;/a&gt; 다른 형식 . 제공되지 않은 경우 &lt;a href=&quot;#shutil.unpack_archive&quot;&gt; &lt;code&gt;unpack_archive()&lt;/code&gt; &lt;/a&gt; 는 아카이브 파일 이름 확장자를 사용하여 해당 확장자에 대한 압축 해제 기가 등록되었는지 확인합니다. 아무것도 발견되지 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5729daf838d0df4cb6f66f5dd5e552441b642e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;formatters&lt;/em&gt; - the corresponding value will be a dict in which each key is a formatter id and each value is a dict describing how to configure the corresponding &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;em&gt;포맷터&lt;/em&gt; -해당 값은 각 키가 포맷터 ID이고 각 값은 해당 &lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 인스턴스 를 구성하는 방법을 설명하는 dict 입니다.</target>
        </trans-unit>
        <trans-unit id="049a6103bad1d94b8c9986e27c9f73acce01cb8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fp&lt;/em&gt; is a file-like object pointing to the &lt;code&gt;config.h&lt;/code&gt;-like file.</source>
          <target state="translated">&lt;em&gt;fp&lt;/em&gt; 는 &lt;code&gt;config.h&lt;/code&gt; 와 같은 파일을 가리키는 파일과 같은 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="2efd3eefb9368b9a8703608f6ec612832c75e2b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fresh&lt;/em&gt; is an iterable of additional module names that are also removed from the &lt;code&gt;sys.modules&lt;/code&gt; cache before doing the import.</source>
          <target state="translated">&lt;em&gt;fresh&lt;/em&gt; 는 가져 오기를 수행하기 전에 &lt;code&gt;sys.modules&lt;/code&gt; 캐시 에서 제거되는 추가 모듈 이름을 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f1bb58d10c4ac28c4b910974612fdc5bf44161c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fromdesc&lt;/em&gt; and &lt;em&gt;todesc&lt;/em&gt; are interpreted as unescaped HTML and should be properly escaped while receiving input from untrusted sources.</source>
          <target state="translated">&lt;em&gt;fromdesc&lt;/em&gt; 및 &lt;em&gt;todesc&lt;/em&gt; 는 이스케이프 처리되지 않은 HTML로 해석되며 신뢰할 수없는 소스로부터 입력을받는 동안 올바르게 이스케이프되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4f4f46fb1ea108658b7110a26678ca94dd894f3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fromdesc&lt;/em&gt; and &lt;em&gt;todesc&lt;/em&gt; are optional keyword arguments to specify from/to file column header strings (both default to an empty string).</source>
          <target state="translated">&lt;em&gt;fromdesc&lt;/em&gt; 및 &lt;em&gt;todesc&lt;/em&gt; 는 시작 / 종료 파일 열 헤더 문자열 (기본값은 빈 문자열)을 지정하는 선택적 키워드 인수입니다.</target>
        </trans-unit>
        <trans-unit id="ba44330bcbc2dc1114ef21e0de587a40cd868e89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; is executed asynchronously and several calls to &lt;em&gt;func&lt;/em&gt; may be made concurrently.</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt; 는 비동기 적으로 실행되며 &lt;em&gt;func에 대한&lt;/em&gt; 여러 호출 이 동시에 이루어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcda0a4e83ff885494fec1b3bd6b0ce1cd4b1595" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; is the foreign function object itself, this allows reusing the same callable object to check or post process the results of several functions.</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt; 는 외부 함수 객체 자체이므로 동일한 호출 가능한 객체를 재사용하여 여러 함수의 결과를 확인하거나 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="2921a5b310a1e6e1ab7e15ff4c54bb6c5f6f38af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt; or a callable (objects which are both, like normal functions, are handled as descriptors).</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;디스크립터&lt;/a&gt; 또는 호출 가능 해야합니다 (일반 함수와 같이 둘 다 객체는 디스크립터로 처리됨).</target>
        </trans-unit>
        <trans-unit id="48822c4c007a59cf50d93959089693aa78143c4e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt; or a callable (objects which are both, like normal functions, are handled as descriptors).</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt; or a callable (objects which are both, like normal functions, are handled as descriptors).</target>
        </trans-unit>
        <trans-unit id="024bb4acb83475ce9198a02837de2120c51f5017" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt; is the callable that will be used to unpack archives. The callable will receive the &lt;em&gt;base_name&lt;/em&gt; of the file to create, followed by the &lt;em&gt;base_dir&lt;/em&gt; (which defaults to &lt;a href=&quot;os#os.curdir&quot;&gt;&lt;code&gt;os.curdir&lt;/code&gt;&lt;/a&gt;) to start archiving from. Further arguments are passed as keyword arguments: &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group&lt;/em&gt;, &lt;em&gt;dry_run&lt;/em&gt; and &lt;em&gt;logger&lt;/em&gt; (as passed in &lt;a href=&quot;#shutil.make_archive&quot;&gt;&lt;code&gt;make_archive()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;함수&lt;/em&gt; 는 아카이브를 압축 해제하는 데 사용될 호출 가능입니다. 호출 가능 파일은 생성 할 파일 의 &lt;em&gt;base_name&lt;/em&gt; 을 수신 한 다음 &lt;em&gt;base_dir&lt;/em&gt; (기본값은 &lt;a href=&quot;os#os.curdir&quot;&gt; &lt;code&gt;os.curdir&lt;/code&gt; &lt;/a&gt; )을 통해 아카이브를 시작합니다. 추가 인수는 키워드 인수 ( &lt;em&gt;owner&lt;/em&gt; , &lt;em&gt;group&lt;/em&gt; , &lt;em&gt;dry_run&lt;/em&gt; 및 &lt;em&gt;logger)&lt;/em&gt; 로 전달됩니다 ( &lt;a href=&quot;#shutil.make_archive&quot;&gt; &lt;code&gt;make_archive()&lt;/code&gt; &lt;/a&gt; 에 전달됨 ).</target>
        </trans-unit>
        <trans-unit id="990936aa4489c5f653a5a98ec8e4af0ffe9aaece" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt; is the callable that will be used to unpack archives. The callable will receive the path of the archive, followed by the directory the archive must be extracted to.</source>
          <target state="translated">&lt;em&gt;함수&lt;/em&gt; 는 아카이브를 압축 해제하는 데 사용될 호출 가능입니다. 콜 러블은 아카이브의 경로를 수신 한 다음 아카이브를 추출해야하는 디렉토리를받습니다.</target>
        </trans-unit>
        <trans-unit id="4b6d1e9091e4faf1c20414208edf1dea530e49a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;globs&lt;/em&gt;, &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;filename&lt;/em&gt;, and &lt;em&gt;lineno&lt;/em&gt; are attributes for the new &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. See the documentation for &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;em&gt;globs&lt;/em&gt; , &lt;em&gt;name&lt;/em&gt; , &lt;em&gt;filename&lt;/em&gt; 및 &lt;em&gt;lineno&lt;/em&gt; 는 새로운 &lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 객체의 속성입니다 . 자세한 내용은 &lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d10d68a92e0adde0b3a4eda6439be998e9cd481" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;group&lt;/em&gt; should be &lt;code&gt;None&lt;/code&gt;; reserved for future extension when a &lt;code&gt;ThreadGroup&lt;/code&gt; class is implemented.</source>
          <target state="translated">&lt;em&gt;그룹&lt;/em&gt; 은 &lt;code&gt;None&lt;/code&gt; 이어야합니다 . &lt;code&gt;ThreadGroup&lt;/code&gt; 클래스가 구현 될 때 향후 확장을 위해 예약되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="019f52d59b96c6517916e7da958d78720531b67a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;gztar&lt;/em&gt;: gzip&amp;rsquo;ed tar-file (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="translated">&lt;em&gt;gztar&lt;/em&gt; : gzip의 tar 파일 ( &lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; 모듈이 사용 가능한 경우).</target>
        </trans-unit>
        <trans-unit id="20097f41e30e844a4d97257ed244d77e1982c3db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handler&lt;/em&gt; should be an instance of &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;. The following methods are searched, and added to the possible chains (note that HTTP errors are a special case). Note that, in the following, &lt;em&gt;protocol&lt;/em&gt; should be replaced with the actual protocol to handle, for example &lt;code&gt;http_response()&lt;/code&gt; would be the HTTP protocol response handler. Also &lt;em&gt;type&lt;/em&gt; should be replaced with the actual HTTP code, for example &lt;code&gt;http_error_404()&lt;/code&gt; would handle HTTP 404 errors.</source>
          <target state="translated">&lt;em&gt;handler&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt; 의 인스턴스 여야 합니다. 다음 메소드가 검색되어 가능한 체인에 추가됩니다 (HTTP 오류는 특별한 경우입니다). 다음에서 &lt;em&gt;프로토콜&lt;/em&gt; 은 처리 할 실제 프로토콜로 바꿔야합니다. 예를 들어 &lt;code&gt;http_response()&lt;/code&gt; 는 HTTP 프로토콜 응답 핸들러입니다. 또한 &lt;em&gt;type&lt;/em&gt; 은 실제 HTTP 코드로 대체되어야합니다. 예를 들어 &lt;code&gt;http_error_404()&lt;/code&gt; 는 HTTP 404 오류를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="775a06a4279815d8c68952a5fa26e292e4ffb2ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handlers&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;handlers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0363a10c59e9a720d4ae2455f81f8b33fffcb15f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handlers&lt;/em&gt; - the corresponding value will be a dict in which each key is a handler id and each value is a dict describing how to configure the corresponding Handler instance.</source>
          <target state="translated">&lt;em&gt;핸들러&lt;/em&gt; -해당 값은 각 키가 핸들러 ID이고 각 값이 해당 핸들러 인스턴스를 구성하는 방법을 설명하는 dict입니다.</target>
        </trans-unit>
        <trans-unit id="5376df0c122869a14ef9954243b6dd2d24ccda23" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;happy_eyeballs_delay&lt;/em&gt;, if given, enables Happy Eyeballs for this connection. It should be a floating-point number representing the amount of time in seconds to wait for a connection attempt to complete, before starting the next attempt in parallel. This is the &amp;ldquo;Connection Attempt Delay&amp;rdquo; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 8305&lt;/strong&gt;&lt;/a&gt;. A sensible default value recommended by the RFC is &lt;code&gt;0.25&lt;/code&gt; (250 milliseconds).</source>
          <target state="translated">&lt;em&gt;happy_eyeballs_delay (&lt;/em&gt; 제공된 경우)는이 연결에 대해 Happy Eyeballs를 활성화합니다. 다음 시도를 병렬로 시작하기 전에 연결 시도가 완료 될 때까지 대기하는 시간 (초)을 나타내는 부동 소수점 숫자 여야합니다. 이것은 &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 8305에&lt;/strong&gt;&lt;/a&gt; 정의 된 &quot;연결 시도 지연&quot; 입니다. RFC에서 권장하는 적절한 기본값은 &lt;code&gt;0.25&lt;/code&gt; (250 밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="19002ecd80402af1eff18e40cbfefbae4b38c43a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hatype&lt;/em&gt; - Optional integer specifying the ARP hardware address type.</source>
          <target state="translated">&lt;em&gt;hatype&lt;/em&gt; -ARP 하드웨어 주소 유형을 지정하는 선택적 정수입니다.</target>
        </trans-unit>
        <trans-unit id="b1d1a18981114ad20cba03c9e1e513532cdd5c58" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;headers&lt;/em&gt; should be a dictionary, and will be treated as if &lt;a href=&quot;#urllib.request.Request.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt; was called with each key and value as arguments. This is often used to &amp;ldquo;spoof&amp;rdquo; the &lt;code&gt;User-Agent&lt;/code&gt; header value, which is used by a browser to identify itself &amp;ndash; some HTTP servers only allow requests coming from common browsers as opposed to scripts. For example, Mozilla Firefox may identify itself as &lt;code&gt;&quot;Mozilla/5.0
(X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11&quot;&lt;/code&gt;, while &lt;a href=&quot;urllib#module-urllib&quot;&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s default user agent string is &lt;code&gt;&quot;Python-urllib/2.6&quot;&lt;/code&gt; (on Python 2.6).</source>
          <target state="translated">&lt;em&gt;헤더&lt;/em&gt; 는 사전이어야하며 각 키와 값을 인수로 사용하여 &lt;a href=&quot;#urllib.request.Request.add_header&quot;&gt; &lt;code&gt;add_header()&lt;/code&gt; &lt;/a&gt; 를 호출 한 것처럼 처리됩니다 . 이는 종종 &lt;code&gt;User-Agent&lt;/code&gt; 헤더 값 을 &quot;스푸핑&quot;하는 데 사용되며, 이는 브라우저가 자체를 식별하는 데 사용합니다. 일부 HTTP 서버는 스크립트가 아닌 일반 브라우저에서 오는 요청 만 허용합니다. 예를 들어, Mozilla Firefox는 자신을 &lt;code&gt;&quot;Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11&quot;&lt;/code&gt; 로 식별 할 수 있지만 &lt;a href=&quot;urllib#module-urllib&quot;&gt; &lt;code&gt;urllib&lt;/code&gt; &lt;/a&gt; 의 기본 사용자 에이전트 문자열은 &lt;code&gt;&quot;Python-urllib/2.6&quot;&lt;/code&gt; (Python에서 2.6).</target>
        </trans-unit>
        <trans-unit id="87ca8377a1ba9bb844a40bc193fe5417a02560cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hexversion&lt;/em&gt; is the implementation version in hexadecimal format, like &lt;a href=&quot;#sys.hexversion&quot;&gt;&lt;code&gt;sys.hexversion&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;hexversion은&lt;/em&gt; 같은 16 진수 형식의 구현 버전입니다 &lt;a href=&quot;#sys.hexversion&quot;&gt; &lt;code&gt;sys.hexversion&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="749fee2926f260c25058e37076c4b793429880a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;host&lt;/em&gt; is either an authority (e.g. &lt;code&gt;&quot;python.org&quot;&lt;/code&gt;) or a URL containing an authority component (e.g. &lt;code&gt;&quot;http://python.org/&quot;&lt;/code&gt;). In either case, the authority must not contain a userinfo component (so, &lt;code&gt;&quot;python.org&quot;&lt;/code&gt; and &lt;code&gt;&quot;python.org:80&quot;&lt;/code&gt; are fine, &lt;code&gt;&quot;joe:password@python.org&quot;&lt;/code&gt; is not).</source>
          <target state="translated">&lt;em&gt;host&lt;/em&gt; 는 권한 (예 : &lt;code&gt;&quot;python.org&quot;&lt;/code&gt; )이거나 권한 구성 요소를 포함하는 URL (예 : &lt;code&gt;&quot;http://python.org/&quot;&lt;/code&gt; )입니다. 두 경우 모두 권한에 userinfo 구성 요소가 포함되어서는 안됩니다 (따라서 &lt;code&gt;&quot;python.org&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;python.org:80&quot;&lt;/code&gt; 은 &lt;code&gt;&quot;joe:password@python.org&quot;&lt;/code&gt; 가 아님).</target>
        </trans-unit>
        <trans-unit id="1d7c85740e002f6c63bfa13b0df1e70b1e04fa7a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;i&lt;/em&gt;th item of &lt;em&gt;s&lt;/em&gt;, origin 0</source>
          <target state="translated">&lt;em&gt;난&lt;/em&gt; 의 번째 항목 &lt;em&gt;의&lt;/em&gt; 원점 0</target>
        </trans-unit>
        <trans-unit id="12adb3301b1a2ea74f32412cd0f3ea5334e15169" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;idpattern&lt;/em&gt; &amp;ndash; This is the regular expression describing the pattern for non-braced placeholders. The default value is the regular expression &lt;code&gt;(?a:[_a-z][_a-z0-9]*)&lt;/code&gt;. If this is given and &lt;em&gt;braceidpattern&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; this pattern will also apply to braced placeholders.</source>
          <target state="translated">&lt;em&gt;idpattern&lt;/em&gt; &amp;ndash; 비 &lt;em&gt;괄호&lt;/em&gt; 자리 표시 자의 패턴을 설명하는 정규식입니다. 기본값은 정규식 &lt;code&gt;(?a:[_a-z][_a-z0-9]*)&lt;/code&gt; 입니다. 이것이 주어지고 &lt;em&gt;braceidpattern&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; &lt;em&gt;이면&lt;/em&gt; 이 패턴은 &lt;em&gt;괄호&lt;/em&gt; 자리 표시 자에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="1411d49f7fef974f9ae49c3130f7b8cd4e2f910f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ifname&lt;/em&gt; - String specifying the device name.</source>
          <target state="translated">&lt;em&gt;ifname-&lt;/em&gt; 장치 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="2d6825d2a77e54718ef87fe8bcb66f7642cf9ab7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ignore_discard&lt;/em&gt;: save even cookies set to be discarded. &lt;em&gt;ignore_expires&lt;/em&gt;: save even cookies that have expired</source>
          <target state="translated">&lt;em&gt;ignore_discard&lt;/em&gt; : 삭제되도록 설정된 쿠키도 저장합니다. &lt;em&gt;ignore_expires&lt;/em&gt; : 만료 된 쿠키도 저장</target>
        </trans-unit>
        <trans-unit id="3b3c705874a6311b52a47fc891e2bad904e773d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ignorechars&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string containing characters to ignore from the input. This should only contain whitespace characters, and by default contains all whitespace characters in ASCII.</source>
          <target state="translated">&lt;em&gt;ignorechars&lt;/em&gt; 는 입력에서 무시할 문자를 포함 하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 또는 ASCII 문자열 이어야합니다 . 공백 문자 만 포함해야하며 기본적으로 ASCII의 모든 공백 문자가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ac893ec8f3c8516188c335bb5f931d6ea00297ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ignorechars&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string containing characters to ignore from the input. This should only contain whitespace characters, and by default contains all whitespace characters in ASCII.</source>
          <target state="translated">&lt;em&gt;ignorechars&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string containing characters to ignore from the input. This should only contain whitespace characters, and by default contains all whitespace characters in ASCII.</target>
        </trans-unit>
        <trans-unit id="7e9575b552fbe6ff97c18fb1557b3f236141972f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;implementation&lt;/em&gt;: The name of the underlying C function used to get the clock value. Refer to &lt;a href=&quot;#time-clock-id-constants&quot;&gt;Clock ID Constants&lt;/a&gt; for possible values.</source>
          <target state="translated">&lt;em&gt;구현&lt;/em&gt; : 클럭 값을 얻는 데 사용되는 기본 C 함수의 이름입니다. 가능한 값 은 &lt;a href=&quot;#time-clock-id-constants&quot;&gt;시계 ID 상수&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a231e9a2b50cc33783fd90ec5fdcfea78e47a15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in_dict&lt;/em&gt; can also be a string specifying the name of the dictionary, which will then be fetched by importing it.</source>
          <target state="translated">&lt;em&gt;in_dict&lt;/em&gt; 는 사전의 이름을 지정하는 문자열 일 수도 있으며, 사전을 가져 와서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a6c1450a41a7842a43b4c20bdaed54707db1e3ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in_dict&lt;/em&gt; can be a dictionary or a mapping like container. If it is a mapping then it must at least support getting, setting and deleting items plus iterating over keys.</source>
          <target state="translated">&lt;em&gt;in_dict&lt;/em&gt; 는 사전 또는 컨테이너와 같은 매핑 일 수 있습니다. 맵핑 인 경우 최소한 항목 가져 오기, 설정 및 삭제와 키 반복을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="0e50a620019c6d1eb1ecd04050d93a070068ae01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;include&lt;/em&gt;: directory for non-platform-specific header files.</source>
          <target state="translated">&lt;em&gt;include&lt;/em&gt; : 비 플랫폼 특정 헤더 파일 용 디렉토리.</target>
        </trans-unit>
        <trans-unit id="3e43eb4121b976ddbb2d42cabb6588f37024b659" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;incremental&lt;/em&gt; - whether the configuration is to be interpreted as incremental to the existing configuration. This value defaults to &lt;code&gt;False&lt;/code&gt;, which means that the specified configuration replaces the existing configuration with the same semantics as used by the existing &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">&lt;em&gt;incremental-&lt;/em&gt; 구성을 기존 구성에 대한 증분으로 해석할지 여부입니다. 이 값의 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 즉, 지정된 구성이 기존 구성을 기존 &lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt; API 에서 사용하는 것과 동일한 의미로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="0b103b81fdfbdb5223f4482c7c0170431bc193bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt; is an integer that identifies the index of the key to retrieve.</source>
          <target state="translated">&lt;em&gt;index&lt;/em&gt; 는 검색 할 키의 색인을 식별하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="b238a08563d77f477a1c8c8e336a3f0d32becace" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt; is an integer that identifies the index of the value to retrieve.</source>
          <target state="translated">&lt;em&gt;index&lt;/em&gt; 는 검색 할 값의 인덱스를 식별하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="312fca48ffe0a3d02824b7ca7f719ed965b37a0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;info&lt;/em&gt; is a dict providing more information for the callback. The following keys are currently defined:</source>
          <target state="translated">&lt;em&gt;info&lt;/em&gt; 는 콜백에 대한 추가 정보를 제공하는 기술입니다. 현재 다음 키가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2468320ac7c78509ec5803020a6212cf10b99ae3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;init_or_size&lt;/em&gt; must be an integer which specifies the size of the array, or a bytes object which will be used to initialize the array items.</source>
          <target state="translated">&lt;em&gt;init_or_size&lt;/em&gt; 는 배열의 크기를 지정하는 정수이거나 배열 항목을 초기화하는 데 사용될 bytes 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d73e8214aa211bf054cf4489c96f6d19e92a20c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;init_or_size&lt;/em&gt; must be an integer which specifies the size of the array, or a string which will be used to initialize the array items.</source>
          <target state="translated">&lt;em&gt;init_or_size&lt;/em&gt; 는 배열의 크기를 지정하는 정수이거나 배열 항목을 초기화하는 데 사용될 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="5cbe4ce4a1318cb9eba56ce798113704d1f3cd34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker process; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.process.BrokenProcessPool&quot;&gt;&lt;code&gt;BrokenProcessPool&lt;/code&gt;&lt;/a&gt;, as well any attempt to submit more jobs to the pool.</source>
          <target state="translated">&lt;em&gt;이니셜 라이저&lt;/em&gt; 는 각 작업자 프로세스 시작시 호출되는 선택적 호출 가능입니다. &lt;em&gt;initargs&lt;/em&gt; 는 이니셜 라이저로 전달되는 인수의 튜플입니다. 해야 &lt;em&gt;초기화&lt;/em&gt; 예외를 발생, 모든 현재 보류중인 작업은 올릴 것이다 &lt;a href=&quot;#concurrent.futures.process.BrokenProcessPool&quot;&gt; &lt;code&gt;BrokenProcessPool&lt;/code&gt; 을&lt;/a&gt; 뿐만 아니라, 풀에 더 많은 일자리를 제출하려는 시도를.</target>
        </trans-unit>
        <trans-unit id="cd8e0e8c171be9b3f54effb1ba39568f9b7e64b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker process; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.process.BrokenProcessPool&quot;&gt;&lt;code&gt;BrokenProcessPool&lt;/code&gt;&lt;/a&gt;, as well as any attempt to submit more jobs to the pool.</source>
          <target state="translated">&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker process; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.process.BrokenProcessPool&quot;&gt; &lt;code&gt;BrokenProcessPool&lt;/code&gt; &lt;/a&gt;, as well as any attempt to submit more jobs to the pool.</target>
        </trans-unit>
        <trans-unit id="82de8883530e800a032741e57bc608b0520afc43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker thread; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.thread.BrokenThreadPool&quot;&gt;&lt;code&gt;BrokenThreadPool&lt;/code&gt;&lt;/a&gt;, as well as any attempt to submit more jobs to the pool.</source>
          <target state="translated">&lt;em&gt;이니셜 라이저&lt;/em&gt; 는 각 워커 스레드 시작시 호출되는 선택적 호출 가능입니다. &lt;em&gt;initargs&lt;/em&gt; 는 이니셜 라이저로 전달되는 인수의 튜플입니다. 해야 &lt;em&gt;초기화&lt;/em&gt; 예외를 발생, 모든 현재 보류중인 작업은 올릴 것이다 &lt;a href=&quot;#concurrent.futures.thread.BrokenThreadPool&quot;&gt; &lt;code&gt;BrokenThreadPool&lt;/code&gt; 를&lt;/a&gt; 풀에 더 많은 일자리를 제출 시도뿐만 아니라.</target>
        </trans-unit>
        <trans-unit id="634d994be54521c060187c2c7273fdeecc736fc3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inline_comment_prefixes&lt;/em&gt;, default value: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;inline_comment_prefixes&lt;/em&gt; , 기본값 : &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a807765cd4f1f863a9842655deab83e4e8611435" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inner_size&lt;/em&gt;: inner digest size (0 to 64 for BLAKE2b, 0 to 32 for BLAKE2s, 0 in sequential mode).</source>
          <target state="translated">&lt;em&gt;inner_size&lt;/em&gt; : 내부 다이제스트 크기 (BLAKE2b의 경우 0-64, BLAKE2의 경우 0-32, 순차 모드의 경우 0).</target>
        </trans-unit>
        <trans-unit id="fd8c181abfc4c08d0ba643db3684019e25defb23" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;integer&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;integer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="492cce424bb68d29df8b4dcbf735e456a1c9c8b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interleave&lt;/em&gt; controls address reordering when a host name resolves to multiple IP addresses. If &lt;code&gt;0&lt;/code&gt; or unspecified, no reordering is done, and addresses are tried in the order returned by &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;. If a positive integer is specified, the addresses are interleaved by address family, and the given integer is interpreted as &amp;ldquo;First Address Family Count&amp;rdquo; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 8305&lt;/strong&gt;&lt;/a&gt;. The default is &lt;code&gt;0&lt;/code&gt; if &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; is not specified, and &lt;code&gt;1&lt;/code&gt; if it is.</source>
          <target state="translated">&lt;em&gt;interleave&lt;/em&gt; 는 호스트 이름이 여러 IP 주소로 해석 될 때 주소 순서를 제어합니다. &lt;code&gt;0&lt;/code&gt; 또는 지정되지 않은 경우 재정렬이 수행되지 않으며 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 순서대로 주소가 시도됩니다 . 양의 정수가 지정되면 주소는 주소 패밀리에 의해 인터리브되고 지정된 정수는 &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 8305에&lt;/strong&gt;&lt;/a&gt; 정의 된대로 &quot;첫 번째 주소 패밀리 수&quot;로 해석됩니다 . &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; 가 지정되지 않은 경우 기본값은 &lt;code&gt;0&lt;/code&gt; 이고 , 지정되어 있으면 &lt;code&gt;1&lt;/code&gt; 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e6da0ed040c0fc2389d25d7736dd52b8984358c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interpolation&lt;/em&gt;, default value: &lt;code&gt;configparser.BasicInterpolation&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;보간&lt;/em&gt; , 기본값 : &lt;code&gt;configparser.BasicInterpolation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e85a495b156a22278cb58f4255011b8648b17192" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalid&lt;/em&gt; &amp;ndash; This group matches any other delimiter pattern (usually a single delimiter), and it should appear last in the regular expression.</source>
          <target state="translated">&lt;em&gt;invalid&lt;/em&gt; &amp;ndash;이 그룹은 다른 구분 기호 패턴 (일반적으로 단일 구분 기호)과 일치하며 정규식에서 마지막에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="bf20d24accf748c3213a370737ef8a0bab2bfb54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalidation_mode&lt;/em&gt; should be a member of the &lt;a href=&quot;#py_compile.PycInvalidationMode&quot;&gt;&lt;code&gt;PycInvalidationMode&lt;/code&gt;&lt;/a&gt; enum and controls how the generated bytecode cache is invalidated at runtime. The default is &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt;&lt;/a&gt; if the &lt;code id=&quot;index-3&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, otherwise the default is &lt;a href=&quot;#py_compile.PycInvalidationMode.TIMESTAMP&quot;&gt;&lt;code&gt;PycInvalidationMode.TIMESTAMP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;invalidation_mode&lt;/em&gt; 는 &lt;a href=&quot;#py_compile.PycInvalidationMode&quot;&gt; &lt;code&gt;PycInvalidationMode&lt;/code&gt; &lt;/a&gt; 열거 형 의 멤버 여야하며 생성 된 바이트 코드 캐시가 런타임에 무효화되는 방법을 제어합니다. &lt;code id=&quot;index-3&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 환경 변수가 설정된 경우 기본값은 &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt; &lt;/a&gt; 이고 , 그렇지 않은 경우 기본값은 &lt;a href=&quot;#py_compile.PycInvalidationMode.TIMESTAMP&quot;&gt; &lt;code&gt;PycInvalidationMode.TIMESTAMP&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1dd467fe669c98fdc811fe92969ee9809a09b6f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalidation_mode&lt;/em&gt; should be a member of the &lt;a href=&quot;py_compile#py_compile.PycInvalidationMode&quot;&gt;&lt;code&gt;py_compile.PycInvalidationMode&lt;/code&gt;&lt;/a&gt; enum and controls how the generated pycs are invalidated at runtime.</source>
          <target state="translated">&lt;em&gt;invalidation_mode&lt;/em&gt; 는 &lt;a href=&quot;py_compile#py_compile.PycInvalidationMode&quot;&gt; &lt;code&gt;py_compile.PycInvalidationMode&lt;/code&gt; &lt;/a&gt; 열거 형 의 멤버 여야하며 생성 된 pycs가 런타임에 무효화되는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d2018866b8d71df63c730a0fc550889fc2599c7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;items&lt;/em&gt; becomes the new selection.</source>
          <target state="translated">&lt;em&gt;항목&lt;/em&gt; 이 새로운 선택이됩니다.</target>
        </trans-unit>
        <trans-unit id="39bd78c89875be990b54b1ad021805737ce4fb05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is a handle returned by &lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt;&lt;code&gt;ConnectRegistry()&lt;/code&gt;&lt;/a&gt; or one of the constants &lt;a href=&quot;#winreg.HKEY_USERS&quot;&gt;&lt;code&gt;HKEY_USERS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#winreg.HKEY_LOCAL_MACHINE&quot;&gt;&lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 &lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt; &lt;code&gt;ConnectRegistry()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#winreg.HKEY_USERS&quot;&gt; &lt;code&gt;HKEY_USERS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#winreg.HKEY_LOCAL_MACHINE&quot;&gt; &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; &lt;/a&gt; 상수 중 하나에 의해 반환 된 핸들 입니다.</target>
        </trans-unit>
        <trans-unit id="08cbe2adbfb3765bd589691363d2b0d253811cb4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is an already open key, or one of the predefined &lt;a href=&quot;#hkey-constants&quot;&gt;HKEY_* constants&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 이미 열린 키이거나 사전 정의 된 &lt;a href=&quot;#hkey-constants&quot;&gt;HKEY_ * 상수&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="3b59f1aa71d38093b3d181b4e796948c30d16ac8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance corresponding to a ready file object. &lt;em&gt;events&lt;/em&gt; is a bitmask of events ready on this file object.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 준비된 파일 객체에 해당하는 &lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt; 인스턴스입니다. &lt;em&gt;events&lt;/em&gt; 는이 파일 객체에서 준비된 이벤트의 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="ff1c3d0b5c1365d14e341733388af17c6e8b2bcd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the name of the field desired, which represents the type of activity to be performed; the default value is &amp;lsquo;view&amp;rsquo;, since in the most common case you simply want to view the body of the MIME-typed data. Other possible values might be &amp;lsquo;compose&amp;rsquo; and &amp;lsquo;edit&amp;rsquo;, if you wanted to create a new body of the given MIME type or alter the existing body data. See &lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt; for a complete list of these fields.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 원하는 필드의 이름으로, 수행 할 활동 유형을 나타냅니다. 가장 일반적인 경우 MIME 형식의 데이터 본문을 보려고하므로 기본값은 'view'입니다. 주어진 MIME 유형의 새 본문을 만들거나 기존 본문 데이터를 변경하려는 경우 다른 가능한 값은 'compose'및 'edit'일 수 있습니다. 이러한 필드의 전체 목록은 &lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22ba50389a99d111b46d794a8ea7e5a6cf55f141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the predefined handle to connect to.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 연결할 미리 정의 된 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="abf0cd057031f2c8a1b1555d9a571ecabb852c06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt; of one argument that is used to extract a comparison key from each input element. The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 각 입력 요소에서 비교 키를 추출하는 데 사용되는 하나의 인수 의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;키 함수&lt;/a&gt; 를 지정합니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; (요소를 직접 비교).</target>
        </trans-unit>
        <trans-unit id="d1a67b039af78eb3f3a78d1db260e4f37c7fa26e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt; of one argument that is used to extract a comparison key from each input element. The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; specifies a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt; of one argument that is used to extract a comparison key from each input element. The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</target>
        </trans-unit>
        <trans-unit id="1e4b51b93fb4bdcfa7e0e3674f54f74ca9ddf508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a function of one argument that is used to extract a comparison key from each element in &lt;em&gt;iterable&lt;/em&gt; (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 &lt;em&gt;반복 가능한&lt;/em&gt; 각 요소에서 비교 키를 추출하는 데 사용되는 하나의 인수 함수를 지정합니다 (예 : &lt;code&gt;key=str.lower&lt;/code&gt; ). 기본값은 &lt;code&gt;None&lt;/code&gt; (요소를 직접 비교).</target>
        </trans-unit>
        <trans-unit id="c33a19355f1e0c031df570da7f43674df2705145" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a function of one argument that is used to extract a comparison key from each list element (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). The key corresponding to each item in the list is calculated once and then used for the entire sorting process. The default value of &lt;code&gt;None&lt;/code&gt; means that list items are sorted directly without calculating a separate key value.</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; 는 각 목록 요소에서 비교 키를 추출하는 데 사용되는 하나의 인수 함수를 지정합니다 (예 : &lt;code&gt;key=str.lower&lt;/code&gt; ). 목록의 각 항목에 해당하는 키가 한 번 계산 된 후 전체 정렬 프로세스에 사용됩니다. 기본값 &lt;code&gt;None&lt;/code&gt; 은 별도의 키 값을 계산하지 않고 목록 항목이 직접 정렬됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f3c6d4f45816d08dd41bc68a94d865c8624578e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt;: key for keyed hashing (up to 64 bytes for BLAKE2b, up to 32 bytes for BLAKE2s).</source>
          <target state="translated">&lt;em&gt;key&lt;/em&gt; : 키 해싱 용 키 (BLAKE2b의 경우 최대 64 바이트, BLAKE2의 경우 최대 32 바이트)</target>
        </trans-unit>
        <trans-unit id="b8510e241f3b93d967e95751900f9c8178bf9b29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt; &amp;ndash; they can point to PEM-formatted private key and certificate chain files (respectively) for the SSL connection.</source>
          <target state="translated">&lt;em&gt;keyfile&lt;/em&gt; 및 &lt;em&gt;certfile&lt;/em&gt; 은 &lt;em&gt;컨텍스트를&lt;/em&gt; 대체하는 기존의 대안 입니다. SSL 연결을 위해 PEM 형식의 개인 키 및 인증서 체인 파일을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fcc5f3bf2370f218ba59be6306e21390fa78000" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt; - they can point to PEM-formatted private key and certificate chain files, respectively, for the SSL connection.</source>
          <target state="translated">&lt;em&gt;keyfile&lt;/em&gt; 및 &lt;em&gt;certfile&lt;/em&gt; 은 &lt;em&gt;컨텍스트를&lt;/em&gt; 대체하는 기존의 대안 입니다. SSL 연결을 위해 PEM 형식의 개인 키 및 인증서 체인 파일을 각각 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f7920572aa4f055056a62073c83a190a130bb8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt;, and can point to a PEM formatted private key and certificate chain file for the SSL connection.</source>
          <target state="translated">&lt;em&gt;keyfile&lt;/em&gt; 및 &lt;em&gt;certfile&lt;/em&gt; 은 &lt;em&gt;context&lt;/em&gt; 의 기존 대안 이며 SSL 연결을위한 PEM 형식 개인 키 및 인증서 체인 파일을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45ae73da3b108bb1401b0793378aa79f2c3b02ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;ssl_context&lt;/em&gt; - they can point to PEM-formatted private key and certificate chain files for the SSL connection. Note that the &lt;em&gt;keyfile&lt;/em&gt;/&lt;em&gt;certfile&lt;/em&gt; parameters are mutually exclusive with &lt;em&gt;ssl_context&lt;/em&gt;, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;keyfile&lt;/em&gt;/&lt;em&gt;certfile&lt;/em&gt; is provided along with &lt;em&gt;ssl_context&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;keyfile&lt;/em&gt; 및 &lt;em&gt;certfile&lt;/em&gt; 은 &lt;em&gt;ssl_context&lt;/em&gt; 의 기존 대안 입니다. SSL 연결을위한 PEM 형식 개인 키 및 인증서 체인 파일을 가리킬 수 있습니다. 점을 유의 &lt;em&gt;키 파일&lt;/em&gt; / &lt;em&gt;certfile&lt;/em&gt; 파라미터와 상호 배타적 &lt;em&gt;ssl_context을&lt;/em&gt; 하는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를는&lt;/a&gt; 경우 발생 &lt;em&gt;키 파일&lt;/em&gt; / &lt;em&gt;certfile가&lt;/em&gt; 함께 제공된다 &lt;em&gt;ssl_context&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="209ad4e2747cc107c2f689d3277d2c594466fc79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kw&lt;/em&gt; is extra keyword args to pass to &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;kw&lt;/em&gt; 는 &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen()&lt;/code&gt; &lt;/a&gt; 에 전달할 추가 키워드 인수 입니다. &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="365e42c54f5621cb260a47b46535f64501b186b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kwargs&lt;/em&gt; is a dictionary containing additional information. It is empty if &lt;code&gt;decode_data=True&lt;/code&gt; was given as an init argument, otherwise it contains the following keys:</source>
          <target state="translated">&lt;em&gt;kwargs&lt;/em&gt; 는 추가 정보가 포함 된 사전입니다. &lt;code&gt;decode_data=True&lt;/code&gt; 가 init 인수로 제공된 경우 비어 있습니다. 그렇지 않으면 다음 키가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fa0d9d5cad0f20cceb8ad4af2faf107060c44378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kwargs&lt;/em&gt; is a dictionary of keyword arguments for the target invocation. Defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;kwargs&lt;/em&gt; 는 대상 호출을위한 키워드 인수 사전입니다. 기본값은 &lt;code&gt;{}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a4c934145b0f1e6945f6567939ee12c0e14bc766" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;last_node&lt;/em&gt;: boolean indicating whether the processed node is the last one (&lt;code&gt;False&lt;/code&gt; for sequential mode).</source>
          <target state="translated">&lt;em&gt;last_node&lt;/em&gt; : 처리 된 노드가 마지막 노드인지 여부를 나타내는 부울 입니다 (순차 모드의 경우 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="518e343a9d25b30238032b55f97324014f1a24fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;layoutspec&lt;/em&gt;, if specified, is expected to be a list or some other sequence type (excluding strings), where each item should be a tuple and the first item is the layout name and the second item should have the format described in &lt;a href=&quot;#layouts&quot;&gt;Layouts&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;layoutspec&lt;/em&gt; 은 지정된 경우 목록 또는 다른 시퀀스 유형 (문자열 제외)이어야합니다. 여기서 각 항목은 튜플이어야하고 첫 번째 항목은 레이아웃 이름이고 두 번째 항목은 &lt;a href=&quot;#layouts&quot;&gt;Layouts에&lt;/a&gt; 설명 된 형식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c5cfff0d55a43917194d5d4ac22f4763fd9aa92e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;leaf_size&lt;/em&gt;: maximal byte length of leaf (0 to 2**32-1, 0 if unlimited or in sequential mode).</source>
          <target state="translated">&lt;em&gt;leaf_size&lt;/em&gt; : 리프의 최대 바이트 길이 (0-2 ** 32-1, 무제한 또는 순차적 모드 인 경우 0).</target>
        </trans-unit>
        <trans-unit id="f3c763754df45f9e7b346ad1cfc169bef93da398" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;len&lt;/em&gt; is the number of bytes to lock, &lt;em&gt;start&lt;/em&gt; is the byte offset at which the lock starts, relative to &lt;em&gt;whence&lt;/em&gt;, and &lt;em&gt;whence&lt;/em&gt; is as with &lt;a href=&quot;io#io.IOBase.seek&quot;&gt;&lt;code&gt;io.IOBase.seek()&lt;/code&gt;&lt;/a&gt;, specifically:</source>
          <target state="translated">&lt;em&gt;len&lt;/em&gt; 은 잠글 바이트 수이며 &lt;em&gt;start&lt;/em&gt; 는 &lt;em&gt;whence를&lt;/em&gt; 기준으로 잠금이 시작되는 바이트 오프셋 이며 &lt;em&gt;whence&lt;/em&gt; 는 &lt;a href=&quot;io#io.IOBase.seek&quot;&gt; &lt;code&gt;io.IOBase.seek()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="deb5b7f412faa65b59f954692bdd6cf81b6c47c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;level&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a322d203999c747e850600f0b62f6df2e497479" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt; is the compression level &amp;ndash; an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt;. A value of &lt;code&gt;1&lt;/code&gt; (Z_BEST_SPEED) is fastest and produces the least compression, while a value of &lt;code&gt;9&lt;/code&gt; (Z_BEST_COMPRESSION) is slowest and produces the most. &lt;code&gt;0&lt;/code&gt; (Z_NO_COMPRESSION) is no compression. The default value is &lt;code&gt;-1&lt;/code&gt; (Z_DEFAULT_COMPRESSION). Z_DEFAULT_COMPRESSION represents a default compromise between speed and compression (currently equivalent to level 6).</source>
          <target state="translated">&lt;em&gt;level&lt;/em&gt; 은 압축 수준 입니다. &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;9&lt;/code&gt; 사이의 정수 또는 &lt;code&gt;-1&lt;/code&gt; 입니다. &lt;code&gt;1&lt;/code&gt; (Z_BEST_SPEED) 값 은 가장 빠르며 압축률 이 가장 낮으며 &lt;code&gt;9&lt;/code&gt; (Z_BEST_COMPRESSION) 값 은 가장 느리고 가장 많이 생성됩니다. &lt;code&gt;0&lt;/code&gt; (Z_NO_COMPRESSION)은 압축되지 않습니다. 기본값은 &lt;code&gt;-1&lt;/code&gt; (Z_DEFAULT_COMPRESSION)입니다. Z_DEFAULT_COMPRESSION은 속도와 압축 사이의 기본 절충 (현재 레벨 6과 동일)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aace655cc88ee60a72e68e307ac13fd18d020dbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt; specifies whether to use absolute or relative imports. &lt;code&gt;0&lt;/code&gt; (the default) means only perform absolute imports. Positive values for &lt;em&gt;level&lt;/em&gt; indicate the number of parent directories to search relative to the directory of the module calling &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt; for the details).</source>
          <target state="translated">&lt;em&gt;level&lt;/em&gt; 은 절대 또는 상대 수입을 사용할지 여부를 지정합니다. &lt;code&gt;0&lt;/code&gt; (기본값)은 절대 가져 오기만 수행함을 의미합니다. &lt;em&gt;level의&lt;/em&gt; 양수 값은 &lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt; 호출하는 모듈의 디렉토리를 기준으로 검색 할 상위 디렉토리의 수를 나타냅니다 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="0b4611bbbbb0d21ee721e5e3e80fdff6177b12d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;limit&lt;/em&gt; determines the buffer size limit used by the returned &lt;a href=&quot;#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instance. By default the &lt;em&gt;limit&lt;/em&gt; is set to 64 KiB.</source>
          <target state="translated">&lt;em&gt;limit&lt;/em&gt; 는 반환 된 &lt;a href=&quot;#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 사용하는 버퍼 크기 &lt;em&gt;제한을&lt;/em&gt; 결정합니다 . 기본적으로 &lt;em&gt;제한&lt;/em&gt; 은 64 KiB로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8f0e64c22faf2a9a77561773b3515c2f893a85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are optional keyword arguments passed into &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; (used by &lt;a href=&quot;#difflib.HtmlDiff&quot;&gt;&lt;code&gt;HtmlDiff&lt;/code&gt;&lt;/a&gt; to generate the side by side HTML differences). See &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; documentation for argument default values and descriptions.</source>
          <target state="translated">&lt;em&gt;linejunk&lt;/em&gt; 및 &lt;em&gt;charjunk&lt;/em&gt; 는 &lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt; 로 전달되는 선택적 키워드 인수입니다 ( &lt;a href=&quot;#difflib.HtmlDiff&quot;&gt; &lt;code&gt;HtmlDiff&lt;/code&gt; &lt;/a&gt; 에서 HTML 차이를 생성하기 위해 사용 ). 인수 기본값 및 설명 은 &lt;a href=&quot;#difflib.ndiff&quot;&gt; &lt;code&gt;ndiff()&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6da51652c4447ea7c9cef4663004e5b565d62d98" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt;: A function that accepts a single string argument, and returns true if the string is junk, or false if not. The default is &lt;code&gt;None&lt;/code&gt;. There is also a module-level function &lt;a href=&quot;#difflib.IS_LINE_JUNK&quot;&gt;&lt;code&gt;IS_LINE_JUNK()&lt;/code&gt;&lt;/a&gt;, which filters out lines without visible characters, except for at most one pound character (&lt;code&gt;'#'&lt;/code&gt;) &amp;ndash; however the underlying &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; class does a dynamic analysis of which lines are so frequent as to constitute noise, and this usually works better than using this function.</source>
          <target state="translated">&lt;em&gt;linejunk&lt;/em&gt; : 단일 문자열 인수를 허용하고 문자열이 정크이면 true를, 그렇지 않으면 false를 반환하는 함수입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 모듈 수준 함수 &lt;a href=&quot;#difflib.IS_LINE_JUNK&quot;&gt; &lt;code&gt;IS_LINE_JUNK()&lt;/code&gt; &lt;/a&gt; 도 있습니다.이 함수 는 최대 1 파운드 문자 ( &lt;code&gt;'#'&lt;/code&gt; )를 제외하고 보이는 문자없이 행을 필터링합니다. 그러나 기본 &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt; 클래스는 어떤 행이 자주 사용되는지에 대한 동적 분석을 수행합니다. 노이즈를 구성하며 일반적으로이 기능을 사용하는 것보다 더 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="552dff676a70a03d726c2189187f0abbc2f42225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt;: A function that accepts a single string argument, and returns true if the string is junk. The default is &lt;code&gt;None&lt;/code&gt;, meaning that no line is considered junk.</source>
          <target state="translated">&lt;em&gt;linejunk&lt;/em&gt; : 단일 문자열 인수를 허용하고 문자열이 정크 인 경우 true를 반환하는 함수입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 이며, 줄이 정크로 간주되지 않음 을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5f956413fe5c9f1cc3dba4aeecbcf50173ce009e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lineno&lt;/em&gt; is an integer that the line number where the warning occurred must match, or &lt;code&gt;0&lt;/code&gt; to match all line numbers.</source>
          <target state="translated">&lt;em&gt;lineno&lt;/em&gt; 는 경고가 발생한 행 번호가 일치해야하는 정수이거나 모든 행 번호와 일치하려면 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1066554218d32cc75d16a2640e2af6ad7205b44d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linesep&lt;/em&gt; specifies the characters used to separate the lines of the folded header. It defaults to the most useful value for Python application code (&lt;code&gt;\n&lt;/code&gt;), but &lt;code&gt;\r\n&lt;/code&gt; can be specified in order to produce headers with RFC-compliant line separators.</source>
          <target state="translated">&lt;em&gt;linesep&lt;/em&gt; 는 접힌 헤더의 행을 구분하는 데 사용되는 문자를 지정합니다. 기본적으로 Python 응용 프로그램 코드 ( &lt;code&gt;\n&lt;/code&gt; )에 가장 유용한 값 이지만 RFC 호환 행 구분 기호로 헤더를 생성하기 위해 &lt;code&gt;\r\n&lt;/code&gt; 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23544c46abb1ee608e91df7b51009ba80d7e0787" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linespace&lt;/em&gt; - minimum vertical separation necessary between any two</source>
          <target state="translated">&lt;em&gt;linespace&lt;/em&gt; - minimum vertical separation necessary between any two</target>
        </trans-unit>
        <trans-unit id="8a4097ba30f7ec02338fcafc545a0c86b06be509" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loader&lt;/em&gt; is the instance of &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; doing the loading. &lt;em&gt;standard_tests&lt;/em&gt; are the tests that would be loaded by default from the module. It is common for test modules to only want to add or remove tests from the standard set of tests. The third argument is used when loading packages as part of test discovery.</source>
          <target state="translated">&lt;em&gt;loader&lt;/em&gt; 는 로드를 수행하는 &lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 . &lt;em&gt;standard_tests&lt;/em&gt; 는 기본적으로 모듈에서로드되는 테스트입니다. 테스트 모듈은 표준 테스트 세트에서만 테스트를 추가하거나 제거하려는 것이 일반적입니다. 세 번째 인수는 테스트 발견의 일부로 패키지를로드 할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d9a901546caf20af3b8326caff02f2e405bc3cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;local_addr&lt;/em&gt;, if given, is a &lt;code&gt;(local_host, local_port)&lt;/code&gt; tuple used to bind the socket to locally. The &lt;em&gt;local_host&lt;/em&gt; and &lt;em&gt;local_port&lt;/em&gt; are looked up using &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;local_addr (&lt;/em&gt; 제공된 경우 &lt;code&gt;(local_host, local_port)&lt;/code&gt; 은 소켓을 로컬에 바인딩하는 데 사용되는 (local_host, local_port) 튜플입니다. &lt;em&gt;local_host&lt;/em&gt; 및 &lt;em&gt;LOCAL_PORT을&lt;/em&gt; 사용하여 조회됩니다 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="384d3bc9e0061827ad1ab920af651231eaa554c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;local_addr&lt;/em&gt;, if given, is a &lt;code&gt;(local_host, local_port)&lt;/code&gt; tuple used to bind the socket to locally. The &lt;em&gt;local_host&lt;/em&gt; and &lt;em&gt;local_port&lt;/em&gt; are looked up using &lt;code&gt;getaddrinfo()&lt;/code&gt;, similarly to &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;local_addr (&lt;/em&gt; 제공된 경우 &lt;code&gt;(local_host, local_port)&lt;/code&gt; 은 소켓을 로컬에 바인딩하는 데 사용되는 (local_host, local_port) 튜플입니다. &lt;em&gt;local_host&lt;/em&gt; 및 &lt;em&gt;LOCAL_PORT를&lt;/em&gt; 사용하여 조회됩니다 &lt;code&gt;getaddrinfo()&lt;/code&gt; 유사에, &lt;em&gt;호스트&lt;/em&gt; 및 &lt;em&gt;포트&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="13f61d0ff6673513114aa4e046d549461943a73a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;logger&lt;/em&gt; must be an object compatible with &lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 282&lt;/strong&gt;&lt;/a&gt;, usually an instance of &lt;a href=&quot;logging#logging.Logger&quot;&gt;&lt;code&gt;logging.Logger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;로거&lt;/em&gt; 는 일반적으로 &lt;a href=&quot;logging#logging.Logger&quot;&gt; &lt;code&gt;logging.Logger&lt;/code&gt; &lt;/a&gt; 인스턴스 인 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 282&lt;/strong&gt;&lt;/a&gt; 와 호환되는 객체 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="f72bdfd9be3a7c42e9d25f4ead230115761fdc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loggers&lt;/em&gt; - the corresponding value will be a dict in which each key is a logger name and each value is a dict describing how to configure the corresponding Logger instance.</source>
          <target state="translated">&lt;em&gt;로거&lt;/em&gt; -해당 값은 각 키가 로거 이름이고 각 값은 해당 로거 인스턴스를 구성하는 방법을 나타내는 dict입니다.</target>
        </trans-unit>
        <trans-unit id="475dd28e9b18a622e5a06bb19714eb0266ff4249" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;longopts&lt;/em&gt;, if specified, must be a list of strings with the names of the long options which should be supported. The leading &lt;code&gt;'--'&lt;/code&gt; characters should not be included in the option name. Long options which require an argument should be followed by an equal sign (&lt;code&gt;'='&lt;/code&gt;). Optional arguments are not supported. To accept only long options, &lt;em&gt;shortopts&lt;/em&gt; should be an empty string. Long options on the command line can be recognized so long as they provide a prefix of the option name that matches exactly one of the accepted options. For example, if &lt;em&gt;longopts&lt;/em&gt; is &lt;code&gt;['foo', 'frob']&lt;/code&gt;, the option &lt;code&gt;--fo&lt;/code&gt; will match as &lt;code&gt;--foo&lt;/code&gt;, but &lt;code&gt;--f&lt;/code&gt; will not match uniquely, so &lt;a href=&quot;#getopt.GetoptError&quot;&gt;&lt;code&gt;GetoptError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;em&gt;longopts&lt;/em&gt; 는 지정된 경우 지원되어야하는 long 옵션의 이름을 가진 문자열 목록이어야합니다. 옵션 이름에 선행 &lt;code&gt;'--'&lt;/code&gt; 문자를 포함해서는 안됩니다. 인수가 필요한 긴 옵션 뒤에는 등호 ( &lt;code&gt;'='&lt;/code&gt; ) 가 와야합니다 . 선택적 인수는 지원되지 않습니다. 긴 옵션 만 허용하려면 &lt;em&gt;단축 문자&lt;/em&gt; 는 빈 문자열이어야합니다. 명령 행의 긴 옵션은 허용되는 옵션 중 하나와 정확히 일치하는 옵션 이름의 접 두부를 제공하는 한 인식 할 수 있습니다. 예를 들어, &lt;em&gt;longopts&lt;/em&gt; 가 &lt;code&gt;['foo', 'frob']&lt;/code&gt; 인 경우 &lt;code&gt;--fo&lt;/code&gt; 옵션 은 &lt;code&gt;--foo&lt;/code&gt; 와 일치 하지만 &lt;code&gt;--f&lt;/code&gt; 고유하게 일치하지 않으므로 &lt;a href=&quot;#getopt.GetoptError&quot;&gt; &lt;code&gt;GetoptError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="112fec253310b3974981748f871ace136d6d173d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ls&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ls&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="891c63a393c754750fb2d728794ec9e2feebb716" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mail_options&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;mail_options&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="be807a9b4d1face342aed2a169cb407da94e421a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;map&lt;/em&gt; is the socket map to use for connections (an initially empty dictionary is a suitable value). If not specified the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; global socket map is used.</source>
          <target state="translated">&lt;em&gt;map&lt;/em&gt; 은 연결에 사용할 소켓 맵입니다 (처음에는 비어있는 사전이 적합한 값입니다). 지정하지 않으면 &lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt; 전역 소켓 맵이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa9defa51dafaa377616943510c858e26a8b5390" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mask&lt;/em&gt; is a set of signal numbers (e.g. {&lt;a href=&quot;#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGTERM&quot;&gt;&lt;code&gt;signal.SIGTERM&lt;/code&gt;&lt;/a&gt;}). Use &lt;a href=&quot;#signal.valid_signals&quot;&gt;&lt;code&gt;valid_signals()&lt;/code&gt;&lt;/a&gt; for a full mask including all signals.</source>
          <target state="translated">&lt;em&gt;mask&lt;/em&gt; is a set of signal numbers (e.g. {&lt;a href=&quot;#signal.SIGINT&quot;&gt; &lt;code&gt;signal.SIGINT&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#signal.SIGTERM&quot;&gt; &lt;code&gt;signal.SIGTERM&lt;/code&gt; &lt;/a&gt;}). Use &lt;a href=&quot;#signal.valid_signals&quot;&gt; &lt;code&gt;valid_signals()&lt;/code&gt; &lt;/a&gt; for a full mask including all signals.</target>
        </trans-unit>
        <trans-unit id="17ee0eb7ed0c42963b811c23e850a7c4c5e39ffa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mask&lt;/em&gt; is a set of signal numbers (e.g. {&lt;code&gt;signal.SIGINT&lt;/code&gt;, &lt;code&gt;signal.SIGTERM&lt;/code&gt;}). Use &lt;a href=&quot;#signal.valid_signals&quot;&gt;&lt;code&gt;valid_signals()&lt;/code&gt;&lt;/a&gt; for a full mask including all signals.</source>
          <target state="translated">&lt;em&gt;마스크&lt;/em&gt; 는 신호 번호 세트입니다 (예 : { &lt;code&gt;signal.SIGINT&lt;/code&gt; , &lt;code&gt;signal.SIGTERM&lt;/code&gt; }). 모든 신호를 포함한 전체 마스크에 &lt;a href=&quot;#signal.valid_signals&quot;&gt; &lt;code&gt;valid_signals()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="28ddcdd88656fb2b39c2b069ad74b21bbc250cbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxlinelen&lt;/em&gt;, if given, overrides the instance&amp;rsquo;s value for the maximum line length.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;주어진 경우 &lt;em&gt;maxlinelen&lt;/em&gt; 은 최대 행 길이에 대한 인스턴스 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="cc644b1a264ee6258a670dbb5ac0a43e1da9bcb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxtasksperchild&lt;/em&gt; is the number of tasks a worker process can complete before it will exit and be replaced with a fresh worker process, to enable unused resources to be freed. The default &lt;em&gt;maxtasksperchild&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, which means worker processes will live as long as the pool.</source>
          <target state="translated">&lt;em&gt;maxtasksperchild&lt;/em&gt; 는 사용하지 않는 리소스를 해제하기 위해 작업자 프로세스가 종료되고 새로운 작업자 프로세스로 교체되기 전에 작업자 프로세스가 완료 할 수있는 작업 수입니다. 기본 &lt;em&gt;maxtasksperchild&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; 이므로 작업자 프로세스는 풀만큼 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="e325499d9eb44e8d99ffc250fe69b62ba362acd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mechanism&lt;/em&gt; specifies which authentication mechanism is to be used - it should appear in the instance variable &lt;code&gt;capabilities&lt;/code&gt; in the form &lt;code&gt;AUTH=mechanism&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;mechanism&lt;/em&gt; 은 사용할 인증 &lt;em&gt;메커니즘을&lt;/em&gt; 지정합니다 . &lt;code&gt;AUTH=mechanism&lt;/code&gt; 형식으로 인스턴스 변수 &lt;code&gt;capabilities&lt;/code&gt; 에 표시되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="43681d23fc467a357917cf000b3870f6193f2140" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mechanism&lt;/em&gt; specifies which authentication mechanism is to be used as argument to the &lt;code&gt;AUTH&lt;/code&gt; command; the valid values are those listed in the &lt;code&gt;auth&lt;/code&gt; element of &lt;code&gt;esmtp_features&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;mechanism&lt;/em&gt; 은 &lt;code&gt;AUTH&lt;/code&gt; 명령 에 대한 인수로 사용할 인증 &lt;em&gt;메커니즘을&lt;/em&gt; 지정합니다 . 유효한 값은 &lt;code&gt;esmtp_features&lt;/code&gt; 의 &lt;code&gt;auth&lt;/code&gt; 요소에 나열된 값 입니다.</target>
        </trans-unit>
        <trans-unit id="574cb99b9edd3a5ed0279d66cc5e5a54f31738d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;message&lt;/em&gt; is a string containing a regular expression that the start of the warning message must match. The expression is compiled to always be case-insensitive.</source>
          <target state="translated">&lt;em&gt;message&lt;/em&gt; 는 경고 메시지의 시작이 일치해야하는 정규식을 포함하는 문자열입니다. 식은 항상 대소 문자를 구분하지 않도록 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="73d2f7911d9a4c3b69cff21cb086bdc6ff1cdf8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;metaclass&lt;/em&gt; is the appropriate metaclass, &lt;em&gt;namespace&lt;/em&gt; is the prepared class namespace and &lt;em&gt;kwds&lt;/em&gt; is an updated copy of the passed in &lt;em&gt;kwds&lt;/em&gt; argument with any &lt;code&gt;'metaclass'&lt;/code&gt; entry removed. If no &lt;em&gt;kwds&lt;/em&gt; argument is passed in, this will be an empty dict.</source>
          <target state="translated">&lt;em&gt;메타 클래스&lt;/em&gt; 는 적절한 메타 클래스이고, &lt;em&gt;네임 스페이스&lt;/em&gt; 는 준비된 클래스 네임 스페이스이며, &lt;em&gt;kwds&lt;/em&gt; 는 &lt;code&gt;'metaclass'&lt;/code&gt; 항목이 제거 된 전달 된 &lt;em&gt;kwds&lt;/em&gt; 인수 의 업데이트 된 사본입니다 . &lt;em&gt;kwds&lt;/em&gt; 인수가 전달 되지 않으면 빈 dict가됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73a2cfdabc4cb2e68c60f1a1366b8a9b50747541" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method&lt;/em&gt; is the compression algorithm. Currently, the only supported value is &lt;code&gt;DEFLATED&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;방법&lt;/em&gt; 은 압축 알고리즘입니다. 현재 지원되는 유일한 값은 &lt;code&gt;DEFLATED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b2ba2acc912f3de2a84d7ae06d7c77abe2fb78a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method&lt;/em&gt; should be a string that indicates the HTTP request method that will be used (e.g. &lt;code&gt;'HEAD'&lt;/code&gt;). If provided, its value is stored in the &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; attribute and is used by &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;'GET'&lt;/code&gt; if &lt;em&gt;data&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;'POST'&lt;/code&gt; otherwise. Subclasses may indicate a different default method by setting the &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; attribute in the class itself.</source>
          <target state="translated">&lt;em&gt;method&lt;/em&gt; 는 사용될 HTTP 요청 메소드를 나타내는 문자열이어야합니다 (예 : &lt;code&gt;'HEAD'&lt;/code&gt; ). 제공된 경우 해당 값은 &lt;a href=&quot;#urllib.request.Request.method&quot;&gt; &lt;code&gt;method&lt;/code&gt; &lt;/a&gt; 속성에 저장 되며 &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt; &lt;code&gt;get_method()&lt;/code&gt; &lt;/a&gt; 사용됩니다 . 기본값은 &lt;code&gt;'GET'&lt;/code&gt; 경우 &lt;em&gt;데이터가&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;'POST'&lt;/code&gt; 그렇지. 서브 클래스는 클래스 자체에서 &lt;a href=&quot;#urllib.request.Request.method&quot;&gt; &lt;code&gt;method&lt;/code&gt; &lt;/a&gt; 속성 을 설정하여 다른 기본 메소드를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b051247e179dcc268a881c5347c0b24f6a10874" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method_to_typeid&lt;/em&gt; is a mapping used to specify the return type of those exposed methods which should return a proxy. It maps method names to typeid strings. (If &lt;em&gt;method_to_typeid&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._method_to_typeid_&lt;/code&gt; is used instead if it exists.) If a method&amp;rsquo;s name is not a key of this mapping or if the mapping is &lt;code&gt;None&lt;/code&gt; then the object returned by the method will be copied by value.</source>
          <target state="translated">&lt;em&gt;method_to_typeid&lt;/em&gt; 는 프록시를 리턴해야하는 노출 된 메소드의 리턴 유형을 지정하는 데 사용되는 맵핑입니다. 메소드 이름을 typeid 문자열로 맵핑합니다. (경우 &lt;em&gt;method_to_typeid가&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; 다음 &lt;code&gt;proxytype._method_to_typeid_&lt;/code&gt; 는 메서드의 이름이 매핑의 키가없는 경우가 존재합니다. 대신 사용됩니다) 또는 매핑이없는 경우 &lt;code&gt;None&lt;/code&gt; 이 방법에 의해 반환 된 객체가 값으로 복사됩니다가.</target>
        </trans-unit>
        <trans-unit id="2ec3adaa786444d4b36fa7d18b44906869b10f52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; has to be a string of the form &lt;code&gt;'filemode[:compression]'&lt;/code&gt;, it defaults to &lt;code&gt;'r'&lt;/code&gt;. Here is a full list of mode combinations:</source>
          <target state="translated">&lt;em&gt;mode&lt;/em&gt; 는 &lt;code&gt;'filemode[:compression]'&lt;/code&gt; 형식의 문자열이어야하며 기본값은 &lt;code&gt;'r'&lt;/code&gt; 입니다. 다음은 모드 조합의 전체 목록입니다.</target>
        </trans-unit>
        <trans-unit id="26538ac5f2e5eded83d3fc7a4b0836e7fcefea9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is a permission mask passed to &lt;a href=&quot;os#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt;, by default determining if the file exists and executable.</source>
          <target state="translated">&lt;em&gt;mode&lt;/em&gt; 는 기본적으로 파일이 존재하고 실행 가능한지 여부를 결정 하는 &lt;a href=&quot;os#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt; 전달되는 권한 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="3c44ccda76fcd2a57b2771e0e4a0e3eed15ebc3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is an optional string that specifies the mode in which the file is opened. It defaults to &lt;code&gt;'r'&lt;/code&gt; which means open for reading in text mode. Other common values are &lt;code&gt;'w'&lt;/code&gt; for writing (truncating the file if it already exists), &lt;code&gt;'x'&lt;/code&gt; for exclusive creation and &lt;code&gt;'a'&lt;/code&gt; for appending (which on &lt;em&gt;some&lt;/em&gt; Unix systems, means that &lt;em&gt;all&lt;/em&gt; writes append to the end of the file regardless of the current seek position). In text mode, if &lt;em&gt;encoding&lt;/em&gt; is not specified the encoding used is platform dependent: &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; is called to get the current locale encoding. (For reading and writing raw bytes use binary mode and leave &lt;em&gt;encoding&lt;/em&gt; unspecified.) The available modes are:</source>
          <target state="translated">&lt;em&gt;mode&lt;/em&gt; 는 파일을 여는 모드를 지정하는 선택적 문자열입니다. 텍스트 모드에서 읽기 위해 열리면 기본값은 &lt;code&gt;'r'&lt;/code&gt; 입니다. 다른 일반적인 값은 쓰기 (파일이 이미 존재하는 경우 잘림)의 경우 &lt;code&gt;'w'&lt;/code&gt; , 독점적 작성의 경우 &lt;code&gt;'x'&lt;/code&gt; 및 추가의 경우 &lt;code&gt;'a'&lt;/code&gt; ( &lt;em&gt;일부&lt;/em&gt; Unix 시스템에서는 &lt;em&gt;모든&lt;/em&gt; 쓰기가 파일 끝에 상관없이 추가됨을 의미 함) 현재 탐색 위치). 텍스트 모드에서 &lt;em&gt;인코딩&lt;/em&gt; 이 지정되지 않은 경우 사용되는 인코딩은 플랫폼에 따라 다릅니다. &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; 가 호출되어 현재 로캘 인코딩을 가져옵니다.(원시 바이트를 읽고 쓰려면 바이너리 모드를 사용하고 그대로 두십시오.&lt;em&gt;인코딩&lt;/em&gt; . 지정되지 않은) 사용 가능한 모드는 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="b855b23d7b199197afa633d15f8bcdcd71337466" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is either &lt;code&gt;'r'&lt;/code&gt; to read from an existing archive, &lt;code&gt;'a'&lt;/code&gt; to append data to an existing file, &lt;code&gt;'w'&lt;/code&gt; to create a new file overwriting an existing one, or &lt;code&gt;'x'&lt;/code&gt; to create a new file only if it does not already exist.</source>
          <target state="translated">&lt;em&gt;모드&lt;/em&gt; 는 기존 아카이브에서 읽는 &lt;code&gt;'r'&lt;/code&gt; , 기존 파일에 데이터를 추가 &lt;code&gt;'a'&lt;/code&gt; , 기존 파일을 덮어 쓰는 새 파일을 만들려면 &lt;code&gt;'w'&lt;/code&gt; 또는 기존 파일을 덮어 쓰는 경우에만 &lt;code&gt;'x'&lt;/code&gt; 입니다. 아직 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67edab1181cf75d4023a8f8bfed8e01f07b76ec5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is one of &lt;code&gt;'r'&lt;/code&gt; for read-only (record) access, &lt;code&gt;'w'&lt;/code&gt; for write-only (playback) access and &lt;code&gt;'rw'&lt;/code&gt; for both. Since many sound cards only allow one process to have the recorder or player open at a time, it is a good idea to open the device only for the activity needed. Further, some sound cards are half-duplex: they can be opened for reading or writing, but not both at once.</source>
          <target state="translated">&lt;em&gt;모드&lt;/em&gt; 는 읽기 전용 (레코드) 액세스 의 경우 &lt;code&gt;'r'&lt;/code&gt; , 쓰기 전용 (재생) 액세스의 경우 &lt;code&gt;'w'&lt;/code&gt; 및 둘 다의 경우 &lt;code&gt;'rw'&lt;/code&gt; 중 하나입니다. 많은 사운드 카드가 한 번에 하나의 프로세스 만 레코더 또는 플레이어를 열 수 있도록하기 때문에 필요한 활동에 대해서만 장치를 여는 것이 좋습니다. 또한 일부 사운드 카드는 반이중 방식이므로 읽기 또는 쓰기를 위해 열 수 있지만 동시에 둘 다 열 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="194dfafc60e8d39e7a157e06a7e840530692cc79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module&lt;/em&gt; is a string containing a regular expression that the module name must match. The expression is compiled to be case-sensitive.</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt; 은 모듈 이름이 일치해야하는 정규식을 포함하는 문자열입니다. 식은 대소 문자를 구분하도록 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="cb1abd1732b3133f997493c8f26a423d710fda72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module_globals&lt;/em&gt;, if supplied, should be the global namespace in use by the code for which the warning is issued. (This argument is used to support displaying source for modules found in zipfiles or other non-filesystem import sources).</source>
          <target state="translated">&lt;em&gt;module_globals (&lt;/em&gt; 제공된 경우)는 경고가 발행 된 코드에서 사용중인 글로벌 네임 스페이스 여야합니다. (이 인수는 zip 파일 또는 다른 비 파일 시스템 가져 오기 소스에서 찾은 모듈의 소스 표시를 지원하는 데 사용됩니다).</target>
        </trans-unit>
        <trans-unit id="1059b526208ac2e9bc8e8aa81932aa4c5749598f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;monotonic&lt;/em&gt;: &lt;code&gt;True&lt;/code&gt; if the clock cannot go backward, &lt;code&gt;False&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;em&gt;monotonic&lt;/em&gt; : 시계가 뒤로 갈 수 없으면 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;False&lt;/code&gt; 않으면 False</target>
        </trans-unit>
        <trans-unit id="b8a7fb15cccc8b55ee5faae86f963ff2603447e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;msg&lt;/em&gt; may be a string containing characters in the ASCII range, or a byte string. A string is encoded to bytes using the ascii codec, and lone &lt;code&gt;\r&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; characters are converted to &lt;code&gt;\r\n&lt;/code&gt; characters. A byte string is not modified.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt; 는 ASCII 범위의 문자를 포함하는 문자열이거나 바이트 문자열 일 수 있습니다. 문자열은 ASCII 코덱 론하여 바이트로 부호화 &lt;code&gt;\r&lt;/code&gt; 하고 &lt;code&gt;\n&lt;/code&gt; 문자로 변환 &lt;code&gt;\r\n&lt;/code&gt; 캐릭터. 바이트 문자열은 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7226fc9350ff1c16b9b15baf1838ba37d774e042" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mu&lt;/em&gt; is the mean angle, expressed in radians between 0 and 2*&lt;em&gt;pi&lt;/em&gt;, and &lt;em&gt;kappa&lt;/em&gt; is the concentration parameter, which must be greater than or equal to zero. If &lt;em&gt;kappa&lt;/em&gt; is equal to zero, this distribution reduces to a uniform random angle over the range 0 to 2*&lt;em&gt;pi&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;MU는&lt;/em&gt; 0, 2 * 사이 라디안 평균 각도이며, &lt;em&gt;PI&lt;/em&gt; 및 &lt;em&gt;카파&lt;/em&gt; 보다 크거나 제로인해야 농도 파라미터이다. 경우 &lt;em&gt;카파가&lt;/em&gt; 0 인,이 분포의 범위는 0 2 * 걸쳐 균일 한 임의의 각도로 감소 &lt;em&gt;PI&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="29867368dadd4831caebbad83bed52e442b47586" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5187e1c80d06845b74ac7fb061959abdc7dd431" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;n&lt;/em&gt; is the CPU/Memory cost factor, &lt;em&gt;r&lt;/em&gt; the block size, &lt;em&gt;p&lt;/em&gt; parallelization factor and &lt;em&gt;maxmem&lt;/em&gt; limits memory (OpenSSL 1.1.0 defaults to 32 MiB). &lt;em&gt;dklen&lt;/em&gt; is the length of the derived key.</source>
          <target state="translated">&lt;em&gt;N&lt;/em&gt; 는 CPU / 메모리 비용 요소이고, &lt;em&gt;r에&lt;/em&gt; 블록 크기 &lt;em&gt;(P)의&lt;/em&gt; 병렬 인자 및 &lt;em&gt;MAXMEM는&lt;/em&gt; 메모리 (32 OpenSSL을 MiB 크기에 1.1.0 기본값)을 제한한다. &lt;em&gt;dklen&lt;/em&gt; 은 파생 키의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="10d03ef25bc471c5c65d7a4a90e85f9e231c6d4c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; are passed to &lt;code&gt;BaseHeader&lt;/code&gt; from the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt;&lt;code&gt;header_factory&lt;/code&gt;&lt;/a&gt; call. The string value of any header object is the &lt;em&gt;value&lt;/em&gt; fully decoded to unicode.</source>
          <target state="translated">&lt;em&gt;이름&lt;/em&gt; 과 &lt;em&gt;값&lt;/em&gt; 은 &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt; &lt;code&gt;header_factory&lt;/code&gt; &lt;/a&gt; 호출 에서 &lt;code&gt;BaseHeader&lt;/code&gt; 로 전달됩니다 . 헤더 객체의 문자열 값은 유니 코드로 완전히 디코딩 된 &lt;em&gt;값&lt;/em&gt; 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ddf24a56d355f474aa6b824844403ece18f0e4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; has to be a value from the list returned by &lt;a href=&quot;#sysconfig.get_path_names&quot;&gt;&lt;code&gt;get_path_names()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 &lt;a href=&quot;#sysconfig.get_path_names&quot;&gt; &lt;code&gt;get_path_names()&lt;/code&gt; &lt;/a&gt; 반환 한 목록의 값이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e68664f0448ca40ac234b6afb26f6091543ea1c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is a string representing the piece of transport-specific information to get.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 가져올 전송 관련 정보를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8ce0f2dfe5d82c70cd585087f591bc79f9380d9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is an arbitrary string and &lt;em&gt;shape&lt;/em&gt; is a tuple of pairs of coordinates: Install the corresponding polygon shape.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 임의의 문자열이고 &lt;em&gt;shape&lt;/em&gt; 는 좌표 쌍의 튜플입니다. 해당 다각형 모양을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="572eacadf79d3a5ee7b0143b32d45595580cdf76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is an arbitrary string and shape is a (compound) &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object: Install the corresponding compound shape.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 임의의 문자열이고 shape는 (복합) &lt;a href=&quot;#turtle.Shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 객체입니다. 해당 복합 모양을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e96b15e8109e73bef4712e356fa2ee22415cc117" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the algorithm name and operation mode as string, e.g. &lt;code&gt;sha256&lt;/code&gt;, &lt;code&gt;hmac(sha256)&lt;/code&gt;, &lt;code&gt;cbc(aes)&lt;/code&gt; or &lt;code&gt;drbg_nopr_ctr_aes256&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 문자열로서의 알고리즘 이름 및 작동 모드입니다 &lt;code&gt;hmac(sha256)&lt;/code&gt; 예 : &lt;code&gt;sha256&lt;/code&gt; , hmac (sha256) , &lt;code&gt;cbc(aes)&lt;/code&gt; 또는 &lt;code&gt;drbg_nopr_ctr_aes256&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="a71f89a5c3d670af76788c7c2b4130825ee44d7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the header field to add. Keyword arguments can be used to set MIME parameters for the header field. Each parameter must be a string or &lt;code&gt;None&lt;/code&gt;. Underscores in parameter names are converted to dashes, since dashes are illegal in Python identifiers, but many MIME parameter names include dashes. If the parameter value is a string, it is added to the header value parameters in the form &lt;code&gt;name=&quot;value&quot;&lt;/code&gt;. If it is &lt;code&gt;None&lt;/code&gt;, only the parameter name is added. (This is used for MIME parameters without a value.) Example usage:</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 추가 할 헤더 필드입니다. 키워드 인수를 사용하여 헤더 필드에 대한 MIME 매개 변수를 설정할 수 있습니다. 각 매개 변수는 문자열 또는 &lt;code&gt;None&lt;/code&gt; 이어야합니다 . 파이썬 식별자에서 대시는 유효하지 않기 때문에 파라미터 이름의 밑줄은 대시로 변환되지만 많은 MIME 파라미터 이름에는 대시가 포함됩니다. 매개 변수 값이 문자열 인 경우 &lt;code&gt;name=&quot;value&quot;&lt;/code&gt; 형식으로 헤더 값 매개 변수에 추가됩니다 . 이 없을 경우 &lt;code&gt;None&lt;/code&gt; 만 매개 변수 이름이 추가됩니다. (값이없는 MIME 매개 변수에 사용됩니다.) 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="f439b5f111ee93d8ba0f7daed442bc5b42f80e1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the implementation&amp;rsquo;s identifier, e.g. &lt;code&gt;'cpython'&lt;/code&gt;. The actual string is defined by the Python implementation, but it is guaranteed to be lower case.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 구현의 식별자입니다 (예 : &lt;code&gt;'cpython'&lt;/code&gt; ) . 실제 문자열은 Python 구현에 의해 정의되지만 소문자로 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="101e1531b196c65d6a1f52baff21ede69b2bf2f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of a gif-file and &lt;em&gt;shape&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;: Install the corresponding image shape.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 gif 파일의 이름이며 &lt;em&gt;shape&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; : 해당 이미지 모양을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6167e20d7dbb52ad059c054088a06902ab3febc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of the CAB file in the MSI file.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 MSI 파일의 CAB 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7953607bb4f8bd4b06e7b6668cba77287d315323" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of the header to be mapped. It will be converted to lower case in the registry. &lt;em&gt;cls&lt;/em&gt; is the specialized class to be used, along with &lt;em&gt;base_class&lt;/em&gt;, to create the class used to instantiate headers that match &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 매핑 할 헤더의 이름입니다. 레지스트리에서 소문자로 변환됩니다. &lt;em&gt;cls&lt;/em&gt; 는 &lt;em&gt;base_class&lt;/em&gt; 와 함께 &lt;em&gt;name&lt;/em&gt; 과 일치하는 헤더를 인스턴스화하는 데 사용되는 클래스를 만드는 데 사용되는 특수 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="4b5ccbec471b6256726beb1b7e82e376c40bde71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the pathname of the archive. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It can be omitted if &lt;em&gt;fileobj&lt;/em&gt; is given. In this case, the file object&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute is used if it exists.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 아카이브의 경로 이름입니다. &lt;em&gt;name&lt;/em&gt; 은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체&lt;/a&gt; 일 수 있습니다 . &lt;em&gt;fileobj&lt;/em&gt; 가 제공 되면 생략 할 수 있습니다 . 이 경우 파일 객체의 &lt;code&gt;name&lt;/code&gt; 속성이 사용됩니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="5ec1b17a1c47b658b89c6e66991d441c2b586d77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the pathname of the archive. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It can be omitted if &lt;em&gt;fileobj&lt;/em&gt; is given. In this case, the file object&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute is used if it exists.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; is the pathname of the archive. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It can be omitted if &lt;em&gt;fileobj&lt;/em&gt; is given. In this case, the file object&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute is used if it exists.</target>
        </trans-unit>
        <trans-unit id="8449bfb867db8eb3de6067b91872569f3b6f6192" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the thread name. By default, a unique name is constructed of the form &amp;ldquo;Thread-&lt;em&gt;N&lt;/em&gt;&amp;rdquo; where &lt;em&gt;N&lt;/em&gt; is a small decimal number.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 스레드 이름입니다. 기본적으로 고유 이름은&amp;ldquo;Thread- &lt;em&gt;N&lt;/em&gt; &amp;rdquo; 형식으로 구성 되며 &lt;em&gt;N&lt;/em&gt; 은 작은 십진수입니다.</target>
        </trans-unit>
        <trans-unit id="76505c2b54cfe3efabc69577be2d262010ef0aab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the unique name for the requested shared memory, as described in the definition for &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;. When attaching to an existing &lt;code&gt;ShareableList&lt;/code&gt;, specify its shared memory block&amp;rsquo;s unique name while leaving &lt;code&gt;sequence&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt; 정의에 설명 된대로 요청 된 공유 메모리의 고유 이름입니다 . 기존 &lt;code&gt;ShareableList&lt;/code&gt; 에 첨부 할 때 &lt;code&gt;sequence&lt;/code&gt; 를 &lt;code&gt;None&lt;/code&gt; 으로 설정 한 상태에서 공유 메모리 블록의 고유 이름을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc489b01b1de31b3e1f1c98b91da30b26780a322" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the unique name for the requested shared memory, specified as a string. When creating a new shared memory block, if &lt;code&gt;None&lt;/code&gt; (the default) is supplied for the name, a novel name will be generated.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; 은 요청 된 공유 메모리의 고유 이름으로, 문자열로 지정됩니다. 새로운 공유 메모리 블록을 생성 할 때 이름에 &lt;code&gt;None&lt;/code&gt; (기본값)이 제공되면 새로운 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="78d8ad37c7c0f3bf4516ff5d771a51fe774f15ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt;: If the mock has a name then it will be used in the repr of the mock. This can be useful for debugging. The name is propagated to child mocks.</source>
          <target state="translated">&lt;em&gt;name&lt;/em&gt; : 모의 &lt;em&gt;이름이&lt;/em&gt; 있으면 모의 repr에 사용됩니다. 디버깅에 유용 할 수 있습니다. 이름은 자식 모의에 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="2a07c21d10bc84f1714168f2e320cb8829fdccb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;named&lt;/em&gt; &amp;ndash; This group matches the unbraced placeholder name; it should not include the delimiter in capturing group.</source>
          <target state="translated">&lt;em&gt;named&lt;/em&gt; &amp;ndash;이 그룹은 중괄호 자리 표시 자 이름과 일치합니다. 캡처 그룹에 분리 문자를 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="d36ce558bcce6753271128634120447cc38fc4de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nbytes&lt;/em&gt; is the total number of bytes that were written to the buffer.</source>
          <target state="translated">&lt;em&gt;nbytes&lt;/em&gt; 는 버퍼에 쓴 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="0b23a1a168fc90e7afe2739f2d0027dad4f37ed2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;newPathname&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;newPathname&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef5aafa7adfbf63029491642eeab1bb7da366b2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;new_callable&lt;/em&gt; allows you to specify a different class, or callable object, that will be called to create the &lt;em&gt;new&lt;/em&gt; object. By default &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; is used for async functions and &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for the rest.</source>
          <target state="translated">&lt;em&gt;new_callable&lt;/em&gt; 을 사용하면 &lt;em&gt;새&lt;/em&gt; 객체 를 만들기 위해 호출 될 다른 클래스 또는 호출 가능한 객체를 지정할 수 있습니다 . 기본적으로 &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; 은&lt;/a&gt; 비동기 기능에 사용되는 &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt; 나머지.</target>
        </trans-unit>
        <trans-unit id="b8a3cbd37fb21fcccb2cee9eec9460c49d7ab0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;newline&lt;/em&gt; controls how line endings are handled. It can be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\r\n'&lt;/code&gt;. It works as follows:</source>
          <target state="translated">&lt;em&gt;줄 바꿈&lt;/em&gt; 은 줄 끝을 처리하는 방법을 제어합니다. 그것은있을 수 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;''&lt;/code&gt; , &lt;code&gt;'\n'&lt;/code&gt; , &lt;code&gt;'\r'&lt;/code&gt; , 및 &lt;code&gt;'\r\n'&lt;/code&gt; . 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="297328730b7171b7685deec78b22042bdfa09922" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nnn&lt;/em&gt; should be a three-digit HTTP error code. This method is also not defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but will be called, if it exists, on an instance of a subclass, when an HTTP error with code &lt;em&gt;nnn&lt;/em&gt; occurs.</source>
          <target state="translated">&lt;em&gt;nnn&lt;/em&gt; 은 3 자리 HTTP 오류 코드 여야합니다. 이 메소드는 &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; 에&lt;/a&gt; 정의되어 있지 않지만 서브 클래스의 인스턴스에서 &lt;em&gt;nnn&lt;/em&gt; 코드가있는 HTTP 오류 가 발생 하면 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="f1bde707dc826b549c6ccfd6131dc8ae4a42f1d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node_depth&lt;/em&gt;: node depth (0 to 255, 0 for leaves, or in sequential mode).</source>
          <target state="translated">&lt;em&gt;node_depth&lt;/em&gt; : 노드 깊이 (0-255, 0은 잎 또는 연속 모드).</target>
        </trans-unit>
        <trans-unit id="a67ac102232fdfd3524e957cdbf2d0ea432b06c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node_offset&lt;/em&gt;: node offset (0 to 2**64-1 for BLAKE2b, 0 to 2**48-1 for BLAKE2s, 0 for the first, leftmost, leaf, or in sequential mode).</source>
          <target state="translated">&lt;em&gt;node_offset&lt;/em&gt; : 노드 오프셋 (BLAKE2b의 경우 0-2 ** 64-1, BLAKE2의 경우 0-2 ** 48-1, 첫 번째, 가장 왼쪽, 리프 또는 순차적 모드의 경우 0).</target>
        </trans-unit>
        <trans-unit id="4211ef1d68261fa6da3302cdbb8c6735fdc7c8b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nt&lt;/em&gt;: scheme for NT platforms like Windows.</source>
          <target state="translated">&lt;em&gt;nt&lt;/em&gt; : Windows와 같은 NT 플랫폼을위한 체계.</target>
        </trans-unit>
        <trans-unit id="8f3753d31148e7986f7376f5d812819b906bb500" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nt_user&lt;/em&gt;: scheme for NT platforms, when the &lt;em&gt;user&lt;/em&gt; option is used.</source>
          <target state="translated">&lt;em&gt;nt_user&lt;/em&gt; : &lt;em&gt;사용자&lt;/em&gt; 옵션이 사용될 때 NT 플랫폼 용 체계 .</target>
        </trans-unit>
        <trans-unit id="db1df293354ae69464f23d2530a760ff6d6dc5de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;obj&lt;/em&gt; argument as is, if &lt;em&gt;obj&lt;/em&gt; is a &lt;a href=&quot;#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;, or a Future-like object (&lt;a href=&quot;#asyncio.isfuture&quot;&gt;&lt;code&gt;isfuture()&lt;/code&gt;&lt;/a&gt; is used for the test.)</source>
          <target state="translated">&lt;em&gt;OBJ&lt;/em&gt; 인수 한, 경우 &lt;em&gt;obj가&lt;/em&gt; A는 &lt;a href=&quot;#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 하는 &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; , 또는 미래와 같은 객체 ( &lt;a href=&quot;#asyncio.isfuture&quot;&gt; &lt;code&gt;isfuture()&lt;/code&gt; &lt;/a&gt; 테스트에 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="5c150ee03c6c5c7dc85dc0bcd47d02ab948e87ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;obj&lt;/em&gt; is either a network or address object.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; 는 네트워크 또는 주소 개체입니다.</target>
        </trans-unit>
        <trans-unit id="154e892adfa2eec9951ce6d5c29b567c58df36a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object&lt;/em&gt;: Object causing the exception, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;object&lt;/em&gt; : 예외를 발생시키는 개체는 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="488a2d193cfb92faea0d2776a583d68712798d34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_hook&lt;/em&gt; is an optional function that will be called with the result of any object literal decoded (a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;). The return value of &lt;em&gt;object_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders (e.g. &lt;a href=&quot;http://www.jsonrpc.org&quot;&gt;JSON-RPC&lt;/a&gt; class hinting).</source>
          <target state="translated">&lt;em&gt;object_hook&lt;/em&gt; 은 객체 리터럴이 해독 된 결과 ( &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; ) 로 호출되는 선택적 함수입니다 . &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 대신 &lt;em&gt;object_hook&lt;/em&gt; 의 반환 값 이 사용됩니다 . 이 기능은 사용자 정의 디코더 (예 : &lt;a href=&quot;http://www.jsonrpc.org&quot;&gt;JSON-RPC&lt;/a&gt; 클래스 힌트) 를 구현하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fbaef1ffa1cc620d2cb659bd80d4ecf26a97577" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_hook&lt;/em&gt;, if specified, will be called with the result of every JSON object decoded and its return value will be used in place of the given &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This can be used to provide custom deserializations (e.g. to support JSON-RPC class hinting).</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;지정된 경우 &lt;em&gt;object_hook&lt;/em&gt; 이 지정된 모든 JSON 객체의 결과와 함께 호출되며 주어진 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 대신 반환 값이 사용됩니다 . 이는 사용자 지정 역 직렬화를 제공하는 데 사용될 수 있습니다 (예 : JSON-RPC 클래스 힌트 지원).</target>
        </trans-unit>
        <trans-unit id="d445c29f8e5f44848f17637fd4fbbbb2877343cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_pairs_hook&lt;/em&gt; is an optional function that will be called with the result of any object literal decoded with an ordered list of pairs. The return value of &lt;em&gt;object_pairs_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders. If &lt;em&gt;object_hook&lt;/em&gt; is also defined, the &lt;em&gt;object_pairs_hook&lt;/em&gt; takes priority.</source>
          <target state="translated">&lt;em&gt;object_pairs_hook&lt;/em&gt; 은 정렬 된 쌍의 목록으로 디코딩 된 객체 리터럴의 결과와 함께 호출되는 선택적 함수입니다. &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 대신 &lt;em&gt;object_pairs_hook&lt;/em&gt; 의 반환 값 이 사용됩니다 . 이 기능은 사용자 정의 디코더를 구현하는 데 사용할 수 있습니다. &lt;em&gt;object_hook&lt;/em&gt; 도 정의되어 있으면 &lt;em&gt;object_pairs_hook&lt;/em&gt; 이 우선합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="404870b4e7df0d1b5bd465deb399d57fd8ab8d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_pairs_hook&lt;/em&gt;, if specified will be called with the result of every JSON object decoded with an ordered list of pairs. The return value of &lt;em&gt;object_pairs_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders. If &lt;em&gt;object_hook&lt;/em&gt; is also defined, the &lt;em&gt;object_pairs_hook&lt;/em&gt; takes priority.</source>
          <target state="translated">&lt;em&gt;object_pairs_hook (&lt;/em&gt; 지정된 경우 순서가 지정된 쌍의 목록으로 디코딩 된 모든 JSON 객체의 결과와 함께 호출 됨) &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 대신 &lt;em&gt;object_pairs_hook&lt;/em&gt; 의 반환 값 이 사용됩니다 . 이 기능은 사용자 정의 디코더를 구현하는 데 사용할 수 있습니다. &lt;em&gt;object_hook&lt;/em&gt; 도 정의되어 있으면 &lt;em&gt;object_pairs_hook&lt;/em&gt; 이 우선합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e8915d81e392d3d9e25606a9860dfdfdd04b932" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; may be specified as a non-negative integer offset. mmap references will be relative to the offset from the beginning of the file. &lt;em&gt;offset&lt;/em&gt; defaults to 0. &lt;em&gt;offset&lt;/em&gt; must be a multiple of &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; which is equal to &lt;code&gt;PAGESIZE&lt;/code&gt; on Unix systems.</source>
          <target state="translated">&lt;em&gt;오프셋&lt;/em&gt; 은 음이 아닌 정수 오프셋으로 지정 될 수 있습니다. mmap 참조는 파일 시작 부분의 오프셋을 기준으로합니다. &lt;em&gt;offset의&lt;/em&gt; 기본값은 0입니다. &lt;em&gt;offset&lt;/em&gt; 은 Unix 시스템의 &lt;code&gt;PAGESIZE&lt;/code&gt; 와 동일한 &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; 의 배수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="1db095f97ed958b630d0c3f9609b1a9d2c5cf672" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; may be specified as a non-negative integer offset. mmap references will be relative to the offset from the beginning of the file. &lt;em&gt;offset&lt;/em&gt; defaults to 0. &lt;em&gt;offset&lt;/em&gt; must be a multiple of the &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;오프셋&lt;/em&gt; 은 음이 아닌 정수 오프셋으로 지정 될 수 있습니다. mmap 참조는 파일 시작 부분의 오프셋을 기준으로합니다. &lt;em&gt;오프셋의&lt;/em&gt; 기본값은 0입니다. &lt;em&gt;오프셋&lt;/em&gt; 은 &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; 의 배수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="fd8905064eb314a4aa5fddeeac26eff5ac16ffa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; tells from where to start reading the file. If specified, &lt;em&gt;count&lt;/em&gt; is the total number of bytes to transmit as opposed to sending the file until EOF is reached. File position is always updated, even when this method raises an error, and &lt;a href=&quot;io#io.IOBase.tell&quot;&gt;&lt;code&gt;file.tell()&lt;/code&gt;&lt;/a&gt; can be used to obtain the actual number of bytes sent.</source>
          <target state="translated">&lt;em&gt;오프셋&lt;/em&gt; 은 파일 읽기 시작 위치를 알려줍니다. 지정된 경우 &lt;em&gt;count&lt;/em&gt; 는 EOF에 도달 할 때까지 파일을 보내는 것과는 반대로 전송할 총 바이트 수입니다. 이 메소드에서 오류가 발생하더라도 파일 위치는 항상 업데이트되며 &lt;a href=&quot;io#io.IOBase.tell&quot;&gt; &lt;code&gt;file.tell()&lt;/code&gt; &lt;/a&gt; 을 사용하여 전송 된 실제 바이트 수를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d578bd21229d2749f3a34b1b3cafc2ab8656b0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;onerror&lt;/em&gt; is a function which gets called with one argument (the name of the package which was being imported) if any exception occurs while trying to import a package. If no &lt;em&gt;onerror&lt;/em&gt; function is supplied, &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;s are caught and ignored, while all other exceptions are propagated, terminating the search.</source>
          <target state="translated">&lt;em&gt;onerror&lt;/em&gt; 는 패키지를 가져 오는 동안 예외가 발생하면 하나의 인수 (가져온 패키지 이름)로 호출되는 함수입니다. &lt;em&gt;onerror&lt;/em&gt; 함수가 제공 되지 않으면 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt; 가 포착되고 무시되고 다른 모든 예외가 전파되어 검색이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="01f279d5891e29108b6b3d4d27a14f07b500027a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;optimize&lt;/em&gt; controls the optimization level and is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function. The default of &lt;code&gt;-1&lt;/code&gt; selects the optimization level of the current interpreter.</source>
          <target state="translated">&lt;em&gt;optimize&lt;/em&gt; 는 최적화 수준을 제어하고 내장 &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; 함수 로 전달됩니다 . 기본값 &lt;code&gt;-1&lt;/code&gt; 은 현재 인터프리터의 최적화 수준을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="71eb9eb8b4fca52bc0de1483f3bd1483c03e02df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;optimize&lt;/em&gt; specifies the optimization level for the compiler. It is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;em&gt;optimize&lt;/em&gt; 는 컴파일러의 최적화 수준을 지정합니다. 내장 &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; 함수 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="142a6fbae3854c345e6c6e27705d530b9364b100" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;optimize&lt;/em&gt; specifies the optimization level for the compiler. It is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function. Accepts also a sequence of optimization levels which lead to multiple compilations of one &lt;code&gt;.py&lt;/code&gt; file in one call.</source>
          <target state="translated">&lt;em&gt;optimize&lt;/em&gt; specifies the optimization level for the compiler. It is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; function. Accepts also a sequence of optimization levels which lead to multiple compilations of one &lt;code&gt;.py&lt;/code&gt; file in one call.</target>
        </trans-unit>
        <trans-unit id="9b7df815cf7aa6a7d1ed732b70d8bf43898ec5c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;options&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f94d1bbba4fe9d0886f14c8bab5de4af1a975834" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;origin_req_host&lt;/em&gt; should be the request-host of the origin transaction, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. It defaults to &lt;code&gt;http.cookiejar.request_host(self)&lt;/code&gt;. This is the host name or IP address of the original request that was initiated by the user. For example, if the request is for an image in an HTML document, this should be the request-host of the request for the page containing the image.</source>
          <target state="translated">&lt;em&gt;origin_req_host&lt;/em&gt; 는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2965에&lt;/strong&gt;&lt;/a&gt; 정의 된 &lt;strong&gt;대로&lt;/strong&gt; 오리진 트랜잭션의 요청 호스트 여야합니다 . 기본값은 &lt;code&gt;http.cookiejar.request_host(self)&lt;/code&gt; 입니다. 사용자가 시작한 원래 요청의 호스트 이름 또는 IP 주소입니다. 예를 들어, HTML 문서의 이미지에 대한 요청 인 경우 이미지를 포함하는 페이지에 대한 요청의 요청 호스트 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3c0c3f2bcc879526ed9761239df9fabd5a27653a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;owner&lt;/em&gt; and &lt;em&gt;group&lt;/em&gt; are used when creating a tar archive. By default, uses the current owner and group.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;tar 아카이브를 만들 때 &lt;em&gt;소유자&lt;/em&gt; 와 &lt;em&gt;그룹&lt;/em&gt; 이 사용됩니다. 기본적으로 현재 소유자 및 그룹을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3cf9d5f4c66070ebc77660818ba5ba422fc0e35c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements.</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="be4ac9b07469d6a751cb09a1ad03230ac2fa9dae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory).</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 . &lt;em&gt;resource&lt;/em&gt; 는 &lt;em&gt;패키지&lt;/em&gt; 내에서 열 리소스의 이름입니다 . 경로 구분 기호를 포함하지 않을 수도 있고 하위 자원이 없을 수도 있습니다 (즉, 디렉토리가 될 수 없음).</target>
        </trans-unit>
        <trans-unit id="cef9be94d623a628b9a8c21ac83097ad3c39991d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; have the same meaning as with built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 . &lt;em&gt;resource&lt;/em&gt; 는 &lt;em&gt;패키지&lt;/em&gt; 내에서 열 리소스의 이름입니다 . 경로 구분 기호를 포함하지 않을 수도 있고 하위 자원이 없을 수도 있습니다 (즉, 디렉토리가 될 수 없음). &lt;em&gt;인코딩&lt;/em&gt; 과 &lt;em&gt;오류&lt;/em&gt; 는 내장 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 과 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="f95ca2a94976f0f830fed2638d5444ac8091925b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; have the same meaning as with built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. This function returns the contents of the resource as &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 . &lt;em&gt;resource&lt;/em&gt; 는 &lt;em&gt;패키지&lt;/em&gt; 내에서 열 리소스의 이름입니다 . 경로 구분 기호를 포함하지 않을 수도 있고 하위 자원이 없을 수도 있습니다 (즉, 디렉토리가 될 수 없음). &lt;em&gt;인코딩&lt;/em&gt; 과 &lt;em&gt;오류&lt;/em&gt; 는 내장 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 과 동일한 의미를 갖습니다 . 이 함수는 리소스의 내용을 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5d8bebfc6abd359879a61fd11f85423f82f5a11d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). This function returns a &lt;code&gt;typing.BinaryIO&lt;/code&gt; instance, a binary I/O stream open for reading.</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 . &lt;em&gt;resource&lt;/em&gt; 는 &lt;em&gt;패키지&lt;/em&gt; 내에서 열 리소스의 이름입니다 . 경로 구분 기호를 포함하지 않을 수도 있고 하위 자원이 없을 수도 있습니다 (즉, 디렉토리가 될 수 없음). 이 함수는 &lt;code&gt;typing.BinaryIO&lt;/code&gt; 인스턴스, 읽기 위해 바이너리 I / O 스트림을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ab70288d9e21754a43960754887ad6d1037396ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). This function returns the contents of the resource as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;package&lt;/em&gt; 는 &lt;code&gt;Package&lt;/code&gt; 요구 사항 을 준수하는 이름 또는 모듈 객체입니다 . &lt;em&gt;resource&lt;/em&gt; 는 &lt;em&gt;패키지&lt;/em&gt; 내에서 열 리소스의 이름입니다 . 경로 구분 기호를 포함하지 않을 수도 있고 하위 자원이 없을 수도 있습니다 (즉, 디렉토리가 될 수 없음). 이 함수는 리소스의 내용을 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ae191e29161d9334e69f9b88a01ad3bfc0c50193" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pad&lt;/em&gt; controls whether the input is padded to a multiple of 4 before encoding. Note that the &lt;code&gt;btoa&lt;/code&gt; implementation always pads.</source>
          <target state="translated">&lt;em&gt;pad&lt;/em&gt; 는 인코딩 전에 입력을 4의 배수로 채울지 여부를 제어합니다. 참고이 &lt;code&gt;btoa&lt;/code&gt; 의 항상 구현 패드.</target>
        </trans-unit>
        <trans-unit id="f14e3a0acd76109e60987dd709bed9a32f45a669" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paramflags&lt;/em&gt; must be a tuple of the same length as &lt;code&gt;argtypes&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;paramflags&lt;/em&gt; 는 &lt;code&gt;argtypes&lt;/code&gt; 와 길이가 같은 튜플이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ba7c7e063add44c11d2ed737271f7b11c5b60662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parent&lt;/em&gt; is the item ID of the parent item, or the empty string to create a new top-level item. &lt;em&gt;index&lt;/em&gt; is an integer, or the value &amp;ldquo;end&amp;rdquo;, specifying where in the list of parent&amp;rsquo;s children to insert the new item. If &lt;em&gt;index&lt;/em&gt; is less than or equal to zero, the new node is inserted at the beginning; if &lt;em&gt;index&lt;/em&gt; is greater than or equal to the current number of children, it is inserted at the end. If &lt;em&gt;iid&lt;/em&gt; is specified, it is used as the item identifier; &lt;em&gt;iid&lt;/em&gt; must not already exist in the tree. Otherwise, a new unique identifier is generated.</source>
          <target state="translated">&lt;em&gt;parent&lt;/em&gt; 는 상위 항목의 항목 ID이거나 새로운 최상위 항목을 작성하기위한 빈 문자열입니다. &lt;em&gt;index&lt;/em&gt; 는 정수 또는 &quot;end&quot;값으로, 부모의 자식 목록에서 새 항목을 삽입 할 위치를 지정합니다. 경우 &lt;em&gt;인덱스&lt;/em&gt; 이하가 제로로되면, 새로운 노드는 시작 부분에 삽입된다; 만약 &lt;em&gt;지수&lt;/em&gt; 보다 크거나 또는 아이의 현재 수와 동일한, 그것은 끝에 삽입된다. 경우 &lt;em&gt;IID가&lt;/em&gt; 지정되어 그것이 아이템 식별자로 사용된다; 트리에 &lt;em&gt;iid&lt;/em&gt; 가 존재하지 않아야합니다. 그렇지 않으면 새로운 고유 식별자가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e0f714a8484fb76bf9a523db891e84d03cbd7cb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_constant&lt;/em&gt;, if specified, will be called with one of the following strings: &lt;code&gt;'-Infinity'&lt;/code&gt;, &lt;code&gt;'Infinity'&lt;/code&gt;, &lt;code&gt;'NaN'&lt;/code&gt;. This can be used to raise an exception if invalid JSON numbers are encountered.</source>
          <target state="translated">&lt;em&gt;parse_constant&lt;/em&gt; 가 지정되면 &lt;code&gt;'-Infinity'&lt;/code&gt; , &lt;code&gt;'Infinity'&lt;/code&gt; , &lt;code&gt;'NaN'&lt;/code&gt; 문자열 중 하나를 사용하여 호출됩니다 . 유효하지 않은 JSON 번호가 발견되면 예외를 발생시키는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50dfb63933c843529789a2958d12ab7497e27ab5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_float&lt;/em&gt;, if specified, will be called with the string of every JSON float to be decoded. By default, this is equivalent to &lt;code&gt;float(num_str)&lt;/code&gt;. This can be used to use another datatype or parser for JSON floats (e.g. &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;parse_float&lt;/em&gt; 는 지정된 경우 디코딩 할 모든 JSON float의 문자열과 함께 호출됩니다. 기본적으로 이것은 &lt;code&gt;float(num_str)&lt;/code&gt; 과 같습니다 . JSON float에 다른 데이터 유형 또는 파서를 사용하는 데 사용할 수 있습니다 (예 : &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="44b47fbded3829cfa454a09c01dc7c09dd0cab9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_int&lt;/em&gt;, if specified, will be called with the string of every JSON int to be decoded. By default, this is equivalent to &lt;code&gt;int(num_str)&lt;/code&gt;. This can be used to use another datatype or parser for JSON integers (e.g. &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;parse_int&lt;/em&gt; 를 지정하면 디코딩 할 모든 JSON int의 문자열로 호출됩니다. 기본적으로 이것은 &lt;code&gt;int(num_str)&lt;/code&gt; 와 같습니다 . JSON 정수 (예 : &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; )에 다른 데이터 유형 또는 파서를 사용하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd9e9bf187ea12aeff80abd79cf677e7b0b71d3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pass_fds&lt;/em&gt; is an optional sequence of file descriptors to keep open between the parent and child. Providing any &lt;em&gt;pass_fds&lt;/em&gt; forces &lt;em&gt;close_fds&lt;/em&gt; to be &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. (POSIX only)</source>
          <target state="translated">&lt;em&gt;pass_fds&lt;/em&gt; 는 부모와 자식 사이에 열려있는 파일 설명 자의 선택적 순서입니다. 어떤 제공 &lt;em&gt;pass_fds의&lt;/em&gt; 힘 &lt;em&gt;close_fds은&lt;/em&gt; 할 수 &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt; . (POSIX 만 해당)</target>
        </trans-unit>
        <trans-unit id="cec71fdfb552b1d240d1cb0a1d5f291d6449bbb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;password&lt;/em&gt; and &lt;em&gt;salt&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. Applications and libraries should limit &lt;em&gt;password&lt;/em&gt; to a sensible length (e.g. 1024). &lt;em&gt;salt&lt;/em&gt; should be about 16 or more bytes from a proper source, e.g. &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;password&lt;/em&gt; 및 &lt;em&gt;salt&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 여야 합니다 . 응용 프로그램 및 라이브러리는 &lt;em&gt;암호&lt;/em&gt; 를 적절한 길이 (예 : 1024)로 제한해야합니다 . &lt;em&gt;salt&lt;/em&gt; 는 적절한 소스에서 약 16 바이트 이상이어야합니다 &lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt; 예 : os.urandom ()) .</target>
        </trans-unit>
        <trans-unit id="463f036f45e6f09ff6a4e56cd6ca2af661d08967" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;password&lt;/em&gt; and &lt;em&gt;salt&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. Applications and libraries should limit &lt;em&gt;password&lt;/em&gt; to a sensible length (e.g. 1024). &lt;em&gt;salt&lt;/em&gt; should be about 16 or more bytes from a proper source, e.g. &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;password&lt;/em&gt; and &lt;em&gt;salt&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. Applications and libraries should limit &lt;em&gt;password&lt;/em&gt; to a sensible length (e.g. 1024). &lt;em&gt;salt&lt;/em&gt; should be about 16 or more bytes from a proper source, e.g. &lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3b7839ae0d0cdd0bf968c5cacfee5c07c7fa9514" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the name of a Unix domain socket and is required, unless a &lt;em&gt;sock&lt;/em&gt; parameter is specified. Abstract Unix sockets, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; paths are supported.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 Unix 도메인 소켓의 이름이며 &lt;em&gt;sock&lt;/em&gt; 매개 변수가 지정 되지 않은 경우 필수 입니다. 추상 Unix 소켓, &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 경로가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f888052b8bfb5b57cc9d5132e385b30f02572c30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the name of a Unix domain socket, and is required, unless a &lt;em&gt;sock&lt;/em&gt; argument is provided. Abstract Unix sockets, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; paths are supported.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 Unix 도메인 소켓의 이름이며 &lt;em&gt;sock&lt;/em&gt; 인수가 제공 되지 않는 한 필수 입니다. 추상 Unix 소켓, &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 경로가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="91f16974b60754377bb5200c2bceeff6b7ea22ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the path to a directory that should contain subdirectories &amp;ldquo;common&amp;rdquo;, &amp;ldquo;posix&amp;rdquo;, &amp;ldquo;nt&amp;rdquo;, each containing scripts destined for the bin directory in the environment. The contents of &amp;ldquo;common&amp;rdquo; and the directory corresponding to &lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt; are copied after some text replacement of placeholders:</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 &quot;common&quot;, &quot;posix&quot;, &quot;nt&quot;라는 하위 디렉토리를 포함해야하는 디렉토리의 경로입니다. 각 디렉토리에는 환경의 bin 디렉토리로 향하는 스크립트가 포함되어 있습니다. &quot;공통&quot;의 내용과 &lt;a href=&quot;os#os.name&quot;&gt; &lt;code&gt;os.name&lt;/code&gt; &lt;/a&gt; 에 해당하는 디렉토리 는 자리 표시 자의 일부 텍스트 교체 후에 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="db45b099ada7f15b17f38370efe252d4167ed236" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the filenames returned will also be of type &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체&lt;/a&gt; 일 수 있습니다 . 경우 &lt;em&gt;경로&lt;/em&gt; 유형이며 &lt;code&gt;bytes&lt;/code&gt; (관통 직간접 &lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; 의&lt;/a&gt; 인터페이스), 파일 이름은 입력 될 것이다 리턴 &lt;code&gt;bytes&lt;/code&gt; ; 다른 모든 상황에서는 &lt;code&gt;str&lt;/code&gt; 유형이 됩니다.</target>
        </trans-unit>
        <trans-unit id="7f64e304d6458662b2862556c0537e77f2052778" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the type of the &lt;a href=&quot;#os.DirEntry.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.DirEntry.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attributes of each &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체&lt;/a&gt; 일 수 있습니다 . 경우 &lt;em&gt;경로&lt;/em&gt; 유형이며 &lt;code&gt;bytes&lt;/code&gt; (관통 직간접 &lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; 의&lt;/a&gt; 인터페이스)의 형식 &lt;a href=&quot;#os.DirEntry.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#os.DirEntry.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; 각각의 속성 &lt;a href=&quot;#os.DirEntry&quot;&gt; &lt;code&gt;os.DirEntry&lt;/code&gt; &lt;/a&gt; 것이다 &lt;code&gt;bytes&lt;/code&gt; ; 다른 모든 상황에서는 &lt;code&gt;str&lt;/code&gt; 유형이 됩니다.</target>
        </trans-unit>
        <trans-unit id="6709fb5a211158d84c0a096930ed98672b4e994a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the filenames returned will also be of type &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt; interface), the filenames returned will also be of type &lt;code&gt;bytes&lt;/code&gt; ; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ec46b519b433c655c1a2828ce28e795f329fc52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the type of the &lt;a href=&quot;#os.DirEntry.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.DirEntry.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attributes of each &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt; interface), the type of the &lt;a href=&quot;#os.DirEntry.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#os.DirEntry.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; attributes of each &lt;a href=&quot;#os.DirEntry&quot;&gt; &lt;code&gt;os.DirEntry&lt;/code&gt; &lt;/a&gt; will be &lt;code&gt;bytes&lt;/code&gt; ; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35c87ed186824af77bf13af119168259e5487eac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; should be either &lt;code&gt;None&lt;/code&gt; or a list of paths to look for modules in.</source>
          <target state="translated">&lt;em&gt;path&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; 이거나 모듈을 찾을 경로 목록 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="29b35362032484b48698c2a64491533bbe4df084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pathsegments&lt;/em&gt; is specified similarly to &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;경로 세그먼트&lt;/em&gt; 는 &lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt; 와 유사하게 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bd960023d041d53d1ef7f58af7785c02194d4d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;person&lt;/em&gt;: personalization string (up to 16 bytes for BLAKE2b, up to 8 bytes for BLAKE2s).</source>
          <target state="translated">&lt;em&gt;person&lt;/em&gt; : 개인화 문자열 (BLAKE2b의 경우 최대 16 바이트, BLAKE2의 경우 최대 8 바이트)</target>
        </trans-unit>
        <trans-unit id="4e36acd548db6ae9682d7437653c581d70999986" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;phase&lt;/em&gt; can be one of two values:</source>
          <target state="translated">&lt;em&gt;phase&lt;/em&gt; 는 두 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="933b32f69b33849ddda5635375cf153bf2384a1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;파이프&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일과 같은 객체&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d58cd29874e160ed94a8772d7c3c930bfad14f5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;pipe&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d3dac00613850d8eeaa51afcc4a5d0931aa6b390" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;pipe&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일과 같은 객체&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d429e38ad3654c1cffa99397dbf4a471b327215b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;pipe&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="faa471abbb8e6f06a0a79054de74445e5165cd0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pkttype&lt;/em&gt; - Optional integer specifying the packet type:</source>
          <target state="translated">&lt;em&gt;pkttype-&lt;/em&gt; 패킷 유형을 지정하는 선택적 정수 :</target>
        </trans-unit>
        <trans-unit id="629e153ab406c4ad1cc9d24f3455a1d0e5dcfe62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platform&lt;/em&gt; will be &lt;code&gt;2 (VER_PLATFORM_WIN32_NT)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;플랫폼&lt;/em&gt; 은 &lt;code&gt;2 (VER_PLATFORM_WIN32_NT)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="852842d51dcfd315860b340c23b8f19baf731b0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platform_version&lt;/em&gt; returns the accurate major version, minor version and build number of the current operating system, rather than the version that is being emulated for the process. It is intended for use in logging rather than for feature detection.</source>
          <target state="translated">&lt;em&gt;platform_version&lt;/em&gt; 은 프로세스에 대해 에뮬레이션되는 버전이 아니라 정확한 주 버전, 부 버전 및 현재 운영 체제의 빌드 번호를 반환합니다. 기능 감지가 아닌 로깅에 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9fcb7906258863ffa5ebc61d514ea7d29d4b392d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platinclude&lt;/em&gt;: directory for platform-specific header files.</source>
          <target state="translated">&lt;em&gt;platinclude&lt;/em&gt; : 플랫폼 별 헤더 파일의 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="f4cf2b1921a63836455c537c2d5bcd4452fa9bab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platlib&lt;/em&gt;: directory for site-specific, platform-specific files.</source>
          <target state="translated">&lt;em&gt;platlib&lt;/em&gt; : 사이트 별, 플랫폼 별 파일의 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="09b19d176d8099fe4a3942edfc710c690b806fa6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platstdlib&lt;/em&gt;: directory containing the standard Python library files that are platform-specific.</source>
          <target state="translated">&lt;em&gt;platstdlib&lt;/em&gt; : 플랫폼 별 표준 Python 라이브러리 파일이 포함 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="e805c81d09f5d0bf0d70ce3773ddf71c1a804ffc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;plist&lt;/em&gt; can be a list containing named parameters; the default value is simply an empty list. Each entry in the list must be a string containing the parameter name, an equals sign (&lt;code&gt;'='&lt;/code&gt;), and the parameter&amp;rsquo;s value. Mailcap entries can contain named parameters like &lt;code&gt;%{foo}&lt;/code&gt;, which will be replaced by the value of the parameter named &amp;lsquo;foo&amp;rsquo;. For example, if the command line &lt;code&gt;showpartial
%{id} %{number} %{total}&lt;/code&gt; was in a mailcap file, and &lt;em&gt;plist&lt;/em&gt; was set to &lt;code&gt;['id=1', 'number=2', 'total=3']&lt;/code&gt;, the resulting command line would be &lt;code&gt;'showpartial 1 2 3'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;plist&lt;/em&gt; 는 명명 된 매개 변수를 포함하는 목록 일 수 있습니다. 기본값은 단순히 빈 목록입니다. 목록의 각 항목은 매개 변수 이름, 등호 ( &lt;code&gt;'='&lt;/code&gt; ) 및 매개 변수 값을 포함하는 문자열이어야합니다 . Mailcap 항목은 &lt;code&gt;%{foo}&lt;/code&gt; 와 같은 이름 지정된 매개 변수를 포함 할 수 있으며 'foo'라는 매개 변수 값으로 대체됩니다. 예를 들어, &lt;code&gt;showpartial %{id} %{number} %{total}&lt;/code&gt; 명령 줄 이 mailcap 파일에 있고 &lt;em&gt;plist&lt;/em&gt; 가 &lt;code&gt;['id=1', 'number=2', 'total=3']&lt;/code&gt; 으로 설정된 경우 결과 명령 줄은 &lt;code&gt;'showpartial 1 2 3'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d603072f89b740cff72c80e6832239aaebd509f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;policy&lt;/em&gt; is an object implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;em&gt;policy&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="8ed4e041fe8421c614f508978fbea6aaa3d08fff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;policy&lt;/em&gt; is an object implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface. For the other arguments, see the documentation for the corresponding attributes.</source>
          <target state="translated">&lt;em&gt;policy&lt;/em&gt; 는 &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 객체 입니다. 다른 인수에 대해서는 해당 속성의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be723247201071d2f8a479a4aab8e52c21a6a9e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pos&lt;/em&gt; is either the string &amp;ldquo;end&amp;rdquo;, an integer index, or the name of a managed child. If &lt;em&gt;child&lt;/em&gt; is already managed by the notebook, moves it to the specified position.</source>
          <target state="translated">&lt;em&gt;pos&lt;/em&gt; 는 문자열&amp;ldquo;end&amp;rdquo;, 정수 인덱스 또는 관리되는 자식의 이름입니다. 경우 &lt;em&gt;아이가&lt;/em&gt; 이미 노트북에 의해 관리되고, 지정된 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="653392dfc8d25228db94f12b5ef296ce30276756" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_home&lt;/em&gt;: scheme for POSIX platforms used when a &lt;em&gt;home&lt;/em&gt; option is used upon installation. This scheme is used when a component is installed through Distutils with a specific home prefix.</source>
          <target state="translated">&lt;em&gt;posix_home&lt;/em&gt;: scheme for POSIX platforms used when a &lt;em&gt;home&lt;/em&gt; option is used upon installation. This scheme is used when a component is installed through Distutils with a specific home prefix.</target>
        </trans-unit>
        <trans-unit id="7739f72eaa69877600187d114aff6a954136c3cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_home&lt;/em&gt;: scheme for Posix platforms used when a &lt;em&gt;home&lt;/em&gt; option is used upon installation. This scheme is used when a component is installed through Distutils with a specific home prefix.</source>
          <target state="translated">&lt;em&gt;posix_home&lt;/em&gt; : 설치시 &lt;em&gt;홈&lt;/em&gt; 옵션을 사용할 때 사용되는 Posix 플랫폼에 대한 체계입니다 . 이 구성표는 특정 홈 접두사가있는 Distutils를 통해 구성 요소를 설치할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29066a3629df15c1b3e09207c3238b502f12f9c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_prefix&lt;/em&gt;: scheme for POSIX platforms like Linux or Mac OS X. This is the default scheme used when Python or a component is installed.</source>
          <target state="translated">&lt;em&gt;posix_prefix&lt;/em&gt;: scheme for POSIX platforms like Linux or Mac OS X. This is the default scheme used when Python or a component is installed.</target>
        </trans-unit>
        <trans-unit id="68ee43fe5d51e02069e86da1cccede31b5cdef9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_prefix&lt;/em&gt;: scheme for Posix platforms like Linux or Mac OS X. This is the default scheme used when Python or a component is installed.</source>
          <target state="translated">&lt;em&gt;posix_prefix&lt;/em&gt; : Linux 또는 Mac OS X와 ​​같은 Posix 플랫폼 용 체계. 이는 Python 또는 구성 요소를 설치할 때 사용되는 기본 체계입니다.</target>
        </trans-unit>
        <trans-unit id="984b8ef963e3b826c5acd7f5e68160d3b804317e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_user&lt;/em&gt;: scheme for POSIX platforms used when a component is installed through Distutils and the &lt;em&gt;user&lt;/em&gt; option is used. This scheme defines paths located under the user home directory.</source>
          <target state="translated">&lt;em&gt;posix_user&lt;/em&gt;: scheme for POSIX platforms used when a component is installed through Distutils and the &lt;em&gt;user&lt;/em&gt; option is used. This scheme defines paths located under the user home directory.</target>
        </trans-unit>
        <trans-unit id="8cd0158924ac67f5ba64e880bb9231f42a224118" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_user&lt;/em&gt;: scheme for Posix platforms used when a component is installed through Distutils and the &lt;em&gt;user&lt;/em&gt; option is used. This scheme defines paths located under the user home directory.</source>
          <target state="translated">&lt;em&gt;posix_user&lt;/em&gt; : 구성 요소가 Distutils를 통해 설치되고 &lt;em&gt;사용자&lt;/em&gt; 옵션이 사용될 때 사용되는 Posix 플랫폼에 대한 체계입니다 . 이 체계는 사용자 홈 디렉토리 아래에있는 경로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="649eda5e12f3e013955f4aa916f8b3c2d024ffbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prec&lt;/em&gt; is an integer in the range [&lt;code&gt;1&lt;/code&gt;, &lt;a href=&quot;#decimal.MAX_PREC&quot;&gt;&lt;code&gt;MAX_PREC&lt;/code&gt;&lt;/a&gt;] that sets the precision for arithmetic operations in the context.</source>
          <target state="translated">&lt;em&gt;prec&lt;/em&gt; 는 컨텍스트에서 산술 연산의 정밀도를 설정하는 [ &lt;code&gt;1&lt;/code&gt; , &lt;a href=&quot;#decimal.MAX_PREC&quot;&gt; &lt;code&gt;MAX_PREC&lt;/code&gt; &lt;/a&gt; ] 범위의 정수입니다 .</target>
        </trans-unit>
        <trans-unit id="ca39fbf97049d374d05c8838984bed387cb035b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;preferencelist&lt;/em&gt; must be a sequence of strings from the set &lt;code&gt;related&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, and &lt;code&gt;plain&lt;/code&gt;, and indicates the order of preference for the content type of the part returned.</source>
          <target state="translated">&lt;em&gt;preferencelist&lt;/em&gt; 는 &lt;code&gt;related&lt;/code&gt; , &lt;code&gt;html&lt;/code&gt; 및 &lt;code&gt;plain&lt;/code&gt; 집합의 일련의 문자열이어야하며 반환되는 부분의 컨텐츠 유형에 대한 선호 순서를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bcf7f5941b299baaa2ce22721922034a5658977a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefix&lt;/em&gt; is a string to output on the front of every module name on output.</source>
          <target state="translated">&lt;em&gt;접두사&lt;/em&gt; 는 출력시 모든 모듈 이름 앞에 출력 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="11997f714b5d682724f80f7caaae5a66c6477e6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;processes&lt;/em&gt; is the number of worker processes to use. If &lt;em&gt;processes&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the number returned by &lt;a href=&quot;os#os.cpu_count&quot;&gt;&lt;code&gt;os.cpu_count()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">&lt;em&gt;프로세스&lt;/em&gt; 는 사용할 작업자 프로세스 수입니다. 경우 &lt;em&gt;프로세스가&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; 다음에 의해 반환되는 숫자 &lt;a href=&quot;os#os.cpu_count&quot;&gt; &lt;code&gt;os.cpu_count()&lt;/code&gt; &lt;/a&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="f50b2f063eed83d74924c5ca75110601ef9c0f10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;product_type&lt;/em&gt; may be one of the following values:</source>
          <target state="translated">&lt;em&gt;product_type&lt;/em&gt; 은 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb2369277826ec68fb6152c8f0d178e18339f1b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prot&lt;/em&gt;, if specified, gives the desired memory protection; the two most useful values are &lt;code&gt;PROT_READ&lt;/code&gt; and &lt;code&gt;PROT_WRITE&lt;/code&gt;, to specify that the pages may be read or written. &lt;em&gt;prot&lt;/em&gt; defaults to &lt;code&gt;PROT_READ | PROT_WRITE&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;prot&lt;/em&gt; 은 지정된 경우 원하는 메모리 보호를 제공합니다. 가장 유용한 두 값은 &lt;code&gt;PROT_READ&lt;/code&gt; 및 &lt;code&gt;PROT_WRITE&lt;/code&gt; 이며 페이지를 읽거나 쓸 수 있도록 지정합니다. &lt;em&gt;prot의&lt;/em&gt; 기본값은 &lt;code&gt;PROT_READ | PROT_WRITE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbfcfe0f637a8e421ba2580330efa0bc7351a471" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proto&lt;/em&gt; - An in network-byte-order integer specifying the Ethernet protocol number.</source>
          <target state="translated">&lt;em&gt;proto-&lt;/em&gt; 이더넷 프로토콜 번호를 지정하는 네트워크 바이트 순서의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="8f549d968a00b80f94daa81053363f143a935e0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; is called without arguments and is expected to return a &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;protocol&lt;/a&gt; instance.</source>
          <target state="translated">&lt;em&gt;protocol_factory&lt;/em&gt; 는 인수없이 호출되며 &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;프로토콜&lt;/a&gt; 인스턴스 를 리턴 할 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="12643fd099c33d928b3a1970fa1bc566abb3aa31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;protocol&lt;/a&gt; implementation.</source>
          <target state="translated">&lt;em&gt;protocol_factory&lt;/em&gt; 는 &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;프로토콜&lt;/a&gt; 구현을 리턴하는 호출 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="063a846f293efa02ee5f55fa9273d976bdf5ffa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning an &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;asyncio protocol&lt;/a&gt; implementation.</source>
          <target state="translated">&lt;em&gt;protocol_factory&lt;/em&gt; 는 &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;asyncio 프로토콜&lt;/a&gt; 구현을 반환하는 호출 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c0d6b1b9a598a7933a08096a31b5b1a4e6ccb86e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proxytype&lt;/em&gt; is a subclass of &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt;&lt;code&gt;BaseProxy&lt;/code&gt;&lt;/a&gt; which is used to create proxies for shared objects with this &lt;em&gt;typeid&lt;/em&gt;. If &lt;code&gt;None&lt;/code&gt; then a proxy class is created automatically.</source>
          <target state="translated">&lt;em&gt;proxytype&lt;/em&gt; 은이 &lt;em&gt;typeid를&lt;/em&gt; 가진 공유 객체에 대한 프록시를 만드는 데 사용되는 &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt; &lt;code&gt;BaseProxy&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 . 경우 &lt;code&gt;None&lt;/code&gt; 다음 프록시 클래스가 자동으로 생성되지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c6a06eb7ab45f68d5d2f000130d91f4df599129" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;purelib&lt;/em&gt;: directory for site-specific, non-platform-specific files.</source>
          <target state="translated">&lt;em&gt;purelib&lt;/em&gt; : 사이트 별, 플랫폼 이외의 파일 용 디렉토리.</target>
        </trans-unit>
        <trans-unit id="3549e79c6b50b1a2b901e928f9d7436c27a3e71b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;qname_aware_attrs&lt;/em&gt;: a set of qname aware attribute names in which prefixes</source>
          <target state="translated">&lt;em&gt;qname_aware_attrs&lt;/em&gt; : 접두사가있는 qname 인식 속성 이름 세트</target>
        </trans-unit>
        <trans-unit id="1cf8b96b060ee924106fb6c0b2a5ffd2ab4df815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;qname_aware_tags&lt;/em&gt;: a set of qname aware tag names in which prefixes</source>
          <target state="translated">&lt;em&gt;qname_aware_tags&lt;/em&gt; : 접두사가있는 qname 인식 태그 이름 세트</target>
        </trans-unit>
        <trans-unit id="48bccdcf7d59ce5ff8135ddbb6bcf62b0fa54898" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcpt_options&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;rcpt_options&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="1b16007a5ed87b1b1db3d9fc110ea11750b12d04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read_data&lt;/em&gt; is a string for the &lt;code&gt;read()&lt;/code&gt;, &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt;&lt;code&gt;readlines()&lt;/code&gt;&lt;/a&gt; methods of the file handle to return. Calls to those methods will take data from &lt;em&gt;read_data&lt;/em&gt; until it is depleted. The mock of these methods is pretty simplistic: every time the &lt;em&gt;mock&lt;/em&gt; is called, the &lt;em&gt;read_data&lt;/em&gt; is rewound to the start. If you need more control over the data that you are feeding to the tested code you will need to customize this mock for yourself. When that is insufficient, one of the in-memory filesystem packages on &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt; can offer a realistic filesystem for testing.</source>
          <target state="translated">&lt;em&gt;read_data&lt;/em&gt; 는 파일 핸들 의 &lt;code&gt;read()&lt;/code&gt; , &lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt; &lt;code&gt;readlines()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 문자열입니다 . 해당 메소드에 대한 호출 은 고갈 될 때까지 &lt;em&gt;read_data&lt;/em&gt; 에서 데이터를 가져옵니다 . 이 메소드의 모의는 매우 단순합니다. &lt;em&gt;모의&lt;/em&gt; 가 호출 될 때마다 &lt;em&gt;read_data&lt;/em&gt; 가 처음으로 다시 감 깁니다. 테스트 한 코드에 공급하는 데이터를보다 세밀하게 제어하려면이 모의를 사용자 정의해야합니다. 충분하지 않은 경우 &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI의&lt;/a&gt; 메모리 내 파일 시스템 패키지 중 하나가 테스트를위한 현실적인 파일 시스템을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1172b5a2dde51b1f9ffaad23f01287ecb37c5795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reader&lt;/em&gt; and &lt;em&gt;writer&lt;/em&gt; are &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; objects that are readable and writeable respectively. If the &lt;em&gt;buffer_size&lt;/em&gt; is omitted it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;reader&lt;/em&gt; 와 &lt;em&gt;writer&lt;/em&gt; 는 각각 읽고 쓸 수있는 &lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt; 객체입니다. &lt;em&gt;buffer_size&lt;/em&gt; 가 생략 되면 기본값은 &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ab325f043fa3b1715da4cb130e6cf07a3d464c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;realm&lt;/em&gt;, &lt;em&gt;uri&lt;/em&gt;, &lt;em&gt;user&lt;/em&gt;, &lt;em&gt;passwd&lt;/em&gt; are as for &lt;a href=&quot;#urllib.request.HTTPPasswordMgr.add_password&quot;&gt;&lt;code&gt;HTTPPasswordMgr.add_password()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;is_authenticated&lt;/em&gt; sets the initial value of the &lt;code&gt;is_authenticated&lt;/code&gt; flag for the given URI or list of URIs. If &lt;em&gt;is_authenticated&lt;/em&gt; is specified as &lt;code&gt;True&lt;/code&gt;, &lt;em&gt;realm&lt;/em&gt; is ignored.</source>
          <target state="translated">&lt;em&gt;realm&lt;/em&gt; , &lt;em&gt;uri&lt;/em&gt; , &lt;em&gt;user&lt;/em&gt; , &lt;em&gt;passwd&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.HTTPPasswordMgr.add_password&quot;&gt; &lt;code&gt;HTTPPasswordMgr.add_password()&lt;/code&gt; &lt;/a&gt; . &lt;em&gt;is_authenticated&lt;/em&gt; 는 주어진 URI 또는 ​​URI 목록에 대한 &lt;code&gt;is_authenticated&lt;/code&gt; 플래그 의 초기 값을 설정합니다 . 경우 &lt;em&gt;is_authenticated가&lt;/em&gt; 로 지정된 &lt;code&gt;True&lt;/code&gt; , &lt;em&gt;영역은&lt;/em&gt; 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1edf36610a58ec0e457b8b45f199a9e6944f9e43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;records&lt;/em&gt; should be a list of tuples, each one containing all fields of a record according to the schema of the table. For optional fields, &lt;code&gt;None&lt;/code&gt; can be passed.</source>
          <target state="translated">&lt;em&gt;레코드&lt;/em&gt; 는 테이블의 스키마에 따라 레코드의 모든 필드를 포함하는 튜플 목록이어야합니다. 선택적 필드의 경우 &lt;code&gt;None&lt;/code&gt; 을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71c77faedebc643f4afaddb104f6cd7da69ef54a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rel_tol&lt;/em&gt; is the relative tolerance &amp;ndash; it is the maximum allowed difference between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, relative to the larger absolute value of &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt;. For example, to set a tolerance of 5%, pass &lt;code&gt;rel_tol=0.05&lt;/code&gt;. The default tolerance is &lt;code&gt;1e-09&lt;/code&gt;, which assures that the two values are the same within about 9 decimal digits. &lt;em&gt;rel_tol&lt;/em&gt; must be greater than zero.</source>
          <target state="translated">&lt;em&gt;rel_tol&lt;/em&gt; 은 상대 허용 오차 입니다. &lt;em&gt;a&lt;/em&gt; 또는 &lt;em&gt;b&lt;/em&gt; 의 더 큰 절대 값에 &lt;em&gt;대한 &lt;/em&gt;&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 사이의 최대 허용 차이 입니다. 예를 들어, 공차를 5 %로 설정하려면 &lt;code&gt;rel_tol=0.05&lt;/code&gt; 를 전달 하십시오 . 기본 공차는 &lt;code&gt;1e-09&lt;/code&gt; 이며, 이는 두 값이 약 9 자리 10 진수 내에서 동일하다는 것을 보장합니다. &lt;em&gt;rel_tol&lt;/em&gt; 은 0보다 커야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94bafae5c3c7d7da967a6e373108b85688be34f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;remote_addr&lt;/em&gt;, if given, is a &lt;code&gt;(remote_host, remote_port)&lt;/code&gt; tuple used to connect the socket to a remote address. The &lt;em&gt;remote_host&lt;/em&gt; and &lt;em&gt;remote_port&lt;/em&gt; are looked up using &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;remote_addr (&lt;/em&gt; 제공된 경우 &lt;code&gt;(remote_host, remote_port)&lt;/code&gt; 은 소켓을 원격 주소에 연결하는 데 사용되는 (remote_host, remote_port) 튜플입니다. &lt;em&gt;REMOTE_HOST&lt;/em&gt; 과 &lt;em&gt;REMOTE_PORT을&lt;/em&gt; 사용하여 조회됩니다 &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faa552276c3a3e915ad2ae5953b93849442d3346" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, &lt;em&gt;fp&lt;/em&gt; will be a file-like object with the HTTP error body, &lt;em&gt;code&lt;/em&gt; will be the three-digit code of the error, &lt;em&gt;msg&lt;/em&gt; will be the user-visible explanation of the code and &lt;em&gt;hdrs&lt;/em&gt; will be a mapping object with the headers of the error.</source>
          <target state="translated">&lt;em&gt;req&lt;/em&gt; 는 &lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체, &lt;em&gt;fp&lt;/em&gt; 는 HTTP 오류 본문을 가진 파일과 같은 객체, &lt;em&gt;code&lt;/em&gt; 는 오류 의 3 자리 코드, &lt;em&gt;msg&lt;/em&gt; 는 사용자가 볼 수있는 코드 설명 및 &lt;em&gt;hdrs&lt;/em&gt; 는 매핑입니다. 오류의 헤더가있는 객체.</target>
        </trans-unit>
        <trans-unit id="a1d1b6edda34cb99481fa76c0afa7a91d15521d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reserved&lt;/em&gt; can be anything &amp;ndash; zero is always passed to the API.</source>
          <target state="translated">&lt;em&gt;reserved&lt;/em&gt; 는 무엇이든 가능합니다. 0은 항상 API로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ca4651a919baa6ea0ffcf88762b68e97fc409e88" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reserved&lt;/em&gt; is a reserved integer, and must be zero. The default is zero.</source>
          <target state="translated">&lt;em&gt;reserved&lt;/em&gt; 는 예약 된 정수이며 0이어야합니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="4c7ebffed13455a477ec520a4ad9fbbe55612162" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;resolution&lt;/em&gt;: The resolution of the clock in seconds (&lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;em&gt;resolution&lt;/em&gt; : 초 단위의 시계 해상도 ( &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="51ee83c9ed4286f4a08cdcbbefe30f4faec9c2e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;result&lt;/em&gt; is what the foreign function returns, as specified by the &lt;code&gt;restype&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;em&gt;결과&lt;/em&gt; 는 &lt;code&gt;restype&lt;/code&gt; 속성 으로 지정된 외부 함수가 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="df5d2dfd0f6307bae47d5339e9c592b712fea99f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_value&lt;/em&gt;, and &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; are keyword only argument.</source>
          <target state="translated">&lt;em&gt;return_value&lt;/em&gt; 및 &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt; 는 키워드 전용 인수입니다.</target>
        </trans-unit>
        <trans-unit id="300931c48e14677821b6f452e1a130931c07494d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_value&lt;/em&gt;: The value returned when the mock is called. By default this is a new Mock (created on first access). See the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">&lt;em&gt;return_value&lt;/em&gt; : 모의가 호출 될 때 반환되는 값. 기본적으로 이것은 새로운 모의입니다 (처음 액세스시 생성됨). &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt; 속성을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4146bd2f7a64431bd671f3f95a204693a879ea43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_when&lt;/em&gt; indicates when this function should return. It must be one of the following constants:</source>
          <target state="translated">&lt;em&gt;return_when&lt;/em&gt; 은이 함수가 언제 반환되어야 &lt;em&gt;하는지&lt;/em&gt; 나타냅니다. 다음 상수 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ce791c6913cffdb954e1fbe529854ceee03736a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_address&lt;/em&gt; tells the kernel to reuse a local socket in &lt;code&gt;TIME_WAIT&lt;/code&gt; state, without waiting for its natural timeout to expire. If not specified will automatically be set to &lt;code&gt;True&lt;/code&gt; on Unix.</source>
          <target state="translated">&lt;em&gt;reuse_address&lt;/em&gt; 는 커널 이 자연 타임 아웃이 만료되기를 기다리지 않고 &lt;code&gt;TIME_WAIT&lt;/code&gt; 상태 의 로컬 소켓을 재사용하도록 지시합니다 . 지정하지 않으면 Unix에서 자동으로 &lt;code&gt;True&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3c22cfe8f1b6c65440360d318068e54af1012b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; tells the kernel to allow this endpoint to be bound to the same port as other existing endpoints are bound to, so long as they all set this flag when being created. This option is not supported on Windows and some Unixes. If the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; constant is not defined then this capability is unsupported.</source>
          <target state="translated">&lt;em&gt;reuse_port&lt;/em&gt; 는이 엔드 포인트가 작성 될 때 &lt;em&gt;모두이&lt;/em&gt; 플래그를 설정하는 한 기존 엔드 포인트가 바인드 된 것과 동일한 포트에 바인드되도록 커널에 지시합니다. 이 옵션은 Windows 및 일부 Unix에서 지원되지 않습니다. 는 IF &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 의 상수가 정의되지 않은이 기능은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e31509fbaa2c1ff143a214e1bd2bc51d94108712" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; tells the kernel to allow this endpoint to be bound to the same port as other existing endpoints are bound to, so long as they all set this flag when being created. This option is not supported on Windows.</source>
          <target state="translated">&lt;em&gt;reuse_port&lt;/em&gt; 는이 엔드 포인트가 작성 될 때 &lt;em&gt;모두이&lt;/em&gt; 플래그를 설정하는 한 기존 엔드 포인트가 바인드 된 것과 동일한 포트에 바인드되도록 커널에 지시합니다. 이 옵션은 Windows에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dec0d8dab92c0284115057e13fa8a77d962dcbc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reverse&lt;/em&gt; is a boolean value. If set to &lt;code&gt;True&lt;/code&gt;, then the input elements are merged as if each comparison were reversed. To achieve behavior similar to &lt;code&gt;sorted(itertools.chain(*iterables), reverse=True)&lt;/code&gt;, all iterables must be sorted from largest to smallest.</source>
          <target state="translated">&lt;em&gt;reverse&lt;/em&gt; 는 부울 값입니다. &lt;code&gt;True&lt;/code&gt; 로 설정 되면 각 비교가 반대로 된 것처럼 입력 요소가 병합됩니다. &lt;code&gt;sorted(itertools.chain(*iterables), reverse=True)&lt;/code&gt; 와 비슷한 동작을 수행하려면 모든 반복 가능 항목을 가장 큰 것부터 가장 작은 것까지 정렬해야합니다.</target>
        </trans-unit>
        <trans-unit id="341e5e2d1d4fec7fb78516e742a5b38d9c100170" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reverse&lt;/em&gt; is a boolean value. If set to &lt;code&gt;True&lt;/code&gt;, then the list elements are sorted as if each comparison were reversed.</source>
          <target state="translated">&lt;em&gt;reverse&lt;/em&gt; 는 부울 값입니다. &lt;code&gt;True&lt;/code&gt; 로 설정 하면 각 비교가 반대로 된 것처럼 목록 요소가 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="443fac44ffffc97f0ffcebd0dbd0141d864ffc0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rewrite_prefixes&lt;/em&gt;: set to true to replace namespace prefixes by &amp;ldquo;n{number}&amp;rdquo;</source>
          <target state="translated">&lt;em&gt;rewrite_prefixes&lt;/em&gt; : 네임 스페이스 접두사를&amp;ldquo;n {number}&amp;rdquo;로 바꾸려면 true로 설정</target>
        </trans-unit>
        <trans-unit id="084e4c36b308be95ea24d1499bab59f8d7c7c4ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rlist&lt;/em&gt;: wait until ready for reading</source>
          <target state="translated">&lt;em&gt;rlist&lt;/em&gt; : 읽을 준비가 될 때까지 기다립니다</target>
        </trans-unit>
        <trans-unit id="6bd5eb0e5ea0bc70a42905b779cb2cd4fea41372" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root&lt;/em&gt; - this will be the configuration for the root logger. Processing of the configuration will be as for any logger, except that the &lt;code&gt;propagate&lt;/code&gt; setting will not be applicable.</source>
          <target state="translated">&lt;em&gt;루트&lt;/em&gt; -이 루트 로거에 대한 구성됩니다. &lt;code&gt;propagate&lt;/code&gt; 설정을 적용 할 수 없다는 점을 제외하고 구성 처리는 모든 로거와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0ed99ee0dd769612f62730cec4f95fae7be2fac0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root&lt;/em&gt; specifies an alternative root directory to install relative to. If &lt;em&gt;root&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then installation uses the default install location for the current environment.</source>
          <target state="translated">&lt;em&gt;root&lt;/em&gt; 는 설치할 대체 루트 디렉토리를 지정합니다. 경우 &lt;em&gt;루트가&lt;/em&gt; 없다 &lt;code&gt;None&lt;/code&gt; , 다음 설치는 기본이 현재 환경에 대한 설치 위치를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3bb2569333704de196e14ef7a4832f809c5180a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root_dir&lt;/em&gt; and &lt;em&gt;base_dir&lt;/em&gt; both default to the current directory.</source>
          <target state="translated">&lt;em&gt;root_dir&lt;/em&gt; 및 &lt;em&gt;base_dir은&lt;/em&gt; 모두 현재 디렉토리로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4aad0fb36ec995f0776b3e1f146eebc3b4daeedf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root_dir&lt;/em&gt; is a directory that will be the root directory of the archive, all paths in the archive will be relative to it; for example, we typically chdir into &lt;em&gt;root_dir&lt;/em&gt; before creating the archive.</source>
          <target state="translated">&lt;em&gt;root_dir&lt;/em&gt; is a directory that will be the root directory of the archive, all paths in the archive will be relative to it; for example, we typically chdir into &lt;em&gt;root_dir&lt;/em&gt; before creating the archive.</target>
        </trans-unit>
        <trans-unit id="763b7c874d3008c9f56a2400bf08d918ae5a87be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root_dir&lt;/em&gt; is a directory that will be the root directory of the archive; for example, we typically chdir into &lt;em&gt;root_dir&lt;/em&gt; before creating the archive.</source>
          <target state="translated">&lt;em&gt;root_dir&lt;/em&gt; 은 아카이브의 루트 디렉토리가 될 디렉토리입니다. 예를 들어, 아카이브를 작성하기 전에 일반적으로 chdir을 &lt;em&gt;root_dir에 입력&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5989fe7e304cf3083c857985fff3e4b5dfa968e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rounds&lt;/em&gt; specifies the number of rounds for &lt;code&gt;METHOD_SHA256&lt;/code&gt;, &lt;code&gt;METHOD_SHA512&lt;/code&gt; and &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt;. For &lt;code&gt;METHOD_SHA256&lt;/code&gt; and &lt;code&gt;METHOD_SHA512&lt;/code&gt; it must be an integer between &lt;code&gt;1000&lt;/code&gt; and &lt;code&gt;999_999_999&lt;/code&gt;, the default is &lt;code&gt;5000&lt;/code&gt;. For &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt; it must be a power of two between &lt;code&gt;16&lt;/code&gt; (2&lt;sup&gt;4&lt;/sup&gt;) and &lt;code&gt;2_147_483_648&lt;/code&gt; (2&lt;sup&gt;31&lt;/sup&gt;), the default is &lt;code&gt;4096&lt;/code&gt; (2&lt;sup&gt;12&lt;/sup&gt;).</source>
          <target state="translated">&lt;em&gt;rounds &lt;/em&gt; &lt;code&gt;METHOD_SHA256&lt;/code&gt; , &lt;code&gt;METHOD_SHA512&lt;/code&gt; 및 &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt; 에 대한 라운드 수를 지정 합니다 . 들어 &lt;code&gt;METHOD_SHA256&lt;/code&gt; 및 &lt;code&gt;METHOD_SHA512&lt;/code&gt; 가 이 사이의 정수 여야 &lt;code&gt;1000&lt;/code&gt; 과 &lt;code&gt;999_999_999&lt;/code&gt; , 기본값은 &lt;code&gt;5000&lt;/code&gt; . 들면 &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt; 이 둘 사이의 거듭 제곱이어야 &lt;code&gt;16&lt;/code&gt; (2 &lt;sup&gt;4&lt;/sup&gt; )과 &lt;code&gt;2_147_483_648&lt;/code&gt; (2 &lt;sup&gt;31&lt;/sup&gt; ), 디폴트는 &lt;code&gt;4096&lt;/code&gt; (2 &lt;sup&gt;12&lt;/sup&gt; ).</target>
        </trans-unit>
        <trans-unit id="294eac9c89e6ec816bf7fec87f4bb7a5713cf9c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b55e611e55cf187d175d6d36b29ffb72f419f207" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;s&lt;/em&gt; may be an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. If it is an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, then &lt;em&gt;charset&lt;/em&gt; is the encoding of that byte string, and a &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; will be raised if the string cannot be decoded with that character set.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt; 는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 의 인스턴스 일 수 있습니다 . &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 의 인스턴스 인 경우 &lt;em&gt;charset&lt;/em&gt; 은 해당 바이트 문자열의 인코딩이며, 해당 문자 세트로 문자열을 디코딩 할 수 없으면 &lt;a href=&quot;exceptions#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="77ccb7b677fcc52a6d9918f40beba91fdba3c273" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt; (either a random 2 or 16 character string, possibly prefixed with &lt;code&gt;$digit$&lt;/code&gt; to indicate the method) which will be used to perturb the encryption algorithm. The characters in &lt;em&gt;salt&lt;/em&gt; must be in the set &lt;code&gt;[./a-zA-Z0-9]&lt;/code&gt;, with the exception of Modular Crypt Format which prefixes a &lt;code&gt;$digit$&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;암호화 알고리즘을 혼란시키는 데 사용되는 &lt;em&gt;salt&lt;/em&gt; (임의 의 방법을 나타 내기 위해 &lt;code&gt;$digit$&lt;/code&gt; 로 시작하는 임의의 2 또는 16 자 문자열 ). &lt;em&gt;salt&lt;/em&gt; 의 문자 는 &lt;code&gt;$digit$&lt;/code&gt; 접두사 인 Modular Crypt Format을 제외하고 &lt;code&gt;[./a-zA-Z0-9]&lt;/code&gt; 세트에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="040bbb045fab6621a94c428639938b7dbf4f4b31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt;: salt for randomized hashing (up to 16 bytes for BLAKE2b, up to 8 bytes for BLAKE2s).</source>
          <target state="translated">&lt;em&gt;salt&lt;/em&gt; : 무작위 해싱에 대한 salt (BLAKE2b의 경우 최대 16 바이트, BLAKE2의 경우 최대 8 바이트)</target>
        </trans-unit>
        <trans-unit id="cbff3a694a8455b6639dd8cc621e4d064f7bdee6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;schema&lt;/em&gt; must be a module object containing &lt;code&gt;tables&lt;/code&gt; and &lt;code&gt;_Validation_records&lt;/code&gt; attributes; typically, &lt;a href=&quot;#msilib.schema&quot;&gt;&lt;code&gt;msilib.schema&lt;/code&gt;&lt;/a&gt; should be used.</source>
          <target state="translated">&lt;em&gt;스키마&lt;/em&gt; 는 &lt;code&gt;tables&lt;/code&gt; 및 &lt;code&gt;_Validation_records&lt;/code&gt; 속성을 포함하는 모듈 객체 여야 합니다. 일반적으로 &lt;a href=&quot;#msilib.schema&quot;&gt; &lt;code&gt;msilib.schema&lt;/code&gt; 를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="14d7f1df1b15fd81dc83b87cde130d75bbfaf6c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scheme&lt;/em&gt; parameter</source>
          <target state="translated">&lt;em&gt;구성표&lt;/em&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="102ca116d9c0813a3537df33f561afaba953c3f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scope&lt;/em&gt; is one of &lt;code&gt;TIPC_ZONE_SCOPE&lt;/code&gt;, &lt;code&gt;TIPC_CLUSTER_SCOPE&lt;/code&gt;, and &lt;code&gt;TIPC_NODE_SCOPE&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;scope&lt;/em&gt; 는 &lt;code&gt;TIPC_ZONE_SCOPE&lt;/code&gt; , &lt;code&gt;TIPC_CLUSTER_SCOPE&lt;/code&gt; 및 &lt;code&gt;TIPC_NODE_SCOPE&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="ccf62fc55e9b420a9222d1aed2dfb39b0b0ff582" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scripts&lt;/em&gt;: directory for script files.</source>
          <target state="translated">&lt;em&gt;scripts&lt;/em&gt; : 스크립트 파일의 디렉토리.</target>
        </trans-unit>
        <trans-unit id="c797c4d361b3b5c49e79f49a54e504d5bfc5e755" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sequence&lt;/em&gt; is used in populating a new &lt;code&gt;ShareableList&lt;/code&gt; full of values. Set to &lt;code&gt;None&lt;/code&gt; to instead attach to an already existing &lt;code&gt;ShareableList&lt;/code&gt; by its unique shared memory name.</source>
          <target state="translated">&lt;em&gt;sequence&lt;/em&gt; 는 값으로 가득 찬 새로운 &lt;code&gt;ShareableList&lt;/code&gt; 를 채우는 데 사용 됩니다. 고유 한 공유 메모리 이름으로 기존 기존 &lt;code&gt;ShareableList&lt;/code&gt; 에 대신 첨부 하려면 &lt;code&gt;None&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ff9753186de105aa6ad86dd61281798c6fcc643" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_hostname&lt;/em&gt; sets or overrides the hostname that the target server&amp;rsquo;s certificate will be matched against. Should only be passed if &lt;em&gt;ssl&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;. By default the value of the &lt;em&gt;host&lt;/em&gt; argument is used. If &lt;em&gt;host&lt;/em&gt; is empty, there is no default and you must pass a value for &lt;em&gt;server_hostname&lt;/em&gt;. If &lt;em&gt;server_hostname&lt;/em&gt; is an empty string, hostname matching is disabled (which is a serious security risk, allowing for potential man-in-the-middle attacks).</source>
          <target state="translated">&lt;em&gt;server_hostname&lt;/em&gt; 은 대상 서버의 인증서와 일치 할 호스트 이름을 설정하거나 대체합니다. &lt;em&gt;ssl&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; 이 아닌 경우에만 전달해야합니다 . 기본적으로 &lt;em&gt;호스트&lt;/em&gt; 인수 의 값 이 사용됩니다. &lt;em&gt;호스트&lt;/em&gt; 가 비어 있으면 기본값이 없으며 &lt;em&gt;server_hostname&lt;/em&gt; 의 값을 전달해야합니다 . 경우 &lt;em&gt;server_hostname은&lt;/em&gt; 빈 문자열, 호스트 이름 매칭은 (잠재적 man-in-the-middle 공격을 허용, 심각한 보안 위험 인)을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c64f44a8e3b18696d6652f97e50d26ea70658f7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_hostname&lt;/em&gt;: sets or overrides the host name that the target server&amp;rsquo;s certificate will be matched against.</source>
          <target state="translated">&lt;em&gt;server_hostname&lt;/em&gt; : 대상 서버의 인증서와 일치시킬 호스트 이름을 설정하거나 대체합니다.</target>
        </trans-unit>
        <trans-unit id="0ef0b9ce3b5fc35d7ab01bfff8ee8da6a0ff74ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_side&lt;/em&gt; pass &lt;code&gt;True&lt;/code&gt; when a server-side connection is being upgraded (like the one created by &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;create_server()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;server_side&lt;/em&gt; pass 서버 측 연결을 업그레이드 할 때 &lt;code&gt;True&lt;/code&gt; ( &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;create_server()&lt;/code&gt; &lt;/a&gt; 의해 작성된 것과 같음 ).</target>
        </trans-unit>
        <trans-unit id="e66bb98e6a7a97c8ec178bfde96f88e4be64b2c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;session&lt;/em&gt;, see &lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;세션은&lt;/em&gt; 참조 &lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a25078c51f06f74104ce4500d1c8cb0aef55d474" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shape&lt;/em&gt; can be any of the built-in shapes, e.g: arrow, turtle, etc. For more info try &lt;code&gt;help(shape)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;모양&lt;/em&gt; 은 내장 &lt;em&gt;모양 중 하나 일&lt;/em&gt; 수 있습니다 (예 : 화살표, 거북이 등). 자세한 내용 &lt;code&gt;help(shape)&lt;/code&gt; 시도하십시오 .</target>
        </trans-unit>
        <trans-unit id="78cd2b833fce781d3986f9e94174fd634924b90d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;side_effect&lt;/em&gt;: A function to be called whenever the Mock is called. See the &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; attribute. Useful for raising exceptions or dynamically changing return values. The function is called with the same arguments as the mock, and unless it returns &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt;, the return value of this function is used as the return value.</source>
          <target state="translated">&lt;em&gt;side_effect&lt;/em&gt; : Mock이 호출 될 때마다 호출되는 함수입니다. &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt; 속성을 참조하십시오 . 예외를 발생 시키거나 반환 값을 동적으로 변경하는 데 유용합니다. 함수는 mock과 동일한 인수로 호출되며 &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; 를&lt;/a&gt; 리턴하지 않으면 이 함수의 리턴 값이 리턴 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fba5376d262131f111441c275f9105ff2255d71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; is a requested size for the test (in arbitrary, test-interpreted units.) &lt;em&gt;memuse&lt;/em&gt; is the number of bytes per unit for the test, or a good estimate of it. For example, a test that needs two byte buffers, of 4 GiB each, could be decorated with &lt;code&gt;@bigmemtest(size=_4G, memuse=2)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;size&lt;/em&gt; 는 테스트에 요청 된 크기 (임의의 테스트 해석 단위)입니다. &lt;em&gt;memuse&lt;/em&gt; 는 테스트 단위당 바이트 수 또는 적절한 추정치입니다. 예를 들어, 각각 &lt;code&gt;@bigmemtest(size=_4G, memuse=2)&lt;/code&gt; 의 2 바이트 버퍼가 필요한 테스트는 @bigmemtest (size = _4G, memuse = 2) 로 꾸며질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f30eda4c978f214c03bba290e9a1b08d6e95c48b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; specifies the requested number of bytes when creating a new shared memory block. Because some platforms choose to allocate chunks of memory based upon that platform&amp;rsquo;s memory page size, the exact size of the shared memory block may be larger or equal to the size requested. When attaching to an existing shared memory block, the &lt;code&gt;size&lt;/code&gt; parameter is ignored.</source>
          <target state="translated">&lt;em&gt;size&lt;/em&gt; 는 새 공유 메모리 블록을 만들 때 요청 된 바이트 수를 지정합니다. 일부 플랫폼은 해당 플랫폼의 메모리 페이지 크기에 따라 메모리 청크를 할당하도록 선택하므로 공유 메모리 블록의 정확한 크기는 요청 된 크기보다 크거나 같을 수 있습니다. 기존 공유 메모리 블록에 연결하면 &lt;code&gt;size&lt;/code&gt; 매개 변수가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f4c8e5ab2ef7894666d9c6efb5a4df93f6b14983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt;, if given, is passed as size argument to the stream&amp;rsquo;s &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;크기가&lt;/em&gt; 주어진 경우, 스트림의 크기에 대한 인수로서 전달된다 &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="6c2a2dadc63144013827107ddeaf21b214a45c62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt; informs epoll about the expected number of events to be registered. It must be positive, or &lt;code&gt;-1&lt;/code&gt; to use the default. It is only used on older systems where &lt;code&gt;epoll_create1()&lt;/code&gt; is not available; otherwise it has no effect (though its value is still checked).</source>
          <target state="translated">&lt;em&gt;sizehint&lt;/em&gt; 는 epoll에 등록 될 예상 이벤트 수를 알려줍니다. 기본값을 사용하려면 양수이거나 &lt;code&gt;-1&lt;/code&gt; 이어야합니다 . &lt;code&gt;epoll_create1()&lt;/code&gt; 사용할 수없는 구형 시스템에서만 사용됩니다 . 그렇지 않으면 효과가 없습니다 (값을 여전히 확인하더라도).</target>
        </trans-unit>
        <trans-unit id="d0a0a7333d294d8df28e64c48bb016deb5a287d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt; is the recommended minimum size for the returned buffer. It is acceptable to return smaller or larger buffers than what &lt;em&gt;sizehint&lt;/em&gt; suggests. When set to -1, the buffer size can be arbitrary. It is an error to return a buffer with a zero size.</source>
          <target state="translated">&lt;em&gt;sizehint&lt;/em&gt; 는 반환 된 버퍼에 권장되는 최소 크기입니다. &lt;em&gt;sizehint가&lt;/em&gt; 제안한 것보다 작거나 큰 버퍼를 반환하는 것은 허용됩니다 . -1로 설정하면 버퍼 크기는 임의적 일 수 있습니다. 크기가 0 인 버퍼를 반환하는 것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="2bbe6801b47e038554a987349f940563e0f12cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt;, if given, is passed as the &lt;em&gt;size&lt;/em&gt; argument to the stream&amp;rsquo;s &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;주어진 경우 &lt;em&gt;sizehint&lt;/em&gt; 는 스트림의 &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 메소드에 &lt;em&gt;size&lt;/em&gt; 인수로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="f63007b9d99b4a8047c461eae2ec6d56efb65251" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; can optionally be specified in order to use a preexisting socket object. If specified, &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt; must not be specified.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;기존 소켓 객체를 사용하기 위해 &lt;em&gt;양말&lt;/em&gt; 을 선택적으로 지정할 수 있습니다. 지정된 경우 &lt;em&gt;호스트&lt;/em&gt; 및 &lt;em&gt;포트&lt;/em&gt; 를 지정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fcd8ab465c0f09471c99146aee5fdd1e6d217796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; can optionally be specified in order to use a preexisting, already connected, &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; object to be used by the transport. If specified, &lt;em&gt;local_addr&lt;/em&gt; and &lt;em&gt;remote_addr&lt;/em&gt; should be omitted (must be &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;전송에 사용될 기존의 이미 연결되어있는 &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; 객체를 사용하기 위해 &lt;em&gt;sock&lt;/em&gt; 을 선택적으로 지정할 수 있습니다 . 지정된 경우 &lt;em&gt;local_addr&lt;/em&gt; 및 &lt;em&gt;remote_addr&lt;/em&gt; 을 생략해야합니다 ( &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이어야 함 ).</target>
        </trans-unit>
        <trans-unit id="3703a5b1837ae3a114be82edbcf05c114f5b16dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; is a preexisting socket object returned from &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sock&lt;/em&gt; 는 &lt;a href=&quot;socket#socket.socket.accept&quot;&gt; &lt;code&gt;socket.accept&lt;/code&gt; &lt;/a&gt; 에서 반환 된 기존 소켓 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="1697981f9591b0041aca3c221f83244667e36e47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; must be a non-blocking &lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;socket.SOCK_STREAM&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;양말&lt;/em&gt; 은 비 차단 &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;socket.SOCK_STREAM&lt;/code&gt; &lt;/a&gt;합니다 . SOCK_STREAM socket .</target>
        </trans-unit>
        <trans-unit id="77d1c19f2f9ffd44e30a1db467caa1d9a1e6d7e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; must be a non-blocking socket.</source>
          <target state="translated">&lt;em&gt;양말&lt;/em&gt; 은 비 차단 소켓이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b25521f8b2e0ca587ac7df8c1c01862fabff82e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt;, if given, should be an existing, already connected &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; object to be used by the transport. If &lt;em&gt;sock&lt;/em&gt; is given, none of &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt;, &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;happy_eyeballs_delay&lt;/em&gt;, &lt;em&gt;interleave&lt;/em&gt; and &lt;em&gt;local_addr&lt;/em&gt; should be specified.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;주어진 경우 &lt;em&gt;sock&lt;/em&gt; 는 전송에 사용될 기존의 이미 연결된 &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; 객체 여야합니다. 경우 &lt;em&gt;양말을&lt;/em&gt; 주어, 아무도 &lt;em&gt;호스트&lt;/em&gt; , &lt;em&gt;포트&lt;/em&gt; , &lt;em&gt;가족&lt;/em&gt; , &lt;em&gt;프로토&lt;/em&gt; , &lt;em&gt;플래그&lt;/em&gt; , &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; , &lt;em&gt;인터리브&lt;/em&gt; 및 &lt;em&gt;local_addr이&lt;/em&gt; 지정 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="257275d7f26ce2a7b2b85f4a514d5b4d109af841" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt; is the source string; &lt;em&gt;filename&lt;/em&gt; is the optional filename from which source was read, defaulting to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;; and &lt;em&gt;symbol&lt;/em&gt; is the optional grammar start symbol, which should be &lt;code&gt;'single'&lt;/code&gt; (the default), &lt;code&gt;'eval'&lt;/code&gt; or &lt;code&gt;'exec'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt; is the source string; &lt;em&gt;filename&lt;/em&gt; is the optional filename from which source was read, defaulting to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; ; and &lt;em&gt;symbol&lt;/em&gt; is the optional grammar start symbol, which should be &lt;code&gt;'single'&lt;/code&gt; (the default), &lt;code&gt;'eval'&lt;/code&gt; or &lt;code&gt;'exec'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad3bc71c76f2661835bd533556b2c16b43c5a045" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt; is the source string; &lt;em&gt;filename&lt;/em&gt; is the optional filename from which source was read, defaulting to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;; and &lt;em&gt;symbol&lt;/em&gt; is the optional grammar start symbol, which should be either &lt;code&gt;'single'&lt;/code&gt; (the default) or &lt;code&gt;'eval'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt; 는 소스 문자열입니다. &lt;em&gt;filename&lt;/em&gt; 은 소스를 읽은 선택적 파일 이름이며 기본값은 &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; 입니다 . 및 &lt;em&gt;기호는&lt;/em&gt; 옵션 문법 시작해야 상징 중 하나 인 &lt;code&gt;'single'&lt;/code&gt; (기본값) 또는 &lt;code&gt;'eval'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99ae0cc80f68567368d7cf61b0d394878877d7d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt;, if supplied, is the destroyed object which emitted a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt; 는 제공된 경우 &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt; 을 방출 한 파괴 된 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="ce62d796bed09c3bcd2bc762a89327fe977ab41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sourcelines&lt;/em&gt; may contain surrogateescaped binary data.</source>
          <target state="translated">&lt;em&gt;소스 라인&lt;/em&gt; 에는 서로 게이트 &lt;em&gt;이스케이프 된&lt;/em&gt; 이진 데이터가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f32654ef41a9fb27f99c706243df5ab867a9a0a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spawn&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;spawn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2697e3b8f52d05f6a6457521905c0cdb5d1240ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt; and the other arguments to &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; have the same meaning as they do for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;스펙&lt;/em&gt; , &lt;em&gt;작성&lt;/em&gt; 및에 다른 인수 &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt; &lt;code&gt;patch.object()&lt;/code&gt; &lt;/a&gt; 그들이 할 것과 동일한 의미를 갖는다 &lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df0e6b44a7299b7baf03cd43b09e08afa8a1c315" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec&lt;/em&gt;: This can be either a list of strings or an existing object (a class or instance) that acts as the specification for the mock object. If you pass in an object then a list of strings is formed by calling dir on the object (excluding unsupported magic attributes and methods). Accessing any attribute not in this list will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;spec&lt;/em&gt; : 문자열 목록이거나 모의 객체의 스펙으로 작동하는 기존 객체 (클래스 또는 인스턴스) 일 수 있습니다. 객체를 전달하면 객체에서 dir을 호출하여 문자열 목록이 형성됩니다 (지원되지 않는 매직 속성 및 메소드 제외). 이 목록에없는 속성에 액세스하면 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5468ab84cbdf028e26dda3df66b9c07c65d8ccf9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec_set&lt;/em&gt;: A stricter variant of &lt;em&gt;spec&lt;/em&gt;. If used, attempting to &lt;em&gt;set&lt;/em&gt; or get an attribute on the mock that isn&amp;rsquo;t on the object passed as &lt;em&gt;spec_set&lt;/em&gt; will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;spec_set&lt;/em&gt; :보다 엄격한 &lt;em&gt;spec&lt;/em&gt; 변형 . 사용하는 경우 &lt;em&gt;spec_set으로&lt;/em&gt; 전달 된 객체에없는 모의 속성 을 &lt;em&gt;설정&lt;/em&gt; 하거나 가져 &lt;em&gt;오려고&lt;/em&gt; 하면 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="69bcb88c223556b1f7d09f4cd1a039864fea07fc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sql_script&lt;/em&gt; can be an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sql_script&lt;/em&gt; 는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 의 인스턴스 &lt;em&gt;일&lt;/em&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a3a1d4998a64088d0f7ff8aae199dc1178f6255" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt; can be set to an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; instance to enable TLS over the accepted connections.</source>
          <target state="translated">&lt;em&gt;ssl&lt;/em&gt; 을 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 인스턴스로 설정하여 허용 된 연결을 통해 TLS를 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16f9566ad5f8b0028f01a9889b7df52908b13ee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt; can be set to an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; to enable SSL over the accepted connections.</source>
          <target state="translated">&lt;em&gt;ssl&lt;/em&gt; 을 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 로 설정하여 허용 된 연결을 통한 SSL을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1e869a8c9ddfc9b16c8c7140d2486f377721ce9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt;: if given and not false, a SSL/TLS transport is created (by default a plain TCP transport is created). If &lt;em&gt;ssl&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object, this context is used to create the transport; if &lt;em&gt;ssl&lt;/em&gt; is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, a default context returned from &lt;a href=&quot;ssl#ssl.create_default_context&quot;&gt;&lt;code&gt;ssl.create_default_context()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">&lt;em&gt;ssl&lt;/em&gt; : 제공되고 false가 아닌 경우 SSL / TLS 전송이 작성됩니다 (기본적으로 일반 TCP 전송이 작성 됨). 경우에 &lt;em&gt;SSL이&lt;/em&gt; A는 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; 의&lt;/a&gt; 대상이 컨텍스트 전송을 생성하기 위해 사용된다; &lt;em&gt;ssl&lt;/em&gt; 이 &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt; 인 경우 &lt;a href=&quot;ssl#ssl.create_default_context&quot;&gt; &lt;code&gt;ssl.create_default_context()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 기본 컨텍스트 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6be189add9a7c37b3e56859a0bad8de060758bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for a TLS connection) the time in seconds to wait for the TLS handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="translated">&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; 은 연결을 중단하기 전에 TLS 핸드 셰이크가 완료되기를 기다리는 시간 (초)입니다 (TLS 연결의 경우). &lt;code&gt;None&lt;/code&gt; 인 경우 &lt;code&gt;60.0&lt;/code&gt; 초 (기본값)</target>
        </trans-unit>
        <trans-unit id="456e28ae78ae1cf165f16ebc6e46e737bf9f40a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for a TLS server) the time in seconds to wait for the TLS handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="translated">&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; 은 (TLS 서버의 경우) 연결을 중단하기 전에 TLS 핸드 셰이크가 완료 될 때까지 기다리는 시간 (초)입니다. &lt;code&gt;None&lt;/code&gt; 인 경우 &lt;code&gt;60.0&lt;/code&gt; 초 (기본값)</target>
        </trans-unit>
        <trans-unit id="411eea074e24891d546b9e5671ee9790b899670e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for an SSL connection) the time in seconds to wait for the SSL handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="translated">&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; 은 (SSL 연결의 경우) 연결을 중단하기 전에 SSL 핸드 셰이크가 완료되기를 기다리는 시간 (초)입니다. &lt;code&gt;None&lt;/code&gt; 인 경우 &lt;code&gt;60.0&lt;/code&gt; 초 (기본값)</target>
        </trans-unit>
        <trans-unit id="22235b87f57810efcc2ca3019a6005601329f6cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sslcontext&lt;/em&gt;: a configured instance of &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;sslcontext&lt;/em&gt; : 구성된 &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="dffe1a7a0b86afa02240be611377542078b34715" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start&lt;/em&gt; defaults to &lt;a href=&quot;os#os.curdir&quot;&gt;&lt;code&gt;os.curdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;start는&lt;/em&gt; 기본적으로 &lt;a href=&quot;os#os.curdir&quot;&gt; &lt;code&gt;os.curdir&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="214e1ae9db539298e672b1b5f4e9d0161edfabbe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start_dir&lt;/em&gt; can be a dotted module name as well as a directory.</source>
          <target state="translated">&lt;em&gt;start_dir&lt;/em&gt; 은 디렉토리뿐만 아니라 점으로 구분 된 모듈 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cb1ef708a75dd6aafd7831d0ad26958c7e1a2c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start_serving&lt;/em&gt; set to &lt;code&gt;True&lt;/code&gt; (the default) causes the created server to start accepting connections immediately. When set to &lt;code&gt;False&lt;/code&gt;, the user should await on &lt;a href=&quot;#asyncio.Server.start_serving&quot;&gt;&lt;code&gt;Server.start_serving()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt;&lt;code&gt;Server.serve_forever()&lt;/code&gt;&lt;/a&gt; to make the server to start accepting connections.</source>
          <target state="translated">&lt;em&gt;start_serving&lt;/em&gt; 을 &lt;code&gt;True&lt;/code&gt; (기본값)로 설정하면 작성된 서버가 즉시 연결 수락을 시작합니다. &lt;code&gt;False&lt;/code&gt; 로 설정되면 사용자는 &lt;a href=&quot;#asyncio.Server.start_serving&quot;&gt; &lt;code&gt;Server.start_serving()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt; &lt;code&gt;Server.serve_forever()&lt;/code&gt; &lt;/a&gt; 에서 대기 하여 서버가 연결을 수락하도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b8ca59bba38fa2a3770bc1500ebd45e9ce074f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; is a tuple containing the state of the coder. The coder returns a tuple &lt;code&gt;(adpcmfrag, newstate)&lt;/code&gt;, and the &lt;em&gt;newstate&lt;/em&gt; should be passed to the next call of &lt;a href=&quot;#audioop.lin2adpcm&quot;&gt;&lt;code&gt;lin2adpcm()&lt;/code&gt;&lt;/a&gt;. In the initial call, &lt;code&gt;None&lt;/code&gt; can be passed as the state. &lt;em&gt;adpcmfrag&lt;/em&gt; is the ADPCM coded fragment packed 2 4-bit values per byte.</source>
          <target state="translated">&lt;em&gt;state&lt;/em&gt; 는 코더의 상태를 포함하는 튜플입니다. 코더 튜플 반환 &lt;code&gt;(adpcmfrag, newstate)&lt;/code&gt; , 그리고 &lt;em&gt;newstate이&lt;/em&gt; 의 다음 호출에 전달해야한다 &lt;a href=&quot;#audioop.lin2adpcm&quot;&gt; &lt;code&gt;lin2adpcm()&lt;/code&gt; &lt;/a&gt; . 초기 호출 에서 상태를 &lt;code&gt;None&lt;/code&gt; 으로 전달할 수 있습니다. &lt;em&gt;adpcmfrag&lt;/em&gt; 는 바이트 당 2 개의 4 비트 값으로 압축 된 ADPCM 코드 조각입니다.</target>
        </trans-unit>
        <trans-unit id="ab3abf469e5d43058d89d6afc6608a2481431f43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; is a tuple containing the state of the converter. The converter returns a tuple &lt;code&gt;(newfragment, newstate)&lt;/code&gt;, and &lt;em&gt;newstate&lt;/em&gt; should be passed to the next call of &lt;a href=&quot;#audioop.ratecv&quot;&gt;&lt;code&gt;ratecv()&lt;/code&gt;&lt;/a&gt;. The initial call should pass &lt;code&gt;None&lt;/code&gt; as the state.</source>
          <target state="translated">&lt;em&gt;state&lt;/em&gt; 는 변환기의 상태를 포함하는 튜플입니다. 변환기는 튜플 &lt;code&gt;(newfragment, newstate)&lt;/code&gt; 반환 하며 &lt;em&gt;newstate&lt;/em&gt; 는 다음 &lt;a href=&quot;#audioop.ratecv&quot;&gt; &lt;code&gt;ratecv()&lt;/code&gt; &lt;/a&gt; 호출로 전달되어야합니다 . 초기 호출은 상태로 &lt;code&gt;None&lt;/code&gt; 을 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32b69c2f0626f6555a6461a8b758fe90d4f02bc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; should have been obtained from a previous call to &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#random.setstate&quot;&gt;&lt;code&gt;setstate()&lt;/code&gt;&lt;/a&gt; restores the internal state of the generator to what it was at the time &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt; was called.</source>
          <target state="translated">&lt;em&gt;상태&lt;/em&gt; 는 이전의 &lt;a href=&quot;#random.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt; 호출에서 얻어야 하며 &lt;a href=&quot;#random.setstate&quot;&gt; &lt;code&gt;setstate()&lt;/code&gt; &lt;/a&gt; 는 생성기의 내부 상태를 &lt;a href=&quot;#random.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt; 호출 당시의 상태로 복원합니다 .</target>
        </trans-unit>
        <trans-unit id="7964472b3e1f4840fb9b8e551ba654c0aba65e56" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;statespec&lt;/em&gt; will usually be a list or a tuple.</source>
          <target state="translated">&lt;em&gt;statespec&lt;/em&gt; 은 일반적으로 목록 또는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="f0a70bae85e6a8da1b63ff37e5926ccd8b0eabae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stderr&lt;/em&gt; can be any of these:</source>
          <target state="translated">&lt;em&gt;stderr&lt;/em&gt; 는 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7aef713ec22b6beadbe20718e3bdc931d10c67a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt; can be any of these:</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt; 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="410d0e9fe0316fc8e6dc20e1354d4e847efe1a77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;, an existing file descriptor (a positive integer), an existing &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, and &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt;, no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/a&gt;, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt; , &lt;em&gt;stdout&lt;/em&gt; 및 &lt;em&gt;stderr&lt;/em&gt; 은 실행 된 프로그램의 표준 입력, 표준 출력 및 표준 오류 파일 핸들을 각각 지정합니다. 유효한 값은 &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt; , 기존 파일 디스크립터 (양의 정수), 기존 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 및 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt; 는 자식에 대한 새 파이프를 만들어야 함을 나타냅니다. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt; 은 특수 파일 &lt;a href=&quot;os#os.devnull&quot;&gt; &lt;code&gt;os.devnull&lt;/code&gt; &lt;/a&gt; 이 사용됨을 나타냅니다 . 기본 설정이 &lt;code&gt;None&lt;/code&gt; 이면 리디렉션이 발생하지 않습니다. 자식의 파일 핸들은 부모로부터 상속됩니다. 또한 &lt;em&gt;stderr&lt;/em&gt; 는&lt;a href=&quot;#subprocess.STDOUT&quot;&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/a&gt; 은 애플리케이션의 stderr 데이터가 stdout과 동일한 파일 핸들로 캡처되어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ba9ee42da7a01d6ef48342ecce026f7802a98afd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;, an existing file descriptor (a positive integer), an existing &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, and &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt;, no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/a&gt;, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt;, an existing file descriptor (a positive integer), an existing &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, and &lt;code&gt;None&lt;/code&gt; . &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt; &lt;code&gt;os.devnull&lt;/code&gt; &lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt; , no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/a&gt;, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.</target>
        </trans-unit>
        <trans-unit id="b54a6de088cd72df7bc763cdf32664ed4afc7bbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;, an existing file descriptor (a positive integer), an existing file object, and &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt;, no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/a&gt;, which indicates that the stderr data from the child process should be captured into the same file handle as for &lt;em&gt;stdout&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;stdin&lt;/em&gt; , &lt;em&gt;stdout&lt;/em&gt; 및 &lt;em&gt;stderr&lt;/em&gt; 은 실행 된 프로그램의 표준 입력, 표준 출력 및 표준 오류 파일 핸들을 각각 지정합니다. 유효한 값은 &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt; , 기존 파일 디스크립터 (양의 정수), 기존 파일 오브젝트 및 &lt;code&gt;None&lt;/code&gt; 입니다. &lt;a href=&quot;#subprocess.PIPE&quot;&gt; &lt;code&gt;PIPE&lt;/code&gt; &lt;/a&gt; 는 자식에 대한 새 파이프를 만들어야 함을 나타냅니다. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt; &lt;code&gt;DEVNULL&lt;/code&gt; &lt;/a&gt; 은 특수 파일 &lt;a href=&quot;os#os.devnull&quot;&gt; &lt;code&gt;os.devnull&lt;/code&gt; &lt;/a&gt; 이 사용됨을 나타냅니다 . 기본 설정이 &lt;code&gt;None&lt;/code&gt; 이면 리디렉션이 발생하지 않습니다. 자식의 파일 핸들은 부모로부터 상속됩니다. 또한 &lt;em&gt;stderr&lt;/em&gt; 은 &lt;a href=&quot;#subprocess.STDOUT&quot;&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/a&gt; 일 수 있습니다.하위 프로세스의 stderr 데이터가 &lt;em&gt;stdout&lt;/em&gt; 과 동일한 파일 핸들로 캡처되어야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a4a7c17ff0056e4e514e9be14bbc12ff4f4e7916" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdlib&lt;/em&gt;: directory containing the standard Python library files that are not platform-specific.</source>
          <target state="translated">&lt;em&gt;stdlib&lt;/em&gt; : 플랫폼 별이 아닌 표준 Python 라이브러리 파일이 포함 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="e82b15e9b48c9da2008f3a04b8af49f3d4b5344f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdout&lt;/em&gt; can be any of these:</source>
          <target state="translated">&lt;em&gt;stdout&lt;/em&gt; 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8651b228bc44bde58832844bef40bd21440bdf2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stop&lt;/em&gt; is an optional callback accepting an object in the wrapper chain as its sole argument that allows the unwrapping to be terminated early if the callback returns a true value. If the callback never returns a true value, the last object in the chain is returned as usual. For example, &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; uses this to stop unwrapping if any object in the chain has a &lt;code&gt;__signature__&lt;/code&gt; attribute defined.</source>
          <target state="translated">&lt;em&gt;stop&lt;/em&gt; 은 래퍼 체인의 객체를 유일한 인수로 받아들이는 선택적 콜백으로, 콜백이 true 값을 반환하면 언 래핑을 조기에 종료 할 수 있습니다. 콜백이 절대 값을 반환하지 않으면 체인의 마지막 객체가 평소와 같이 반환됩니다. 예를 들어 &lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt; 는 체인의 객체에 &lt;code&gt;__signature__&lt;/code&gt; 속성이 정의 되어있는 경우이를 사용하여 래핑 해제를 중지 합니다.</target>
        </trans-unit>
        <trans-unit id="6bdc6da9e9f5aa5b00544bf4759e5d0da7efad2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strategy&lt;/em&gt; is used to tune the compression algorithm. Possible values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt;, &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;, &lt;code&gt;Z_RLE&lt;/code&gt; (zlib 1.2.0.1) and &lt;code&gt;Z_FIXED&lt;/code&gt; (zlib 1.2.2.2).</source>
          <target state="translated">&lt;em&gt;전략&lt;/em&gt; 은 압축 알고리즘을 조정하는 데 사용됩니다. 가능한 값은 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; (zlib 1.2.0.1) 및 &lt;code&gt;Z_FIXED&lt;/code&gt; (zlib 1.2.2.2)입니다.</target>
        </trans-unit>
        <trans-unit id="d19f33df28cf1fe7451d396e9d557b3086c43726" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stream&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stream&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38588dc6f38c30a1bf295d73d750b067f4da031e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strict&lt;/em&gt;, default value: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;엄격한&lt;/em&gt; 기본값 : &lt;code&gt;True&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ef88de0812f2c9ddc69105b97f546ca9c11e114" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e51405d3bb096c8228c6e19fefff236ae5c325e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; may be either a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;string&lt;/em&gt; may be either a &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; or a &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="0c754c61c8aebe994d7075c0be7619949a9c0d8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; may be either a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;string&lt;/em&gt; 은 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d90073b2a989ad236b6b8efa3553a3601ba4ca1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; must be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;문자열&lt;/em&gt; 은 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="030c320faf127bf6d6e2642c2a2f000866b35d68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strip_text&lt;/em&gt;: set to true to strip whitespace before and after text content</source>
          <target state="translated">&lt;em&gt;strip_text&lt;/em&gt; : 텍스트 내용 앞뒤에 공백을 제거하려면 true로 설정 &lt;em&gt;하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="91ce00e2c0a1096a748da9ac5052e2323e57bb12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;style&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;style&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faf21e7d3515a15d782653fbe11fd1aa8efb2dbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that holds the name of the subkey with which the value is associated. If this parameter is &lt;code&gt;None&lt;/code&gt; or empty, the function retrieves the value set by the &lt;a href=&quot;#winreg.SetValue&quot;&gt;&lt;code&gt;SetValue()&lt;/code&gt;&lt;/a&gt; method for the key identified by &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는 값이 연관된 서브 키의 이름을 보유하는 문자열입니다. 이 매개 변수가 &lt;code&gt;None&lt;/code&gt; 이거나 비어 있으면이 함수 는 key로 식별 된 &lt;em&gt;키에&lt;/em&gt; 대해 &lt;a href=&quot;#winreg.SetValue&quot;&gt; &lt;code&gt;SetValue()&lt;/code&gt; &lt;/a&gt; 메서드로 설정된 값을 검색합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71ce0db54a909a592a89f35ca86dbf7dcc98f2ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that identifies the sub_key to open.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는 열 sub_key를 식별하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0e30bb8e9bf4f0c665d60670efb836611f745679" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that identifies the subkey to load.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는로드 할 하위 키를 식별하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="57be84cef8cbe4f8581c6fb6b273afc3e416c1a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that must be a subkey of the key identified by the &lt;em&gt;key&lt;/em&gt; parameter. This value must not be &lt;code&gt;None&lt;/code&gt;, and the key may not have subkeys.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는 &lt;em&gt;키&lt;/em&gt; 매개 변수로 식별 된 키의 서브 키 여야하는 문자열입니다 . 이 값은 &lt;code&gt;None&lt;/code&gt; 이어야 하며 키에 하위 키가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f31f7eea7bab258828d5ed4a0dfa4623dcddae5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that names the key this method opens or creates.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는이 메소드가 열거 나 생성하는 키의 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d30fcddca285dea3959889a93d7cf414bbbb4ddb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that names the subkey with which the value is associated.</source>
          <target state="translated">&lt;em&gt;sub_key&lt;/em&gt; 는 값이 연결된 하위 키의 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b82d878339b177d70fac586903263c9e1aa3caa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;t&lt;/em&gt; must have the same length as the slice it is replacing.</source>
          <target state="translated">&lt;em&gt;t&lt;/em&gt; 는 교체하는 슬라이스와 길이가 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="9bb01cc4122058c69b5440430ff2616f553530e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tabsize&lt;/em&gt; is an optional keyword argument to specify tab stop spacing and defaults to &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;tabsize&lt;/em&gt; 는 탭 중지 간격을 지정하기위한 선택적 키워드 인수이며 기본값은 &lt;code&gt;8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5a6652365f06780375a86b2f726b3158c7839e91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tagname&lt;/em&gt;, if specified and not &lt;code&gt;None&lt;/code&gt;, is a string giving a tag name for the mapping. Windows allows you to have many different mappings against the same file. If you specify the name of an existing tag, that tag is opened, otherwise a new tag of this name is created. If this parameter is omitted or &lt;code&gt;None&lt;/code&gt;, the mapping is created without a name. Avoiding the use of the tag parameter will assist in keeping your code portable between Unix and Windows.</source>
          <target state="translated">&lt;em&gt;tagname ( &lt;/em&gt; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우) 은 매핑의 태그 이름을 제공하는 문자열입니다. Windows에서는 동일한 파일에 대해 여러 가지 다른 맵핑을 가질 수 있습니다. 기존 태그의 이름을 지정하면 해당 태그가 열리고 그렇지 않으면이 이름의 새 태그가 생성됩니다. 이 매개 변수를 생략하거나 &lt;code&gt;None&lt;/code&gt; 이면 이름없이 맵핑이 작성됩니다. tag 매개 변수를 사용하지 않으면 Unix와 Windows간에 코드를 이식 가능하게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8bd4d78d20ebc2e0b0fb313c52ce957a02cd228" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tar&lt;/em&gt;: Uncompressed tar file. Uses POSIX.1-2001 pax format for new archives.</source>
          <target state="translated">&lt;em&gt;tar&lt;/em&gt; : 압축되지 않은 tar 파일. 새 아카이브에 POSIX.1-2001 pax 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f72109b24d9d837b926f66baeac6941aa4f82e38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tar&lt;/em&gt;: uncompressed tar file.</source>
          <target state="translated">&lt;em&gt;tar&lt;/em&gt; : 압축되지 않은 tar 파일.</target>
        </trans-unit>
        <trans-unit id="30bda02966216850dfd23fec2a652eed2ef1c4fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;target&lt;/em&gt; is the callable object to be invoked by the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method. Defaults to &lt;code&gt;None&lt;/code&gt;, meaning nothing is called.</source>
          <target state="translated">&lt;em&gt;target&lt;/em&gt; 은 &lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출 될 호출 가능 객체 입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 이며 아무 것도 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ab67726261778ac77e28c33396f2f3e2e925d51" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;target&lt;/em&gt; should be a string in the form &lt;code&gt;'package.module.ClassName'&lt;/code&gt;. The &lt;em&gt;target&lt;/em&gt; is imported and the specified object replaced with the &lt;em&gt;new&lt;/em&gt; object, so the &lt;em&gt;target&lt;/em&gt; must be importable from the environment you are calling &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; from. The target is imported when the decorated function is executed, not at decoration time.</source>
          <target state="translated">&lt;em&gt;target&lt;/em&gt; 은 &lt;code&gt;'package.module.ClassName'&lt;/code&gt; 형식의 문자열이어야합니다 . &lt;em&gt;대상은&lt;/em&gt; 수입 지정된 오브젝트는 대체됩니다 &lt;em&gt;새로운&lt;/em&gt; 소위, 개체 &lt;em&gt;대상이&lt;/em&gt; 당신을 호출하는 환경에서 가져올 수 있어야합니다 &lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 에서. 데코레이션 시간이 아닌 데코 레이팅 된 기능이 실행될 때 대상을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0a7d552b17c2c5314617d09e181b88003869ed4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;thread&lt;/em&gt;: Thread which raised the exception, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;thread&lt;/em&gt; : 예외를 발생시킨 &lt;em&gt;thread&lt;/em&gt; 는 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d43aa69b85cbb08e0f2c74610a4ab37295dabc2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; (a float or int), if specified, can be used to control the maximum number of seconds to wait before returning.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;지정된 경우 &lt;em&gt;시간 초과&lt;/em&gt; (float 또는 int)를 사용하여 리턴하기 전에 대기 할 최대 시간 (초)을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50858e1ff60d5153f879e7ea21c4d57bc3c07e9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; can be used to control the maximum number of seconds to wait before returning. &lt;em&gt;timeout&lt;/em&gt; can be an int or float. If &lt;em&gt;timeout&lt;/em&gt; is not specified or &lt;code&gt;None&lt;/code&gt;, there is no limit to the wait time.</source>
          <target state="translated">&lt;em&gt;제한 시간&lt;/em&gt; 은 리턴하기 전에 대기 할 최대 시간 (초)을 제어하는 ​​데 사용할 수 있습니다. &lt;em&gt;타임 아웃&lt;/em&gt; 은 int 또는 float 일 수 있습니다. 경우 &lt;em&gt;시간 제한이&lt;/em&gt; 지정되지되지 않거나 &lt;code&gt;None&lt;/code&gt; , 대기 시간에 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd08055011347fa6e9ea55ab90d607eff6c92a96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; can either be &lt;code&gt;None&lt;/code&gt; or a float or int number of seconds to wait for. If &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, block until the future completes.</source>
          <target state="translated">&lt;em&gt;timeout&lt;/em&gt; 은 &lt;code&gt;None&lt;/code&gt; 또는 float 또는 int 대기 시간 (초)입니다. 경우 &lt;em&gt;시간 제한이&lt;/em&gt; 없는 &lt;code&gt;None&lt;/code&gt; 미래 완료 될 때까지 블록.</target>
        </trans-unit>
        <trans-unit id="eb0945c9faa173df868a9eedb4df0cbdd27cfc48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e67bff435a688e8c5f16f27cc676e9dc6d0ffb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0881e6d84ff14f5867712c7cf9e7b0cdc8e706b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;transport&lt;/em&gt; and &lt;em&gt;protocol&lt;/em&gt; instances that methods like &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;create_connection()&lt;/code&gt;&lt;/a&gt; return.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;create_server()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;create_connection()&lt;/code&gt; &lt;/a&gt; 과 같은 메소드가 리턴 하는 &lt;em&gt;전송&lt;/em&gt; 및 &lt;em&gt;프로토콜&lt;/em&gt; 인스턴스 .</target>
        </trans-unit>
        <trans-unit id="3380662779ca4b850fd5013cbada93ff47e4f265" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ts&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ts&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50f88e5501b2fce98a3f2f9bb2ffe74ca46e4070" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is an integer that specifies the type of the data. Currently this must be &lt;a href=&quot;#winreg.REG_SZ&quot;&gt;&lt;code&gt;REG_SZ&lt;/code&gt;&lt;/a&gt;, meaning only strings are supported. Use the &lt;a href=&quot;#winreg.SetValueEx&quot;&gt;&lt;code&gt;SetValueEx()&lt;/code&gt;&lt;/a&gt; function for support for other data types.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; 은 데이터 유형을 지정하는 정수입니다. 현재 이것은 &lt;a href=&quot;#winreg.REG_SZ&quot;&gt; &lt;code&gt;REG_SZ&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 즉, 문자열 만 지원됩니다. 다른 데이터 형식을 지원 하려면 &lt;a href=&quot;#winreg.SetValueEx&quot;&gt; &lt;code&gt;SetValueEx()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1116b87f1f5c67142cd3866cb10c8016e0e0154" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is an integer that specifies the type of the data. See &lt;a href=&quot;#value-types&quot;&gt;Value Types&lt;/a&gt; for the available types.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; 은 데이터 유형을 지정하는 정수입니다. 사용 가능한 유형 은 &lt;a href=&quot;#value-types&quot;&gt;값 유형&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9e58a3fb3ec84d18b86930673344b55c1081775" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is the algorithm type as string, e.g. &lt;code&gt;aead&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;skcipher&lt;/code&gt; or &lt;code&gt;rng&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; 은 문자열 형식의 알고리즘 유형입니다 (예 : &lt;code&gt;aead&lt;/code&gt; , &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;skcipher&lt;/code&gt; 또는 &lt;code&gt;rng&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="dca707730b3052fc43d3db7817523c353de3c525" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type_&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;type_&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4aeef8d5994128b08bb266c5f49f0c11371f34a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the elements of the returned array: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. If &lt;em&gt;size_or_initializer&lt;/em&gt; is an integer then it determines the length of the array, and the array will be initially zeroed. Otherwise &lt;em&gt;size_or_initializer&lt;/em&gt; is a sequence which is used to initialize the array and whose length determines the length of the array.</source>
          <target state="translated">&lt;em&gt;typecode_or_type&lt;/em&gt; 은 반환 된 배열의 요소 유형을 결정합니다. ctypes 유형이거나 &lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 모듈에서 사용하는 종류의 한 문자 유형 코드입니다 . 경우 &lt;em&gt;size_or_initializer는&lt;/em&gt; 정수이고 그때는 어레이의 길이를 결정하고, 상기 어레이는 초기에 제로로한다. 그렇지 않으면 &lt;em&gt;size_or_initializer&lt;/em&gt; 는 배열을 초기화하는 데 사용되며 길이가 배열의 길이를 결정하는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="99b6bcab5e5e5b8614340cb6e14cdc96eba2674d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the elements of the returned array: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. If &lt;em&gt;size_or_initializer&lt;/em&gt; is an integer, then it determines the length of the array, and the array will be initially zeroed. Otherwise, &lt;em&gt;size_or_initializer&lt;/em&gt; is a sequence which is used to initialize the array and whose length determines the length of the array.</source>
          <target state="translated">&lt;em&gt;typecode_or_type&lt;/em&gt; 은 반환 된 배열의 요소 유형을 결정합니다. ctypes 유형이거나 &lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 모듈에서 사용하는 종류의 한 문자 유형 코드입니다 . 경우 &lt;em&gt;size_or_initializer는&lt;/em&gt; 정수이고, 이는 어레이의 길이를 결정하고, 상기 어레이는 초기에 제로로한다. 그렇지 않으면 &lt;em&gt;size_or_initializer&lt;/em&gt; 는 배열을 초기화하는 데 사용되며 길이가 배열의 길이를 결정하는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="e191b3197f583521e3bdcbf0cf2e589905a8d2ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the returned object: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. &lt;em&gt;*args&lt;/em&gt; is passed on to the constructor for the type.</source>
          <target state="translated">&lt;em&gt;typecode_or_type&lt;/em&gt; 은 반환 된 객체의 유형을 결정합니다. ctypes 유형이거나 &lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt; 모듈에서 사용하는 종류의 한 문자 유형 코드입니다 . &lt;em&gt;* 인수는&lt;/em&gt; 유형의 생성자에 전달된다.</target>
        </trans-unit>
        <trans-unit id="5219d24b5d457df7757d71797ee051df23f82ae7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typeid&lt;/em&gt; is a &amp;ldquo;type identifier&amp;rdquo; which is used to identify a particular type of shared object. This must be a string.</source>
          <target state="translated">&lt;em&gt;typeid&lt;/em&gt; 는 특정 유형의 공유 객체를 식별하는 데 사용되는&amp;ldquo;유형 식별자&amp;rdquo;입니다. 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="734feb15230826195ddf25ba04bbae38bbb251cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unlink()&lt;/em&gt; was called</source>
          <target state="translated">&lt;em&gt;unlink ()&lt;/em&gt; 가 호출되었습니다</target>
        </trans-unit>
        <trans-unit id="424bf3db3e91d7e2e9732edf5d152ae828030af2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unsafe&lt;/em&gt;: By default if any attribute starts with &lt;em&gt;assert&lt;/em&gt; or &lt;em&gt;assret&lt;/em&gt; will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;. Passing &lt;code&gt;unsafe=True&lt;/code&gt; will allow access to these attributes.</source>
          <target state="translated">&lt;em&gt;안전하지 않은&lt;/em&gt; : 어떤 속성이로 시작하면 기본적으로 &lt;em&gt;어설&lt;/em&gt; 또는 &lt;em&gt;assret&lt;/em&gt; 올릴 것이다 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 를&lt;/a&gt; . &lt;code&gt;unsafe=True&lt;/code&gt; 를 전달하면 이러한 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f500970421acebc8cd68d6346d8602ea00032c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unverifiable&lt;/em&gt; should indicate whether the request is unverifiable, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. It defaults to &lt;code&gt;False&lt;/code&gt;. An unverifiable request is one whose URL the user did not have the option to approve. For example, if the request is for an image in an HTML document, and the user had no option to approve the automatic fetching of the image, this should be true.</source>
          <target state="translated">&lt;em&gt;확인할 수&lt;/em&gt; 없음은 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2965에&lt;/strong&gt;&lt;/a&gt; 정의 된 &lt;strong&gt;대로&lt;/strong&gt; 요청을 확인할 수 없는지 여부를 표시해야합니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다. 확인할 수없는 요청은 사용자에게 URL에 승인 옵션이없는 요청입니다. 예를 들어, HTML 문서의 이미지에 대한 요청이고 사용자에게 이미지의 자동 페치를 승인 할 수있는 옵션이없는 경우 이는 사실입니다.</target>
        </trans-unit>
        <trans-unit id="c79195dad2fc1ffba31a318d692d25414d199d01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;upgrade&lt;/em&gt; indicates whether or not to upgrade an existing installation of an earlier version of &lt;code&gt;pip&lt;/code&gt; to the bundled version.</source>
          <target state="translated">&lt;em&gt;upgrade&lt;/em&gt; 는 이전 버전의 &lt;code&gt;pip&lt;/code&gt; 의 기존 설치를 번들 버전 으로 업그레이드할지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="edbe3e116fcc92dbbc87b01a5b78eb2594dc7d98" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;uri&lt;/em&gt; can be either a single URI, or a sequence of URIs. &lt;em&gt;realm&lt;/em&gt;, &lt;em&gt;user&lt;/em&gt; and &lt;em&gt;passwd&lt;/em&gt; must be strings. This causes &lt;code&gt;(user, passwd)&lt;/code&gt; to be used as authentication tokens when authentication for &lt;em&gt;realm&lt;/em&gt; and a super-URI of any of the given URIs is given.</source>
          <target state="translated">&lt;em&gt;uri&lt;/em&gt; 는 단일 URI이거나 일련의 URI 일 수 있습니다. &lt;em&gt;realm&lt;/em&gt; , &lt;em&gt;user&lt;/em&gt; 및 &lt;em&gt;passwd&lt;/em&gt; 는 문자열이어야합니다. 이로 인해 &lt;em&gt;영역에&lt;/em&gt; 대한 인증 과 지정된 URI의 수퍼 URI가 제공 될 때 &lt;code&gt;(user, passwd)&lt;/code&gt; 가 인증 토큰으로 사용됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="008a5a893aa61954e766a9cca187919302f23f5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;url&lt;/em&gt; should be a string containing a valid URL.</source>
          <target state="translated">&lt;em&gt;url&lt;/em&gt; 은 유효한 URL을 포함하는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d1bc8cb26d5aac96cabf71ccc6e637e735d55a53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;user&lt;/em&gt; can be a system user name or a uid; the same applies to &lt;em&gt;group&lt;/em&gt;. At least one argument is required.</source>
          <target state="translated">&lt;em&gt;user&lt;/em&gt; 는 시스템 사용자 이름 또는 uid 일 수 있습니다. &lt;em&gt;그룹&lt;/em&gt; 에도 동일하게 적용됩니다 . 최소한 하나의 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="10dfb073e00f1147e7b0bed6c62fb58b305a6641" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;user&lt;/em&gt; indicates whether to use the user scheme rather than installing globally.</source>
          <target state="translated">&lt;em&gt;user&lt;/em&gt; 는 전체 설치 대신 사용자 구성표를 사용할지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c328e1ecac1affe97e0cc900e7047c20ef5b6ff2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;using_IDLE&lt;/em&gt;: Set this to &lt;code&gt;True&lt;/code&gt; if you regularly work with IDLE and its -n switch (&amp;ldquo;no subprocess&amp;rdquo;). This will prevent &lt;a href=&quot;#turtle.exitonclick&quot;&gt;&lt;code&gt;exitonclick()&lt;/code&gt;&lt;/a&gt; to enter the mainloop.</source>
          <target state="translated">&lt;em&gt;using_IDLE&lt;/em&gt; : IDLE 및 -n 스위치 ( &quot;하위 프로세스 없음&quot;)를 정기적으로 사용하는 경우이 값을 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 . 그러면 &lt;a href=&quot;#turtle.exitonclick&quot;&gt; &lt;code&gt;exitonclick()&lt;/code&gt; &lt;/a&gt; 이 메인 루프 에 들어 가지 못하게됩니다 .</target>
        </trans-unit>
        <trans-unit id="2822bab0d8152ef5bb971d14cbe4b60d55987cdf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; can be an integer, string, tuple, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, or another &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; object. If no &lt;em&gt;value&lt;/em&gt; is given, returns &lt;code&gt;Decimal('0')&lt;/code&gt;. If &lt;em&gt;value&lt;/em&gt; is a string, it should conform to the decimal numeric string syntax after leading and trailing whitespace characters, as well as underscores throughout, are removed:</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 정수, 문자열, 튜플, &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 또는 다른 &lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다. &lt;em&gt;값&lt;/em&gt; 을 지정 하지 않으면 &lt;code&gt;Decimal('0')&lt;/code&gt; 을 반환합니다 . 경우 &lt;em&gt;값이&lt;/em&gt; 문자열, 그것은 선도에 걸쳐 공백 문자뿐만 아니라 밑줄을 후행 후 진수 숫자 문자열 구문과 일치해야 제거된다 :</target>
        </trans-unit>
        <trans-unit id="cd067d9a9455a99a665bcd1437172ad060a7510d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; is a string that identifies the value to remove.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 제거 할 값을 식별하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a4596c06248032e80dbe69454e233d9d48dd14f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; is a string that specifies the new value.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 새 값을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a3fd4d3efc021240749ccbe1d45396f82c6aa290" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. There should be no surrogateescaped binary data in the string returned by the method.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 서로 게이트 이스케이프 된 이진 데이터를 포함 할 수 있습니다. 메소드가 리턴 한 문자열에 대리 이스케이프 된 이진 데이터가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="5e2d4e432ed9658dfc9574c500c6f022c99de5b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. There should be no surrogateescaped binary data in the value returned by the method.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 서로 게이트 이스케이프 된 이진 데이터를 포함 할 수 있습니다. 메소드가 리턴 한 값에 대리 이스케이프 된 이진 데이터가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="f6ee4f93e842f4c1fdb497093b2526f7475a5f9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. These could be converted back into binary data in the returned bytes object.</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt; 는 서로 게이트 이스케이프 된 이진 데이터를 포함 할 수 있습니다. 이들은 반환 된 바이트 객체에서 이진 데이터로 다시 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a28a431df12b6f0df562db744c8e1404fe51935" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value_name&lt;/em&gt; is a string indicating the value to query.</source>
          <target state="translated">&lt;em&gt;value_name&lt;/em&gt; 은 쿼리 할 값을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bfdf8d2ecc7108f85efa52d4e4314c3214492f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value_name&lt;/em&gt; is a string that names the subkey with which the value is associated.</source>
          <target state="translated">&lt;em&gt;value_name&lt;/em&gt; 은 값이 연관된 하위 키의 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="7357b40847945e10f90e7de964f42e0cbedb5e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;values&lt;/em&gt; can be a dictionary of values to set in the dictionary. &lt;em&gt;values&lt;/em&gt; can also be an iterable of &lt;code&gt;(key, value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;em&gt;값&lt;/em&gt; 은 사전에서 설정할 값의 사전 일 수 있습니다. &lt;em&gt;값&lt;/em&gt; 은 반복 가능한 &lt;code&gt;(key, value)&lt;/code&gt; 쌍일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de589f63da0cf7a8eb51f161cb64ba81713ba525" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;verbosity&lt;/em&gt; controls the level of output to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; from the bootstrapping operation.</source>
          <target state="translated">&lt;em&gt;verbosity&lt;/em&gt; 는 부트 스트랩 조작에서 &lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; 으로&lt;/a&gt; 의 출력 레벨을 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="9b7804c88a5abd1c7967d77c31ad206fdda51354" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;version&lt;/em&gt; - to be set to an integer value representing the schema version. The only valid value at present is 1, but having this key allows the schema to evolve while still preserving backwards compatibility.</source>
          <target state="translated">&lt;em&gt;버전&lt;/em&gt; - 스키마 버전을 나타내는 정수 값으로 설정합니다. 현재 유일하게 유효한 값은 1이지만이 키를 사용하면 이전 버전과의 호환성을 유지하면서 스키마가 발전 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b516d289aaab557e633dd7d2e6176b49ea13cc6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;version&lt;/em&gt; is a named tuple, in the same format as &lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt;. It represents the version of the Python &lt;em&gt;implementation&lt;/em&gt;. This has a distinct meaning from the specific version of the Python &lt;em&gt;language&lt;/em&gt; to which the currently running interpreter conforms, which &lt;code&gt;sys.version_info&lt;/code&gt; represents. For example, for PyPy 1.8 &lt;code&gt;sys.implementation.version&lt;/code&gt; might be &lt;code&gt;sys.version_info(1, 8, 0, 'final', 0)&lt;/code&gt;, whereas &lt;code&gt;sys.version_info&lt;/code&gt; would be &lt;code&gt;sys.version_info(2, 7, 2, 'final', 0)&lt;/code&gt;. For CPython they are the same value, since it is the reference implementation.</source>
          <target state="translated">&lt;em&gt;version&lt;/em&gt; 은 &lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; &lt;/a&gt; 와 같은 형식으로 명명 된 튜플 입니다. 그것은 파이썬 &lt;em&gt;구현&lt;/em&gt; 의 버전을 나타냅니다 . 이는 현재 실행중인 인터프리터가 준수 하는 특정 버전의 Python &lt;em&gt;언어&lt;/em&gt; 와 &lt;code&gt;sys.version_info&lt;/code&gt; 가 나타내는 고유 한 의미를 갖습니다 . 예를 들어 PyPy 1.8의 경우 &lt;code&gt;sys.implementation.version&lt;/code&gt; 은 &lt;code&gt;sys.version_info(1, 8, 0, 'final', 0)&lt;/code&gt; 일 수 있지만 &lt;code&gt;sys.version_info&lt;/code&gt; 는 &lt;code&gt;sys.version_info(2, 7, 2, 'final', 0)&lt;/code&gt; . CPython의 경우 참조 구현이므로 동일한 값입니다.</target>
        </trans-unit>
        <trans-unit id="cb2a1834b7db30b9a8bef05c3353ecba9928a723" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;width&lt;/em&gt; is a decimal integer defining the minimum field width. If not specified, then the field width will be determined by the content.</source>
          <target state="translated">&lt;em&gt;width&lt;/em&gt; 는 최소 필드 너비를 정의하는 십진 정수입니다. 지정하지 않으면 내용에 따라 필드 너비가 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="c446a708fe964d9a0ac8e303db87ccdf47ca1e76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;width&lt;/em&gt; is a decimal integer defining the minimum total field width, including any prefixes, separators, and other formatting characters. If not specified, then the field width will be determined by the content.</source>
          <target state="translated">&lt;em&gt;width&lt;/em&gt; is a decimal integer defining the minimum total field width, including any prefixes, separators, and other formatting characters. If not specified, then the field width will be determined by the content.</target>
        </trans-unit>
        <trans-unit id="9ab4905108d8772eefd20ede1fcab6a22a476a4a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;windll&lt;/em&gt; does not try to select one of them by magic, you must access the version you need by specifying &lt;code&gt;GetModuleHandleA&lt;/code&gt; or &lt;code&gt;GetModuleHandleW&lt;/code&gt; explicitly, and then call it with bytes or string objects respectively.</source>
          <target state="translated">&lt;em&gt;windll&lt;/em&gt; 은 마법으로 이들 중 하나를 선택하려고하지 않으므로 &lt;code&gt;GetModuleHandleA&lt;/code&gt; 또는 &lt;code&gt;GetModuleHandleW&lt;/code&gt; 를 명시 적으로 지정하여 필요한 버전에 액세스 한 다음 각각 바이트 또는 문자열 객체로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="0eaf5bcd804764250211985428430f8bbcc63c7a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with_comments&lt;/em&gt;: set to true to include comments (default: false)</source>
          <target state="translated">&lt;em&gt;with_comments&lt;/em&gt; : 주석을 포함하려면 true로 설정하십시오 (기본값 : false)</target>
        </trans-unit>
        <trans-unit id="5fa0fdd6e3a383c3c2e71e3b567d31ffb1146e33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wlist&lt;/em&gt;: wait until ready for writing</source>
          <target state="translated">&lt;em&gt;wlist&lt;/em&gt; : 쓰기 준비가 될 때까지 기다립니다</target>
        </trans-unit>
        <trans-unit id="6323e6e924d1492ff9d74bb1d9ff37bd0eedcd7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;word&lt;/em&gt; will usually be a user&amp;rsquo;s password as typed at a prompt or in a graphical interface. The optional &lt;em&gt;salt&lt;/em&gt; is either a string as returned from &lt;a href=&quot;#crypt.mksalt&quot;&gt;&lt;code&gt;mksalt()&lt;/code&gt;&lt;/a&gt;, one of the &lt;code&gt;crypt.METHOD_*&lt;/code&gt; values (though not all may be available on all platforms), or a full encrypted password including salt, as returned by this function. If &lt;em&gt;salt&lt;/em&gt; is not provided, the strongest method will be used (as returned by &lt;a href=&quot;#crypt.methods&quot;&gt;&lt;code&gt;methods()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;단어&lt;/em&gt; 는 일반적으로 프롬프트 나 그래픽 인터페이스에서 입력 한 사용자의 비밀번호입니다. 선택적 &lt;em&gt;솔트&lt;/em&gt; 는 &lt;code&gt;crypt.METHOD_*&lt;/code&gt; 값 중 하나 인 &lt;a href=&quot;#crypt.mksalt&quot;&gt; &lt;code&gt;mksalt()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 문자열 이거나 ( 모든 플랫폼에서 모든 것을 사용할 수있는 것은 아님) 솔트를 포함한 전체 암호화 된 비밀번호 (이 함수에 의해 리턴 됨)입니다. 경우 &lt;em&gt;염이&lt;/em&gt; 제공되지 않고, 강력한 방법이 사용된다 (의해 반환 &lt;a href=&quot;#crypt.methods&quot;&gt; &lt;code&gt;methods()&lt;/code&gt; &lt;/a&gt; ).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d72ae5967389f33b155d7e1fd996e19e0cbfa34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wrapcol&lt;/em&gt; controls whether the output should have newline (&lt;code&gt;b'\n'&lt;/code&gt;) characters added to it. If this is non-zero, each output line will be at most this many characters long.</source>
          <target state="translated">&lt;em&gt;wrapcol&lt;/em&gt; 은 출력에 개행 ( &lt;code&gt;b'\n'&lt;/code&gt; ) 문자를 추가 &lt;em&gt;해야하는지&lt;/em&gt; 여부를 제어합니다 . 이것이 0이 아닌 경우 각 출력 행의 길이는 최대이 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="08bdb249b1bb970fff39247b79c6aacf4ea8d88a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wrapcolumn&lt;/em&gt; is an optional keyword to specify column number where lines are broken and wrapped, defaults to &lt;code&gt;None&lt;/code&gt; where lines are not wrapped.</source>
          <target state="translated">&lt;em&gt;wrapcolumn&lt;/em&gt; 은 행이 줄 바꿈 된 열 번호를 지정하는 선택적 키워드이며, 줄이 줄 바꿈되지 않은 경우 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="698006fca767945daf3f214770c258d791b9532d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wraps&lt;/em&gt;: Item for the mock object to wrap. If &lt;em&gt;wraps&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; then calling the Mock will pass the call through to the wrapped object (returning the real result). Attribute access on the mock will return a Mock object that wraps the corresponding attribute of the wrapped object (so attempting to access an attribute that doesn&amp;rsquo;t exist will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;wraps&lt;/em&gt; : &lt;em&gt;랩핑&lt;/em&gt; 할 mock 객체의 아이템. &lt;em&gt;wraps&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 Mock을 호출하면 래핑 된 객체로 호출이 전달됩니다 (실제 결과 반환). 모의에 대한 속성 액세스는 래핑 된 객체의 해당 속성을 래핑하는 Mock 객체를 반환하므로 존재하지 않는 속성에 액세스하려고하면 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="daeaadf94b10ca686506ff85a595caf45a3b0508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are pixel coordinates relative to the widget.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 및 &lt;em&gt;y&lt;/em&gt; 는 위젯을 기준으로 한 픽셀 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="bbf0ac41c7ccf3cefddb3dbf60603300d7d0c7ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; converted to floating point</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 는 부동 소수점으로 변환</target>
        </trans-unit>
        <trans-unit id="60ba7c93cfb6c0fddb5cb7096fc38bf2de680fdf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; converted to integer</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 는 정수로 변환</target>
        </trans-unit>
        <trans-unit id="95c21fb764d04ff7b58492908ebc2fda60e489cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; negated</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 부정</target>
        </trans-unit>
        <trans-unit id="afe977a7ac07d80aa9ce8f091b9aa10a5699b83c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; rounded to &lt;em&gt;n&lt;/em&gt; digits, rounding half to even. If &lt;em&gt;n&lt;/em&gt; is omitted, it defaults to 0.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 는 &lt;em&gt;n&lt;/em&gt; 자리로 반올림되고 반은 짝수로 반올림됩니다. 경우 &lt;em&gt;N은&lt;/em&gt; 0, 기본값을 생략한다.</target>
        </trans-unit>
        <trans-unit id="1ec7bc077e3609721a358c436ec534de55feb136" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; shifted left by &lt;em&gt;n&lt;/em&gt; bits</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 는 &lt;em&gt;n&lt;/em&gt; 비트 만큼 왼쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="0717b6e7a354958d6b329b7a2a078b942efdaa8d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; shifted right by &lt;em&gt;n&lt;/em&gt; bits</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 는 &lt;em&gt;n&lt;/em&gt; 비트 만큼 오른쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="63380121fdd00a6cb7d962279216442592059d93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; to the power &lt;em&gt;y&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 를 거듭 제곱 한 &lt;em&gt;y&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74e4af95208a90a6018492decafe9e9f39b2e429" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; truncated to &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;Integral&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;numbers#numbers.Integral&quot;&gt; &lt;code&gt;Integral&lt;/code&gt; &lt;/a&gt; 잘린 &lt;em&gt;x&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6009996e5b2429c8b5d2a8684173570975192359" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; unchanged</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 변경되지 않은</target>
        </trans-unit>
        <trans-unit id="c29d75d14274b4158f7f304298f7cc2311479fe2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xlist&lt;/em&gt;: wait for an &amp;ldquo;exceptional condition&amp;rdquo; (see the manual page for what your system considers such a condition)</source>
          <target state="translated">&lt;em&gt;xlist&lt;/em&gt; :&amp;ldquo;예외 조건&amp;rdquo;을 기다립니다 (시스템에서 이러한 조건을 고려하는 내용은 매뉴얼 페이지 참조)</target>
        </trans-unit>
        <trans-unit id="8ba55a062d24fbed6df1dd5a260105f5d3e40f46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xztar&lt;/em&gt;: xz&amp;rsquo;ed tar-file (if the &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="translated">&lt;em&gt;xztar&lt;/em&gt; : xz의 tar 파일 ( &lt;a href=&quot;lzma#module-lzma&quot;&gt; &lt;code&gt;lzma&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우).</target>
        </trans-unit>
        <trans-unit id="2108a87ba6e7c24019360b0d396276667afa4947" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zdict&lt;/em&gt; is a predefined compression dictionary. This is a sequence of bytes (such as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object) containing subsequences that are expected to occur frequently in the data that is to be compressed. Those subsequences that are expected to be most common should come at the end of the dictionary.</source>
          <target state="translated">&lt;em&gt;zdict&lt;/em&gt; 는 사전 정의 된 압축 사전입니다. 이것은 압축 될 데이터에서 자주 발생할 것으로 예상 되는 서브 시퀀스를 포함하는 바이트 시퀀스 (예 : &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 오브젝트)입니다. 가장 일반적 일 것으로 예상되는 하위 시퀀스는 사전 끝에 와야합니다.</target>
        </trans-unit>
        <trans-unit id="63010be52d85f9625ec2f17e23e58ba4f6d89134" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zip&lt;/em&gt;: ZIP file (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="translated">&lt;em&gt;zip&lt;/em&gt; : ZIP 파일 ( &lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수있는 경우)</target>
        </trans-unit>
        <trans-unit id="d67c696029fb6518ed510c37a94c1475cdf39db5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zip&lt;/em&gt;: ZIP file (unpacking compressed files works only if the corresponding module is available).</source>
          <target state="translated">&lt;em&gt;zip&lt;/em&gt; : ZIP 파일 (압축 파일 압축 해제)은 해당 모듈을 사용할 수있는 경우에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="94fda1ec2062e7811ba1c1974475acf44ffa1e49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Unix version)&lt;/strong&gt; Maps &lt;em&gt;length&lt;/em&gt; bytes from the file specified by the file descriptor &lt;em&gt;fileno&lt;/em&gt;, and returns a mmap object. If &lt;em&gt;length&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, the maximum length of the map will be the current size of the file when &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;strong&gt;(유닉스 버전)&lt;/strong&gt; 지도 &lt;em&gt;길이는&lt;/em&gt; 파일 기술자에 의해 지정된 파일로부터 바이트 &lt;em&gt;fileno&lt;/em&gt; 및 mmap에 개체를 반환합니다. 경우 &lt;em&gt;길이가&lt;/em&gt; 인 &lt;code&gt;0&lt;/code&gt; 때,지도의 최대 길이는 파일의 현재 크기가됩니다 &lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; 에이&lt;/a&gt; 라고합니다.</target>
        </trans-unit>
        <trans-unit id="2237686a0f06855ef648b8c2de6b9b06fe0f206f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Windows version)&lt;/strong&gt; Maps &lt;em&gt;length&lt;/em&gt; bytes from the file specified by the file handle &lt;em&gt;fileno&lt;/em&gt;, and creates a mmap object. If &lt;em&gt;length&lt;/em&gt; is larger than the current size of the file, the file is extended to contain &lt;em&gt;length&lt;/em&gt; bytes. If &lt;em&gt;length&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, the maximum length of the map is the current size of the file, except that if the file is empty Windows raises an exception (you cannot create an empty mapping on Windows).</source>
          <target state="translated">&lt;strong&gt;(Windows 버전)&lt;/strong&gt; 지도 &lt;em&gt;길이는&lt;/em&gt; 파일 핸들에 의해 지정된 파일로부터 바이트 &lt;em&gt;fileno&lt;/em&gt; 및 mmap에 개체를 만듭니다. 경우 &lt;em&gt;길이가&lt;/em&gt; 파일의 현재 크기보다 큰 파일을 포함하도록 확장 &lt;em&gt;길이&lt;/em&gt; 바이트. 경우 &lt;em&gt;길이가&lt;/em&gt; 인 &lt;code&gt;0&lt;/code&gt; 즉, 빈 윈도우 (Windows에서 빈 매핑을 만들 수 없습니다) 예외가 발생 파일이되어있는 경우를 제외하고,지도의 최대 길이는 파일의 현재 크기입니다.</target>
        </trans-unit>
        <trans-unit id="2ec0baf973799b29570eb6e23a422ba9161fb532" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ATTENTION&lt;/strong&gt;: in user-defined coordinate systems angles may appear distorted.</source>
          <target state="translated">&lt;strong&gt;주의&lt;/strong&gt; : 사용자 정의 좌표계에서 각도가 왜곡되어 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf826dc4e06c9af7beca41decbccbe23be63b670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Automatic junk heuristic:&lt;/strong&gt;&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; supports a heuristic that automatically treats certain sequence items as junk. The heuristic counts how many times each individual item appears in the sequence. If an item&amp;rsquo;s duplicates (after the first one) account for more than 1% of the sequence and the sequence is at least 200 items long, this item is marked as &amp;ldquo;popular&amp;rdquo; and is treated as junk for the purpose of sequence matching. This heuristic can be turned off by setting the &lt;code&gt;autojunk&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when creating the &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;자동 정크 휴리스틱 : &lt;/strong&gt;&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt; 는 특정 시퀀스 항목을 정크로 자동 처리하는 휴리스틱을 지원합니다. 휴리스틱은 각 개별 항목이 시퀀스에 나타나는 횟수를 계산합니다. 항목의 중복 항목 (첫 번째 항목 이후)이 시퀀스의 1 % 이상을 차지하고 시퀀스의 길이가 200 개 이상인 경우이 항목은 &quot;인기&quot;로 표시되고 시퀀스 일치를 위해 정크로 처리됩니다. 이 휴리스틱은 &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; 를&lt;/a&gt; 작성할 때 &lt;code&gt;autojunk&lt;/code&gt; 인수를 &lt;code&gt;False&lt;/code&gt; 로 설정하여 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5e5aca25d85db9edca4cdb9bde370ef847e6065" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BLAKE2b&lt;/strong&gt;, optimized for 64-bit platforms and produces digests of any size between 1 and 64 bytes,</source>
          <target state="translated">&lt;strong&gt;BLAKE2b&lt;/strong&gt; 는 64 비트 플랫폼에 최적화되어 있으며 1에서 64 바이트 사이의 모든 크기의 다이제스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7265c9652764212c6fc1826c7d4221933c3899c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BLAKE2s&lt;/strong&gt;, optimized for 8- to 32-bit platforms and produces digests of any size between 1 and 32 bytes.</source>
          <target state="translated">&lt;strong&gt;BLAKE2&lt;/strong&gt; 는 8 비트에서 32 비트 플랫폼에 최적화되어 있으며 1에서 32 바이트 사이의 모든 크기의 다이제스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4158503ba123a166f3ab13d066e805acdb3b82c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary operations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이진 연산&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2ec13c2128f4cf2a693ccae2c551f6f53231834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Auto history is enabled by default, and changes to this do not persist across multiple sessions.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 자동 히스토리는 기본적으로 사용되며 이에 대한 변경 사항이 여러 세션에서 지속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3dc9d6665bc06d8ec869ecd632bcf3f7360a4e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Bytecode is an implementation detail of the CPython interpreter. No guarantees are made that bytecode will not be added, removed, or changed between versions of Python. Use of this module should not be considered to work across Python VMs or Python releases.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 바이트 코드는 CPython 인터프리터의 구현 세부 사항입니다. 파이썬 버전간에 바이트 코드가 추가, 제거 또는 변경되지 않을 것이라는 보장은 없습니다. 이 모듈을 사용하여 Python VM 또는 Python 릴리스에서 작동하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="9341218c458820f2dccca05c5b4463cb09b28f05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; CPython generates implicit parameter names of the form &lt;code&gt;.0&lt;/code&gt; on the code objects used to implement comprehensions and generator expressions.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; CPython은 이해 및 생성기 표현식을 구현하는 데 사용되는 코드 오브젝트에서 &lt;code&gt;.0&lt;/code&gt; 형식의 내재 된 매개 변수 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="97fcf41b403be65df277113532b3e59702eadf34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Currently, the prime used is &lt;code&gt;P = 2**31 - 1&lt;/code&gt; on machines with 32-bit C longs and &lt;code&gt;P = 2**61 - 1&lt;/code&gt; on machines with 64-bit C longs.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 현재 사용되는 소수는 32 비트 C 길이의 시스템에서 &lt;code&gt;P = 2**31 - 1&lt;/code&gt; 이고 64 비트 C 길이의 시스템에서 &lt;code&gt;P = 2**61 - 1&lt;/code&gt; 61-1입니다.</target>
        </trans-unit>
        <trans-unit id="55162de2666e66a02a868281d253fdea69627655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In CPython, due to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt;, only one thread can execute Python code at once (even though certain performance-oriented libraries might overcome this limitation). If you want your application to make better use of the computational resources of multi-core machines, you are advised to use &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;concurrent.futures#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;. However, threading is still an appropriate model if you want to run multiple I/O-bound tasks simultaneously.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; CPython에서는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; 으로 인해 한 번에 하나의 스레드 만 Python 코드를 실행할 수 있습니다 (특정 성능 지향 라이브러리가이 한계를 극복 할 수 있음에도 불구하고). 응용 프로그램이 멀티 코어 머신의 계산 자원을 더 잘 사용하려면 &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;concurrent.futures#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt; .futures.ProcessPoolExecutor를 사용하는 것이 좋습니다 . 그러나 여러 I / O 바운드 작업을 동시에 실행하려는 경우 스레딩은 여전히 ​​적절한 모델입니다.</target>
        </trans-unit>
        <trans-unit id="25615cf67ea12fa584b3970748a0b43192c55497" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In CPython, due to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt;, only one thread can execute Python code at once (even though certain performance-oriented libraries might overcome this limitation). If you want your application to make better use of the computational resources of multi-core machines, you are advised to use &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;concurrent.futures#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;. However, threading is still an appropriate model if you want to run multiple I/O-bound tasks simultaneously.</source>
          <target state="translated">&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In CPython, due to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt;, only one thread can execute Python code at once (even though certain performance-oriented libraries might overcome this limitation). If you want your application to make better use of the computational resources of multi-core machines, you are advised to use &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;concurrent.futures#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;. However, threading is still an appropriate model if you want to run multiple I/O-bound tasks simultaneously.</target>
        </trans-unit>
        <trans-unit id="492257c252d2162358caaa9d15f724320907cbdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In other implementations of Python, this type may be identical to &lt;code&gt;GetSetDescriptorType&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 다른 Python 구현에서이 유형은 &lt;code&gt;GetSetDescriptorType&lt;/code&gt; 과 동일 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9aefb412991d19b792a5700334695c01638933dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Member descriptors are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyMemberDef&quot;&gt;&lt;code&gt;PyMemberDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 멤버 디스크립터는 &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyMemberDef&quot;&gt; &lt;code&gt;PyMemberDef&lt;/code&gt; &lt;/a&gt; 구조 를 통해 확장 모듈에 정의 된 속성 입니다. 이러한 유형이없는 Python 구현의 경우이 메소드는 항상 &lt;code&gt;False&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a0612c40fcbfe9f335351775b0261ecd42beb58d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Member descriptors are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyMemberDef&quot;&gt;&lt;code&gt;PyMemberDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Member descriptors are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyMemberDef&quot;&gt; &lt;code&gt;PyMemberDef&lt;/code&gt; &lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82d3685c4164467992c69ebd0814c395baa7e4d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Other built-in types such as &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; do not support weak references even when subclassed.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 : &lt;/strong&gt;&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 와 같은 기타 내장 유형 은 서브 클래 싱 된 경우에도 약한 참조를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1ca8126205676d59efc9a11dc0a2e61fbacf3b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Prior to version 3.4, extension modules written in C were not fully searched by doctest.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 버전 3.4 이전에는 C로 작성된 확장 모듈이 doctest에서 완전히 검색되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="15454e67e258b779957990665d8a28f3a0aed3f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Some common encodings can bypass the codecs lookup machinery to improve performance. These optimization opportunities are only recognized by CPython for a limited set of (case insensitive) aliases: utf-8, utf8, latin-1, latin1, iso-8859-1, iso8859-1, mbcs (Windows only), ascii, us-ascii, utf-16, utf16, utf-32, utf32, and the same using underscores instead of dashes. Using alternative aliases for these encodings may result in slower execution.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 일부 공통 인코딩은 코덱 검색 메커니즘을 우회하여 성능을 향상시킬 수 있습니다. 이러한 최적화 기회는 CPython에서만 제한된 (대소 문자 구분) 별명 세트 (utf-8, utf8, latin-1, latin1, iso-8859-1, iso8859-1, mbcs (Windows 만 해당), ascii, us)에 대해서만 인식됩니다. -ascii, utf-16, utf16, utf-32, utf32 및 대시 대신 밑줄을 사용합니다. 이러한 인코딩에 대체 별명을 사용하면 실행 속도가 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd4faa3b5c440817e8250d12c84912151e2a2eec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#module-math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt; module consists mostly of thin wrappers around the platform C math library functions. Behavior in exceptional cases follows Annex F of the C99 standard where appropriate. The current implementation will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; for invalid operations like &lt;code&gt;sqrt(-1.0)&lt;/code&gt; or &lt;code&gt;log(0.0)&lt;/code&gt; (where C99 Annex F recommends signaling invalid operation or divide-by-zero), and &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; for results that overflow (for example, &lt;code&gt;exp(1000.0)&lt;/code&gt;). A NaN will not be returned from any of the functions above unless one or more of the input arguments was a NaN; in that case, most functions will return a NaN, but (again following C99 Annex F) there are some exceptions to this rule, for example &lt;code&gt;pow(float('nan'), 0.0)&lt;/code&gt; or &lt;code&gt;hypot(float('nan'), float('inf'))&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython의 구현 세부 사항 : &lt;/strong&gt;&lt;a href=&quot;#module-math&quot;&gt; &lt;code&gt;math&lt;/code&gt; &lt;/a&gt; 모듈은 주로 플랫폼 C 수학 라이브러리 함수 주위에 얇은 래퍼로 구성되어 있습니다. 예외적 인 경우의 행동은 적절한 경우 C99 표준의 부록 F를 따릅니다. 올릴 현재 구현 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 같은 잘못된 작업 &lt;code&gt;sqrt(-1.0)&lt;/code&gt; 또는 &lt;code&gt;log(0.0)&lt;/code&gt; (C99 부록 F가 잘못된 연산이나 제산 제로 신호 권장 임) 및 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 결과 오버 플로우 (예를 들어, &lt;code&gt;exp(1000.0)&lt;/code&gt; ). 하나 이상의 입력 인수가 NaN이 아니면 NaN은 위의 함수에서 반환되지 않습니다. 이 경우 대부분의 함수는 NaN을 반환하지만 (C99 Annex F 다음에)이 규칙에는 &lt;code&gt;pow(float('nan'), 0.0)&lt;/code&gt; 또는 &lt;code&gt;hypot(float('nan'), float('inf'))&lt;/code&gt; 과 같은 예외가 있습니다 . float ( 'inf')) .</target>
        </trans-unit>
        <trans-unit id="d0f6497d11a911475340dd90e1d30eac485de3d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#sys.gettrace&quot;&gt;&lt;code&gt;gettrace()&lt;/code&gt;&lt;/a&gt; function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations.</source>
          <target state="translated">&lt;strong&gt;CPython의 구현 세부 사항은 : &lt;/strong&gt;&lt;a href=&quot;#sys.gettrace&quot;&gt; &lt;code&gt;gettrace()&lt;/code&gt; &lt;/a&gt; 함수는 같은 디버거, 프로파일 러, 커버리지 도구와 구현을위한 것입니다. 그 동작은 언어 정의의 일부가 아닌 구현 플랫폼의 일부이므로 모든 Python 구현에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6553df4dd7fd16d574c433603a5716df1afc05df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt; function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations.</source>
          <target state="translated">&lt;strong&gt;CPython의 구현 세부 사항은 : &lt;/strong&gt;&lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; &lt;/a&gt; 함수는 같은 디버거, 프로파일 러, 커버리지 도구와 구현을위한 것입니다. 그 동작은 언어 정의의 일부가 아닌 구현 플랫폼의 일부이므로 모든 Python 구현에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="171031c8526a7b267104411039cf364944dadb12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function is specific to CPython. The exact output format is not defined here, and may change.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 기능은 CPython에만 해당됩니다. 정확한 출력 형식은 여기에 정의되어 있지 않으며 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b043433a413f6d75811a7a3a5940b821d4b258a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function relies on Python stack frame support in the interpreter, which isn&amp;rsquo;t guaranteed to exist in all implementations of Python. If running in an implementation without Python stack frame support this function returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 함수는 인터프리터의 Python 스택 프레임 지원에 의존하며, 모든 Python 구현에서 보장되는 것은 아닙니다. Python 스택 프레임 지원없이 구현에서 실행하는 경우이 함수는 &lt;code&gt;None&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="639a23f6bda4deebbdaf26606e402f2fc76087a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function relies on the generator exposing a Python stack frame for introspection, which isn&amp;rsquo;t guaranteed to be the case in all implementations of Python. In such cases, this function will always return an empty dictionary.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 함수는 내성 검사를 위해 Python 스택 프레임을 노출하는 생성기에 의존하며, 이는 모든 Python 구현에서 해당되는 것은 아닙니다. 이 경우이 함수는 항상 빈 사전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="19494722c95838e78a57a0e3c040ecbc1a6e00c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function should be used for internal and specialized purposes only. It is not guaranteed to exist in all implementations of Python.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 함수는 내부 및 특수 목적으로 만 사용해야합니다. 모든 파이썬 구현에 존재한다고 보장되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fe676952ea1a38c3928f6ec6f3da30c17da31b27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is a CPython-specific way of accessing options passed through &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;. Other implementations may export them through other means, or not at all.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이는 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; 를&lt;/a&gt; 통해 전달 된 옵션에 액세스하는 CPython 특정 방법입니다 . 다른 구현은 다른 수단을 통해 또는 전혀 수출하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="059acc3b98be744f512bf9c24d69ff81b979b80f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is a CPython-specific way of accessing options passed through &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;. Other implementations may export them through other means, or not at all.</source>
          <target state="translated">&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is a CPython-specific way of accessing options passed through &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt;. Other implementations may export them through other means, or not at all.</target>
        </trans-unit>
        <trans-unit id="08cf02496d363c6460454d533a2e69d5af6c9bbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is the address of the object in memory.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 메모리에있는 오브젝트의 주소입니다.</target>
        </trans-unit>
        <trans-unit id="74807a63d6553dea1f285bb77c635e9dfebc9489" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This method has a C implementation which is reentrant. That is, a &lt;code&gt;put()&lt;/code&gt; or &lt;code&gt;get()&lt;/code&gt; call can be interrupted by another &lt;code&gt;put()&lt;/code&gt; call in the same thread without deadlocking or corrupting internal state inside the queue. This makes it appropriate for use in destructors such as &lt;code&gt;__del__&lt;/code&gt; methods or &lt;a href=&quot;weakref#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; callbacks.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 메소드에는 재진입 C 구현이 있습니다. 즉, &lt;code&gt;put()&lt;/code&gt; 또는 &lt;code&gt;get()&lt;/code&gt; 호출은 큐 내의 내부 상태를 교착 상태로 만들거나 손상시키지 않고 동일한 스레드에서 다른 &lt;code&gt;put()&lt;/code&gt; 호출 로 중단 될 수 있습니다 . 이것은 &lt;code&gt;__del__&lt;/code&gt; 메소드 또는 &lt;a href=&quot;weakref#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt; 콜백 과 같은 소멸자에 사용하기에 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="f0462914bde9c235949c5990fc70c46de5a9795c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This table is generated from the CPython documentation, and may not represent events raised by other implementations. See your runtime specific documentation for actual events raised.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 이 테이블은 CPython 문서에서 생성되며 다른 구현에서 발생한 이벤트를 나타내지 않을 수 있습니다. 발생한 실제 이벤트에 대해서는 런타임 별 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="50d82d06e79615a9c6d93637b99b6ec40ae8122e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Under some circumstances, &lt;a href=&quot;#statistics.median_grouped&quot;&gt;&lt;code&gt;median_grouped()&lt;/code&gt;&lt;/a&gt; may coerce data points to floats. This behaviour is likely to change in the future.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 일부 상황에서 &lt;a href=&quot;#statistics.median_grouped&quot;&gt; &lt;code&gt;median_grouped()&lt;/code&gt; &lt;/a&gt; 는 데이터 포인트를 부동 소수점으로 강제 할 수 있습니다. 이 동작은 향후에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de16f0520053b3277f6467fabc32453af96115aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; When tracing is enabled (see &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt;), Python hooks are only traced if the callable has a &lt;code&gt;__cantrace__&lt;/code&gt; member that is set to a true value. Otherwise, trace functions will skip the hook.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 추적이 사용 가능한 경우 ( &lt;a href=&quot;#sys.settrace&quot;&gt; &lt;code&gt;settrace()&lt;/code&gt; &lt;/a&gt; 참조 ) 호출 가능에 &lt;code&gt;__cantrace__&lt;/code&gt; 멤버가 true 값으로 설정된 경우에만 Python 후크가 추적됩니다 . 그렇지 않으면 추적 기능이 후크를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="8386faad59f6550022cb9c8b75d87e4d0b9dbb16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; While a list is being sorted, the effect of attempting to mutate, or even inspect, the list is undefined. The C implementation of Python makes the list appear empty for the duration, and raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if it can detect that the list has been mutated during a sort.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; 목록이 정렬되는 동안 목록을 변경하거나 검사하려는 결과는 정의되지 않습니다. Python의 C 구현은 목록이 지속 기간 동안 비어있는 것으로 표시 하고 정렬 중에 목록이 변경되었음을 감지 할 수 있으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="0c38dba2f7064f8f54918fd6a5102d18720d170d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; getsets are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyGetSetDef&quot;&gt;&lt;code&gt;PyGetSetDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython 구현 세부 사항 :&lt;/strong&gt; Getets는 &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyGetSetDef&quot;&gt; &lt;code&gt;PyGetSetDef&lt;/code&gt; &lt;/a&gt; 구조 를 통해 확장 모듈에 정의 된 속성 입니다. 이러한 유형이없는 Python 구현의 경우이 메소드는 항상 &lt;code&gt;False&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="e9bc156880206071e6288f41d9a551262f819c04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; getsets are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyGetSetDef&quot;&gt;&lt;code&gt;PyGetSetDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; getsets are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.9/c-api/structures.html#c.PyGetSetDef&quot;&gt; &lt;code&gt;PyGetSetDef&lt;/code&gt; &lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e34a7d9c5bfc1ede6923268a0fb70b6712f86d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt;&lt;code&gt;len&lt;/code&gt; raises &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; on lengths larger than &lt;a href=&quot;sys#sys.maxsize&quot;&gt;&lt;code&gt;sys.maxsize&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;stdtypes#range&quot;&gt;&lt;code&gt;range(2 ** 100)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; &lt;code&gt;len&lt;/code&gt; raises &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; on lengths larger than &lt;a href=&quot;sys#sys.maxsize&quot;&gt; &lt;code&gt;sys.maxsize&lt;/code&gt; &lt;/a&gt;, such as &lt;a href=&quot;stdtypes#range&quot;&gt; &lt;code&gt;range(2 ** 100)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ac4bf71d4ef8d3042310de66d4b26a5fce288efa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveats:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caveats:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05bbdd1d96c557b1ac257f8af27265190b8470a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Combinatoric iterators:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;조합 반복자 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e98bb1d1362779c48535fb5954531fbeb4203089" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Convenience classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Convenience classes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="adf8b75d3387b14474be95033546a654f5dffef2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Coroutine opcodes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;코 루틴 opcode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28965c7b81253658c8d242174a36d16862180e18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not import this module directly.&lt;/strong&gt; Instead, import the module &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;, which provides a &lt;em&gt;portable&lt;/em&gt; version of this interface. On Unix, the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module provides a superset of the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; interface. On non-Unix operating systems the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; module is not available, but a subset is always available through the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; interface. Once &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; is imported, there is &lt;em&gt;no&lt;/em&gt; performance penalty in using it instead of &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt;. In addition, &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; provides some additional functionality, such as automatically calling &lt;a href=&quot;os#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; when an entry in &lt;code&gt;os.environ&lt;/code&gt; is changed.</source>
          <target state="translated">&lt;strong&gt;이 모듈을 직접 가져 오지 마십시오. &lt;/strong&gt;대신 이 인터페이스 의 &lt;em&gt;이식 가능한&lt;/em&gt; 버전 을 제공하는 모듈 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; 를&lt;/a&gt; 가져 오십시오 . Unix에서 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 모듈은 &lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt; 인터페이스 의 상위 세트를 제공합니다 . Unix 이외의 운영 체제에서는 &lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수 없지만 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 인터페이스를 통해 서브 세트를 항상 사용할 수 있습니다. &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 를 가져온 후에 는 &lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt; 대신 사용시 성능 저하 가 &lt;em&gt;없습니다&lt;/em&gt; . 또한 &lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;os.environ&lt;/code&gt; 에 항목을 입력 할 때 자동으로 &lt;a href=&quot;os#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt; 호출과 같은 추가 기능을 제공합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="5c3d140c8e464f134cec3b0eebd38bf683f55d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd3f9dd8c7ca024000e95c26bbda044b48526f40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Facilities&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Facilities&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ca59162910af234b26740c0c419b5e64fbfdcf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General instructions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;일반 지침&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b026bf538c6a0c54c54f758482fdffe0f2974ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Context Variables should be created at the top module level and never in closures. &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; objects hold strong references to context variables which prevents context variables from being properly garbage collected.</source>
          <target state="translated">&lt;strong&gt;중요 사항 :&lt;/strong&gt; 컨텍스트 변수는 최상위 모듈 레벨에서 작성해야하며 닫히지 않아야합니다. &lt;a href=&quot;#contextvars.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 객체는 컨텍스트 변수가 제대로 가비지 수집되지 않도록하는 컨텍스트 변수에 대한 강력한 참조를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="294bdae65d01132af01390d8aee686901798a957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In-place operations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;전체 작업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cb14015dd2ba90242d34d81de5b2808be579f40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infinite iterators:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;무한 반복자 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6d61c8282e9a1763ffa62336b95d332852cd8da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Information message box&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Information message box&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0fa53bd5dcf55512438559763e613b8fe2cec580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterators terminating on the shortest input sequence:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;가장 짧은 입력 시퀀스에서 종료되는 반복자 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b44a2e3c83f7503f4a8bb5a2c6739a2e8fb0283" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Miscellaneous opcodes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기타 opcode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbaa14a9a5b2357a05d29766739c056528e6fbfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The functions registered via this module are not called when the program is killed by a signal not handled by Python, when a Python fatal internal error is detected, or when &lt;a href=&quot;os#os._exit&quot;&gt;&lt;code&gt;os._exit()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 모듈을 통해 등록 된 함수는 프로그램이 Python에 의해 처리되지 않은 신호에 의해 &lt;a href=&quot;os#os._exit&quot;&gt; &lt;code&gt;os._exit()&lt;/code&gt; &lt;/a&gt; 되거나 Python 치명적인 내부 오류가 감지되거나 os._exit () 가 호출 될 때 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09b11c8f8527518e026032bb5e1d3d725b5c07f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Column #0 always refers to the tree column, even if show=&amp;rdquo;tree&amp;rdquo; is not specified.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : show =&amp;rdquo;tree&amp;rdquo;가 지정되지 않은 경우에도 # 0 열은 항상 트리 열을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="37e2f186da33f2e2f1480ad645fec1a9ea56dc52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional in-place filtering:&lt;/strong&gt; if the keyword argument &lt;code&gt;inplace=True&lt;/code&gt; is passed to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;fileinput.input()&lt;/code&gt;&lt;/a&gt; or to the &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; constructor, the file is moved to a backup file and standard output is directed to the input file (if a file of the same name as the backup file already exists, it will be replaced silently). This makes it possible to write a filter that rewrites its input file in place. If the &lt;em&gt;backup&lt;/em&gt; parameter is given (typically as &lt;code&gt;backup='.&amp;lt;some extension&amp;gt;'&lt;/code&gt;), it specifies the extension for the backup file, and the backup file remains around; by default, the extension is &lt;code&gt;'.bak'&lt;/code&gt; and it is deleted when the output file is closed. In-place filtering is disabled when standard input is read.</source>
          <target state="translated">&lt;strong&gt;선택적인 내부 필터링 :&lt;/strong&gt; 키워드 &lt;code&gt;inplace=True&lt;/code&gt; 가 &lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;fileinput.input()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt; 생성자로 전달되면 파일이 백업 파일로 이동되고 표준 출력이 입력 파일 (파일이 백업 파일과 같은 이름이 이미 존재하면 자동으로 교체됩니다. 이를 통해 입력 파일을 다시 쓰는 필터를 작성할 수 있습니다. &lt;em&gt;backup&lt;/em&gt; 매개 변수가 제공 되면 (일반적으로 &lt;code&gt;backup='.&amp;lt;some extension&amp;gt;'&lt;/code&gt; ) 백업 파일의 확장자를 지정하고 백업 파일은 그대로 남아 있습니다. 기본적으로 확장자는 &lt;code&gt;'.bak'&lt;/code&gt; 입니다.출력 파일이 닫히면 삭제됩니다. 표준 입력을 읽으면 내부 필터링이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="9755fc4e4b399ef70352037e1dea62605875423d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 235&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 235&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="505437942a34d6f3f8da1ade35532a2bf34ab583" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 263&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 263&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2fba048de7e9e870c91689be2bfe36747d8d2ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 302&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 302&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c9b54ac605b3df692e9ae6fa6d6ef22c0c03414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 3120&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 3120&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76b0be36183407d2999977660fae12cae84f27d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 3147&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 3147&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a07a10139d05155fd0bb133d283324353bd308d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 328&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 328&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2419327fdce81995cd9f1a2e6d0bb4e937c084f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 366&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 366&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2eca0ecb92c6596e9a6332cbb8c17dd58f2d34f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 420&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 420&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47fec51973f7524c859d90b0e2563cade1ff961c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 451&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 451&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f62a6cbf717ac5016c38f0c51ff5d132a5ce4eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 488&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 488&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4128d24126dcd672f5ae21550fead189add72cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 489&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 489&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67601f5a339b0307f184824480cf1304c2b0d374" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 506&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 506&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="863bab90498379c28f6e98e0a2b308c0bd5c82df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 552&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PEP 552&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29ed9fbcbd43a7ad302e13dd3274bdc3908b9020" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pipes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Pipes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9c1a2552358e056d8b75644338993b63d73fc05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Priorities&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Priorities&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13032db943ccf2f5bc6bc2d8281e28a44204b1aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question message boxes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Question message boxes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6706067083d966ce401707005631a2a8916e7fe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Queues&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Queues&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80444cf823830354956441795d1cd425dafb4e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 1422: Privacy Enhancement for Internet Electronic Mail: Part II: Certificate-Based Key Management&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 1422 : 인터넷 전자 메일의 개인 정보 향상 : 2 부 : 인증서 기반 키 관리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="047e4ba5cb23c1a5cbb89583194894c03c718b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 4086: Randomness Requirements for Security&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 4086 : 보안에 대한 임의성 요구 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="684b5b5f11bbd83abed1ff460d58d36bd8756df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 5246: The Transport Layer Security (TLS) Protocol Version 1.2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 5246 : TLS (Transport Layer Security) 프로토콜 버전 1.2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="857c4ce645c7bde5770e18429f54051f80b1d718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 5280 : 인터넷 X.509 공개 키 인프라 인증서 및 인증서 해지 목록 (CRL) 프로필&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="825361ff2d40c1a75232dae516063a700b4f23ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 6066: Transport Layer Security (TLS) Extensions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 6066 : TLS (Transport Layer Security) 확장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41a77ceffb3e6e51b21d098649cd0e0d8e7030f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 7525: Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC 7525 : TLS (Transport Layer Security) 및 DTLS (Datagram Transport Layer Security)의 안전한 사용을위한 권장 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="799a693b93c6aaa443f835ddf216413e5f8bba8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLv2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSLv2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c26b36ff1a4674ddf17ede2b23340d0787f4468c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLv3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSLv3&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d41c414e5f7d5a6dd6fdfa9b8d8f4f78edf0d9b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server process&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;서버 프로세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f795eea167a8134da9a074aad2013cac188482e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shared memory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공유 메모리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9e9d804a4631f03d4e5a0278b1e2f22b4ca91a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/__future__.py&quot;&gt;Lib/__future__.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/__future__.py&quot;&gt;Lib / __ future__.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42c8d6b31630ea9c73c8406d8d3bb42a1a335d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_collections_abc.py&quot;&gt;Lib/_collections_abc.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_collections_abc.py&quot;&gt;Lib / _collections_abc.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ba5d83d4e1746a06edc522c87c60030ecbafbbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_dummy_thread.py&quot;&gt;Lib/_dummy_thread.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_dummy_thread.py&quot;&gt;Lib / _dummy_thread.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63b4642a018b041f7afd673bfc649c2ad20d80d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/abc.py&quot;&gt;Lib/abc.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/abc.py&quot;&gt;Lib / abc.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fb93f6d932c2d7f972bfb19a431c3d9688aacb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/aifc.py&quot;&gt;Lib/aifc.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/aifc.py&quot;&gt;Lib / aifc.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00e0d3bc7312aa6f65b9991a35d88a4e47c7ac29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/argparse.py&quot;&gt;Lib/argparse.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/argparse.py&quot;&gt;Lib / argparse.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="065a09107ace218e31d50930195bf303f70332ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ast.py&quot;&gt;Lib/ast.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ast.py&quot;&gt;Lib / ast.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf7b75c42ee72e1a453d91a408c581dded43efec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asynchat.py&quot;&gt;Lib/asynchat.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asynchat.py&quot;&gt;Lib / asynchat.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a8a120d1b5249c9e5415e688f39e38bcc266bf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/events.py&quot;&gt;Lib/asyncio/events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/events.py&quot;&gt;Lib / asyncio / events.py&lt;/a&gt; , &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib / asyncio / base_events.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cfc716633c82085801f067328a8e1c63e0874a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/exceptions.py&quot;&gt;Lib/asyncio/exceptions.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/exceptions.py&quot;&gt;Lib / asyncio / exceptions.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21bb4db21bf62d1f099ad01723b9ecb4cf4a5ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/futures.py&quot;&gt;Lib/asyncio/futures.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_futures.py&quot;&gt;Lib/asyncio/base_futures.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/futures.py&quot;&gt;Lib / asyncio / futures.py&lt;/a&gt; , &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_futures.py&quot;&gt;Lib / asyncio / base_futures.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d603b1a6fda1d5313eb25eb64af4e7275dc2520d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/locks.py&quot;&gt;Lib/asyncio/locks.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/locks.py&quot;&gt;Lib / asyncio / locks.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="123850d49475233ec797997704c50588d2f42d9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/proactor_events.py&quot;&gt;Lib/asyncio/proactor_events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_events.py&quot;&gt;Lib/asyncio/windows_events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_utils.py&quot;&gt;Lib/asyncio/windows_utils.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/proactor_events.py&quot;&gt;Lib / asyncio / proactor_events.py&lt;/a&gt; , &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_events.py&quot;&gt;Lib / asyncio / windows_events.py&lt;/a&gt; , &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_utils.py&quot;&gt;Lib / asyncio / windows_utils.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52fdd52910fcf44d8685e5806c23073c65713e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/protocols.py&quot;&gt;Lib/asyncio/protocols.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/protocols.py&quot;&gt;Lib / asyncio / protocols.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcaa0aa920b3d1d7dae693179a05a1695cfc3f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/queues.py&quot;&gt;Lib/asyncio/queues.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/queues.py&quot;&gt;Lib / asyncio / queues.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5058dbcad110d1d9c62ce97765e1053280ae2dc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/streams.py&quot;&gt;Lib/asyncio/streams.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/streams.py&quot;&gt;Lib / asyncio / streams.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19dfb42babc4c839166c12efe162594c6cfb45a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/subprocess.py&quot;&gt;Lib/asyncio/subprocess.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_subprocess.py&quot;&gt;Lib/asyncio/base_subprocess.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/subprocess.py&quot;&gt;Lib / asyncio / subprocess.py&lt;/a&gt; , &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_subprocess.py&quot;&gt;Lib / asyncio / base_subprocess.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeae49ec82718dbd3edb21b5eb9d00820247550c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/transports.py&quot;&gt;Lib/asyncio/transports.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/transports.py&quot;&gt;Lib / asyncio / transports.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0e75575fe09d022332ec018126a18624ea5c80b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncore.py&quot;&gt;Lib/asyncore.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncore.py&quot;&gt;Lib / asyncore.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc388b572aa810b42afe8f07d2bd60b976f11a36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/base64.py&quot;&gt;Lib/base64.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/base64.py&quot;&gt;Lib / base64.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e3b41e6517a41340e2b75fe440c4e3d1cfeea03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bdb.py&quot;&gt;Lib/bdb.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bdb.py&quot;&gt;Lib / bdb.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b1fdc144fb2b409f0affa2f6d6172b9a8d2f16a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/binhex.py&quot;&gt;Lib/binhex.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/binhex.py&quot;&gt;Lib / binhex.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3a36846267fd2d13ef80d8b497b30d233998a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bisect.py&quot;&gt;Lib/bisect.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bisect.py&quot;&gt;Lib / bisect.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d11bc824c08682acdd000cc4fe3dde10170c0c7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bz2.py&quot;&gt;Lib/bz2.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bz2.py&quot;&gt;Lib / bz2.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0c781082220a5a06c38354b7916c73bc7b6c5d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/calendar.py&quot;&gt;Lib/calendar.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/calendar.py&quot;&gt;Lib / calendar.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e001d2066a4d477d896a094a49918510d714e311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgi.py&quot;&gt;Lib/cgi.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgi.py&quot;&gt;Lib / cgi.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0126b70de7bb61ac0ceff36a547f3ac0b4460ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgitb.py&quot;&gt;Lib/cgitb.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgitb.py&quot;&gt;Lib / cgitb.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95d4e9fb9346d6b03824afe45275a258f09b6180" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/chunk.py&quot;&gt;Lib/chunk.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/chunk.py&quot;&gt;Lib / chunk.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0633ea1f461f22cc41abc7d834122fddaa270a3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cmd.py&quot;&gt;Lib/cmd.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cmd.py&quot;&gt;Lib / cmd.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e998f4ff5a40eadd9c4e5d2177933fda162cf195" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/code.py&quot;&gt;Lib/code.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/code.py&quot;&gt;Lib / code.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="990fedeee722db7a0229bf55bc8dd63118394f67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codecs.py&quot;&gt;Lib/codecs.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codecs.py&quot;&gt;Lib / codecs.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d154bd9cde237875cb9c1e75b9e0e971d38bcd87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codeop.py&quot;&gt;Lib/codeop.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codeop.py&quot;&gt;Lib / codeop.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b95f118ae5c824c1d34e987c9b226e1a2050282" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/collections/__init__.py&quot;&gt;Lib/collections/__init__.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/collections/__init__.py&quot;&gt;Lib / collections / __ init__.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9941807569e23afba496b3e5e7735dfc4206bb80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/colorsys.py&quot;&gt;Lib/colorsys.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/colorsys.py&quot;&gt;Lib / colorsys.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b57a92d4d1e7d1bd198a3bc5aa5ad2467cd5eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/compileall.py&quot;&gt;Lib/compileall.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/compileall.py&quot;&gt;Lib / compileall.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b8c252f06ede6a6a7b5fe646d1cebbf6e987b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/thread.py&quot;&gt;Lib/concurrent/futures/thread.py&lt;/a&gt; and &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/process.py&quot;&gt;Lib/concurrent/futures/process.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/thread.py&quot;&gt;Lib / concurrent / futures / thread.py&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/process.py&quot;&gt;Lib / concurrent / futures / process.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61abb13f6374fefca94b291619e048ddf396668d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/configparser.py&quot;&gt;Lib/configparser.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/configparser.py&quot;&gt;Lib / configparser.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0df11d6ba6dd1b4474ef2a2c96ff070792c72e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/contextlib.py&quot;&gt;Lib/contextlib.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/contextlib.py&quot;&gt;Lib / contextlib.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed92b1a54f3a793321252c8338f4154ace957792" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copy.py&quot;&gt;Lib/copy.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copy.py&quot;&gt;Lib / copy.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb854659fccc36aed26e71527664acb1dc082b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copyreg.py&quot;&gt;Lib/copyreg.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copyreg.py&quot;&gt;Lib / copyreg.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70a155e5210ac0b48a2e5c9319aa3e74d3118319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/crypt.py&quot;&gt;Lib/crypt.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/crypt.py&quot;&gt;Lib / crypt.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="892aaf02accbbd38f807e76d974ff129937beb01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/csv.py&quot;&gt;Lib/csv.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/csv.py&quot;&gt;Lib / csv.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="856915874ca0cc6987791403d92ab3949cf87f17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dataclasses.py&quot;&gt;Lib/dataclasses.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dataclasses.py&quot;&gt;Lib / dataclasses.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b226da9dfcd8433ab010ad109d51bdb86dbcb25a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/datetime.py&quot;&gt;Lib/datetime.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/datetime.py&quot;&gt;Lib / datetime.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a1a7fc2a98c72dcdc6fad94de588088fb4a644d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/__init__.py&quot;&gt;Lib/dbm/__init__.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/__init__.py&quot;&gt;Lib / dbm / __ init__.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7fb130990a09843aa0d3dbcaf105e28fee98ae1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/dumb.py&quot;&gt;Lib/dbm/dumb.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/dumb.py&quot;&gt;Lib / dbm / dumb.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ce5ebe1d29d6eb5cb4280a1593359663f1849e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/gnu.py&quot;&gt;Lib/dbm/gnu.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/gnu.py&quot;&gt;Lib / dbm / gnu.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b046903cf0f44fbbe12b0d9740fd29ca6c89e166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/ndbm.py&quot;&gt;Lib/dbm/ndbm.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/ndbm.py&quot;&gt;Lib / dbm / ndbm.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="591895fdd04fa9854d84881fa0623d93fe0361df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/decimal.py&quot;&gt;Lib/decimal.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/decimal.py&quot;&gt;Lib / decimal.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e27a221130d592913d1c6c72370507cb049a53c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/difflib.py&quot;&gt;Lib/difflib.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/difflib.py&quot;&gt;Lib / difflib.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2148453f6f6524a7d9ba273244f2ad3d35f1900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dis.py&quot;&gt;Lib/dis.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dis.py&quot;&gt;Lib / dis.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a98568e5436ed9bfd3ee513cafcde88e3bd2c996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/doctest.py&quot;&gt;Lib/doctest.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/doctest.py&quot;&gt;Lib / doctest.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ca85feb077a8bba390a68950fc083ac9b016765" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dummy_threading.py&quot;&gt;Lib/dummy_threading.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dummy_threading.py&quot;&gt;Lib / dummy_threading.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a77c388106c0360b4f2b80b4d0f4fc3d8e053ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/__init__.py&quot;&gt;Lib/email/__init__.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/__init__.py&quot;&gt;Lib / email / __ init__.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b609ac7020759075ae186e2298cdd2a404cc7146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/charset.py&quot;&gt;Lib/email/charset.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/charset.py&quot;&gt;Lib / email / charset.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fe4d6b2d583df5e79d89293832e97eec97f79f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/contentmanager.py&quot;&gt;Lib/email/contentmanager.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/contentmanager.py&quot;&gt;Lib / email / contentmanager.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fcfe94c530f186e5f0c3207cd510372ae4ac688" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/encoders.py&quot;&gt;Lib/email/encoders.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/encoders.py&quot;&gt;Lib / email / encoders.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9ed540414ae2835f165164526280c181d497d72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/errors.py&quot;&gt;Lib/email/errors.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/errors.py&quot;&gt;Lib / email / errors.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02f4183fd4b30a102297e52b5afdd90afae382ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/generator.py&quot;&gt;Lib/email/generator.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/generator.py&quot;&gt;Lib / email / generator.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edaaadf0f4871296a7545d27686eb474c3dfcf7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/header.py&quot;&gt;Lib/email/header.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/header.py&quot;&gt;Lib / email / header.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e4ec5ff0da5cdf86a6fa1ad3959b9cd43088be2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/headerregistry.py&quot;&gt;Lib/email/headerregistry.py&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;소스 코드 : &lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/headerregistry.py&quot;&gt;Lib / email / headerregistry.py&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
