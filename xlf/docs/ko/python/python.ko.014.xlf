<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="40d076e54c14795bf1009ae955624fb9ee075980" translate="yes" xml:space="preserve">
          <source>It is set for &lt;code&gt;SELECT&lt;/code&gt; statements without any matching rows as well.</source>
          <target state="translated">일치하는 행이없는 &lt;code&gt;SELECT&lt;/code&gt; 문에도 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="e4892c14dd8e03e95f7b9a46c2b927e82c3de81e" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t change the bytecode counter nor raise an exception. Used for implementing &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 바이트 코드 카운터를 변경하거나 예외를 발생시키지 않습니다. 구현에 사용 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; 블록.</target>
        </trans-unit>
        <trans-unit id="42d9754d1dda336bfe25a9c6e63c2992d8307a7e" translate="yes" xml:space="preserve">
          <source>It is straightforward to create an ordered dictionary variant that remembers the order the keys were &lt;em&gt;last&lt;/em&gt; inserted. If a new entry overwrites an existing entry, the original insertion position is changed and moved to the end:</source>
          <target state="translated">키가 &lt;em&gt;마지막으로&lt;/em&gt; 삽입 된 순서를 기억하는 정렬 된 사전 변형을 작성하는 것은 간단합니다 . 새 항목이 기존 항목을 덮어 쓰면 원래 삽입 위치가 변경되고 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b290678be018032e40bcd30baa36d13bcef66f17" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;쉘 삽입&lt;/a&gt; 취약점 을 피하기 위해 모든 공백과 특수 문자가 적절하게 인용되도록하는 것은 응용 프로그램의 책임 입니다. &lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt; 기능이 제대로 구조 쉘 명령에 사용하려고하는 문자열의 공백 및 특수 문자를 이스케이프하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83308bc4ef3c9f055207277d114b19f86e753316" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special shell characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;쉘 삽입&lt;/a&gt; 취약점 을 피하기 위해 모든 공백과 특수 문자가 적절하게 인용되도록하는 것은 응용 프로그램의 책임 입니다. &lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt; 기능이 제대로 구조 쉘 명령에 사용하려고하는 문자열의 공백 및 특수 쉘 문자를 이스케이프하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba77524bde6cf6c11d179f96eb65e17908025854" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;Ellipsis&lt;/code&gt; or &lt;code&gt;...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ellipsis&lt;/code&gt; 또는 &lt;code&gt;...&lt;/code&gt; 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c82f78122d7edace8ca573121d93f7a6333cafc" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 으로 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a8ce0b24fe78f15c89a4a9c4becf84652288522" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;NotImplemented&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NotImplemented&lt;/code&gt; 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="841555ab84a821d8592d3ba16982eb976c179de0" translate="yes" xml:space="preserve">
          <source>It makes it clear that the &lt;code&gt;cm&lt;/code&gt; applies to the whole function, rather than just a piece of it (and saving an indentation level is nice, too).</source>
          <target state="translated">&lt;code&gt;cm&lt;/code&gt; 이 기능의 일부가 아니라 전체 기능에 적용 된다는 것을 분명히 합니다 (그리고 들여 쓰기 수준을 저장하는 것도 좋습니다).</target>
        </trans-unit>
        <trans-unit id="73f114d3bbc30556ce94eba580337d50515cee5f" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;a href=&quot;#signal.SIGFPE&quot;&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.SIGSEGV&quot;&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/a&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">It makes little sense to catch synchronous errors like &lt;a href=&quot;#signal.SIGFPE&quot;&gt; &lt;code&gt;SIGFPE&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#signal.SIGSEGV&quot;&gt; &lt;code&gt;SIGSEGV&lt;/code&gt; &lt;/a&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt; module to report on synchronous errors.</target>
        </trans-unit>
        <trans-unit id="cceaba8129fdd9cb6ff7d523e835d1be2a3900bb" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;code&gt;SIGFPE&lt;/code&gt; or &lt;code&gt;SIGSEGV&lt;/code&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">C 코드에서 유효하지 않은 조작으로 인한 &lt;code&gt;SIGFPE&lt;/code&gt; 또는 &lt;code&gt;SIGSEGV&lt;/code&gt; 와 같은 동기 오류를 잡는 것은 의미가 없습니다. 파이썬은 신호 처리기에서 C 코드로 돌아 오는데, 같은 신호를 다시 발생 시켜서 파이썬이 멈출 것입니다. Python 3.3부터는 오류 &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 동기 오류를보고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38e76705e1c36e7060b372d7e192caca143da51c" translate="yes" xml:space="preserve">
          <source>It may also be useful to have an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; assign attributes to an already existing object, rather than a new &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object. This can be achieved by specifying the &lt;code&gt;namespace=&lt;/code&gt; keyword argument:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 가 새로운 &lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 객체가 아닌 기존 객체에 속성을 할당하도록하는 것도 유용 할 수 있습니다 . &lt;code&gt;namespace=&lt;/code&gt; 키워드 인수를 지정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="fba1d56f7a7c046d3fc4bbe63e3336e206c6db2d" translate="yes" xml:space="preserve">
          <source>It may be preferable to simply create the barrier with a sensible &lt;em&gt;timeout&lt;/em&gt; value to automatically guard against one of the threads going awry.</source>
          <target state="translated">스레드 중 하나가 잘못 진행되는 것을 자동으로 막기 위해 적절한 &lt;em&gt;시간 초과&lt;/em&gt; 값으로 장벽을 만드는 것이 바람직 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b07ba6ca89cd1aae3cc72549392d22b75675e8e" translate="yes" xml:space="preserve">
          <source>It may not be obvious how to break a shell command into a sequence of arguments, especially in complex cases. &lt;a href=&quot;shlex#shlex.split&quot;&gt;&lt;code&gt;shlex.split()&lt;/code&gt;&lt;/a&gt; can illustrate how to determine the correct tokenization for &lt;em&gt;args&lt;/em&gt;:</source>
          <target state="translated">It may not be obvious how to break a shell command into a sequence of arguments, especially in complex cases. &lt;a href=&quot;shlex#shlex.split&quot;&gt; &lt;code&gt;shlex.split()&lt;/code&gt; &lt;/a&gt; can illustrate how to determine the correct tokenization for &lt;em&gt;args&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="ed6a077b4756775b9b29b2ea1e03ac9d700dfd8e" translate="yes" xml:space="preserve">
          <source>It must be called at most once per thread object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate thread of control.</source>
          <target state="translated">스레드 오브젝트 당 최대 한 번 호출되어야합니다. 객체의 &lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 메소드가 별도의 제어 스레드에서 호출 되도록 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="daad8dfada880cb31549425a5ec3431b9222657b" translate="yes" xml:space="preserve">
          <source>It returns bytes, encoded using the &lt;a href=&quot;token#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; token, which is the first token sequence output by &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;. If there is no encoding token in the input, it returns a str instead.</source>
          <target state="translated">&lt;a href=&quot;token#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt; 토큰을 사용하여 인코딩 된 바이트를 반환 하는데, 이는 &lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt; 의해 출력되는 첫 번째 토큰 시퀀스 입니다. 입력에 인코딩 토큰이 없으면 대신 str을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a8e3c74f6ede201d039fbecf6218111d0e334740" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">모든 점프가 허용되는 것은 아닙니다. 예를 들어 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; 루프 의 중간으로 들어가 거나 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; 절에서 벗어날 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2937b0e1593f0a67d3bf89f808ac34f1723db7c8" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; clause.</target>
        </trans-unit>
        <trans-unit id="d00162c40ad44bcc91c01b39dbf4174206720406" translate="yes" xml:space="preserve">
          <source>It should not be used to indicate that an operator or method is not meant to be supported at all &amp;ndash; in that case either leave the operator / method undefined or, if a subclass, set it to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연산자 또는 메소드가 전혀 지원되지 않음을 표시하는 데 사용해서는 안됩니다.이 경우 연산자 / 메소드를 정의되지 않은 상태로 두거나 서브 클래스 인 경우이를 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ded5b6e9599dd1f5438c1647424ab89dfd2b577" translate="yes" xml:space="preserve">
          <source>It should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; 를&lt;/a&gt; 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="726e6dfbe6b42488d80277b74ab1981ea0eb48c8" translate="yes" xml:space="preserve">
          <source>It starts by constructing up to four directories from a head and a tail part. For the head part, it uses &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt;; empty heads are skipped. For the tail part, it uses the empty string and then &lt;code&gt;lib/site-packages&lt;/code&gt; (on Windows) or &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; (on Unix and Macintosh). For each of the distinct head-tail combinations, it sees if it refers to an existing directory, and if so, adds it to &lt;code&gt;sys.path&lt;/code&gt; and also inspects the newly added path for configuration files.</source>
          <target state="translated">머리와 꼬리 부분에서 최대 4 개의 디렉토리를 구성하는 것으로 시작합니다. 헤드 부분의 경우 &lt;code&gt;sys.prefix&lt;/code&gt; 및 &lt;code&gt;sys.exec_prefix&lt;/code&gt; 를 사용합니다 . 빈 머리는 건너 뜁니다. 꼬리 부분의 경우 빈 문자열을 사용한 다음 &lt;code&gt;lib/site-packages&lt;/code&gt; (Windows) 또는 &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; (Unix 및 Macintosh)를 사용합니다. 고유 한 헤드-테일 조합 각각에 대해 기존 디렉토리를 참조하는지 확인하고, 그렇다면 디렉토리를 &lt;code&gt;sys.path&lt;/code&gt; 에 추가하고 새로 추가 된 경로에 구성 파일을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="60e34e8fb6e7795d3b1478935c49f2271750a6ed" translate="yes" xml:space="preserve">
          <source>It supports mapping access by column name and index, iteration, representation, equality testing and &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">열 이름 및 색인, 반복, 표시, 동등성 테스트 및 &lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt; 별로 맵핑 액세스를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="8ef92e73f369396214e54307628eb69b792a4bbe" translate="yes" xml:space="preserve">
          <source>It tries to keep the merits of the old turtle module and to be (nearly) 100% compatible with it. This means in the first place to enable the learning programmer to use all the commands, classes and methods interactively when using the module from within IDLE run with the &lt;code&gt;-n&lt;/code&gt; switch.</source>
          <target state="translated">그것은 오래된 거북이 모듈의 장점을 유지하고 (거의) 100 % 호환되도록 노력합니다. 이것은 학습 프로그래머가 IDLE 내에서 &lt;code&gt;-n&lt;/code&gt; 스위치로 실행하여 모듈을 사용할 때 모든 명령, 클래스 및 메소드를 대화식으로 사용할 수있게하는 것을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="5596437c51c08dd529f0316d43b2b71c787f8abe" translate="yes" xml:space="preserve">
          <source>It uses core algorithm from &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt; cipher designed by &lt;em&gt;Daniel J. Bernstein&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Daniel J. Bernstein이&lt;/em&gt; 디자인 한 &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt; 암호의 핵심 알고리즘을 사용합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3aba2968f744adcc41a20aa7e792d5ccd239a3f" translate="yes" xml:space="preserve">
          <source>It will also ignore the module name used in Python 3 doctest reports. Hence both of these variations will work with the flag specified, regardless of whether the test is run under Python 2.7 or Python 3.2 (or later versions):</source>
          <target state="translated">또한 Python 3 doctest 보고서에 사용 된 모듈 이름은 무시합니다. 따라서 테스트가 Python 2.7 또는 Python 3.2 (또는 이후 버전)에서 실행되는지 여부에 관계없이 이러한 변형은 모두 지정된 플래그와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="66a19358efe30907a9def33ebebbf43009608227" translate="yes" xml:space="preserve">
          <source>It will be called to process server continuation responses; the &lt;em&gt;response&lt;/em&gt; argument it is passed will be &lt;code&gt;bytes&lt;/code&gt;. It should return &lt;code&gt;bytes&lt;/code&gt;&lt;em&gt;data&lt;/em&gt; that will be base64 encoded and sent to the server. It should return &lt;code&gt;None&lt;/code&gt; if the client abort response &lt;code&gt;*&lt;/code&gt; should be sent instead.</source>
          <target state="translated">서버 연속 응답을 처리하기 위해 호출됩니다. 전달 되는 &lt;em&gt;응답&lt;/em&gt; 인수는 &lt;code&gt;bytes&lt;/code&gt; 입니다. base64로 인코딩되어 서버로 전송 될 &lt;code&gt;bytes&lt;/code&gt; &lt;em&gt;데이터&lt;/em&gt; 를 리턴해야 합니다. 클라이언트 중단 응답 &lt;code&gt;*&lt;/code&gt; 을 대신 보내야하는 경우 &lt;code&gt;None&lt;/code&gt; 을 반환 해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b1ff9842d9447462c9c388a1d83d9a69c4059c5" translate="yes" xml:space="preserve">
          <source>It will call readline a maximum of twice, and return the encoding used (as a string) and a list of any lines (not decoded from bytes) it has read in.</source>
          <target state="translated">readline을 최대 두 번 호출하고 사용 된 인코딩 (문자열)과 읽은 모든 행 목록 (바이트에서 디코딩되지 않음)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e412de0ab51fcff0e7d659b968642619518d0a22" translate="yes" xml:space="preserve">
          <source>It works reliably even when the asyncio event loop is run in a non-main OS thread.</source>
          <target state="translated">asyncio 이벤트 루프가 기본이 아닌 OS 스레드에서 실행될 때에도 안정적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="318fb7d25f2176c7734d91b6446e33df1e3f8f6a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to roll your own skipping decorators by making a decorator that calls &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt; on the test when it wants it to be skipped. This decorator skips the test unless the passed object has a certain attribute:</source>
          <target state="translated">건너 뛰기를 원할 때 테스트에서 &lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt; 을 호출하는 데코레이터를 만들어 자신 만의 건너 뛰기 데코레이터를 쉽게 굴릴 수 있습니다. 이 데코레이터는 전달 된 객체에 특정 속성이 없으면 테스트를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="cf33e52507dbef8f4d67e44c287b62148de7d34c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to parse empty strings, even if quoted.</source>
          <target state="translated">인용 된 경우에도 빈 문자열을 구문 분석 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e071ef257a84829dddd1b2021f2e352991af9cff" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to loop over every key in the database using this method and the &lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt;&lt;code&gt;nextkey()&lt;/code&gt;&lt;/a&gt; method. The traversal is ordered by &lt;code&gt;gdbm&lt;/code&gt;&amp;rsquo;s internal hash values, and won&amp;rsquo;t be sorted by the key values. This method returns the starting key.</source>
          <target state="translated">이 메소드와 &lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt; &lt;code&gt;nextkey()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 데이터베이스의 모든 키를 반복 할 수 있습니다 . 순회는 &lt;code&gt;gdbm&lt;/code&gt; 의 내부 해시 값으로 정렬되며 키 값으로 정렬되지 않습니다. 이 메소드는 시작 키를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="79cf85d9f5bddaece698e10c86a31d6561698206" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to calculate mean and standard deviation from the result vector and report these. However, this is not very useful. In a typical case, the lowest value gives a lower bound for how fast your machine can run the given code snippet; higher values in the result vector are typically not caused by variability in Python&amp;rsquo;s speed, but by other processes interfering with your timing accuracy. So the &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; of the result is probably the only number you should be interested in. After that, you should look at the entire vector and apply common sense rather than statistics.</source>
          <target state="translated">결과 벡터와의 평균 및 표준 편차를 계산하여보고하려고합니다. 그러나 이것은별로 유용하지 않습니다. 일반적으로 가장 낮은 값은 머신이 주어진 코드 스 니펫을 얼마나 빨리 실행할 수 있는지에 대한 하한을 제공합니다. 결과 벡터에서 더 높은 값은 일반적으로 파이썬 속도의 변동성으로 인한 것이 아니라 타이밍 정확도를 방해하는 다른 프로세스에 의해 발생합니다. 따라서 결과 의 &lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt; 는 아마도 관심을 가질만한 유일한 숫자 일 것입니다. 그 후 전체 벡터를보고 통계보다는 상식을 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2f79319d526f01fcd626f1555ae39d29870b549" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s up to the tool consuming the annotations to decide whether the client is allowed to have several annotations on one type and how to merge those annotations.</source>
          <target state="translated">It&amp;rsquo;s up to the tool consuming the annotations to decide whether the client is allowed to have several annotations on one type and how to merge those annotations.</target>
        </trans-unit>
        <trans-unit id="f0b5c2cece26ef74815cda706410d529a21bd417" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s very helpful to use this feature during script development. The reports produced by &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; provide information that can save you a lot of time in tracking down bugs. You can always remove the &lt;code&gt;cgitb&lt;/code&gt; line later when you have tested your script and are confident that it works correctly.</source>
          <target state="translated">스크립트 개발 중에이 기능을 사용하면 매우 도움이됩니다. &lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; 가&lt;/a&gt; 생성 한 보고서는 버그를 추적하는 데 많은 시간을 절약 할 수있는 정보를 제공합니다. 스크립트를 테스트하고 올바르게 작동한다고 확신 할 때 언제든지 &lt;code&gt;cgitb&lt;/code&gt; 행을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22c515398dd54e978c320c9deb0d0268d495ea20" translate="yes" xml:space="preserve">
          <source>Italic mode</source>
          <target state="translated">이탤릭 모드</target>
        </trans-unit>
        <trans-unit id="5cbdcd93f424472e328e1a57f47a17f48c00f33b" translate="yes" xml:space="preserve">
          <source>Item Options</source>
          <target state="translated">아이템 옵션</target>
        </trans-unit>
        <trans-unit id="6202f13083abbb77f81ad8a1985547e0eaade10c" translate="yes" xml:space="preserve">
          <source>Item&amp;rsquo;s option values may be displayed in a different order than the order in which they are stored.</source>
          <target state="translated">항목의 옵션 값은 저장된 순서와 다른 순서로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="814115a7a4ce068e1e313aab07088369d6491578" translate="yes" xml:space="preserve">
          <source>Iterating over a message object tree is fairly easy with the &lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt;&lt;code&gt;Message.walk&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#module-email.iterators&quot;&gt;&lt;code&gt;email.iterators&lt;/code&gt;&lt;/a&gt; module provides some useful higher level iterations over message object trees.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt; &lt;code&gt;Message.walk&lt;/code&gt; &lt;/a&gt; 메소드를 사용하면 메시지 객체 트리를 반복하는 것이 매우 쉽습니다 . &lt;a href=&quot;#module-email.iterators&quot;&gt; &lt;code&gt;email.iterators&lt;/code&gt; 의&lt;/a&gt; 모듈은 메시지 오브젝트 나무를 통해 유용한 높은 수준의 반복을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dc41d23f9c2b8b34eed362c2d5a66ec1341fc2fe" translate="yes" xml:space="preserve">
          <source>Iterating over the members of an enum does not provide the aliases:</source>
          <target state="translated">열거 형 멤버를 반복해도 별명은 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09a13476ca8a54e634b1c965592cc50659e1d997" translate="yes" xml:space="preserve">
          <source>Iterating views while adding or deleting entries in the dictionary may raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; or fail to iterate over all entries.</source>
          <target state="translated">사전에서 항목을 추가하거나 삭제하는 동안보기를 반복하면 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 가 발생&lt;/a&gt; 하거나 모든 항목을 반복하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="c8de7b3a4ba4a49d433b993cb2d78885338309d1" translate="yes" xml:space="preserve">
          <source>Iteratively unpack from the buffer &lt;em&gt;buffer&lt;/em&gt; according to the format string &lt;em&gt;format&lt;/em&gt;. This function returns an iterator which will read equally-sized chunks from the buffer until all its contents have been consumed. The buffer&amp;rsquo;s size in bytes must be a multiple of the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식 문자열 &lt;em&gt;형식&lt;/em&gt; 에 따라 버퍼 &lt;em&gt;버퍼&lt;/em&gt; 에서 반복적으로 압축을 풉니 다 . 이 함수는 모든 내용이 소비 될 때까지 버퍼에서 동일한 크기의 청크를 읽는 반복자를 반환합니다. 바이트 단위의 버퍼 크기는 &lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt; 의해 반영되는 형식에 필요한 크기의 배수 여야합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="4bf9de45ad47d7c5378d6a6b4878a23abb027cf7" translate="yes" xml:space="preserve">
          <source>Iterator Types</source>
          <target state="translated">반복자 유형</target>
        </trans-unit>
        <trans-unit id="46761e79cfdea0019d907a53f45846a1ee9a6345" translate="yes" xml:space="preserve">
          <source>Itertool functions</source>
          <target state="translated">Itertool 기능</target>
        </trans-unit>
        <trans-unit id="6e54a0513216ff9ab3f49477b340232097393b29" translate="yes" xml:space="preserve">
          <source>Itertools Recipes</source>
          <target state="translated">Itertools 레시피</target>
        </trans-unit>
        <trans-unit id="145aa1575e52b7c70be4caf59f0df6c3926fe2de" translate="yes" xml:space="preserve">
          <source>Its default value is 1 minute.</source>
          <target state="translated">Its default value is 1 minute.</target>
        </trans-unit>
        <trans-unit id="cf0c54b9eac44883aa5ea016a0936bae63b1471b" translate="yes" xml:space="preserve">
          <source>Its default value is 30 seconds.</source>
          <target state="translated">Its default value is 30 seconds.</target>
        </trans-unit>
        <trans-unit id="6615a04b6ee93ef346e1b7e4c47b5858de4e7e29" translate="yes" xml:space="preserve">
          <source>Its default value is 5 minutes.</source>
          <target state="translated">Its default value is 5 minutes.</target>
        </trans-unit>
        <trans-unit id="abd75b8bd93dc8fe125c1d1c7e47d4f0550bbcb2" translate="yes" xml:space="preserve">
          <source>Its default value is 5 seconds.</source>
          <target state="translated">Its default value is 5 seconds.</target>
        </trans-unit>
        <trans-unit id="dc3bdbc56788fad2aa8a182d78a9cdd53617a14d" translate="yes" xml:space="preserve">
          <source>Its file,line position.</source>
          <target state="translated">파일, 줄 위치.</target>
        </trans-unit>
        <trans-unit id="715aa3328be5ee249a0969744b5351374ea7673e" translate="yes" xml:space="preserve">
          <source>Its methods create and return &lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;Proxy Objects&lt;/a&gt; for a number of commonly used data types to be synchronized across processes. This notably includes shared lists and dictionaries.</source>
          <target state="translated">이 메소드는 프로세스간에 동기화 할 수 있도록 일반적으로 사용되는 여러 데이터 유형에 대한 &lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;프록시 오브젝트&lt;/a&gt; 를 작성하고 리턴 합니다. 여기에는 특히 공유 목록과 사전이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2fff28012a7534f73380035c0ede53d295420a3b" translate="yes" xml:space="preserve">
          <source>JPEG data in JFIF or Exif formats</source>
          <target state="translated">JFIF 또는 Exif 형식의 JPEG 데이터</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="e73d3511fce24ebc291cfc1a0bf8fb3055e4b3c0" translate="yes" xml:space="preserve">
          <source>JSON is a subset of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2. The JSON produced by this module&amp;rsquo;s default settings (in particular, the default &lt;em&gt;separators&lt;/em&gt; value) is also a subset of YAML 1.0 and 1.1. This module can thus also be used as a YAML serializer.</source>
          <target state="translated">JSON은 &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2 의 하위 집합입니다 . 이 모듈의 기본 설정 (특히 기본 &lt;em&gt;구분 기호&lt;/em&gt; 값) 으로 생성 된 JSON 도 YAML 1.0 및 1.1의 하위 집합입니다. 따라서이 모듈은 YAML 시리얼 라이저로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74477a71066c32a03e3b5e0f372cb2d16bb5ab67" translate="yes" xml:space="preserve">
          <source>JSON is a text serialization format (it outputs unicode text, although most of the time it is then encoded to &lt;code&gt;utf-8&lt;/code&gt;), while pickle is a binary serialization format;</source>
          <target state="translated">JSON은 텍스트 직렬화 형식이며 (유니 코드 텍스트를 출력하지만 대부분 &lt;code&gt;utf-8&lt;/code&gt; 로 인코딩 되지만) pickle은 이진 직렬화 형식입니다.</target>
        </trans-unit>
        <trans-unit id="88798c723bcb212288a6869233d3bcfab4c6e224" translate="yes" xml:space="preserve">
          <source>JSON is human-readable, while pickle is not;</source>
          <target state="translated">JSON은 사람이 읽을 수 있지만 pickle은 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="26dcb3da6e496d8fa3c185868f494af19a08c8d6" translate="yes" xml:space="preserve">
          <source>JSON is interoperable and widely used outside of the Python ecosystem, while pickle is Python-specific;</source>
          <target state="translated">JSON은 Python 에코 시스템 외부에서 상호 운용 가능하고 널리 사용되는 반면, pickle은 Python 전용입니다.</target>
        </trans-unit>
        <trans-unit id="b58d3fed6d6262143493b847936ace0c088070e9" translate="yes" xml:space="preserve">
          <source>JSON, by default, can only represent a subset of the Python built-in types, and no custom classes; pickle can represent an extremely large number of Python types (many of them automatically, by clever usage of Python&amp;rsquo;s introspection facilities; complex cases can be tackled by implementing &lt;a href=&quot;#pickle-inst&quot;&gt;specific object APIs&lt;/a&gt;);</source>
          <target state="translated">JSON은 기본적으로 Python 내장 유형의 서브 세트 만 나타낼 수 있으며 사용자 정의 클래스는 없습니다. pickle은 매우 많은 수의 Python 유형을 나타낼 수 있습니다 (Python의 내부 검사 기능을 영리하게 사용하여 많은 유형이 자동으로 수행됩니다. 복잡한 &lt;a href=&quot;#pickle-inst&quot;&gt;객체&lt;/a&gt; 는 특정 객체 API 를 구현하여 해결할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="3c157bbba1c3c6dd4684d9e17bd5cbdd293fa040" translate="yes" xml:space="preserve">
          <source>James Henstridge</source>
          <target state="translated">제임스 헨스트리지</target>
        </trans-unit>
        <trans-unit id="aae47823aad5375bf33ac2c5178d07c30af7b55d" translate="yes" xml:space="preserve">
          <source>January 1 of year 1 is called day number 1, January 2 of year 1 is called day number 2, and so on. &lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="translated">1 년 1 월 1 일은 1 일 1이라고하고, 1 년 1 월 2 일은 2 일이라고합니다. &lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="db10f36d9223f6e5b2b87cbc94ecdb4f6367b21d" translate="yes" xml:space="preserve">
          <source>Japanese, Korean, Simplified Chinese, Western Europe, Greek</source>
          <target state="translated">일본어, 한국어, 중국어 간체, 서유럽, 그리스어</target>
        </trans-unit>
        <trans-unit id="da19e6ace2ea93a2694470984913cc9be9f8a78a" translate="yes" xml:space="preserve">
          <source>Java Platform</source>
          <target state="translated">자바 플랫폼</target>
        </trans-unit>
        <trans-unit id="24e07b1280211517893038a57e2fa614b51c83cb" translate="yes" xml:space="preserve">
          <source>Join a &lt;em&gt;thread&lt;/em&gt; within &lt;em&gt;timeout&lt;/em&gt;. Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if thread is still alive after &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">&lt;em&gt;제한 시간&lt;/em&gt; 내에 &lt;em&gt;스레드를&lt;/em&gt; 결합하십시오 . 올립니다 &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; 스레드가 여전히 후 살아 경우 &lt;em&gt;시간 제한&lt;/em&gt; (초).&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ec87f8fcd9ef64d26787f07fb5fc64981fb9d0" translate="yes" xml:space="preserve">
          <source>Join adjacent text nodes so that all stretches of text are stored as single &lt;code&gt;Text&lt;/code&gt; instances. This simplifies processing text from a DOM tree for many applications.</source>
          <target state="translated">모든 텍스트 스트레치가 단일 &lt;code&gt;Text&lt;/code&gt; 인스턴스 로 저장되도록 인접한 텍스트 노드를 결합하십시오 . 이는 많은 응용 프로그램에서 DOM 트리의 텍스트 처리를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="60f2e868ffb015b783bfe34cd024cda4ded92d88" translate="yes" xml:space="preserve">
          <source>Join one or more path components intelligently. The return value is the concatenation of &lt;em&gt;path&lt;/em&gt; and any members of &lt;em&gt;*paths&lt;/em&gt; with exactly one directory separator (&lt;code&gt;os.sep&lt;/code&gt;) following each non-empty part except the last, meaning that the result will only end in a separator if the last part is empty. If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</source>
          <target state="translated">하나 이상의 경로 구성 요소를 지능적으로 결합하십시오. 리턴 값의 연결 한 &lt;em&gt;경로&lt;/em&gt; 중 어느 멤버 &lt;em&gt;* 경로&lt;/em&gt; 정확히 하나 개의 디렉토리 분리 (함께 &lt;code&gt;os.sep&lt;/code&gt; 마지막 부분이 비어있는 경우 결과가 단지 세퍼레이터로 끝나는 것을 의미 마지막을 제외한 각각의 비어 있지 않은 부분 다음) . 구성 요소가 절대 경로 인 경우 이전의 모든 구성 요소가 버리고 절대 경로 구성 요소에서 결합이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="eaf8550cd527a4aa5bcd750c5566f8a76a8a1f3f" translate="yes" xml:space="preserve">
          <source>Join the background thread. This can only be used after &lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; has been called. It blocks until the background thread exits, ensuring that all data in the buffer has been flushed to the pipe.</source>
          <target state="translated">백그라운드 스레드에 참여하십시오. &lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 가 호출 된 후에 만 사용할 수 있습니다 . 백그라운드 스레드가 종료 될 때까지 차단하여 버퍼의 모든 데이터가 파이프로 플러시되도록합니다.</target>
        </trans-unit>
        <trans-unit id="fffc9a5e23a3f1b2ccacd3e4adf7ea7865062fbf" translate="yes" xml:space="preserve">
          <source>Joining processes that use queues</source>
          <target state="translated">큐를 사용하는 프로세스 결합</target>
        </trans-unit>
        <trans-unit id="80c8c7d106ea49237f4b6ea2c4ae9879166d4287" translate="yes" xml:space="preserve">
          <source>Joining zombie processes</source>
          <target state="translated">좀비 프로세스 참여</target>
        </trans-unit>
        <trans-unit id="a4bf8d21588e5176ca76cda88e2cd50069125501" translate="yes" xml:space="preserve">
          <source>Joins the applied CAN filters such that only CAN frames that match all given CAN filters are passed to user space.</source>
          <target state="translated">Joins the applied CAN filters such that only CAN frames that match all given CAN filters are passed to user space.</target>
        </trans-unit>
        <trans-unit id="e3d34ba51db462866353060a6c3f2d483d8c7643" translate="yes" xml:space="preserve">
          <source>Juan David Ib&amp;aacute;&amp;ntilde;ez Palomar</source>
          <target state="translated">후안 데이비드 이바네즈 팔로마</target>
        </trans-unit>
        <trans-unit id="e51d02293aa68e17eecb8aa544b483cf96c6fa49" translate="yes" xml:space="preserve">
          <source>Just returns 10, as this is Decimal, :)</source>
          <target state="translated">이것은 10 진수이므로 10을 반환합니다. :)</target>
        </trans-unit>
        <trans-unit id="4f1fddc4dabd32f2e61ca9f91e0ca2bb68fd646f" translate="yes" xml:space="preserve">
          <source>Just returns self, this method is only to comply with the Decimal Specification.</source>
          <target state="translated">그냥 self를 반환합니다.이 방법은 Decimal Specification에만 따릅니다.</target>
        </trans-unit>
        <trans-unit id="47d7416fd642efd47199c18f79129bbd51455d2c" translate="yes" xml:space="preserve">
          <source>KEY_DC</source>
          <target state="translated">KEY_DC</target>
        </trans-unit>
        <trans-unit id="033f3bd76e9037ed2eacdf745e1f381ae09e1e6e" translate="yes" xml:space="preserve">
          <source>KEY_END</source>
          <target state="translated">KEY_END</target>
        </trans-unit>
        <trans-unit id="e8b0bdc4a205564ace3e67b5d2590e9a7b3ebe0f" translate="yes" xml:space="preserve">
          <source>KEY_HOME</source>
          <target state="translated">KEY_HOME</target>
        </trans-unit>
        <trans-unit id="1ed0f4c565cdf40018aa6d1a7f2dffe8a57d07b7" translate="yes" xml:space="preserve">
          <source>KEY_IC</source>
          <target state="translated">KEY_IC</target>
        </trans-unit>
        <trans-unit id="f9606cdd29d726a1efc9306cd6515a746d5e9de8" translate="yes" xml:space="preserve">
          <source>KEY_NPAGE</source>
          <target state="translated">KEY_NPAGE</target>
        </trans-unit>
        <trans-unit id="817be3fc68df61d26f925ae492d47665d4ff3127" translate="yes" xml:space="preserve">
          <source>KEY_PPAGE</source>
          <target state="translated">KEY_PPAGE</target>
        </trans-unit>
        <trans-unit id="580b34c07a9b803a5f68c0e7990ba58269a92490" translate="yes" xml:space="preserve">
          <source>Kahan, W: Branch cuts for complex elementary functions; or, Much ado about nothing&amp;rsquo;s sign bit. In Iserles, A., and Powell, M. (eds.), The state of the art in numerical analysis. Clarendon Press (1987) pp165&amp;ndash;211.</source>
          <target state="translated">Kahan, W : 복잡한 초등 함수를위한 분기 컷; 또는 아무것도 부호 비트에 대해 너무 열망합니다. Iserles, A. 및 Powell, M. (eds.)에서 수치 분석의 최신 기술. Clarendon Press (1987) pp165&amp;ndash;211.</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="24a946a3338502270c212fb158dbe6bb77ee0309" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; 맵핑 의 데이터베이스를 유지하십시오 .</target>
        </trans-unit>
        <trans-unit id="37bfb81baa66440423c45f18f727362864a6cfce" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings. A realm of &lt;code&gt;None&lt;/code&gt; is considered a catch-all realm, which is searched if no other realm fits.</source>
          <target state="translated">&lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; 맵핑 의 데이터베이스를 유지하십시오 . &lt;code&gt;None&lt;/code&gt; 영역은 범용 영역으로 간주되며 다른 영역에 맞지 않으면 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="03de4413ffacf22791c546e17121674eadf9916d" translate="yes" xml:space="preserve">
          <source>Keep in mind that if the node you&amp;rsquo;re operating on has child nodes you must either transform the child nodes yourself or call the &lt;code&gt;generic_visit()&lt;/code&gt; method for the node first.</source>
          <target state="translated">작업중인 노드에 자식 노드가있는 경우 자식 노드를 직접 변환하거나 노드의 &lt;code&gt;generic_visit()&lt;/code&gt; 메서드를 먼저 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c563af2eb52c22befb802b194ed5fde24ca2d3a7" translate="yes" xml:space="preserve">
          <source>Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays doesn&amp;rsquo;t &lt;em&gt;copy&lt;/em&gt; the sub-object, instead it retrieves a wrapper object accessing the root-object&amp;rsquo;s underlying buffer.</source>
          <target state="translated">Structure, Unions 및 Arrays에서 하위 객체를 검색하면 하위 객체가 &lt;em&gt;복사&lt;/em&gt; 되지 않고 대신 루트 객체의 기본 버퍼에 액세스하는 래퍼 객체가 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="4298e303439a440ab55bf7bbf886c709ae66ef29" translate="yes" xml:space="preserve">
          <source>Keeping references to frame objects, as found in the first element of the frame records these functions return, can cause your program to create reference cycles. Once a reference cycle has been created, the lifespan of all objects which can be accessed from the objects which form the cycle can become much longer even if Python&amp;rsquo;s optional cycle detector is enabled. If such cycles must be created, it is important to ensure they are explicitly broken to avoid the delayed destruction of objects and increased memory consumption which occurs.</source>
          <target state="translated">이러한 함수가 반환하는 프레임 레코드의 첫 번째 요소에있는 프레임 객체에 대한 참조를 유지하면 프로그램이 참조주기를 만들 수 있습니다. 참조 사이클이 생성되면 파이썬의 선택적 사이클 검출기가 활성화되어 있어도 사이클을 형성하는 객체에서 액세스 할 수있는 모든 객체의 수명이 훨씬 더 길어질 수 있습니다. 이러한주기를 작성해야하는 경우, 오브젝트의 지연된 소멸 및 발생하는 메모리 소비 증가를 피하기 위해 명시 적으로 중단해야합니다.</target>
        </trans-unit>
        <trans-unit id="52a345e99e64b9ca6f928d5687177a892525371b" translate="yes" xml:space="preserve">
          <source>Kent Beck&amp;rsquo;s original paper on testing frameworks using the pattern shared by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; 가&lt;/a&gt; 공유 한 패턴을 사용한 프레임 워크 테스트에 대한 Kent Beck의 원본 논문 .</target>
        </trans-unit>
        <trans-unit id="7267bbd8e2137364d4939e2071439e42d40f32fb" translate="yes" xml:space="preserve">
          <source>Kevent Objects</source>
          <target state="translated">Kevent 객체</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dbab391d4ec83ba2f4394be31de35a61669a5996" translate="yes" xml:space="preserve">
          <source>Key and values are always stored as bytes. This means that when strings are used they are implicitly converted to the default encoding before being stored.</source>
          <target state="translated">키와 값은 항상 바이트로 저장됩니다. 이는 문자열이 사용될 때 저장되기 전에 기본 인코딩으로 암시 적으로 변환됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2f019ec46ab9548a295fae40fb32bbf280932bb8" translate="yes" xml:space="preserve">
          <source>Key bindings</source>
          <target state="translated">키 바인딩</target>
        </trans-unit>
        <trans-unit id="f0cc3ad4ee33d02515db5713788523cd4cf74945" translate="yes" xml:space="preserve">
          <source>Key constant</source>
          <target state="translated">키 상수</target>
        </trans-unit>
        <trans-unit id="6bbbfa7e022b93aaca86b7e55f8cf9f9e9f25683" translate="yes" xml:space="preserve">
          <source>Key derivation</source>
          <target state="translated">키 파생</target>
        </trans-unit>
        <trans-unit id="4c6694a69ad0f467a3eb48c707287ff83fc7df0b" translate="yes" xml:space="preserve">
          <source>Key derivation and key stretching algorithms are designed for secure password hashing. Naive algorithms such as &lt;code&gt;sha1(password)&lt;/code&gt; are not resistant against brute-force attacks. A good password hashing function must be tunable, slow, and include a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;.</source>
          <target state="translated">키 파생 및 키 확장 알고리즘은 안전한 암호 해싱을 위해 설계되었습니다. &lt;code&gt;sha1(password)&lt;/code&gt; 과 같은 고유 알고리즘 은 무차별 대입 공격에 대해 내성이 없습니다. 좋은 암호 해싱 기능은 조정 가능하고 느리며 &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt를&lt;/a&gt; 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="99214c71e9133c70244f001bb7de7d4fe414b3a5" translate="yes" xml:space="preserve">
          <source>KeyboardInterrupt</source>
          <target state="translated">KeyboardInterrupt</target>
        </trans-unit>
        <trans-unit id="aba6df4879209d36e1a5a7eb8f2829348bfc1607" translate="yes" xml:space="preserve">
          <source>Keycap</source>
          <target state="translated">Keycap</target>
        </trans-unit>
        <trans-unit id="f431dd90bf1296fd6be5fc2fecca2fe9d70abb5f" translate="yes" xml:space="preserve">
          <source>Keyed hashing</source>
          <target state="translated">키 해싱</target>
        </trans-unit>
        <trans-unit id="914eeba5ce4ce3c00e9428b28f9ccf6cf0cce211" translate="yes" xml:space="preserve">
          <source>Keyed hashing can be used for authentication as a faster and simpler replacement for &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;Hash-based message authentication code&lt;/a&gt; (HMAC). BLAKE2 can be securely used in prefix-MAC mode thanks to the indifferentiability property inherited from BLAKE.</source>
          <target state="translated">키 기반 해싱은 HMAC ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;Hash-based Message Authentication Code&lt;/a&gt; )를 더 빠르고 간단하게 대체 할 수 있도록 인증에 사용할 수 있습니다 . BLAKE2는 BLAKE에서 상속 된 미분 속성 덕분에 접두사 -MAC 모드에서 안전하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9548bb855e07b59b91626cc17d69c771e2e87b2" translate="yes" xml:space="preserve">
          <source>Keys and values are iterated over in insertion order. This allows the creation of &lt;code&gt;(value, key)&lt;/code&gt; pairs using &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt;. Another way to create the same list is &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt;.</source>
          <target state="translated">키와 값은 삽입 순서대로 반복됩니다. &lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt; 사용하여 &lt;code&gt;(value, key)&lt;/code&gt; 쌍을 만들 수 있습니다 . 동일한 목록을 만드는 또 다른 방법 &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c300864ed75026c1eb88a7a83759898d09c397b8" translate="yes" xml:space="preserve">
          <source>Keys are referred to by integer constants with names starting with &lt;code&gt;KEY_&lt;/code&gt;. The exact keycaps available are system dependent.</source>
          <target state="translated">키는 이름이 &lt;code&gt;KEY_&lt;/code&gt; 로 시작하는 정수 상수로 참조됩니다 . 사용 가능한 정확한 키 캡은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="228f5d286dcdd48b2fc18dd8734bb35bc953ff86" translate="yes" xml:space="preserve">
          <source>Keys in key/value pairs of JSON are always of the type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. When a dictionary is converted into JSON, all the keys of the dictionary are coerced to strings. As a result of this, if a dictionary is converted into JSON and then back into a dictionary, the dictionary may not equal the original one. That is, &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; if x has non-string keys.</source>
          <target state="translated">JSON의 키 / 값 쌍의 키는 항상 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 유형 입니다. 사전이 JSON으로 변환되면 사전의 모든 키가 문자열로 강제 변환됩니다. 그 결과 사전이 JSON으로 변환 된 다음 사전으로 다시 돌아 가면 사전이 원래 사전과 같지 않을 수 있습니다. 즉, x에 문자열이 아닌 키가 있으면 &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="439a459f8af4300a3a5b519bbed313651ca1e4c1" translate="yes" xml:space="preserve">
          <source>Keys views are set-like since their entries are unique and hashable. If all values are hashable, so that &lt;code&gt;(key, value)&lt;/code&gt; pairs are unique and hashable, then the items view is also set-like. (Values views are not treated as set-like since the entries are generally not unique.) For set-like views, all of the operations defined for the abstract base class &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt;&lt;code&gt;collections.abc.Set&lt;/code&gt;&lt;/a&gt; are available (for example, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, or &lt;code&gt;^&lt;/code&gt;).</source>
          <target state="translated">키보기는 항목이 고유하고 해시 가능하므로 설정이 비슷합니다. &lt;code&gt;(key, value)&lt;/code&gt; 쌍이 고유하고 해시 가능 하도록 모든 값을 해시 가능 하면 항목보기도 설정됩니다. (값보기는 일반적으로 항목이 고유하지 않으므로 값보기로 설정되지 않습니다.) 세트 유사보기의 경우 추상 기본 클래스 &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt; &lt;code&gt;collections.abc.Set&lt;/code&gt; 에&lt;/a&gt; 대해 정의 된 모든 조작 을 사용할 수 있습니다 (예 : &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; 또는 &lt;code&gt;^&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72035afe680b44899ee30976fd5b486a93144c83" translate="yes" xml:space="preserve">
          <source>Keystroke</source>
          <target state="translated">Keystroke</target>
        </trans-unit>
        <trans-unit id="a0256d5e54265d1b99c70a9f07e115e966a973da" translate="yes" xml:space="preserve">
          <source>Keywords can be used in the &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; call to set values in the dictionary:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt; 호출 에서 키워드를 사용 하여 사전에 값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb850e24e1448951f9be9555cccb1e5c8e9aa4cf" translate="yes" xml:space="preserve">
          <source>Kill signal.</source>
          <target state="translated">Kill signal.</target>
        </trans-unit>
        <trans-unit id="b473142e64b2d483a80088f0192d814677f79849" translate="yes" xml:space="preserve">
          <source>Kill the child.</source>
          <target state="translated">아이를 죽여라.</target>
        </trans-unit>
        <trans-unit id="dfb8d10a715be56498bf3463ceb602e0c5f6cdfd" translate="yes" xml:space="preserve">
          <source>Kill the subprocess and close all pipes.</source>
          <target state="translated">서브 프로세스를 종료하고 모든 파이프를 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="bcef2d72d27a3ff305fd835a27596403d70aa65a" translate="yes" xml:space="preserve">
          <source>Kill the subprocess by calling the &lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 서브 프로세스를 종료하십시오 .</target>
        </trans-unit>
        <trans-unit id="5eea27376f6c77dd4e7d334cd247a3c6708d22ec" translate="yes" xml:space="preserve">
          <source>Kill the subprocess.</source>
          <target state="translated">하위 프로세스를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="a9c2ee0789d81c2bfbe1a2dc41f783da5246898c" translate="yes" xml:space="preserve">
          <source>Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f19c6828b717749bb8b678b96baba09b9afe4b9" translate="yes" xml:space="preserve">
          <source>Kills the child. On Posix OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아이를 죽입니다. Posix OS에서이 기능은 SIGKILL을 자식에게 보냅니다. Windows에서 &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="6f4d7efd09292b580160cf054a1eb415aa098b83" translate="yes" xml:space="preserve">
          <source>Kqueue Objects</source>
          <target state="translated">큐케 오브젝트</target>
        </trans-unit>
        <trans-unit id="1ae87da77ec3d4df1eb9c1cc7937078e8fd86235" translate="yes" xml:space="preserve">
          <source>L-System</source>
          <target state="translated">L-System</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="8f692914bc66ead997b8bc1788f89a45c63f1006" translate="yes" xml:space="preserve">
          <source>LIFO Queue</source>
          <target state="translated">LIFO 대기열</target>
        </trans-unit>
        <trans-unit id="e0ac7d929c8c9064651f3a5b472a916a78c16845" translate="yes" xml:space="preserve">
          <source>LOG_ALERT</source>
          <target state="translated">LOG_ALERT</target>
        </trans-unit>
        <trans-unit id="00a42081f87dfdb7c8750d2dc99a1c5a47afe15c" translate="yes" xml:space="preserve">
          <source>LOG_AUTH</source>
          <target state="translated">LOG_AUTH</target>
        </trans-unit>
        <trans-unit id="b059e128bbbf4abbc726cbc5b3dc15823fa1d3b0" translate="yes" xml:space="preserve">
          <source>LOG_AUTHPRIV</source>
          <target state="translated">LOG_AUTHPRIV</target>
        </trans-unit>
        <trans-unit id="3ea8e1cd8bec535a6b614c37476a25af434a2a64" translate="yes" xml:space="preserve">
          <source>LOG_CRIT</source>
          <target state="translated">LOG_CRIT</target>
        </trans-unit>
        <trans-unit id="e14c128e15575171dccf2a786c6c56cfe90aabfb" translate="yes" xml:space="preserve">
          <source>LOG_CRON</source>
          <target state="translated">LOG_CRON</target>
        </trans-unit>
        <trans-unit id="2db1ea382ae920e08017868d8ca7dc74f1e87577" translate="yes" xml:space="preserve">
          <source>LOG_DAEMON</source>
          <target state="translated">LOG_DAEMON</target>
        </trans-unit>
        <trans-unit id="e9132069aa3cd9868136c9eab4c9121997cd9261" translate="yes" xml:space="preserve">
          <source>LOG_DEBUG</source>
          <target state="translated">LOG_DEBUG</target>
        </trans-unit>
        <trans-unit id="5cbc989f5f6b54b988f6cf238d1dfcafddfe5df0" translate="yes" xml:space="preserve">
          <source>LOG_EMERG</source>
          <target state="translated">LOG_EMERG</target>
        </trans-unit>
        <trans-unit id="c25ebb67e3f524ee4cfb9f242122b115231b2969" translate="yes" xml:space="preserve">
          <source>LOG_ERR</source>
          <target state="translated">LOG_ERR</target>
        </trans-unit>
        <trans-unit id="7076f8e47c7f564a083cced7437884fc3de9c20e" translate="yes" xml:space="preserve">
          <source>LOG_FTP</source>
          <target state="translated">LOG_FTP</target>
        </trans-unit>
        <trans-unit id="508d693347703c9b1449225c00b44e2e84f15cce" translate="yes" xml:space="preserve">
          <source>LOG_INFO</source>
          <target state="translated">LOG_INFO</target>
        </trans-unit>
        <trans-unit id="147a80a7b7486a934d7581b0f33986ae6651bd87" translate="yes" xml:space="preserve">
          <source>LOG_KERN</source>
          <target state="translated">LOG_KERN</target>
        </trans-unit>
        <trans-unit id="4bf6ef93839f6872c9f92acc4f4b838c163bdc96" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL0</source>
          <target state="translated">LOG_LOCAL0</target>
        </trans-unit>
        <trans-unit id="1d85977d2d454e9c3494e61168702f4cbecf12c8" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL1</source>
          <target state="translated">LOG_LOCAL1</target>
        </trans-unit>
        <trans-unit id="e587b1ef1b9f3479ac96923decd64231690910bb" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL2</source>
          <target state="translated">LOG_LOCAL2</target>
        </trans-unit>
        <trans-unit id="ae76a49e2672fc55b235abad25133bc1cc0b3ad5" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL3</source>
          <target state="translated">LOG_LOCAL3</target>
        </trans-unit>
        <trans-unit id="a46daeebb6f0fc83ba853556f660485fc6464822" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL4</source>
          <target state="translated">LOG_LOCAL4</target>
        </trans-unit>
        <trans-unit id="f1df950575fc4b0c0074a0abb00861a8e08a3ed6" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL5</source>
          <target state="translated">LOG_LOCAL5</target>
        </trans-unit>
        <trans-unit id="a5d06673189a0f5f9d67757287d862777d523941" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL6</source>
          <target state="translated">LOG_LOCAL6</target>
        </trans-unit>
        <trans-unit id="f51ad7929d644389ddc043e95d9d787a20eb0f61" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL7</source>
          <target state="translated">LOG_LOCAL7</target>
        </trans-unit>
        <trans-unit id="1ca5af74225a0e933cda1a23779b6b9b7534a5c0" translate="yes" xml:space="preserve">
          <source>LOG_LPR</source>
          <target state="translated">LOG_LPR</target>
        </trans-unit>
        <trans-unit id="3266bdf7a824a1128c05ff0a6eacbb163573bfdb" translate="yes" xml:space="preserve">
          <source>LOG_MAIL</source>
          <target state="translated">LOG_MAIL</target>
        </trans-unit>
        <trans-unit id="f460581d8a89631890f08c7c200582c071d9f348" translate="yes" xml:space="preserve">
          <source>LOG_NEWS</source>
          <target state="translated">LOG_NEWS</target>
        </trans-unit>
        <trans-unit id="fd9c5faaf23df86fefa8b46f512c8f9f2f910ea4" translate="yes" xml:space="preserve">
          <source>LOG_NOTICE</source>
          <target state="translated">LOG_NOTICE</target>
        </trans-unit>
        <trans-unit id="00b0b0f7b44d7be30d92b1245948b1df8d49d79b" translate="yes" xml:space="preserve">
          <source>LOG_SYSLOG</source>
          <target state="translated">LOG_SYSLOG</target>
        </trans-unit>
        <trans-unit id="cf326c7cb4d0b7bd59e5815a628a819974d8b6a6" translate="yes" xml:space="preserve">
          <source>LOG_USER</source>
          <target state="translated">LOG_USER</target>
        </trans-unit>
        <trans-unit id="b69a6c99cd1a6e6314b53f763c30ba82bc041bc6" translate="yes" xml:space="preserve">
          <source>LOG_UUCP</source>
          <target state="translated">LOG_UUCP</target>
        </trans-unit>
        <trans-unit id="d0479a4f305480aef0fe90fae83a03f4865e7fd9" translate="yes" xml:space="preserve">
          <source>LOG_WARNING</source>
          <target state="translated">LOG_WARNING</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="011416c82c132a4f52517e4bbdc2375314f6f840" translate="yes" xml:space="preserve">
          <source>Label Options</source>
          <target state="translated">라벨 옵션</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">대용량 파일 지원</target>
        </trans-unit>
        <trans-unit id="314cf2f01043a4a7510f794394e0b8c96cda1587" translate="yes" xml:space="preserve">
          <source>Large file support is enabled in Python when the size of an &lt;code&gt;off_t&lt;/code&gt; is larger than a &lt;code&gt;long&lt;/code&gt; and the &lt;code&gt;long long&lt;/code&gt; is at least as large as an &lt;code&gt;off_t&lt;/code&gt;. It may be necessary to configure and compile Python with certain compiler flags to enable this mode. For example, it is enabled by default with recent versions of Irix, but with Solaris 2.6 and 2.7 you need to do something like:</source>
          <target state="translated">의 크기 때 큰 파일 지원은 파이썬에서 사용 가능 &lt;code&gt;off_t&lt;/code&gt; 는 (A)보다 큰 &lt;code&gt;long&lt;/code&gt; 와는 &lt;code&gt;long long&lt;/code&gt; 큰로서 적어도입니다 &lt;code&gt;off_t&lt;/code&gt; . 이 모드를 활성화하려면 특정 컴파일러 플래그로 Python을 구성하고 컴파일해야 할 수도 있습니다. 예를 들어, 최신 버전의 Irix에서는 기본적으로 활성화되어 있지만 Solaris 2.6 및 2.7에서는 다음과 같은 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4101486e371d681731851bb447c9aa495b0e247" translate="yes" xml:space="preserve">
          <source>Later, calling &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will return an object with two attributes, &lt;code&gt;integers&lt;/code&gt; and &lt;code&gt;accumulate&lt;/code&gt;. The &lt;code&gt;integers&lt;/code&gt; attribute will be a list of one or more ints, and the &lt;code&gt;accumulate&lt;/code&gt; attribute will be either the &lt;a href=&quot;functions#sum&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; function, if &lt;code&gt;--sum&lt;/code&gt; was specified at the command line, or the &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; function if it was not.</source>
          <target state="translated">나중에 &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 를 호출 하면 &lt;code&gt;integers&lt;/code&gt; 와 &lt;code&gt;accumulate&lt;/code&gt; 이라는 두 가지 속성을 가진 객체가 반환됩니다 . &lt;code&gt;integers&lt;/code&gt; 특성은 하나 개 이상의 INT의리스트 될 것이며, &lt;code&gt;accumulate&lt;/code&gt; 특성은 어느 것 &lt;a href=&quot;functions#sum&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 경우, 함수 &lt;code&gt;--sum&lt;/code&gt; 는 명령 줄에 지정되거나 하였다 &lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt; 가 아니었다면 기능.</target>
        </trans-unit>
        <trans-unit id="220d5efc8654e9aa0bf6695beee6bfe664735911" translate="yes" xml:space="preserve">
          <source>Latin-1 encoding with &lt;code&gt;\uXXXX&lt;/code&gt; and &lt;code&gt;\UXXXXXXXX&lt;/code&gt; for other code points. Existing backslashes are not escaped in any way. It is used in the Python pickle protocol.</source>
          <target state="translated">다른 코드 포인트의 경우 &lt;code&gt;\uXXXX&lt;/code&gt; 및 &lt;code&gt;\UXXXXXXXX&lt;/code&gt; 를 사용한 라틴 -1 인코딩 기존 백 슬래시는 어떤 방식으로도 이스케이프되지 않습니다. 파이썬 피클 프로토콜에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="5304207bb67ab38f044a44e136564dadeaba0897" translate="yes" xml:space="preserve">
          <source>Leave cbreak mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">파단 모드를 종료합니다. 라인 버퍼링을 사용하여 일반 &quot;요리&quot;모드로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="9b35aee8d3da8fd183e13a370b032dec769e9344" translate="yes" xml:space="preserve">
          <source>Leave echo mode. Echoing of input characters is turned off.</source>
          <target state="translated">에코 모드를 종료하십시오. 입력 문자 반향이 해제되었습니다.</target>
        </trans-unit>
        <trans-unit id="f604f6318f737fd0cd2341f0f6cdfab969737efb" translate="yes" xml:space="preserve">
          <source>Leave newline mode. Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of &lt;code&gt;addch('\n')&lt;/code&gt;, which always does the equivalent of return and line feed on the virtual screen). With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.</source>
          <target state="translated">줄 바꿈 모드를 종료하십시오. 입력시 줄 바꿈으로의 변환 번역을 비활성화하고 출력에서 ​​줄 바꿈 / 줄 바꿈으로의 줄 바꿈 변환을 비활성화합니다 (그러나 이것은 항상 리턴 및 줄 바꿈과 동일한 &lt;code&gt;addch('\n')&lt;/code&gt; 의 동작을 변경하지는 않습니다. 가상 화면에서). 번역이 꺼져 있으면 저주로 인해 세로 동작이 약간 빨라질 수 있습니다. 또한 입력시 리턴 키를 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df80f393f0c1283bf1c2011a3966c84e42251e69" translate="yes" xml:space="preserve">
          <source>Leave raw mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">원시 모드를 그대로 둡니다. 라인 버퍼링을 사용하여 일반 &quot;요리&quot;모드로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="494064e70529e54389ad678d759801779c5c72df" translate="yes" xml:space="preserve">
          <source>Left Shift</source>
          <target state="translated">왼쪽 시프트</target>
        </trans-unit>
        <trans-unit id="fa2ddfd65f207446dfb5c03f954efaeb99e51fad" translate="yes" xml:space="preserve">
          <source>Left highlight</source>
          <target state="translated">왼쪽 하이라이트</target>
        </trans-unit>
        <trans-unit id="7459e2ff70b4a74b12b3b42dcc8898f1325c4607" translate="yes" xml:space="preserve">
          <source>Left side</source>
          <target state="translated">왼쪽</target>
        </trans-unit>
        <trans-unit id="4f21b710206cb813c042db5adab0dd62ed395300" translate="yes" xml:space="preserve">
          <source>Left-arrow</source>
          <target state="translated">Left-arrow</target>
        </trans-unit>
        <trans-unit id="fe4e2dded8cbb24225a5077d86ac26e1a4e77daa" translate="yes" xml:space="preserve">
          <source>Legacy API Examples</source>
          <target state="translated">레거시 API 예제</target>
        </trans-unit>
        <trans-unit id="f9e9858ae5963ad7d5dac67bab79e2781ada4b1d" translate="yes" xml:space="preserve">
          <source>Legacy API:</source>
          <target state="translated">레거시 API :</target>
        </trans-unit>
        <trans-unit id="e874dde2b7bd15782fc71bda63adbb0435cd8ff4" translate="yes" xml:space="preserve">
          <source>Legacy Shell Invocation Functions</source>
          <target state="translated">레거시 쉘 호출 함수</target>
        </trans-unit>
        <trans-unit id="97830814b9202ba41e9b45589de2504e635919fe" translate="yes" xml:space="preserve">
          <source>Legacy interface</source>
          <target state="translated">레거시 인터페이스</target>
        </trans-unit>
        <trans-unit id="f3f33501b9f5989df40734cc741026886ffb8ebc" translate="yes" xml:space="preserve">
          <source>Legacy variant of the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It has interpolation disabled by default and allows for non-string section names, option names, and values via its unsafe &lt;code&gt;add_section&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, as well as the legacy &lt;code&gt;defaults=&lt;/code&gt; keyword argument handling.</source>
          <target state="translated">의 레거시 변형 &lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt; . 보간법은 기본적으로 비활성화되어 있으며 안전하지 않은 &lt;code&gt;add_section&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 메소드 를 통해 문자열이 아닌 섹션 이름, 옵션 이름 및 값 과 레거시 &lt;code&gt;defaults=&lt;/code&gt; 키워드 인수 처리를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="66133ee14edcb4e3bbb34ddd9f2cd0c81d9a82cf" translate="yes" xml:space="preserve">
          <source>Legal values are points of the compass: &lt;code&gt;&quot;n&quot;&lt;/code&gt;, &lt;code&gt;&quot;ne&quot;&lt;/code&gt;, &lt;code&gt;&quot;e&quot;&lt;/code&gt;, &lt;code&gt;&quot;se&quot;&lt;/code&gt;, &lt;code&gt;&quot;s&quot;&lt;/code&gt;, &lt;code&gt;&quot;sw&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;nw&quot;&lt;/code&gt;, and also &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="translated">올바른 값은 나침반의 포인트입니다 : &lt;code&gt;&quot;n&quot;&lt;/code&gt; , &lt;code&gt;&quot;ne&quot;&lt;/code&gt; , &lt;code&gt;&quot;e&quot;&lt;/code&gt; , &lt;code&gt;&quot;se&quot;&lt;/code&gt; , &lt;code&gt;&quot;s&quot;&lt;/code&gt; , &lt;code&gt;&quot;sw&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; , &lt;code&gt;&quot;nw&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;center&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="905f604fb13f295392bda39869104e2dd79e9fb2" translate="yes" xml:space="preserve">
          <source>Legal values are the strings: &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;center&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;fill&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;right&quot;&lt;/code&gt; 값은 &lt;code&gt;&quot;left&quot;&lt;/code&gt; , &lt;code&gt;&quot;center&quot;&lt;/code&gt; , &quot;right&quot; 및 &lt;code&gt;&quot;fill&quot;&lt;/code&gt; 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="eb67484bf01ce5ec849415f285da75abc22265be" translate="yes" xml:space="preserve">
          <source>Legal values are: &lt;code&gt;'left'&lt;/code&gt;, &lt;code&gt;'right'&lt;/code&gt;, &lt;code&gt;'top'&lt;/code&gt;, &lt;code&gt;'bottom'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'right'&lt;/code&gt; 값은 &lt;code&gt;'left'&lt;/code&gt; , 'right' , &lt;code&gt;'top'&lt;/code&gt; , &lt;code&gt;'bottom'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="18beaa17df62904395685f10cb89a3d8e9391154" translate="yes" xml:space="preserve">
          <source>Legal values: &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'y'&lt;/code&gt;, &lt;code&gt;'both'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;.</source>
          <target state="translated">유효한 값 : &lt;code&gt;'x'&lt;/code&gt; , &lt;code&gt;'y'&lt;/code&gt; , &lt;code&gt;'both'&lt;/code&gt; , &lt;code&gt;'none'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="d45a6f38f95efbaf3f9f3b999e990d1c6f2db236" translate="yes" xml:space="preserve">
          <source>Length modifier (optional).</source>
          <target state="translated">길이 수정 자 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="180a1018d9273fb3a58e3f201de1ac8a5b80b58d" translate="yes" xml:space="preserve">
          <source>Length of the network prefix, in bits.</source>
          <target state="translated">네트워크 접두사의 길이 (비트)입니다.</target>
        </trans-unit>
        <trans-unit id="2c777c5db20151b1efdf932bcbcfebad8c2efc68" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume we initialize a table as in the example given above:</source>
          <target state="translated">위에서 주어진 예제에서와 같이 테이블을 초기화한다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="6b2e260007a1afb18b8a8c65668c11667d2da6f9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go back to the &lt;code&gt;Point&lt;/code&gt; class. We stored the x and y coordinates separated via semicolons as strings in SQLite.</source>
          <target state="translated">&lt;code&gt;Point&lt;/code&gt; 클래스 로 돌아 갑시다 . 세미콜론을 통해 분리 된 x 및 y 좌표를 SQLite에서 문자열로 저장했습니다.</target>
        </trans-unit>
        <trans-unit id="cbaa1370b8e486f03058ade144aaa5ce766835fc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s modify the above example and run two &lt;code&gt;say_after&lt;/code&gt; coroutines &lt;em&gt;concurrently&lt;/em&gt;:</source>
          <target state="translated">위의 예제를 수정하고 두 개의 &lt;code&gt;say_after&lt;/code&gt; 코 루틴을 &lt;em&gt;동시에&lt;/em&gt; 실행 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="a4e1bbd9caa78a7f8e196d6165ef1a43653ca2ce" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to add one to each country&amp;rsquo;s rank, and add an &lt;code&gt;updated&lt;/code&gt; attribute to the rank element:</source>
          <target state="translated">각 국가의 순위에 하나씩 추가하고 &lt;code&gt;updated&lt;/code&gt; 속성을 순위 요소 에 추가한다고 가정 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="78596e300b339fafdb3e77e4a728b5374ceee9c7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you wanted to get the version string for a package you&amp;rsquo;ve installed using &lt;code&gt;pip&lt;/code&gt;. We start by creating a virtual environment and installing something into it:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 를 사용하여 설치 한 패키지의 버전 문자열을 원한다고 가정 해 봅시다 . 우리는 가상 환경을 만들고 무언가를 설치하는 것으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d5ae7ea3899f66437fb7e1aa7d7675f030894483" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say your module is called &amp;ldquo;spam&amp;rdquo; and the module&amp;rsquo;s various natural language translation &lt;code&gt;.mo&lt;/code&gt; files reside in &lt;code&gt;/usr/share/locale&lt;/code&gt; in GNU &lt;strong&gt;gettext&lt;/strong&gt; format. Here&amp;rsquo;s what you would put at the top of your module:</source>
          <target state="translated">모듈이 &quot;스팸&quot;이고 모듈의 다양한 자연 언어 변환 &lt;code&gt;.mo&lt;/code&gt; 파일이 &lt;code&gt;/usr/share/locale&lt;/code&gt; 에 GNU &lt;strong&gt;gettext&lt;/strong&gt; 형식으로 존재 한다고 가정 해 봅시다 . 다음은 모듈 맨 위에 놓을 내용입니다.</target>
        </trans-unit>
        <trans-unit id="04863fa8b8b6c7cb4b82a58c35cc416cac590f6a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a very basic configuration file that looks like this:</source>
          <target state="translated">다음과 같은 매우 기본적인 구성 파일을 보자.</target>
        </trans-unit>
        <trans-unit id="5ecd68b4c43876be669cbe3592b08b9f4742b506" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. We create two instances of &lt;code&gt;cell&lt;/code&gt;, and let them point to each other, and finally follow the pointer chain a few times:</source>
          <target state="translated">해 봅시다. &lt;code&gt;cell&lt;/code&gt; 의 두 인스턴스를 만들고 서로 가리 키도록하고 마지막으로 몇 번 포인터 체인을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="22165bce4fbe52f349dc3381930ba2ac63b3a5cb" translate="yes" xml:space="preserve">
          <source>Letting your object adapt itself</source>
          <target state="translated">객체가 스스로 적응하도록</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="6460ec4ddfef711100217c8f9826fd70701f2f56" translate="yes" xml:space="preserve">
          <source>Level 2 halted</source>
          <target state="translated">정지 된 레벨 2</target>
        </trans-unit>
        <trans-unit id="60e40c81795763b2a8e72d44e5ad0f9199edc4bb" translate="yes" xml:space="preserve">
          <source>Level 2 not synchronized</source>
          <target state="translated">레벨 2 동기화되지 않음</target>
        </trans-unit>
        <trans-unit id="345040e0c10ed0376f2b7122fc4d53bc220369de" translate="yes" xml:space="preserve">
          <source>Level 3 halted</source>
          <target state="translated">정지 된 레벨 3</target>
        </trans-unit>
        <trans-unit id="d42164449cc05890457a5e7c44effb895c6def14" translate="yes" xml:space="preserve">
          <source>Level 3 reset</source>
          <target state="translated">레벨 3 리셋</target>
        </trans-unit>
        <trans-unit id="d7e796b80646b51566de3ce1d4e141f4e53a4ec8" translate="yes" xml:space="preserve">
          <source>Levels are internally integers (as they need to be compared in the logging logic). This function is used to convert between an integer level and the level name displayed in the formatted log output by means of the &lt;code&gt;%(levelname)s&lt;/code&gt; format specifier (see &lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord attributes&lt;/a&gt;).</source>
          <target state="translated">레벨은 내부적으로 정수입니다 (로깅 논리에서 비교해야 함). 이 함수는 &lt;code&gt;%(levelname)s&lt;/code&gt; 형식 지정자 를 사용하여 형식화 된 로그 출력에 표시되는 정수 레벨과 레벨 이름 사이를 변환하는 데 사용됩니다 ( &lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord 속성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2d6380feb8c38ce90806082088bb8c2c55e37b83" translate="yes" xml:space="preserve">
          <source>Lexical scanner for Python source code.</source>
          <target state="translated">Python 소스 코드 용 어휘 스캐너.</target>
        </trans-unit>
        <trans-unit id="392b455093b9fc95f72712c44846e250fe613928" translate="yes" xml:space="preserve">
          <source>LibreSSL &amp;gt;= 2.6.1 no longer supports NPN. The methods &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt;&lt;/a&gt; are not available.</source>
          <target state="translated">LibreSSL&amp;gt; = 2.6.1은 더 이상 NPN을 지원하지 않습니다. &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt; &lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt; &lt;/a&gt; 메소드를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="091cd70ef41f8240bd7c6a2fadb08e949b8160af" translate="yes" xml:space="preserve">
          <source>LibreSSL is a fork of OpenSSL 1.0.1. The ssl module has limited support for LibreSSL. Some features are not available when the ssl module is compiled with LibreSSL.</source>
          <target state="translated">LibreSSL은 OpenSSL 1.0.1의 포크입니다. ssl 모듈은 LibreSSL을 제한적으로 지원합니다. ssl 모듈이 LibreSSL로 컴파일 된 경우 일부 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8509e2f82d3801c911e6a35b8391debf72767e0a" translate="yes" xml:space="preserve">
          <source>LibreSSL support</source>
          <target state="translated">LibreSSL 지원</target>
        </trans-unit>
        <trans-unit id="d0454f8c64fa3e4e75abdf2e0c77b01474c4f39a" translate="yes" xml:space="preserve">
          <source>Licensed under the PSF License.</source>
          <target state="translated">PSF 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="b7f9700444d85258af9741b1a784bb114500ccb1" translate="yes" xml:space="preserve">
          <source>Lifts second and third stack item one position up, moves top down to position three.</source>
          <target state="translated">두 번째 및 세 번째 스택 항목을 한 위치 위로 들어 올리고 위에서 아래로 3 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="128b57bf19d7494cf2406f4c9ad03a774a89db95" translate="yes" xml:space="preserve">
          <source>Lifts second, third and forth stack items one position up, moves top down to position four.</source>
          <target state="translated">두 번째, 세 번째 및 네 번째 스택 항목을 한 위치 위로 들어 올리고 위에서 아래로 4 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="769c851ff34e416533a93e1c54c044431fc336ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt;, except that the header of the audio file is not updated.</source>
          <target state="translated">오디오 파일의 헤더가 업데이트되지 않는다는 점을 제외하고 &lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5fba8ee1e116abbedfbf12ff32b815bda67a39bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; 하지만, 인상 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를&lt;/a&gt; 서브 순서가 발견되지 않을 때.</target>
        </trans-unit>
        <trans-unit id="18e9f70e3e0c024db75f15d3f7632da5d6ffb708" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#bytes.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 &lt;em&gt;하위&lt;/em&gt; 시퀀스 &lt;em&gt;하위&lt;/em&gt; 를 찾을 수 없으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 가&lt;/a&gt; 발생합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4630498d706bd9a3292cd5d7227b98132b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#curses.window.erase&quot;&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/a&gt;, but also cause the whole window to be repainted upon next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#curses.window.erase&quot;&gt; &lt;code&gt;erase()&lt;/code&gt; &lt;/a&gt; 뿐만 아니라 전체 창에 다음 호출에 다시 그려되도록 &lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b526a2ea540c4c9b052eb050e52db56633e28e9c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity can be set with the &lt;code&gt;-v&lt;/code&gt; command-line switch or with the optional keyword argument &lt;em&gt;verbose&lt;/em&gt;.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt; 의 상세는 설정할 수 있습니다 &lt;code&gt;-v&lt;/code&gt; 명령 줄 스위치 또는 선택적 키워드 인수와 함께 &lt;em&gt;자세한&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c342450b7fbacddc0eb255ffe6a69e6f64b16e54" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, if a combination of &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; members results in no flags being set, the boolean evaluation is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt; 와 같이 &lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt; 멤버 조합으로 플래그가 설정되지 않으면 부울 평가는 &lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; 입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a363ed4c02cbe749a71b8d13e6dc4264d840b400" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;, but returns a tuple of the data connection and the expected size of the data. If the expected size could not be computed, &lt;code&gt;None&lt;/code&gt; will be returned as the expected size. &lt;em&gt;cmd&lt;/em&gt; and &lt;em&gt;rest&lt;/em&gt; means the same thing as in &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 데이터 연결의 튜플과 데이터의 예상 크기를 반환합니다. 예상 크기를 계산할 수 없으면 예상 크기로 &lt;code&gt;None&lt;/code&gt; 이 반환됩니다. &lt;em&gt;cmd&lt;/em&gt; 및 &lt;em&gt;rest&lt;/em&gt; 는 &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt; 와 동일한 의미 입니다.</target>
        </trans-unit>
        <trans-unit id="fed2080b9205761ae5ca1cb77a5a3913089b3943" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but consider plural forms. If a translation is found, apply the plural formula to &lt;em&gt;n&lt;/em&gt;, and return the resulting message (some languages have more than two plural forms). If no translation is found, return &lt;em&gt;singular&lt;/em&gt; if &lt;em&gt;n&lt;/em&gt; is 1; return &lt;em&gt;plural&lt;/em&gt; otherwise.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 하지만, 복수 형태를 고려한다. 번역이 발견되면 복수 수식을 &lt;em&gt;n에&lt;/em&gt; 적용하고 결과 메시지를 반환합니다 (일부 언어는 복수형이 두 개 이상임). 변환이 없으면 &lt;em&gt;n&lt;/em&gt; 이 1 이면 &lt;em&gt;특이&lt;/em&gt; 값을 반환합니다 . 반환 &lt;em&gt;복수&lt;/em&gt; 그렇지.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58099ee55f530af16bd98fd8c56efead48c30f96" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 하지만, 지정된에서 메시지를 검색 &lt;em&gt;도메인&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0cc1846db165a1893d5de2a35351debcae960593" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt; 하지만, 지정된에서 메시지를 검색 &lt;em&gt;도메인&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="68113eaaf87f00b3b1aab0ac0cfe07087577d9b5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.hash.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">다이제스트는 16 진수 문자열 만 포함하는 두 배 길이의 문자열 객체로 반환되는 것을 제외하고 &lt;a href=&quot;#hashlib.hash.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt; 와 유사 합니다. 전자 메일 또는 기타 이진이 아닌 환경에서 값을 안전하게 교환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6c8b81ebf600e9993da2ea7be87e2a91a7b9a0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.shake.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">다이제스트는 16 진수 문자열 만 포함하는 두 배 길이의 문자열 객체로 반환되는 것을 제외하고 &lt;a href=&quot;#hashlib.shake.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt; 와 유사 합니다. 전자 메일 또는 기타 이진이 아닌 환경에서 값을 안전하게 교환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="459945a9891e20c8dab70ede4f27fdf482e29c75" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hmac.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string twice the length containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">&lt;a href=&quot;#hmac.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt; 와 같이 digest 는 16 진수 만 포함하는 길이의 두 배인 문자열로 리턴됩니다. 전자 메일 또는 기타 이진이 아닌 환경에서 값을 안전하게 교환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d34ceda7fd93b02c772dcafa4d07c2be2558ca4c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, multiple reads may be issued to the underlying raw stream, unless the latter is interactive.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 , 기본 스트림이 대화식이 아닌 한 여러 개의 읽기가 기본 원시 스트림에 발행 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f98ad8c9320d72e100566d3e840ecba162bb7ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt;&lt;code&gt;DICT_UPDATE&lt;/code&gt;&lt;/a&gt; but raises an exception for duplicate keys.</source>
          <target state="translated">Like &lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt; &lt;code&gt;DICT_UPDATE&lt;/code&gt; &lt;/a&gt; but raises an exception for duplicate keys.</target>
        </trans-unit>
        <trans-unit id="d6711f9956856aade671cd7cf16a76fd76e19023" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.chmod&quot;&gt;&lt;code&gt;Path.chmod()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, the symbolic link&amp;rsquo;s mode is changed rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.chmod&quot;&gt; &lt;code&gt;Path.chmod()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 경로가 심볼릭 링크를 가리키는 경우 심볼릭 링크의 모드가 대상이 아닌 모드로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="c80f0d44ded10dcee28c34bbfff9e27a30074634" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, return the symbolic link&amp;rsquo;s information rather than its target&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;#pathlib.Path.stat&quot;&gt; &lt;code&gt;Path.stat()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 경로가 심볼릭 링크를 가리키는 경우 대상이 아닌 심볼릭 링크의 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76a03d0f714bbde9a8aae83d5eb4974b1956cc4b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;CHECKED_HASH&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content. However, Python will at runtime assume the &lt;code&gt;.pyc&lt;/code&gt; file is up to date and not validate the &lt;code&gt;.pyc&lt;/code&gt; against the source file at all.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;CHECKED_HASH&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;.pyc&lt;/code&gt; 파일은 소스 파일 내용의 해시를 포함한다. 그러나 파이썬은 런타임에 &lt;code&gt;.pyc&lt;/code&gt; 파일이 최신 상태 라고 가정 하고 소스 파일에 대해 &lt;code&gt;.pyc&lt;/code&gt; 의 유효성을 전혀 검사하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a425706908190a3e1f79c502de35dede3098f552" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding decoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#quopri.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 소스 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 받아들이고 해당 디코딩 된 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 반환 한다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="54098cdee562ba9f230b42f10f40d70cf45edbf7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. By default, it sends a &lt;code&gt;False&lt;/code&gt; value to &lt;em&gt;quotetabs&lt;/em&gt; parameter of the &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 소스 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 받아들이고 해당 인코딩 된 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 반환 한다는 점이 다릅니다 . 기본적으로 &lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; 함수 의 &lt;em&gt;quotetabs&lt;/em&gt; 매개 변수에 &lt;code&gt;False&lt;/code&gt; 값을 보냅니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b01d2bf404c98230b8ffd33055a42cf110e8594d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#signal.sigwaitinfo&quot;&gt;&lt;code&gt;sigwaitinfo()&lt;/code&gt;&lt;/a&gt;, but takes an additional &lt;em&gt;timeout&lt;/em&gt; argument specifying a timeout. If &lt;em&gt;timeout&lt;/em&gt; is specified as &lt;code&gt;0&lt;/code&gt;, a poll is performed. Returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if a timeout occurs.</source>
          <target state="translated">&lt;a href=&quot;#signal.sigwaitinfo&quot;&gt; &lt;code&gt;sigwaitinfo()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 &lt;em&gt;시간 초과를&lt;/em&gt; 지정 하는 추가 &lt;em&gt;시간 초과&lt;/em&gt; 인수를 사용합니다. &lt;em&gt;시간 종료&lt;/em&gt; 가 &lt;code&gt;0&lt;/code&gt; 으로 지정 되면 폴링이 수행됩니다. 시간 초과가 발생하면 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 을&lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9b428dc227aecdac34a941af1b4c9e314010ceaa" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; except it is the lowest supported version or &lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt;&lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">가장 낮은 지원 버전 또는 &lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt; &lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt; 를&lt;/a&gt; 제외하고 &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;SSLContext.maximum_version&lt;/code&gt; &lt;/a&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="034005e547ceeaab4b84301bb039ff5010f896a4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; 하지만, 인상 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 문자열이 발견되지 않을 때.</target>
        </trans-unit>
        <trans-unit id="fffbdca90984707f8b141e5ee4a5c9e6f40bdf60" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;#str.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 하위 문자열 &lt;em&gt;하위&lt;/em&gt; 를 찾을 수 없으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 가&lt;/a&gt; 발생합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2116b8fb57e3a35c142acd106bb28c5cbe992968" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, except that if placeholders are missing from &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt;, instead of raising a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception, the original placeholder will appear in the resulting string intact. Also, unlike with &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, any other appearances of the &lt;code&gt;$&lt;/code&gt; will simply return &lt;code&gt;$&lt;/code&gt; instead of raising &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt; , 자리가 누락 된 경우를 제외 &lt;em&gt;매핑&lt;/em&gt; 및 &lt;em&gt;kwds&lt;/em&gt; , 대신에 제기 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 를의&lt;/a&gt; 예외를 원래 자리 그대로 결과 문자열에 표시됩니다. 또한 &lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt; 와 달리 &lt;code&gt;$&lt;/code&gt; 의 다른 모양은 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 대신 &lt;code&gt;$&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ff608d7698e75a8850f2bbedb753f4de4a82170d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt;&lt;code&gt;getstatusoutput()&lt;/code&gt;&lt;/a&gt;, except the exit code is ignored and the return value is a string containing the command&amp;rsquo;s output. Example:</source>
          <target state="translated">&lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt; &lt;code&gt;getstatusoutput()&lt;/code&gt; &lt;/a&gt; 처럼 , 종료 코드를 무시하고 반환 값이 명령의 출력을 포함하는 문자열입니다 제외. 예:</target>
        </trans-unit>
        <trans-unit id="09325b0b81777f3949622af36b1caae2105c533a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; but converts to local time. If &lt;em&gt;secs&lt;/em&gt; is not provided or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the current time as returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; is used. The dst flag is set to &lt;code&gt;1&lt;/code&gt; when DST applies to the given time.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt; 현지 시간으로 만 변환합니다. 경우 &lt;em&gt;초이&lt;/em&gt; 제공되지 않거나 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; , 반환 된 현재 시간 &lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt; 사용되지 않는다. DST가 지정된 시간에 적용되면 dst 플래그는 &lt;code&gt;1&lt;/code&gt; 로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="e80bfe37b04d21e1316c6e6f6ac9868e0d1c6f93" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;, the &lt;em&gt;readline&lt;/em&gt; argument is a callable returning a single line of input. However, &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt; expects &lt;em&gt;readline&lt;/em&gt; to return a str object rather than bytes.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt; 상기 &lt;em&gt;의 readline&lt;/em&gt; 인수가 입력 한 선을 반환하는 호출이다. 그러나 &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt; 는 &lt;em&gt;readline&lt;/em&gt; 이 바이트가 아닌 str 객체를 반환 할 것으로 예상 합니다.</target>
        </trans-unit>
        <trans-unit id="1e25dc1f7a41401d6d2742977c0ec0eb4a4dab04" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the string representation of the raised exception. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 &lt;em&gt;정규 표현식&lt;/em&gt; 이 발생한 예외의 문자열 표현과 일치 하는지 테스트합니다 . &lt;em&gt;정규식&lt;/em&gt; 은 정규 표현식 객체이거나 &lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt; 에서 사용하기에 적합한 정규 표현식을 포함하는 문자열 일 수 있습니다. . 예 :</target>
        </trans-unit>
        <trans-unit id="88c91522876cdaf737cb13dc3682f59d6bfc40fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the message of the triggered warning. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 트리거 된 경고 메시지에서 &lt;em&gt;정규식이&lt;/em&gt; 일치 하는지 테스트합니다 . &lt;em&gt;정규식&lt;/em&gt; 정규식 객체 또는하여 사용하기에 적합한 정규 표현이 포함 된 문자열 일 수있다 &lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt; . 예:</target>
        </trans-unit>
        <trans-unit id="71a6e3160e25bc7af2abbb4914c6e0c300c2d496" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object rather than a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, and does not perform string-to-bytes encoding.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt; 하지만, 받아 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; (A)보다 오히려 객체 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 을&lt;/a&gt; 하고, 문자열에이 - 바이트 인코딩 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="33be7d39b7d017d814cc31038c4a163e3894971c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces by plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 URL로 이동하기 위해 쿼리 문자열을 작성할 때 HTML 양식 값을 인용하는 데 필요한대로 공백을 더하기 부호로 바꿉니다. &lt;em&gt;안전에&lt;/em&gt; 포함되어 있지 않으면 원래 문자열의 더하기 부호가 이스케이프됩니다 . 또한 &lt;em&gt;안전한&lt;/em&gt; 기본값은 &lt;code&gt;'/'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7dde13a692c60d9a200b59f535ca756e81d2715" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces with plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;, but also replace spaces with plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="775c6c98d7b915a29eecf32e7d3a27905fc4598c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs by spaces, as required for unquoting HTML form values.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 HTML 양식 값의 인용을 해제하는 데 필요한 경우 더하기 부호를 공백으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="7537c6b95afac876f7603d1b2014408081a6f91e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs with spaces, as required for unquoting HTML form values.</source>
          <target state="translated">Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;, but also replace plus signs with spaces, as required for unquoting HTML form values.</target>
        </trans-unit>
        <trans-unit id="f1cf5e7750804a8602426bc1702f1b0873f828cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; defines a set of events that are generated by an analysis of socket conditions after a &lt;code&gt;select()&lt;/code&gt; call. Once the polling loop has been started the &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s methods are called by the event-processing framework with no action on the part of the programmer.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; 는&lt;/a&gt; 후 소켓 조건의 분석에 의해 생성되는 이벤트 집합 정의 &lt;code&gt;select()&lt;/code&gt; 호출. 폴링 루프가 시작되면 &lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt; 오브젝트의 메소드는 프로그래머 측의 조치없이 이벤트 처리 프레임 워크에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ccba539e91e292f5838b503000ab1e741be5ca28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; except that the elements of the &lt;em&gt;iterable&lt;/em&gt; are expected to be iterables that are unpacked as arguments.</source>
          <target state="translated">&lt;em&gt;iterable&lt;/em&gt; 의 요소가 인수로 압축 해제 된 iterable이어야 한다는 점을 제외하고 &lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 과 유사 합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="779b5a441a3fe2beee9d18262802a4b2251c9ae8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, this function must be invoked in the main thread.</source>
          <target state="translated">&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt; 과 마찬가지로이 함수는 기본 스레드에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="4567b33a2aaefbaca856883085dae36ad2796c3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;connect(address)&lt;/code&gt;, but return an error indicator instead of raising an exception for errors returned by the C-level &lt;code&gt;connect()&lt;/code&gt; call (other problems, such as &amp;ldquo;host not found,&amp;rdquo; can still raise exceptions). The error indicator is &lt;code&gt;0&lt;/code&gt; if the operation succeeded, otherwise the value of the &lt;code&gt;errno&lt;/code&gt; variable. This is useful to support, for example, asynchronous connects.</source>
          <target state="translated">마찬가지로 &lt;code&gt;connect(address)&lt;/code&gt; ,하지만 C 수준에 의해 반환 된 오류에 대한 예외 올리는 대신 오류 표시를 반환 &lt;code&gt;connect()&lt;/code&gt; (여전히 예외를 올릴 수있다 &quot;호스트를 찾을 수 없음&quot;과 같은 다른 문제) 호출을. 조작이 성공하면 오류 표시기는 &lt;code&gt;0&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;errno&lt;/code&gt; 변수 의 값입니다 . 예를 들어 비동기 연결을 지원하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6e4099930d90cd8e644b9d1a35ce1781b7e55be5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;formatdate&lt;/code&gt;, but the input is a &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. If it is a naive datetime, it is assumed to be &amp;ldquo;UTC with no information about the source timezone&amp;rdquo;, and the conventional &lt;code&gt;-0000&lt;/code&gt; is used for the timezone. If it is an aware &lt;code&gt;datetime&lt;/code&gt;, then the numeric timezone offset is used. If it is an aware timezone with offset zero, then &lt;em&gt;usegmt&lt;/em&gt; may be set to &lt;code&gt;True&lt;/code&gt;, in which case the string &lt;code&gt;GMT&lt;/code&gt; is used instead of the numeric timezone offset. This provides a way to generate standards conformant HTTP date headers.</source>
          <target state="translated">&lt;code&gt;formatdate&lt;/code&gt; 와 비슷 하지만 입력은 &lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 인스턴스입니다. 순진한 날짜 시간 인 경우 &quot;원본 시간대에 대한 정보가없는 UTC&quot;인 것으로 가정하고 표준 시간대에 대해 &lt;code&gt;-0000&lt;/code&gt; 을 사용합니다. 인식하는 &lt;code&gt;datetime&lt;/code&gt; 인 경우 숫자 시간대 오프셋이 사용됩니다. 오프셋이 0 인 인식 시간대 인 경우 &lt;em&gt;usegmt&lt;/em&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정할 수 있습니다 .이 경우 숫자 시간대 오프셋 대신 문자열 &lt;code&gt;GMT&lt;/code&gt; 가 사용됩니다. 이는 표준 준수 HTTP 날짜 헤더를 생성하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e9a1056335b6d3c9144b41d21fddbcb8e38867e3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;max(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">컨텍스트 반올림 규칙이 반환되기 전에 적용되고 &lt;code&gt;NaN&lt;/code&gt; 값이 시그널링되거나 무시 된다는 점을 제외하고 &lt;code&gt;max(self, other)&lt;/code&gt; 와 유사 합니다 (컨텍스트 에 따라 그리고 신호 또는 조용한 지 여부에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="117f781381f825f29b7d7c7a130438f9e5b689da" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;min(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">컨텍스트 반올림 규칙이 리턴되기 전에 적용되고 &lt;code&gt;NaN&lt;/code&gt; 값이 시그널링되거나 무시 된다는 점을 제외하고는 &lt;code&gt;min(self, other)&lt;/code&gt; 과 유사 합니다 (컨텍스트 에 따라 그리고 신호 또는 조용한 지 여부에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="7679621dea96b42673a5ec004c0be808374679d1" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes the current Gregorian calendar extended in both directions; like a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes there are exactly 3600*24 seconds in every day.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 객체 와 마찬가지로 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 은 현재 Gregorian 달력이 양방향으로 확장 된 것으로 가정합니다. &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체 와 마찬가지로 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 은 매일 정확히 3600 * 24 초가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="10db946781916518b11ce546b2af0588ae19c249" translate="yes" xml:space="preserve">
          <source>Like all decorators, it is also possible to call &lt;code&gt;staticmethod&lt;/code&gt; as a regular function and do something with its result. This is needed in some cases where you need a reference to a function from a class body and you want to avoid the automatic transformation to instance method. For these cases, use this idiom:</source>
          <target state="translated">모든 데코레이터와 마찬가지로 &lt;code&gt;staticmethod&lt;/code&gt; 를 일반 함수로 호출 하고 그 결과로 무언가를 할 수도 있습니다. 이것은 클래스 본문에서 함수에 대한 참조가 필요하고 인스턴스 메소드로 자동 변환하지 않으려는 경우에 필요합니다. 이 경우이 관용구를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="870a5dd7d5496171ef6a3e2aaab1057264f79b83" translate="yes" xml:space="preserve">
          <source>Like function objects, bound method objects support getting arbitrary attributes. However, since method attributes are actually stored on the underlying function object (&lt;code&gt;meth.__func__&lt;/code&gt;), setting method attributes on bound methods is disallowed. Attempting to set an attribute on a method results in an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; being raised. In order to set a method attribute, you need to explicitly set it on the underlying function object:</source>
          <target state="translated">함수 객체와 마찬가지로 바인딩 된 메소드 객체는 임의의 속성 가져 오기를 지원합니다. 그러나 메소드 속성은 실제로 기본 함수 오브젝트 ( &lt;code&gt;meth.__func__&lt;/code&gt; ) 에 저장되므로 바인딩 된 메소드에 메소드 속성을 설정할 수 없습니다. 메소드에서 속성을 설정하려고 시도하면 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 메소드 속성을 설정하려면 기본 함수 객체에서 메소드 속성을 명시 적으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1583a91516920ea6d292abedef0a0d4133d1f95d" translate="yes" xml:space="preserve">
          <source>Like other collections, sets support &lt;code&gt;x in set&lt;/code&gt;, &lt;code&gt;len(set)&lt;/code&gt;, and &lt;code&gt;for x in
set&lt;/code&gt;. Being an unordered collection, sets do not record element position or order of insertion. Accordingly, sets do not support indexing, slicing, or other sequence-like behavior.</source>
          <target state="translated">다른 컬렉션과 마찬가지로 세트는 &lt;code&gt;x in set&lt;/code&gt; , &lt;code&gt;len(set)&lt;/code&gt; 및 &lt;code&gt;for x in set&lt;/code&gt; 합니다. 순서가없는 컬렉션이기 때문에 집합은 요소 위치 나 삽입 순서를 기록하지 않습니다. 따라서 세트는 인덱싱, 슬라이싱 또는 기타 시퀀스와 유사한 동작을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="619848ebfcfc900a4a75f4e75c5ae31dd1e46688" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#pdbcommand-p&quot;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/a&gt; command, except the value of the expression is pretty-printed using the &lt;a href=&quot;pprint#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#pdbcommand-p&quot;&gt; &lt;code&gt;p&lt;/code&gt; &lt;/a&gt; 명령 과 마찬가지로 표현식의 값은 &lt;a href=&quot;pprint#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 예쁘게 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f637d2b0e3d0bc308b91dbb540751ed9989d02f" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; function automatically assigns its target to the current thread.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt; 함수는 대상을 현재 스레드에 자동으로 할당합니다.</target>
        </trans-unit>
        <trans-unit id="16f0b939506acc96b15c52be3f403f4c577d5555" translate="yes" xml:space="preserve">
          <source>Limit on the number of characters in the representation of the string. Note that the &amp;ldquo;normal&amp;rdquo; representation of the string is used as the character source: if escape sequences are needed in the representation, these may be mangled when the representation is shortened. The default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">문자열 표현에서 문자 수 제한. 문자열의 &quot;정상&quot;표현이 문자 소스로 사용됩니다. 표현에 이스케이프 시퀀스가 ​​필요한 경우 표현이 단축 될 때 이스케이프가 엉망이 될 수 있습니다. 기본값은 &lt;code&gt;30&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="e0da5f32d1b078b4674313813ea6b1be4783c1f3" translate="yes" xml:space="preserve">
          <source>Limits on the number of entries represented for the named object type. The default is &lt;code&gt;4&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt;&lt;code&gt;maxdict&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;5&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt;&lt;code&gt;maxarray&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;6&lt;/code&gt; for the others.</source>
          <target state="translated">명명 된 객체 유형에 대해 표시되는 항목 수를 제한합니다. 기본값은 &lt;code&gt;4&lt;/code&gt; 에 대한 &lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt; &lt;code&gt;maxdict&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;5&lt;/code&gt; 에 대한 &lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt; &lt;code&gt;maxarray&lt;/code&gt; &lt;/a&gt; , 그리고 &lt;code&gt;6&lt;/code&gt; 다른 사람을 위해.</target>
        </trans-unit>
        <trans-unit id="5cba8dfc960db4abee81cde524f36a4c3a10d9d1" translate="yes" xml:space="preserve">
          <source>Line 5 and 6 correspond to the arguments of the method &lt;code&gt;Screen.screensize()&lt;/code&gt;.</source>
          <target state="translated">5 행과 6 행은 &lt;code&gt;Screen.screensize()&lt;/code&gt; 메소드의 인수에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="2abd199292d800fa3a80bd3c37bdfccc94f580e6" translate="yes" xml:space="preserve">
          <source>Line Feed</source>
          <target state="translated">줄 바꿈</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">선 구분자</target>
        </trans-unit>
        <trans-unit id="2e24c77fd923a41a63ac5dc6de543f323222cd3c" translate="yes" xml:space="preserve">
          <source>Line Tabulation</source>
          <target state="translated">라인 표</target>
        </trans-unit>
        <trans-unit id="b6aab80f18f5fed0b9153b69b8095064354fb00e" translate="yes" xml:space="preserve">
          <source>Line buffer</source>
          <target state="translated">라인 버퍼</target>
        </trans-unit>
        <trans-unit id="4f23e2d073d67acea8f123b42f84af035e27248d" translate="yes" xml:space="preserve">
          <source>Line feed</source>
          <target state="translated">줄 바꿈</target>
        </trans-unit>
        <trans-unit id="562aae5d9e971e10b07ca699f4f04a970c307d4c" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;) of the filter. If &lt;em&gt;lineno&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the filter matches any line number.</source>
          <target state="translated">필터의 줄 번호 ( &lt;code&gt;int&lt;/code&gt; )입니다. 경우 &lt;em&gt;LINENO가&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; , 필터는 행 번호와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="aeb38dd24a3a71da272f1f779d0387791de3d81e" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">줄 번호 ( &lt;code&gt;int&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2ff2293358a32428ec942d4555635cc880cd4d12" translate="yes" xml:space="preserve">
          <source>Line number at which an error occurred.</source>
          <target state="translated">오류가 발생한 줄 번호.</target>
        </trans-unit>
        <trans-unit id="b4da991f94a24c99137fffe4424265997efd6ed0" translate="yes" xml:space="preserve">
          <source>Line number on which the error was detected. The first line is numbered &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">오류가 감지 된 줄 번호 첫 번째 줄의 번호는 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69f2575cae166f7e141a5f9bfed26ae7b3477899" translate="yes" xml:space="preserve">
          <source>Line-endings are implemented using the codec&amp;rsquo;s &lt;a href=&quot;#codecs.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method and are included in the list entries if &lt;em&gt;keepends&lt;/em&gt; is true.</source>
          <target state="translated">줄 끝은 코덱의 &lt;a href=&quot;#codecs.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 구현되며 &lt;em&gt;keepends&lt;/em&gt; 가 true 인 경우 목록 항목에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="302f1117893400c611682ce09d6a46e296f097b2" translate="yes" xml:space="preserve">
          <source>Lines are returned with any newlines intact, which means that the last line in a file may not have one.</source>
          <target state="translated">줄 바꿈은 그대로 유지됩니다. 즉, 파일의 마지막 줄에 줄이 없을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf75ffeff8d12fdd995dd6674c85fc5ee7a38554" translate="yes" xml:space="preserve">
          <source>Lines are separated by calling &lt;code&gt;text.splitlines(True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;text.splitlines(True)&lt;/code&gt; 를 호출하여 행을 구분합니다 .</target>
        </trans-unit>
        <trans-unit id="b6185854ec82c5419438640c3884931bbe6dbd4b" translate="yes" xml:space="preserve">
          <source>Lines beginning with &amp;lsquo;&lt;code&gt;?&lt;/code&gt;&amp;rsquo; attempt to guide the eye to intraline differences, and were not present in either input sequence. These lines can be confusing if the sequences contain tab characters.</source>
          <target state="translated">' &lt;code&gt;?&lt;/code&gt; 로 시작하는 줄 눈을 인라인 차이로 유도하려고 시도했지만 입력 시퀀스에는 없었습니다. 시퀀스에 탭 문자가 포함되어 있으면 이러한 행이 혼동 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1119cda9075f6ea9b6d77bc2c527e01b0505ac69" translate="yes" xml:space="preserve">
          <source>Lines containing only whitespace are ignored in the input and normalized to a single newline character in the output.</source>
          <target state="translated">공백 만 포함 된 행은 입력에서 무시되고 출력에서 ​​단일 개행 문자로 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="8f51211d5882b7b1d7f5bacb8c562304994eec22" translate="yes" xml:space="preserve">
          <source>Link has been severed</source>
          <target state="translated">링크가 끊어졌습니다</target>
        </trans-unit>
        <trans-unit id="2e5686329f75b06ffaef20d4254ffaa821209705" translate="yes" xml:space="preserve">
          <source>Link number out of range</source>
          <target state="translated">링크 번호가 범위를 벗어남</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="0a2eda05e77dfe3f8ca694538c7808e144972c9f" translate="yes" xml:space="preserve">
          <source>Linux extended attributes</source>
          <target state="translated">Linux 확장 속성</target>
        </trans-unit>
        <trans-unit id="65238285b798b8c333fd4b7618bf5f86a3d5d9d0" translate="yes" xml:space="preserve">
          <source>Linux-only support for TIPC is available using the &lt;code&gt;AF_TIPC&lt;/code&gt; address family. TIPC is an open, non-IP based networked protocol designed for use in clustered computer environments. Addresses are represented by a tuple, and the fields depend on the address type. The general tuple form is &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt;, where:</source>
          <target state="translated">TIPC에 대한 Linux 전용 지원은 &lt;code&gt;AF_TIPC&lt;/code&gt; 주소 계열을 사용하여 사용할 수 있습니다 . TIPC는 클러스터 컴퓨터 환경에서 사용하도록 설계된 개방형 비 IP 기반 네트워크 프로토콜입니다. 주소는 튜플로 표시되며 필드는 주소 유형에 따라 다릅니다. 일반적인 튜플 형식은 &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt; . 여기서 :</target>
        </trans-unit>
        <trans-unit id="6756f8fa45c66ce66565b44aeff373a153af3d17" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">&lt;code&gt;MLSD&lt;/code&gt; 명령 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt; ) 을 사용하여 표준화 된 형식으로 디렉토리를 나열하십시오 . 경우 &lt;em&gt;경로가&lt;/em&gt; 생략 현재 디렉토리가 가정한다. &lt;em&gt;facts&lt;/em&gt; 는 원하는 정보 유형을 나타내는 문자열 목록입니다 (예 : &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ). 경로에서 발견 된 모든 파일에 대해 두 요소의 튜플을 생성하는 생성기 객체를 반환합니다. 첫 번째 요소는 파일 이름이고 두 번째 요소는 파일 이름에 대한 사실을 포함하는 사전입니다. 이 사전의 내용은 &lt;em&gt;facts&lt;/em&gt; 인수에 의해 제한 될 수 있지만 서버는 요청 된 모든 facts를 리턴한다고 보장하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="52f8f2e23f573d0eb68d4dbc3d2fd2a7d074f68f" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</target>
        </trans-unit>
        <trans-unit id="12fba910c861b6473d219e30cab4ab0ddbb8c795" translate="yes" xml:space="preserve">
          <source>List all source code for the current function or frame. Interesting lines are marked as for &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 기능 또는 프레임에 대한 모든 소스 코드를 나열하십시오. 재미있는 줄은 &lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="99c1d888dd84bd6bd4003b76aee6da2697bb0b77" translate="yes" xml:space="preserve">
          <source>List and set comprehensions, generator expressions, and dictionary comprehensions. &lt;code&gt;elt&lt;/code&gt; (or &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;) is a single node representing the part that will be evaluated for each item.</source>
          <target state="translated">List and set comprehensions, generator expressions, and dictionary comprehensions. &lt;code&gt;elt&lt;/code&gt; (or &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; ) is a single node representing the part that will be evaluated for each item.</target>
        </trans-unit>
        <trans-unit id="d70266b0617125a334eb682496c42690e2f3d04c" translate="yes" xml:space="preserve">
          <source>List files in a tarfile.</source>
          <target state="translated">tarfile에 파일을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="5c622661583046960e0bb8731c1346ad7495dcc3" translate="yes" xml:space="preserve">
          <source>List files in a zipfile.</source>
          <target state="translated">zip 파일로 파일을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="fa6a27ccedf9df11c9e8acab0ae9e0767d6f65fc" translate="yes" xml:space="preserve">
          <source>List mailbox names in &lt;em&gt;directory&lt;/em&gt; matching &lt;em&gt;pattern&lt;/em&gt;. &lt;em&gt;directory&lt;/em&gt; defaults to the top-level mail folder, and &lt;em&gt;pattern&lt;/em&gt; defaults to match anything. Returned data contains a list of &lt;code&gt;LIST&lt;/code&gt; responses.</source>
          <target state="translated">&lt;em&gt;디렉토리&lt;/em&gt; 일치 &lt;em&gt;패턴으로&lt;/em&gt; 메일 함 이름을 나열하십시오 . &lt;em&gt;디렉토리&lt;/em&gt; 는 최상위 메일 폴더로 기본 설정 되며 &lt;em&gt;패턴은&lt;/em&gt; 기본적으로 모든 항목과 일치합니다. 리턴 된 데이터는 &lt;code&gt;LIST&lt;/code&gt; 응답 목록을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="800331fecdd25e9674ace0cfb84a1e1381cf18b8" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; objects the server is listening on.</source>
          <target state="translated">서버가 청취중인 &lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; 객체의 목록</target>
        </trans-unit>
        <trans-unit id="4bbdd0f3d0f330c45f8c92c42b67ed3353e81dd6" translate="yes" xml:space="preserve">
          <source>List of Unix shell-style wildcard test name patterns that test methods have to match to be included in test suites (see &lt;code&gt;-v&lt;/code&gt; option).</source>
          <target state="translated">테스트 스위트에 포함하기 위해 테스트 메소드가 일치해야하는 Unix 쉘 스타일 와일드 카드 테스트 이름 패턴 목록 ( &lt;code&gt;-v&lt;/code&gt; 옵션 참조 ).</target>
        </trans-unit>
        <trans-unit id="57db87f824923c6a6e85c41dda54ae743e739bdc" translate="yes" xml:space="preserve">
          <source>List of all features.</source>
          <target state="translated">모든 기능 목록.</target>
        </trans-unit>
        <trans-unit id="da2bc44930e06125e26f0c874633811a8e00c51a" translate="yes" xml:space="preserve">
          <source>List of all known property names.</source>
          <target state="translated">알려진 모든 속성 이름 목록</target>
        </trans-unit>
        <trans-unit id="faa04fad93c99ece21b96a05b9ce1aa911971898" translate="yes" xml:space="preserve">
          <source>List of directories ignored by &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">기본적 으로 &lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; 에&lt;/a&gt; 의해 무시되는 디렉토리 목록 .</target>
        </trans-unit>
        <trans-unit id="c9d8bdccc79a7bea28f18186c6779f053049d3e4" translate="yes" xml:space="preserve">
          <source>List of modes (most common values) of discrete or nomimal data.</source>
          <target state="translated">이산 또는 공칭 데이터의 모드 (가장 일반적인 값) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2a6187ce53594c8b41f9b2648356dcd783d1eb99" translate="yes" xml:space="preserve">
          <source>List of strings for where to find submodules, if a package (&lt;code&gt;None&lt;/code&gt; otherwise).</source>
          <target state="translated">패키지 인 경우 하위 모듈을 찾을 수있는 문자열 목록입니다 ( 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f7e2b9e05ac716cd69cc94c5137d7e7daf29a300" translate="yes" xml:space="preserve">
          <source>List of supported TLS channel binding types. Strings in this list can be used as arguments to &lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt;&lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지원되는 TLS 채널 바인딩 유형 목록 이리스트의 캐릭터 라인은 &lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt; &lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt; &lt;/a&gt; 인수로서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfd0c4da7e055fb85f316a12860955e2e611d96f" translate="yes" xml:space="preserve">
          <source>List of type map file names commonly installed. These files are typically named &lt;code&gt;mime.types&lt;/code&gt; and are installed in different locations by different packages.</source>
          <target state="translated">일반적으로 설치되는 유형 맵 파일 이름 목록 이러한 파일의 이름은 일반적으로 &lt;code&gt;mime.types&lt;/code&gt; 이며 다른 패키지로 다른 위치에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="252590ef4c3c27b7d91456da231c614540d98ed0" translate="yes" xml:space="preserve">
          <source>List source code for the current file. Without arguments, list 11 lines around the current line or continue the previous listing. With &lt;code&gt;.&lt;/code&gt; as argument, list 11 lines around the current line. With one argument, list 11 lines around at that line. With two arguments, list the given range; if the second argument is less than the first, it is interpreted as a count.</source>
          <target state="translated">현재 파일의 소스 코드를 나열합니다. 인수없이 현재 줄 주위에 11 줄을 나열하거나 이전 목록을 계속합니다. 로 &lt;code&gt;.&lt;/code&gt; 인수로 현재 줄 주변에 11 줄을 나열하십시오. 하나의 인수로 해당 줄에 11 줄을 나열하십시오. 두 개의 인수로 주어진 범위를 나열하십시오. 두 번째 인수가 첫 번째 인수보다 작 으면 카운트로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="b76073e5ceffc46ca02895c2b2a65a33093b7119" translate="yes" xml:space="preserve">
          <source>List subscribed mailbox names in directory matching pattern. &lt;em&gt;directory&lt;/em&gt; defaults to the top level directory and &lt;em&gt;pattern&lt;/em&gt; defaults to match any mailbox. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">가입 한 사서함 이름을 디렉토리 일치 패턴으로 나열합니다. &lt;em&gt;directory는&lt;/em&gt; 기본적으로 최상위 디렉터리이고 &lt;em&gt;pattern은&lt;/em&gt; 모든 사서함과 일치합니다. 반환 된 데이터는 메시지 부분 봉투와 데이터의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="14794f6edf5dd70913a0dc13a15f54d846587e12" translate="yes" xml:space="preserve">
          <source>Listen for connections made to the socket. The &lt;em&gt;backlog&lt;/em&gt; argument specifies the maximum number of queued connections and should be at least 1; the maximum value is system-dependent (usually 5).</source>
          <target state="translated">소켓에 대한 연결을 청취하십시오. &lt;em&gt;잔고&lt;/em&gt; 인수 대기 최대 연결 개수를 지정하고 적어도 하나이어야한다; 최대 값은 시스템에 따라 다릅니다 (일반적으로 5).</target>
        </trans-unit>
        <trans-unit id="59788472d65c6cb0cdf054e71f5b32c462ddafe5" translate="yes" xml:space="preserve">
          <source>Listener objects have the following read-only properties:</source>
          <target state="translated">리스너 객체에는 다음과 같은 읽기 전용 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ca23c866857250c984c4db4e11455584d8f239e" translate="yes" xml:space="preserve">
          <source>Listeners and Clients</source>
          <target state="translated">청취자와 고객</target>
        </trans-unit>
        <trans-unit id="98711f268cb1239cc73201ecb0f34f28471e2e46" translate="yes" xml:space="preserve">
          <source>Listing Python source files in this directory tree:</source>
          <target state="translated">이 디렉토리 트리에 Python 소스 파일 나열 :</target>
        </trans-unit>
        <trans-unit id="78d2fd98237accde24de6f88a6a1f729f5aa17b3" translate="yes" xml:space="preserve">
          <source>Listing subdirectories:</source>
          <target state="translated">하위 디렉토리 나열 :</target>
        </trans-unit>
        <trans-unit id="a00f1c75e1ab8588a44ac67163d8544008e2dedd" translate="yes" xml:space="preserve">
          <source>Listing the files in the resulting archive gives us:</source>
          <target state="translated">Listing the files in the resulting archive gives us:</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="d704786c02f4fcaf4a2e891ff8e18bad45ac10fd" translate="yes" xml:space="preserve">
          <source>Lists are mutable sequences, typically used to store collections of homogeneous items (where the precise degree of similarity will vary by application).</source>
          <target state="translated">목록은 일반적으로 동종 항목의 컬렉션을 저장하는 데 사용되는 변경 가능한 시퀀스입니다 (정확한 유사도는 응용 프로그램에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="c32ca8f5ba63672fe4a8182a4b217ecc9b9eb14c" translate="yes" xml:space="preserve">
          <source>Lists implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; and &lt;a href=&quot;#typesseq-mutable&quot;&gt;mutable&lt;/a&gt; sequence operations. Lists also provide the following additional method:</source>
          <target state="translated">리스트는 &lt;a href=&quot;#typesseq-common&quot;&gt;공통&lt;/a&gt; 적이고 &lt;a href=&quot;#typesseq-mutable&quot;&gt;변경 가능한&lt;/a&gt; 시퀀스 연산을 모두 구현합니다 . 목록은 다음과 같은 추가 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fc6230b3f52b454e7bfc16f6d295dbd8a3f5614d" translate="yes" xml:space="preserve">
          <source>Lists may be constructed in several ways:</source>
          <target state="translated">리스트는 여러 가지 방법으로 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4b615b7707ee69f129d6b1543d98fed8ea5861c" translate="yes" xml:space="preserve">
          <source>Lists the names of all open windows; select one to bring it to the foreground (deiconifying it if necessary).</source>
          <target state="translated">열려있는 모든 창의 이름을 나열합니다. 하나를 선택하여 전경으로 가져옵니다 (필요한 경우 아이콘을 해제)</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="2b17c112445a7674729b2ac41ba9f07dc0cb6826" translate="yes" xml:space="preserve">
          <source>Load MIME information from a file named &lt;em&gt;filename&lt;/em&gt;. This uses &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; to parse the file.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 &lt;em&gt;파일&lt;/em&gt; 에서 MIME 정보를로드하십시오 . &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 파일을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="792824da62ac18b629f8e6b4e61bfdae14c5fd20" translate="yes" xml:space="preserve">
          <source>Load MIME type information from an open file &lt;em&gt;fp&lt;/em&gt;. The file must have the format of the standard &lt;code&gt;mime.types&lt;/code&gt; files.</source>
          <target state="translated">열린 파일 &lt;em&gt;fp&lt;/em&gt; 에서 MIME 유형 정보를로드하십시오 . 파일은 표준 &lt;code&gt;mime.types&lt;/code&gt; 파일 형식이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="0fd53188415ccfe79d44d4578cf2a8334a3d823f" translate="yes" xml:space="preserve">
          <source>Load MIME type information from the Windows registry.</source>
          <target state="translated">Windows 레지스트리에서 MIME 유형 정보를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="d2ab95731c56b9a24f873b538755b0e5ea0d2829" translate="yes" xml:space="preserve">
          <source>Load a plist from a bytes object. See &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">bytes 객체에서 plist를로드하십시오. 키워드 인수에 대한 설명은 &lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b08eb074a7b195edaa59eaed1cf5e8727d68fee" translate="yes" xml:space="preserve">
          <source>Load a private key and the corresponding certificate. The &lt;em&gt;certfile&lt;/em&gt; string must be the path to a single file in PEM format containing the certificate as well as any number of CA certificates needed to establish the certificate&amp;rsquo;s authenticity. The &lt;em&gt;keyfile&lt;/em&gt; string, if present, must point to a file containing the private key in. Otherwise the private key will be taken from &lt;em&gt;certfile&lt;/em&gt; as well. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information on how the certificate is stored in the &lt;em&gt;certfile&lt;/em&gt;.</source>
          <target state="translated">개인 키와 해당 인증서를로드하십시오. &lt;em&gt;certfile의&lt;/em&gt; 문자열은 인증서뿐만 아니라 인증서의 신뢰성을 구축하는 데 필요한 CA 인증서의 수를 포함하는 PEM 형식의 단일 파일에 대한 경로 여야합니다. &lt;em&gt;키 파일&lt;/em&gt; 문자열이 존재하는 경우에 개인 키를 포함하는 파일을 가리켜 야합니다. 그렇지 않으면 개인 키에서 이동합니다 &lt;em&gt;certfile&lt;/em&gt; 뿐만 아니라. 인증서가 &lt;em&gt;certfile에&lt;/em&gt; 저장되는 방법에 대한 자세한 정보 는 &lt;a href=&quot;#ssl-certificates&quot;&gt;인증서&lt;/a&gt; 설명을 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0df7eb62baff888bf529433e660c5a399082980" translate="yes" xml:space="preserve">
          <source>Load a readline history file, and append it to the history list. The default filename is &lt;code&gt;~/.history&lt;/code&gt;. This calls &lt;code&gt;read_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">리드 라인 히스토리 파일을로드하고 히스토리 목록에 추가하십시오. 기본 파일 이름은 &lt;code&gt;~/.history&lt;/code&gt; 입니다. 기본 라이브러리에서 &lt;code&gt;read_history()&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="8f58087190f63144704a753ee6b80f3cc73b183c" translate="yes" xml:space="preserve">
          <source>Load a set of &amp;ldquo;certification authority&amp;rdquo; (CA) certificates used to validate other peers&amp;rsquo; certificates when &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is other than &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. At least one of &lt;em&gt;cafile&lt;/em&gt; or &lt;em&gt;capath&lt;/em&gt; must be specified.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt; 가 CERT_NONE 이 아닌 경우 다른 피어의 인증서를 확인하는 데 사용되는 일련의 &quot;인증 기관&quot;(CA) 인증서를 &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; &lt;/a&gt; . &lt;em&gt;cafile&lt;/em&gt; 또는 &lt;em&gt;capath&lt;/em&gt; 중 하나 이상을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6425be74b314ff59dd5ac88cdafe03db1813ef76" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from a filesystem path defined when building the OpenSSL library. Unfortunately, there&amp;rsquo;s no easy way to know whether this method succeeds: no error is returned if no certificates are to be found. When the OpenSSL library is provided as part of the operating system, though, it is likely to be configured properly.</source>
          <target state="translated">OpenSSL 라이브러리를 빌드 할 때 정의 된 파일 시스템 경로에서 기본 &quot;인증 기관&quot;(CA) 인증서 세트를로드하십시오. 불행히도이 방법의 성공 여부를 쉽게 알 수있는 방법은 없습니다. 인증서를 찾지 못하면 오류가 반환되지 않습니다. 그러나 OpenSSL 라이브러리가 운영 체제의 일부로 제공되면 올바르게 구성되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b124fe19c645c5969eaba65d28b149a48d7f5bc8" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from default locations. On Windows it loads CA certs from the &lt;code&gt;CA&lt;/code&gt; and &lt;code&gt;ROOT&lt;/code&gt; system stores. On other systems it calls &lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt;. In the future the method may load CA certificates from other locations, too.</source>
          <target state="translated">기본 위치에서 기본 &quot;인증 기관&quot;(CA) 인증서 세트를로드하십시오. Windows에서는 &lt;code&gt;CA&lt;/code&gt; 및 &lt;code&gt;ROOT&lt;/code&gt; 시스템 저장소 에서 CA 인증서를로드 합니다. 다른 시스템에서는 &lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt; &lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt; &lt;/a&gt; 호출합니다 . 앞으로이 방법은 다른 위치에서도 CA 인증서를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="792f87e11df87af3501d49b8d196fb913af1e572" translate="yes" xml:space="preserve">
          <source>Load a shared library into the process and return it. This method always returns a new instance of the library.</source>
          <target state="translated">프로세스에 공유 라이브러리를로드하고 리턴하십시오. 이 메소드는 항상 라이브러리의 새 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c3ea81eee343a4d2df989dde2d08b3714fcbfd81" translate="yes" xml:space="preserve">
          <source>Load a snapshot from a file.</source>
          <target state="translated">파일에서 스냅 샷을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="1c7f519dc3373f6a0d8fc97719f2948be78a3852" translate="yes" xml:space="preserve">
          <source>Load configuration from any object that provides a dict-like &lt;code&gt;items()&lt;/code&gt; method. Keys are section names, values are dictionaries with keys and values that should be present in the section. If the used dictionary type preserves order, sections and their keys will be added in order. Values are automatically converted to strings.</source>
          <target state="translated">dict-like &lt;code&gt;items()&lt;/code&gt; 메소드 를 제공하는 모든 오브젝트에서 구성을로드하십시오 . 키는 섹션 이름이며, 값은 섹션에 있어야하는 키와 값이있는 사전입니다. 사용 된 사전 유형이 순서를 유지하면 섹션과 해당 키가 순서대로 추가됩니다. 값은 자동으로 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="609771080ece00742363664de393857bf53c63b0" translate="yes" xml:space="preserve">
          <source>Load cookies from a file.</source>
          <target state="translated">파일에서 쿠키를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="d415a74437b2a8fde46291994b8fb27e74daafc0" translate="yes" xml:space="preserve">
          <source>Load the key generation parameters for Diffie-Hellman (DH) key exchange. Using DH key exchange improves forward secrecy at the expense of computational resources (both on the server and on the client). The &lt;em&gt;dhfile&lt;/em&gt; parameter should be the path to a file containing DH parameters in PEM format.</source>
          <target state="translated">Diffie-Hellman (DH) 키 교환을위한 키 생성 매개 변수를로드하십시오. DH 키 교환을 사용하면 계산 리소스 (서버 및 클라이언트 모두)를 희생하여 순방향 보안이 향상됩니다. 그만큼&lt;em&gt;dhfile의&lt;/em&gt; 매개 변수는 PEM 형식의 DH 파라미터를 포함하는 파일의 경로해야한다.</target>
        </trans-unit>
        <trans-unit id="48d42fbf167299e3dd1e195e2e77c87b6142971f" translate="yes" xml:space="preserve">
          <source>Load the module specified by &lt;em&gt;fullname&lt;/em&gt;. &lt;em&gt;fullname&lt;/em&gt; must be the fully qualified (dotted) module name. It returns the imported module, or raises &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if it wasn&amp;rsquo;t found.</source>
          <target state="translated">&lt;em&gt;fullname으로&lt;/em&gt; 지정된 모듈을로드하십시오 . &lt;em&gt;fullname&lt;/em&gt; 은 완전한 (점으로 표시된) 모듈 이름이어야합니다. 가져온 모듈을 반환하거나 &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; 를 발생시킵니다.&lt;/a&gt; 경우 발생 .</target>
        </trans-unit>
        <trans-unit id="a3b67eabfacc63af222593625d5483dccb09f499" translate="yes" xml:space="preserve">
          <source>Load the type map given in the file &lt;em&gt;filename&lt;/em&gt;, if it exists. The type map is returned as a dictionary mapping filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;), to strings of the form &lt;code&gt;'type/subtype'&lt;/code&gt;. If the file &lt;em&gt;filename&lt;/em&gt; does not exist or cannot be read, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 파일에 지정된 유형 맵 (있는 경우)을로드하십시오 . 형식 맵은 선행 점 ( &lt;code&gt;'.'&lt;/code&gt; )을 포함하여 &lt;code&gt;'type/subtype'&lt;/code&gt; 형식 의 문자열에 대한 사전 매핑 파일 이름 확장자로 반환됩니다 . 파일 파일 &lt;em&gt;이름&lt;/em&gt; 이 없거나 읽을 수없는 경우 &lt;code&gt;None&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e5f23b0ce31d15663c44713bcd66b9c0b09a0934" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">로드 가능한 확장 프로그램은 기본적으로 비활성화되어 있습니다. &lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="3c47f6edd5e2c7e153595d9012f90395b664fad9" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">로드 가능한 확장 프로그램은 기본적으로 비활성화되어 있습니다. &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="e571b5d989d6291a8883f0e57e8a8c8f1bd18e89" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading are expected to provide a method called &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; which returns an object implementing this ABC&amp;rsquo;s interface. If the module specified by fullname is not a package, this method should return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. An object compatible with this ABC should only be returned when the specified module is a package.</source>
          <target state="translated">리소스 읽기를 지원하려는 로더는 이 ABC의 인터페이스를 구현하는 객체를 반환하는 &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; 라는 메서드를 제공해야합니다 . fullname으로 지정된 모듈이 패키지가 아닌 경우이 메소드는 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 리턴해야합니다. . 이 ABC와 호환되는 객체는 지정된 모듈이 패키지 인 경우에만 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="378ce4564cfc961412915083fc6fe3d3a3ac4043" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading should implement a &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; method as specified by &lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt;&lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리소스 읽기를 지원하려는 로더는 &lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt; &lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt; 에&lt;/a&gt; 지정된 &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; 메소드를 구현해야합니다. .</target>
        </trans-unit>
        <trans-unit id="3a57f41eadfd6d867f90958cecb3a4047f1a4c3d" translate="yes" xml:space="preserve">
          <source>Loading a library through any of these objects raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.dlopen&lt;/code&gt; with string argument &lt;code&gt;name&lt;/code&gt;, the name used to load the library.</source>
          <target state="translated">이러한 객체를 통해 라이브러리 를로드하면 라이브러리를로드하는 데 사용되는 &lt;code&gt;name&lt;/code&gt; 인 string argument name 과 함께 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.dlopen&lt;/code&gt; 이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="6157b16025e97d941d88dc209da06d6279f10e6e" translate="yes" xml:space="preserve">
          <source>Loading and running tests</source>
          <target state="translated">테스트로드 및 실행</target>
        </trans-unit>
        <trans-unit id="0f19a79e96a975070aa13b1f20b3d2bdd4d9dc24" translate="yes" xml:space="preserve">
          <source>Loading dynamic link libraries</source>
          <target state="translated">동적 링크 라이브러리로드</target>
        </trans-unit>
        <trans-unit id="d59529dbda456f2b5d95ed314e6b490be68e48e9" translate="yes" xml:space="preserve">
          <source>Loading shared libraries</source>
          <target state="translated">공유 라이브러리로드</target>
        </trans-unit>
        <trans-unit id="b90fef70cb5c4d40f44b0f88151132cf53bf667b" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from TOS object. TOS is popped and method and TOS are pushed when interpreter can call unbound method directly. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and method is pushed (method is bound method or something else).</source>
          <target state="translated">TOS 오브젝트에서 &lt;code&gt;co_names[namei]&lt;/code&gt; 라는 메소드를로드 합니다. 인터프리터가 언 바운드 메소드를 직접 호출 할 수있는 경우 TOS가 팝업되고 메소드 및 TOS가 푸시됩니다. TOS는 &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt; 에서 첫 번째 인수 ( &lt;code&gt;self&lt;/code&gt; )로 사용 됩니다 . 그렇지 않으면 &lt;code&gt;NULL&lt;/code&gt; 및 메소드가 푸시됩니다 (메소드가 메소드 또는 바인드 된 메소드입니다).</target>
        </trans-unit>
        <trans-unit id="45c0dbdf01940684c2ae00c8ba836ba0a46f724e" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from the TOS object. TOS is popped. This bytecode distinguishes two cases: if TOS has a method with the correct name, the bytecode pushes the unbound method and TOS. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt; when calling the unbound method. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and the object return by the attribute lookup are pushed.</source>
          <target state="translated">Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from the TOS object. TOS is popped. This bytecode distinguishes two cases: if TOS has a method with the correct name, the bytecode pushes the unbound method and TOS. TOS will be used as the first argument ( &lt;code&gt;self&lt;/code&gt; ) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt; when calling the unbound method. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and the object return by the attribute lookup are pushed.</target>
        </trans-unit>
        <trans-unit id="d27df2a4a2d21c1753293f40979140c7e27016e1" translate="yes" xml:space="preserve">
          <source>Loads all symbols not starting with &lt;code&gt;'_'&lt;/code&gt; directly from the module TOS to the local namespace. The module is popped after loading all names. This opcode implements &lt;code&gt;from module import *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'_'&lt;/code&gt; 로 시작하지 않는 모든 기호를 모듈 TOS에서 로컬 네임 스페이스로 직접 로드합니다 . 모든 이름을로드 한 후 모듈이 팝업됩니다. 이 opcode는 &lt;code&gt;from module import *&lt;/code&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="a73db01bcd9bbe68ec1dd85d66ba7ce5f2794388" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">이 요소 트리에 외부 XML 섹션을로드합니다. &lt;em&gt;source&lt;/em&gt; 는 파일 이름 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. 섹션 루트 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1952c7c28c165103bccf89650bf5868d447acff4" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; parser is used. Returns the section root element.</target>
        </trans-unit>
        <trans-unit id="1f8a05fa121c3dfddca1eb9b12000164796d7f86" translate="yes" xml:space="preserve">
          <source>Loads the attribute &lt;code&gt;co_names[namei]&lt;/code&gt; from the module found in TOS. The resulting object is pushed onto the stack, to be subsequently stored by a &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; instruction.</source>
          <target state="translated">TOS에있는 모듈에서 &lt;code&gt;co_names[namei]&lt;/code&gt; 속성을로드합니다 . 결과 객체는 스택에 푸시되어 &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt; 명령 에 의해 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b348168c8362df88f869811fab229492225da54" translate="yes" xml:space="preserve">
          <source>Loads the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Pushes a reference to the object the cell contains on the stack.</source>
          <target state="translated">셀의 슬롯 &lt;em&gt;i&lt;/em&gt; 에 포함 된 셀과 사용 가능한 가변 스토리지를 로드합니다 . 셀에 스택에 포함 된 객체에 대한 참조를 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="07317685209bae8dc29b1177be533689623566aa" translate="yes" xml:space="preserve">
          <source>Loads the global named &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; 라는 전역 이름을 스택에 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="5e4196f78acb5e15163031bb305c6c69a7881387" translate="yes" xml:space="preserve">
          <source>Local currency symbol.</source>
          <target state="translated">현지 통화 기호.</target>
        </trans-unit>
        <trans-unit id="52009a3ea27db65f1cc4de20822dd34262e8738c" translate="yes" xml:space="preserve">
          <source>Local processes can also access that queue, using the code from above on the client to access it remotely:</source>
          <target state="translated">로컬 프로세스는 클라이언트에서 위의 코드를 사용하여 원격으로 액세스하여 해당 큐에 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e985f42b4f2cb4a242c933c6cd4f71c10094544" translate="yes" xml:space="preserve">
          <source>Locale category for formatting numbers. The functions &lt;a href=&quot;#locale.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atoi&quot;&gt;&lt;code&gt;atoi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atof&quot;&gt;&lt;code&gt;atof()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected by that category. All other numeric formatting operations are not affected.</source>
          <target state="translated">숫자 서식의 로캘 범주입니다. &lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 모듈 의 &lt;a href=&quot;#locale.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#locale.atoi&quot;&gt; &lt;code&gt;atoi()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#locale.atof&quot;&gt; &lt;code&gt;atof()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#locale.str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 함수 는 해당 카테고리의 영향을받습니다. 다른 모든 숫자 서식 작업은 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e89698268d6ca826988ca2828f9a33ea91d9b28a" translate="yes" xml:space="preserve">
          <source>Locale category for formatting of monetary values. The available options are available from the &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">화폐 값의 서식을 지정하는 로캘 범주입니다. 사용 가능한 옵션은 &lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt; 함수 에서 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="04a64c4c278c2187092935ce39d2099f68cb48c8" translate="yes" xml:space="preserve">
          <source>Locale category for message display. Python currently does not support application specific locale-aware messages. Messages displayed by the operating system, like those returned by &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt; might be affected by this category.</source>
          <target state="translated">메시지 표시를위한 로케일 범주. Python은 현재 응용 프로그램 별 로캘 인식 메시지를 지원하지 않습니다. &lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 것과 같이 운영 체제에 의해 표시되는 메시지 는이 범주의 영향을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd49d042ef959ad8740ad1439b50170f4a67803" translate="yes" xml:space="preserve">
          <source>Locale category for sorting strings. The functions &lt;a href=&quot;#locale.strcoll&quot;&gt;&lt;code&gt;strcoll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.strxfrm&quot;&gt;&lt;code&gt;strxfrm()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected.</source>
          <target state="translated">문자열 정렬을위한 로캘 범주입니다. &lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 모듈 의 &lt;a href=&quot;#locale.strcoll&quot;&gt; &lt;code&gt;strcoll()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#locale.strxfrm&quot;&gt; &lt;code&gt;strxfrm()&lt;/code&gt; &lt;/a&gt; 함수 가 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="cbbf73bf0b11794a60e800b47ab121a2dee00b07" translate="yes" xml:space="preserve">
          <source>Locale category for the character type functions. Depending on the settings of this category, the functions of module &lt;a href=&quot;string#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; dealing with case change their behaviour.</source>
          <target state="translated">문자 유형 함수의 로케일 범주. 이 범주의 설정에 따라 대 / 소문자를 처리하는 모듈 &lt;a href=&quot;string#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt; 의 기능이 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="b3402d90af0a871f59ee54dff6e494f7c57e091c" translate="yes" xml:space="preserve">
          <source>Locale category for the formatting of time. The function &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; follows these conventions.</source>
          <target state="translated">시간 형식에 대한 로캘 범주입니다. &lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt; 함수 는 이러한 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="73b793f3c64332c43debe3f45fccfa2080cec4a8" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated month name.</source>
          <target state="translated">로케일의 약식 월 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c9afac89d2e328ab0ed56be9db5cfa0260851bff" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated weekday name.</source>
          <target state="translated">로케일의 약식 요일 이름.</target>
        </trans-unit>
        <trans-unit id="46905c93036f1fc91beab4f6536669f4aa997a97" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date and time representation.</source>
          <target state="translated">로케일의 적절한 날짜 및 시간 표현</target>
        </trans-unit>
        <trans-unit id="13dd4044599b17dfb922c37d1bc883f07809d332" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date representation.</source>
          <target state="translated">로케일의 적절한 날짜 표현.</target>
        </trans-unit>
        <trans-unit id="36487e73126def0235c7c9de6ec2356b44418976" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate time representation.</source>
          <target state="translated">로케일의 적절한 시간 표현.</target>
        </trans-unit>
        <trans-unit id="f2fefc48256fa82bb994918d97f4d1273ceaaa82" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s equivalent of either AM or PM.</source>
          <target state="translated">로케일은 AM 또는 PM에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="6fd390382c5edc4503dc946a153a0cfc7197d046" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full month name.</source>
          <target state="translated">로캘의 전체 월 이름입니다.</target>
        </trans-unit>
        <trans-unit id="07ec6fcd65ab62d1a5fc3d4b40fc1f0d429bee74" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full weekday name.</source>
          <target state="translated">로케일의 전체 요일 이름.</target>
        </trans-unit>
        <trans-unit id="f1fb667e5d929e9a2ab0404441ece3a2b8b4ac94" translate="yes" xml:space="preserve">
          <source>Localizing your application</source>
          <target state="translated">응용 프로그램 현지화</target>
        </trans-unit>
        <trans-unit id="7e70bb97fb52037a6fc3c4f3daae9b44f1e4190f" translate="yes" xml:space="preserve">
          <source>Localizing your module</source>
          <target state="translated">모듈 현지화</target>
        </trans-unit>
        <trans-unit id="d2e95cdee60c00152032441855294fcdb5f25216" translate="yes" xml:space="preserve">
          <source>Locate the insertion point for &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; to maintain sorted order. The parameters &lt;em&gt;lo&lt;/em&gt; and &lt;em&gt;hi&lt;/em&gt; may be used to specify a subset of the list which should be considered; by default the entire list is used. If &lt;em&gt;x&lt;/em&gt; is already present in &lt;em&gt;a&lt;/em&gt;, the insertion point will be before (to the left of) any existing entries. The return value is suitable for use as the first parameter to &lt;code&gt;list.insert()&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted.</source>
          <target state="translated">의 삽입 지점의 위치 &lt;em&gt;X를&lt;/em&gt; 에 정렬 된 순서를 유지하기 위해. &lt;em&gt;lo&lt;/em&gt; 및 &lt;em&gt;hi&lt;/em&gt; 파라미터 는 고려되어야 할리스트의 서브 세트를 지정하는데 사용될 수있다. 기본적으로 전체 목록이 사용됩니다. 경우 &lt;em&gt;, X는&lt;/em&gt; 이미 존재 , 삽입 점은 기존 항목 (왼쪽에) 이전이어야한다. 반환 값은 &lt;em&gt;a&lt;/em&gt; 가 이미 정렬되어 있다고 가정하면 &lt;code&gt;list.insert()&lt;/code&gt; 의 첫 번째 매개 변수로 사용하기에 적합합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c21d4b6cbd99b64624c0ae81363ca97a7b37eac" translate="yes" xml:space="preserve">
          <source>Locates a bitmap file of the name &lt;code&gt;name.xpm&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method). By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the bitmap files in your application. When successful, it returns the complete pathname of the bitmap file, prefixed with the character &lt;code&gt;@&lt;/code&gt;. The returned value can be used to configure the &lt;code&gt;bitmap&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">비트 맵 디렉토리 중 하나에서 이름 &lt;code&gt;name.xpm&lt;/code&gt; 또는 &lt;code&gt;name&lt;/code&gt; 의 비트 맵 파일을 찾습니다 ( &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt; 메소드 참조). &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt; 을 사용 하면 애플리케이션에서 비트 맵 파일의 경로 이름을 하드 코딩하지 않아도 됩니다. 성공하면 비트 맵 파일의 전체 경로 이름을 앞에 &lt;code&gt;@&lt;/code&gt; 문자가 붙습니다 . 리턴 된 값을 사용 하여 Tk 및 Tix 위젯 의 &lt;code&gt;bitmap&lt;/code&gt; 옵션 을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a6c0b8acf24a16e33c0f64184c64947bcfef879" translate="yes" xml:space="preserve">
          <source>Locates an image file of the name &lt;code&gt;name.xpm&lt;/code&gt;, &lt;code&gt;name.xbm&lt;/code&gt; or &lt;code&gt;name.ppm&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method above). If more than one file with the same name (but different extensions) exist, then the image type is chosen according to the depth of the X display: xbm images are chosen on monochrome displays and color images are chosen on color displays. By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the image files in your application. When successful, this method returns the name of the newly created image, which can be used to configure the &lt;code&gt;image&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">비트 맵 디렉토리 중 하나에서 &lt;code&gt;name.xpm&lt;/code&gt; , &lt;code&gt;name.xbm&lt;/code&gt; 또는 &lt;code&gt;name.ppm&lt;/code&gt; 이름의 이미지 파일을 찾습니다 &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt; 위 의 tix_addbitmapdir () 메서드 참조). 이름이 같지만 확장자가 다른 파일이 둘 이상있는 경우 X 디스플레이의 깊이에 따라 이미지 유형이 선택됩니다. xbm 이미지는 흑백 디스플레이에서 선택되고 컬러 이미지는 컬러 디스플레이에서 선택됩니다. &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt; 를 사용 하면 애플리케이션에서 이미지 파일의 경로 이름을 하드 코딩하지 않아도 됩니다. 성공하면이 메소드는 새로 작성된 이미지의 이름을 리턴하며, 이는 Tk 및 Tix 위젯 의 &lt;code&gt;image&lt;/code&gt; 옵션 을 구성하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8b0e21f5b3f01d9c1a093dcc7aebc48a221cf7a" translate="yes" xml:space="preserve">
          <source>Locator Objects</source>
          <target state="translated">로케이터 객체</target>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="5a9e42ea8ddb21d85da434d1d4df2d2f1efa57a3" translate="yes" xml:space="preserve">
          <source>Lock Objects</source>
          <target state="translated">객체 잠금</target>
        </trans-unit>
        <trans-unit id="06f960cf76802c9e596f5a165b9c306033b8c337" translate="yes" xml:space="preserve">
          <source>Lock objects have the following methods:</source>
          <target state="translated">잠금 객체에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0222c4646a5cac92401d4d0c07f15b59f773661e" translate="yes" xml:space="preserve">
          <source>Lock part of a file based on file descriptor &lt;em&gt;fd&lt;/em&gt; from the C runtime. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on failure. The locked region of the file extends from the current file position for &lt;em&gt;nbytes&lt;/em&gt; bytes, and may continue beyond the end of the file. &lt;em&gt;mode&lt;/em&gt; must be one of the &lt;code&gt;LK_*&lt;/code&gt; constants listed below. Multiple regions in a file may be locked at the same time, but may not overlap. Adjacent regions are not merged; they must be unlocked individually.</source>
          <target state="translated">C 런타임에서 파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 를 기반으로 파일의 일부를 잠그십시오 . 발생시킵니다 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 를&lt;/a&gt; 실패. 파일의 잠긴 영역은 현재 파일 위치에서 &lt;em&gt;nbytes&lt;/em&gt; 바이트 까지 확장되며 파일 끝을 넘어 계속 될 수 있습니다. &lt;em&gt;mode&lt;/em&gt; 는 아래 나열된 &lt;code&gt;LK_*&lt;/code&gt; 상수 중 하나 여야합니다 . 파일의 여러 영역이 동시에 잠겨있을 수 있지만 겹치지 않을 수 있습니다. 인접한 지역은 병합되지 않습니다. 개별적으로 잠금 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="c528eeea30f8c7cdbf3dd9c943be567de116bc9e" translate="yes" xml:space="preserve">
          <source>Lock program segments into memory. The value of &lt;em&gt;op&lt;/em&gt; (defined in &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt;) determines which segments are locked.</source>
          <target state="translated">프로그램 세그먼트를 메모리에 잠급니다. &lt;em&gt;op&lt;/em&gt; 값 ( &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt; 에 정의 됨 )에 따라 잠길 세그먼트가 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="d14148792cb2e70e25dadd8e130df4def697650f" translate="yes" xml:space="preserve">
          <source>Locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">잠금은 &lt;a href=&quot;#with-locks&quot;&gt;컨텍스트 관리 프로토콜&lt;/a&gt; 도 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="e4911bad28d3fb7972d5e7251b010d8af4491853" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">지정된 바이트를 잠급니다. 바이트를 잠글 수 없으면 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9271e320c4c74de58382f17a37df89d94c970942" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, the program immediately tries again after 1 second. If, after 10 attempts, the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">지정된 바이트를 잠급니다. 바이트를 잠글 수 없으면 프로그램은 1 초 후에 즉시 다시 시도합니다. 10 번의 시도 후에 바이트를 잠글 수 없으면 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf1602b3907bd203c789fd778d5036f56eb7eaa5" translate="yes" xml:space="preserve">
          <source>Log in as the given &lt;em&gt;user&lt;/em&gt;. The &lt;em&gt;passwd&lt;/em&gt; and &lt;em&gt;acct&lt;/em&gt; parameters are optional and default to the empty string. If no &lt;em&gt;user&lt;/em&gt; is specified, it defaults to &lt;code&gt;'anonymous'&lt;/code&gt;. If &lt;em&gt;user&lt;/em&gt; is &lt;code&gt;'anonymous'&lt;/code&gt;, the default &lt;em&gt;passwd&lt;/em&gt; is &lt;code&gt;'anonymous@'&lt;/code&gt;. This function should be called only once for each instance, after a connection has been established; it should not be called at all if a host and user were given when the instance was created. Most FTP commands are only allowed after the client has logged in. The &lt;em&gt;acct&lt;/em&gt; parameter supplies &amp;ldquo;accounting information&amp;rdquo;; few systems implement this.</source>
          <target state="translated">주어진 &lt;em&gt;사용자&lt;/em&gt; 로 로그인하십시오 . &lt;em&gt;passwd를&lt;/em&gt; 하고 &lt;em&gt;ACCT&lt;/em&gt; 매개 변수는 빈 문자열을 선택하고 기본입니다. &lt;em&gt;사용자&lt;/em&gt; 를 지정 하지 않으면 기본값은 &lt;code&gt;'anonymous'&lt;/code&gt; 입니다. 경우 &lt;em&gt;사용자&lt;/em&gt; 입니다 &lt;code&gt;'anonymous'&lt;/code&gt; 기본 &lt;em&gt;passwd 파일이&lt;/em&gt; 있다 &lt;code&gt;'anonymous@'&lt;/code&gt; . 이 함수는 연결이 설정된 후 각 인스턴스에 대해 한 번만 호출해야합니다. 인스턴스가 작성 될 때 호스트와 사용자가 제공된 경우 전혀 호출되지 않아야합니다. 대부분의 FTP 명령은 클라이언트가 로그인 한 후에 만 ​​허용됩니다. &lt;em&gt;acct&lt;/em&gt; 매개 변수는 &quot;계정 정보&quot;를 제공합니다. 이를 구현하는 시스템은 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="492759de42716d33cbac9e1b9827c65dd042298c" translate="yes" xml:space="preserve">
          <source>Log in on an SMTP server that requires authentication. The arguments are the username and the password to authenticate with. If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first. This method will return normally if the authentication was successful, or may raise the following exceptions:</source>
          <target state="translated">인증이 필요한 SMTP 서버에 로그인하십시오. 인수는 인증 할 사용자 이름 및 비밀번호입니다. 이 세션에 이전 &lt;code&gt;EHLO&lt;/code&gt; 또는 &lt;code&gt;HELO&lt;/code&gt; 명령이 없는 경우이 방법은 먼저 ESMTP &lt;code&gt;EHLO&lt;/code&gt; 를 시도합니다 . 인증에 성공하면이 메소드가 정상적으로 리턴되거나 다음 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d77829d521e5852593ca42255d86ed2e7f8595be" translate="yes" xml:space="preserve">
          <source>Log normal distribution. If you take the natural logarithm of this distribution, you&amp;rsquo;ll get a normal distribution with mean &lt;em&gt;mu&lt;/em&gt; and standard deviation &lt;em&gt;sigma&lt;/em&gt;. &lt;em&gt;mu&lt;/em&gt; can have any value, and &lt;em&gt;sigma&lt;/em&gt; must be greater than zero.</source>
          <target state="translated">정규 분포를 기록합니다. 이 분포의 자연 로그를 취하면 평균 &lt;em&gt;mu&lt;/em&gt; 및 표준 편차 &lt;em&gt;sigma를&lt;/em&gt; 갖는 정규 분포를 얻게 됩니다. &lt;em&gt;mu&lt;/em&gt; 는 값을 가질 수 있으며 &lt;em&gt;sigma&lt;/em&gt; 는 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="ec346ba8e376063f18c76a6a36fb7ed2f33b4610" translate="yes" xml:space="preserve">
          <source>Log options:</source>
          <target state="translated">로그 옵션 :</target>
        </trans-unit>
        <trans-unit id="e403e316611e44a9d6be336eddc9b9eb85594a3c" translate="yes" xml:space="preserve">
          <source>Log the &lt;em&gt;exc_info&lt;/em&gt; tuple in the server log. &lt;em&gt;exc_info&lt;/em&gt; is a &lt;code&gt;(type, value,
traceback)&lt;/code&gt; tuple. The default implementation simply writes the traceback to the request&amp;rsquo;s &lt;code&gt;wsgi.errors&lt;/code&gt; stream and flushes it. Subclasses can override this method to change the format or retarget the output, mail the traceback to an administrator, or whatever other action may be deemed suitable.</source>
          <target state="translated">로그 &lt;em&gt;exc_info의&lt;/em&gt; 서버 로그에서 튜플. &lt;em&gt;exc_info&lt;/em&gt; 는 &lt;code&gt;(type, value, traceback)&lt;/code&gt; 튜플입니다. 기본 구현은 단순히 추적을 요청의 &lt;code&gt;wsgi.errors&lt;/code&gt; 스트림에 기록하고 플러시합니다. 서브 클래스는이 메소드를 대체하여 형식을 변경하거나 출력 대상을 재 지정하거나, 추적을 관리자에게 메일로 보내거나, 다른 조치가 적절하다고 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc4e6d3876ad4a8a803d61a2a77cd5334fce93af" translate="yes" xml:space="preserve">
          <source>LogRecord Objects</source>
          <target state="translated">LogRecord 객체</target>
        </trans-unit>
        <trans-unit id="ccb5e46040b27f71ccff505e9a6e009e5d62de5b" translate="yes" xml:space="preserve">
          <source>LogRecord attributes</source>
          <target state="translated">LogRecord 속성</target>
        </trans-unit>
        <trans-unit id="fbead21275199ebeec83dafe0173b0929df9cb34" translate="yes" xml:space="preserve">
          <source>Logger Objects</source>
          <target state="translated">로거 객체</target>
        </trans-unit>
        <trans-unit id="b5fc3005221abc4dacb66646e66e5f0b75230d22" translate="yes" xml:space="preserve">
          <source>LoggerAdapter Objects</source>
          <target state="translated">LoggerAdapter 객체</target>
        </trans-unit>
        <trans-unit id="15832f53aca8e4c130be5e20c44213f1a721a48e" translate="yes" xml:space="preserve">
          <source>Loggers expose the interface that application code directly uses.</source>
          <target state="translated">로거는 응용 프로그램 코드가 직접 사용하는 인터페이스를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="efa3718c7750545c2778f507e22c3d6f661d113d" translate="yes" xml:space="preserve">
          <source>Loggers have the following attributes and methods. Note that Loggers should &lt;em&gt;NEVER&lt;/em&gt; be instantiated directly, but always through the module-level function &lt;code&gt;logging.getLogger(name)&lt;/code&gt;. Multiple calls to &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;getLogger()&lt;/code&gt;&lt;/a&gt; with the same name will always return a reference to the same Logger object.</source>
          <target state="translated">로거에는 다음과 같은 속성과 메소드가 있습니다. 로거는 것을 참고 &lt;em&gt;결코&lt;/em&gt; 모듈 수준의 기능을 통해 직접하지만, 항상 인스턴스화되지 &lt;code&gt;logging.getLogger(name)&lt;/code&gt; . 이름이 같은 &lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;getLogger()&lt;/code&gt; &lt;/a&gt; 를 여러 번 호출 하면 항상 동일한 Logger 객체에 대한 참조가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="718fbafd7688e11a4939390c7cefcf0e84b52cd7" translate="yes" xml:space="preserve">
          <source>Logging Cookbook</source>
          <target state="translated">로깅 요리 책</target>
        </trans-unit>
        <trans-unit id="1fbc43bf18b2478288c7467471047ecb56ddfd53" translate="yes" xml:space="preserve">
          <source>Logging Levels</source>
          <target state="translated">로깅 수준</target>
        </trans-unit>
        <trans-unit id="1b01df6b50483f653377a29c09e0331101f1c193" translate="yes" xml:space="preserve">
          <source>Logging options of subsequent &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; calls can be set by calling &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; with no arguments if the log is not currently open.</source>
          <target state="translated">후속 &lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt; 호출 의 로깅 옵션은 &lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt; 를 호출하여 설정할 수 있습니다 . 로그가 현재 열려 있지 않은 경우 &lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt; 는 인수없이 &lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="f2c3bb3b5b0e703c74d0f552f84bc84df36cf3d0" translate="yes" xml:space="preserve">
          <source>Logical operands</source>
          <target state="translated">논리 피연산자</target>
        </trans-unit>
        <trans-unit id="a5da835bb3de6e8855950138a28dea23921e5aaa" translate="yes" xml:space="preserve">
          <source>Logical operators</source>
          <target state="translated">논리 연산자</target>
        </trans-unit>
        <trans-unit id="68ee364c110a032900740118e24926681c70b88f" translate="yes" xml:space="preserve">
          <source>Login name</source>
          <target state="translated">로그인 이름</target>
        </trans-unit>
        <trans-unit id="4793b19c165be78b5755bf851fe44408b3928735" translate="yes" xml:space="preserve">
          <source>Logs a message with integer level &lt;em&gt;level&lt;/em&gt; on this logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정수 수준과 메시지 로그 &lt;em&gt;수준&lt;/em&gt; 이 로거에 있습니다. 다른 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="568da12654cb50668fd7df8728fdffeea5db8e4f" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">루트 로거에서 &lt;code&gt;CRITICAL&lt;/code&gt; 레벨의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="13c90355ef29e3a334c5bf4bf41ddcfe4ea3bd96" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 로거에서 &lt;code&gt;CRITICAL&lt;/code&gt; 레벨의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="36f562459e6b0a68f0056bc85b76d0713156dd98" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on the root logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">루트 로거에서 &lt;code&gt;DEBUG&lt;/code&gt; 레벨의 메시지를 기록합니다. &lt;em&gt;MSG는&lt;/em&gt; 메시지 형식 문자열이며, &lt;em&gt;인수가&lt;/em&gt; 병합 된 인수입니다 &lt;em&gt;MSG&lt;/em&gt; 연산자를 서식 문자열을 사용. (이것은 단일 사전 인수와 함께 형식 문자열에서 키워드를 사용할 수 있음을 의미합니다.)</target>
        </trans-unit>
        <trans-unit id="5a4c1194427cd766c51025f3e34a599a0511d4b3" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">이 로거에서 &lt;code&gt;DEBUG&lt;/code&gt; 레벨의 메시지를 기록합니다. &lt;em&gt;MSG는&lt;/em&gt; 메시지 형식 문자열이며, &lt;em&gt;인수가&lt;/em&gt; 병합 된 인수입니다 &lt;em&gt;MSG&lt;/em&gt; 연산자를 서식 문자열을 사용. (이것은 단일 사전 인수와 함께 형식 문자열에서 키워드를 사용할 수 있음을 의미합니다.)</target>
        </trans-unit>
        <trans-unit id="7ee298b777f0058b389d34b722b70a34d14afb80" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.) No % formatting operation is performed on &lt;em&gt;msg&lt;/em&gt; when no &lt;em&gt;args&lt;/em&gt; are supplied.</source>
          <target state="translated">Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.) No % formatting operation is performed on &lt;em&gt;msg&lt;/em&gt; when no &lt;em&gt;args&lt;/em&gt; are supplied.</target>
        </trans-unit>
        <trans-unit id="f28267fec34519242b4f0b061529a74d9fd484db" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">루트 로거에서 수준이 &lt;code&gt;ERROR&lt;/code&gt; 인 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="063c8e0d066708dfaf5ffe371aa8fb8c4cc02f3c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This function should only be called from an exception handler.</source>
          <target state="translated">루트 로거에서 수준이 &lt;code&gt;ERROR&lt;/code&gt; 인 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 . 예외 정보가 로깅 메시지에 추가됩니다. 이 함수는 예외 처리기에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6423ebbe3708cdc9d0f73b8e0a2a041b8f7201cd" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 로거에서 레벨 &lt;code&gt;ERROR&lt;/code&gt; 의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="88872c80d5ab754d614298ef5b916093cae7f7b7" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This method should only be called from an exception handler.</source>
          <target state="translated">이 로거에서 레벨 &lt;code&gt;ERROR&lt;/code&gt; 의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 . 예외 정보가 로깅 메시지에 추가됩니다. 이 메소드는 예외 핸들러에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0dc5301e94745236f4d358120d631126efcea6a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">루트 로거에서 &lt;code&gt;INFO&lt;/code&gt; 레벨의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="581dd2f78c21b5e17b02fc079ab480e252bfcc1d" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 로거에서 &lt;code&gt;INFO&lt;/code&gt; 레벨의 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f2f699842300d31569b0cd131e0992c77e4125c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">루트 로거에서 &lt;code&gt;WARNING&lt;/code&gt; 수준으로 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff4a3eae062ed036b2645240bea04e5509ea296a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 로거에 &lt;code&gt;WARNING&lt;/code&gt; 수준으로 메시지를 기록합니다. 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="2899f8a5fde47519ab2a228961dc0b080847aeb5" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;em&gt;level&lt;/em&gt; on the root logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">수준있는 메시지 로그 &lt;em&gt;수준&lt;/em&gt; 루트 로거에 있습니다. 다른 인수는 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="e88c984feb01158e83ba8164af3f59c55939f49a" translate="yes" xml:space="preserve">
          <source>Logs an accepted (successful) request. &lt;em&gt;code&lt;/em&gt; should specify the numeric HTTP code associated with the response. If a size of the response is available, then it should be passed as the &lt;em&gt;size&lt;/em&gt; parameter.</source>
          <target state="translated">수락 된 (성공적인) 요청을 기록합니다. &lt;em&gt;코드&lt;/em&gt; 는 응답과 관련된 숫자 HTTP 코드를 지정해야합니다. 응답 크기가 사용 가능한 경우 &lt;em&gt;크기&lt;/em&gt; 매개 변수 로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4c6dd21f141766e9553b34ec63e21d85a3b49703" translate="yes" xml:space="preserve">
          <source>Logs an arbitrary message to &lt;code&gt;sys.stderr&lt;/code&gt;. This is typically overridden to create custom error logging mechanisms. The &lt;em&gt;format&lt;/em&gt; argument is a standard printf-style format string, where the additional arguments to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt; are applied as inputs to the formatting. The client ip address and current date and time are prefixed to every message logged.</source>
          <target state="translated">임의의 메시지를 &lt;code&gt;sys.stderr&lt;/code&gt; 에 기록합니다 . 이는 일반적으로 사용자 정의 오류 로깅 메커니즘을 생성하기 위해 재정의됩니다. &lt;em&gt;형식&lt;/em&gt; 인수에 대한 추가 인수 표준의 printf 스타일의 형식 문자열입니다 &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt; 형식으로 입력으로 적용됩니다. 클라이언트 IP 주소와 현재 날짜 및 시간은 기록 된 모든 메시지 앞에 붙습니다.</target>
        </trans-unit>
        <trans-unit id="e90924ba66bc7d377e31aed21afb101cba9a37c3" translate="yes" xml:space="preserve">
          <source>Logs an error when a request cannot be fulfilled. By default, it passes the message to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt;, so it takes the same arguments (&lt;em&gt;format&lt;/em&gt; and additional values).</source>
          <target state="translated">요청을 이행 할 수 없을 때 오류를 기록합니다. 기본적으로 메시지를 &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt; 로 전달하므로 동일한 인수 ( &lt;em&gt;형식&lt;/em&gt; 및 추가 값)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f8ac632028735d423f992df756452f653d52c9aa" translate="yes" xml:space="preserve">
          <source>Look on the current line. with the cursor, and the line above for a filename and line number. If found, open the file if not already open, and show the line. Use this to view source lines referenced in an exception traceback and lines found by Find in Files. Also available in the context menu of the Shell window and Output windows.</source>
          <target state="translated">현재 줄을보십시오. 파일 이름과 줄 번호는 커서와 위의 줄을 사용하십시오. 발견 된 경우 파일이 아직 열려 있지 않으면 파일을 열고 행을 표시하십시오. 이를 사용하여 예외 역 추적에서 참조 된 소스 행과 파일에서 찾기에서 찾은 행을보십시오. 셸 창의 출력 메뉴 및 상황에 맞는 메뉴에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="830541a609e4aebb4ca0ddc42697347ba279e0a5" translate="yes" xml:space="preserve">
          <source>Look up a handler function based on the &lt;code&gt;mimetype&lt;/code&gt; of &lt;em&gt;msg&lt;/em&gt; (see next paragraph), call it, passing through all arguments, and return the result of the call. The expectation is that the handler will extract the payload from &lt;em&gt;msg&lt;/em&gt; and return an object that encodes information about the extracted data.</source>
          <target state="translated">에 기초 핸들러 함수 조회 &lt;code&gt;mimetype&lt;/code&gt; 의 &lt;em&gt;MSG를&lt;/em&gt; (다음 단락 참조), 모든 인수 통과를 호출하고 호출 결과를 반환합니다. 핸들러는 &lt;em&gt;msg&lt;/em&gt; 에서 페이로드를 추출하고 추출 된 데이터에 대한 정보를 인코딩하는 오브젝트를 리턴 할 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="02580224a4c7c76c987379f2bada22e0530b5592" translate="yes" xml:space="preserve">
          <source>Look up character by name. If a character with the given name is found, return the corresponding character. If not found, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">이름별로 문자를 찾습니다. 주어진 이름을 가진 문자가 발견되면 해당 문자를 반환합니다. 찾을 수 없으면 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ab30e49eb23103b13863785d8c5f988a831d12c9" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id and &lt;em&gt;context&lt;/em&gt;, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">위 봐 &lt;em&gt;컨텍스트&lt;/em&gt; 및 &lt;em&gt;메시지&lt;/em&gt; 카탈로그에 ID를하고 유니 코드 문자열로, 해당 메시지 문자열을 반환합니다. 카탈로그에 &lt;em&gt;메시지&lt;/em&gt; id 및 &lt;em&gt;context에&lt;/em&gt; 대한 항목이없고 &lt;a href=&quot;#gettext.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt; 백이 설정된 경우 찾아보기는 폴 백의 pgettext () 메소드로 전달됩니다 . 그렇지 않으면 &lt;em&gt;메시지&lt;/em&gt; ID가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cb02656c464ac3ccae9eccf0e89b321d6923bdd6" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">위 봐 &lt;em&gt;메시지&lt;/em&gt; 카탈로그에 ID를하고 유니 코드 문자열로, 해당 메시지 문자열을 반환합니다. 카탈로그에 &lt;em&gt;메시지&lt;/em&gt; ID에 대한 항목이없고 폴 백이 설정된 경우 조회는 &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 메소드로 전달됩니다 . 그렇지 않으면 &lt;em&gt;메시지&lt;/em&gt; ID가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e3a556474e1ed457b70864b01a7298696a2ec2dd" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 &lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt; 해당 StreamReader 클래스 또는 팩토리 함수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9d4ddc4438742263e3d5627291450220ce8cb31b" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 &lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt; 클래스 또는 팩토리 함수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c84e896663516d28c7c27bb365ae80312c5e169f" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its decoder function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 찾고 디코더 기능을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb641b1a229c64cd02ce2ebfc05ae8a7c13b0596" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its encoder function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 찾아서 해당 인코더 기능을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3655c5a141ca4acde5ad365207e8691d73d266bf" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental decoder class or factory function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 찾고 증분 디코더 클래스 또는 팩토리 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6cc163fdbcd56d75ce77c6d6d85dc890d18b4429" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental encoder class or factory function.</source>
          <target state="translated">주어진 인코딩에 대한 코덱을 찾아 증분 인코더 클래스 또는 팩토리 함수를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="78b595ac3ee12e89b27df3b7a98465df00426911" translate="yes" xml:space="preserve">
          <source>Looks up the codec info in the Python codec registry and returns a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object as defined below.</source>
          <target state="translated">Python 코덱 레지스트리에서 코덱 정보를 조회하고 아래 정의 된대로 &lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cf82cd9963518dc21fb6c641a8de40d76056d5d3" translate="yes" xml:space="preserve">
          <source>Lookup &lt;em&gt;name&lt;/em&gt; in the table and return a &lt;a href=&quot;#symtable.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">테이블에서 &lt;em&gt;이름&lt;/em&gt; 을 조회 하고 &lt;a href=&quot;#symtable.Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4485ea3acbc6dbce3acdb006f3d986acb5ab231" translate="yes" xml:space="preserve">
          <source>LookupError</source>
          <target state="translated">LookupError</target>
        </trans-unit>
        <trans-unit id="630ea782b7785663fd9d4f73dba3d3c77a23c0bd" translate="yes" xml:space="preserve">
          <source>Lookups search the underlying mappings successively until a key is found. In contrast, writes, updates, and deletions only operate on the first mapping.</source>
          <target state="translated">조회는 키를 찾을 때까지 기본 매핑을 연속적으로 검색합니다. 반대로 쓰기, 업데이트 및 삭제는 첫 번째 매핑에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="153299db674345d8f2ca5d3d4f9e8e37247d6bf3" translate="yes" xml:space="preserve">
          <source>Loop over the format_string and return an iterable of tuples (&lt;em&gt;literal_text&lt;/em&gt;, &lt;em&gt;field_name&lt;/em&gt;, &lt;em&gt;format_spec&lt;/em&gt;, &lt;em&gt;conversion&lt;/em&gt;). This is used by &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; to break the string into either literal text, or replacement fields.</source>
          <target state="translated">format_string을 반복하고 튜플의 iterable ( &lt;em&gt;literal_text&lt;/em&gt; , &lt;em&gt;field_name&lt;/em&gt; , &lt;em&gt;format_spec&lt;/em&gt; , &lt;em&gt;conversion&lt;/em&gt; )을 리턴하십시오 . 이것은 &lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt; 에서 문자열을 리터럴 텍스트 또는 대체 필드로 나누는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="817f983a7edb7dba44fd8f3324b46953d7169631" translate="yes" xml:space="preserve">
          <source>Low highlight</source>
          <target state="translated">낮은 하이라이트</target>
        </trans-unit>
        <trans-unit id="127b603a1ef011bb89cc88a210069e24596383d1" translate="yes" xml:space="preserve">
          <source>Low level interface to kevent</source>
          <target state="translated">kevent에 대한 저수준 인터페이스</target>
        </trans-unit>
        <trans-unit id="2eb47f09ef951de4242da56b37e0a0774375475b" translate="yes" xml:space="preserve">
          <source>Low median of data.</source>
          <target state="translated">중앙값이 낮습니다.</target>
        </trans-unit>
        <trans-unit id="8780223be91d8d1f6aff0eae226f7e6a9f597e78" translate="yes" xml:space="preserve">
          <source>Low-level API Index</source>
          <target state="translated">저수준 API 색인</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">저수준 API</target>
        </trans-unit>
        <trans-unit id="8b09ad35d513c57449768a8b41dddbe56fe84f67" translate="yes" xml:space="preserve">
          <source>Low-level I/O multiplexing module.</source>
          <target state="translated">저수준 I / O 멀티플렉싱 모듈.</target>
        </trans-unit>
        <trans-unit id="598bc2f6658057b428f7e2f3e606eae47ac8e6d8" translate="yes" xml:space="preserve">
          <source>Low-level methods corresponding to the standard SMTP/ESMTP commands &lt;code&gt;HELP&lt;/code&gt;, &lt;code&gt;RSET&lt;/code&gt;, &lt;code&gt;NOOP&lt;/code&gt;, &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;RCPT&lt;/code&gt;, and &lt;code&gt;DATA&lt;/code&gt; are also supported. Normally these do not need to be called directly, so they are not documented here. For details, consult the module code.</source>
          <target state="translated">표준 SMTP / ESMTP 명령 &lt;code&gt;HELP&lt;/code&gt; , &lt;code&gt;RSET&lt;/code&gt; , &lt;code&gt;NOOP&lt;/code&gt; , &lt;code&gt;MAIL&lt;/code&gt; , &lt;code&gt;RCPT&lt;/code&gt; 및 &lt;code&gt;DATA&lt;/code&gt; 에 해당하는 저수준 방법 도 지원됩니다. 일반적으로 이들은 직접 호출 할 필요가 없으므로 여기에 설명되어 있지 않습니다. 자세한 내용은 모듈 코드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="26766bff9d94e6567e710b2fea4f1511b662ea0d" translate="yes" xml:space="preserve">
          <source>Low-level terminal control interface.</source>
          <target state="translated">저수준 터미널 제어 인터페이스.</target>
        </trans-unit>
        <trans-unit id="3037eb1a5f56e2da85ac8efecced594163214b23" translate="yes" xml:space="preserve">
          <source>Low-level time related functions.</source>
          <target state="translated">저수준 시간 관련 기능.</target>
        </trans-unit>
        <trans-unit id="d9dd367f9bd9200fa80c2b2e15b69f5c2fd12a8e" translate="yes" xml:space="preserve">
          <source>Low-level transport abstraction over subprocesses. Returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">하위 프로세스에 대한 저수준 전송 추상화 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt; 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="173e5fb322f03059e57865273bd7201fd7a87b77" translate="yes" xml:space="preserve">
          <source>Lower left of keypad</source>
          <target state="translated">키패드의 왼쪽 하단</target>
        </trans-unit>
        <trans-unit id="1122f5f9b82dc0f050f315c32b632f532a7d070a" translate="yes" xml:space="preserve">
          <source>Lower right of keypad</source>
          <target state="translated">키패드의 오른쪽 하단</target>
        </trans-unit>
        <trans-unit id="30c535ddb40e2b13bc291a7dfa8a8275334e95e7" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">소문자 ASCII 문자는 시퀀스 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; 의 바이트 값입니다 . 대문자 ASCII 문자는 시퀀스 &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 의 바이트 값입니다 .</target>
        </trans-unit>
        <trans-unit id="50b863a5a287224249b5146b1cb8597ee4786665" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. All other byte values are uncased.</source>
          <target state="translated">소문자 ASCII 문자는 시퀀스 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; 의 바이트 값입니다 . 대문자 ASCII 문자는 시퀀스 &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 의 바이트 값입니다 . 다른 모든 바이트 값은 uncased입니다.</target>
        </trans-unit>
        <trans-unit id="2d097e417a0011309b9e3799cef284519c47f119" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation Vol. 8, No. 1, January pp.3&amp;ndash;30 1998.</source>
          <target state="translated">M. Matsumoto와 T. Nishimura,&amp;ldquo;Mersenne Twister : 623 차원으로 균일하게 분포 된 균일 한 의사 난수 생성기&amp;rdquo;, ACM의 모델링 및 컴퓨터 시뮬레이션 Vol. 8 월 1 일 1 월 pp. 3&amp;ndash;30 1998.</target>
        </trans-unit>
        <trans-unit id="f9326dba9c79149b2bfa04e09a817e946200edd7" translate="yes" xml:space="preserve">
          <source>MADV_* Constants</source>
          <target state="translated">MADV_ * 상수</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="83f776c9895fa9933e9c8f01b0f9175fe4aba8f4" translate="yes" xml:space="preserve">
          <source>MH &amp;amp; nmh: Email for Users &amp;amp; Programmers</source>
          <target state="translated">MH 및 nmh : 사용자 및 프로그래머를위한 이메일</target>
        </trans-unit>
        <trans-unit id="bfb78b95660e8a4437c74324bc0e18e512f5e11a" translate="yes" xml:space="preserve">
          <source>MH is a directory-based mailbox format invented for the MH Message Handling System, a mail user agent. Each message in an MH mailbox resides in its own file. An MH mailbox may contain other MH mailboxes (called &lt;em&gt;folders&lt;/em&gt;) in addition to messages. Folders may be nested indefinitely. MH mailboxes also support &lt;em&gt;sequences&lt;/em&gt;, which are named lists used to logically group messages without moving them to sub-folders. Sequences are defined in a file called &lt;code&gt;.mh_sequences&lt;/code&gt; in each folder.</source>
          <target state="translated">MH는 메일 사용자 에이전트 인 MH 메시지 처리 시스템을 위해 고안된 디렉토리 기반 사서함 형식입니다. MH 사서함의 각 메시지는 자체 파일에 있습니다. MH 사서함에는 메시지 외에 다른 MH 사서함 ( &lt;em&gt;폴더&lt;/em&gt; 라고 함)이 포함될 수 있습니다 . 폴더는 무기한 중첩 될 수 있습니다. MH 메일 함은 또한 메시지를 하위 폴더로 이동하지 않고 논리적으로 그룹화하는 데 사용되는 명명 된 목록 인 &lt;em&gt;시퀀스&lt;/em&gt; 를 지원 &lt;em&gt;합니다&lt;/em&gt; . 시퀀스는 각 폴더의 &lt;code&gt;.mh_sequences&lt;/code&gt; 파일에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c05b8eba754105622f4f66f9c667c959eac038c" translate="yes" xml:space="preserve">
          <source>MH messages do not support marks or flags in the traditional sense, but they do support sequences, which are logical groupings of arbitrary messages. Some mail reading programs (although not the standard &lt;strong&gt;mh&lt;/strong&gt; and &lt;strong&gt;nmh&lt;/strong&gt;) use sequences in much the same way flags are used with other formats, as follows:</source>
          <target state="translated">MH 메시지는 전통적인 의미에서 마크 또는 플래그를 지원하지 않지만 임의 메시지의 논리적 그룹 인 시퀀스를 지원합니다. 일부 메일 읽기 프로그램 (표준 &lt;strong&gt;mh&lt;/strong&gt; 및 &lt;strong&gt;nmh는 아님&lt;/strong&gt; )은 다음과 같이 플래그를 다른 형식과 함께 사용하는 것과 같은 방식으로 시퀀스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="65da9389c1a77e41f94256ff46e83b4558f0d2c0" translate="yes" xml:space="preserve">
          <source>MIME headers all start with the prefix &amp;lsquo;Content-&amp;lsquo;. Each specific header has a certain value, described under the class for that header. Some can also take a list of supplemental parameters, which have a common format. This class serves as a base for all the MIME headers that take parameters.</source>
          <target state="translated">MIME 헤더는 모두 접두사 'Content-'로 시작합니다. 각 특정 헤더에는 해당 헤더의 클래스 아래에 설명 된 특정 값이 있습니다. 일부는 공통 형식을 가진 보충 매개 변수 목록을 취할 수도 있습니다. 이 클래스는 매개 변수를 사용하는 모든 MIME 헤더의 기반으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e780567389e1a67ac39a9aa3a2da100125cc437a" translate="yes" xml:space="preserve">
          <source>MIMEVersionHeader</source>
          <target state="translated">MIMEVersionHeader</target>
        </trans-unit>
        <trans-unit id="ac2781a30c636477d2571979c4dc8ae62e55b4a1" translate="yes" xml:space="preserve">
          <source>MMDF</source>
          <target state="translated">MMDF</target>
        </trans-unit>
        <trans-unit id="66116c893240b072c88886bdaaa797c52d0bc63e" translate="yes" xml:space="preserve">
          <source>MMDF is a single-file mailbox format invented for the Multichannel Memorandum Distribution Facility, a mail transfer agent. Each message is in the same form as an mbox message but is bracketed before and after by lines containing four Control-A (&lt;code&gt;'\001'&lt;/code&gt;) characters. As with the mbox format, the beginning of each message is indicated by a line whose first five characters are &amp;ldquo;From &amp;ldquo;, but additional occurrences of &amp;ldquo;From &amp;rdquo; are not transformed to &amp;ldquo;&amp;gt;From &amp;rdquo; when storing messages because the extra message separator lines prevent mistaking such occurrences for the starts of subsequent messages.</source>
          <target state="translated">MMDF는 메일 전송 에이전트 인 Multichannel Memorandum Distribution Facility를 위해 개발 된 단일 파일 사서함 형식입니다. 각 메시지는 mbox 메시지와 같은 형식이지만 4 개의 Control-A ( &lt;code&gt;'\001'&lt;/code&gt; ) 문자를 포함하는 줄로 앞뒤에 괄호로 묶습니다 . mbox 형식과 마찬가지로, 각 메시지의 시작은 첫 5 개의 문자가 &quot;From&quot;인 행으로 표시되지만 추가 메시지 구분선이 방해하기 때문에 메시지를 저장할 때 추가 &quot;From&quot;은 &quot;&amp;gt; From&quot;으로 변환되지 않습니다. 후속 메시지의 시작에 대해 이러한 발생을 착각합니다.</target>
        </trans-unit>
        <trans-unit id="5481121da443813ed3ac24e7900056c8bc0a3492" translate="yes" xml:space="preserve">
          <source>MS Windows</source>
          <target state="translated">MS 윈도우</target>
        </trans-unit>
        <trans-unit id="7603491c0dcf610a151e7e878f3e66902074b1e1" translate="yes" xml:space="preserve">
          <source>MS Windows Specific Services</source>
          <target state="translated">MS Windows 전용 서비스</target>
        </trans-unit>
        <trans-unit id="6f96f1c42882c7292e1fca57e1b53cd688b380b1" translate="yes" xml:space="preserve">
          <source>Mac OS Platform</source>
          <target state="translated">맥 OS 플랫폼</target>
        </trans-unit>
        <trans-unit id="7bd9422fbcc45a81bb4afd061a341076dea802f9" translate="yes" xml:space="preserve">
          <source>Mac OS X can return:</source>
          <target state="translated">Mac OS X은 다음을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ff28b996370a24ecb0833ef2246817e7ffb3e42" translate="yes" xml:space="preserve">
          <source>Machine is not on the network</source>
          <target state="translated">컴퓨터가 네트워크에 없습니다</target>
        </trans-unit>
        <trans-unit id="bf55ab1cf5927f19f45290600b680716e5e32f16" translate="yes" xml:space="preserve">
          <source>Magenta (purplish red)</source>
          <target state="translated">자홍 (자홍색)</target>
        </trans-unit>
        <trans-unit id="32c97d0530e5003fff0bec696fd2fde110dbea71" translate="yes" xml:space="preserve">
          <source>Magic Mock</source>
          <target state="translated">매직 모의</target>
        </trans-unit>
        <trans-unit id="ba97bef2f5190237815682cb5c24de6d99b343b8" translate="yes" xml:space="preserve">
          <source>Magic methods &lt;em&gt;should&lt;/em&gt; be looked up on the class rather than the instance. Different versions of Python are inconsistent about applying this rule. The supported protocol methods should work with all supported versions of Python.</source>
          <target state="translated">매직 메소드 &lt;em&gt;는&lt;/em&gt; 인스턴스가 아닌 클래스에서 &lt;em&gt;찾아야&lt;/em&gt; 합니다. 이 규칙을 적용하는 데 다른 버전의 Python이 일치하지 않습니다. 지원되는 프로토콜 메소드는 지원되는 모든 버전의 Python에서 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="b04bd0c1375cb0c437085dcd22b5d776344cd11e" translate="yes" xml:space="preserve">
          <source>Magic methods that are supported but not setup by default in &lt;code&gt;MagicMock&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; 에서 지원되지만 기본적으로 설정되지 않은 매직 방법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9a1c07f78b75414a75fc974ca16b8c197d751801" translate="yes" xml:space="preserve">
          <source>MagicMock and magic method support</source>
          <target state="translated">MagicMock 및 매직 메소드 지원</target>
        </trans-unit>
        <trans-unit id="528cb2c5c793842fe4f6bbd5e875eb9ace62e872" translate="yes" xml:space="preserve">
          <source>Mailbox objects</source>
          <target state="translated">사서함 개체</target>
        </trans-unit>
        <trans-unit id="86634cd900d76e4a94c7afdeafd4189dde9eb547" translate="yes" xml:space="preserve">
          <source>Mailcap files are used to configure how MIME-aware applications such as mail readers and Web browsers react to files with different MIME types. (The name &amp;ldquo;mailcap&amp;rdquo; is derived from the phrase &amp;ldquo;mail capability&amp;rdquo;.) For example, a mailcap file might contain a line like &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt;. Then, if the user encounters an email message or Web document with the MIME type &lt;em&gt;video/mpeg&lt;/em&gt;, &lt;code&gt;%s&lt;/code&gt; will be replaced by a filename (usually one belonging to a temporary file) and the &lt;strong&gt;xmpeg&lt;/strong&gt; program can be automatically started to view the file.</source>
          <target state="translated">Mailcap 파일은 메일 리더 및 웹 브라우저와 같은 MIME 인식 응용 프로그램이 다른 MIME 유형의 파일에 반응하는 방식을 구성하는 데 사용됩니다. 예를 들어, mailcap 파일은 &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt; 와 같은 줄을 포함 할 수 있습니다 . xmpeg % s . 그런 다음 사용자에게 MIME 유형이 &lt;em&gt;video / mpeg&lt;/em&gt; 인 전자 메일 메시지 또는 웹 문서가 표시 되면 &lt;code&gt;%s&lt;/code&gt; 는 파일 이름 (일반적으로 임시 파일에 속하는 파일 이름)으로 &lt;strong&gt;바뀌고 xmpeg&lt;/strong&gt; 프로그램을 자동으로 시작하여 파일을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="451a9be697ddead11775c85e4cdec2e8e1e7fccf" translate="yes" xml:space="preserve">
          <source>Maildir is a directory-based mailbox format invented for the qmail mail transfer agent and now widely supported by other programs. Messages in a Maildir mailbox are stored in separate files within a common directory structure. This design allows Maildir mailboxes to be accessed and modified by multiple unrelated programs without data corruption, so file locking is unnecessary.</source>
          <target state="translated">Maildir은 qmail 메일 전송 에이전트 용으로 개발되었으며 현재 다른 프로그램에서 널리 지원되는 디렉토리 기반 사서함 형식입니다. Maildir 메일함에있는 메시지는 공통 디렉토리 구조 내에서 별도의 파일에 저장됩니다. 이 디자인을 사용하면 데이터 손상없이 여러 관련없는 프로그램이 Maildir 사서함에 액세스하고 수정할 수 있으므로 파일 잠금이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b40e5216a6cda56e75561046f7fd7ba0f11c7e63" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes contain three subdirectories, namely: &lt;code&gt;tmp&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, and &lt;code&gt;cur&lt;/code&gt;. Messages are created momentarily in the &lt;code&gt;tmp&lt;/code&gt; subdirectory and then moved to the &lt;code&gt;new&lt;/code&gt; subdirectory to finalize delivery. A mail user agent may subsequently move the message to the &lt;code&gt;cur&lt;/code&gt; subdirectory and store information about the state of the message in a special &amp;ldquo;info&amp;rdquo; section appended to its file name.</source>
          <target state="translated">Maildir 메일 박스에는 세 개의 서브 디렉토리, 즉 &lt;code&gt;tmp&lt;/code&gt; , &lt;code&gt;new&lt;/code&gt; 및 &lt;code&gt;cur&lt;/code&gt; 가 있습니다. 메시지는 &lt;code&gt;tmp&lt;/code&gt; 서브 디렉토리에 잠시 작성된 후 전달을 완료 하기 위해 &lt;code&gt;new&lt;/code&gt; 서브 디렉토리 로 이동됩니다 . 메일 사용자 에이전트는 이후 메시지를 &lt;code&gt;cur&lt;/code&gt; 서브 디렉토리 로 이동하고 메시지 상태에 대한 정보를 파일 이름에 추가 된 특수한 &quot;정보&quot;섹션에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71f497ebb214b9ce15eb874a873e5a71df6ed9c7" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes do not support (or require) locking, so these methods do nothing.</source>
          <target state="translated">Maildir 사서함은 잠금을 지원하지 않거나 필요로하지 않으므로 이러한 방법은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc72f9949f161493c90aa33b348af41b8717a0cf" translate="yes" xml:space="preserve">
          <source>MailmanProxy Objects</source>
          <target state="translated">MailmanProxy 객체</target>
        </trans-unit>
        <trans-unit id="e4e1dbd94f7dcdd2adca3669f8c832e535d92107" translate="yes" xml:space="preserve">
          <source>Main module explicit relative imports</source>
          <target state="translated">메인 모듈 명시 적 상대 수입</target>
        </trans-unit>
        <trans-unit id="a63ee5a0ffd4ee7e4f1505d1af22daf8da80898f" translate="yes" xml:space="preserve">
          <source>Main options</source>
          <target state="translated">주요 옵션</target>
        </trans-unit>
        <trans-unit id="29c2fbf90a10af24cbd4c4648db9d6379273181c" translate="yes" xml:space="preserve">
          <source>Mainly because of backwards compatibility concerns, &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; provides also a legacy API with explicit &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt; methods. While there are valid use cases for the methods outlined below, mapping protocol access is preferred for new projects. The legacy API is at times more advanced, low-level and downright counterintuitive.</source>
          <target state="translated">주로 이전 버전과의 호환성 문제로 인해 &lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt; 는 명시적인 &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; 메소드가 있는 레거시 API도 제공 합니다. 아래에 설명 된 방법에 대한 유효한 사용 사례가 있지만 새 프로젝트에는 프로토콜 액세스 매핑이 선호됩니다. 레거시 API는 때때로 고급, 저수준 및 완전히 반 직관적입니다.</target>
        </trans-unit>
        <trans-unit id="4823e55cd98dad58bd2be122640b91ad2d5ed814" translate="yes" xml:space="preserve">
          <source>Major cross-platform (Windows, Mac OS X, Unix-like) GUI toolkits are available for Python:</source>
          <target state="translated">Python에 주요 크로스 플랫폼 (Windows, Mac OS X, Unix 계열) GUI 툴킷을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79d238209c2cada151fcd2a72d589d9730730983" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt; and case-insensitive matching dependent on the current locale. This flag can be used only with bytes patterns. The use of this flag is discouraged as the locale mechanism is very unreliable, it only handles one &amp;ldquo;culture&amp;rdquo; at a time, and it only works with 8-bit locales. Unicode matching is already enabled by default in Python 3 for Unicode (str) patterns, and it is able to handle different locales/languages. Corresponds to the inline flag &lt;code&gt;(?L)&lt;/code&gt;.</source>
          <target state="translated">제조사 &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\B&lt;/code&gt; 와 현재 지역에 따라 대소 문자를 구별하지 않는다. 이 플래그는 바이트 패턴에만 사용할 수 있습니다. 로케일 메커니즘이 매우 신뢰할 수 없으므로 한 번에 하나의 &quot;문화&quot;만 처리하며 8 비트 로케일에서만 작동하므로이 플래그를 사용하지 않는 것이 좋습니다. 유니 코드 매칭은 파이썬 3에서 유니 코드 (str) 패턴에 대해 기본적으로 이미 활성화되어 있으며 다른 로케일 / 언어를 처리 할 수 ​​있습니다. 인라인 플래그 &lt;code&gt;(?L)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4094168c6f13dde8d4a1402e6d2e892f00c22016" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt; and &lt;code&gt;\S&lt;/code&gt; perform ASCII-only matching instead of full Unicode matching. This is only meaningful for Unicode patterns, and is ignored for byte patterns. Corresponds to the inline flag &lt;code&gt;(?a)&lt;/code&gt;.</source>
          <target state="translated">제조사 &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\B&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\D&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; 및 &lt;code&gt;\S&lt;/code&gt; ASCII 전용 유니 코드 정합 대신 매칭 수행한다. 이것은 유니 코드 패턴에서만 의미가 있으며 바이트 패턴에서는 무시됩니다. 인라인 플래그 &lt;code&gt;(?a)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2859945e3ed955c0801940559aa8f2fa3e430461" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlCondition&lt;/code&gt; table for this control.</source>
          <target state="translated">이 컨트롤 의 &lt;code&gt;ControlCondition&lt;/code&gt; 테이블에 항목을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e78f1ddb4700c5c26bc5d606246d4a1ea1478dca" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlEvent&lt;/code&gt; table for this control.</source>
          <target state="translated">이 컨트롤 의 &lt;code&gt;ControlEvent&lt;/code&gt; 테이블에 항목을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="22e44c261988ea1b3403fdf3cfd43ae89d29b9c4" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;EventMapping&lt;/code&gt; table for this control.</source>
          <target state="translated">이 컨트롤 의 &lt;code&gt;EventMapping&lt;/code&gt; 테이블에 항목을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4968d67864606429422562e4bfe072750713dd88" translate="yes" xml:space="preserve">
          <source>Make an iterator returning elements from the iterable and saving a copy of each. When the iterable is exhausted, return elements from the saved copy. Repeats indefinitely. Roughly equivalent to:</source>
          <target state="translated">반복자가 iterable에서 요소를 리턴하고 각 사본을 저장하도록하십시오. iterable이 소진되면 저장된 사본에서 요소를 리턴하십시오. 무기한 반복합니다. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9ae1a5a9224338d48d85639bd5fbf1307db3d17" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables.</source>
          <target state="translated">각 반복 가능한 요소에서 요소를 집계하는 반복자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="4ecc79480f8b7a91f54bcaea359c899bb7d5a944" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with &lt;em&gt;fillvalue&lt;/em&gt;. Iteration continues until the longest iterable is exhausted. Roughly equivalent to:</source>
          <target state="translated">각 반복 가능한 요소에서 요소를 집계하는 반복자를 작성하십시오. &lt;em&gt;이터 러블의&lt;/em&gt; 길이가 고르지 않으면 누락 된 값이 &lt;em&gt;fillvalue&lt;/em&gt; 로 채워 &lt;em&gt;집니다&lt;/em&gt; . 가장 긴 iterable이 소진 될 때까지 반복이 계속됩니다. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f6d54f93918e62244f26c512e7a161b6bca8eb5a" translate="yes" xml:space="preserve">
          <source>Make an iterator that computes the function using arguments obtained from the iterable. Used instead of &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; when argument parameters are already grouped in tuples from a single iterable (the data has been &amp;ldquo;pre-zipped&amp;rdquo;). The difference between &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#itertools.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt; parallels the distinction between &lt;code&gt;function(a,b)&lt;/code&gt; and &lt;code&gt;function(*c)&lt;/code&gt;. Roughly equivalent to:</source>
          <target state="translated">iterable에서 얻은 인수를 사용하여 함수를 계산하는 반복자를 만듭니다. 인수 매개 변수가 이미 단일 iterable의 튜플로 그룹화되어있을 때 &lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 대신 사용됩니다 (데이터가&amp;ldquo;미리 압축 된&amp;rdquo;). 차이 &lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#itertools.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt; 의 차이 평행 &lt;code&gt;function(a,b)&lt;/code&gt; 및 &lt;code&gt;function(*c)&lt;/code&gt; . 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c96615ae41b720b59370f4efd4451ca2077afbf" translate="yes" xml:space="preserve">
          <source>Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element. Note, the iterator does not produce &lt;em&gt;any&lt;/em&gt; output until the predicate first becomes false, so it may have a lengthy start-up time. Roughly equivalent to:</source>
          <target state="translated">술어가 true 인 한 iterable에서 요소를 삭제하는 반복자를 작성하십시오. 그 후 모든 요소를 ​​반환합니다. 참고 반복자는 생성하지 않습니다 &lt;em&gt;어떤&lt;/em&gt; 술어가 먼저 거짓이 될 때까지이 긴 시동 시간을 가질 수 있도록 출력을. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="892281d3f769ea7deb689777f71449bced9b383a" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from &lt;em&gt;data&lt;/em&gt; returning only those that have a corresponding element in &lt;em&gt;selectors&lt;/em&gt; that evaluates to &lt;code&gt;True&lt;/code&gt;. Stops when either the &lt;em&gt;data&lt;/em&gt; or &lt;em&gt;selectors&lt;/em&gt; iterables has been exhausted. Roughly equivalent to:</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 로 평가 되는 &lt;em&gt;선택자에&lt;/em&gt; 해당 요소가있는 요소 만 리턴하는 &lt;em&gt;데이터&lt;/em&gt; 에서 요소를 필터링하는 반복자를 작성하십시오 . &lt;em&gt;데이터&lt;/em&gt; 또는 &lt;em&gt;선택기&lt;/em&gt; 이터 러블이 소진되면 중지합니다 . 대략 다음과 같습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffb72f4d4622e4e02475b473a321a110e46112f1" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from iterable returning only those for which the predicate is &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;predicate&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return the items that are false. Roughly equivalent to:</source>
          <target state="translated">술어가 &lt;code&gt;False&lt;/code&gt; 인 요소 만 리턴하여 반복 가능한 요소를 필터링하는 반복자를 작성하십시오 . &lt;em&gt;술어&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 인 경우 , 거짓 인 항목을 리턴하십시오. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a957feb62063c86973f86240f6f0031887c5e9cb" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns &lt;em&gt;object&lt;/em&gt; over and over again. Runs indefinitely unless the &lt;em&gt;times&lt;/em&gt; argument is specified. Used as argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; for invariant parameters to the called function. Also used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to create an invariant part of a tuple record.</source>
          <target state="translated">반복해서 &lt;em&gt;객체&lt;/em&gt; 를 반환하는 반복자를 만듭니다 . &lt;em&gt;times&lt;/em&gt; 인수가 지정 되지 않으면 무한정 실행됩니다 . 불변 매개 변수에 대한 호출 된 함수에 대한 &lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 인수로 사용됩니다 . &lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; 과 함께 사용 하여 튜플 레코드의 고정 부분을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5b008cc279ea80916bda0cbd332d0aa7ba0556ec" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns accumulated sums, or accumulated results of other binary functions (specified via the optional &lt;em&gt;func&lt;/em&gt; argument).</source>
          <target state="translated">누적 합계 또는 다른 이진 함수의 누적 결과 (선택적 &lt;em&gt;func&lt;/em&gt; 인수 를 통해 지정)를 반환하는 반복자를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9f714338584f0b2134e7468a019823beae5537be" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns consecutive keys and groups from the &lt;em&gt;iterable&lt;/em&gt;. The &lt;em&gt;key&lt;/em&gt; is a function computing a key value for each element. If not specified or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;key&lt;/em&gt; defaults to an identity function and returns the element unchanged. Generally, the iterable needs to already be sorted on the same key function.</source>
          <target state="translated">&lt;em&gt;iterable&lt;/em&gt; 에서 연속 키와 그룹을 리턴하는 반복자를 작성하십시오 . &lt;em&gt;키는&lt;/em&gt; 각각의 요소에 대한 키 값을 계산하는 함수이다. 지정되지 않거나 &lt;code&gt;None&lt;/code&gt; 이면 &lt;em&gt;키는&lt;/em&gt; 기본적으로 ID 함수로 설정되며 요소를 변경하지 않고 반환합니다. 일반적으로 iterable은 동일한 키 기능으로 이미 정렬되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="59c6932f4ea38a9adb405d00c88d62c4ce199417" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted. Used for treating consecutive sequences as a single sequence. Roughly equivalent to:</source>
          <target state="translated">첫 번째 iterable에서 요소가 소진 될 때까지 요소를 리턴하는 iterator를 작성하고 모든 iterables가 소진 될 때까지 다음 iterable로 진행하십시오. 연속 시퀀스를 단일 시퀀스로 처리하는 데 사용됩니다. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db17bd2fa6e28e684f31b9a14e54b77456d66135" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the iterable as long as the predicate is true. Roughly equivalent to:</source>
          <target state="translated">술어가 true 인 한 iterable에서 요소를 리턴하는 반복자를 작성하십시오. 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0843933413e67d1e5cac3980b5f29ff765b66dc1" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns evenly spaced values starting with number &lt;em&gt;start&lt;/em&gt;. Often used as an argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; to generate consecutive data points. Also, used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to add sequence numbers. Roughly equivalent to:</source>
          <target state="translated">number &lt;em&gt;start로&lt;/em&gt; 시작하여 균일 한 간격의 값을 반환하는 반복자를 만듭니다 . 연속적인 데이터 포인트를 생성 하기 위해 &lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 에 대한 인수로 사용되는 경우가 많습니다 . 또한 시퀀스 번호를 추가하기 위해 &lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; 과 함께 사용됩니다 . 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4994f0ea994acf88c67fba065692eb6b5778a17e" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns selected elements from the iterable. If &lt;em&gt;start&lt;/em&gt; is non-zero, then elements from the iterable are skipped until start is reached. Afterward, elements are returned consecutively unless &lt;em&gt;step&lt;/em&gt; is set higher than one which results in items being skipped. If &lt;em&gt;stop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then iteration continues until the iterator is exhausted, if at all; otherwise, it stops at the specified position. Unlike regular slicing, &lt;a href=&quot;#itertools.islice&quot;&gt;&lt;code&gt;islice()&lt;/code&gt;&lt;/a&gt; does not support negative values for &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, or &lt;em&gt;step&lt;/em&gt;. Can be used to extract related fields from data where the internal structure has been flattened (for example, a multi-line report may list a name field on every third line). Roughly equivalent to:</source>
          <target state="translated">이터 러블에서 선택된 요소를 반환하는 이터레이터를 만듭니다. &lt;em&gt;start&lt;/em&gt; 가 0이 아닌 경우 iterable의 요소는 시작에 도달 할 때까지 건너 뜁니다. 이후에 &lt;em&gt;step&lt;/em&gt; 이 1보다 높게 설정되어 항목을 건너 뛰지 않으면 요소가 연속적으로 반환 됩니다. 경우 &lt;em&gt;정지&lt;/em&gt; 하지 &lt;code&gt;None&lt;/code&gt; 반복자가 소진 될 때까지 전혀 있다면, 반복, 계속; 그렇지 않으면 지정된 위치에서 멈 춥니 다. 일반 슬라이싱과 달리 &lt;a href=&quot;#itertools.islice&quot;&gt; &lt;code&gt;islice()&lt;/code&gt; &lt;/a&gt; 는 &lt;em&gt;start&lt;/em&gt; , &lt;em&gt;stop&lt;/em&gt; 또는 &lt;em&gt;step에&lt;/em&gt; 음수 값을 지원하지 않습니다.&lt;em&gt;&lt;/em&gt;. 내부 구조가 평탄화 된 데이터에서 관련 필드를 추출하는 데 사용할 수 있습니다 (예 : 여러 줄 보고서는 세 번째 줄마다 이름 필드를 나열 할 수 있음). 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="617ef530212f8cbf0f6f805993299c48051459de" translate="yes" xml:space="preserve">
          <source>Make sure &lt;em&gt;nframes&lt;/em&gt; is correct, and close the file if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;. This method is called upon object collection. It will raise an exception if the output stream is not seekable and &lt;em&gt;nframes&lt;/em&gt; does not match the number of frames actually written.</source>
          <target state="translated">&lt;em&gt;nframe&lt;/em&gt; 이 올바른지 확인 하고 파일을 &lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt; 로 연 경우 파일을 닫습니다 . 이 메소드는 객체 수집시 호출됩니다. 출력 스트림을 검색 할 수없고 &lt;em&gt;nframe&lt;/em&gt; 이 실제로 작성된 프레임 수와 일치하지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c69a4de6caa709ef6bb8a12e9677e657aca1ef6b" translate="yes" xml:space="preserve">
          <source>Make sure all possible values are tested including invalid ones. This makes sure that not only all valid values are acceptable but also that improper values are handled correctly.</source>
          <target state="translated">유효하지 않은 값을 포함하여 가능한 모든 값을 테스트하십시오. 이렇게하면 유효한 모든 값을 사용할 수있을뿐만 아니라 부적절한 값을 올바르게 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a627b5bf841e1ea88d28165d37b866a0870f3704" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">스크립트가 읽거나 쓸 필요가있는 파일을 각각 &quot;기타&quot;로 읽을 수 있거나 쓰기 가능한지 확인하십시오. 읽을 수있는 모드는 &lt;code&gt;0o666&lt;/code&gt; 이고 쓰기 가능 하도록 &lt;code&gt;0o644&lt;/code&gt; 이어야합니다 . 이는 보안상의 이유로 HTTP 서버가 특별한 권한없이 스크립트를&amp;ldquo;nobody&amp;rdquo;사용자로 실행하기 때문입니다. 모든 사람이 읽을 수있는 (쓰기, 실행) 파일 만 읽을 수 있습니다 (쓰기, 실행). 실행시 현재 디렉토리도 다릅니다 (일반적으로 서버의 cgi-bin 디렉토리 임). 환경 변수 세트는 로그인 할 때 얻는 것과 다릅니다. 특히, 쉘의 검색 경로를 고려하지 마십시오. 실행 파일 ( &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ) 또는 Python 모듈 검색 경로 ( &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt; )를 흥미로운 것으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="37b6b7519c1bdb855d4363f0027cc454504fbe47" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables ( &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;) to be set to anything interesting.</target>
        </trans-unit>
        <trans-unit id="5de2f6daf567300ef46271ec132a2987bda55e91" translate="yes" xml:space="preserve">
          <source>Make sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).</source>
          <target state="translated">의도하지 않은 부작용 (예 : 새로운 프로세스 시작)을 유발하지 않고 새로운 Python 인터프리터가 메인 모듈을 안전하게 가져올 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9731ad27072d870a7da69ae18e9bb36d5c3dbee3" translate="yes" xml:space="preserve">
          <source>Make sure that your script is readable and executable by &amp;ldquo;others&amp;rdquo;; the Unix file mode should be &lt;code&gt;0o755&lt;/code&gt; octal (use &lt;code&gt;chmod 0755 filename&lt;/code&gt;). Make sure that the first line of the script contains &lt;code&gt;#!&lt;/code&gt; starting in column 1 followed by the pathname of the Python interpreter, for instance:</source>
          <target state="translated">스크립트가 &quot;others&quot;에 의해 읽고 실행 가능한지 확인하십시오. 유닉스 파일 모드는 &lt;code&gt;0o755&lt;/code&gt; 8 진수 여야합니다 ( &lt;code&gt;chmod 0755 filename&lt;/code&gt; 사용 ). 스크립트의 첫 줄에 &lt;code&gt;#!&lt;/code&gt; 포함되어 있는지 확인하십시오 ! 예를 들어 1 열에서 시작하여 파이썬 인터프리터의 경로 이름 이옵니다.</target>
        </trans-unit>
        <trans-unit id="b965c16ca041ae1288bd1a67be9784d3d10d7ad4" translate="yes" xml:space="preserve">
          <source>Make sure the Python interpreter exists and is executable by &amp;ldquo;others&amp;rdquo;.</source>
          <target state="translated">Python 인터프리터가 존재하고 &quot;others&quot;에 의해 실행 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cbab57598b799819458d4a0023b9d15232b16ecd" translate="yes" xml:space="preserve">
          <source>Make sure to clean up after your tests (such as close and remove all temporary files).</source>
          <target state="translated">테스트 후 정리하십시오 (예 : 모든 임시 파일 닫기 및 제거).</target>
        </trans-unit>
        <trans-unit id="c886a4dcc067f50183f6d9e536df375c4dda88c4" translate="yes" xml:space="preserve">
          <source>Make sure you keep references to &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; objects as long as they are used from C code. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t, and if you don&amp;rsquo;t, they may be garbage collected, crashing your program when a callback is made.</source>
          <target state="translated">C 코드에서 사용되는 한 &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt; 객체에 대한 참조를 유지해야합니다 . &lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 는 그렇지 않으며 콜백하지 않으면 가비지 수집되어 프로그램이 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d98adddef5c8372a92668121d843f7b67ce4928" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;'.'&lt;/code&gt; special character match any character at all, including a newline; without this flag, &lt;code&gt;'.'&lt;/code&gt; will match anything &lt;em&gt;except&lt;/em&gt; a newline. Corresponds to the inline flag &lt;code&gt;(?s)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'.'&lt;/code&gt; 를 만드십시오 . 특수 문자는 개행을 포함하여 모든 문자와 일치합니다. 이 플래그가 없으면 &lt;code&gt;'.'&lt;/code&gt; 개행을 &lt;em&gt;제외한&lt;/em&gt; 모든 항목과 일치 합니다. 인라인 플래그 &lt;code&gt;(?s)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1821d7bf0229ac06606d233650d7f9a8ac16a46b" translate="yes" xml:space="preserve">
          <source>Make the path absolute, resolving any symlinks. A new path object is returned:</source>
          <target state="translated">심볼릭 링크를 해결하여 경로를 절대적으로 만듭니다. 새로운 경로 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bb60557d6278b81f58c0e2a368efe17839683f2c" translate="yes" xml:space="preserve">
          <source>Make the turtle invisible. It&amp;rsquo;s a good idea to do this while you&amp;rsquo;re in the middle of doing some complex drawing, because hiding the turtle speeds up the drawing observably.</source>
          <target state="translated">거북이가 보이지 않게하십시오. 거북이를 숨기면 드로잉 속도가 눈에 띄게 빨라지므로 복잡한 드로잉을하는 동안이 작업을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8425653f95186dae7b16793ba9c5e6c775aa6fa7" translate="yes" xml:space="preserve">
          <source>Make the turtle visible.</source>
          <target state="translated">거북이가 보이게합니다.</target>
        </trans-unit>
        <trans-unit id="2b104edc6adc907e507b80dfe4df5940691e17d0" translate="yes" xml:space="preserve">
          <source>Make this feature the current feature of &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt;. New components are automatically added to the default feature, unless a feature is explicitly specified.</source>
          <target state="translated">이 기능을 &lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt; 의 현재 기능으로 만드십시오 . 기능을 명시 적으로 지정하지 않으면 새 구성 요소가 기본 기능에 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="817dde39e08bc70031f6cc0c99bde032f0727edc" translate="yes" xml:space="preserve">
          <source>Make this path a symbolic link to &lt;em&gt;target&lt;/em&gt;. Under Windows, &lt;em&gt;target_is_directory&lt;/em&gt; must be true (default &lt;code&gt;False&lt;/code&gt;) if the link&amp;rsquo;s target is a directory. Under POSIX, &lt;em&gt;target_is_directory&lt;/em&gt;&amp;rsquo;s value is ignored.</source>
          <target state="translated">이 경로를 &lt;em&gt;target에&lt;/em&gt; 대한 심볼릭 링크로 만드십시오 . Windows 에서 링크의 대상이 디렉토리 인 경우 &lt;em&gt;target_is_directory&lt;/em&gt; 는 true (기본값 &lt;code&gt;False&lt;/code&gt; ) 여야합니다 . POSIX에서는 &lt;em&gt;target_is_directory&lt;/em&gt; 값이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0589ca0705dbb10c03f08251a6b8ad92b9066e42" translate="yes" xml:space="preserve">
          <source>Makes a normal distribution instance with &lt;em&gt;mu&lt;/em&gt; and &lt;em&gt;sigma&lt;/em&gt; parameters estimated from the &lt;em&gt;data&lt;/em&gt; using &lt;a href=&quot;#statistics.fmean&quot;&gt;&lt;code&gt;fmean()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#statistics.stdev&quot;&gt;&lt;code&gt;stdev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#statistics.fmean&quot;&gt; &lt;code&gt;fmean()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#statistics.stdev&quot;&gt; &lt;code&gt;stdev()&lt;/code&gt; &lt;/a&gt; 사용 하여 &lt;em&gt;데이터&lt;/em&gt; 에서 추정 된 &lt;em&gt;mu&lt;/em&gt; 및 &lt;em&gt;sigma&lt;/em&gt; 매개 변수를 사용하여 정규 분포 인스턴스를 만듭니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74478c83d77f7f9d3b16b8e25a30c78af412de6d" translate="yes" xml:space="preserve">
          <source>Making a Phonebook</source>
          <target state="translated">전화 번호부 만들기</target>
        </trans-unit>
        <trans-unit id="5c927175b3add69e1fe7dc7bfe7e29837fc73c90" translate="yes" xml:space="preserve">
          <source>Making a Windows executable</source>
          <target state="translated">Windows 실행 파일 만들기</target>
        </trans-unit>
        <trans-unit id="855506ce6753b0d9a5b09ffd99dfc10fa3696ea0" translate="yes" xml:space="preserve">
          <source>Manager Widgets</source>
          <target state="translated">관리자 위젯</target>
        </trans-unit>
        <trans-unit id="2a361c4c32a8b1dcdd56014985b930dd04f772a1" translate="yes" xml:space="preserve">
          <source>Manager processes will be shutdown as soon as they are garbage collected or their parent process exits. The manager classes are defined in the &lt;a href=&quot;#module-multiprocessing.managers&quot;&gt;&lt;code&gt;multiprocessing.managers&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">관리자 프로세스는 가비지 수집되거나 부모 프로세스가 종료되는 즉시 종료됩니다. 관리자 클래스는 &lt;a href=&quot;#module-multiprocessing.managers&quot;&gt; &lt;code&gt;multiprocessing.managers&lt;/code&gt; &lt;/a&gt; 모듈에 정의되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="146be58ae4c0ee3d8c972415be0e7c22bae315f6" translate="yes" xml:space="preserve">
          <source>Managers provide a way to create data which can be shared between different processes, including sharing over a network between processes running on different machines. A manager object controls a server process which manages &lt;em&gt;shared objects&lt;/em&gt;. Other processes can access the shared objects by using proxies.</source>
          <target state="translated">관리자는 다른 시스템에서 실행되는 프로세스간에 네트워크를 통한 공유를 포함하여 다른 프로세스간에 공유 할 수있는 데이터를 작성하는 방법을 제공합니다. 관리자 객체는 &lt;em&gt;공유 객체&lt;/em&gt; 를 관리하는 서버 프로세스를 제어 &lt;em&gt;합니다&lt;/em&gt; . 다른 프로세스는 프록시를 사용하여 공유 객체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9da4dac0b16742ede0cd08c5d71857dc8b235645" translate="yes" xml:space="preserve">
          <source>Manual Context Management</source>
          <target state="translated">수동 컨텍스트 관리</target>
        </trans-unit>
        <trans-unit id="5be972ee604abf1abcdd9643e605d5e6677470aa" translate="yes" xml:space="preserve">
          <source>Manual settings</source>
          <target state="translated">수동 설정</target>
        </trans-unit>
        <trans-unit id="343daa0eb5e43f021e62c3c8801d5b10743a76d4" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Linux documentation, are also defined in the socket module.</source>
          <target state="translated">Linux 문서에 문서화 된 이러한 형식의 많은 상수도 소켓 모듈에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9a81759bd6fd007d62861d3fabb2bd9fbcb88bd" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Unix documentation on sockets and/or the IP protocol, are also defined in the socket module. They are generally used in arguments to the &lt;code&gt;setsockopt()&lt;/code&gt; and &lt;code&gt;getsockopt()&lt;/code&gt; methods of socket objects. In most cases, only those symbols that are defined in the Unix header files are defined; for a few symbols, default values are provided.</source>
          <target state="translated">소켓 및 / 또는 IP 프로토콜에 대한 Unix 문서에 설명 된 이러한 형식의 많은 상수도 소켓 모듈에 정의되어 있습니다. 일반적으로 소켓 객체 의 &lt;code&gt;setsockopt()&lt;/code&gt; 및 &lt;code&gt;getsockopt()&lt;/code&gt; 메소드에 대한 인수로 사용 됩니다. 대부분의 경우 Unix 헤더 파일에 정의 된 기호 만 정의됩니다. 일부 기호의 경우 기본값이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="510dd560760442cac504a2b167911b6a0ab8aa23" translate="yes" xml:space="preserve">
          <source>Many non-threadsafe asyncio APIs (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt;&lt;code&gt;loop.call_at()&lt;/code&gt;&lt;/a&gt; methods) raise an exception if they are called from a wrong thread.</source>
          <target state="translated">스레드로부터 안전하지 않은 많은 asyncio API (예 : &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt; &lt;code&gt;loop.call_at()&lt;/code&gt; &lt;/a&gt; 메서드)가 잘못된 스레드에서 호출되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="815297a48147fd3991e217e62ae1a5520c0cbce5" translate="yes" xml:space="preserve">
          <source>Many of the above classes also have a &lt;code&gt;Unique&lt;/code&gt; variant (for example, &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt;). The only difference is that in the &lt;code&gt;Unique&lt;/code&gt; variant, &lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt;&lt;code&gt;max_count&lt;/code&gt;&lt;/a&gt; is set to 1.</source>
          <target state="translated">위의 많은 클래스에는 &lt;code&gt;Unique&lt;/code&gt; 변형 (예 : &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt; )이 있습니다. &lt;code&gt;Unique&lt;/code&gt; 변형 은 고유 변형에서 &lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt; &lt;code&gt;max_count&lt;/code&gt; &lt;/a&gt; 가 1로 설정되어 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2163dea9d3d8731a332014be1542cdabce604244" translate="yes" xml:space="preserve">
          <source>Many of the character sets support the same languages. They vary in individual characters (e.g. whether the EURO SIGN is supported or not), and in the assignment of characters to code positions. For the European languages in particular, the following variants typically exist:</source>
          <target state="translated">많은 문자 집합이 동일한 언어를 지원합니다. 개별 문자 (예 : EURO SIGN 지원 여부)와 코드 위치에 문자를 지정할 때마다 다릅니다. 특히 유럽 언어의 경우 일반적으로 다음과 같은 변형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ccfa60e5e5281ef43935b1343f2bf376660936" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">다음의 많은 메소드는 선택적 키워드 전용 인수 &lt;em&gt;파일을 사용합니다&lt;/em&gt; . 때 &lt;em&gt;파일&lt;/em&gt; 인수가 제공되고, 그것은이어야합니다 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 바이너리 쓰기 위해 열, 또는에 기록 할 수있는 디스크에있는 파일의 이름. 그런 다음이 메소드는 서버가 응답 행과 종료 점을 제외한 모든 데이터를 파일에 기록합니다. 메소드가 정상적으로 리턴하는 행, 튜플 또는 오브젝트 목록은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d204b199705e1c56c7625c18f39cb3eba8456ca2" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</target>
        </trans-unit>
        <trans-unit id="ffa4bc0d6f566c5f847060ae6ead4557c906984b" translate="yes" xml:space="preserve">
          <source>Many of the not-very-useful (private to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; rather than the thing being mocked) underscore and double underscore prefixed attributes have been filtered from the result of calling &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. If you dislike this behaviour you can switch it off by setting the module level switch &lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">유용하지 않은 ( &lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 아닌 Mock 전용 ) 밑줄 및 이중 밑줄 접두어 속성이 &lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt; 을 호출 한 결과에서 필터링되었습니다 . 이 동작이 마음에 들지 않으면 모듈 레벨 스위치 &lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt; &lt;code&gt;FILTER_DIR&lt;/code&gt; &lt;/a&gt; 을 설정하여 스위치를 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9a47225407eea7973acc57a86154fda62e2e8ed" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">많은 작업에는 &quot;제자리&quot;버전이 있습니다. 아래는 일반적인 구문보다 내부 연산자에 대한보다 기본적인 액세스를 제공하는 함수입니다. 예를 들어, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;명령문 &lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; 는 &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; . 또 다른 방법은 &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; 는 복합 명령문 &lt;code&gt;z = x; z += y&lt;/code&gt; 와 같다는 것입니다 . z + = y 입니다.</target>
        </trans-unit>
        <trans-unit id="9d7987eba2d592dbc971e76e99b6ece135aef826" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; . Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0775e95d12acf1c76496fc0019dec4ccce66e92a" translate="yes" xml:space="preserve">
          <source>Many other operations also produce lists, including the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; built-in.</source>
          <target state="translated">다른 많은 연산들도 &lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 내장을 포함하여 목록을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="3892486ba2ca4c1adde5de5ad35763a15238b251" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the &lt;code&gt;svn&lt;/code&gt; program can invoke sub-commands like &lt;code&gt;svn
checkout&lt;/code&gt;, &lt;code&gt;svn update&lt;/code&gt;, and &lt;code&gt;svn commit&lt;/code&gt;. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; supports the creation of such sub-commands with the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method is normally called with no arguments and returns a special action object. This object has a single method, &lt;code&gt;add_parser()&lt;/code&gt;, which takes a command name and any &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor arguments, and returns an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object that can be modified as usual.</source>
          <target state="translated">예를 들어, &lt;code&gt;svn&lt;/code&gt; 프로그램은 &lt;code&gt;svn checkout&lt;/code&gt; , &lt;code&gt;svn update&lt;/code&gt; 및 &lt;code&gt;svn commit&lt;/code&gt; 과 같은 하위 명령을 호출 할 수 있습니다 . 이 방법으로 기능을 분할하는 것은 프로그램이 다른 종류의 명령 줄 인수를 요구하는 여러 가지 다른 기능을 수행 할 때 특히 좋은 아이디어가 될 수 있습니다. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 이러한 하위 명령 작성을 지원합니다 . &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt; 메소드는 일반적으로 인수 및 반환 특별 조치 객체라고합니다. 이 객체에는 &lt;code&gt;add_parser()&lt;/code&gt; 단일 메소드 가 있으며 명령 이름과&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 생성자 인수를 사용하여평소대로 수정할 수있는&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 객체를반환합니다.</target>
        </trans-unit>
        <trans-unit id="842c3a3980d59e2ccc8a6587608bb5e288adaa34" translate="yes" xml:space="preserve">
          <source>Many sites disable SMTP &lt;code&gt;VRFY&lt;/code&gt; in order to foil spammers.</source>
          <target state="translated">많은 사이트 에서 스패머를 제거하기 위해 SMTP &lt;code&gt;VRFY&lt;/code&gt; 를 사용하지 않도록 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="84d090f9a4b10c8e70604e91d362e68e7d1715a8" translate="yes" xml:space="preserve">
          <source>Map character sets to their email properties.</source>
          <target state="translated">문자 세트를 이메일 특성에 맵핑하십시오.</target>
        </trans-unit>
        <trans-unit id="7c158793b0576eb0e99170737dcf651e9b593ba3" translate="yes" xml:space="preserve">
          <source>Mapping Basic Tk into Tkinter</source>
          <target state="translated">기본 Tk를 Tkinter로 매핑</target>
        </trans-unit>
        <trans-unit id="29b99d5bba5dcab3d3f32602bec9b94930d68f31" translate="yes" xml:space="preserve">
          <source>Mapping Operators to Functions</source>
          <target state="translated">연산자를 함수에 매핑</target>
        </trans-unit>
        <trans-unit id="18d3adef974e9e8a9c707b5522d4ceef6e880500" translate="yes" xml:space="preserve">
          <source>Mapping Protocol Access</source>
          <target state="translated">매핑 프로토콜 액세스</target>
        </trans-unit>
        <trans-unit id="ebd82d89b582db2203963681055d49cb2fdde5e8" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; &lt;code&gt;dict&lt;/code&gt;</source>
          <target state="translated">매핑 유형 &amp;mdash; &lt;code&gt;dict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5781654b4505c67ba0da3a9924958b822ec242bc" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; dict</source>
          <target state="translated">매핑 유형 &amp;mdash; dict</target>
        </trans-unit>
        <trans-unit id="0bf0ef93e58f3620e84487a6484aef9dbeeb1def" translate="yes" xml:space="preserve">
          <source>Mapping class that references keys weakly. Entries in the dictionary will be discarded when there is no longer a strong reference to the key. This can be used to associate additional data with an object owned by other parts of an application without adding attributes to those objects. This can be especially useful with objects that override attribute accesses.</source>
          <target state="translated">키를 약하게 참조하는 매핑 클래스 더 이상 키에 대한 참조가 없으면 사전의 항목이 삭제됩니다. 이 속성을 사용하면 해당 객체에 속성을 추가하지 않고도 응용 프로그램의 다른 부분이 소유 한 객체와 추가 데이터를 연결할 수 있습니다. 이것은 속성 액세스를 재정의하는 객체에 특히 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7046eea20884db0b40984559cdb957133a9a851" translate="yes" xml:space="preserve">
          <source>Mapping class that references values weakly. Entries in the dictionary will be discarded when no strong reference to the value exists any more.</source>
          <target state="translated">값을 약하게 참조하는 매핑 클래스 값에 대한 참조가 더 이상 존재하지 않으면 사전의 항목이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="15922488c98b6104b02093ae02b8e9a1520e3912" translate="yes" xml:space="preserve">
          <source>Mapping key (optional), consisting of a parenthesised sequence of characters (for example, &lt;code&gt;(somename)&lt;/code&gt;).</source>
          <target state="translated">괄호로 묶은 일련의 문자 (예 : &lt;code&gt;(somename)&lt;/code&gt; ) 로 구성된 맵핑 키 (선택 사항 ).</target>
        </trans-unit>
        <trans-unit id="ffbd3fab4e4bbef4f2e2b4baa2dbf3d3454ab70b" translate="yes" xml:space="preserve">
          <source>Mapping protocol access is a generic name for functionality that enables using custom objects as if they were dictionaries. In case of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;, the mapping interface implementation is using the &lt;code&gt;parser['section']['option']&lt;/code&gt; notation.</source>
          <target state="translated">매핑 프로토콜 액세스는 사용자 지정 개체를 마치 사전처럼 사용할 수 있도록하는 기능의 일반적인 이름입니다. 경우 &lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt; 매핑 인터페이스 구현은 사용 &lt;code&gt;parser['section']['option']&lt;/code&gt; 표기.</target>
        </trans-unit>
        <trans-unit id="fc5f87a388e33c8327e76fb56366eadca8297613" translate="yes" xml:space="preserve">
          <source>Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; to the equivalent syslog names, and all other level names to &amp;lsquo;warning&amp;rsquo;.</source>
          <target state="translated">로깅 레벨 이름을 syslog 우선 순위 이름에 맵핑합니다. 사용자 지정 수준을 사용하거나 기본 알고리즘이 사용자의 요구에 적합하지 않은 경우이를 재정의해야 할 수도 있습니다. 기본 알고리즘은 &lt;code&gt;DEBUG&lt;/code&gt; , &lt;code&gt;INFO&lt;/code&gt; , &lt;code&gt;WARNING&lt;/code&gt; , &lt;code&gt;ERROR&lt;/code&gt; 및 &lt;code&gt;CRITICAL&lt;/code&gt; 을 해당 syslog 이름에 매핑 하고 다른 모든 레벨 이름은 'warning'에 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="76ccf4240d86fc261192b90e86fb8e3d610a0808" translate="yes" xml:space="preserve">
          <source>Marc-Andr&amp;eacute; Lemburg</source>
          <target state="translated">마크 안드레 렘 부르크</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="78b4b0fca0a8558cdba8df445fed06a9f493ddd2" translate="yes" xml:space="preserve">
          <source>Mark a protocol class as a runtime protocol.</source>
          <target state="translated">프로토콜 클래스를 런타임 프로토콜로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="bdc16c3d4446aea587c961d5bd660311653c4972" translate="yes" xml:space="preserve">
          <source>Mark all lines in the window as unchanged since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt; 를 마지막으로 호출 한 후 창의 모든 행을 변경되지 않은 것으로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="b902da44d0895caa8231cc9e0384c86417f1ce22" translate="yes" xml:space="preserve">
          <source>Mark for refresh but wait. This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen. To accomplish that, call &lt;a href=&quot;#curses.doupdate&quot;&gt;&lt;code&gt;doupdate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새로 고침을 표시하지만 기다리십시오. 이 기능은 원하는 창의 상태를 나타내는 데이터 구조를 업데이트하지만 실제 화면을 강제로 업데이트하지는 않습니다. 이를 위해 &lt;a href=&quot;#curses.doupdate&quot;&gt; &lt;code&gt;doupdate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e559ee62a3983226dcbd83616d76d03181ae0a0b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set an exception.</source>
          <target state="translated">미래를 &lt;em&gt;완료&lt;/em&gt; 로 표시하고 예외를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="645ca0c18193b0ded87798fc215d9dd6ea2d332b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set its result.</source>
          <target state="translated">미래를 &lt;em&gt;완료&lt;/em&gt; 로 표시 하고 결과를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a99df56423ec62f1dfba367c986811c41a5f6a69" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as disabled.</source>
          <target state="translated">중단 점을 비활성화 된 것으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="e3cef4076875b3fcfd897d8fd8f8b835f2539450" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as enabled.</source>
          <target state="translated">중단 점을 활성화 된 것으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="a61cfadccb7dbb909178bf6d48e30d04525fa479" translate="yes" xml:space="preserve">
          <source>Mark the graph as finished and check for cycles in the graph. If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt;&lt;code&gt;CycleError&lt;/code&gt;&lt;/a&gt; will be raised, but &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt; can still be used to obtain as many nodes as possible until cycles block more progress. After a call to this function, the graph cannot be modified, and therefore no more nodes can be added using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mark the graph as finished and check for cycles in the graph. If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt; &lt;code&gt;CycleError&lt;/code&gt; &lt;/a&gt; will be raised, but &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt; can still be used to obtain as many nodes as possible until cycles block more progress. After a call to this function, the graph cannot be modified, and therefore no more nodes can be added using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef57eb325f600134e0961a71843953dac27f2aa5" translate="yes" xml:space="preserve">
          <source>Mark the socket closed. The underlying system resource (e.g. a file descriptor) is also closed when all file objects from &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; are closed. Once that happens, all future operations on the socket object will fail. The remote end will receive no more data (after queued data is flushed).</source>
          <target state="translated">소켓을 닫은 상태로 표시하십시오. &lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt; 모든 파일 객체가 닫히면 기본 시스템 리소스 (예 : 파일 설명자)도 닫힙니다. 그런 다음 소켓 개체에 대한 모든 이후 작업이 실패합니다. 리모트 엔드는 더 이상 데이터를받지 않습니다 (대기 된 데이터를 비운 후).</target>
        </trans-unit>
        <trans-unit id="91570de3be09b7c281d418e67e319eb7eac4ceb0" translate="yes" xml:space="preserve">
          <source>Mark the test as an expected failure. If the test fails it will be considered a success. If the test passes, it will be considered a failure.</source>
          <target state="translated">테스트를 예상 실패로 표시하십시오. 테스트에 실패하면 성공한 것으로 간주됩니다. 테스트에 통과하면 실패로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="fb33120620b42e4c6568086b4548bf56c1a0ef93" translate="yes" xml:space="preserve">
          <source>Marked as important</source>
          <target state="translated">중요한 것으로 표시</target>
        </trans-unit>
        <trans-unit id="07e5aae18cb637acd22f163aa224ab431ff10cb0" translate="yes" xml:space="preserve">
          <source>Marked for subsequent deletion</source>
          <target state="translated">후속 삭제 표시</target>
        </trans-unit>
        <trans-unit id="279c544e4838a63b639d33288ccef17eeb35736b" translate="yes" xml:space="preserve">
          <source>Marks a set of nodes returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt; as processed, unblocking any successor of each node in &lt;em&gt;nodes&lt;/em&gt; for being returned in the future by a call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Marks a set of nodes returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt; as processed, unblocking any successor of each node in &lt;em&gt;nodes&lt;/em&gt; for being returned in the future by a call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e44d1a49ab6471526e55a08a843c13a0050773d" translate="yes" xml:space="preserve">
          <source>Martin von L&amp;ouml;wis</source>
          <target state="translated">마틴 폰 로이스</target>
        </trans-unit>
        <trans-unit id="3a6db205066d4b1bbdc6724346fcfa1af498ef02" translate="yes" xml:space="preserve">
          <source>Mask for file owner permissions.</source>
          <target state="translated">파일 소유자 권한 마스크.</target>
        </trans-unit>
        <trans-unit id="b5fc0001fa738ddce48f31c45c0d3794679d1545" translate="yes" xml:space="preserve">
          <source>Mask for group permissions.</source>
          <target state="translated">그룹 권한 마스크.</target>
        </trans-unit>
        <trans-unit id="450210d9790fb16d1dbe9733f4212fbc9774479d" translate="yes" xml:space="preserve">
          <source>Mask for permissions for others (not in group).</source>
          <target state="translated">다른 사람 (그룹이 아님)에 대한 권한 마스크.</target>
        </trans-unit>
        <trans-unit id="0826b4ceb6778b296bb3f36f65361f0cb844377a" translate="yes" xml:space="preserve">
          <source>Match &lt;em&gt;test&lt;/em&gt; to patterns set in &lt;a href=&quot;#test.support.set_match_tests&quot;&gt;&lt;code&gt;set_match_tests()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#test.support.set_match_tests&quot;&gt; &lt;code&gt;set_match_tests()&lt;/code&gt; &lt;/a&gt; 설정된 패턴과 &lt;em&gt;테스트&lt;/em&gt; 를 일치 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="bb305e9c61f18de73442b09968fd63313bd41a06" translate="yes" xml:space="preserve">
          <source>Match Objects</source>
          <target state="translated">객체 일치</target>
        </trans-unit>
        <trans-unit id="93224cb05b372360e7ead31f8491156ed05f4cc5" translate="yes" xml:space="preserve">
          <source>Match objects always have a boolean value of &lt;code&gt;True&lt;/code&gt;. Since &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;None&lt;/code&gt; when there is no match, you can test whether there was a match with a simple &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">일치 개체는 항상 부울 값이 &lt;code&gt;True&lt;/code&gt; 입니다. 이후 &lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;None&lt;/code&gt; 일치가 없다, 당신은 간단한와 일치 여부를 테스트 할 수 있습니다 &lt;code&gt;if&lt;/code&gt; 문 :</target>
        </trans-unit>
        <trans-unit id="c7d3fdaa1b461ec568f838ede0d4a6626d22e9f8" translate="yes" xml:space="preserve">
          <source>Match objects support the following methods and attributes:</source>
          <target state="translated">일치 개체는 다음과 같은 방법과 특성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="949fae956dd5c3ab00023592a8026f4d3f8d83a0" translate="yes" xml:space="preserve">
          <source>Match this path against the provided glob-style pattern. Return &lt;code&gt;True&lt;/code&gt; if matching is successful, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">제공된 glob 스타일 패턴과이 경로를 일치시킵니다. 반환 &lt;code&gt;True&lt;/code&gt; 매칭, 성공하면 &lt;code&gt;False&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="179f5245f2bff101b819b11ca265a7859b9b8741" translate="yes" xml:space="preserve">
          <source>Matches Unicode whitespace characters (which includes &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;, and also many other characters, for example the non-breaking spaces mandated by typography rules in many languages). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; is matched.</source>
          <target state="translated">유니 코드 공백 문자 ( &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; ) 및 기타 여러 문자 (예 : 여러 언어의 타이포그래피 규칙에 의해 규정 된 비 공백 공백 포함)와 일치 합니다. 경우] &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 의&lt;/a&gt; 플래그가 사용되는, 단지 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 일치한다.</target>
        </trans-unit>
        <trans-unit id="6d38947cd9f594564bec8a24b3a93f3632f7ac2c" translate="yes" xml:space="preserve">
          <source>Matches Unicode word characters; this includes most characters that can be part of a word in any language, as well as numbers and the underscore. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; is matched.</source>
          <target state="translated">유니 코드 단어 문자와 일치합니다. 여기에는 숫자와 밑줄뿐만 아니라 모든 언어로 단어의 일부가 될 수있는 대부분의 문자가 포함됩니다. 경우] &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 의&lt;/a&gt; 플래그가 사용되는, 단지 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; 일치한다.</target>
        </trans-unit>
        <trans-unit id="a02ff78bb9f573d06ae9b31f950bd8ca71d47da4" translate="yes" xml:space="preserve">
          <source>Matches any Unicode decimal digit (that is, any character in Unicode character category [Nd]). This includes &lt;code&gt;[0-9]&lt;/code&gt;, and also many other digit characters. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used only &lt;code&gt;[0-9]&lt;/code&gt; is matched.</source>
          <target state="translated">모든 유니 코드 10 진수 (즉, 유니 코드 문자 범주 [Nd]의 모든 문자)와 일치합니다. 여기에는 &lt;code&gt;[0-9]&lt;/code&gt; 및 다른 많은 숫자가 포함됩니다. 경우] &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 의&lt;/a&gt; 플래그만을 사용되는 &lt;code&gt;[0-9]&lt;/code&gt; 와 일치한다.</target>
        </trans-unit>
        <trans-unit id="6faa8f9895eeaa59ee824b76c6784280c5d25e28" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a decimal digit. This is the opposite of &lt;code&gt;\d&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^0-9]&lt;/code&gt;.</source>
          <target state="translated">10 진수가 아닌 문자를 찾습니다. 이것은 &lt;code&gt;\d&lt;/code&gt; 와 반대입니다 . &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 인&lt;/a&gt; 경우 플래그가 사용되는이 동등해진다 &lt;code&gt;[^0-9]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="506ee12774fd4c8b11b499d0991f2faec4d49031" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a whitespace character. This is the opposite of &lt;code&gt;\s&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">공백 문자가 아닌 모든 문자와 일치합니다. 이것은 &lt;code&gt;\s&lt;/code&gt; 와 반대입니다 . 경우] &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 의&lt;/a&gt; 플래그가 사용되는이 동등해진다 &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb667e499cd951fea4ed70cad16b482c6b171c37" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a word character. This is the opposite of &lt;code&gt;\w&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters which are neither alphanumeric in the current locale nor the underscore.</source>
          <target state="translated">단어 문자가 아닌 모든 문자와 일치합니다. 이것은 &lt;code&gt;\w&lt;/code&gt; 와 반대입니다 . 경우] &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; 의&lt;/a&gt; 플래그가 사용되는이 동등해진다 &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt; . 경우 &lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt; 플래그를 사용, 현재 로케일이나 밑줄의 숫자도 문자를 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d684d6a5303e5b104e9d7e1feebac2fca2e629fd" translate="yes" xml:space="preserve">
          <source>Matches any decimal digit; this is equivalent to &lt;code&gt;[0-9]&lt;/code&gt;.</source>
          <target state="translated">십진수와 일치합니다. 이것은 &lt;code&gt;[0-9]&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1ec81b9258c564d40fd0ace5573c147f0fc89717" translate="yes" xml:space="preserve">
          <source>Matches characters considered alphanumeric in the ASCII character set; this is equivalent to &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters considered alphanumeric in the current locale and the underscore.</source>
          <target state="translated">ASCII 문자 집합에서 영숫자로 간주되는 문자를 찾습니다. 이것은 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; 와 같습니다 . &lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; 의&lt;/a&gt; 경우 플래그를 사용, 현재 로케일 및 밑줄에 숫자로 간주 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="79e224040ee5cddbfb21a4d52e1d10cdcc916f03" translate="yes" xml:space="preserve">
          <source>Matches characters considered whitespace in the ASCII character set; this is equivalent to &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">ASCII 문자 세트에서 공백으로 간주되는 문자와 일치합니다. 이것은 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5760ea3990de7a6de7c5094a464f1ee8146a643" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; doesn&amp;rsquo;t match next. This is a &lt;em&gt;negative lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">일치하는 경우는 &lt;code&gt;...&lt;/code&gt; 다음에 일치하지 않습니다. 이것은 &lt;em&gt;부정적 예측&lt;/em&gt; 입니다. 예를 들어, &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; 일치 &lt;code&gt;'Isaac '&lt;/code&gt; 이 유일하면 &lt;em&gt;되지&lt;/em&gt; 다음 &lt;code&gt;'Asimov'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="645a3b740373b49f15f59d4fb0d89acad2b7e416" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; matches next, but doesn&amp;rsquo;t consume any of the string. This is called a &lt;em&gt;lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">일치하는 경우는 &lt;code&gt;...&lt;/code&gt; 다음 일치하지만 문자열 중 하나를 소비하지 않습니다. 이를 &lt;em&gt;미리보기 어설 션&lt;/em&gt; 이라고합니다 . 예를 들어, &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; 은 &lt;code&gt;'Asimov'&lt;/code&gt; 뒤에 오는 경우에만 &lt;code&gt;'Isaac '&lt;/code&gt; 과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="9841ece5b3fb751e15c8bcf3e454136a92d6ad87" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is not preceded by a match for &lt;code&gt;...&lt;/code&gt;. This is called a &lt;em&gt;negative lookbehind assertion&lt;/em&gt;. Similar to positive lookbehind assertions, the contained pattern must only match strings of some fixed length. Patterns which start with negative lookbehind assertions may match at the beginning of the string being searched.</source>
          <target state="translated">문자열의 현재 위치 앞에 &lt;code&gt;...&lt;/code&gt; 와 일치하지 않는 경우 일치합니다 . 이것을 &lt;em&gt;네거티브 룩 베어 어설 션&lt;/em&gt; 이라고합니다 . 포지티브 lookbehind 어설 션과 마찬가지로 포함 된 패턴은 고정 길이의 문자열과 만 일치해야합니다. 네거티브 lookbehind 어설 션으로 시작하는 패턴은 검색중인 문자열의 시작 부분에서 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47ac2333577ba84b6d03fe92bd867d24bbd26ed7" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is preceded by a match for &lt;code&gt;...&lt;/code&gt; that ends at the current position. This is called a &lt;em&gt;positive lookbehind assertion&lt;/em&gt;. &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; will find a match in &lt;code&gt;'abcdef'&lt;/code&gt;, since the lookbehind will back up 3 characters and check if the contained pattern matches. The contained pattern must only match strings of some fixed length, meaning that &lt;code&gt;abc&lt;/code&gt; or &lt;code&gt;a|b&lt;/code&gt; are allowed, but &lt;code&gt;a*&lt;/code&gt; and &lt;code&gt;a{3,4}&lt;/code&gt; are not. Note that patterns which start with positive lookbehind assertions will not match at the beginning of the string being searched; you will most likely want to use the &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; function rather than the &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">문자열의 현재 위치 앞에 현재 위치에서 끝나는 &lt;code&gt;...&lt;/code&gt; 에 대한 일치가 있으면 일치합니다 . 이를 &lt;em&gt;긍정적 인 비하인드 어설 션&lt;/em&gt; 이라고합니다 . &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; 는 &lt;code&gt;'abcdef'&lt;/code&gt; 에서 일치하는 항목을 찾습니다. lookbehind는 3자를 백업하고 포함 된 패턴이 일치하는지 확인합니다. 포함 된 패턴은 고정 길이의 문자열에만 일치해야합니다. 즉 &lt;code&gt;abc&lt;/code&gt; 또는 &lt;code&gt;a|b&lt;/code&gt; 는 허용되지만 &lt;code&gt;a*&lt;/code&gt; 및 &lt;code&gt;a{3,4}&lt;/code&gt; 는 허용되지 않습니다. 긍정적 인 lookbehind 어설 션으로 시작하는 패턴은 검색중인 문자열의 시작 부분과 일치하지 않습니다. &lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt; 를 사용하고 싶을 것입니다.&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt; 함수가 아닌 함수 :</target>
        </trans-unit>
        <trans-unit id="8552016e487b5c84ddf4be20f70b50e5f4e56d47" translate="yes" xml:space="preserve">
          <source>Matches only at the end of the string.</source>
          <target state="translated">문자열의 끝에서만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="de268deff53557a1f18b43b0cc932e4c34479169" translate="yes" xml:space="preserve">
          <source>Matches only at the start of the string.</source>
          <target state="translated">문자열의 시작 부분에서만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c08d22497155abd5fe50f74938140c4799fbcef4" translate="yes" xml:space="preserve">
          <source>Matches the contents of the group of the same number. Groups are numbered starting from 1. For example, &lt;code&gt;(.+) \1&lt;/code&gt; matches &lt;code&gt;'the the'&lt;/code&gt; or &lt;code&gt;'55 55'&lt;/code&gt;, but not &lt;code&gt;'thethe'&lt;/code&gt; (note the space after the group). This special sequence can only be used to match one of the first 99 groups. If the first digit of &lt;em&gt;number&lt;/em&gt; is 0, or &lt;em&gt;number&lt;/em&gt; is 3 octal digits long, it will not be interpreted as a group match, but as the character with octal value &lt;em&gt;number&lt;/em&gt;. Inside the &lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt; of a character class, all numeric escapes are treated as characters.</source>
          <target state="translated">같은 번호의 그룹 내용과 일치합니다. 그룹은 예를 들어 1부터 번호가 매겨 &lt;code&gt;(.+) \1&lt;/code&gt; 매치 &lt;code&gt;'the the'&lt;/code&gt; 또는 &lt;code&gt;'55 55'&lt;/code&gt; 가 아닌 &lt;code&gt;'thethe'&lt;/code&gt; (군 후의 공간을 참고). 이 특수 시퀀스는 처음 99 개 그룹 중 하나와 일치하는 데만 사용할 수 있습니다. 의 첫 번째 숫자 경우 &lt;em&gt;숫자가&lt;/em&gt; 0, 또는 &lt;em&gt;숫자가&lt;/em&gt; 3 진수 자리, 그것은 그룹 일치하는 것으로 해석되지만되지 않습니다 진수 값과 문자로 &lt;em&gt;번호&lt;/em&gt; . 문자 클래스 의 &lt;code&gt;'['&lt;/code&gt; 및 &lt;code&gt;']'&lt;/code&gt; 내 에서 모든 숫자 이스케이프는 문자로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="2eb5aca7d251d2a0725128c63c23538a7b27cad2" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of word characters. Note that formally, &lt;code&gt;\b&lt;/code&gt; is defined as the boundary between a &lt;code&gt;\w&lt;/code&gt; and a &lt;code&gt;\W&lt;/code&gt; character (or vice versa), or between &lt;code&gt;\w&lt;/code&gt; and the beginning/end of the string. This means that &lt;code&gt;r'\bfoo\b'&lt;/code&gt; matches &lt;code&gt;'foo'&lt;/code&gt;, &lt;code&gt;'foo.'&lt;/code&gt;, &lt;code&gt;'(foo)'&lt;/code&gt;, &lt;code&gt;'bar foo baz'&lt;/code&gt; but not &lt;code&gt;'foobar'&lt;/code&gt; or &lt;code&gt;'foo3'&lt;/code&gt;.</source>
          <target state="translated">빈 문자열과 일치하지만 단어의 시작 또는 끝에 만 있습니다. 단어는 일련의 단어 문자로 정의됩니다. 공식적으로 &lt;code&gt;\b&lt;/code&gt; 는 &lt;code&gt;\w&lt;/code&gt; 와 &lt;code&gt;\W&lt;/code&gt; 문자 사이의 경계 (또는 그 반대로) 또는 &lt;code&gt;\w&lt;/code&gt; 와 문자열의 시작 / 끝 사이의 경계로 정의됩니다 . 이는 &lt;code&gt;r'\bfoo\b'&lt;/code&gt; 가 &lt;code&gt;'foo'&lt;/code&gt; , &lt;code&gt;'foo.'&lt;/code&gt; ' 와 일치 함을 의미합니다 . , &lt;code&gt;'(foo)'&lt;/code&gt; , &lt;code&gt;'bar foo baz'&lt;/code&gt; 이지만 &lt;code&gt;'foobar'&lt;/code&gt; 또는 &lt;code&gt;'foo3'&lt;/code&gt; 은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="c04099b042264b3596a7797564409e8942492883" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only when it is &lt;em&gt;not&lt;/em&gt; at the beginning or end of a word. This means that &lt;code&gt;r'py\B'&lt;/code&gt; matches &lt;code&gt;'python'&lt;/code&gt;, &lt;code&gt;'py3'&lt;/code&gt;, &lt;code&gt;'py2'&lt;/code&gt;, but not &lt;code&gt;'py'&lt;/code&gt;, &lt;code&gt;'py.'&lt;/code&gt;, or &lt;code&gt;'py!'&lt;/code&gt;. &lt;code&gt;\B&lt;/code&gt; is just the opposite of &lt;code&gt;\b&lt;/code&gt;, so word characters in Unicode patterns are Unicode alphanumerics or the underscore, although this can be changed by using the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag. Word boundaries are determined by the current locale if the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used.</source>
          <target state="translated">빈 문자열과 일치하지만 단어의 시작이나 끝에 &lt;em&gt;있지 않은&lt;/em&gt; 경우에만 일치합니다 . 이것은 &lt;code&gt;r'py\B'&lt;/code&gt; 가 &lt;code&gt;'python'&lt;/code&gt; , &lt;code&gt;'py3'&lt;/code&gt; , &lt;code&gt;'py2'&lt;/code&gt; ' 와 일치 하지만 &lt;code&gt;'py'&lt;/code&gt; , &lt;code&gt;'py.'&lt;/code&gt; '와는 일치 하지 않음을 의미 합니다. 또는 &lt;code&gt;'py!'&lt;/code&gt; . &lt;code&gt;\B&lt;/code&gt; 는 &lt;code&gt;\b&lt;/code&gt; 와 반대 이므로 유니 코드 패턴의 단어 문자는 유니 코드 영숫자 또는 밑줄이지만 &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt; 플래그 를 사용하여 변경할 수 있습니다 . &lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt; 플래그가 사용되는 경우 현재 로케일에 의해 단어 경계가 결정 됩니다.</target>
        </trans-unit>
        <trans-unit id="8ce88cc650b7fe8f97b845a2321d7c2b877f1d7c" translate="yes" xml:space="preserve">
          <source>Matches the end of the string or just before the newline at the end of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches before a newline. &lt;code&gt;foo&lt;/code&gt; matches both &amp;lsquo;foo&amp;rsquo; and &amp;lsquo;foobar&amp;rsquo;, while the regular expression &lt;code&gt;foo$&lt;/code&gt; matches only &amp;lsquo;foo&amp;rsquo;. More interestingly, searching for &lt;code&gt;foo.$&lt;/code&gt; in &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; matches &amp;lsquo;foo2&amp;rsquo; normally, but &amp;lsquo;foo1&amp;rsquo; in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode; searching for a single &lt;code&gt;$&lt;/code&gt; in &lt;code&gt;'foo\n'&lt;/code&gt; will find two (empty) matches: one just before the newline, and one at the end of the string.</source>
          <target state="translated">문자열의 끝에서 또는 문자열의 끝 에서 개행 직전과 일치 하고 &lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드에서도 개행 전에 일치합니다. &lt;code&gt;foo&lt;/code&gt; 는 'foo'및 'foobar'와 모두 일치하지만 정규식 &lt;code&gt;foo$&lt;/code&gt; 는 'foo'와만 일치합니다. 더 흥미롭게도 &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; 에서 &lt;code&gt;foo.$&lt;/code&gt; 를 검색하면 'foo2'는 일반적으로 일치하지만 &lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt; 모드 에서는 'foo1'과 일치 합니다. &lt;code&gt;'foo\n'&lt;/code&gt; 에서 단일 &lt;code&gt;$&lt;/code&gt; 를 검색 하면 두 개 (빈)가 있습니다. 하나는 개행 직전과 다른 하나는 문자열 끝에 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f40daaf0bea10cd0df0f8186bdb340e8b731567" translate="yes" xml:space="preserve">
          <source>Matches whatever regular expression is inside the parentheses, and indicates the start and end of a group; the contents of a group can be retrieved after a match has been performed, and can be matched later in the string with the &lt;code&gt;\number&lt;/code&gt; special sequence, described below. To match the literals &lt;code&gt;'('&lt;/code&gt; or &lt;code&gt;')'&lt;/code&gt;, use &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;, or enclose them inside a character class: &lt;code&gt;[(]&lt;/code&gt;, &lt;code&gt;[)]&lt;/code&gt;.</source>
          <target state="translated">괄호 안에있는 정규식과 일치하며 그룹의 시작과 끝을 나타냅니다. 그룹의 내용은 일치가 수행 된 후에 검색 될 수 있으며 아래에 설명 된 &lt;code&gt;\number&lt;/code&gt; 특수 시퀀스 를 사용하여 문자열에서 나중에 일치 될 수 있습니다 . 리터럴에 맞게 &lt;code&gt;'('&lt;/code&gt; 또는 &lt;code&gt;')'&lt;/code&gt; 사용을 &lt;code&gt;\(&lt;/code&gt; 또는 &lt;code&gt;\)&lt;/code&gt; , 또는 문자 클래스의 내부를 둘러싸 : &lt;code&gt;[(]&lt;/code&gt; , &lt;code&gt;[)]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b4c6577035e177562eb7b5ddae73d04f12d9983" translate="yes" xml:space="preserve">
          <source>Math argument out of domain of func</source>
          <target state="translated">func 도메인 외부의 수학 인수</target>
        </trans-unit>
        <trans-unit id="10aa065593dbf60ae5f473eae4958b71572dc4ff" translate="yes" xml:space="preserve">
          <source>Math result not representable</source>
          <target state="translated">표현할 수없는 수학 결과</target>
        </trans-unit>
        <trans-unit id="50d207959d02b2a34b183cd7d25f1e0c68bf9ddb" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication</source>
          <target state="translated">행렬 곱셈</target>
        </trans-unit>
        <trans-unit id="e6d0832e2740dd4bc270c8fb3b3635030afe668d" translate="yes" xml:space="preserve">
          <source>Maximum digest size that the hash function can output.</source>
          <target state="translated">해시 함수가 출력 할 수있는 최대 다이제스트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="8b4aa5d3e601b7665580a557fd7d301ef9dff186" translate="yes" xml:space="preserve">
          <source>Maximum key size.</source>
          <target state="translated">최대 키 크기</target>
        </trans-unit>
        <trans-unit id="014ad729ec1a3537d14c4c998116e97cae28939e" translate="yes" xml:space="preserve">
          <source>Maximum key value</source>
          <target state="translated">최대 키 값</target>
        </trans-unit>
        <trans-unit id="fa26260fb5c11969aae03fca4bf169c742f8d389" translate="yes" xml:space="preserve">
          <source>Maximum number of characters in the representation for an integer. Digits are dropped from the middle. The default is &lt;code&gt;40&lt;/code&gt;.</source>
          <target state="translated">정수 표현의 최대 문자 수입니다. 가운데에서 숫자가 삭제됩니다. 기본값은 &lt;code&gt;40&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f05dad23c52cc0273d437ffe0b4a8a5b8a0e80ef" translate="yes" xml:space="preserve">
          <source>Maximum number of days between changes</source>
          <target state="translated">변경 사이의 최대 일수</target>
        </trans-unit>
        <trans-unit id="16b74af98dc16ddf608395028b518cb175ab18cd" translate="yes" xml:space="preserve">
          <source>Maximum number of frames stored in the traceback of &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;traces&lt;/code&gt;&lt;/a&gt;: result of the &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; when the snapshot was taken.</source>
          <target state="translated">트레이스의 &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;traces&lt;/code&gt; &lt;/a&gt; 백에 저장된 최대 프레임 수 : 스냅 샷을 만들 때 &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt; 결과 .</target>
        </trans-unit>
        <trans-unit id="3750177b2f369715ab06bcee508f2caa6b2a6f98" translate="yes" xml:space="preserve">
          <source>Maximum size of a deque or &lt;code&gt;None&lt;/code&gt; if unbounded.</source>
          <target state="translated">deque의 최대 크기 또는 제한이없는 경우 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edc09d71b5252f3ee59a839aac0b3a820b72242c" translate="yes" xml:space="preserve">
          <source>May be set to &amp;ldquo;normal&amp;rdquo; or &amp;ldquo;disabled&amp;rdquo; to control the &amp;ldquo;disabled&amp;rdquo; state bit. This is a write-only option: setting it changes the widget state, but the &lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt;&lt;code&gt;Widget.state()&lt;/code&gt;&lt;/a&gt; method does not affect this option.</source>
          <target state="translated">&quot;비활성화&quot;상태 비트를 제어하기 위해 &quot;정상&quot;또는 &quot;비활성화&quot;로 설정 될 수 있습니다. 이것은 쓰기 전용 옵션입니다.이를 설정하면 위젯 상태가 변경되지만 &lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt; &lt;code&gt;Widget.state()&lt;/code&gt; &lt;/a&gt; 메소드는이 옵션에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="44a80b227c8f186870813bca412da9ebe084f150" translate="yes" xml:space="preserve">
          <source>May be used to specify a custom widget style.</source>
          <target state="translated">사용자 정의 위젯 스타일을 지정하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31c4d73c6f4d4e4fbb6fe638e8af4924410068ed" translate="yes" xml:space="preserve">
          <source>May raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">올릴 수 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="16093585733797b25f46218a91e9a1ef038fedd8" translate="yes" xml:space="preserve">
          <source>Measures of spread</source>
          <target state="translated">스프레드 측정</target>
        </trans-unit>
        <trans-unit id="b628e9468e6b5c28d9838c0202c4f602cfb4f6b1" translate="yes" xml:space="preserve">
          <source>Measures the agreement between two normal probability distributions. Returns a value between 0.0 and 1.0 giving &lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;the overlapping area for the two probability density functions&lt;/a&gt;.</source>
          <target state="translated">두 정규 확률 분포 간의 일치를 측정합니다. &lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;두 확률 밀도 함수에 대해 겹치는 영역을&lt;/a&gt; 제공 하여 0.0과 1.0 사이의 값을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2898c2eb7b2e66e1c44ea89bdae559774210425b" translate="yes" xml:space="preserve">
          <source>Median (middle value) of data.</source>
          <target state="translated">데이터의 중간 값 (중간 값).</target>
        </trans-unit>
        <trans-unit id="b6a8553e4cbb05abe2fbc605e92f832712ef5d58" translate="yes" xml:space="preserve">
          <source>Median, or 50th percentile, of grouped data.</source>
          <target state="translated">그룹화 된 데이터의 중앙값 또는 50 번째 백분위 수</target>
        </trans-unit>
        <trans-unit id="47c80fcea8456971f1641f17561f060ec99c498a" translate="yes" xml:space="preserve">
          <source>Member values can be anything: &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.. If the exact value is unimportant you may use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; instances and an appropriate value will be chosen for you. Care must be taken if you mix &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; with other values.</source>
          <target state="translated">멤버 값은 &lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 등이 될 수 있습니다. 정확한 값이 중요하지 않은 경우 &lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt; 인스턴스를 사용할 수 있으며 적절한 값이 선택됩니다. &lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt; 을 다른 값과 혼합 할 경우주의를 기울여야합니다 .</target>
        </trans-unit>
        <trans-unit id="f10615a852f71e51e70484e62589e76d80a6cbee" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; 의&lt;/a&gt; 멤버 는 &lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 객체입니다. 이들은 개별 인수를 얻기 위해 튜플로 압축을 풀 수 있습니다. &lt;a href=&quot;#calls-as-tuples&quot;&gt;튜플로 호출을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd0eafe15e6e45f2a4f843e0333ccf3a417c5e3c" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; 의&lt;/a&gt; 멤버 는 &lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 객체입니다. 이들은 개별 인수를 얻기 위해 튜플로 압축을 풀 수 있습니다. &lt;a href=&quot;#calls-as-tuples&quot;&gt;튜플로 호출을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba39158a8386393f5da73f9deb9c5f902a6dd693" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; 의&lt;/a&gt; 멤버 는 &lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt; 객체입니다. 이들은 개별 인수를 얻기 위해 튜플로 압축을 풀 수 있습니다. &lt;a href=&quot;#calls-as-tuples&quot;&gt;튜플로 호출을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d52065f33aba0940b046e017d4e1dcd357c9062" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">모집단 구성원은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;해시 가능&lt;/a&gt; 하거나 고유 하지 않아도 됩니다. 모집단에 반복이 포함되어 있으면 표본에서 각 항목을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7e64c99814ae5c318f3597600e15beb2186266e" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</target>
        </trans-unit>
        <trans-unit id="1e0dfc18cc7a4d06e7cad57a7f6fafa7090ff04a" translate="yes" xml:space="preserve">
          <source>Memory BIO Support</source>
          <target state="translated">메모리 바이오 지원</target>
        </trans-unit>
        <trans-unit id="e80f9fe1d0c17d864aa78913d1c28ea30f56c51b" translate="yes" xml:space="preserve">
          <source>Memory Views</source>
          <target state="translated">메모리 뷰</target>
        </trans-unit>
        <trans-unit id="906b5cd58552183dba7d71de987e1f1ddd52b1ec" translate="yes" xml:space="preserve">
          <source>Memory allocator API violation</source>
          <target state="translated">Memory allocator API violation</target>
        </trans-unit>
        <trans-unit id="f72fc48377945075aece3d0f77f039dde8e3ab08" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">메모리 매핑 된 파일 객체는 &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 및 파일 객체처럼 동작 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;합니다&lt;/a&gt; . &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 이 필요한 대부분의 장소에서 mmap 객체를 사용할 수 있습니다 . 예를 들어 &lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 메모리 매핑 된 파일을 검색 할 수 있습니다 . &lt;code&gt;obj[index] = 97&lt;/code&gt; 사용하여 단일 바이트를 변경하거나 슬라이스에 할당하여 하위 시퀀스를 변경할 수도 있습니다 : &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; . 현재 파일 위치에서 시작하여 데이터를 읽고 쓸 수 있으며 파일을 통해 다른 위치로 &lt;code&gt;seek()&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff563e3596f9ee71c70e8e02d53ed09fdac683ea" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt; , or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; . You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</target>
        </trans-unit>
        <trans-unit id="05dce2bca4952d4d30be9caea65daf4119c522a0" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects support the following methods:</source>
          <target state="translated">메모리 매핑 된 파일 객체는 다음 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ccdfc54c3dfcff33f3b84cd29c470c9f9dd72513" translate="yes" xml:space="preserve">
          <source>MemoryError</source>
          <target state="translated">MemoryError</target>
        </trans-unit>
        <trans-unit id="042180098555538da1846becefee4991e4e008c7" translate="yes" xml:space="preserve">
          <source>MemoryHandler</source>
          <target state="translated">MemoryHandler</target>
        </trans-unit>
        <trans-unit id="3a9d4b4b179ca00907fee8d914427c890923e689" translate="yes" xml:space="preserve">
          <source>Menu indexes (menu.invoke(), menu.entryconfig(), etc.)</source>
          <target state="translated">메뉴 인덱스 (menu.invoke (), menu.entryconfig () 등)</target>
        </trans-unit>
        <trans-unit id="e7c3800e31ff2e7695b9f5bed95a6de6715dca44" translate="yes" xml:space="preserve">
          <source>Menus</source>
          <target state="translated">Menus</target>
        </trans-unit>
        <trans-unit id="cc82aa47255cb19590a5531d1e61e840f195f669" translate="yes" xml:space="preserve">
          <source>Merge in data from another &lt;a href=&quot;#trace.CoverageResults&quot;&gt;&lt;code&gt;CoverageResults&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">다른 &lt;a href=&quot;#trace.CoverageResults&quot;&gt; &lt;code&gt;CoverageResults&lt;/code&gt; &lt;/a&gt; 객체의 데이터를 병합 합니다.</target>
        </trans-unit>
        <trans-unit id="fc96ea9dd703090ebbbff6f4d36c249d4f4d2c14" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">정렬 된 여러 입력을 단일 정렬 된 출력으로 병합합니다 (예 : 타임 스탬프가 지정된 항목을 여러 로그 파일에서 병합). 정렬 된 값에 대한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;반복자&lt;/a&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="464d8b2c9358d3daab907884b63ea2624a1a5cc2" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="80b747cc58c65b15d89258f4e17a95d87d10f509" translate="yes" xml:space="preserve">
          <source>Message object structures can be created in one of two ways: they can be created from whole cloth by creating an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object, adding headers using the dictionary interface, and adding payload(s) using &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and related methods, or they can be created by parsing a serialized representation of the email message.</source>
          <target state="translated">메시지 오브젝트 구조는 &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 오브젝트 를 작성하고 , 사전 인터페이스를 사용하여 헤더를 추가하고, &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt; 및 관련 메소드를 사용하여 페이로드를 추가하여 전체 피복에서 작성 될 수 있습니다. 전자 메일 메시지의 직렬화 된 표현을 구문 분석하여 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7e80a85b81acb5bcf8134a2999833f3f872f8a62" translate="yes" xml:space="preserve">
          <source>Message objects</source>
          <target state="translated">메시지 객체</target>
        </trans-unit>
        <trans-unit id="6bf991e7854ed942e57f7a8ae958526d710e4851" translate="yes" xml:space="preserve">
          <source>Message too long</source>
          <target state="translated">너무 긴 메시지</target>
        </trans-unit>
        <trans-unit id="ae3fac3d770c2302e7b6a1ae541c61804b4bbb02" translate="yes" xml:space="preserve">
          <source>MessageIDHeader</source>
          <target state="translated">MessageIDHeader</target>
        </trans-unit>
        <trans-unit id="8ca731184f3581459cebf23959eca61bfdee5621" translate="yes" xml:space="preserve">
          <source>Messages in a Babyl mailbox have two sets of headers, original headers and so-called visible headers. Visible headers are typically a subset of the original headers that have been reformatted or abridged to be more attractive. Each message in a Babyl mailbox also has an accompanying list of &lt;em&gt;labels&lt;/em&gt;, or short strings that record extra information about the message, and a list of all user-defined labels found in the mailbox is kept in the Babyl options section.</source>
          <target state="translated">Babyl 메일함에있는 메시지에는 원래 헤더와 소위 보이는 헤더라는 두 가지 헤더 세트가 있습니다. 표시 가능한 헤더는 일반적으로보다 매력적으로 재구성되거나 요약 된 원래 헤더의 하위 집합입니다. Babyl 메일함에있는 각 메시지에는 &lt;em&gt;레이블&lt;/em&gt; 에 대한 &lt;em&gt;레이블&lt;/em&gt; 목록 또는 메시지에 대한 추가 정보를 기록하는 짧은 문자열이 있으며, 메일함에있는 모든 사용자 정의 레이블 목록은 Babyl 옵션 섹션에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1677ab0cd3601cac9f7ad62eb5f484d8b6a9b975" translate="yes" xml:space="preserve">
          <source>Messages in an mbox mailbox are stored together in a single file. The sender&amp;rsquo;s envelope address and the time of delivery are typically stored in a line beginning with &amp;ldquo;From &amp;rdquo; that is used to indicate the start of a message, though there is considerable variation in the exact format of this data among mbox implementations. Flags that indicate the state of the message, such as whether it has been read or marked as important, are typically stored in &lt;em&gt;Status&lt;/em&gt; and &lt;em&gt;X-Status&lt;/em&gt; headers.</source>
          <target state="translated">mbox 메일함에있는 메시지는 단일 파일에 함께 저장됩니다. 발신자의 봉투 주소와 배달 시간은 일반적으로 메시지의 시작을 나타내는 데 사용되는&amp;ldquo;보낸 사람&amp;rdquo;으로 시작하는 행에 저장되지만 mbox 구현간에이 데이터의 정확한 형식에는 상당한 차이가 있습니다. 메시지를 읽었는지 또는 중요하게 표시했는지와 같은 메시지 상태를 나타내는 플래그는 일반적으로 &lt;em&gt;상태&lt;/em&gt; 및 &lt;em&gt;X- 상태&lt;/em&gt; 헤더에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce502b237ed2952032c06cc66fddcfdbf0466da2" translate="yes" xml:space="preserve">
          <source>Messages may be added to a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance using the set-like method &lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and removed using a &lt;code&gt;del&lt;/code&gt; statement or the set-like methods &lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메시지는 set-like 메소드 &lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인스턴스에 추가 되고 &lt;code&gt;del&lt;/code&gt; 문 또는 set-like 메소드 &lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt; 사용하여 제거 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b1f88ec82e011a2e8176b28aacc80eda529a767" translate="yes" xml:space="preserve">
          <source>Metaclass for defining Abstract Base Classes (ABCs).</source>
          <target state="translated">ABC (Abstract Base Classes)를 정의하기위한 메타 클래스.</target>
        </trans-unit>
        <trans-unit id="a49c9e99a5c2fca29b2700a9772373e6a22ccee7" translate="yes" xml:space="preserve">
          <source>Metaclasses</source>
          <target state="translated">Metaclasses</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="1ad6284b73b0f911633f1c682d1bd1a0d2a1d3e3" translate="yes" xml:space="preserve">
          <source>Method Name</source>
          <target state="translated">방법 이름</target>
        </trans-unit>
        <trans-unit id="7397c74c7f3015f9c8b78018a46b8693a78d3d77" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called before &lt;code&gt;tearDown()&lt;/code&gt;. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt;&lt;code&gt;asyncSetUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">테스트 메소드가 호출 된 직후에 호출 된 메소드가 기록되었습니다. 이것은 &lt;code&gt;tearDown()&lt;/code&gt; 전에 호출 됩니다. 테스트 메소드가 예외를 발생시킨 경우에도 호출되므로 서브 클래스의 구현은 특히 내부 상태 점검에주의해야합니다. 이 메소드에 의해 발생 된 &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 이외의 예외 는 테스트 실패가 아닌 추가 오류로 간주되므로보고 된 총 오류 수가 증가합니다. 이 메소드는 테스트 메소드의 결과에 관계없이 &lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt; &lt;code&gt;asyncSetUp()&lt;/code&gt; &lt;/a&gt; 성공한 경우에만 호출됩니다 . 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5dbbd8f81d018eed640981cd64112d0d9e54bc10" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">테스트 메소드가 호출 된 직후에 호출 된 메소드가 기록되었습니다. 테스트 메소드가 예외를 발생시킨 경우에도 호출되므로 서브 클래스의 구현은 특히 내부 상태 점검에주의해야합니다. 이 메소드에 의해 발생 된 &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 이외의 예외 는 테스트 실패가 아닌 추가 오류로 간주되므로보고 된 총 오류 수가 증가합니다. 이 메소드는 테스트 메소드의 결과에 관계없이 &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt; 성공한 경우에만 호출됩니다 . 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="649399ca8ea45b90bb86cca66b9e51f7b179886c" translate="yes" xml:space="preserve">
          <source>Method called on an input line when the command prefix is not recognized. If this method is not overridden, it prints an error message and returns.</source>
          <target state="translated">명령 접두사가 인식되지 않을 때 입력 행에서 호출 된 메소드입니다. 이 메서드를 재정의하지 않으면 오류 메시지가 인쇄되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b83ae09e4143ec55d36cfc4cb6caafc420c049b4" translate="yes" xml:space="preserve">
          <source>Method called to complete an input line when no command-specific &lt;code&gt;complete_*()&lt;/code&gt; method is available. By default, it returns an empty list.</source>
          <target state="translated">명령 별 &lt;code&gt;complete_*()&lt;/code&gt; 메소드를 사용할 수 없는 경우 입력 행을 완료하기 위해 메소드가 호출됩니다 . 기본적으로 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e63efa71573eeb573342934f9e04a35f636518cc" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called after &lt;code&gt;setUp()&lt;/code&gt;. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">테스트 픽스처를 준비하기 위해 호출 된 메소드. 이것은 &lt;code&gt;setUp()&lt;/code&gt; 후에 호출 됩니다. 테스트 메소드를 호출하기 직전에 호출됩니다. &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 이외의 경우이 메소드로 발생한 예외는 테스트 실패가 아닌 오류로 간주됩니다. 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ba475e032ec26577941b02aa8180ec211fee641" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">테스트 픽스처를 준비하기 위해 호출 된 메소드. 테스트 메소드를 호출하기 직전에 호출됩니다. &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt; 이외의 경우이 메소드로 발생한 예외는 테스트 실패가 아닌 오류로 간주됩니다. 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37a3391d3e50f08fbc5f1dc6bfe9fb76fdbd1e6e" translate="yes" xml:space="preserve">
          <source>Method called when a processing instruction is encountered. The &lt;em&gt;data&lt;/em&gt; parameter will contain the entire processing instruction. For example, for the processing instruction &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt;, this method would be called as &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt;. It is intended to be overridden by a derived class; the base class implementation does nothing.</source>
          <target state="translated">처리 명령이 발견 될 때 호출되는 메소드입니다. &lt;em&gt;데이터&lt;/em&gt; 파라미터는 전체 처리 명령어를 포함한다. 예를 들어, 처리 명령 &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt; 의 경우이 메소드를 &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt; 로 호출 합니다. 파생 클래스에 의해 재정의됩니다. 기본 클래스 구현은 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0288a5f7ccd8cc496ea12f8fbcdaa51a282fa56f" translate="yes" xml:space="preserve">
          <source>Method called when an empty line is entered in response to the prompt. If this method is not overridden, it repeats the last nonempty command entered.</source>
          <target state="translated">프롬프트에 응답하여 빈 줄을 입력 할 때 호출되는 메서드입니다. 이 방법을 재정의하지 않으면 입력 한 마지막 비어 있지 않은 명령이 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="e24fcca75d4001a50a3952dc15cf0af185ccf066" translate="yes" xml:space="preserve">
          <source>Method of</source>
          <target state="translated">의 방법</target>
        </trans-unit>
        <trans-unit id="c7659f5d6aa5a918feaa57fcebe08395c1db51d9" translate="yes" xml:space="preserve">
          <source>Method representing the process&amp;rsquo;s activity.</source>
          <target state="translated">프로세스 활동을 나타내는 메소드.</target>
        </trans-unit>
        <trans-unit id="599bc23d73a1edefe369be9db61c7ca34ff8a7cb" translate="yes" xml:space="preserve">
          <source>Method representing the thread&amp;rsquo;s activity.</source>
          <target state="translated">스레드의 활동을 나타내는 메소드.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="8d4aa5000379004bcc4aff6105bab534cc12d577" translate="yes" xml:space="preserve">
          <source>Methods and attributes for &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;ldquo;Optional Platform-Specific File Handling&amp;rdquo; feature:</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; 의&amp;ldquo;선택적 플랫폼 별 파일 처리&amp;rdquo;기능의 방법 및 속성 :</target>
        </trans-unit>
        <trans-unit id="0da2ffd7bd9a87acd1c5cd9576e17a1cb3b019f6" translate="yes" xml:space="preserve">
          <source>Methods and attributes for customizing exception handling:</source>
          <target state="translated">예외 처리를 사용자 정의하기위한 메소드 및 속성 :</target>
        </trans-unit>
        <trans-unit id="1f97bbd5be402e144dea36fabf7319751aeb1da1" translate="yes" xml:space="preserve">
          <source>Methods and properties</source>
          <target state="translated">방법과 속성</target>
        </trans-unit>
        <trans-unit id="b954e3daaa50f78aaaff2c7fa0f441c94145e8b7" translate="yes" xml:space="preserve">
          <source>Methods and their defaults:</source>
          <target state="translated">방법과 기본값 :</target>
        </trans-unit>
        <trans-unit id="7cc2af8c2f86f770582029b10e3b40de2255d2a7" translate="yes" xml:space="preserve">
          <source>Methods are functions that are called using the attribute notation. There are two flavors: built-in methods (such as &lt;code&gt;append()&lt;/code&gt; on lists) and class instance methods. Built-in methods are described with the types that support them.</source>
          <target state="translated">메소드는 속성 표기법을 사용하여 호출되는 함수입니다. 내장 메소드 ( 목록의 &lt;code&gt;append()&lt;/code&gt; 와 같은 )와 클래스 인스턴스 메소드의 두 가지 특징이 있습니다. 내장 메소드는이를 지원하는 유형으로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="157469193b5d41d954e73f13258439fe6beb778e" translate="yes" xml:space="preserve">
          <source>Methods described in this subsections are low-level. In regular async/await code consider using the high-level &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt;&lt;/a&gt; convenience functions instead.</source>
          <target state="translated">이 하위 섹션에 설명 된 방법은 저수준입니다. 일반 async / await 코드에서는 대신 고급 &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt; &lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt; &lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt; &lt;/a&gt; 편의 함수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0965a16d87bebafaef05da87be1917226fdd0b9d" translate="yes" xml:space="preserve">
          <source>Methods implemented via descriptors that also pass one of the other tests return &lt;code&gt;False&lt;/code&gt; from the &lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt;&lt;code&gt;ismethoddescriptor()&lt;/code&gt;&lt;/a&gt; test, simply because the other tests promise more &amp;ndash; you can, e.g., count on having the &lt;code&gt;__func__&lt;/code&gt; attribute (etc) when an object passes &lt;a href=&quot;#inspect.ismethod&quot;&gt;&lt;code&gt;ismethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한 다른 시험 중 하나를 통과 기술자를 통해 구현 방법은 반환 &lt;code&gt;False&lt;/code&gt; 으로부터 &lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt; &lt;code&gt;ismethoddescriptor()&lt;/code&gt; &lt;/a&gt; 다른 시험보다 약속 간단하기 때문에, 테스트 - 당신은, 예를 들어, 가진 믿을 수 &lt;code&gt;__func__&lt;/code&gt; 의 속성 (등) 때 개체가 통과 &lt;a href=&quot;#inspect.ismethod&quot;&gt; &lt;code&gt;ismethod()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9100cdec520f2115d829aad91ecbf2d3a3c46d0" translate="yes" xml:space="preserve">
          <source>Methods in the first group (running the test) are:</source>
          <target state="translated">첫 번째 그룹의 방법 (테스트 실행)은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a45ab4a3e2a82c9598ef6d35c55326d75ba801c" translate="yes" xml:space="preserve">
          <source>Methods of RawTurtle/Turtle and corresponding functions</source>
          <target state="translated">RawTurtle / Turtle의 방법 및 해당 기능</target>
        </trans-unit>
        <trans-unit id="02c2ec68b20d39a2feafa7d1d898a028041eb4f1" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen</source>
          <target state="translated">TurtleScreen / Screen의 방법</target>
        </trans-unit>
        <trans-unit id="020f9d7bdaf4f831aeffeaaaeea5da2050a62b4e" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen and corresponding functions</source>
          <target state="translated">TurtleScreen / Screen 방법 및 해당 기능</target>
        </trans-unit>
        <trans-unit id="74870948cfdac56fe627ac3f9017759f080dd5ad" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen</source>
          <target state="translated">화면에 특정한 방법</target>
        </trans-unit>
        <trans-unit id="ed10df094e649397ec44790d691389289e610494" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen, not inherited from TurtleScreen</source>
          <target state="translated">TurtleScreen에서 상속되지 않은 Screen 관련 메소드</target>
        </trans-unit>
        <trans-unit id="c659b6a8d84e8b57729160efb981e97738f69a55" translate="yes" xml:space="preserve">
          <source>Microsecond as a decimal number, zero-padded on the left.</source>
          <target state="translated">왼쪽에 0으로 채워진 10 진수의 마이크로 초입니다.</target>
        </trans-unit>
        <trans-unit id="27380d20cf0052fb068648454674c0487d921401" translate="yes" xml:space="preserve">
          <source>Mike Clarkson converted the documentation to LaTeX, and compiled the User Interface chapter of the reference manual.</source>
          <target state="translated">Mike Clarkson은 설명서를 LaTeX로 변환하고 참조 설명서의 사용자 인터페이스 장을 편집했습니다.</target>
        </trans-unit>
        <trans-unit id="27af939f79765f408e27d70736e746c0d48d9a0c" translate="yes" xml:space="preserve">
          <source>Millisecond portion of the time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created.</source>
          <target state="translated">&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 가 작성된 시간의 밀리 초 입니다.</target>
        </trans-unit>
        <trans-unit id="dccbd93c0e8d8f9988adced2fe258f1e1532b0c5" translate="yes" xml:space="preserve">
          <source>MimeTypes Objects</source>
          <target state="translated">MimeTypes 객체</target>
        </trans-unit>
        <trans-unit id="9efbdba622b2dadfd43fa42e2a291351db71d49c" translate="yes" xml:space="preserve">
          <source>Minimal number of days between changes</source>
          <target state="translated">변경 사이의 최소 일수</target>
        </trans-unit>
        <trans-unit id="10937ed4b37b67fa14b13edd3d7e271abb8fa9aa" translate="yes" xml:space="preserve">
          <source>Minimum field width (optional). If specified as an &lt;code&gt;'*'&lt;/code&gt; (asterisk), the actual width is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the object to convert comes after the minimum field width and optional precision.</source>
          <target state="translated">최소 필드 너비 (선택 사항). &lt;code&gt;'*'&lt;/code&gt; (별표) 로 지정된 경우 실제 너비는 튜플의 다음 요소에서 &lt;em&gt;values&lt;/em&gt; 로 읽히고 변환 할 객체는 최소 필드 너비 및 선택적 정밀도 뒤에옵니다.</target>
        </trans-unit>
        <trans-unit id="b823f84a7a7baed339dafffa8b2988e08ee82d18" translate="yes" xml:space="preserve">
          <source>Minimum key value</source>
          <target state="translated">최소 키 값</target>
        </trans-unit>
        <trans-unit id="b9bea4e62057406a848ed5d0422b9238d8ab04ce" translate="yes" xml:space="preserve">
          <source>Minimum size in bytes</source>
          <target state="translated">바이트 단위의 최소 크기</target>
        </trans-unit>
        <trans-unit id="6506540f28a982451f07fe2b992f3fdcae62b53d" translate="yes" xml:space="preserve">
          <source>Minus corresponds to the unary prefix minus operator in Python.</source>
          <target state="translated">빼기는 파이썬에서 단항 접두사 빼기 연산자에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="2b6196c452bc75192cad3b9bbe7b45fccf953c66" translate="yes" xml:space="preserve">
          <source>Minute as a decimal number [00,59].</source>
          <target state="translated">십진수로 된 분 [00,59].</target>
        </trans-unit>
        <trans-unit id="04796ca1f6aacaabf17bb7220586582c19201712" translate="yes" xml:space="preserve">
          <source>Minute as a zero-padded decimal number.</source>
          <target state="translated">0으로 채워진 10 진수로 분.</target>
        </trans-unit>
        <trans-unit id="092f99ea11a34a8490e7a767a83a42fc45634f82" translate="yes" xml:space="preserve">
          <source>Minutes</source>
          <target state="translated">Minutes</target>
        </trans-unit>
        <trans-unit id="edb2ab561b48557288fb17a60a42f5fe203a8b9c" translate="yes" xml:space="preserve">
          <source>Minutes (zero-based)</source>
          <target state="translated">분 (0부터 시작)</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="e34e8783c8b5d62f8e56a6c5cad9c3189996ba14" translate="yes" xml:space="preserve">
          <source>Miscellaneous Services</source>
          <target state="translated">기타 서비스</target>
        </trans-unit>
        <trans-unit id="43274253a78afe031d6f6358c749c28e750ad3ba" translate="yes" xml:space="preserve">
          <source>Miscellaneous System Information</source>
          <target state="translated">기타 시스템 정보</target>
        </trans-unit>
        <trans-unit id="2cacc40bbba670255923cac65963686bb7f6e8fa" translate="yes" xml:space="preserve">
          <source>Miscellaneous Widgets</source>
          <target state="translated">기타 위젯</target>
        </trans-unit>
        <trans-unit id="b80881a19ff8cf751c3f41f6a0bbae4d2fa4b957" translate="yes" xml:space="preserve">
          <source>Miscellaneous methods and attributes:</source>
          <target state="translated">기타 메소드 및 속성 :</target>
        </trans-unit>
        <trans-unit id="1be5ce0f6da11db26ce77b075f6f409fed55bed0" translate="yes" xml:space="preserve">
          <source>Mitigating round-off error with increased precision</source>
          <target state="translated">정밀도 향상으로 반올림 오차 완화</target>
        </trans-unit>
        <trans-unit id="fbb183ab6d5eb981bdb6b26cfc5bc04b44dbf9ef" translate="yes" xml:space="preserve">
          <source>Mix the given &lt;em&gt;bytes&lt;/em&gt; into the SSL pseudo-random number generator. The parameter &lt;em&gt;entropy&lt;/em&gt; (a float) is a lower bound on the entropy contained in string (so you can always use &lt;code&gt;0.0&lt;/code&gt;). See &lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt; for more information on sources of entropy.</source>
          <target state="translated">주어진 &lt;em&gt;바이트&lt;/em&gt; 를 SSL 의사 난수 생성기에 혼합하십시오 . 매개 변수 &lt;em&gt;엔트로피&lt;/em&gt; (float)는 문자열에 포함 된 엔트로피의 하한값이므로 항상 &lt;code&gt;0.0&lt;/code&gt; 을 사용할 수 있습니다 . 엔트로피 소스에 대한 자세한 내용 은 &lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08cde62b7bf975bbde5b97246a5722dd5b75c745" translate="yes" xml:space="preserve">
          <source>Mixer Device Objects</source>
          <target state="translated">믹서 장치 객체</target>
        </trans-unit>
        <trans-unit id="1cdbdedcba3074069f36e236c409fb7bd1ae38c6" translate="yes" xml:space="preserve">
          <source>Mixin Methods</source>
          <target state="translated">믹스 인 방법</target>
        </trans-unit>
        <trans-unit id="9cb6196c924e579cfebfa9d20714ab12efb27976" translate="yes" xml:space="preserve">
          <source>Mixin Methods and Properties</source>
          <target state="translated">믹스 인 방법 및 속성</target>
        </trans-unit>
        <trans-unit id="eff64571433b5d5f6c30bbfd893c2be61001c6a7" translate="yes" xml:space="preserve">
          <source>Mock Patching Methods</source>
          <target state="translated">모의 패치 방법</target>
        </trans-unit>
        <trans-unit id="a3f6662904906028997ca7c9f0b62eded70f9d87" translate="yes" xml:space="preserve">
          <source>Mock allows you to assign functions (or other Mock instances) to magic methods and they will be called appropriately. The &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class is just a Mock variant that has all of the magic methods pre-created for you (well, all the useful ones anyway).</source>
          <target state="translated">Mock을 사용하면 함수 (또는 다른 Mock 인스턴스)를 마법 메서드에 할당 할 수 있으며 적절하게 호출됩니다. &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; 의&lt;/a&gt; 클래스는 (잘 모든 유용한 것들 어쨌든) 마법의 방법을 모두 당신을 위해 만든 사전이 단지 모의 변종이다.</target>
        </trans-unit>
        <trans-unit id="cd40a569044d5954e317d074d7665541eb9c7c41" translate="yes" xml:space="preserve">
          <source>Mock for Method Calls on an Object</source>
          <target state="translated">객체의 메소드 호출 모의</target>
        </trans-unit>
        <trans-unit id="ad02912ae468a4be2e695c5d469c4a5f0380c99b" translate="yes" xml:space="preserve">
          <source>Mock has many other ways you can configure it and control its behaviour. For example the &lt;em&gt;spec&lt;/em&gt; argument configures the mock to take its specification from another object. Attempting to access attributes or methods on the mock that don&amp;rsquo;t exist on the spec will fail with an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mock에는 여러 가지 방법으로 구성하고 동작을 제어 할 수 있습니다. 예를 들어 &lt;em&gt;spec&lt;/em&gt; 인수는 mock이 다른 객체에서 사양을 가져 오도록 구성합니다. 스펙에 존재하지 않는 모의 객체에서 속성 또는 메소드에 액세스하려고 시도하면 &lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 로&lt;/a&gt; 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="6465c7a575090539f19523ea47c493eba308187f" translate="yes" xml:space="preserve">
          <source>Mock is very easy to use and is designed for use with &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;. Mock is based on the &amp;lsquo;action -&amp;gt; assertion&amp;rsquo; pattern instead of &amp;lsquo;record -&amp;gt; replay&amp;rsquo; used by many mocking frameworks.</source>
          <target state="translated">Mock은 사용하기 매우 쉽고 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 와 함께 사용하도록 설계되었습니다 . Mock은 많은 조롱 프레임 워크에서 사용되는 'record-&amp;gt; replay'대신 'action-&amp;gt; assertion'패턴을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="a33279ac6a1d4f11a964719fd8b938904220c3f2" translate="yes" xml:space="preserve">
          <source>Mock names and the name attribute</source>
          <target state="translated">모의 이름과 이름 속성</target>
        </trans-unit>
        <trans-unit id="297d74ca0e3cf788f8845b7bffff3c689ae98bb8" translate="yes" xml:space="preserve">
          <source>Mock objects are callable. The call will return the value set as the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; attribute. The default return value is a new Mock object; it is created the first time the return value is accessed (either explicitly or by calling the Mock) - but it is stored and the same one returned each time.</source>
          <target state="translated">모의 객체는 호출 가능합니다. 호출은 &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt; 속성으로 설정된 값을 반환 합니다. 기본 반환 값은 새로운 Mock 객체입니다. 반환 값에 처음으로 액세스 할 때 (명시 적으로 또는 Mock을 호출하여) 만들어 지지만 저장되고 매번 같은 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f9d9cf297397c83b1c1f81d316fa2ec3e341da36" translate="yes" xml:space="preserve">
          <source>Mock objects create attributes on demand. This allows them to pretend to be objects of any type.</source>
          <target state="translated">모의 객체는 요청시 속성을 만듭니다. 이를 통해 모든 유형의 객체 인 것처럼 가장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e775774d5b183cd27cc35f774581d60bd2a447c3" translate="yes" xml:space="preserve">
          <source>Mock objects that use a class or an instance as a &lt;code&gt;spec&lt;/code&gt; or &lt;code&gt;spec_set&lt;/code&gt; are able to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests:</source>
          <target state="translated">클래스 또는 인스턴스를 &lt;code&gt;spec&lt;/code&gt; 또는 &lt;code&gt;spec_set&lt;/code&gt; 으로 사용하는 모의 객체는 &lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt; 테스트 를 통과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9e1deeb7a9ee5f850fe86eecbde6fcdcdde263d" translate="yes" xml:space="preserve">
          <source>Mock subclasses and their attributes</source>
          <target state="translated">모의 서브 클래스와 그 속성</target>
        </trans-unit>
        <trans-unit id="7d6354b13984c9353fd8091e3574d84d2ae7bff2" translate="yes" xml:space="preserve">
          <source>Mock supports the mocking of Python &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt;. The easiest way of using magic methods is with the &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class. It allows you to do things like:</source>
          <target state="translated">Mock은 Python &lt;a href=&quot;#magic-methods&quot;&gt;매직 메소드&lt;/a&gt; 의 조롱을 지원합니다 . 매직 메소드를 사용하는 가장 쉬운 방법은 &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt; 클래스를 사용하는 것입니다. 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="442dbf157ba95db3e914bc2e408149e5cd398207" translate="yes" xml:space="preserve">
          <source>Mocking Classes</source>
          <target state="translated">조롱 수업</target>
        </trans-unit>
        <trans-unit id="9c8d301fe549f44ad1715a27813e8f92b2397116" translate="yes" xml:space="preserve">
          <source>Mocking Magic Methods</source>
          <target state="translated">모의 마술 방법</target>
        </trans-unit>
        <trans-unit id="c72f61e205c323791b33c0bccba66e2eb04fbb68" translate="yes" xml:space="preserve">
          <source>Mocking Unbound Methods</source>
          <target state="translated">언 바운드 메소드 조롱</target>
        </trans-unit>
        <trans-unit id="c0498faab975f9dec8b132168e6c508f7f74f956" translate="yes" xml:space="preserve">
          <source>Mocking a Generator Method</source>
          <target state="translated">생성기 메서드 조롱</target>
        </trans-unit>
        <trans-unit id="631d0520a6e791d2c5663b5421225becab5962da" translate="yes" xml:space="preserve">
          <source>Mocking a dictionary with MagicMock</source>
          <target state="translated">MagicMock으로 사전 조롱</target>
        </trans-unit>
        <trans-unit id="a35b06a5a88f1663407e0afcc28d593f48d020de" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous context manager</source>
          <target state="translated">비동기 컨텍스트 관리자 모의</target>
        </trans-unit>
        <trans-unit id="9a90be214817c7625129004dae96c161fa6d1b8f" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous iterators</source>
          <target state="translated">비동기 반복자 조롱</target>
        </trans-unit>
        <trans-unit id="21c9b59bfaaa2939d61edf0de7e54d2b77191fcb" translate="yes" xml:space="preserve">
          <source>Mocking chained calls</source>
          <target state="translated">모의 연쇄 통화</target>
        </trans-unit>
        <trans-unit id="077151c5dfce974cc6f624aaa441016501984bcd" translate="yes" xml:space="preserve">
          <source>Mocking context managers with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; is common enough and fiddly enough that a helper function is useful.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; 을&lt;/a&gt; 사용하여 컨텍스트 관리자를 조롱 하는 것은 도우미 기능이 유용 할만큼 충분히 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="7c7ee5cc465310c6d4c3ad7b378ba9b12a5a62d8" translate="yes" xml:space="preserve">
          <source>Mocking imports with patch.dict</source>
          <target state="translated">patch.dict로 수입 모의</target>
        </trans-unit>
        <trans-unit id="365779533ffb4a7f946eeb0ebce48c8d4a000a5b" translate="yes" xml:space="preserve">
          <source>Mocks can also be called with arbitrary keyword arguments. These will be used to set attributes on the mock after it is created. See the &lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">임의의 키워드 인수로 Mocks를 호출 할 수도 있습니다. 이것들은 모의 객체가 생성 된 후에 속성을 설정하는 데 사용됩니다. 자세한 내용은 &lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt; &lt;code&gt;configure_mock()&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2cbdd4fc62fd73dd9af51cb0370400f47d6de4ca" translate="yes" xml:space="preserve">
          <source>Mocks created for you by &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; are automatically given names. To attach mocks that have names to a parent you use the &lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt;&lt;code&gt;attach_mock()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 mocks 에는 자동으로 이름이 지정됩니다. 부모에게 이름이있는 모의 객체를 첨부하려면 &lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt; &lt;code&gt;attach_mock()&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="de84d7a663bae517f4b489470b51febd30e66c30" translate="yes" xml:space="preserve">
          <source>Mode &amp;ldquo;standard&amp;rdquo; is compatible with old &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt;. Mode &amp;ldquo;logo&amp;rdquo; is compatible with most Logo turtle graphics. Mode &amp;ldquo;world&amp;rdquo; uses user-defined &amp;ldquo;world coordinates&amp;rdquo;. &lt;strong&gt;Attention&lt;/strong&gt;: in this mode angles appear distorted if &lt;code&gt;x/y&lt;/code&gt; unit-ratio doesn&amp;rsquo;t equal 1.</source>
          <target state="translated">&quot;표준&quot;모드는 오래된 &lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt; 와 호환됩니다 . &quot;logo&quot;모드는 대부분의 로고 거북이 그래픽과 호환됩니다. &quot;세계&quot;모드는 사용자 정의 된 &quot;세계 좌표&quot;를 사용합니다. &lt;strong&gt;주의&lt;/strong&gt; :이 모드에서는 &lt;code&gt;x/y&lt;/code&gt; 단위 비율이 1이 아닌 경우 각도가 왜곡되어 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="92d399cc66de7cf367f31ade723cb8b6691c5bdf" translate="yes" xml:space="preserve">
          <source>Models which represent a series of models which follow one after the other are indicated with this model type. This is used for models such as &lt;code&gt;(A, B, C)&lt;/code&gt;.</source>
          <target state="translated">일련의 모델을 차례로 나타내는 모델은이 모델 유형으로 표시됩니다. &lt;code&gt;(A, B, C)&lt;/code&gt; 와 같은 모델에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="59ce22dee5a92a32f030e3b34445688bcbabd4d7" translate="yes" xml:space="preserve">
          <source>Modern Tkinter for Busy Python Developers</source>
          <target state="translated">바쁜 Python 개발자를위한 최신 Tkinter</target>
        </trans-unit>
        <trans-unit id="59eeb274f6d5a5d8796b7fb0f22a558b81af0ba0" translate="yes" xml:space="preserve">
          <source>Modern macOS versions are fully supported.</source>
          <target state="translated">최신 macOS 버전이 완전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="77c81a24b3232f4341cb83b7f39ce945fe4ff3fb" translate="yes" xml:space="preserve">
          <source>Modified by the user</source>
          <target state="translated">사용자가 수정</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="32cd9ef050293cc9b2ea16140453d0cb9eba9e0e" translate="yes" xml:space="preserve">
          <source>Modifies an already registered fd. This has the same effect as &lt;code&gt;register(fd, eventmask)&lt;/code&gt;. Attempting to modify a file descriptor that was never registered causes an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception with errno &lt;code&gt;ENOENT&lt;/code&gt; to be raised.</source>
          <target state="translated">이미 등록 된 fd를 수정합니다. 이것은 &lt;code&gt;register(fd, eventmask)&lt;/code&gt; 와 동일한 효과를 갖습니다 . 등록되지 않은 파일 디스크립터를 수정하려고하면 errno &lt;code&gt;ENOENT&lt;/code&gt; 와 함께 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6cc4f46aa243a25741c6b3f64809ea24113b97cc" translate="yes" xml:space="preserve">
          <source>Modifies the message and/or keyword arguments passed to a logging call in order to insert contextual information. This implementation takes the object passed as &lt;em&gt;extra&lt;/em&gt; to the constructor and adds it to &lt;em&gt;kwargs&lt;/em&gt; using key &amp;lsquo;extra&amp;rsquo;. The return value is a (&lt;em&gt;msg&lt;/em&gt;, &lt;em&gt;kwargs&lt;/em&gt;) tuple which has the (possibly modified) versions of the arguments passed in.</source>
          <target state="translated">컨텍스트 정보를 삽입하기 위해 로깅 호출에 전달 된 메시지 및 / 또는 키워드 인수를 수정합니다. 이 구현은 생성자에 &lt;em&gt;추가&lt;/em&gt; 로 전달 된 객체를 가져 와서 키 'extra'를 사용하여 &lt;em&gt;kwargs에&lt;/em&gt; 추가합니다 . 리턴 값은 ( &lt;em&gt;msg&lt;/em&gt; , &lt;em&gt;kwargs&lt;/em&gt; ) 튜플이며, 전달 된 인수의 버전이 수정되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32de46524638c4aca576e999a7d9c22055939413" translate="yes" xml:space="preserve">
          <source>Modify a registered file descriptor.</source>
          <target state="translated">등록 된 파일 디스크립터를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="3fd4218c1234d8d4fd1679ae718d689ef01b2df1" translate="yes" xml:space="preserve">
          <source>Modify attributes of the font.</source>
          <target state="translated">Modify attributes of the font.</target>
        </trans-unit>
        <trans-unit id="4578c669df0697b22dfd8c519fd4e58ce7cdd60a" translate="yes" xml:space="preserve">
          <source>Modify or inquire widget state. If &lt;em&gt;statespec&lt;/em&gt; is specified, sets the widget state according to it and return a new &lt;em&gt;statespec&lt;/em&gt; indicating which flags were changed. If &lt;em&gt;statespec&lt;/em&gt; is not specified, returns the currently-enabled state flags.</source>
          <target state="translated">위젯 상태를 수정하거나 문의하십시오. 경우 &lt;em&gt;statespec는&lt;/em&gt; 지정된 새로운 그것을 반환 따라 위젯의 상태 설정 &lt;em&gt;statespec&lt;/em&gt; 플래그가 변경되었던 나타낸다. 경우 &lt;em&gt;statespec가&lt;/em&gt; 지정되지 않은, 현재 활성화 상태 플래그를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e86176ca1442040dd82f620317ec50cbc92d6c8" translate="yes" xml:space="preserve">
          <source>Modify the filename of a log file when rotating.</source>
          <target state="translated">회전 할 때 로그 파일의 파일 이름을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="bf1c865f30cbb3976816405737bd964fbc2fa0de" translate="yes" xml:space="preserve">
          <source>Modify the view, by calling &lt;code&gt;MsiViewModify()&lt;/code&gt;. &lt;em&gt;kind&lt;/em&gt; can be one of &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt;, &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt;, or &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MsiViewModify()&lt;/code&gt; 를 호출하여보기를 수정하십시오 . &lt;em&gt;종류&lt;/em&gt; 중 하나가 될 수 있습니다 &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt; , &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt; , &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt; , &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt; , &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt; , &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt; , &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt; , &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt; , &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt; , &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt; , &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt; , &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt; , 또는 &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf8f52d6faa8b1275eba9c831dbbef1ed90879cc" translate="yes" xml:space="preserve">
          <source>Modifying an XML File</source>
          <target state="translated">XML 파일 수정</target>
        </trans-unit>
        <trans-unit id="84c3d768a8d5770c62abdea208959d6592bb41c2" translate="yes" xml:space="preserve">
          <source>Modifying this dictionary does not affect the string environment passed on by &lt;a href=&quot;os#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt;; if you need to change the environment, pass &lt;code&gt;environ&lt;/code&gt; to &lt;a href=&quot;os#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt; or add variable assignments and export statements to the command string for &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 사전을 수정해도 &lt;a href=&quot;os#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt; 전달한 문자열 환경에는 영향을 미치지 않습니다 . 환경을 변경해야하는 경우 &lt;code&gt;environ&lt;/code&gt; 을 &lt;a href=&quot;os#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt; 전달 하거나 변수 지정 및 export 문을 &lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt; 의 명령 문자열에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="978b5a43a650471c75f8350ef7774ba329f2f3fe" translate="yes" xml:space="preserve">
          <source>Module (name portion of &lt;code&gt;filename&lt;/code&gt;).</source>
          <target state="translated">모듈 ( &lt;code&gt;filename&lt;/code&gt; 이름의 이름 부분 )</target>
        </trans-unit>
        <trans-unit id="b4a2aa27448f7d0da42e7887a48a75e0b25fb6eb" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;#module-aifc&quot;&gt;&lt;code&gt;aifc&lt;/code&gt;&lt;/a&gt; defines the following function:</source>
          <target state="translated">모듈 &lt;a href=&quot;#module-aifc&quot;&gt; &lt;code&gt;aifc&lt;/code&gt; &lt;/a&gt; 는 다음 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2e90a7416ba8632b458a1755a2a52518580a6402" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; This describes how to use .pth files to extend &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모듈 &lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt; 여기에서는 .pth 파일을 사용하여 &lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt; 를 확장하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">모듈 API</target>
        </trans-unit>
        <trans-unit id="9c3f2aba6913de8da00faed8e2df2428bb1257b7" translate="yes" xml:space="preserve">
          <source>Module Attributes</source>
          <target state="translated">모듈 속성</target>
        </trans-unit>
        <trans-unit id="d4c1069b1d33fd7a5bbcf140560e3a8a4cc1d1fd" translate="yes" xml:space="preserve">
          <source>Module Contents</source>
          <target state="translated">모듈 내용</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">모듈 기능</target>
        </trans-unit>
        <trans-unit id="34bdda02dde5bc12bbc7235959c04177e16c821e" translate="yes" xml:space="preserve">
          <source>Module Interface</source>
          <target state="translated">모듈 인터페이스</target>
        </trans-unit>
        <trans-unit id="92fdd8d530e964e456294b900fa883ff826caa46" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">경우 모듈 및 패키지 중단 메시지는이 가져 오는 동안 억제 &lt;em&gt;되지 않는&lt;/em&gt; 것입니다 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37e90fc9b9d2ea5592629e3ac0763109ff09df33" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;. If a module is required on a platform but optional for others, set &lt;em&gt;required_on&lt;/em&gt; to an iterable of platform prefixes which will be compared against &lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 모듈 및 패키지 중단 메시지는이 가져 오는 동안 억제 &lt;em&gt;되지 않는&lt;/em&gt; 것입니다 &lt;code&gt;True&lt;/code&gt; . 플랫폼에서 모듈이 필요하지만 다른 모듈에서는 옵션 인 경우 &lt;em&gt;required_on&lt;/em&gt; 을 반복 가능한 플랫폼 접두어로 설정 하여 &lt;a href=&quot;sys#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt; 과 비교 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fb52752185bff1afa3095dd1ee054b10a8741dd" translate="yes" xml:space="preserve">
          <source>Module contents</source>
          <target state="translated">모듈 내용</target>
        </trans-unit>
        <trans-unit id="92e9d0a965eb0a3f69212e87aeb376c3817bace5" translate="yes" xml:space="preserve">
          <source>Module docs for core modules are assumed to reside in &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; are the major and minor version numbers of the Python interpreter. This can be overridden by setting the &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; environment variable to a different URL or to a local directory containing the Library Reference Manual pages.</source>
          <target state="translated">핵심 모듈에 대한 모듈 문서는 &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; 에 상주한다고 가정합니다. 여기서 &lt;code&gt;X&lt;/code&gt; 와 &lt;code&gt;Y&lt;/code&gt; 는 Python 인터프리터의 주 버전 및 부 버전 번호입니다. &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; 환경 변수를 다른 URL 또는 라이브러리 참조 매뉴얼 페이지를 포함하는 로컬 디렉토리 로 설정하여 이를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ef1dd98e4cfd7a9708f2569eff22f5637fb8bc6" translate="yes" xml:space="preserve">
          <source>Module functions and constants</source>
          <target state="translated">모듈 함수와 상수</target>
        </trans-unit>
        <trans-unit id="9ef7884387f3e4f0b36275d92cdf793323d304a1" translate="yes" xml:space="preserve">
          <source>Module which provides function to parse and escape command lines.</source>
          <target state="translated">명령 줄을 구문 분석하고 이스케이프하는 기능을 제공하는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="c383a8897cd1716700d1c6ce4d55ad2fcebbab29" translate="yes" xml:space="preserve">
          <source>Module-Level Attributes</source>
          <target state="translated">모듈 레벨 속성</target>
        </trans-unit>
        <trans-unit id="f6833370d46becabc41cf08b0e482dee5c655b31" translate="yes" xml:space="preserve">
          <source>Module-Level Functions</source>
          <target state="translated">모듈 수준 기능</target>
        </trans-unit>
        <trans-unit id="72f4be7481838d35b49b8de2e9a7fee6249d8e61" translate="yes" xml:space="preserve">
          <source>Module-level decorators, classes, and functions</source>
          <target state="translated">모듈 수준 데코레이터, 클래스 및 함수</target>
        </trans-unit>
        <trans-unit id="0912cb95ac0d180a81219825c72ec9eb605ea300" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.application&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.application&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb79c7e1617398068225f2820c0c3459cc440e65" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.audio&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.audio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94725cd99078c801f5574ad6d6ea78ee9a024ea3" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.base&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ea4be398009cc8d6de590b862d7f3009c1b810f" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.image&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93b775199744840d67da16eb9ccb4cd9bbae2050" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.message&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.message&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="441e7562ed5fe7a1630841c1a22bdc73a4f3d757" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.multipart&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.multipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d510569ecc8d71a91a86a65c09928a0f4ef8f5d5" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127f26a281cad66280273f6515132d982225e9cf" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.text&lt;/code&gt;</source>
          <target state="translated">모듈 : &lt;code&gt;email.mime.text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dc7c7ee2e220614ae05c4256b05b12812ad8cf9" translate="yes" xml:space="preserve">
          <source>ModuleNotFoundError</source>
          <target state="translated">ModuleNotFoundError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="7ce8b9ff9d2e4b6f5530707c5224f523b8323151" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt;&lt;code&gt;tkinter.messagebox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt;</source>
          <target state="translated">Modules &lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt; &lt;code&gt;tkinter.messagebox&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e118e0912a01f24a429ac2012ae97cc544249d59" translate="yes" xml:space="preserve">
          <source>Modules built into the interpreter are written like this: &lt;code&gt;&amp;lt;module 'sys'
(built-in)&amp;gt;&lt;/code&gt;. If loaded from a file, they are written as &lt;code&gt;&amp;lt;module 'os' from
'/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">인터프리터에 내장 된 모듈은 다음과 같이 작성됩니다 : &lt;code&gt;&amp;lt;module 'sys' (built-in)&amp;gt;&lt;/code&gt; . 파일에서로드 된 경우 &lt;code&gt;&amp;lt;module 'os' from '/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt; 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1911b7883b819819b6db37c8e8e2824d20e1cc32" translate="yes" xml:space="preserve">
          <source>Modules or packages can customize how tests are loaded from them during normal test runs or test discovery by implementing a function called &lt;code&gt;load_tests&lt;/code&gt;.</source>
          <target state="translated">모듈 또는 패키지는 &lt;code&gt;load_tests&lt;/code&gt; 라는 기능을 구현하여 일반 테스트 실행 또는 테스트 검색 중에 테스트가로드되는 방식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87a40520b4026078c79efca77f06437b79124739" translate="yes" xml:space="preserve">
          <source>Modulo</source>
          <target state="translated">Modulo</target>
        </trans-unit>
        <trans-unit id="5d0d78dc5224fd4f6862f5f7a9fb54a486fd390b" translate="yes" xml:space="preserve">
          <source>Monitor for completion with a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프 로 완료를 모니터하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed5abdf1184868f05915cfc662a0097b73af5db0" translate="yes" xml:space="preserve">
          <source>Monitor for completion.</source>
          <target state="translated">완료를 모니터링하십시오.</target>
        </trans-unit>
        <trans-unit id="496c793822576e70e527412a984554382d2aebe7" translate="yes" xml:space="preserve">
          <source>Month (one-based)</source>
          <target state="translated">월 (1 개 기준)</target>
        </trans-unit>
        <trans-unit id="742b33d400ddeeabce686bc1c2413ddb0c448e2a" translate="yes" xml:space="preserve">
          <source>Month as a decimal number [01,12].</source>
          <target state="translated">십진수로 된 월 [01,12].</target>
        </trans-unit>
        <trans-unit id="f2ebd646406d99068e09d2f4e14fbbffed228a7d" translate="yes" xml:space="preserve">
          <source>Month as a zero-padded decimal number.</source>
          <target state="translated">0으로 채워진 10 진수로 된 월입니다.</target>
        </trans-unit>
        <trans-unit id="4b69dcb0d93760210c273e2a1abcde796903be87" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s abbreviated name.</source>
          <target state="translated">로캘의 약식 이름 인 월입니다.</target>
        </trans-unit>
        <trans-unit id="fea5423e8f5a25290885c0d0e12a775f3fd61281" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s full name.</source>
          <target state="translated">로캘의 전체 이름으로 된 월입니다.</target>
        </trans-unit>
        <trans-unit id="e202399e2af6ae3d8e2fdbf89c95c2518eee70d8" translate="yes" xml:space="preserve">
          <source>More advanced customization may be achieved by overriding default values of these parser attributes. The defaults are defined on the classes, so they may be overridden by subclasses or by attribute assignment.</source>
          <target state="translated">이러한 파서 속성의 기본값을 재정 의하여 고급 사용자 지정을 수행 할 수 있습니다. 디폴트는 클래스에서 정의되므로 서브 클래스 또는 속성 지정으로 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76f2ac8fa6191d0a7752f0403130e23050b322b6" translate="yes" xml:space="preserve">
          <source>More complex argument matching</source>
          <target state="translated">더 복잡한 인수 일치</target>
        </trans-unit>
        <trans-unit id="a4edbe5aa58310b4837dc402b6725527f1000abe" translate="yes" xml:space="preserve">
          <source>More condensed:</source>
          <target state="translated">더 응축 :</target>
        </trans-unit>
        <trans-unit id="af27293770923a34ccc5524c23d8989922e0488b" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;hexversion&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;API 및 ABI Versioning&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bea97050a9753fa861ba82b70cd980e773dd094e" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="35c58ae0fd8a7e1329fa05386d5d2de6a083afbd" translate="yes" xml:space="preserve">
          <source>More drawing control</source>
          <target state="translated">더 많은 도면 제어</target>
        </trans-unit>
        <trans-unit id="f73f1a20168b82e8d86b3b46baab234a74659e99" translate="yes" xml:space="preserve">
          <source>More examples of working with &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 작업의 더 많은 예 :</target>
        </trans-unit>
        <trans-unit id="bda595d7c3822cdddfd4e7f95e4ba1fe77eef18d" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">색 공간에 대한 자세한 내용은 &lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http://poynton.ca/ColorFAQ.html&lt;/a&gt; 및 &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebd0327ac3aa99b06dcfeba3d93e47172fbb094e" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;https://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">More information about color spaces can be found at &lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;https://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1cf8e91c8e08ed18b8e45a5ac7ba72687719075d" translate="yes" xml:space="preserve">
          <source>More information about this feature, including a list of recognized options, can be found in the &lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URI documentation&lt;/a&gt;.</source>
          <target state="translated">인식 된 옵션 목록을 포함하여이 기능에 대한 자세한 정보는 &lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URI 문서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f7f884738e96b308c393050b48c8b8755a6d24c" translate="yes" xml:space="preserve">
          <source>More object-oriented interface to dates and times.</source>
          <target state="translated">날짜와 시간에 대한 객체 지향 인터페이스.</target>
        </trans-unit>
        <trans-unit id="b4302b5e109b770c6a0ea76fbd2882a8bc6db8b6" translate="yes" xml:space="preserve">
          <source>More picklability</source>
          <target state="translated">더 많은 피클 가능성</target>
        </trans-unit>
        <trans-unit id="0d62cf081bc641ff89c8b59069e0d5d811e8757a" translate="yes" xml:space="preserve">
          <source>More precisely, if &lt;code&gt;x&lt;/code&gt; is nonzero, then &lt;code&gt;x.bit_length()&lt;/code&gt; is the unique positive integer &lt;code&gt;k&lt;/code&gt; such that &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt;. Equivalently, when &lt;code&gt;abs(x)&lt;/code&gt; is small enough to have a correctly rounded logarithm, then &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is zero, then &lt;code&gt;x.bit_length()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">경우보다 정확하게 &lt;code&gt;x&lt;/code&gt; 는 제로가 아닌, 다음 &lt;code&gt;x.bit_length()&lt;/code&gt; 고유 한 양의 정수이고 &lt;code&gt;k&lt;/code&gt; 되도록 &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt; . 마찬가지로 &lt;code&gt;abs(x)&lt;/code&gt; 가 올바르게 반올림 된 로그를 갖기에 충분히 작은 경우 &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt; 입니다. 경우 &lt;code&gt;x&lt;/code&gt; 는 제로, 다음 &lt;code&gt;x.bit_length()&lt;/code&gt; 반환 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ced1f1a5abe7721a13a8ffbf16d63ff492b8f140" translate="yes" xml:space="preserve">
          <source>More precisely, the expression &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; is always true at runtime.</source>
          <target state="translated">보다 정확하게 표현하면 &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; 표현식 은 런타임시 항상 참입니다.</target>
        </trans-unit>
        <trans-unit id="afcfcf646cf0d59e75aa3efa0a7dca7907775b81" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">보다 정교한 컨텍스트 관리자는&amp;ldquo;재진입&amp;rdquo;할 수 있습니다. 이 컨텍스트 관리자는 여러 사용할 수 없습니다 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문장뿐만 아니라 사용될 수있는 &lt;em&gt;내부 &lt;/em&gt; &lt;code&gt;with&lt;/code&gt; 이미 같은 컨텍스트 관리자를 사용하는 문.</target>
        </trans-unit>
        <trans-unit id="05a30554854e73f54c7ece4a3f1e002fd46afc4d" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</target>
        </trans-unit>
        <trans-unit id="bec52d0bf3df1fe2b7028c4e46728b05b6585a7b" translate="yes" xml:space="preserve">
          <source>More sophisticated specification of which elements to look for is possible by using &lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt; 를 사용하면 찾을 요소를보다 정교하게 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44cce591f12835a93d72e2725773defea428923d" translate="yes" xml:space="preserve">
          <source>Moreover, by subclassing a special class &lt;a href=&quot;#typing.Protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt;, a user can define new custom protocols to fully enjoy structural subtyping (see examples below).</source>
          <target state="translated">또한 특수 클래스 &lt;a href=&quot;#typing.Protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt; 을 서브 클래 싱함으로써 사용자는 구조적 서브 타이핑을 완전히 즐길 수 있도록 새로운 사용자 정의 프로토콜을 정의 할 수 있습니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="c7c6427f00dc397938f8e9415a2f590774699402" translate="yes" xml:space="preserve">
          <source>Moreover, if you output the 0&amp;rsquo;th item on disk and get an input which may not fit in the current tournament (because the value &amp;ldquo;wins&amp;rdquo; over the last output value), it cannot fit in the heap, so the size of the heap decreases. The freed memory could be cleverly reused immediately for progressively building a second heap, which grows at exactly the same rate the first heap is melting. When the first heap completely vanishes, you switch heaps and start a new run. Clever and quite effective!</source>
          <target state="translated">또한 디스크에 0 번째 항목을 출력하고 현재 토너먼트에 맞지 않을 수있는 입력을 받으면 (마지막 출력 값보다 &quot;승리&quot;하므로) 힙에 맞지 않을 수 있습니다. 힙이 줄어 듭니다. 해제 된 메모리는 두 번째 힙을 점진적으로 구축하기 위해 즉시 영리하게 재사용 할 수 있으며, 첫 번째 힙이 녹는 것과 정확히 같은 속도로 증가합니다. 첫 번째 힙이 완전히 사라지면 힙을 전환하고 새 실행을 시작합니다. 영리하고 매우 효과적입니다!</target>
        </trans-unit>
        <trans-unit id="223a97db4a13581b9f40926ba9bf06631a533426" translate="yes" xml:space="preserve">
          <source>Morsel Objects</source>
          <target state="translated">모셀 개체</target>
        </trans-unit>
        <trans-unit id="aab9d541f9999319a8925c74373dfaf9120edff4" translate="yes" xml:space="preserve">
          <source>Morsels are dictionary-like objects, whose set of keys is constant &amp;mdash; the valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes, which are</source>
          <target state="translated">모셀은 사전과 유사한 객체로, 키 세트가 일정한 유효한 &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="12e365ba43d20a735f475457d6d67ad170f2ddc0" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; actions add some value as an attribute of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. The name of this attribute is determined by the &lt;code&gt;dest&lt;/code&gt; keyword argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;. For positional argument actions, &lt;code&gt;dest&lt;/code&gt; is normally supplied as the first argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">대부분의 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 작업은 &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 반환 한 객체의 속성으로 일부 값을 추가 합니다. 이 속성의 이름은 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;dest&lt;/code&gt; 키워드 인수에 의해 결정됩니다 . 위치 인수 작업의 경우 일반적으로 &lt;code&gt;dest&lt;/code&gt; 는 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 의 첫 번째 인수로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b8a1ba8e18b5f5019a5d4312dc314b8b2c9954f" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclasses should be able to inherit the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation without problems. It&amp;rsquo;s strong enough to handle fixed-offset time zones, and time zones accounting for both standard and daylight time, and the latter even if the DST transition times differ in different years. An example of a time zone the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation may not handle correctly in all cases is one where the standard offset (from UTC) depends on the specific date and time passed, which can happen for political reasons. The default implementations of &lt;code&gt;astimezone()&lt;/code&gt; and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; may not produce the result you want if the result is one of the hours straddling the moment the standard offset changes.</source>
          <target state="translated">대부분의 &lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; 서브 클래스는 기본 &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt; 구현을 문제없이 상속 할 수 있어야합니다 . 고정 오프셋 표준 시간대와 표준 시간대 및 일광 절약 시간을 모두 고려한 표준 시간대와 DST 전환 시간이 서로 다른 연도를 다룰 수있는 표준 시간대를 처리 할 수있을 정도로 강력합니다. 표준 &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt; 구현이 모든 경우에 올바르게 처리되지 않을 수있는 시간대의 예는 UTC로부터의 표준 오프셋이 전달 된 특정 날짜 및 시간에 따라 달라지는 정치적 예입니다. 표준 오프셋이 변경되는 순간에 결과가 시간 중 하나 인 경우 &lt;code&gt;astimezone()&lt;/code&gt; 및 &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt; 의 기본 구현으로 원하는 결과를 얻지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa3c05e44820db4266ade0ef0b637c16f15b20d4" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; methods will raise either &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; if an I/O operation would block. &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; will be raised if a read operation on the underlying socket is necessary, and &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; for a write operation on the underlying socket. Note that attempts to &lt;em&gt;write&lt;/em&gt; to an SSL socket may require &lt;em&gt;reading&lt;/em&gt; from the underlying socket first, and attempts to &lt;em&gt;read&lt;/em&gt; from the SSL socket may require a prior &lt;em&gt;write&lt;/em&gt; to the underlying socket.</source>
          <target state="translated">I / O 작업이 &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt; 되면 대부분의 &lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt; 메소드는 BlockingIOError 대신 &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; 를 발생시킵니다&lt;/a&gt; . 기본 소켓에서 읽기 작업이 필요한 경우 &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt; 가 발생하고 기본 소켓 에서 쓰기 작업을하려면 &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 시도 할 수 있습니다 &lt;em&gt;쓸&lt;/em&gt; 필요 수있는 SSL 소켓에 &lt;em&gt;읽기&lt;/em&gt; 먼저 기본 소켓에서, 그리고 시도하는 &lt;em&gt;읽기&lt;/em&gt; 이전이 필요할 수 있습니다 SSL 소켓에서 &lt;em&gt;쓰기&lt;/em&gt; 기본 소켓을.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd522bac8b9e11ce49eeb2583e8f07839a03488c" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; scheduling functions don&amp;rsquo;t allow passing keyword arguments. To do that, use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">대부분의 &lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt; 예약 기능은 키워드 인수 전달을 허용하지 않습니다. 그렇게하려면 &lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd51bb63feffbfa7148f18472384cc0b94c13ee7" translate="yes" xml:space="preserve">
          <source>Most HTTP servers buffer the output from CGI scripts until the script is completed. This means that it is not possible to display a progress report on the client&amp;rsquo;s display while the script is running.</source>
          <target state="translated">대부분의 HTTP 서버는 스크립트가 완료 될 때까지 CGI 스크립트의 출력을 버퍼링합니다. 이는 스크립트가 실행되는 동안 클라이언트의 디스플레이에 진행률 보고서를 표시 할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="89262a759f5c4450ccbba1d7e972a20eb9d6f62d" translate="yes" xml:space="preserve">
          <source>Most Python users will &lt;em&gt;not&lt;/em&gt; want to use this module directly, but instead use the cross-version tools maintained by the Python Packaging Authority. In particular, &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt; is an enhanced alternative to &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; that provides:</source>
          <target state="translated">대부분의 파이썬 사용자는 것입니다 &lt;em&gt;하지&lt;/em&gt; 직접 모듈을 사용하지만, 대신 파이썬 포장 당국에 의해 유지되는 버전 간 도구를 사용하려고합니다. 특히 &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt; 는 다음을 제공 하는 &lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt; 의 향상된 대안 입니다.</target>
        </trans-unit>
        <trans-unit id="b4ff9c4f943c838658554972d2715c1911832530" translate="yes" xml:space="preserve">
          <source>Most built-in types implement the following options for format specifications, although some of the formatting options are only supported by the numeric types.</source>
          <target state="translated">대부분의 내장 유형은 형식 스펙에 대해 다음 옵션을 구현하지만 일부 형식 옵션은 숫자 유형에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4671a5faa2bb50d6521e2b74a0ac603b3e8ea2c0" translate="yes" xml:space="preserve">
          <source>Most built-in types support a common formatting mini-language, which is described in the next section.</source>
          <target state="translated">대부분의 기본 제공 형식은 다음 섹션에서 설명하는 공통 서식 미니 언어를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9f333f2038f1ecde46179e5361647a36ea955c1a" translate="yes" xml:space="preserve">
          <source>Most calls to the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor will use the &lt;code&gt;description=&lt;/code&gt; keyword argument. This argument gives a brief description of what the program does and how it works. In help messages, the description is displayed between the command-line usage string and the help messages for the various arguments:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 생성자 에 대한 대부분의 호출 은 &lt;code&gt;description=&lt;/code&gt; 키워드 인수를 사용합니다 . 이 인수는 프로그램의 기능과 작동 방식에 대한 간략한 설명을 제공합니다. 도움말 메시지에서 명령 행 사용법 문자열과 다양한 인수에 대한 도움말 메시지 사이에 설명이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d721b333c77edec8818b7d94960eeed847aceea5" translate="yes" xml:space="preserve">
          <source>Most command-line options will use &lt;code&gt;-&lt;/code&gt; as the prefix, e.g. &lt;code&gt;-f/--foo&lt;/code&gt;. Parsers that need to support different or additional prefix characters, e.g. for options like &lt;code&gt;+f&lt;/code&gt; or &lt;code&gt;/foo&lt;/code&gt;, may specify them using the &lt;code&gt;prefix_chars=&lt;/code&gt; argument to the ArgumentParser constructor:</source>
          <target state="translated">대부분의 명령 줄 옵션을 사용합니다 &lt;code&gt;-&lt;/code&gt; 접두사, 예를 들어 같은 &lt;code&gt;-f/--foo&lt;/code&gt; . &lt;code&gt;+f&lt;/code&gt; 또는 &lt;code&gt;/foo&lt;/code&gt; 와 같은 옵션과 같이 다른 또는 추가 접두사 문자를 지원해야하는 파서 는 ArgumentParser 생성자에 &lt;code&gt;prefix_chars=&lt;/code&gt; 인수를 사용하여 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c59d2f4304b47bbe5f9025fc2719f37eb21fc59" translate="yes" xml:space="preserve">
          <source>Most commands are available as &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; classes. Change &amp;lsquo;8.6&amp;rsquo; to match the version of your Tcl/Tk installation.</source>
          <target state="translated">대부분의 명령은 &lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt; 클래스 로 사용 가능 합니다. Tcl / Tk 설치 버전과 일치하도록 '8.6'을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="09e1be6a3a08fdd80447facaa6e35fc4dcf067a7" translate="yes" xml:space="preserve">
          <source>Most configuration options apply to all windows or all future windows. The option items below only apply to the active window.</source>
          <target state="translated">대부분의 구성 옵션은 모든 창 또는 모든 미래 창에 적용됩니다. 아래의 옵션 항목은 활성 창에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d738b94492588389087414a01d9272752be1e6c" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">대부분의 컨텍스트 관리자는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문에서 한 번만 효과적으로 사용할 수 있다는 의미로 작성되었습니다 . 이 단일 사용 컨텍스트 관리자는 사용될 때마다 새로 작성해야합니다. 두 번째로 사용하려고하면 예외가 발생하거나 올바르게 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="23350a9beba010cf4d08f3543501ebbc29d7d449" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</target>
        </trans-unit>
        <trans-unit id="acd4fa21da07450f40a52f6949201b55436a1a6a" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">대부분의 &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt; 구현은 다음 두 가지 중 하나와 비슷할 것입니다.</target>
        </trans-unit>
        <trans-unit id="aea2023d714ec31a854470fd3ecf8d9355c053c4" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">가장 중요한 것은 내부 파서가 처리하는 파이썬 문법을 잘 이해해야한다는 것입니다. 언어 구문에 대한 자세한 내용 &lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;은 Python 언어 참조를 참조하십시오&lt;/a&gt; . 파서 자체는 표준 Python 배포판의 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 파일에 정의 된 문법 사양에서 생성됩니다 . 이 모듈로 작성된 ST 오브젝트에 저장된 구문 분석 트리는 아래 설명 된 &lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt; 함수에 의해 작성 될 때 내부 구문 분석기의 실제 출력입니다 . &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 ST 객체이러한 구조를 충실히 시뮬레이션합니다. &quot;정확한&quot;것으로 간주되는 시퀀스의 값은 언어의 공식 문법이 개정 될 때 파이썬 버전마다 다를 수 있습니다. 그러나 소스 텍스트로 한 Python 버전에서 다른 Python 버전으로 코드를 전송하면 항상 대상 버전에서 올바른 구문 분석 트리를 만들 수 있으며, 이전 버전의 인터프리터로 마이그레이션하면 최신 언어 구문이 지원되지 않습니다. 파싱 ​​트리는 일반적으로 한 버전에서 다른 버전으로 호환되지 않지만 소스 코드는 일반적으로 주요 릴리스 시리즈에서 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a4d8998d8b1d8d4c5a06a28620ed45ee9d8c662" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</target>
        </trans-unit>
        <trans-unit id="91b41d0992c76daa7e6ce1cb34f492287f10c4f0" translate="yes" xml:space="preserve">
          <source>Most locales do not define this value. An example of a locale which does define this value is the Japanese one. In Japan, the traditional representation of dates includes the name of the era corresponding to the then-emperor&amp;rsquo;s reign.</source>
          <target state="translated">대부분의 로캘은이 값을 정의하지 않습니다. 이 값을 정의하는 로케일의 예는 일본어입니다. 일본에서 전통적인 날짜 표시에는 당시 황제의 통치에 해당하는 시대의 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7e2559cd2f7c66c93f9db240a7fc5efb17e9d6cc" translate="yes" xml:space="preserve">
          <source>Most messages with a content type of &lt;em&gt;message/*&lt;/em&gt; (such as &lt;em&gt;message/delivery-status&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt;) will also be parsed as container object containing a list payload of length 1. Their &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method will return &lt;code&gt;True&lt;/code&gt;. The single element yielded by &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will be a sub-message object.</source>
          <target state="translated">내용 유형이 &lt;em&gt;message / *&lt;/em&gt; 인 &lt;em&gt;메시지&lt;/em&gt; (예 : &lt;em&gt;message / delivery-status&lt;/em&gt; 및 &lt;em&gt;message / rfc822&lt;/em&gt; )는 대부분 길이 1의 목록 페이로드를 포함하는 컨테이너 객체로 구문 분석됩니다. &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 메소드는 &lt;code&gt;True&lt;/code&gt; 를 반환 합니다. &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 단일 요소는 하위 메시지 개체가됩니다.</target>
        </trans-unit>
        <trans-unit id="0bbab5f6cfbae51ba73420b5d82749fd2992f95e" translate="yes" xml:space="preserve">
          <source>Most non-&lt;em&gt;multipart&lt;/em&gt; type messages are parsed as a single message object with a string payload. These objects will return &lt;code&gt;False&lt;/code&gt; for &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will yield an empty list.</source>
          <target state="translated">&lt;em&gt;멀티 파트가&lt;/em&gt; 아닌 유형의 메시지는 대부분 문자열 페이로드가있는 단일 메시지 객체로 구문 분석됩니다. 이 객체는 &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt; 대해 &lt;code&gt;False&lt;/code&gt; 를 반환 하고 &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt; 는 빈 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c2841625ce82d29906f55ae50358119d7bcc13ad" translate="yes" xml:space="preserve">
          <source>Most of connection oriented event loop methods (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;) usually accept a &lt;em&gt;protocol_factory&lt;/em&gt; argument used to create a &lt;em&gt;Protocol&lt;/em&gt; object for an accepted connection, represented by a &lt;em&gt;Transport&lt;/em&gt; object. Such methods usually return a tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt;.</source>
          <target state="translated">대부분의 연결 지향 이벤트 루프 메소드 (예 : &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt; )는 일반적으로 &lt;em&gt;전송&lt;/em&gt; 오브젝트로 표시되는 승인 된 연결에 대한 &lt;em&gt;Protocol&lt;/em&gt; 오브젝트 를 작성하는 데 사용되는 &lt;em&gt;protocol_factory&lt;/em&gt; 인수를 승인 합니다. 이러한 메소드는 일반적으로 &lt;code&gt;(transport, protocol)&lt;/code&gt; 의 튜플을 리턴합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81f7d7d5c7660933a30dd70b5115a9493350bf31" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a Turtle instance called &lt;code&gt;turtle&lt;/code&gt;.</source>
          <target state="translated">이 섹션의 예제는 대부분 &lt;code&gt;turtle&lt;/code&gt; 이라는 Turtle 인스턴스를 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="00f06901ce4c8554bb321be3baaa0d6f5ae7c8b3" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a TurtleScreen instance called &lt;code&gt;screen&lt;/code&gt;.</source>
          <target state="translated">이 섹션의 대부분의 예제는 &lt;code&gt;screen&lt;/code&gt; 이라는 TurtleScreen 인스턴스를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="6a2fb976c0f061ef5f5627769d911fef317c03b7" translate="yes" xml:space="preserve">
          <source>Most of the random module&amp;rsquo;s algorithms and seeding functions are subject to change across Python versions, but two aspects are guaranteed not to change:</source>
          <target state="translated">임의 모듈의 알고리즘과 시딩 함수의 대부분은 Python 버전에서 변경 될 수 있지만 두 가지 측면은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7745b7926e51bd60c61099df7ea2085b449eedf0" translate="yes" xml:space="preserve">
          <source>Most of the standard escapes supported by Python string literals are also accepted by the regular expression parser:</source>
          <target state="translated">파이썬 문자열 리터럴이 지원하는 대부분의 표준 이스케이프는 정규 표현식 파서에서도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="566d54a039879a714c6a3632228f8ac12ebf75df" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; is all you really need, but a number of additional modules are available as well. The Tk interface is located in a binary module named &lt;code&gt;_tkinter&lt;/code&gt;. This module contains the low-level interface to Tk, and should never be used directly by application programmers. It is usually a shared library (or DLL), but might in some cases be statically linked with the Python interpreter.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt; 가 실제로 필요한 전부이지만 여러 가지 추가 모듈도 사용할 수 있습니다. Tk 인터페이스는 &lt;code&gt;_tkinter&lt;/code&gt; 라는 이진 모듈에 있습니다. 이 모듈에는 Tk에 대한 저수준 인터페이스가 포함되어 있으므로 응용 프로그램 프로그래머가 직접 사용해서는 안됩니다. 일반적으로 공유 라이브러리 (또는 DLL)이지만 일부 경우 Python 인터프리터와 정적으로 링크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd5bad467beb5b7fbd87a238c1288e8d07b19cf1" translate="yes" xml:space="preserve">
          <source>Most of the time, the attributes of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will be fully determined by inspecting the command-line arguments and the argument actions. &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; allows some additional attributes that are determined without any inspection of the command line to be added:</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 객체의 속성은 명령 줄 인수와 인수 작업을 검사하여 완전히 결정됩니다. &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt; 사용하면 명령 줄을 검사하지 않고 결정된 몇 가지 추가 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1089f5c7ed3d0c68bfe01bebe0674b2ea0fa5e89" translate="yes" xml:space="preserve">
          <source>Most of these reflect information in the XML document that is not of general utility to most DOM users.</source>
          <target state="translated">이들 대부분은 대부분의 DOM 사용자에게 일반적인 유틸리티가 아닌 XML 문서의 정보를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="13b592a4e1b821b7d19f58aba800d1b83c05c87f" translate="yes" xml:space="preserve">
          <source>Most often, CGI scripts live in the server&amp;rsquo;s special &lt;code&gt;cgi-bin&lt;/code&gt; directory. The HTTP server places all sorts of information about the request (such as the client&amp;rsquo;s hostname, the requested URL, the query string, and lots of other goodies) in the script&amp;rsquo;s shell environment, executes the script, and sends the script&amp;rsquo;s output back to the client.</source>
          <target state="translated">대부분의 경우 CGI 스크립트는 서버의 특수 &lt;code&gt;cgi-bin&lt;/code&gt; 디렉토리에 있습니다. HTTP 서버는 스크립트의 쉘 환경에 요청에 대한 모든 종류의 정보 (예 : 클라이언트의 호스트 이름, 요청 된 URL, 쿼리 문자열 및 기타 많은 것들)를 스크립트의 쉘 환경에 저장하고 스크립트를 실행하며 스크립트의 출력을 고객.</target>
        </trans-unit>
        <trans-unit id="84948582795acb691856110e5ae66ef32acdd219" translate="yes" xml:space="preserve">
          <source>Most parsing functions provided by this module require the whole document to be read at once before returning any result. It is possible to use an &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and feed data into it incrementally, but it is a push API that calls methods on a callback target, which is too low-level and inconvenient for most needs. Sometimes what the user really wants is to be able to parse XML incrementally, without blocking operations, while enjoying the convenience of fully constructed &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">이 모듈이 제공하는 대부분의 구문 분석 기능은 결과를 리턴하기 전에 전체 문서를 한 번에 읽도록 ​​요구합니다. &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 를 사용하여 점진적으로 데이터를 공급 하는 것이 가능 하지만 콜백 대상에서 메소드를 호출하는 푸시 API로, 대부분의 경우 너무 낮은 수준이며 불편합니다. 때로는 사용자가 실제로 원하는 것은 완전히 구성된 &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 객체 의 편리함을 즐기면서 작업을 차단하지 않고 XML을 증분 적으로 구문 분석 할 수있는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="793641b11ec9edf6536ef14e14a17a202ba37fd0" translate="yes" xml:space="preserve">
          <source>Most programs adjust the current context only once, at the beginning of the program. And, in many applications, data is converted to &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; with a single cast inside a loop. With context set and decimals created, the bulk of the program manipulates the data no differently than with other Python numeric types.</source>
          <target state="translated">대부분의 프로그램은 프로그램 시작시 현재 컨텍스트를 한 번만 조정합니다. 또한 많은 응용 프로그램에서 데이터는 루프 내에서 단일 캐스트 를 사용하여 &lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 로 변환됩니다 . 컨텍스트 세트 및 소수를 작성하면 대부분의 프로그램이 다른 Python 숫자 유형과 다르게 데이터를 조작합니다.</target>
        </trans-unit>
        <trans-unit id="bed33f38a8121d67d831a08ac6160cf7fca8b25f" translate="yes" xml:space="preserve">
          <source>Most programs should find that using one of these weak container types or &lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; is all they need &amp;ndash; it&amp;rsquo;s not usually necessary to create your own weak references directly. The low-level machinery is exposed by the &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module for the benefit of advanced uses.</source>
          <target state="translated">대부분의 프로그램은 이러한 약한 컨테이너 유형 중 하나를 사용하거나 &lt;a href=&quot;#weakref.finalize&quot;&gt; &lt;code&gt;finalize&lt;/code&gt; &lt;/a&gt; 것이 필요한 전부라는 것을 알아야합니다. 일반적으로 자체 약한 참조를 직접 만들 필요는 없습니다. 저수준 기계는 고급 사용을 위해 &lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt; 모듈에 의해 노출됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e33a7247ba2cdbfe9e4c5eadcda0b6fb6940dfb" translate="yes" xml:space="preserve">
          <source>Most tkinter programs run &lt;code&gt;root.mainloop()&lt;/code&gt;, which usually does not return until the tk app is destroyed. If the program is run with &lt;code&gt;python -i&lt;/code&gt; or from an IDLE editor, a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; shell prompt does not appear until &lt;code&gt;mainloop()&lt;/code&gt; returns, at which time there is nothing left to interact with.</source>
          <target state="translated">대부분의 tkinter 프로그램은 &lt;code&gt;root.mainloop()&lt;/code&gt; 실행 하는데 , 일반적으로 tk 앱이 파괴 될 때까지 반환되지 않습니다. 프로그램이 &lt;code&gt;python -i&lt;/code&gt; 또는 IDLE 편집기에서 실행되는 경우 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 쉘 프롬프트는 &lt;code&gt;mainloop()&lt;/code&gt; 리턴 될 때까지 나타나지 않으며 , 이때 상호 작용할 항목이 없습니다.</target>
        </trans-unit>
        <trans-unit id="467bcc5b3e2170db615ed243a7771ae192662925" translate="yes" xml:space="preserve">
          <source>Most users should use &lt;a href=&quot;subprocess#subprocess.run&quot;&gt;&lt;code&gt;subprocess.run()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대부분의 사용자는 &lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;subprocess#subprocess.run&quot;&gt; &lt;code&gt;subprocess.run()&lt;/code&gt; &lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7022d092d568159a8deb2f5345b042987cdc731a" translate="yes" xml:space="preserve">
          <source>Mouse event has occurred</source>
          <target state="translated">마우스 이벤트가 발생했습니다</target>
        </trans-unit>
        <trans-unit id="76cdb950721642b6b8596d36d5a39f7705028b99" translate="yes" xml:space="preserve">
          <source>Move</source>
          <target state="translated">Move</target>
        </trans-unit>
        <trans-unit id="59b381f9ae62e71a6e656f888600974d66a2a445" translate="yes" xml:space="preserve">
          <source>Move a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; pyc file to its legacy pyc location and return the file system path to the legacy pyc file. The &lt;em&gt;source&lt;/em&gt; value is the file system path to the source file. It does not need to exist, however the PEP 3147/488 pyc file must exist.</source>
          <target state="translated">이동 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; 는 기존의 pyc 위치로의 pyc 파일과 기존의 pyc 파일에 파일 시스템 경로를 반환합니다. &lt;em&gt;소스&lt;/em&gt; 값은 소스 파일에 파일 시스템 경로입니다. 존재할 필요는 없지만 PEP 3147/488 pyc 파일이 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="34fb02884cc45eb332edf96e82c7d3d89690c570" translate="yes" xml:space="preserve">
          <source>Move an existing &lt;em&gt;key&lt;/em&gt; to either end of an ordered dictionary. The item is moved to the right end if &lt;em&gt;last&lt;/em&gt; is true (the default) or to the beginning if &lt;em&gt;last&lt;/em&gt; is false. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;key&lt;/em&gt; does not exist:</source>
          <target state="translated">기존 &lt;em&gt;키&lt;/em&gt; 를 정렬 된 사전의 한쪽 끝으로 이동하십시오 . &lt;em&gt;마지막&lt;/em&gt; 이 참이면 (기본값) 오른쪽으로 이동하고 &lt;em&gt;마지막&lt;/em&gt; 이 거짓 이면 시작으로 이동합니다 . 발생시킵니다 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 를을&lt;/a&gt; 경우 &lt;em&gt;키가&lt;/em&gt; 존재하지 않습니다</target>
        </trans-unit>
        <trans-unit id="a9241b7a62db251595ec94a8670f8492cc79c5f0" translate="yes" xml:space="preserve">
          <source>Move and draw</source>
          <target state="translated">이동 및 그리기</target>
        </trans-unit>
        <trans-unit id="ef3b0cebd03fd191bbc4cb8897a06eaaba33d4fe" translate="yes" xml:space="preserve">
          <source>Move cursor to &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">커서를 &lt;code&gt;(new_y, new_x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="601b26f56eb7f3dd5627e0542377e2380db7e481" translate="yes" xml:space="preserve">
          <source>Move cursor to the line number requested and make that line visible.</source>
          <target state="translated">요청한 행 번호로 커서를 이동하고 해당 행을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="00de7b574f0ca4dca2db05f7ac95cf8fa926cd45" translate="yes" xml:space="preserve">
          <source>Move operations do nothing if the cursor is at an edge where the movement is not possible. The following synonyms are supported where possible:</source>
          <target state="translated">이동이 불가능한 가장자리에 커서가 있으면 이동 작업이 수행되지 않습니다. 가능한 경우 다음 동의어가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f14c08ec9cc70b053ef1452c74150f8bece0b93f" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels down in the stack trace (to a newer frame).</source>
          <target state="translated">스택 추적에서 현재 프레임 &lt;em&gt;수&lt;/em&gt; (기본 1) 레벨을 새 프레임으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1f999beea6e1d8614d33e214187f8c14de783371" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels up in the stack trace (to an older frame).</source>
          <target state="translated">스택 추적에서 현재 프레임 &lt;em&gt;수&lt;/em&gt; (기본) 수준을 이전 프레임으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="cbcadba9b748dd50e27e7929dd7eba8bdc251d08" translate="yes" xml:space="preserve">
          <source>Move the cursor to the beginning of the line requested and make that line visible. A request past the end of the file goes to the end. Clear any selection and update the line and column status.</source>
          <target state="translated">Move the cursor to the beginning of the line requested and make that line visible. A request past the end of the file goes to the end. Clear any selection and update the line and column status.</target>
        </trans-unit>
        <trans-unit id="bddc2d8cac88c0e16d0d15e699390e1c93202c14" translate="yes" xml:space="preserve">
          <source>Move the panel to the screen coordinates &lt;code&gt;(y, x)&lt;/code&gt;.</source>
          <target state="translated">패널을 화면 좌표 &lt;code&gt;(y, x)&lt;/code&gt; 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="366616b5769d49d8c4989ea2123f0635dfd476c9" translate="yes" xml:space="preserve">
          <source>Move the turtle backward by &lt;em&gt;distance&lt;/em&gt;, opposite to the direction the turtle is headed. Do not change the turtle&amp;rsquo;s heading.</source>
          <target state="translated">후방으로 거북 이동 &lt;em&gt;거리&lt;/em&gt; 거북이가 향하고있는 방향에 대향. 거북이의 제목을 바꾸지 마십시오.</target>
        </trans-unit>
        <trans-unit id="5bb8f30d63462cf640df95fdfb728a8ffba5f530" translate="yes" xml:space="preserve">
          <source>Move the turtle forward by the specified &lt;em&gt;distance&lt;/em&gt;, in the direction the turtle is headed.</source>
          <target state="translated">거북이가 향하는 방향으로 거북이를 지정된 &lt;em&gt;거리&lt;/em&gt; 만큼 앞으로 이동시킵니다 .</target>
        </trans-unit>
        <trans-unit id="606392f9ada71eee7694589f863fe49c6c953eb7" translate="yes" xml:space="preserve">
          <source>Move the window inside its parent window. The screen-relative parameters of the window are not changed. This routine is used to display different parts of the parent window at the same physical position on the screen.</source>
          <target state="translated">창을 부모 창으로 이동하십시오. 창의 화면 기준 매개 변수는 변경되지 않습니다. 이 루틴은 부모 창의 다른 부분을 화면에서 동일한 물리적 위치에 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9b4cc9d6cf91904a69809b29953b1b97a8cb436c" translate="yes" xml:space="preserve">
          <source>Move the window so its upper-left corner is at &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">왼쪽 위 모서리가 &lt;code&gt;(new_y, new_x)&lt;/code&gt; 가되도록 창을 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ae1c0cedf7a7f6220f5e9b65d8d117ba2c19e75" translate="yes" xml:space="preserve">
          <source>Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle&amp;rsquo;s orientation.</source>
          <target state="translated">거북이를 절대 위치로 옮기십시오. 펜이 내려져 있으면 선을 그립니다. 거북이의 방향을 바꾸지 마십시오.</target>
        </trans-unit>
        <trans-unit id="22468681bb2cde570129a7bbf809a05431bc555d" translate="yes" xml:space="preserve">
          <source>Move turtle to the origin &amp;ndash; coordinates (0,0) &amp;ndash; and set its heading to its start-orientation (which depends on the mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">거북이를 원점 (좌표 (0,0))으로 이동하고 방향을 시작 방향으로 설정합니다 (모드에 따라 다르며 &lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5be33704c954094f90870e7ed96a149ee7bd9c74" translate="yes" xml:space="preserve">
          <source>Moves &lt;em&gt;item&lt;/em&gt; to position &lt;em&gt;index&lt;/em&gt; in &lt;em&gt;parent&lt;/em&gt;&amp;rsquo;s list of children.</source>
          <target state="translated">&lt;em&gt;부모&lt;/em&gt; 의 자녀 목록 에서 &lt;em&gt;항목&lt;/em&gt; 을 위치 &lt;em&gt;색인&lt;/em&gt; 으로 이동 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d83016dd56e9bf9199d175870ff56ee77659cfb7" translate="yes" xml:space="preserve">
          <source>Mozilla</source>
          <target state="translated">Mozilla</target>
        </trans-unit>
        <trans-unit id="77bb2f79a7eb833c24226c0fc4afbc0065f7bae3" translate="yes" xml:space="preserve">
          <source>Mozilla&amp;rsquo;s Server Side TLS recommendations</source>
          <target state="translated">Mozilla의 서버 측 TLS 권장 사항</target>
        </trans-unit>
        <trans-unit id="34e4e3490cfd5d827b6939f20b6812fc7ab81c0a" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt;&lt;code&gt;LOAD_DEREF&lt;/code&gt;&lt;/a&gt; but first checks the locals dictionary before consulting the cell. This is used for loading free variables in class bodies.</source>
          <target state="translated">&lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt; &lt;code&gt;LOAD_DEREF&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 셀을 참조하기 전에 먼저 지역 사전을 확인하십시오. 이것은 클래스 본문에서 자유 변수를로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="330f90a4a7f8697f732d832206c87a0c80b1e817" translate="yes" xml:space="preserve">
          <source>Multi-dimensional arrays:</source>
          <target state="translated">다차원 배열 :</target>
        </trans-unit>
        <trans-unit id="e286be50d1c645889d37cc60a961288d4708698c" translate="yes" xml:space="preserve">
          <source>Multi-phase extension module initialization</source>
          <target state="translated">다상 확장 모듈 초기화</target>
        </trans-unit>
        <trans-unit id="3a17483ef417b9f9729e4d5407d6224ba50cae48" translate="yes" xml:space="preserve">
          <source>Multi-processing</source>
          <target state="translated">Multi-processing</target>
        </trans-unit>
        <trans-unit id="4df9252fd5d4911ee5eb1c96d25797e8cf043b28" translate="yes" xml:space="preserve">
          <source>Multi-threading</source>
          <target state="translated">Multi-threading</target>
        </trans-unit>
        <trans-unit id="775f46e5feac2a655ca3c0f4647af4e10f6b1405" translate="yes" xml:space="preserve">
          <source>MultiCall Objects</source>
          <target state="translated">멀티 콜 객체</target>
        </trans-unit>
        <trans-unit id="d9e13b473f0ae3bd1e957746112d999190ceed57" translate="yes" xml:space="preserve">
          <source>Multihop attempted</source>
          <target state="translated">멀티 홉 시도</target>
        </trans-unit>
        <trans-unit id="82dabd0bba3a5f611035c568eaa03187a7117693" translate="yes" xml:space="preserve">
          <source>Multimedia</source>
          <target state="translated">Multimedia</target>
        </trans-unit>
        <trans-unit id="4e13023947484ddbe09e9dcd00133156cd68392c" translate="yes" xml:space="preserve">
          <source>Multimedia Services</source>
          <target state="translated">멀티미디어 서비스</target>
        </trans-unit>
        <trans-unit id="bb2ec50bee2ac650f14f5c5ab53fb76fb7fa35c2" translate="yes" xml:space="preserve">
          <source>Multiple commands may be entered on a single line, separated by &lt;code&gt;;;&lt;/code&gt;. (A single &lt;code&gt;;&lt;/code&gt; is not used as it is the separator for multiple commands in a line that is passed to the Python parser.) No intelligence is applied to separating the commands; the input is split at the first &lt;code&gt;;;&lt;/code&gt; pair, even if it is in the middle of a quoted string.</source>
          <target state="translated">한 줄에 여러 명령을 입력 할 수 있으며 &lt;code&gt;;;&lt;/code&gt; . (단일 &lt;code&gt;;&lt;/code&gt; 은 파이썬 파서에 전달되는 행에서 여러 명령의 구분 기호로 사용되지 않습니다.) 명령을 분리하는 데 지능이 적용되지 않습니다. 입력이 처음에 분할됩니다. &lt;code&gt;;;&lt;/code&gt; 따옴표로 묶인 문자열의 중간에 있어도 쌍을 이룹니다.</target>
        </trans-unit>
        <trans-unit id="3d09adb7f1de6110bb767281eb6fabdd98f6a2d7" translate="yes" xml:space="preserve">
          <source>Multiple directives can be used on a single physical line, separated by commas:</source>
          <target state="translated">단일 지시문에 여러 지시문을 쉼표로 구분하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43f323662dad6544bb6a1fc9e74c9e4f71909ea4" translate="yes" xml:space="preserve">
          <source>Multiple nodes in &lt;code&gt;targets&lt;/code&gt; represents assigning the same value to each. Unpacking is represented by putting a &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; within &lt;code&gt;targets&lt;/code&gt;.</source>
          <target state="translated">Multiple nodes in &lt;code&gt;targets&lt;/code&gt; represents assigning the same value to each. Unpacking is represented by putting a &lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; within &lt;code&gt;targets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7299187e78acfeb10e1b49723ae100be4c64b0fe" translate="yes" xml:space="preserve">
          <source>Multiple notebooks in a single toplevel may be enabled for traversal, including nested notebooks. However, notebook traversal only works properly if all panes have the notebook they are in as master.</source>
          <target state="translated">중첩 된 전자 필기장을 포함하여 단일 최상위 수준의 여러 전자 필기장을 순회 할 수 있습니다. 그러나 모든 창에 마스터 노트북이있는 노트북이있는 경우에만 노트북 탐색이 제대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5162321020c32ce61d50bae28086dd890680e982" translate="yes" xml:space="preserve">
          <source>Multiple paths can be given to &lt;code&gt;venv&lt;/code&gt;, in which case an identical virtual environment will be created, according to the given options, at each provided path.</source>
          <target state="translated">&lt;code&gt;venv&lt;/code&gt; 에 여러 경로를 지정할 수 있으며 ,이 경우 제공된 옵션에 따라 제공된 각 경로에서 동일한 가상 환경이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4573ed2f0edb61983a51e72e312c05e99fea31c4" translate="yes" xml:space="preserve">
          <source>Multiple scripts demonstrating different features of the &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module. Examples can be accessed via the Examples menu. They can also be run standalone.</source>
          <target state="translated">&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt; 모듈 의 다른 기능을 보여주는 여러 스크립트 . 예제는 예제 메뉴를 통해 액세스 할 수 있습니다. 독립형으로 실행할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a66007c83d7e252602c3da75c4c341aa9e54c57e" translate="yes" xml:space="preserve">
          <source>Multiple type annotations are supported (&lt;code&gt;Annotated&lt;/code&gt; supports variadic arguments):</source>
          <target state="translated">Multiple type annotations are supported ( &lt;code&gt;Annotated&lt;/code&gt; supports variadic arguments):</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="7a49abf6458e7554b14dad6ea5826909852a08c1" translate="yes" xml:space="preserve">
          <source>Multithreaded version of &lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt;&lt;code&gt;interact()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt; &lt;code&gt;interact()&lt;/code&gt; &lt;/a&gt; 의 멀티 스레드 버전 .</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="cab30ed902fc7da4b75c082dca1f14cef46149ff" translate="yes" xml:space="preserve">
          <source>Multithreading note: When two threads call this function simultaneously, it is possible that they will receive the same return value. This can be avoided in three ways. 1) Have each thread use a different instance of the random number generator. 2) Put locks around all calls. 3) Use the slower, but thread-safe &lt;a href=&quot;#random.normalvariate&quot;&gt;&lt;code&gt;normalvariate()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">Multithreading note: When two threads call this function simultaneously, it is possible that they will receive the same return value. This can be avoided in three ways. 1) Have each thread use a different instance of the random number generator. 2) Put locks around all calls. 3) Use the slower, but thread-safe &lt;a href=&quot;#random.normalvariate&quot;&gt; &lt;code&gt;normalvariate()&lt;/code&gt; &lt;/a&gt; function instead.</target>
        </trans-unit>
        <trans-unit id="e84051d950065a19888b9a4b65dd834b3ca5708a" translate="yes" xml:space="preserve">
          <source>Must accept a request from the socket, and return a 2-tuple containing the &lt;em&gt;new&lt;/em&gt; socket object to be used to communicate with the client, and the client&amp;rsquo;s address.</source>
          <target state="translated">소켓의 요청을 수락 하고 클라이언트와 통신하는 데 사용할 &lt;em&gt;새&lt;/em&gt; 소켓 객체와 클라이언트 주소가 포함 된 2 개의 튜플을 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4747a0250917ddc1dc2a0d4fc6b92b4e01de5dd8" translate="yes" xml:space="preserve">
          <source>Must be called if the programmer wants to use colors, and before any other color manipulation routine is called. It is good practice to call this routine right after &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로그래머가 색상을 사용하려면 다른 색상 조작 루틴을 호출하기 전에 호출해야합니다. &lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; &lt;/a&gt; 바로 다음에이 루틴을 호출하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ff7e72021a763f0ee5ccf9301a43b444b5e95394" translate="yes" xml:space="preserve">
          <source>Must be one of: &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, or &lt;code&gt;&quot;word&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;none&quot;&lt;/code&gt; , &lt;code&gt;&quot;char&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;word&quot;&lt;/code&gt; 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="ebf1dc0566c10e0139b5df0505eb1e78b6fd3569" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">반복을 중지하려면 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;비동기 반복자&lt;/a&gt; 오브젝트 의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt; 메소드 로 제기해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bc41839a8b9fd667d2f66f5bddeaaf2f835151c4" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">Must be raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</target>
        </trans-unit>
        <trans-unit id="adf6c9fd4760a31bfbf5ba31fc932d1f5a3f031e" translate="yes" xml:space="preserve">
          <source>Must be zero.</source>
          <target state="translated">0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ae91554455709a10c47572fb3081826f1c8d9b10" translate="yes" xml:space="preserve">
          <source>Must return a Boolean value; if the value is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the request will be processed, and if it&amp;rsquo;s &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, the request will be denied. This function can be overridden to implement access controls for a server. The default implementation always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부울 값을 반환해야합니다. 값이 &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt; 인 경우 요청이 처리되고 &lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; 인 경우 요청이 거부됩니다. 서버에 대한 액세스 제어를 구현하기 위해이 기능을 재정의 할 수 있습니다. 기본 구현은 항상 &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a5c56949118e7bbfa4e5df14253fa9c206b4ced" translate="yes" xml:space="preserve">
          <source>Mutable Sequence Types</source>
          <target state="translated">가변 서열 유형</target>
        </trans-unit>
        <trans-unit id="59a777ead597ed74ce5de4536307c0d1ace10414" translate="yes" xml:space="preserve">
          <source>Mutable default values</source>
          <target state="translated">가변 기본값</target>
        </trans-unit>
        <trans-unit id="bd89464f515bc7c1945f885ef807721ee91c256b" translate="yes" xml:space="preserve">
          <source>Mutual exclusion</source>
          <target state="translated">상호 배제</target>
        </trans-unit>
        <trans-unit id="e48c93a9558b1df10e9386a808b36396efbdc949" translate="yes" xml:space="preserve">
          <source>Mutually exclusive options for whitespace control.</source>
          <target state="translated">Mutually exclusive options for whitespace control.</target>
        </trans-unit>
        <trans-unit id="f1dae7604a00897f0a4fd9c9086372f8cb686e88" translate="yes" xml:space="preserve">
          <source>MyStruct(4, 6)</source>
          <target state="translated">MyStruct (4, 6)</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="f3b6e147d97b483fedd25cc8dfa6e8453dae0246" translate="yes" xml:space="preserve">
          <source>NNTP (Net News Transport Protocol) client</source>
          <target state="translated">NNTP (Net News Transport Protocol) 클라이언트</target>
        </trans-unit>
        <trans-unit id="79c75ca6272ee59fef0850ac71420be0538f2b61" translate="yes" xml:space="preserve">
          <source>NNTP Objects</source>
          <target state="translated">NNTP 객체</target>
        </trans-unit>
        <trans-unit id="d1dc5a1761f453c4a0fd7017ba832bc17fd8ad13" translate="yes" xml:space="preserve">
          <source>NOOP</source>
          <target state="translated">NOOP</target>
        </trans-unit>
        <trans-unit id="36bdc187848ec66c05c294f3ec9cf824ecdaa127" translate="yes" xml:space="preserve">
          <source>NOTE: This function is part of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt; and works with strings. It does not check or access the underlying file structure.</source>
          <target state="translated">NOTE: This function is part of &lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; &lt;/a&gt; and works with strings. It does not check or access the underlying file structure.</target>
        </trans-unit>
        <trans-unit id="51374517cce15cf30e5fafe081ab605aef775d59" translate="yes" xml:space="preserve">
          <source>NTEventLogHandler</source>
          <target state="translated">NTEventLogHandler</target>
        </trans-unit>
        <trans-unit id="96cd9da0c6e1ccdfcc159d790597f9c5ab44b9f9" translate="yes" xml:space="preserve">
          <source>Naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances are assumed to represent local time and this method relies on the platform C &lt;code&gt;mktime()&lt;/code&gt; function to perform the conversion. Since &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; supports wider range of values than &lt;code&gt;mktime()&lt;/code&gt; on many platforms, this method may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; for times far in the past or far in the future.</source>
          <target state="translated">순진한 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 인스턴스는 현지 시간을 나타내는 것으로 가정 되며이 메서드는 플랫폼 C &lt;code&gt;mktime()&lt;/code&gt; 함수를 사용하여 변환을 수행합니다. 이후 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 보다 값 지원하는 넓은 범위 &lt;code&gt;mktime()&lt;/code&gt; 많은 플랫폼에서,이 방법은 제기 할 수 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 먼 과거 나 먼 미래 번.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="c27442e14dcf480c5096062467b3aa70532fef60" translate="yes" xml:space="preserve">
          <source>Name (string)</source>
          <target state="translated">이름 (문자열)</target>
        </trans-unit>
        <trans-unit id="f749babb57e6226126151fa3ff0dcb49a37a4566" translate="yes" xml:space="preserve">
          <source>Name and version of the thread library. It is a string, or &lt;code&gt;None&lt;/code&gt; if this information is unknown.</source>
          <target state="translated">스레드 라이브러리의 이름 및 버전 문자열 &lt;code&gt;None&lt;/code&gt; 정보를 알 수 없으면 None 입니다.</target>
        </trans-unit>
        <trans-unit id="bd0eba018b32a3fc8bf5757f41e9d39ed4d796bd" translate="yes" xml:space="preserve">
          <source>Name not unique on network</source>
          <target state="translated">네트워크에서 고유하지 않은 이름</target>
        </trans-unit>
        <trans-unit id="6b9e670759af04e3a29cb11b387ac0af4c4ba79a" translate="yes" xml:space="preserve">
          <source>Name of a file to accumulate counts over several tracing runs. Should be used with the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">누적 할 파일 이름은 여러 추적 실행에서 계산됩니다. &lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt; 옵션 과 함께 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f41d04af7c00689d29db73e5e39ccec3d7f4baa" translate="yes" xml:space="preserve">
          <source>Name of a file where the output should be written.</source>
          <target state="translated">출력을 작성해야하는 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="909d50c1d59e7f6872cd42d8d690e7a67cfddf5e" translate="yes" xml:space="preserve">
          <source>Name of function containing the logging call.</source>
          <target state="translated">로깅 호출을 포함하는 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a4e437038133290bc84db0a7901dbdac884887ac" translate="yes" xml:space="preserve">
          <source>Name of the &lt;code&gt;ndbm&lt;/code&gt; implementation library used.</source>
          <target state="translated">사용 된 &lt;code&gt;ndbm&lt;/code&gt; 구현 라이브러리의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b82dd6dc18736a73581a12357aabc36155aa0044" translate="yes" xml:space="preserve">
          <source>Name of the ZIP file.</source>
          <target state="translated">ZIP 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7bd737364faf0eec56bb0fc421ccc3c610d6ed65" translate="yes" xml:space="preserve">
          <source>Name of the archive member.</source>
          <target state="translated">아카이브 멤버의 이름</target>
        </trans-unit>
        <trans-unit id="2c902fcfc808584d112a3ceeb4eb2bc1f3619bea" translate="yes" xml:space="preserve">
          <source>Name of the file in the archive.</source>
          <target state="translated">아카이브에있는 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3f4f64a593b458f13706273b6df06d01e90dabff" translate="yes" xml:space="preserve">
          <source>Name of the file in which the class is defined.</source>
          <target state="translated">클래스가 정의 된 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="52c4cd4fff87ccdc917ab79849a30f112d326420" translate="yes" xml:space="preserve">
          <source>Name of the file in which the function is defined.</source>
          <target state="translated">함수가 정의 된 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="479b58a3698cd8bdd2749e826438a6efb9a37443" translate="yes" xml:space="preserve">
          <source>Name of the kernel filter.</source>
          <target state="translated">커널 필터의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="557389192cfcd5c2bf918ddbf712bd3b1d343b90" translate="yes" xml:space="preserve">
          <source>Name of the lock implementation:</source>
          <target state="translated">잠금 구현 이름 :</target>
        </trans-unit>
        <trans-unit id="e5bcc652602bbe94f6a9ebcc11b4cb38e6c0ea60" translate="yes" xml:space="preserve">
          <source>Name of the logger used to log the call.</source>
          <target state="translated">통화를 기록하는 데 사용되는 로거의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1ac5bb9ec4a87c7e2e4d424b152dffc6dceb92f8" translate="yes" xml:space="preserve">
          <source>Name of the module the loader supports.</source>
          <target state="translated">로더가 지원하는 모듈의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="88649ef30eca2eef544db1a703bfa26a7680062b" translate="yes" xml:space="preserve">
          <source>Name of the place from which the module is loaded, e.g. &amp;ldquo;builtin&amp;rdquo; for built-in modules and the filename for modules loaded from source. Normally &amp;ldquo;origin&amp;rdquo; should be set, but it may be &lt;code&gt;None&lt;/code&gt; (the default) which indicates it is unspecified (e.g. for namespace packages).</source>
          <target state="translated">내장 모듈의 경우 &quot;내장&quot;및 소스에서로드 한 모듈의 파일 이름과 같이 모듈이로드 된 장소의 이름입니다. 일반적으로 &quot;원점&quot;을 설정해야하지만 지정되지 않음을 나타내는 &lt;code&gt;None&lt;/code&gt; (기본값) 일 수 있습니다 (예 : 네임 스페이스 패키지).</target>
        </trans-unit>
        <trans-unit id="e3bd6f6c479eab3e41e2c002fa4ce6ad97ac5a4a" translate="yes" xml:space="preserve">
          <source>Name of the platform-specific library directory. It is used to build the path of standard library and the paths of installed extension modules.</source>
          <target state="translated">Name of the platform-specific library directory. It is used to build the path of standard library and the paths of installed extension modules.</target>
        </trans-unit>
        <trans-unit id="3add1cd07c9747dd5701cddb479a22e098f8ef27" translate="yes" xml:space="preserve">
          <source>Name of the target file name, which is only present in &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects of type &lt;code&gt;LNKTYPE&lt;/code&gt; and &lt;code&gt;SYMTYPE&lt;/code&gt;.</source>
          <target state="translated">만 존재하는 대상 파일 이름, 이름 &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; 은&lt;/a&gt; 타입의 객체 &lt;code&gt;LNKTYPE&lt;/code&gt; 및 &lt;code&gt;SYMTYPE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c8a8acd0a715e63879cf8add7d8952be75bc26b" translate="yes" xml:space="preserve">
          <source>Name of the thread implementation:</source>
          <target state="translated">스레드 구현 이름 :</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="9aded8be679f83c11f74ee1bff7f85682a20e807" translate="yes" xml:space="preserve">
          <source>Named groups can also be referred to by their index:</source>
          <target state="translated">명명 된 그룹은 색인으로도 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c28e1ee5f518cf29efb67d882148a0b1e5416250" translate="yes" xml:space="preserve">
          <source>Named groups can be referenced in three contexts. If the pattern is &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; (i.e. matching a string quoted with either single or double quotes):</source>
          <target state="translated">명명 된 그룹은 세 가지 컨텍스트에서 참조 할 수 있습니다. 패턴이 &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; (즉, 작은 따옴표 나 큰 따옴표로 인용 된 문자열과 일치) :</target>
        </trans-unit>
        <trans-unit id="f16a4120b764cba8959d773cf7f3b0e19c88a175" translate="yes" xml:space="preserve">
          <source>Named tuple instances do not have per-instance dictionaries, so they are lightweight and require no more memory than regular tuples.</source>
          <target state="translated">명명 된 튜플 인스턴스에는 인스턴스 별 사전이 없으므로 가벼우 며 일반 튜플보다 더 많은 메모리가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f512fe216c8d2627c3f288b9c1b60f1f0813d360" translate="yes" xml:space="preserve">
          <source>Named tuples are especially useful for assigning field names to result tuples returned by the &lt;a href=&quot;csv#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; modules:</source>
          <target state="translated">명명 된 튜플은 &lt;a href=&quot;csv#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt; 모듈 에서 반환 된 결과 튜플에 필드 이름을 할당하는 데 특히 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="d560ba60fd40808c605c894ca61edab52b60a8f7" translate="yes" xml:space="preserve">
          <source>Named tuples assign meaning to each position in a tuple and allow for more readable, self-documenting code. They can be used wherever regular tuples are used, and they add the ability to access fields by name instead of position index.</source>
          <target state="translated">명명 된 튜플은 튜플의 각 위치에 의미를 할당하고 더 읽기 쉬운 자체 문서화 코드를 허용합니다. 정규 튜플이 사용되는 곳이라면 어디에서나 사용할 수 있으며 위치 색인 대신 이름으로 필드에 액세스하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="138d23bf87d91f2cf8e499a38b28a27198431782" translate="yes" xml:space="preserve">
          <source>NamedNodeMap Objects</source>
          <target state="translated">명명 된 NodeMap 객체</target>
        </trans-unit>
        <trans-unit id="79151ef5523cbb3688933e1d2359c827b97b6dba" translate="yes" xml:space="preserve">
          <source>Names in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, such that the type differs between the directories, or names for which &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; reports an error.</source>
          <target state="translated">모두 이름 과 &lt;em&gt;B&lt;/em&gt; 유형 디렉토리 다르기 또는 이름이있는되도록, &lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt; 에러를보고한다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a0bec580c91a0db0dd9741e0f59ccc6c55e7006" translate="yes" xml:space="preserve">
          <source>Namespace-aware variant of &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, which will be passed to &lt;code&gt;startElementNS()&lt;/code&gt;. It is derived from &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, but understands attribute names as two-tuples of &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localname&lt;/em&gt;. In addition, it provides a number of methods expecting qualified names as they appear in the original document. This class implements the &lt;code&gt;AttributesNS&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-ns-objects&quot;&gt;The AttributesNS Interface&lt;/a&gt;).</source>
          <target state="translated">네임 스페이스를 인식하는 &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt; 변형 으로 &lt;code&gt;startElementNS()&lt;/code&gt; 로 전달됩니다 . 이 &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt; 은 AttributesImpl 에서 파생 되지만 &lt;em&gt;네임 스페이스 URI&lt;/em&gt; 및 &lt;em&gt;localname&lt;/em&gt; 의 두 튜플로 속성 이름을 이해합니다 . 또한 원본 문서에 나타나는 정규화 된 이름을 기대하는 여러 가지 방법을 제공합니다. 이 클래스의 구현 &lt;code&gt;AttributesNS&lt;/code&gt; 의 인터페이스 (섹션 참조 &lt;a href=&quot;#attributes-ns-objects&quot;&gt;AttributesNS 인터페이스&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3fac676b9daa5e7147af0e960a2d8869c1122f19" translate="yes" xml:space="preserve">
          <source>Naming your mocks</source>
          <target state="translated">모의 이름 지정</target>
        </trans-unit>
        <trans-unit id="388dc744456493550fdfa18219ddbd88540e38ab" translate="yes" xml:space="preserve">
          <source>Native Load/Save Dialogs</source>
          <target state="translated">Native Load/Save Dialogs</target>
        </trans-unit>
        <trans-unit id="3e8980fc43ff1044a18189e78dedc1df9a62b49e" translate="yes" xml:space="preserve">
          <source>Native byte order is big-endian or little-endian, depending on the host system. For example, Intel x86 and AMD64 (x86-64) are little-endian; Motorola 68000 and PowerPC G5 are big-endian; ARM and Intel Itanium feature switchable endianness (bi-endian). Use &lt;code&gt;sys.byteorder&lt;/code&gt; to check the endianness of your system.</source>
          <target state="translated">기본 바이트 순서는 호스트 시스템에 따라 빅 엔디안 또는 리틀 엔디안입니다. 예를 들어, Intel x86 및 AMD64 (x86-64)는 리틀 엔디안입니다. Motorola 68000과 PowerPC G5는 빅 엔디안입니다. ARM 및 Intel Itanium에는 전환 가능한 엔디안 (bi- 엔디안) 기능이 있습니다. &lt;code&gt;sys.byteorder&lt;/code&gt; 를 사용 하여 시스템의 엔디안을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="48f10fdc477f6339c64bce4467bf56cec228d333" translate="yes" xml:space="preserve">
          <source>Native size and alignment are determined using the C compiler&amp;rsquo;s &lt;code&gt;sizeof&lt;/code&gt; expression. This is always combined with native byte order.</source>
          <target state="translated">기본 크기와 정렬은 C 컴파일러의 &lt;code&gt;sizeof&lt;/code&gt; 표현식을 사용하여 결정됩니다 . 이것은 항상 기본 바이트 순서와 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="517a1d8d49b78127b5bb2acf6015f7707345aa2e" translate="yes" xml:space="preserve">
          <source>Navigating inside a directory tree:</source>
          <target state="translated">디렉토리 트리 내에서 탐색 :</target>
        </trans-unit>
        <trans-unit id="987fc48a30ea30d92d41a6019a3ed94eb415d66d" translate="yes" xml:space="preserve">
          <source>Negation (Arithmetic)</source>
          <target state="translated">부정 (산술)</target>
        </trans-unit>
        <trans-unit id="627e9d13ddc6c294f7ec2e115eee5c51e4b0a37a" translate="yes" xml:space="preserve">
          <source>Negation (Logical)</source>
          <target state="translated">부정 (논리)</target>
        </trans-unit>
        <trans-unit id="b55a8cef5977e78a89ae2e69772eef902ec4a5a5" translate="yes" xml:space="preserve">
          <source>Negative acknowledgement</source>
          <target state="translated">부정적 인정</target>
        </trans-unit>
        <trans-unit id="34c7643d5f745ab08c69c16dd12140498edf58a7" translate="yes" xml:space="preserve">
          <source>Negative shift counts are illegal and cause a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">음수 이동 횟수가 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cca6e5f1a6c7a865ba230eeff90e2702a0fd7fe3" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;Annotated&lt;/code&gt; types are flattened, with metadata ordered starting with the innermost annotation:</source>
          <target state="translated">Nested &lt;code&gt;Annotated&lt;/code&gt; types are flattened, with metadata ordered starting with the innermost annotation:</target>
        </trans-unit>
        <trans-unit id="32487c26ecab149a196fce5321757c6b3bf4b876" translate="yes" xml:space="preserve">
          <source>Nested structures can also be initialized in the constructor in several ways:</source>
          <target state="translated">중첩 구조는 생성자에서 여러 가지 방법으로 초기화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b24ed9821e96a2648c5646b75130ceb97178a4c" translate="yes" xml:space="preserve">
          <source>Nesting Patch Decorators</source>
          <target state="translated">중첩 패치 데코레이터</target>
        </trans-unit>
        <trans-unit id="ea31f50cab713b0f124052f1b7a16defcb810ab2" translate="yes" xml:space="preserve">
          <source>Nesting Patches</source>
          <target state="translated">중첩 패치</target>
        </trans-unit>
        <trans-unit id="48f4eff85da085dead78d399f32b4afe378e5d2d" translate="yes" xml:space="preserve">
          <source>Nesting arguments and more complex examples:</source>
          <target state="translated">중첩 인수 및보다 복잡한 예 :</target>
        </trans-unit>
        <trans-unit id="387c36a7e2c55b1e37b061b1ad887cc307968414" translate="yes" xml:space="preserve">
          <source>Netscape protocol strictness switches:</source>
          <target state="translated">넷스케이프 프로토콜 엄격 스위치 :</target>
        </trans-unit>
        <trans-unit id="8baad1cbc284c12f56ea33b670eb34325f6b8199" translate="yes" xml:space="preserve">
          <source>Network IO</source>
          <target state="translated">네트워크 IO</target>
        </trans-unit>
        <trans-unit id="82a92bfa4dd74a7c277b6e280e7993e24e6bd37b" translate="yes" xml:space="preserve">
          <source>Network dropped connection because of reset</source>
          <target state="translated">재설정으로 인해 네트워크 연결이 끊어졌습니다.</target>
        </trans-unit>
        <trans-unit id="ea849e260b8735345217e4f53f113c9fcde5b394" translate="yes" xml:space="preserve">
          <source>Network is down</source>
          <target state="translated">네트워크가 다운되었습니다</target>
        </trans-unit>
        <trans-unit id="d34a1412dd6535ceabe7960d72728113a96b875c" translate="yes" xml:space="preserve">
          <source>Network is unreachable</source>
          <target state="translated">네트워크에 연결할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="f1187f91a6b9526e3ad1f52e3394c4d7df1155f3" translate="yes" xml:space="preserve">
          <source>Network location part</source>
          <target state="translated">네트워크 위치 부분</target>
        </trans-unit>
        <trans-unit id="a94bfe6962e04d8964bb10b7ee9c6ed49863a34f" translate="yes" xml:space="preserve">
          <source>Network objects</source>
          <target state="translated">네트워크 객체</target>
        </trans-unit>
        <trans-unit id="d002009562d56b5b62febaf56a1d9b00d7976530" translate="yes" xml:space="preserve">
          <source>Network objects can act as containers of addresses. Some examples:</source>
          <target state="translated">네트워크 개체는 주소 컨테이너 역할을 할 수 있습니다. 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="20fcf7eba0d4de1e05964bd5839c098f8acebea8" translate="yes" xml:space="preserve">
          <source>Network objects can be compared with the usual set of logical operators. Network objects are ordered first by network address, then by net mask.</source>
          <target state="translated">네트워크 개체는 일반적인 논리 연산자 집합과 비교할 수 있습니다. 네트워크 객체는 먼저 네트워크 주소로 정렬 된 다음 네트 마스크로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb3a6d9875537b1c0c38a2431cc632cb829f8a7" translate="yes" xml:space="preserve">
          <source>Network objects can be iterated to list all the addresses belonging to the network. For iteration, &lt;em&gt;all&lt;/em&gt; hosts are returned, including unusable hosts (for usable hosts, use the &lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt;&lt;code&gt;hosts()&lt;/code&gt;&lt;/a&gt; method). An example:</source>
          <target state="translated">네트워크에 속하는 모든 주소를 나열하기 위해 네트워크 개체를 반복 할 수 있습니다. 반복의 경우, 사용 불가능한 호스트를 포함하여 &lt;em&gt;모든&lt;/em&gt; 호스트가 리턴됩니다 (사용 가능한 호스트의 경우 &lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt; &lt;code&gt;hosts()&lt;/code&gt; &lt;/a&gt; 메소드 사용). 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1c620c8b990249735711860cb7b51cafd949fab4" translate="yes" xml:space="preserve">
          <source>Network objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">네트워크 객체는 일부 연산자를 지원합니다. 달리 명시하지 않는 한, 연산자는 호환 가능한 개체 (예 : IPv4를 사용하는 IPv4, IPv6을 사용하는 IPv6) 사이에만 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94d3480ab302bd240a4a2e92c94a41facba908a0" translate="yes" xml:space="preserve">
          <source>Networking &amp;amp; Interprocess Communication</source>
          <target state="translated">네트워킹 및 프로세스 간 통신</target>
        </trans-unit>
        <trans-unit id="173aff8fcb77fae19c3b7a5cfe41672fc9b21ae0" translate="yes" xml:space="preserve">
          <source>Networking and IPC</source>
          <target state="translated">네트워킹 및 IPC</target>
        </trans-unit>
        <trans-unit id="7696b1c0a533c955797df8c40d2eb34ddf93894d" translate="yes" xml:space="preserve">
          <source>Networking and Interprocess Communication</source>
          <target state="translated">네트워킹 및 프로세스 간 통신</target>
        </trans-unit>
        <trans-unit id="4136d3e620eed1009afaac5766d22a562ea45d95" translate="yes" xml:space="preserve">
          <source>Networks as containers of addresses</source>
          <target state="translated">주소 컨테이너로서의 네트워크</target>
        </trans-unit>
        <trans-unit id="1b2021fe3ae1d663f2ee43b16a7c7f0fc183cecc" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;.</source>
          <target state="translated">사전 검사없이 신뢰할 수없는 출처에서 아카이브를 추출하지 마십시오. &lt;code&gt;&quot;/&quot;&lt;/code&gt; 로 시작하는 절대 파일 이름을 가진 멤버 또는 두 개의 점 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 을 가진 파일 이름을 가진 멤버 와 같이 파일은 &lt;em&gt;경로&lt;/em&gt; 외부에서 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c62e809819381e83090bced1e2173f918be1f3b0" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;. This module attempts to prevent that. See &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; note.</source>
          <target state="translated">사전 검사없이 신뢰할 수없는 출처에서 아카이브를 추출하지 마십시오. &lt;code&gt;&quot;/&quot;&lt;/code&gt; 로 시작하는 절대 파일 이름을 가진 멤버 또는 두 개의 점 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 을 가진 파일 이름을 가진 멤버 와 같이 파일은 &lt;em&gt;경로&lt;/em&gt; 외부에서 생성 될 수 있습니다 . 이 모듈은이를 방지하려고 시도합니다. &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt; 참고를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="ccaf85ee75327fc748e39faca2166199011de41a" translate="yes" xml:space="preserve">
          <source>New File</source>
          <target state="translated">새로운 파일</target>
        </trans-unit>
        <trans-unit id="409292424eb18087ed2f720f75aa3dc7008467fa" translate="yes" xml:space="preserve">
          <source>New Import Hooks</source>
          <target state="translated">새로운 수입 훅</target>
        </trans-unit>
        <trans-unit id="f67997d268c1af98301a345d50239d3f892a0eb7" translate="yes" xml:space="preserve">
          <source>New Indent Width</source>
          <target state="translated">새로운 들여 쓰기 너비</target>
        </trans-unit>
        <trans-unit id="12a8cecf358397da137dcdd0fe30e38555ec9cfd" translate="yes" xml:space="preserve">
          <source>New contexts can also be created using the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor described below. In addition, the module provides three pre-made contexts:</source>
          <target state="translated">아래에 설명 된 &lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 컨텍스트를 만들 수도 있습니다 . 또한이 모듈은 사전 작성된 세 가지 컨텍스트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7a1d94154a6598cae8341b022c23e40f99e28431" translate="yes" xml:space="preserve">
          <source>New hash objects are created by calling constructor functions:</source>
          <target state="translated">생성자 함수를 호출하여 새 해시 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f0e3ef54012ca2003232ea452f70d451c14796eb" translate="yes" xml:space="preserve">
          <source>New in</source>
          <target state="translated">새로운 기능</target>
        </trans-unit>
        <trans-unit id="3044731cb14928152cff1cf7dc1f4fa6c076e116" translate="yes" xml:space="preserve">
          <source>New in version 3.1.</source>
          <target state="translated">버전 3.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="3490f0090dbcdc45af81e4d62ca30e6b962ba596" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRaisesRegexp&lt;/code&gt;.</source>
          <target state="translated">버전 3.1의 새로운 기능 : &lt;code&gt;assertRaisesRegexp&lt;/code&gt; 라는 이름으로 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5aaafe02546b7ea7e8be1083e6726b39beceb3be" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRegexpMatches&lt;/code&gt;.</source>
          <target state="translated">버전 3.1의 새로운 기능 : &lt;code&gt;assertRegexpMatches&lt;/code&gt; 라는 이름으로 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0cdd0395e78a0dc6664ff5b4d4ec37a63a481081" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;'surrogateescape'&lt;/code&gt; and &lt;code&gt;'surrogatepass'&lt;/code&gt; error handlers.</source>
          <target state="translated">버전 3.1의 새로운 기능 : &lt;code&gt;'surrogateescape'&lt;/code&gt; 및 &lt;code&gt;'surrogatepass'&lt;/code&gt; 오류 처리기.</target>
        </trans-unit>
        <trans-unit id="32c6d6c31b4876c85b341703ff1176d48fc1033d" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;SEEK_*&lt;/code&gt; constants.</source>
          <target state="translated">버전 3.1의 새로운 기능 : &lt;code&gt;SEEK_*&lt;/code&gt; 상수.</target>
        </trans-unit>
        <trans-unit id="ff81f06c49fb2cc34747b6d94a1ad63a6cf4f4f3" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;em&gt;skip&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.1의 새로운 기능 : &lt;em&gt;skip&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="aec3464ceeab8cf46a16efea3d5d6d17ad876e19" translate="yes" xml:space="preserve">
          <source>New in version 3.2.</source>
          <target state="translated">버전 3.2의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="db31bd421783154e9fc48afcb4954a828a5d37e2" translate="yes" xml:space="preserve">
          <source>New in version 3.2.3: The &lt;code&gt;hash_randomization&lt;/code&gt; attribute.</source>
          <target state="translated">버전 3.2.3의 새로운 기능 : &lt;code&gt;hash_randomization&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="c0dcdf7c449d4eea6b69af79b67c72ca17c53ff2" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.fromstring&quot;&gt;&lt;code&gt;fromstring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">3.2 버전의 새로운 기능 : &lt;a href=&quot;#array.array.fromstring&quot;&gt; &lt;code&gt;fromstring()&lt;/code&gt; &lt;/a&gt; 로 이름이 바뀌 &lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt; 명확합니다.</target>
        </trans-unit>
        <trans-unit id="488e827468c8402f0be6892563ca51a7f7278aa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.tostring&quot;&gt;&lt;code&gt;tostring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 명확성을 위해 &lt;a href=&quot;#array.array.tostring&quot;&gt; &lt;code&gt;tostring()&lt;/code&gt; &lt;/a&gt; 이름이 &lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt; 로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="65be5f1abc346b5a084ab6611d2dcd14b97b4c5c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt;&lt;code&gt;assertNotRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt; &lt;code&gt;assertNotRegex()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9df3735582c48b073e7a16fa82ca6c9e225bf665" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;fromstring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">New in version 3.2: &lt;code&gt;fromstring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt; for clarity.</target>
        </trans-unit>
        <trans-unit id="8b17191ede606c26b4c8116dfbc25448c9f8f280" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;pdb.py&lt;/code&gt; now accepts a &lt;code&gt;-c&lt;/code&gt; option that executes commands as if given in a &lt;code&gt;.pdbrc&lt;/code&gt; file, see &lt;a href=&quot;#debugger-commands&quot;&gt;Debugger Commands&lt;/a&gt;.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;code&gt;pdb.py&lt;/code&gt; 는 이제 &lt;code&gt;.pdbrc&lt;/code&gt; 파일에 지정된 것처럼 명령을 실행 하는 &lt;code&gt;-c&lt;/code&gt; 옵션을 허용합니다 ( &lt;a href=&quot;#debugger-commands&quot;&gt;디버거 명령&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="95685927977b9dcf02e0264bd2425c95cb43cd4d" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;tostring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">New in version 3.2: &lt;code&gt;tostring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt; for clarity.</target>
        </trans-unit>
        <trans-unit id="fc5a5d84b89ad5a4ba8ce3020321268ef0fa4d48" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;body&lt;/em&gt; can now be an iterable.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;body&lt;/em&gt; 는 이제 반복 가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a92a77a7766db733546c9b77cd133915e1079c0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;data&lt;/em&gt; can be an iterable object.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;데이터&lt;/em&gt; 는 반복 가능한 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="492fab092548a082cfe9773b6e25423f9e425e63" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;maxtasksperchild&lt;/em&gt;</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;maxtasksperchild&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9af04aa0a51b0152280c245269d849a5d155aaa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added support for the context management protocol.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 컨텍스트 관리 프로토콜에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c7e70655ae33c518c88446ef6624470fc4ce9d29" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added the ability to use &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; as a context manager.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt; 을 컨텍스트 관리자로 사용하는 기능이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d09766d62b8d99b219d60b276118965866ee5426" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Automatic addition of the &lt;code&gt;__wrapped__&lt;/code&gt; attribute.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;code&gt;__wrapped__&lt;/code&gt; 속성 자동 추가 .</target>
        </trans-unit>
        <trans-unit id="6a2cb5a7143cca2378773c116c1731a3835404ed" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Context manager support.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 컨텍스트 관리자 지원.</target>
        </trans-unit>
        <trans-unit id="e4691f22ec6af8115c8ef643b32bf896e13020ae" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Copying of the &lt;code&gt;__annotations__&lt;/code&gt; attribute by default.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 기본적으로 &lt;code&gt;__annotations__&lt;/code&gt; 속성 복사</target>
        </trans-unit>
        <trans-unit id="d43b8283dd2a98a7af1fa11e7c76adbd21232c7c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 선택적 &lt;code&gt;source&lt;/code&gt; 및 &lt;code&gt;lineno&lt;/code&gt; 속성과 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 인수 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="00f6a39f554667e5933437ffc7d786f06f42d1ca" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; were added.</target>
        </trans-unit>
        <trans-unit id="fafccb4e9a5405ae3b834787685cd7c2b125b7e3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Replaces &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt; 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="28b0f51bd56d33241ea9b5ddcc94c77be36c2020" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the &lt;code&gt;rot_13&lt;/code&gt; text transform.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;code&gt;rot_13&lt;/code&gt; 텍스트 변환의 복원 .</target>
        </trans-unit>
        <trans-unit id="970ab611ee1b762f1709817732af44838b6f66a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the binary transforms.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 이진 변환의 복원.</target>
        </trans-unit>
        <trans-unit id="9dcceb3168131b28f25a8473e7a17f54fc795c88" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; marker.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 마커.</target>
        </trans-unit>
        <trans-unit id="b402819ef1b2aed8bcd076ddf219c4cc93fd00a5" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;annotate&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;주석&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="e55bd4f980e8fc073a71ff35dfc24e9dd75e20d9" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;autojunk&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;autojunk&lt;/em&gt; 매개 변수.</target>
        </trans-unit>
        <trans-unit id="2de34420d3f8e77e82c57b967288676e7b162df3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;bjunk&lt;/em&gt; and &lt;em&gt;bpopular&lt;/em&gt; attributes.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;bjunk&lt;/em&gt; 및 &lt;em&gt;bpopular&lt;/em&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="07dfce94408fc7eb43edf07bf810590d083842d0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;encoding&lt;/em&gt; parameter. Previously, all files were read using the default encoding for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;인코딩&lt;/em&gt; 매개 변수. 이전에는 모든 파일을 &lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt; 의 기본 인코딩을 사용하여 읽었습니다 .</target>
        </trans-unit>
        <trans-unit id="e00307d0d1ac1787c787512ca063499efdae81fb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;exist_ok&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;exist_ok&lt;/em&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="5eff261c50725aaf56234c60b7ad321e0b6d7a28" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;nosigint&lt;/em&gt; argument. Previously, a SIGINT handler was never set by Pdb.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;nosigint&lt;/em&gt; 인수. 이전에는 PDB에서 SIGINT 핸들러를 설정하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d9d3ff17279278f1fbe533d1cb8d4a4e101a51cb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;최적화&lt;/em&gt; 매개 변수.</target>
        </trans-unit>
        <trans-unit id="e360c3f1e3102b0b5025a254db53852cc697487a" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;short_empty_elements&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.2의 새로운 기능 : &lt;em&gt;short_empty_elements&lt;/em&gt; 매개 변수.</target>
        </trans-unit>
        <trans-unit id="0d065c9ae385620cf6d16a31d56d0cbb370df8a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The command-line options &lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; were added.</source>
          <target state="translated">버전 3.2의 새로운 기능 : 명령 행 옵션 &lt;code&gt;-b&lt;/code&gt; , &lt;code&gt;-c&lt;/code&gt; 및 &lt;code&gt;-f&lt;/code&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a75b199eafd71fb28b679c45575e353e48ba2b36" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This class was previously named &lt;code&gt;_TextTestResult&lt;/code&gt;. The old name still exists as an alias but is deprecated.</source>
          <target state="translated">버전 3.2의 새로운 기능 :이 클래스의 이름은 이전에 &lt;code&gt;_TextTestResult&lt;/code&gt; 입니다. 이전 이름은 여전히 ​​별칭으로 존재하지만 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82b107c9c10c5a55aee4a0e3debb2416f6131861" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt;&lt;code&gt;getLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">버전 3.2의 새로운 기능 :이 함수는 &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt; &lt;code&gt;getLogRecordFactory()&lt;/code&gt; &lt;/a&gt; 와 함께 제공되어 개발자 가 로깅 이벤트를 나타내는 &lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 를 구성하는 방법을보다 잘 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="196f39022abdb30b19d21c28520cda8cdeace93c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt;&lt;code&gt;setLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">버전 3.2의 새로운 기능 :이 함수는 &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt; &lt;code&gt;setLogRecordFactory()&lt;/code&gt; &lt;/a&gt; 와 함께 제공되어 개발자 가 로깅 이벤트를 나타내는 &lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 를 구성하는 방법을보다 잘 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5feff224bf3a58e8d61eacdd8a8522e0dbed87b0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function was first removed in Python 3.0 and then brought back in Python 3.2.</source>
          <target state="translated">버전 3.2의 새로운 기능 :이 함수는 Python 3.0에서 처음 제거 된 다음 Python 3.2에서 다시 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="da106e3ee3289214b471fcbb56de045708a54150" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Windows support.</source>
          <target state="translated">버전 3.2의 새로운 기능 : Windows 지원.</target>
        </trans-unit>
        <trans-unit id="e656aeccfdd3bd906cae00fa7c0478f89eb5d3a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3.</source>
          <target state="translated">버전 3.3의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="f3e98ffdcb282b0853dcb031735ce601012ab4f1" translate="yes" xml:space="preserve">
          <source>New in version 3.3: &lt;code&gt;clear()&lt;/code&gt; and &lt;code&gt;copy()&lt;/code&gt; methods.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;code&gt;clear()&lt;/code&gt; 및 &lt;code&gt;copy()&lt;/code&gt; 메서드</target>
        </trans-unit>
        <trans-unit id="c5e4a238bfa33077d729fa48ecf1b789826f4102" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as a file descriptor on some platforms.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 일부 플랫폼에서 &lt;em&gt;경로&lt;/em&gt; 를 파일 설명 자로 지정하는 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="16af71ee4e36ec0cae6b181b694b7f51956f7a0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor for &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt; 의 열린 파일 디스크립터로 &lt;em&gt;경로&lt;/em&gt; 를 지정하는 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="038d2a2d4a390798684aa8f618e2a86258a63438" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 열린 파일 디스크립터로 &lt;em&gt;경로&lt;/em&gt; 를 지정 하고 &lt;em&gt;dir_fd&lt;/em&gt; 및 &lt;em&gt;follow_symlinks&lt;/em&gt; 인수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c61f8f029e31102256de167c06ecfbdb5b027ab4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt;, &lt;em&gt;follow_symlinks&lt;/em&gt;, and &lt;em&gt;ns&lt;/em&gt; parameters.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 열린 파일 디스크립터로 &lt;em&gt;path&lt;/em&gt; 및 &lt;em&gt;dir_fd&lt;/em&gt; , &lt;em&gt;follow_symlinks&lt;/em&gt; 및 &lt;em&gt;ns&lt;/em&gt; 매개 변수 를 지정하는 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c25592d4be380fcbfc21e2a7e95a3669a8c8becd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 열린 파일 설명 자로 &lt;em&gt;경로&lt;/em&gt; 를 지정하기위한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="76739bbab39d5c2710046bf45eec1397909326fd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for unary plus, unary minus, and in-place multiset operations.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 단항 더하기, 단항 빼기 및 전체 다중 세트 작업에 대한 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="046d02c5d1094d36422bcd5465bc69373e23f681" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt;&lt;code&gt;st_atime_ns&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt;&lt;code&gt;st_mtime_ns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt;&lt;code&gt;st_ctime_ns&lt;/code&gt;&lt;/a&gt; members.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt; &lt;code&gt;st_atime_ns&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt; &lt;code&gt;st_mtime_ns&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt; &lt;code&gt;st_ctime_ns&lt;/code&gt; &lt;/a&gt; 멤버가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7a588e30cae71f1b15d920765c3d80c0bf7800b8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments, specifying a file descriptor instead of a path.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 경로 대신 파일 설명자를 지정 하여 &lt;em&gt;dir_fd&lt;/em&gt; 및 &lt;em&gt;follow_symlinks&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="216100c31adc18c23bb9e9b560bc677eca6633bd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; argument, and now allow &lt;em&gt;target_is_directory&lt;/em&gt; on non-Windows platforms.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;dir_fd&lt;/em&gt; 인수가 추가 되었으며 이제 Windows 이외의 플랫폼에서 &lt;em&gt;target_is_directory&lt;/em&gt; 를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="cb1fa9f44f4b3e986271d3360090ef64263dfa98" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;src_dir_fd&lt;/em&gt;, &lt;em&gt;dst_dir_fd&lt;/em&gt;, and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;src_dir_fd&lt;/em&gt; , &lt;em&gt;dst_dir_fd&lt;/em&gt; 및 &lt;em&gt;follow_symlinks&lt;/em&gt; 인수가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="690563f7aa9f77702829a99858275338d41ffc11" translate="yes" xml:space="preserve">
          <source>New in version 3.3: All the above &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; subclasses were added.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 위의 모든 &lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 서브 클래스가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d7c35a84efd3292c4e322bb6cd08bf0c445e5d0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Connection objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the connection object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 연결 객체는 이제 컨텍스트 관리 프로토콜을 지원합니다 (컨텍스트 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;관리자 유형&lt;/a&gt; 참조) . &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 는 연결 객체를 반환하고 &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="43b79ec2cfdf493c4c7ba024e42791b064af21b0" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Formerly, this module was part of the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 이전에는이 ​​모듈이 &lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt; 모듈의 일부였습니다 .</target>
        </trans-unit>
        <trans-unit id="7ebcbd28e34b67cd966b999669d0242ada456632" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Listener objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the listener object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 리스너 객체는 이제 컨텍스트 관리 프로토콜을 지원합니다 (컨텍스트 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;관리자 유형&lt;/a&gt; 참조) . &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 는 리스너 객체를 반환하고 &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="70103fb68f7f0cfa32aba69ba39031a736a2d76b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Pool objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the pool object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 풀 객체는 이제 컨텍스트 관리 프로토콜을 지원합니다 (컨텍스트 &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;관리자 유형&lt;/a&gt; 참조) . &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 는 풀 객체를 반환하고 &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="0564ad09da5d11fa74ab8521856c7a0ee08a4a38" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 일부 운영 체제는 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; 또는 &lt;code&gt;os.SEEK_DATA&lt;/code&gt; 와 같은 추가 값을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28848c417a2cec6f368a3d64351da7441b8eda2f" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;. The valid values for a file could depend on it being open in text or binary mode.</source>
          <target state="translated">버전 3.3의 새로운 기능 : 일부 운영 체제는 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; 또는 &lt;code&gt;os.SEEK_DATA&lt;/code&gt; 와 같은 추가 값을 지원할 수 있습니다. 파일의 유효한 값은 텍스트 또는 이진 모드로 열린 파일에 따라 달라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8db3552cce786db5f51c5e10688a0e7ea38316b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Support for Chrome/Chromium has been added.</source>
          <target state="translated">버전 3.3의 새로운 기능 : Chrome / Chromium 지원이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e3a14a6878f1d57e3a61755e1e35f512ac6cf6a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#range.start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#range.stop&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#range.step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;a href=&quot;#range.start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#range.stop&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#range.step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="738beaa1df24e84cceeec4368cebe369172c2a07" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt; base class was added.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; &lt;/a&gt; 기본 클래스가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd2ee4ce23d4cda751ffdf5ed2ab607d0320d229" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;dir_fd&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="8bbb7dcfc93a3256da3e77e30128896f8934e79e" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;dir_fd&lt;/em&gt; 매개 변수.</target>
        </trans-unit>
        <trans-unit id="8e3679a20a6466e36ee13269b95778590402cdc8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;follow_symlinks&lt;/em&gt; argument.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;follow_symlinks&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="f5a1bcb4d58f63caf511ef4af7b5a61495f919de" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;src_dir_fd&lt;/em&gt; and &lt;em&gt;dst_dir_fd&lt;/em&gt; arguments.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;src_dir_fd&lt;/em&gt; 및 &lt;em&gt;dst_dir_fd&lt;/em&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="959865bf3e479ce8479a65e679ed0d30ba7e0c4b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;timeout&lt;/em&gt; argument was added.</source>
          <target state="translated">버전 3.3의 새로운 기능 : &lt;em&gt;timeout&lt;/em&gt; 인수가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="ff5f89afe35355ca3e836deef3c91bc2e3c948b4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: This error used to be a subtype of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 3.3의 새로운 기능 :이 오류는 &lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 의 하위 유형이었으며 이제는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="41224dc3ad1482785fdd83d4be25d59287870563" translate="yes" xml:space="preserve">
          <source>New in version 3.4.</source>
          <target state="translated">버전 3.4의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="c2d2413b8a3a54c5ac894c0e648d044eed2cfc3a" translate="yes" xml:space="preserve">
          <source>New in version 3.4.2.</source>
          <target state="translated">버전 3.4.2의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="3d45319c8b08d09575a413772fc1dfd31f6be0bd" translate="yes" xml:space="preserve">
          <source>New in version 3.4.4.</source>
          <target state="translated">버전 3.4.4의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="d3fc5c5c6b68de9938f037f211d874194800b33d" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;--bind&lt;/code&gt; argument was introduced.</source>
          <target state="translated">버전 3.4의 새로운 기능 : &lt;code&gt;--bind&lt;/code&gt; 인수가 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="04e6b7704b4197ee6a706885b339be509977b09a" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;fish&lt;/code&gt; and &lt;code&gt;csh&lt;/code&gt; activation scripts.</source>
          <target state="translated">버전 3.4의 새로운 기능 : &lt;code&gt;fish&lt;/code&gt; 및 &lt;code&gt;csh&lt;/code&gt; 활성화 스크립트.</target>
        </trans-unit>
        <trans-unit id="07c6d19e4ee989f8d0d6e80bb2cbc4015ab1781f" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;em&gt;context&lt;/em&gt;</source>
          <target state="translated">버전 3.4의 새로운 기능 : &lt;em&gt;컨텍스트&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
