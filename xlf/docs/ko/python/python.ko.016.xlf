<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="74f74bc8bf80163ce9a08ec26c023a78cc6f1351" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the module; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;m.__name__&lt;/code&gt; is used.</source>
          <target state="translated">선택적 인수 &lt;em&gt;이름&lt;/em&gt; 은 모듈의 이름을 제공합니다. 기본적으로 또는 &lt;code&gt;None&lt;/code&gt; 이면 &lt;code&gt;m.__name__&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3d52bd25fbf060bdc8c3b9ca435cbc9618a61325" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the test; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;os.path.basename(filename)&lt;/code&gt; is used.</source>
          <target state="translated">선택적 인수 &lt;em&gt;이름&lt;/em&gt; 은 테스트 &lt;em&gt;이름을&lt;/em&gt; 제공합니다. 기본적으로 또는 &lt;code&gt;None&lt;/code&gt; 이면 &lt;code&gt;os.path.basename(filename)&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f6b2562f8953f1131c472b47d4b54220bb6ba548" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; is used in failure messages, and defaults to &lt;code&gt;&quot;NoName&quot;&lt;/code&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;이름&lt;/em&gt; 은 실패 메시지에 사용되며 기본값은 &lt;code&gt;&quot;NoName&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1699bfdd7fd20973701d3162c62bfa1f9508f5f4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; (default value 0) takes the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise OR&lt;/a&gt; of option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;optionflags&lt;/em&gt; (기본값 0)는 옵션 플래그 의 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;비트 단위 OR&lt;/a&gt; 을 사용합니다. &lt;a href=&quot;#doctest-options&quot;&gt;옵션 플래그&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="417b3c80b0b119fc8a9d5170d9bda1c21a4c8d1c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; (default value 0) takes the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise OR&lt;/a&gt; of option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;optionflags&lt;/em&gt; (기본값 0)는 옵션 플래그 의 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;비트 단위 OR&lt;/a&gt; 을 사용합니다. &lt;a href=&quot;#doctest-options&quot;&gt;옵션 플래그&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="759e88a19de4d4b0746cebf786891ae177aeb07c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; specifies the default doctest options for the tests, created by or-ing together individual option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;. See function &lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt;&lt;code&gt;set_unittest_reportflags()&lt;/code&gt;&lt;/a&gt; below for a better way to set reporting options.</source>
          <target state="translated">선택적 인수 &lt;em&gt;optionflags&lt;/em&gt; 는 개별 옵션 플래그를 함께 또는 함께 만들어 테스트에 대한 기본 doctest 옵션을 지정합니다. &lt;a href=&quot;#doctest-options&quot;&gt;옵션 플래그&lt;/a&gt; 섹션을 참조하십시오 . 보고 옵션을 설정하는 더 좋은 방법은 아래의 &lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt; &lt;code&gt;set_unittest_reportflags()&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37e0a655889a74d4486c037cebbed7ffef38cab5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; works as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">선택적 인수 &lt;em&gt;optionflags&lt;/em&gt; 는 위의 &lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt; 함수와 &lt;em&gt;동일하게&lt;/em&gt; 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3866fc6b90b4f4133905c3c5543b075f06526447" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for a module-relative filename. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;패키지&lt;/em&gt; 는 Python 패키지 또는 디렉토리를 모듈 기준 파일 이름의 기본 디렉토리로 사용해야하는 Python 패키지의 이름입니다. 패키지를 지정하지 않으면 호출 모듈의 디렉토리가 모듈 기준 파일 이름의 기본 디렉토리로 사용됩니다. &lt;em&gt;module_relative&lt;/em&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 &lt;em&gt;package&lt;/em&gt; 를 지정하는 것은 오류 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ef5b2b55ab00bb34cd92f7efcd9f129e923c313" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for module-relative filenames in &lt;em&gt;paths&lt;/em&gt;. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;패키지&lt;/em&gt; 는 Python 패키지 또는 &lt;em&gt;경로&lt;/em&gt; 에서 모듈 기준 파일 이름의 기본 디렉토리로 디렉토리를 사용해야하는 Python 패키지의 이름입니다 . 패키지를 지정하지 않으면 호출 모듈의 디렉토리가 모듈 기준 파일 이름의 기본 디렉토리로 사용됩니다. &lt;em&gt;module_relative&lt;/em&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 &lt;em&gt;패키지&lt;/em&gt; 를 지정하는 것은 오류 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94d377498ca11c8e7b908eef8487574468dd8dc7" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;parser&lt;/em&gt; specifies a &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; (or subclass) that should be used to extract tests from the files. It defaults to a normal parser (i.e., &lt;code&gt;DocTestParser()&lt;/code&gt;).</source>
          <target state="translated">선택적 인수 &lt;em&gt;구문 분석기&lt;/em&gt; 는 파일에서 테스트를 추출하는 데 사용해야 하는 &lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt; (또는 서브 클래스)를 지정 합니다. 기본 파서 (예 : &lt;code&gt;DocTestParser()&lt;/code&gt; )로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9519b496e1e3f651153ff9769f800e30f69b98e4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; controls whether post-mortem debugging is used. If &lt;em&gt;pm&lt;/em&gt; has a true value, the script file is run directly, and the debugger gets involved only if the script terminates via raising an unhandled exception. If it does, then post-mortem debugging is invoked, via &lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt;&lt;code&gt;pdb.post_mortem()&lt;/code&gt;&lt;/a&gt;, passing the traceback object from the unhandled exception. If &lt;em&gt;pm&lt;/em&gt; is not specified, or is false, the script is run under the debugger from the start, via passing an appropriate &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; call to &lt;a href=&quot;pdb#pdb.run&quot;&gt;&lt;code&gt;pdb.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;pm&lt;/em&gt; 은 사후 디버깅을 사용할지 여부를 제어합니다. &lt;em&gt;pm&lt;/em&gt; 에 true 값이 있으면 스크립트 파일이 직접 실행되고 처리되지 않은 예외가 발생하여 스크립트가 종료 된 경우에만 디버거가 관여합니다. 그럴 경우 &lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt; &lt;code&gt;pdb.post_mortem()&lt;/code&gt; &lt;/a&gt; 통해 사후 디버깅이 호출 되어 처리되지 않은 예외에서 역 추적 객체를 전달합니다. 경우 &lt;em&gt;오후가&lt;/em&gt; 지정하거나, 거짓되지 않은 스크립트는 적절한 통과를 통해, 처음부터 디버거에서 실행 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 를 호출 &lt;a href=&quot;pdb#pdb.run&quot;&gt; &lt;code&gt;pdb.run()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a8d4fb8b6c83dfaa1d99881e69a72ea7d791e79" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; has the same meaning as in function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">선택적 인수 &lt;em&gt;pm&lt;/em&gt; 은 함수 &lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다. 위의 .</target>
        </trans-unit>
        <trans-unit id="9dae0c1a5b97e77866ab6881abe2e777305b2301" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;raise_on_error&lt;/em&gt; defaults to false. If true, an exception is raised upon the first failure or unexpected exception in an example. This allows failures to be post-mortem debugged. Default behavior is to continue running examples.</source>
          <target state="translated">선택적 인수 &lt;em&gt;raise_on_error의&lt;/em&gt; 기본값은 false입니다. true 인 경우 예에서 첫 번째 실패 또는 예기치 않은 예외가 발생하면 예외가 발생합니다. 이를 통해 오류를 사후 디버깅 할 수 있습니다. 기본 동작은 예제를 계속 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="56349a38f6363fc65d65da6f8b6443516a01e339" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;report&lt;/em&gt; prints a summary at the end when true, else prints nothing at the end. In verbose mode, the summary is detailed, else the summary is very brief (in fact, empty if all tests passed).</source>
          <target state="translated">선택적 인수 &lt;em&gt;보고서&lt;/em&gt; 는 true 일 때 끝에 요약을 인쇄하고 그렇지 않으면 끝에 아무것도 인쇄하지 않습니다. 상세 모드에서는 요약이 상세하고, 그렇지 않으면 요약이 매우 짧습니다 (사실 모든 테스트가 통과되면 비어 있음).</target>
        </trans-unit>
        <trans-unit id="031d2124c82b980138e2af2ad0b509f59edc68b5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;setUp&lt;/em&gt; specifies a set-up function for the test suite. This is called before running the tests in each file. The &lt;em&gt;setUp&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">선택적 인수 &lt;em&gt;setUp&lt;/em&gt; 은 테스트 스위트의 설정 함수를 지정합니다. 각 파일에서 테스트를 실행하기 전에 호출됩니다. &lt;em&gt;설정&lt;/em&gt; 기능은 전달됩니다 &lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 개체를. 설정 기능은 &lt;em&gt;글로브&lt;/em&gt; 로서 테스트 전역에 액세스 할 수 있습니다&lt;em&gt;&lt;/em&gt; 속성이 통과 .</target>
        </trans-unit>
        <trans-unit id="f72389898b352b75c4f85463a108793b516a19f5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the dictionary passed. If not given, &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">선택적 인수 &lt;em&gt;소스&lt;/em&gt; 는 전달 된 사전의 컨텍스트 특정 이름을 지정합니다. 지정하지 않으면 &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="40ff180f69c6939133c7c6bbd110c796c6aedf22" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the string passed. If not given, &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; is used. This should commonly be a filesystem path or a URL.</source>
          <target state="translated">선택적 인수 &lt;em&gt;소스&lt;/em&gt; 는 전달 된 문자열의 컨텍스트 특정 이름을 지정합니다. 지정하지 않으면 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; 이 사용됩니다. 일반적으로 파일 시스템 경로 또는 URL이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c3502c84642c2ef73c0ea7d6513bc9ce05709a14" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies the name of the file being read. If not given and &lt;em&gt;f&lt;/em&gt; has a &lt;code&gt;name&lt;/code&gt; attribute, that is used for &lt;em&gt;source&lt;/em&gt;; the default is &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;소스&lt;/em&gt; 는 읽을 파일의 이름을 지정합니다. 지정하지 않고 &lt;em&gt;f&lt;/em&gt; 에 &lt;code&gt;name&lt;/code&gt; 속성이 있으면 &lt;em&gt;source에&lt;/em&gt; 사용됩니다 . 기본값은 &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="e3ffb9e4c0b3d8066cd77a81026675c48155def9" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;tearDown&lt;/em&gt; specifies a tear-down function for the test suite. This is called after running the tests in each file. The &lt;em&gt;tearDown&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">선택적 인수 &lt;em&gt;tearDown&lt;/em&gt; 은 테스트 스위트에 대한 분리 기능을 지정합니다. 각 파일에서 테스트를 실행 한 후에 호출됩니다. &lt;em&gt;의 tearDown&lt;/em&gt; 함수는 전달됩니다 &lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 개체를. 설정 함수는 테스트의 &lt;em&gt;globs&lt;/em&gt; 속성이 통과 함에 따라 테스트 전역에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7c5453a8a662ff48ce6b05bb63a862556df9025" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;test_finder&lt;/em&gt; is the &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; object (or a drop-in replacement) that is used to extract doctests from the module.</source>
          <target state="translated">선택적 인수 &lt;em&gt; test_finder&lt;/em&gt; 는 모듈에서 doctest를 추출하는 데 사용되는 &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt; 객체 (또는 드롭 인 대체)입니다.</target>
        </trans-unit>
        <trans-unit id="db4c1cc5f02a40eafb0ed3a5823be338fcf19c2f" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;verbose&lt;/em&gt; prints lots of stuff if true, and prints only failures if false; by default, or if &lt;code&gt;None&lt;/code&gt;, it&amp;rsquo;s true if and only if &lt;code&gt;'-v'&lt;/code&gt; is in &lt;code&gt;sys.argv&lt;/code&gt;.</source>
          <target state="translated">선택적 인수 &lt;em&gt;verbose&lt;/em&gt; 는 true 인 경우 많은 것을 인쇄하고 false 인 경우 실패 만 인쇄합니다. 기본적으로 또는 &lt;code&gt;None&lt;/code&gt; 이면 &lt;code&gt;'-v'&lt;/code&gt; 가 &lt;code&gt;sys.argv&lt;/code&gt; 에있는 경우에만 true 입니다. .</target>
        </trans-unit>
        <trans-unit id="b8153f139b45d286bc6ada5dd1d390a6a4123c3f" translate="yes" xml:space="preserve">
          <source>Optional argument:</source>
          <target state="translated">선택적 인수 :</target>
        </trans-unit>
        <trans-unit id="dc3411c4765a5302ac4a0657ce51631f57505a0c" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;extraglobs&lt;/em&gt;, &lt;em&gt;verbose&lt;/em&gt;, &lt;em&gt;report&lt;/em&gt;, &lt;em&gt;optionflags&lt;/em&gt;, &lt;em&gt;raise_on_error&lt;/em&gt;, and &lt;em&gt;globs&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above, except that &lt;em&gt;globs&lt;/em&gt; defaults to &lt;code&gt;m.__dict__&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;extraglobs&lt;/em&gt; , &lt;em&gt;verbose&lt;/em&gt; , &lt;em&gt;report&lt;/em&gt; , &lt;em&gt;optionflags&lt;/em&gt; , &lt;em&gt;raise_on_error&lt;/em&gt; 및 &lt;em&gt;globs&lt;/em&gt; 옵션 인수 는 위의 &lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt; 함수 와 동일합니다.&lt;em&gt; globs의&lt;/em&gt; 기본값이 &lt;code&gt;m.__dict__&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="66014d9b1f3041cfd84a26a994534d9a74b11dd8" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;setUp&lt;/em&gt;, &lt;em&gt;tearDown&lt;/em&gt;, and &lt;em&gt;optionflags&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt;&lt;code&gt;DocFileSuite()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">선택적 인수 &lt;em&gt;setUp&lt;/em&gt; , &lt;em&gt;tearDown&lt;/em&gt; 및 &lt;em&gt;optionflags&lt;/em&gt; 는 &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt; &lt;code&gt;DocFileSuite()&lt;/code&gt; &lt;/a&gt; 함수와 동일합니다. 위의 합니다.</target>
        </trans-unit>
        <trans-unit id="109a83d09113d925f541bdb7731a680c6dfb6788" translate="yes" xml:space="preserve">
          <source>Optional clauses such as &lt;code&gt;else&lt;/code&gt; are stored as an empty list if they&amp;rsquo;re not present.</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 와 같은 선택적 절 은없는 경우 빈 목록으로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9e6ad614ba64534bb9b35c5be45e412b81787e19" translate="yes" xml:space="preserve">
          <source>Optional encrypted password</source>
          <target state="translated">선택적인 암호화 된 비밀번호</target>
        </trans-unit>
        <trans-unit id="800aa892de20413e219a54b37b3156efd477e617" translate="yes" xml:space="preserve">
          <source>Optional keyword argument &lt;em&gt;initial_response_ok&lt;/em&gt; specifies whether, for authentication methods that support it, an &amp;ldquo;initial response&amp;rdquo; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954&lt;/strong&gt;&lt;/a&gt; can be sent along with the &lt;code&gt;AUTH&lt;/code&gt; command, rather than requiring a challenge/response.</source>
          <target state="translated">선택적 키워드 인수 &lt;em&gt;initial_response_ok&lt;/em&gt; 는이를 지원하는 인증 방법에 대해 &lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954에&lt;/strong&gt;&lt;/a&gt; 지정된대로 &quot;초기 응답&quot;을 지정합니다.&lt;strong&gt;&lt;/strong&gt; 시도 / 응답을 요구하지 않고 &lt;code&gt;AUTH&lt;/code&gt; 명령 과 함께 보낼 수 .</target>
        </trans-unit>
        <trans-unit id="39ded4fc07cc53be3f3b4d11b5ad6e335cab1088" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. &lt;em&gt;width&lt;/em&gt; defaults to &lt;code&gt;70&lt;/code&gt;.</source>
          <target state="translated">선택적 키워드 인수는 아래에 설명 된 &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 의 인스턴스 속성에 해당 합니다.&lt;em&gt;폭&lt;/em&gt; 기본적으로 &lt;code&gt;70&lt;/code&gt; 입니다 입니다.</target>
        </trans-unit>
        <trans-unit id="3b9eb4e0be951f4005e2e9357a99b2eb0d75d912" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. Note that the whitespace is collapsed before the text is passed to the &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; function, so changing the value of &lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt;&lt;code&gt;tabsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt;&lt;code&gt;drop_whitespace&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; will have no effect.</source>
          <target state="translated">선택적 키워드 인수는 아래에 설명 된 &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt; 의 인스턴스 속성에 해당 합니다. 텍스트가 &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt; 함수에 전달되기 전에 공백이 축소 되므로 &lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt; &lt;code&gt;tabsize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt; &lt;code&gt;drop_whitespace&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; &lt;/a&gt;도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="24ca019c9c45a21a1ae8afa31bdc446f05002f0e" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are filtering functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">선택적 키워드 매개 변수 &lt;em&gt;linejunk&lt;/em&gt; 및 &lt;em&gt;charjunk&lt;/em&gt; 는 필터링 기능 (또는 &lt;code&gt;None&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="0a70313273eae3e208c193164419f6a9bd989124" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are for filter functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">선택적 키워드 매개 변수 &lt;em&gt;linejunk&lt;/em&gt; 및 &lt;em&gt;charjunk&lt;/em&gt; 는 필터 기능 (또는 &lt;code&gt;None&lt;/code&gt; ) 용입니다.</target>
        </trans-unit>
        <trans-unit id="73738e459fc48b15d4c9caa2fae00dc51ed6861e" translate="yes" xml:space="preserve">
          <source>Optional opaque data associated to this file object: for example, this could be used to store a per-client session ID.</source>
          <target state="translated">이 파일 객체와 관련된 선택적인 불투명 데이터 : 예를 들어 클라이언트 별 세션 ID를 저장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33c45096fc76de56eedec7a2b606f898390e6242" translate="yes" xml:space="preserve">
          <source>Optional type.</source>
          <target state="translated">선택적 유형.</target>
        </trans-unit>
        <trans-unit id="7378235c39ea460a01142b753df9f73551ec2ce1" translate="yes" xml:space="preserve">
          <source>Optionally, a callable with a &lt;code&gt;(obj, state)&lt;/code&gt; signature. This callable allows the user to programmatically control the state-updating behavior of a specific object, instead of using &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s static &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method. If not &lt;code&gt;None&lt;/code&gt;, this callable will have priority over &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적으로, &lt;code&gt;(obj, state)&lt;/code&gt; 서명이 있는 호출 가능 . 이 콜 &lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt; 을 통해 사용자는 &lt;code&gt;obj&lt;/code&gt; 의 정적 __setstate __ () 메서드 를 사용하는 대신 특정 객체의 상태 업데이트 동작을 프로그래밍 방식으로 제어 할 수 있습니다 . &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 ,이 호출 가능 &lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;obj&lt;/code&gt; 의 __setstate __ () 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="248e8ab0a4779d85c841d158ffbba3ab30529149" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (and not a sequence) yielding successive items. These items will be appended to the object either using &lt;code&gt;obj.append(item)&lt;/code&gt; or, in batch, using &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt;. This is primarily used for list subclasses, but may be used by other classes as long as they have &lt;code&gt;append()&lt;/code&gt; and &lt;code&gt;extend()&lt;/code&gt; methods with the appropriate signature. (Whether &lt;code&gt;append()&lt;/code&gt; or &lt;code&gt;extend()&lt;/code&gt; is used depends on which pickle protocol version is used as well as the number of items to append, so both must be supported.)</source>
          <target state="translated">선택적으로, 반복자 (시퀀스 아님)는 연속적인 항목을 생성합니다. 이러한 항목은 &lt;code&gt;obj.append(item)&lt;/code&gt; 하거나 &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt; 사용하여 일괄 적으로 객체에 추가됩니다 . 이것은 주로리스트 서브 클래스에 사용되지만 적절한 서명 을 가진 &lt;code&gt;append()&lt;/code&gt; 및 &lt;code&gt;extend()&lt;/code&gt; 메소드가있는 한 다른 클래스에서 사용될 수 있습니다 . (여부를 &lt;code&gt;append()&lt;/code&gt; 또는 &lt;code&gt;extend()&lt;/code&gt; 모두 지원해야하므로 잘 추가되는 항목의 수만큼 사용하는 피클 프로토콜 버전에 따라 사용된다.)</target>
        </trans-unit>
        <trans-unit id="4d9b55e743d6156b61e3533878c6208bad417979" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (not a sequence) yielding successive key-value pairs. These items will be stored to the object using &lt;code&gt;obj[key] =
value&lt;/code&gt;. This is primarily used for dictionary subclasses, but may be used by other classes as long as they implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적으로, 반복자 (시퀀스 아님)는 연속 키-값 쌍을 생성합니다. 이 항목들은 &lt;code&gt;obj[key] = value&lt;/code&gt; 사용하여 객체에 저장됩니다 . 이것은 주로 사전 서브 클래스에 사용되지만 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; 을 구현하는 한 다른 클래스에서 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="315326770905137b12d904dc1563d56ee022e891" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (not a sequence) yielding successive key-value pairs. These items will be stored to the object using &lt;code&gt;obj[key] =
value&lt;/code&gt;. This is primarily used for dictionary subclasses, but may be used by other classes as long as they implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적으로 연속 키-값 쌍을 생성하는 반복기 (시퀀스 아님). 이러한 항목은 &lt;code&gt;obj[key] = value&lt;/code&gt; 사용하여 객체에 저장됩니다 . 이것은 주로 사전 하위 클래스에 사용되지만 &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; 을 구현하는 한 다른 클래스에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9542e7876fb05dd3c13e6d5bd0e264709c2e4f0" translate="yes" xml:space="preserve">
          <source>Optionally, delete the &lt;code&gt;.dist-info&lt;/code&gt; directories created by pip in the &lt;code&gt;myapp&lt;/code&gt; directory. These hold metadata for pip to manage the packages, and as you won&amp;rsquo;t be making any further use of pip they aren&amp;rsquo;t required - although it won&amp;rsquo;t do any harm if you leave them.</source>
          <target state="translated">선택적으로 &lt;code&gt;myapp&lt;/code&gt; 디렉토리 에서 pip로 작성된 &lt;code&gt;.dist-info&lt;/code&gt; 디렉토리를 삭제하십시오 . 이것들은 패키지를 관리하기 위해 pip에 대한 메타 데이터를 보유하고 있으며, pip를 더 이상 사용하지 않기 때문에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a52acaea3b3a3449dba5140bba2c078c062d5d24" translate="yes" xml:space="preserve">
          <source>Optionally, the object&amp;rsquo;s state, which will be passed to the object&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method as previously described. If the object has no such method then, the value must be a dictionary and it will be added to the object&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">선택적으로 객체의 상태 는 앞에서 설명한 것처럼 객체의 &lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt; 메서드로 전달됩니다 . 객체에 그러한 메소드가없는 경우 값은 사전이어야하며 객체의 &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt; 속성에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0a1ef89fa64482c3406993b823c9249846d35bc0" translate="yes" xml:space="preserve">
          <source>Optionally, the string may also have a scope zone ID, expressed with a suffix &lt;code&gt;%scope_id&lt;/code&gt;. If present, the scope ID must be non-empty, and may not contain &lt;code&gt;%&lt;/code&gt;. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4007.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 4007&lt;/strong&gt;&lt;/a&gt; for details. For example, &lt;code&gt;fe80::1234%1&lt;/code&gt; might identify address &lt;code&gt;fe80::1234&lt;/code&gt; on the first link of the node.</source>
          <target state="translated">선택적으로 문자열은 &lt;code&gt;%scope_id&lt;/code&gt; 접미사로 표현되는 범위 영역 ID를 가질 수도 있습니다 . 존재하는 경우 범위 ID는 비어 있지 않아야하며 &lt;code&gt;%&lt;/code&gt; 를 포함 할 수 없습니다 . 자세한 내용은 &lt;a href=&quot;https://tools.ietf.org/html/rfc4007.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 4007&lt;/strong&gt;&lt;/a&gt; 을 참조하십시오. 예를 들어, &lt;code&gt;fe80::1234%1&lt;/code&gt; 은 노드의 첫 번째 링크에서 주소 &lt;code&gt;fe80::1234&lt;/code&gt; 를 식별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="4db22efa7fc9873f3af05807c67613b164308c33" translate="yes" xml:space="preserve">
          <source>Options control things like the color and border width of a widget. Options can be set in three ways:</source>
          <target state="translated">옵션은 위젯의 색상 및 테두리 너비와 같은 것을 제어합니다. 옵션은 세 가지 방법으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de536fda840f7da591573c96c013aeef7cd818d1" translate="yes" xml:space="preserve">
          <source>Options may be provided as keyword arguments:</source>
          <target state="translated">옵션은 키워드 인수로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8335036bab3bafd620537f0b69b86754c080951f" translate="yes" xml:space="preserve">
          <source>Options menu (Shell and Editor)</source>
          <target state="translated">옵션 메뉴 (쉘 및 편집기)</target>
        </trans-unit>
        <trans-unit id="92ce2ae7dc9f79aa3ed9c94ea1705d8d6e562c73" translate="yes" xml:space="preserve">
          <source>Or directly from a string:</source>
          <target state="translated">또는 문자열에서 직접 :</target>
        </trans-unit>
        <trans-unit id="29bb859d05bc7a567ae7f7cc079e9b6720bf0d15" translate="yes" xml:space="preserve">
          <source>Or if a pending task needs to be deleted, how do you find it and remove it from the queue?</source>
          <target state="translated">또는 보류중인 작업을 삭제해야하는 경우 작업을 어떻게 찾아 대기열에서 제거합니까?</target>
        </trans-unit>
        <trans-unit id="350d63a3e5571c88873ab3623ca8f4daa75e4b64" translate="yes" xml:space="preserve">
          <source>Or reading bytes directly with &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">또는 &lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt; 직접 바이트 읽기 :</target>
        </trans-unit>
        <trans-unit id="4b22593950042710b50dc4a4f90e32e24951a382" translate="yes" xml:space="preserve">
          <source>Or, more often:</source>
          <target state="translated">또는 더 자주 :</target>
        </trans-unit>
        <trans-unit id="1d1f8ef58bd7839e3af26e1c41a86b651180494a" translate="yes" xml:space="preserve">
          <source>Ordered and equality comparisons are supported between ST objects. Pickling of ST objects (using the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module) is also supported.</source>
          <target state="translated">ST 오브젝트간에 순서 및 동등 비교가 지원됩니다. ST 객체의 &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; ( 피클 모듈 사용)도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ec2fcd9ffa26d70803882357a146da9dcfdec817" translate="yes" xml:space="preserve">
          <source>Ordered comparisons between enumeration values are &lt;em&gt;not&lt;/em&gt; supported. Enum members are not integers (but see &lt;a href=&quot;#intenum&quot;&gt;IntEnum&lt;/a&gt; below):</source>
          <target state="translated">열거 값 사이의 순서 비교는 지원 &lt;em&gt;되지 않습니다&lt;/em&gt; . 열거 형 멤버는 정수가 아닙니다 (그러나 아래의 &lt;a href=&quot;#intenum&quot;&gt;IntEnum&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="eb500fa39e2390f334d105e01309ce69a01fcb03" translate="yes" xml:space="preserve">
          <source>Ordered dictionaries are just like regular dictionaries but have some extra capabilities relating to ordering operations. They have become less important now that the built-in &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class gained the ability to remember insertion order (this new behavior became guaranteed in Python 3.7).</source>
          <target state="translated">정렬 된 사전은 일반 사전과 비슷하지만 주문 작업과 관련된 몇 가지 추가 기능이 있습니다. 내장 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 클래스가 삽입 순서를 기억하는 기능을 얻었으므로 이제 덜 중요해졌습니다 (이 새로운 동작은 Python 3.7에서 보장되었습니다).</target>
        </trans-unit>
        <trans-unit id="26bb7103f52c11aaccca56efca197b3b55b4bca3" translate="yes" xml:space="preserve">
          <source>OrderedDict objects</source>
          <target state="translated">OrderedDict 객체</target>
        </trans-unit>
        <trans-unit id="67243e03b42bd26dc3e495a6d0366676bb3fea02" translate="yes" xml:space="preserve">
          <source>OrderedEnum</source>
          <target state="translated">OrderedEnum</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="e5dd46594071b12b0a7a38e3a2f8a892e95aa71b" translate="yes" xml:space="preserve">
          <source>Ordinarily, you get a message object structure by passing a file or some text to a parser, which parses the text and returns the root message object. However you can also build a complete message structure from scratch, or even individual &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects by hand. In fact, you can also take an existing structure and add new &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, move them around, etc. This makes a very convenient interface for slicing-and-dicing MIME messages.</source>
          <target state="translated">일반적으로 파일 또는 일부 텍스트를 파서에 전달하여 텍스트를 구문 분석하고 루트 메시지 객체를 반환하여 메시지 객체 구조를 얻습니다. 그러나 처음부터 전체 메시지 구조를 만들거나 개별 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 개체를 직접 만들 수도 있습니다. 실제로 기존 구조를 가져 와서 새 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 객체를 추가 하거나 이동시킬 수도 있습니다. 이렇게하면 MIME 메시지를 슬라이스 및 표시하기위한 매우 편리한 인터페이스가 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="7a430640bbf526678a8da4fb85c2d06d96431f50" translate="yes" xml:space="preserve">
          <source>Organizing test code</source>
          <target state="translated">테스트 코드 구성</target>
        </trans-unit>
        <trans-unit id="1cedde9b69ce01ae9f01a497a5daf62fb6786f91" translate="yes" xml:space="preserve">
          <source>Original Python logging package</source>
          <target state="translated">원래 파이썬 로깅 패키지</target>
        </trans-unit>
        <trans-unit id="0bf18896b8755bd61d4e426a9647970dd9cbbd69" translate="yes" xml:space="preserve">
          <source>Original specification of packages. Some semantics have changed since the writing of this document (e.g. redirecting based on &lt;code&gt;None&lt;/code&gt; in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">패키지의 원래 사양. 이 문서를 작성한 이후 일부 의미가 변경되었습니다 (예 : &lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 의&lt;/a&gt; &lt;code&gt;None&lt;/code&gt; 을 기반으로 리디렉션 ).</target>
        </trans-unit>
        <trans-unit id="d8f4478364a57d8876305d6f8a4f1737017ec09e" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional feature&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;임시 기능&lt;/a&gt; 으로 3.3에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="044d5151be7c1b4dd05b8491c7d04527149f63bb" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">3.3에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 원래 추가</target>
        </trans-unit>
        <trans-unit id="7ad670c5afb803a74dadaacb9226b7d9a7c018b3" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional feature&lt;/a&gt;.</source>
          <target state="translated">원래 3.3에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;임시 기능&lt;/a&gt; 으로 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="24d5a7a7b39d71f443f753487a039d4974c38c32" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">3.3에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 추가됨</target>
        </trans-unit>
        <trans-unit id="3760d15c033b2bd980e7e3d2725429e9f2f28376" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">3.4에서 원래 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 추가</target>
        </trans-unit>
        <trans-unit id="b2fbc34ec2e89a23970dd81d7e81d17186c5721a" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;. Docs for legacy message class moved to &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message: Representing an email message using the compat32 API&lt;/a&gt;.</source>
          <target state="translated">원래 3.4에서 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 추가되었습니다 . 레거시 메시지 클래스 용 문서가 &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message&lt;/a&gt; 로 이동되었습니다 . compat32 API를 사용하여 이메일 메시지를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6826df7edaaa92ff772c165e8aa6f4803c89e755" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">원래 3.4에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 추가됨</target>
        </trans-unit>
        <trans-unit id="62d53e0ff9b2f8d36714a48de79204ee45ee33a8" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;. Docs for legacy message class moved to &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message: Representing an email message using the compat32 API&lt;/a&gt;.</source>
          <target state="translated">원래 3.4에서 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;임시 모듈&lt;/a&gt; 로 추가되었습니다 . 레거시 메시지 클래스 용 문서가 &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message&lt;/a&gt; 로 이동했습니다 . compat32 API를 사용하여 이메일 메시지를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c26e6600df66b0af63b8bf38fb88a3db87e5308a" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302에&lt;/strong&gt;&lt;/a&gt; 명시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f514af7ee84123103b91a2dc752d472d7d48914" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302에&lt;/strong&gt;&lt;/a&gt; 명시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8693f343381fcb6bf448f211a00836342fbd6265" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 302에&lt;/strong&gt;&lt;/a&gt; 지정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8d378e398249f21f59f2d17eaa22696c733bca01" translate="yes" xml:space="preserve">
          <source>Originally, the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module had attempted to maintain compatibility with &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt;. However, &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; was difficult to extend transparently, particularly with the changes required to support the new &lt;code&gt;nargs=&lt;/code&gt; specifiers and better usage messages. When most everything in &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; had either been copy-pasted over or monkey-patched, it no longer seemed practical to try to maintain the backwards compatibility.</source>
          <target state="translated">원래 &lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt; 모듈은 &lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt; 와의 호환성을 유지하려고 시도했습니다 . 그러나 &lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt; 는 특히 새로운 &lt;code&gt;nargs=&lt;/code&gt; 지정자와 더 나은 사용법 메시지 를 지원하는 데 필요한 변경 사항으로 인해 투명하게 확장하기가 어려웠습니다 . &lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; 의&lt;/a&gt; 대부분 이 복사-붙여 넣기 또는 원숭이 패치로 이루어 졌을 때 더 이상 이전 버전과의 호환성을 유지하려고 시도하는 것이 현실적으로 보이지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="fed34ee486c7f5d06dbc7cfc681f00ddfcaf011b" translate="yes" xml:space="preserve">
          <source>Other Built-in Types</source>
          <target state="translated">다른 내장 유형</target>
        </trans-unit>
        <trans-unit id="0ba799c410addb3c357f8f4ace9cc3fe6bde69ff" translate="yes" xml:space="preserve">
          <source>Other Examples</source>
          <target state="translated">다른 예</target>
        </trans-unit>
        <trans-unit id="551852c7028ddd04d28686d5a46f202fe2ad7cb7" translate="yes" xml:space="preserve">
          <source>Other Functions</source>
          <target state="translated">다른 기능들</target>
        </trans-unit>
        <trans-unit id="217af07f6b149416704b03c95cdb3752965dd4b3" translate="yes" xml:space="preserve">
          <source>Other Graphical User Interface Packages</source>
          <target state="translated">다른 그래픽 사용자 인터페이스 패키지</target>
        </trans-unit>
        <trans-unit id="b8882f948dba0fc11ba9a6b54e264027bb74d52f" translate="yes" xml:space="preserve">
          <source>Other Module Level Functions</source>
          <target state="translated">다른 모듈 레벨 기능</target>
        </trans-unit>
        <trans-unit id="88f1a5da8a5bf979a3ede7f700833eb578841312" translate="yes" xml:space="preserve">
          <source>Other Unicode decimal digits are also permitted where &lt;code&gt;digit&lt;/code&gt; appears above. These include decimal digits from various other alphabets (for example, Arabic-Indic and Devanāgarī digits) along with the fullwidth digits &lt;code&gt;'\uff10'&lt;/code&gt; through &lt;code&gt;'\uff19'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;digit&lt;/code&gt; 가 위에 나타나는 다른 유니 코드 10 진수도 허용 됩니다. 여기에는 다양한 다른 알파벳의 십진수 (예 : 아랍어-인도 및 데바 나가리 숫자)와 전각 자릿수 &lt;code&gt;'\uff10'&lt;/code&gt; ~ &lt;code&gt;'\uff19'&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="ff9d748c4bd543f9761aa15fcf1968d71aec0ec7" translate="yes" xml:space="preserve">
          <source>Other arguments:</source>
          <target state="translated">다른 주장들 :</target>
        </trans-unit>
        <trans-unit id="a90e10ae9215677f534e2d324d08bda0a668ca69" translate="yes" xml:space="preserve">
          <source>Other attributes may exist, but they are private and must not be inspected or relied on.</source>
          <target state="translated">다른 속성이 존재할 수 있지만 개인 속성이므로 검사하거나 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="60e72b10ec92ca4f65a83df3c1526b2c7310a396" translate="yes" xml:space="preserve">
          <source>Other concrete types</source>
          <target state="translated">기타 콘크리트 유형</target>
        </trans-unit>
        <trans-unit id="aedb03b71d3d53b256c55d31e3a1023846152365" translate="yes" xml:space="preserve">
          <source>Other constructor:</source>
          <target state="translated">다른 생성자 :</target>
        </trans-unit>
        <trans-unit id="de575b19ab55681e0fd9c92fcea7275245bb42c9" translate="yes" xml:space="preserve">
          <source>Other constructors, all class methods:</source>
          <target state="translated">다른 생성자, 모든 클래스 메소드 :</target>
        </trans-unit>
        <trans-unit id="e12e322f5b694198963cd183428de579cc666876" translate="yes" xml:space="preserve">
          <source>Other functions</source>
          <target state="translated">다른 기능들</target>
        </trans-unit>
        <trans-unit id="bfdf1a80a42b89f60d8528660ffb1316928b3b7c" translate="yes" xml:space="preserve">
          <source>Other library modules may provide additional ways to create text or binary streams. See &lt;a href=&quot;socket#socket.socket.makefile&quot;&gt;&lt;code&gt;socket.socket.makefile()&lt;/code&gt;&lt;/a&gt; for example.</source>
          <target state="translated">다른 라이브러리 모듈은 텍스트 또는 이진 스트림을 만드는 추가 방법을 제공 할 수 있습니다. 예를 들어 &lt;a href=&quot;socket#socket.socket.makefile&quot;&gt; &lt;code&gt;socket.socket.makefile()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="461f70e81617707a4ef7e08e0bf02afe3f4f0770" translate="yes" xml:space="preserve">
          <source>Other methods must be called with the associated lock held. The &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method releases the lock, and then blocks until another thread awakens it by calling &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt;. Once awakened, &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; re-acquires the lock and returns. It is also possible to specify a timeout.</source>
          <target state="translated">연관된 잠금을 보유한 상태에서 다른 메소드를 호출해야합니다. &lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; 다른 스레드가 호출하여 깨어 때까지 방법은 다음 블록을 잠금을 해제하고, &lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt; . 깨어 나면 &lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; 는 잠금을 다시 획득하고 반환합니다. 제한 시간을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8806cd1edbc02b7ee32a1acfc728cd7ae05ec92a" translate="yes" xml:space="preserve">
          <source>Other modules that provide Tk support include:</source>
          <target state="translated">Tk 지원을 제공하는 다른 모듈은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c094da946507173bdbcbc9838b22e11fb790816a" translate="yes" xml:space="preserve">
          <source>Other parameters:</source>
          <target state="translated">다른 매개 변수 :</target>
        </trans-unit>
        <trans-unit id="61bf50f22a61fb1a7d3d05d04ae2081ef3a300b7" translate="yes" xml:space="preserve">
          <source>Other references to the old objects (such as names external to the module) are not rebound to refer to the new objects and must be updated in each namespace where they occur if that is desired.</source>
          <target state="translated">이전 객체에 대한 다른 참조 (예 : 모듈 외부의 이름)는 새 객체를 참조하기 위해 리 바인드되지 않으며 원하는 경우 각 네임 스페이스에서 업데이트되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ddd8ffb3ee85fbbcdc44a525c857b9e486b67e0b" translate="yes" xml:space="preserve">
          <source>Other special directives</source>
          <target state="translated">기타 특별 지침</target>
        </trans-unit>
        <trans-unit id="f8bc7487f272036d8152ed0d6732478c5fb2b9ca" translate="yes" xml:space="preserve">
          <source>Other statements which are only applicable inside functions or loops are described in other sections.</source>
          <target state="translated">함수 나 루프 내에서만 적용 할 수있는 다른 명령문은 다른 섹션에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ba9b5975c5a17860bfd12921bda717270fc0fabd" translate="yes" xml:space="preserve">
          <source>Other than the &lt;em&gt;ensure_ascii&lt;/em&gt; parameter, this module is defined strictly in terms of conversion between Python objects and &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;Unicode strings&lt;/code&gt;&lt;/a&gt;, and thus does not otherwise directly address the issue of character encodings.</source>
          <target state="translated">댄 다른 &lt;em&gt;ensure_ascii&lt;/em&gt; 파라미터는,이 모듈은 파이썬 개체 간의 전환의 관점에서 엄격하게 정의 된 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;Unicode strings&lt;/code&gt; &lt;/a&gt; 달리 직접 문자 인코딩의 문제가 해결되지 않기 때문에, 그리고.</target>
        </trans-unit>
        <trans-unit id="334ae5c0280a33be6e1a7440bb997991c7be3c2d" translate="yes" xml:space="preserve">
          <source>Other than the text mode requirement, this method operates like &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;BytesParser.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">텍스트 모드 요구 사항 &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;BytesParser.parse()&lt;/code&gt; &lt;/a&gt; 메서드는 BytesParser.parse () 와 같이 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="82d46ce3715467bc2baf73f7bf0f1e61e7104b2a" translate="yes" xml:space="preserve">
          <source>Other threads can call a thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method. This blocks the calling thread until the thread whose &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method is called is terminated.</source>
          <target state="translated">다른 스레드는 스레드의 &lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 수 있습니다 . &lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 된 스레드 가 종료 될 때까지 호출 스레드를 차단합니다 .</target>
        </trans-unit>
        <trans-unit id="80ebcb8c2214303bc68c1b27cf91f38d351836db" translate="yes" xml:space="preserve">
          <source>Other typical Boolean pairs include &lt;code&gt;accept&lt;/code&gt;/&lt;code&gt;reject&lt;/code&gt; or &lt;code&gt;enabled&lt;/code&gt;/&lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">다른 일반적인 부울 쌍에는 &lt;code&gt;accept&lt;/code&gt; / &lt;code&gt;reject&lt;/code&gt; 또는 &lt;code&gt;enabled&lt;/code&gt; / &lt;code&gt;disabled&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="09b2b2f9de07b290a776ba27da53dfcb6de8c87b" translate="yes" xml:space="preserve">
          <source>Other utilities</source>
          <target state="translated">다른 유틸리티</target>
        </trans-unit>
        <trans-unit id="8d7bf5bf136e81f9388c1f4eca050d6d94e965d7" translate="yes" xml:space="preserve">
          <source>Others</source>
          <target state="translated">Others</target>
        </trans-unit>
        <trans-unit id="a8f27da35e68a9f7a5a97f1703ac92769848a8d4" translate="yes" xml:space="preserve">
          <source>Others have execute permission.</source>
          <target state="translated">다른 사람에게는 실행 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4b5a656b29825a9211b83ccae7336ee695ce161" translate="yes" xml:space="preserve">
          <source>Others have read permission.</source>
          <target state="translated">다른 사람들에게는 읽기 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc0d4f6a481380e178acd3897e6a60f3ade59b6a" translate="yes" xml:space="preserve">
          <source>Others have write permission.</source>
          <target state="translated">다른 사람들은 쓰기 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc737418c9269b8ef3e41db8ef19aa2d039d3d09" translate="yes" xml:space="preserve">
          <source>Otherwise (&lt;em&gt;x&lt;/em&gt; is a positive finite number), return the value of the least significant bit of &lt;em&gt;x&lt;/em&gt;, such that the first float bigger than &lt;em&gt;x&lt;/em&gt; is &lt;code&gt;x + ulp(x)&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 ( &lt;em&gt;x는&lt;/em&gt; 양의 제한된 개수)의 최하위 비트의 값이 반환 &lt;em&gt;X를&lt;/em&gt; 보다 큰 제 플로트되도록, &lt;em&gt;X는&lt;/em&gt; 이고 &lt;code&gt;x + ulp(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4222ac892c71e5c85c46120851fe4701ec7917d" translate="yes" xml:space="preserve">
          <source>Otherwise (the signal is trapped), only equality comparisons and explicit conversions are silent. All other mixed operations raise &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 (신호가 갇히는) 등식 비교 및 ​​명시 적 변환 만 자동입니다. 다른 모든 혼합 연산은 &lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; 을 발생시킵니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be46edea33f2697996c7c3567d1d9c18f067cdc7" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;d&lt;/em&gt; is naive.</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;d&lt;/em&gt; 는 순진합니다.</target>
        </trans-unit>
        <trans-unit id="dfc31f535285ad24b8fa6617987e28a96cbb3d87" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;t&lt;/em&gt; is naive.</source>
          <target state="translated">그렇지 않으면, &lt;em&gt;t&lt;/em&gt; 는 순진합니다.</target>
        </trans-unit>
        <trans-unit id="954ba79aef749f40f5d5ce28f2bceb67836f96e6" translate="yes" xml:space="preserve">
          <source>Otherwise, arguments are files opened for editing and &lt;code&gt;sys.argv&lt;/code&gt; reflects the arguments passed to IDLE itself.</source>
          <target state="translated">그렇지 않으면, 인수는 편집을 위해 열린 파일이고 &lt;code&gt;sys.argv&lt;/code&gt; 는 IDLE 자체에 전달 된 인수를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="14b72810afd38383fb343bc867db69c78f448477" translate="yes" xml:space="preserve">
          <source>Otherwise, if no argument is provided, or if the argument is &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;token_*&lt;/code&gt; functions will use a reasonable default instead.</source>
          <target state="translated">그렇지 않으면 인수가 제공되지 않거나 인수가 &lt;code&gt;None&lt;/code&gt; 이면 &lt;code&gt;token_*&lt;/code&gt; 함수가 대신 적절한 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="54d61e7a8adc1736b3a4f7ffa32c6559beb44abf" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument is an integer or a floating point number, a floating point number with the same value (within Python&amp;rsquo;s floating point precision) is returned. If the argument is outside the range of a Python float, an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">그렇지 않으면, 인수가 정수 또는 부동 소수점 숫자이면, 파이썬의 부동 소수점 정밀도 내에서 동일한 값을 갖는 부동 소수점 숫자가 리턴됩니다. 인수가 Python float 범위를 벗어나면 &lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="11a40cb9049b1be0f85f95867c10277bfc38eefa" translate="yes" xml:space="preserve">
          <source>Otherwise, raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="6ecea0cd28243a5441c028877a147bc1209dbb6d" translate="yes" xml:space="preserve">
          <source>Otherwise, return a list of &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; pairs for the options in the given &lt;em&gt;section&lt;/em&gt;. Optional arguments have the same meaning as for the &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면 주어진 &lt;em&gt;섹션&lt;/em&gt; 의 옵션에 대한 &lt;em&gt;이름&lt;/em&gt; , &lt;em&gt;값&lt;/em&gt; 쌍 의 목록을 리턴 &lt;em&gt;하십시오&lt;/em&gt; . 선택적 인수는 &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="9b46eb0d416a3552e2d7853ed1ba1f77360411e1" translate="yes" xml:space="preserve">
          <source>Otherwise, the backslash will be interpreted as part of the string. For example, the &lt;code&gt;\n&lt;/code&gt; above would be interpreted as a newline character. Alternatively, you can double each backslash in the doctest version (and not use a raw string):</source>
          <target state="translated">그렇지 않으면 백 슬래시는 문자열의 일부로 해석됩니다. 예를 들어, 위 의 &lt;code&gt;\n&lt;/code&gt; 은 개행 문자로 해석됩니다. 또는 doctest 버전에서 각 백 슬래시를 두 배로 늘릴 수 있습니다 (원시 문자열은 사용하지 않음).</target>
        </trans-unit>
        <trans-unit id="70814fdd5d3f962107665d79424d211168c0dc43" translate="yes" xml:space="preserve">
          <source>Otherwise, the list contains the object&amp;rsquo;s attributes&amp;rsquo; names, the names of its class&amp;rsquo;s attributes, and recursively of the attributes of its class&amp;rsquo;s base classes.</source>
          <target state="translated">그렇지 않으면, 목록에는 객체의 속성 이름, 클래스 속성의 이름 및 클래스 기본 클래스의 속성이 반복적으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f7030a7d49fcfe877e91d4527075807bf0b11fd0" translate="yes" xml:space="preserve">
          <source>Our XML now looks like this:</source>
          <target state="translated">우리의 XML은 이제 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="0be297b561141a6a2d82a7108dddc36e1cc22dba" translate="yes" xml:space="preserve">
          <source>Out of memory</source>
          <target state="translated">메모리 부족</target>
        </trans-unit>
        <trans-unit id="af8eb7df148c890efac2f2ede67c967bf68723f5" translate="yes" xml:space="preserve">
          <source>Out of streams resources</source>
          <target state="translated">스트림 외부 자원</target>
        </trans-unit>
        <trans-unit id="63664fd5af35bc0c3fdff750f9b0e30b4646a15c" translate="yes" xml:space="preserve">
          <source>Out-of-band Buffers</source>
          <target state="translated">대역 외 버퍼</target>
        </trans-unit>
        <trans-unit id="3fac09e90cfccb47e52c968f4fb653462a3d8c88" translate="yes" xml:space="preserve">
          <source>Output in debug mode:</source>
          <target state="translated">디버그 모드에서 출력 :</target>
        </trans-unit>
        <trans-unit id="fe984ffd01f834b22054ca88048eb74573f00d01" translate="yes" xml:space="preserve">
          <source>Output of the child process if it was captured by &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt; 의해 캡처 된 하위 프로세스의 출력입니다 . 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dc05deb2ab45aebe353e699363a7fbb6c0b73af3" translate="yes" xml:space="preserve">
          <source>Output parameter. The foreign function fills in a value.</source>
          <target state="translated">출력 매개 변수. 외부 함수는 값을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="66226a3b482e757cb52b81b1728ded2d649bd5c1" translate="yes" xml:space="preserve">
          <source>Output parameters can be combined with the &lt;code&gt;errcheck&lt;/code&gt; protocol to do further output processing and error checking. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; api function returns a &lt;code&gt;BOOL&lt;/code&gt; to signal success or failure, so this function could do the error checking, and raises an exception when the api call failed:</source>
          <target state="translated">출력 매개 변수를 &lt;code&gt;errcheck&lt;/code&gt; 프로토콜 과 결합하여 추가 출력 처리 및 오류 점검을 수행 할 수 있습니다 . win32 &lt;code&gt;GetWindowRect&lt;/code&gt; api 함수는 성공 또는 실패를 &lt;code&gt;BOOL&lt;/code&gt; 위해 BOOL 을 반환하므로이 함수는 오류 검사를 수행하고 api 호출이 실패하면 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6c41c030d36ce42b9a8cad80e0baa996c85ae9c1" translate="yes" xml:space="preserve">
          <source>Output to stdout is captured, but not output to stderr (exception tracebacks are captured via a different means).</source>
          <target state="translated">stdout으로의 출력은 캡처되지만 stderr 로의 출력은 제외됩니다 (예외 추적은 다른 방법을 통해 캡처 됨).</target>
        </trans-unit>
        <trans-unit id="052c8a28d79036323fd83c172b2396b59d5c7af9" translate="yes" xml:space="preserve">
          <source>Output windows, such as used for Edit =&amp;gt; Find in Files, are a subtype of editor window. They currently have the same top menu but a different default title and context menu.</source>
          <target state="translated">편집 =&amp;gt; 파일에서 찾기와 같은 출력 창은 편집기 창의 하위 유형입니다. 현재 동일한 최상위 메뉴가 있지만 기본 제목 및 상황에 맞는 메뉴가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="0d058e922b3d393665a54054e5a68be683df369b" translate="yes" xml:space="preserve">
          <source>OutputChecker objects</source>
          <target state="translated">OutputChecker 객체</target>
        </trans-unit>
        <trans-unit id="00b098b7354feb36c1140185524d89b0a668ca13" translate="yes" xml:space="preserve">
          <source>Outputs a symbolic disassembly of the pickle to the file-like object &lt;em&gt;out&lt;/em&gt;, defaulting to &lt;code&gt;sys.stdout&lt;/code&gt;. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object. &lt;em&gt;memo&lt;/em&gt; can be a Python dictionary that will be used as the pickle&amp;rsquo;s memo; it can be used to perform disassemblies across multiple pickles created by the same pickler. Successive levels, indicated by &lt;code&gt;MARK&lt;/code&gt; opcodes in the stream, are indented by &lt;em&gt;indentlevel&lt;/em&gt; spaces. If a nonzero value is given to &lt;em&gt;annotate&lt;/em&gt;, each opcode in the output is annotated with a short description. The value of &lt;em&gt;annotate&lt;/em&gt; is used as a hint for the column where annotation should start.</source>
          <target state="translated">피클의 기호 디스 어셈블리를 파일과 같은 객체 &lt;em&gt;out으로 출력합니다&lt;/em&gt; . 기본값은 &lt;code&gt;sys.stdout&lt;/code&gt; 입니다. &lt;em&gt;pickle&lt;/em&gt; 은 문자열 또는 파일과 같은 객체 일 수 있습니다. &lt;em&gt;메모&lt;/em&gt; 는 피클의 메모로 사용될 Python 사전 일 수 있습니다. 동일한 피커로 만든 여러 피클에서 분해를 수행하는 데 사용할 수 있습니다. 스트림에서 &lt;code&gt;MARK&lt;/code&gt; opcode로 표시되는 연속 레벨 은 들여 쓰기 &lt;em&gt;레벨&lt;/em&gt; 공백 으로 들여 쓰기됩니다 . &lt;em&gt;annotate에&lt;/em&gt; 0이 아닌 값을 지정 하면 출력의 각 opcode에 간단한 설명이 표시됩니다. &lt;em&gt;주석&lt;/em&gt; 값은 &lt;em&gt;주석&lt;/em&gt; 이 시작되어야하는 열에 대한 힌트로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8dc5698f0af86404dfd9c47dbd73c97838c9a5ae" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, but first calls &lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt;&lt;code&gt;reopenIfNeeded()&lt;/code&gt;&lt;/a&gt; to reopen the file if it has changed.</source>
          <target state="translated">레코드를 파일로 출력하지만 파일이 변경된 경우 먼저 &lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt; &lt;code&gt;reopenIfNeeded()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 파일을 다시 엽니 다.</target>
        </trans-unit>
        <trans-unit id="13942066feebbb621d64a590a698fabefbf9f608" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described above.</source>
          <target state="translated">위에서 설명한대로 롤오버를 위해 레코드를 파일로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="3ca087e0da0b536b5faf375d0b4bf87097dd1943" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described previously.</source>
          <target state="translated">이전에 설명한대로 롤오버를 위해 파일에 레코드를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="c717361b7f3869812b4f8d911cb96fca253dd170" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file.</source>
          <target state="translated">레코드를 파일로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="translated">OverflowError</target>
        </trans-unit>
        <trans-unit id="77d28c858b730f53a08a8fef86fd0e4ba755ebd6" translate="yes" xml:space="preserve">
          <source>Overlay the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, only the overlapping region is copied. This copy is non-destructive, which means that the current background character does not overwrite the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;destwin&lt;/em&gt; 위에 창을 오버레이합니다 . 창의 크기가 같을 필요는 없으며 겹치는 영역 만 복사됩니다. 이 복사본은 비파괴 &lt;em&gt;적이므로&lt;/em&gt; 현재 배경 문자가 &lt;em&gt;destwin&lt;/em&gt; 의 이전 내용을 덮어 쓰지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f325fd31da05c2d6bb7739feb9013527ae1ea6f4" translate="yes" xml:space="preserve">
          <source>Overridable interface to open unknown URL types.</source>
          <target state="translated">알 수없는 URL 유형을 여는 재정의 가능한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="1845ac518f926046d52dd78544dc528bccec6b7b" translate="yes" xml:space="preserve">
          <source>Override &lt;em&gt;object_to_patch.attr_name&lt;/em&gt; with &lt;em&gt;new_value&lt;/em&gt;. Also add cleanup procedure to &lt;em&gt;test_instance&lt;/em&gt; to restore &lt;em&gt;object_to_patch&lt;/em&gt; for &lt;em&gt;attr_name&lt;/em&gt;. The &lt;em&gt;attr_name&lt;/em&gt; should be a valid attribute for &lt;em&gt;object_to_patch&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;object_to_patch.attr_name&lt;/em&gt; 을 &lt;em&gt;new_value로&lt;/em&gt; 대체하십시오 . &lt;em&gt;attr_name에&lt;/em&gt; 대한 &lt;em&gt;object_to_patch&lt;/em&gt; 를 복원하기 위해 정리 절차를 &lt;em&gt;test_instance&lt;/em&gt; 에 추가하십시오 . &lt;em&gt;ATTR_NAME을&lt;/em&gt; 위한 유효한 속성이어야한다 &lt;em&gt;object_to_patch&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7395c655119b2b51ec4e5687f37180aa645f658b" translate="yes" xml:space="preserve">
          <source>Override this in subclasses to use a custom &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; for managing SMTP clients.</source>
          <target state="translated">SMTP 클라이언트 관리에 사용자 정의 &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt; 을 사용하려면 서브 클래스에서이를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8bfc0e1739d6d6ca998aa03c306a8b819a8bc45" translate="yes" xml:space="preserve">
          <source>Override to construct the dialog&amp;rsquo;s interface and return the widget that should have initial focus.</source>
          <target state="translated">대화 상자의 인터페이스를 구성하고 초기 포커스가 있어야하는 위젯을 반환하도록 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="2909e0ed5928a1fd1982ea6f59b67ccfb9f556df" translate="yes" xml:space="preserve">
          <source>Override to implement platform-specific file transmission. This method is called only if the application&amp;rsquo;s return value is an instance of the class specified by the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt;&lt;code&gt;wsgi_file_wrapper&lt;/code&gt;&lt;/a&gt; attribute. It should return a true value if it was able to successfully transmit the file, so that the default transmission code will not be executed. The default implementation of this method just returns a false value.</source>
          <target state="translated">플랫폼 별 파일 전송을 구현하기 위해 재정의합니다. 이 메소드는 응용 프로그램의 리턴 값이 &lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt; &lt;code&gt;wsgi_file_wrapper&lt;/code&gt; &lt;/a&gt; 속성으로 지정된 클래스의 인스턴스 인 경우에만 호출됩니다 . 파일을 성공적으로 전송할 수 있으면 true 값을 반환해야 기본 전송 코드가 실행되지 않습니다. 이 메소드의 기본 구현은 단지 거짓 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="841b35088f13fc1f7d90f1447cd5a3232873d19b" translate="yes" xml:space="preserve">
          <source>Overriding the default filter</source>
          <target state="translated">기본 필터 재정의</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="97e3f82b324e49d5bf704d2fcfc3c81fc3bd1c4d" translate="yes" xml:space="preserve">
          <source>Overview of available Turtle and Screen methods</source>
          <target state="translated">사용 가능한 거북이 및 화면 방법 개요</target>
        </trans-unit>
        <trans-unit id="f63c582120e82f9b40889b2e8060bdd0b30b68ad" translate="yes" xml:space="preserve">
          <source>Overwrite the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, in which case only the overlapping region is copied. This copy is destructive, which means that the current background character overwrites the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;destwin&lt;/em&gt; 위에있는 창을 덮어 씁니다 . 창의 크기가 같을 필요는 없으며,이 경우 겹치는 영역 만 복사됩니다. 이 사본은 파괴적이므로 현재 배경 문자가 &lt;em&gt;destwin&lt;/em&gt; 의 이전 내용을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="32e42d7cf1d8ef849a65b5a64f751115cac94630" translate="yes" xml:space="preserve">
          <source>Owner has execute permission.</source>
          <target state="translated">소유자에게 실행 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3602226bffa2bf2cc1004ff7d38eed8270dc876b" translate="yes" xml:space="preserve">
          <source>Owner has read permission.</source>
          <target state="translated">소유자에게 읽기 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7347b7f7b6214962e6cdded97a0459692c3eb4cb" translate="yes" xml:space="preserve">
          <source>Owner has write permission.</source>
          <target state="translated">소유자에게 쓰기 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="8188efe6d6c2ca935ce480ac15e4f19beaaefd9e" translate="yes" xml:space="preserve">
          <source>P flag</source>
          <target state="translated">P 플래그</target>
        </trans-unit>
        <trans-unit id="19cff3742b4c4e6723d380bd45c0c6a517354983" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Eric Snow</source>
          <target state="translated">Eric Snow가 작성하고 구현 한 PEP</target>
        </trans-unit>
        <trans-unit id="96cc3126da39918697345cd1940161ffe9937238" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Nick Coghlan.</source>
          <target state="translated">Nick Coghlan이 작성하고 구현 한 PEP.</target>
        </trans-unit>
        <trans-unit id="72f66703e54a4ec78b0213c1ad44bcc728157812" translate="yes" xml:space="preserve">
          <source>PEP written by Marc-Andr&amp;eacute; Lemburg.</source>
          <target state="translated">Marc-Andr&amp;eacute; Lemburg가 작성한 PEP.</target>
        </trans-unit>
        <trans-unit id="02c1c27f30006cf59ab74f7a98ff1faa4de16fbf" translate="yes" xml:space="preserve">
          <source>PI element factory. This factory function creates a special element that will be serialized as an XML processing instruction. &lt;em&gt;target&lt;/em&gt; is a string containing the PI target. &lt;em&gt;text&lt;/em&gt; is a string containing the PI contents, if given. Returns an element instance, representing a processing instruction.</source>
          <target state="translated">PI 요소 공장. 이 팩토리 함수는 XML 처리 명령으로 직렬화 될 특수 요소를 작성합니다. &lt;em&gt;target&lt;/em&gt; 은 PI 대상을 포함하는 문자열입니다. &lt;em&gt;텍스트&lt;/em&gt; 는 주어진 경우 PI 내용을 포함하는 문자열입니다. 처리 명령을 나타내는 요소 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="645fd7e9caac181870f9d1dede2beb5dfad6f364" translate="yes" xml:space="preserve">
          <source>PKCS #5: Password-Based Cryptography Specification Version 2.0</source>
          <target state="translated">PKCS # 5 : 비밀번호 기반 암호화 사양 버전 2.0</target>
        </trans-unit>
        <trans-unit id="6a6c80bd7a477c267f845a1634bbf726b750cfed" translate="yes" xml:space="preserve">
          <source>PKZIP Application Note</source>
          <target state="translated">PKZIP 애플리케이션 노트</target>
        </trans-unit>
        <trans-unit id="7ed081aaacf45dc799e1d758e08c1fee43fa6b4d" translate="yes" xml:space="preserve">
          <source>PKZIP version needed to extract archive.</source>
          <target state="translated">아카이브를 추출하려면 PKZIP 버전이 필요했습니다.</target>
        </trans-unit>
        <trans-unit id="9781d1150340a69a33be8618584c8cba317bce94" translate="yes" xml:space="preserve">
          <source>PKZIP version which created ZIP archive.</source>
          <target state="translated">ZIP 아카이브를 만든 PKZIP 버전.</target>
        </trans-unit>
        <trans-unit id="a686245107e7535edbc3e18f215337676e95a611" translate="yes" xml:space="preserve">
          <source>PList manual page</source>
          <target state="translated">PList 매뉴얼 페이지</target>
        </trans-unit>
        <trans-unit id="cc56431d28166c67feef84f6c92e21eabfa5d1ca" translate="yes" xml:space="preserve">
          <source>POP (Post Office Protocol) client</source>
          <target state="translated">POP (우체국 프로토콜) 클라이언트</target>
        </trans-unit>
        <trans-unit id="6529429ecfa1cc0534c3143968006f04304bba59" translate="yes" xml:space="preserve">
          <source>POP3 Example</source>
          <target state="translated">POP3 예</target>
        </trans-unit>
        <trans-unit id="ccd83f40f38d28ca57da516a478df1ed22acb88c" translate="yes" xml:space="preserve">
          <source>POP3 Objects</source>
          <target state="translated">POP3 객체</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="d1e7dc927b5056ab603c7e76822c32304531f8c5" translate="yes" xml:space="preserve">
          <source>POSIX.1-1988 (ustar) format.</source>
          <target state="translated">POSIX.1-1988 (ustar) 형식.</target>
        </trans-unit>
        <trans-unit id="91bc95b98cf54c5ceaa0e0d916776762d8ddd754" translate="yes" xml:space="preserve">
          <source>POSIX.1-2001 (pax) format.</source>
          <target state="translated">POSIX.1-2001 (pax) 형식.</target>
        </trans-unit>
        <trans-unit id="d53cc7738d8a17f007787e1cd3f918a4f71cfeb3" translate="yes" xml:space="preserve">
          <source>PS C:&amp;gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</source>
          <target state="translated">PS C :&amp;gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</target>
        </trans-unit>
        <trans-unit id="5673e51c6ba031bafbab056cb4b8681674c77b64" translate="yes" xml:space="preserve">
          <source>PS C:\&amp;gt; &amp;lt;venv&amp;gt;\Scripts\Activate.ps1</source>
          <target state="translated">PS C : \&amp;gt; &amp;lt;venv&amp;gt; \ Scripts \ Activate.ps1</target>
        </trans-unit>
        <trans-unit id="edb353c498914363a5fa96fe5426703486d738f0" translate="yes" xml:space="preserve">
          <source>PYC Repository Directories</source>
          <target state="translated">PYC 리포지토리 디렉토리</target>
        </trans-unit>
        <trans-unit id="5fa81009e6c318f633d81b3520255a8c252b4939" translate="yes" xml:space="preserve">
          <source>P_NOWAIT example:</source>
          <target state="translated">P_NOWAIT 예 :</target>
        </trans-unit>
        <trans-unit id="c71b9bdfc8cd53509b44f69906b2d09fc5c0a78b" translate="yes" xml:space="preserve">
          <source>P_WAIT example:</source>
          <target state="translated">P_WAIT 예 :</target>
        </trans-unit>
        <trans-unit id="1ca4f74cd6ff2ed6c937c0943f68809fb32bebd2" translate="yes" xml:space="preserve">
          <source>Pack the values &lt;em&gt;v1&lt;/em&gt;, &lt;em&gt;v2&lt;/em&gt;, &amp;hellip; according to the format string &lt;em&gt;format&lt;/em&gt; and write the packed bytes into the writable buffer &lt;em&gt;buffer&lt;/em&gt; starting at position &lt;em&gt;offset&lt;/em&gt;. Note that &lt;em&gt;offset&lt;/em&gt; is a required argument.</source>
          <target state="translated">형식 문자열 &lt;em&gt;형식&lt;/em&gt; 에 따라 값 &lt;em&gt;v1&lt;/em&gt; , &lt;em&gt;v2&lt;/em&gt; ,&amp;hellip;를 압축하고 압축 된 바이트를 위치 &lt;em&gt;오프셋&lt;/em&gt; 에서 시작 하여 쓰기 가능한 버퍼 &lt;em&gt;버퍼에&lt;/em&gt; 씁니다 . 참고 &lt;em&gt;오프셋은&lt;/em&gt; 필수 인수입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e600670fc903f64302f254dffcdf0dd2910c01d" translate="yes" xml:space="preserve">
          <source>Pack up a directory into an archive, and run it.</source>
          <target state="translated">디렉토리를 아카이브에 압축하여 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="cf25aa751e3519d8d8bc5c6250a1c8496de96180" translate="yes" xml:space="preserve">
          <source>Package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;dateutil&lt;/a&gt;</source>
          <target state="translated">패키지 &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;날짜 유틸리티&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0ba7cbe4550748395502e251e976a43c2306e54" translate="yes" xml:space="preserve">
          <source>Package &lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;tzdata&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;tzdata&lt;/a&gt; 패키지</target>
        </trans-unit>
        <trans-unit id="0cad03b3193d6e7cd78f44b1238ea56433fd311d" translate="yes" xml:space="preserve">
          <source>Package not installed</source>
          <target state="translated">패키지가 설치되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="3880af2ba3f21c17c8cf074ba063ffeb33288fb9" translate="yes" xml:space="preserve">
          <source>Package the application using:</source>
          <target state="translated">다음을 사용하여 애플리케이션을 패키지하십시오.</target>
        </trans-unit>
        <trans-unit id="6b5cd295b63824cbc62d1acfcbff85265b721c98" translate="yes" xml:space="preserve">
          <source>Packages specification</source>
          <target state="translated">패키지 사양</target>
        </trans-unit>
        <trans-unit id="0122990cae2223f01ba8fc059a08202e3a680d47" translate="yes" xml:space="preserve">
          <source>Packed binary storage of homogeneous data.</source>
          <target state="translated">동종 데이터의 팩 바이너리 저장.</target>
        </trans-unit>
        <trans-unit id="a1eee81646800c1c1945b0200d9c5a077bcb9fa3" translate="yes" xml:space="preserve">
          <source>Packer Objects</source>
          <target state="translated">패커 객체</target>
        </trans-unit>
        <trans-unit id="09ab562ad00b6e394a3efca9cba8a8ba6444e5b3" translate="yes" xml:space="preserve">
          <source>Packer Options</source>
          <target state="translated">패커 옵션</target>
        </trans-unit>
        <trans-unit id="e9c9758effdf5587f78f4781fe65b4bc712558b7" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of External Data Representation (XDR) data as used in some remote procedure call systems.</source>
          <target state="translated">일부 원격 프로 시저 호출 시스템에서 사용되는 외부 데이터 표현 (XDR) 데이터의 포장 및 포장 풀기.</target>
        </trans-unit>
        <trans-unit id="ba61d74eba3e7429d5d2efb23fea14de5a4a2686" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of XDR data.</source>
          <target state="translated">XDR 데이터 포장 및 포장 풀기.</target>
        </trans-unit>
        <trans-unit id="ff9ec2ff343ac87044954920f5478e697bc42222" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of heterogeneous binary data.</source>
          <target state="translated">이종 이진 데이터의 압축 및 포장 풀기</target>
        </trans-unit>
        <trans-unit id="2fc884e6acb1b6b441cecf6cac548bb46376e49d" translate="yes" xml:space="preserve">
          <source>Packs a &lt;em&gt;list&lt;/em&gt; of homogeneous items. This method is useful for lists with an indeterminate size; i.e. the size is not available until the entire list has been walked. For each item in the list, an unsigned integer &lt;code&gt;1&lt;/code&gt; is packed first, followed by the data value from the list. &lt;em&gt;pack_item&lt;/em&gt; is the function that is called to pack the individual item. At the end of the list, an unsigned integer &lt;code&gt;0&lt;/code&gt; is packed.</source>
          <target state="translated">팩 &lt;em&gt;목록&lt;/em&gt; 균일 항목을. 이 방법은 크기가 불확실한 목록에 유용합니다. 즉, 전체 목록이 나올 때까지 크기를 사용할 수 없습니다. 목록의 각 항목에 대해 부호없는 정수 &lt;code&gt;1&lt;/code&gt; 이 먼저 압축 된 다음 목록의 데이터 값이 뒤 따릅니다. &lt;em&gt;pack_item&lt;/em&gt; 은 개별 항목을 포장하기 위해 호출되는 함수입니다. 목록의 끝에 부호없는 정수 &lt;code&gt;0&lt;/code&gt; 이 압축됩니다.</target>
        </trans-unit>
        <trans-unit id="b540c95e1283f4fae5fed2992b4cde688a1f8bd0" translate="yes" xml:space="preserve">
          <source>Packs a fixed length list (&lt;em&gt;array&lt;/em&gt;) of homogeneous items. &lt;em&gt;n&lt;/em&gt; is the length of the list; it is &lt;em&gt;not&lt;/em&gt; packed into the buffer, but a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception is raised if &lt;code&gt;len(array)&lt;/code&gt; is not equal to &lt;em&gt;n&lt;/em&gt;. As above, &lt;em&gt;pack_item&lt;/em&gt; is the function used to pack each element.</source>
          <target state="translated">동종 항목 의 고정 길이 목록 ( &lt;em&gt;배열&lt;/em&gt; )을 압축합니다. &lt;em&gt;n&lt;/em&gt; 은리스트의 길이이며; 그것은되어 &lt;em&gt;있지&lt;/em&gt; 버퍼로 포장되지만 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 경우 예외가 발생 &lt;code&gt;len(array)&lt;/code&gt; 동일하지 않은 &lt;em&gt;N&lt;/em&gt; . 위와 같이 &lt;em&gt;pack_item&lt;/em&gt; 은 각 요소를 &lt;em&gt;압축&lt;/em&gt; 하는 데 사용되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="993b3f1f48130f3d5499e4bb61480af1f43780a6" translate="yes" xml:space="preserve">
          <source>Packs a fixed length opaque data stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; &lt;/a&gt; 과 유사하게 고정 길이의 불투명 한 데이터 스트림을 압축 합니다.</target>
        </trans-unit>
        <trans-unit id="85b656f18a0f07689f2f15d99d57287804c9ec23" translate="yes" xml:space="preserve">
          <source>Packs a fixed length string, &lt;em&gt;s&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; is the length of the string but it is &lt;em&gt;not&lt;/em&gt; packed into the data buffer. The string is padded with null bytes if necessary to guaranteed 4 byte alignment.</source>
          <target state="translated">고정 길이 문자열 &lt;em&gt;s를 압축&lt;/em&gt; 합니다. &lt;em&gt;n&lt;/em&gt; 은 문자열의 길이이지만 데이터 버퍼에 압축 &lt;em&gt;되지 않습니다&lt;/em&gt; . 필요한 경우 4 바이트 정렬을 보장하기 위해 문자열에 널 바이트가 채워집니다.</target>
        </trans-unit>
        <trans-unit id="d35f3e8d894947627ebea046d9379e59367e078c" translate="yes" xml:space="preserve">
          <source>Packs a variable length &lt;em&gt;list&lt;/em&gt; of homogeneous items. First, the length of the list is packed as an unsigned integer, then each element is packed as in &lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt;&lt;code&gt;pack_farray()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">동종 항목 의 가변 길이 &lt;em&gt;목록&lt;/em&gt; 을 압축합니다. 먼저 목록의 길이는 부호없는 정수로 압축 된 다음 각 요소는 위의 &lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt; &lt;code&gt;pack_farray()&lt;/code&gt; &lt;/a&gt; 에서와 같이 압축됩니다 .</target>
        </trans-unit>
        <trans-unit id="30061d9c00e384a6f4b04e1bdfb6f26cbfd0caf4" translate="yes" xml:space="preserve">
          <source>Packs a variable length byte stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt; 과 유사하게 가변 길이 바이트 스트림을 압축 합니다.</target>
        </trans-unit>
        <trans-unit id="1f5fb0dbfad21f7013015f277c5718bd76afec8f" translate="yes" xml:space="preserve">
          <source>Packs a variable length opaque data string, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt; 과 유사하게 가변 길이의 불투명 데이터 문자열을 압축 합니다.</target>
        </trans-unit>
        <trans-unit id="f73c74419bc7c46b6f154ecf0c655bc164189afb" translate="yes" xml:space="preserve">
          <source>Packs a variable length string, &lt;em&gt;s&lt;/em&gt;. The length of the string is first packed as an unsigned integer, then the string data is packed with &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">가변 길이 문자열 &lt;em&gt;s를 압축&lt;/em&gt; 합니다. 문자열의 길이는 먼저 부호없는 정수로 압축 된 다음 문자열 데이터는 &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; &lt;/a&gt; 압축됩니다 .</target>
        </trans-unit>
        <trans-unit id="298af3b97feaea337e720a2944c01237f7d660aa" translate="yes" xml:space="preserve">
          <source>Packs the double-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">배정 밀도 부동 소수점 숫자 &lt;em&gt;값을&lt;/em&gt; 압축 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b9506e9ead7ad8bf096843e59e92af3f3db699fd" translate="yes" xml:space="preserve">
          <source>Packs the single-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">단 정밀도 부동 소수점 숫자 &lt;em&gt;값을&lt;/em&gt; 압축 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a9c02b60fbcf23b1dbfa68021d80be67258ce8" translate="yes" xml:space="preserve">
          <source>Pad byte needed if &lt;em&gt;n&lt;/em&gt; is odd and chunk alignment is used</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt; 이 홀수이고 청크 정렬이 사용되는 경우 패드 바이트 필요</target>
        </trans-unit>
        <trans-unit id="be6aec49e5262973160789fd096af12232d8eda6" translate="yes" xml:space="preserve">
          <source>Padding is only automatically added between successive structure members. No padding is added at the beginning or the end of the encoded struct.</source>
          <target state="translated">패딩은 연속 구조 멤버간에 만 자동으로 추가됩니다. 인코딩 된 구조체의 시작 또는 끝에 패딩이 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eebe8b4d277848e1ec370986e82d2178731c6293" translate="yes" xml:space="preserve">
          <source>Page Down</source>
          <target state="translated">Page Down</target>
        </trans-unit>
        <trans-unit id="5c77b5722c41b6f199f92efb5977aba4430b61c9" translate="yes" xml:space="preserve">
          <source>Page Up</source>
          <target state="translated">페이지 위로</target>
        </trans-unit>
        <trans-unit id="7cba3e212dcc3d05c7ed8450a9553450544ee41d" translate="yes" xml:space="preserve">
          <source>PageDown</source>
          <target state="translated">PageDown</target>
        </trans-unit>
        <trans-unit id="f37641df1bc969ebc2d5a09ecf4d6e7b0f343faa" translate="yes" xml:space="preserve">
          <source>PageUp</source>
          <target state="translated">PageUp</target>
        </trans-unit>
        <trans-unit id="e7d3c63de7852b4a6801684fea08c43e4215eede" translate="yes" xml:space="preserve">
          <source>Paint at most &lt;em&gt;n&lt;/em&gt; characters of the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">&lt;em&gt;attr&lt;/em&gt; 속성 을 사용하여 문자열 &lt;em&gt;str&lt;/em&gt; 에서 &lt;code&gt;(y, x)&lt;/code&gt; 의 최대 &lt;em&gt;n&lt;/em&gt; 문자를 페인트하여 이전에 디스플레이의 모든 것을 덮어 씁니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d99809c709d2c937bd8fcaf22711d9e1f53af193" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, moving the line from position &lt;em&gt;x&lt;/em&gt; right by one character.</source>
          <target state="translated">속성 &lt;em&gt;attr을 사용&lt;/em&gt; 하여 문자 &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; 를 &lt;em&gt;칠하여&lt;/em&gt; 위치 &lt;em&gt;x&lt;/em&gt; 에서 한 문자 씩 오른쪽으로 줄을 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5c1c8e066e1cae22dc65f1a6de4d12598fc421b" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting any character previously painted at that location. By default, the character position and attributes are the current settings for the window object.</source>
          <target state="translated">&lt;em&gt;attr&lt;/em&gt; 속성을 사용 하여 &lt;code&gt;(y, x)&lt;/code&gt; 문자 &lt;em&gt;ch&lt;/em&gt; 를 페인트하고 해당 위치에 이전에 페인트 한 모든 문자를 덮어 씁니다. 기본적으로 문자 위치와 속성은 창 개체의 현재 설정입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24af2750a2e63948648310692a6b52c55421e98d" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting any character previously painter at that location. By default, the character position and attributes are the current settings for the window object.</source>
          <target state="translated">속성 &lt;em&gt;attr을 사용&lt;/em&gt; 하여 문자 &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; 를 페인트하여 해당 위치에서 이전에 화가가었던 문자를 덮어 씁니다. 기본적으로 문자 위치 및 속성은 창 객체의 현재 설정입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d619bb80867eab45009bfb84b6b417b3ca8fc2c3" translate="yes" xml:space="preserve">
          <source>Paint the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">속성 &lt;em&gt;attr을 사용&lt;/em&gt; 하여 문자열 &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; 를 페인트하여 이전에 디스플레이의 모든 것을 겹쳐 씁니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e844933b4932ee3937ee43d5f9fbf5690450c6f9" translate="yes" xml:space="preserve">
          <source>Panel Objects</source>
          <target state="translated">패널 객체</target>
        </trans-unit>
        <trans-unit id="fa3f038d65d1a64b9f30b8194e1110843ad0ed17" translate="yes" xml:space="preserve">
          <source>Panel objects have the following methods:</source>
          <target state="translated">패널 객체에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="48250a21bb2f011a6dfba4c5d7e1a9a1c9fdc072" translate="yes" xml:space="preserve">
          <source>Panel objects, as returned by &lt;a href=&quot;#curses.panel.new_panel&quot;&gt;&lt;code&gt;new_panel()&lt;/code&gt;&lt;/a&gt; above, are windows with a stacking order. There&amp;rsquo;s always a window associated with a panel which determines the content, while the panel methods are responsible for the window&amp;rsquo;s depth in the panel stack.</source>
          <target state="translated">위의 &lt;a href=&quot;#curses.panel.new_panel&quot;&gt; &lt;code&gt;new_panel()&lt;/code&gt; &lt;/a&gt; 의해 반환되는 패널 객체 는 스택 순서가있는 창입니다. 내용을 결정하는 패널과 관련된 창이 항상 있으며 패널 방법은 패널 스택에서 창의 깊이를 담당합니다.</target>
        </trans-unit>
        <trans-unit id="fc975aa48f15e94a28935c5e885e735c1b69bb7b" translate="yes" xml:space="preserve">
          <source>Panels are windows with the added feature of depth, so they can be stacked on top of each other, and only the visible portions of each window will be displayed. Panels can be added, moved up or down in the stack, and removed.</source>
          <target state="translated">패널은 깊이 기능이 추가 된 창이므로 서로 쌓을 수 있으며 각 창의 보이는 부분 만 표시됩니다. 스택에서 패널을 추가, 위 또는 아래로 이동 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="312270aaaff20da30c74f328ff0f10c9927c4efe" translate="yes" xml:space="preserve">
          <source>Paragraph Separator</source>
          <target state="translated">단락 구분자</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="41656f6d37dec30feb05e7aa728844b98293f13f" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;arg&lt;/em&gt; should be a &lt;em&gt;key&lt;/em&gt;-to-&lt;em&gt;message&lt;/em&gt; mapping or an iterable of (&lt;em&gt;key&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;) pairs. Updates the mailbox so that, for each given &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt;, the message corresponding to &lt;em&gt;key&lt;/em&gt; is set to &lt;em&gt;message&lt;/em&gt; as if by using &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;. As with &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, each &lt;em&gt;key&lt;/em&gt; must already correspond to a message in the mailbox or else a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception will be raised, so in general it is incorrect for &lt;em&gt;arg&lt;/em&gt; to be a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">매개 변수 &lt;em&gt;arg&lt;/em&gt; 는 &lt;em&gt;키&lt;/em&gt; - &lt;em&gt;메시지&lt;/em&gt; 맵핑 또는 반복 가능한 ( &lt;em&gt;key&lt;/em&gt; , &lt;em&gt;message&lt;/em&gt; ) 쌍 이어야합니다 . 그 때문에, 메일 박스, 각각의 주어진 갱신을위한 &lt;em&gt;키&lt;/em&gt; 와 &lt;em&gt;메시지&lt;/em&gt; 에 대응하는 메시지 &lt;em&gt;키&lt;/em&gt; 에 설정되어있는 &lt;em&gt;메시지&lt;/em&gt; 처럼 사용 &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; 과 마찬가지로 각 &lt;em&gt;키&lt;/em&gt; 는 사서함의 메시지와 이미 일치해야합니다. 그렇지 않으면 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 예외가 발생하므로 일반적으로 &lt;em&gt;arg&lt;/em&gt; 가 &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 인스턴스 가되는 것은 올바르지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="59c4a01bc4aac90732e66b0bec359511c54291d4" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance, an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, a string, a byte string, or a file-like object (which should be open in binary mode). If &lt;em&gt;message&lt;/em&gt; is an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass (e.g., if it&amp;rsquo;s an &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; instance and this is an &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; instance), its format-specific information is used. Otherwise, reasonable defaults for format-specific information are used.</source>
          <target state="translated">매개 변수 &lt;em&gt;메시지&lt;/em&gt; 는 &lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 인스턴스, &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt; 인스턴스, 문자열, 바이트 문자열 또는 파일과 유사한 객체 (바이너리 모드로 열려야 함) 일 수 있습니다. 경우 &lt;em&gt;메시지가&lt;/em&gt; 적절한 형식 별의의 인스턴스 &lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 서브 클래스 (그것이 있다면 예를 들어, &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; 의&lt;/a&gt; 인스턴스가이가있다 &lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt; 예), 그 형식 별 정보가 사용됩니다. 그렇지 않으면 형식 별 정보에 대한 적절한 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="881bf20a17cb18ef7df20e69e4894f8e515d8f08" translate="yes" xml:space="preserve">
          <source>Parameter keys are always compared case insensitively. The return value can either be a string, or a 3-tuple if the parameter was &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; encoded. When it&amp;rsquo;s a 3-tuple, the elements of the value are of the form &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt;. Note that both &lt;code&gt;CHARSET&lt;/code&gt; and &lt;code&gt;LANGUAGE&lt;/code&gt; can be &lt;code&gt;None&lt;/code&gt;, in which case you should consider &lt;code&gt;VALUE&lt;/code&gt; to be encoded in the &lt;code&gt;us-ascii&lt;/code&gt; charset. You can usually ignore &lt;code&gt;LANGUAGE&lt;/code&gt;.</source>
          <target state="translated">매개 변수 키는 항상 대소 문자를 구분하지 않고 비교됩니다. 매개 변수가 &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231로&lt;/strong&gt;&lt;/a&gt; 인코딩 된 경우 리턴 값은 문자열이거나 3 개의 튜플 일 수 있습니다. 3 튜플 인 경우 값의 요소는 &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt; 입니다. 참고 둘 것을 &lt;code&gt;CHARSET&lt;/code&gt; 과 &lt;code&gt;LANGUAGE&lt;/code&gt; 될 수 &lt;code&gt;None&lt;/code&gt; 고려해야하는 경우, &lt;code&gt;VALUE&lt;/code&gt; 에서 인코딩 할 &lt;code&gt;us-ascii&lt;/code&gt; 문자 세트. 일반적으로 &lt;code&gt;LANGUAGE&lt;/code&gt; 를 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33739f0fe85843a995275178b4ae7686f3467b90" translate="yes" xml:space="preserve">
          <source>Parameter objects are &lt;em&gt;immutable&lt;/em&gt;. Instead of modifying a Parameter object, you can use &lt;a href=&quot;#inspect.Parameter.replace&quot;&gt;&lt;code&gt;Parameter.replace()&lt;/code&gt;&lt;/a&gt; to create a modified copy.</source>
          <target state="translated">매개 변수 객체는 &lt;em&gt;변경할 수 없습니다&lt;/em&gt; . Parameter 객체를 수정하는 대신 &lt;a href=&quot;#inspect.Parameter.replace&quot;&gt; &lt;code&gt;Parameter.replace()&lt;/code&gt; &lt;/a&gt; 를 사용하여 수정 된 복사본을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="a92b79dc56bbd97fdb6a07c22c916ccfa7aee2d6" translate="yes" xml:space="preserve">
          <source>Parameters for last path element</source>
          <target state="translated">마지막 경로 요소의 매개 변수</target>
        </trans-unit>
        <trans-unit id="759e2eb2d1daa387faedef08a108f8727c12a8ef" translate="yes" xml:space="preserve">
          <source>Parameters for the &lt;a href=&quot;#os.getpriority&quot;&gt;&lt;code&gt;getpriority()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.setpriority&quot;&gt;&lt;code&gt;setpriority()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">&lt;a href=&quot;#os.getpriority&quot;&gt; &lt;code&gt;getpriority()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.setpriority&quot;&gt; &lt;code&gt;setpriority()&lt;/code&gt; &lt;/a&gt; 함수의 매개 변수</target>
        </trans-unit>
        <trans-unit id="838e55f08d1ff41fab5268cb5f1dd771e877ca64" translate="yes" xml:space="preserve">
          <source>Parameters not specified keep current settings, except &lt;code&gt;errors='strict'&lt;/code&gt; is used when &lt;em&gt;encoding&lt;/em&gt; is specified but &lt;em&gt;errors&lt;/em&gt; is not specified.</source>
          <target state="translated">지정되지 않은 매개 변수 는 &lt;em&gt;인코딩&lt;/em&gt; 이 지정되었지만 &lt;em&gt;오류&lt;/em&gt; 가 지정되지 않은 경우 &lt;code&gt;errors='strict'&lt;/code&gt; 가 사용되는 것을 제외하고 현재 설정을 유지 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64930b4862237d51573ab5db32a04df08eaab71b" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.lseek&quot;&gt;&lt;code&gt;lseek()&lt;/code&gt;&lt;/a&gt; function. Their values are 0, 1, and 2, respectively.</source>
          <target state="translated">&lt;a href=&quot;#os.lseek&quot;&gt; &lt;code&gt;lseek()&lt;/code&gt; &lt;/a&gt; 함수 에 대한 매개 변수 입니다. 해당 값은 각각 0, 1 및 2입니다.</target>
        </trans-unit>
        <trans-unit id="574eadd03549c46ff070bfc9b5c4604fe3ba3d9e" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt; function, if the implementation supports them.</source>
          <target state="translated">구현에서 지원하는 경우 &lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; &lt;/a&gt; 함수 에 대한 매개 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="bb65093f645552f1d147225f5339fb4c0d809a51" translate="yes" xml:space="preserve">
          <source>Pareto distribution. &lt;em&gt;alpha&lt;/em&gt; is the shape parameter.</source>
          <target state="translated">파레토 분포. &lt;em&gt;alpha&lt;/em&gt; 는 모양 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="a86e41d6f2a5d68c53f3894fcb12cd2f2075fd69" translate="yes" xml:space="preserve">
          <source>Parse XML data reading from the object &lt;em&gt;file&lt;/em&gt;. &lt;em&gt;file&lt;/em&gt; only needs to provide the &lt;code&gt;read(nbytes)&lt;/code&gt; method, returning the empty string when there&amp;rsquo;s no more data.</source>
          <target state="translated">객체 &lt;em&gt;파일&lt;/em&gt; 에서 읽은 XML 데이터를 구문 분석 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;파일&lt;/em&gt; 은 더 이상 데이터가 없을 때 빈 문자열을 반환 하는 &lt;code&gt;read(nbytes)&lt;/code&gt; 메소드 만 제공하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="cd6d8291ae51a08ad977274c0372200b08672145" translate="yes" xml:space="preserve">
          <source>Parse a &lt;code&gt;config.h&lt;/code&gt;-style file.</source>
          <target state="translated">&lt;code&gt;config.h&lt;/code&gt; 스타일 파일을 구문 분석 하십시오.</target>
        </trans-unit>
        <trans-unit id="63c3905d8ecd87702e0ce0c0330bac77c66e32c8" translate="yes" xml:space="preserve">
          <source>Parse a MIME header (such as &lt;em&gt;Content-Type&lt;/em&gt;) into a main value and a dictionary of parameters.</source>
          <target state="translated">MIME 헤더 (예 : &lt;em&gt;Content-Type&lt;/em&gt; )를 기본 값과 매개 변수 사전으로 구문 분석하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff6e1df4dd4d3597f09c70a2e424eab21b6eff12" translate="yes" xml:space="preserve">
          <source>Parse a URL into six components, returning a 6-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;. This corresponds to the general structure of a URL: &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt;. Each tuple item is a string, possibly empty. The components are not broken up in smaller parts (for example, the network location is a single string), and % escapes are not expanded. The delimiters as shown above are not part of the result, except for a leading slash in the &lt;em&gt;path&lt;/em&gt; component, which is retained if present. For example:</source>
          <target state="translated">URL을 6 개의 구성 요소로 구문 분석하여 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;tuple이라는&lt;/a&gt; 6 개 항목을 리턴하십시오 . URL의 일반적인 구조 인 &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt; 합니다. 각 튜플 항목은 문자열이며 비어있을 수 있습니다. 구성 요소가 더 작은 부분으로 나뉘 지 않고 (예 : 네트워크 위치가 단일 문자열) 이스케이프가 확장되지 않습니다. 위에 표시된 분리 문자는 &lt;em&gt;경로&lt;/em&gt; 구성 요소 의 선행 슬래시를 제외하고 결과의 일부가 아니며 존재하는 경우 유지됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="875759505148a363c4ac44634ad65285c9f5870a" translate="yes" xml:space="preserve">
          <source>Parse a URL into six components, returning a 6-item &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;. This corresponds to the general structure of a URL: &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt;. Each tuple item is a string, possibly empty. The components are not broken up into smaller parts (for example, the network location is a single string), and % escapes are not expanded. The delimiters as shown above are not part of the result, except for a leading slash in the &lt;em&gt;path&lt;/em&gt; component, which is retained if present. For example:</source>
          <target state="translated">URL을 6 개의 구성 요소로 구문 분석하여 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;tuple이라는&lt;/a&gt; 6 개 항목을 반환합니다 . 이는 URL의 일반적인 구조에 해당합니다 : &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt; . 각 튜플 항목은 문자열이며 비어있을 수 있습니다. 구성 요소는 더 작은 부분으로 분할되지 않으며 (예 : 네트워크 위치는 단일 문자열 임) % 이스케이프는 확장되지 않습니다. 위에 표시된 구분 기호는 &lt;em&gt;경로&lt;/em&gt; 구성 요소 의 선행 슬래시를 제외하고 결과의 일부가 아닙니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="9f65d7a6a5967be810a7b45cc7fc1983d29ae04a" translate="yes" xml:space="preserve">
          <source>Parse a query in the environment or from a file (the file defaults to &lt;code&gt;sys.stdin&lt;/code&gt;). The &lt;em&gt;keep_blank_values&lt;/em&gt; and &lt;em&gt;strict_parsing&lt;/em&gt; parameters are passed to &lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt;&lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">환경 또는 파일에서 쿼리를 구문 분석합니다 (파일의 기본값은 &lt;code&gt;sys.stdin&lt;/code&gt; ). &lt;em&gt;keep_blank_values&lt;/em&gt; 및 &lt;em&gt;strict_parsing&lt;/em&gt; 파라미터에 전달 &lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt; &lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt; &lt;/a&gt; 불변.</target>
        </trans-unit>
        <trans-unit id="83ffcfafda3d2a633dbce55a15d332a9d456e01a" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a dictionary. The dictionary keys are the unique query variable names and the values are lists of values for each name.</source>
          <target state="translated">문자열 인수 ( &lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt; 유형의 데이터)로 제공된 쿼리 문자열을 구문 분석하십시오 . 데이터는 사전으로 반환됩니다. 사전 키는 고유 한 쿼리 변수 이름이고 값은 각 이름의 값 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3f02af97808b4370f19a36ce2159e13d76d32265" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a list of name, value pairs.</source>
          <target state="translated">문자열 인수 ( &lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt; 유형의 데이터)로 제공된 쿼리 문자열을 구문 분석하십시오 . 데이터는 이름, 값 쌍의 목록으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7f5435496a6de34302e5162e2765e6d03eb242ff" translate="yes" xml:space="preserve">
          <source>Parse a string into a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object given a corresponding format</source>
          <target state="translated">해당 형식이 지정된 문자열을 &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 객체 로 구문 분석</target>
        </trans-unit>
        <trans-unit id="ddb7f7e51791d0d0bb53020b57f543d16b666e17" translate="yes" xml:space="preserve">
          <source>Parse a string representing a time according to a format. The return value is a &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; as returned by &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식에 따라 시간을 나타내는 문자열을 구문 분석하십시오. 리턴 값은 &lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt; 의해 리턴되는 &lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e9b3948a49b13fe039282714fef7eb741666870" translate="yes" xml:space="preserve">
          <source>Parse address &amp;ndash; which should be the value of some address-containing field such as &lt;em&gt;To&lt;/em&gt; or &lt;em&gt;Cc&lt;/em&gt; &amp;ndash; into its constituent &lt;em&gt;realname&lt;/em&gt; and &lt;em&gt;email address&lt;/em&gt; parts. Returns a tuple of that information, unless the parse fails, in which case a 2-tuple of &lt;code&gt;('', '')&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;em&gt;To&lt;/em&gt; 또는 &lt;em&gt;Cc&lt;/em&gt; 와 같은 일부 주소 포함 필드의 값이어야하는 주소를 구성 &lt;em&gt;실제 이름&lt;/em&gt; 과 &lt;em&gt;전자 메일 주소&lt;/em&gt; 부분으로 구문 분석합니다 . 구문 분석에 실패하지 않는 한 해당 정보의 튜플을 반환합니다.이 경우 2 개의 튜플 &lt;code&gt;('', '')&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7bfb97eef332ed35c993d49a75d83bad160155a8" translate="yes" xml:space="preserve">
          <source>Parse an IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; string and return corresponding local time. The return value is a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; tuple or &lt;code&gt;None&lt;/code&gt; if the string has wrong format.</source>
          <target state="translated">IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; 문자열을 구문 분석하고 해당 현지 시간을 리턴하십시오. 반환 값은 &lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt; 튜플이거나 문자열의 형식이 잘못된 경우 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="77b4c57e66b64e4534f7423e678b54e99d6e7ad3" translate="yes" xml:space="preserve">
          <source>Parse configuration data from a string.</source>
          <target state="translated">문자열에서 구성 데이터를 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="34ec846a5cc0bb5312516a5590e119f9b3d82572" translate="yes" xml:space="preserve">
          <source>Parse every input line as separate JSON object.</source>
          <target state="translated">모든 입력 행을 별도의 JSON 객체로 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="92f18fdd6a043541a20dbdffd6b3b6b5c6b25947" translate="yes" xml:space="preserve">
          <source>Parse input of type &lt;em&gt;multipart/form-data&lt;/em&gt; (for file uploads). Arguments are &lt;em&gt;fp&lt;/em&gt; for the input file, &lt;em&gt;pdict&lt;/em&gt; for a dictionary containing other parameters in the &lt;em&gt;Content-Type&lt;/em&gt; header, and &lt;em&gt;encoding&lt;/em&gt;, the request encoding.</source>
          <target state="translated">&lt;em&gt;multipart / form-data&lt;/em&gt; 유형의 입력을 구문 분석하십시오 (파일 업로드 용). 인수는 &lt;em&gt;FP&lt;/em&gt; 입력 파일, &lt;em&gt;pdict&lt;/em&gt; 다른 파라미터를 포함하는 사전에 대한 &lt;em&gt;컨텐츠 유형&lt;/em&gt; 헤더 및 &lt;em&gt;인코딩&lt;/em&gt; 요청 인코딩.</target>
        </trans-unit>
        <trans-unit id="b48fc13fc5d8b028c399137b19563a9d740767c5" translate="yes" xml:space="preserve">
          <source>Parse the headers from a file pointer &lt;em&gt;fp&lt;/em&gt; representing a HTTP request/response. The file has to be a &lt;code&gt;BufferedIOBase&lt;/code&gt; reader (i.e. not text) and must provide a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; style header.</source>
          <target state="translated">HTTP 요청 / 응답을 나타내는 파일 포인터 &lt;em&gt;fp&lt;/em&gt; 에서 헤더를 구문 분석하십시오 . 파일은 텍스트가 아닌 &lt;code&gt;BufferedIOBase&lt;/code&gt; 리더 여야하며 유효한 &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; 스타일 헤더를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6322b351357533e4088cb2f327b3892c078e67a0" translate="yes" xml:space="preserve">
          <source>Parse the source into an AST node. Equivalent to &lt;code&gt;compile(source,
filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt;.</source>
          <target state="translated">소스를 AST 노드로 구문 분석하십시오. 등가 &lt;code&gt;compile(source, filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1f2c832714de7833881fe2be021bca052cf91d" translate="yes" xml:space="preserve">
          <source>Parser API</source>
          <target state="translated">파서 API</target>
        </trans-unit>
        <trans-unit id="004fa2d97b3f68b254662790038060204e61b5c4" translate="yes" xml:space="preserve">
          <source>Parser defaults</source>
          <target state="translated">파서 기본값</target>
        </trans-unit>
        <trans-unit id="8ae5e9df787606f6a18b61bb53d88c9edc2ac786" translate="yes" xml:space="preserve">
          <source>Parser for configuration files similar to the Windows &lt;code&gt;.ini&lt;/code&gt; files.</source>
          <target state="translated">Windows &lt;code&gt;.ini&lt;/code&gt; 파일 과 유사한 구성 파일 파서 .</target>
        </trans-unit>
        <trans-unit id="d8dc10de6adfe8e18f4e99f44dfc697378f4b6ab" translate="yes" xml:space="preserve">
          <source>Parser for the &lt;code&gt;.netrc&lt;/code&gt; file format. The file &lt;code&gt;.netrc&lt;/code&gt; is typically used by FTP clients to load user authentication information before prompting the user.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; 파일 형식의 파서 &lt;code&gt;.netrc&lt;/code&gt; 파일 은 일반적으로 FTP 클라이언트가 사용자에게 프롬프트하기 전에 사용자 인증 정보를로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6729f41bc7511e1386806d0ce0191be70095ac9b" translate="yes" xml:space="preserve">
          <source>Parser-level defaults can be particularly useful when working with multiple parsers. See the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method for an example of this type.</source>
          <target state="translated">파서 수준의 기본값은 여러 파서로 작업 할 때 특히 유용 할 수 있습니다. 이 유형의 예 는 &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="edcb4a36322d5054120f5cf55bd4daebc8e8fd44" translate="yes" xml:space="preserve">
          <source>Parsers may set the &lt;em&gt;qname&lt;/em&gt; parameter to &lt;code&gt;None&lt;/code&gt;, unless the &lt;code&gt;feature_namespace_prefixes&lt;/code&gt; feature is activated.</source>
          <target state="translated">&lt;code&gt;feature_namespace_prefixes&lt;/code&gt; 기능이 활성화 되지 않은 경우 구문 분석기는 &lt;em&gt;qname&lt;/em&gt; 매개 변수를 &lt;code&gt;None&lt;/code&gt; 으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee2780af704008ebc69c8aa8369ff3c29a512d2d" translate="yes" xml:space="preserve">
          <source>Parses an XML document from a sequence of string fragments. &lt;em&gt;sequence&lt;/em&gt; is a list or other sequence containing XML data fragments. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">일련의 문자열 조각에서 XML 문서를 구문 분석합니다. &lt;em&gt;sequence&lt;/em&gt; 는 XML 데이터 조각을 포함하는 목록 또는 기타 시퀀스입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="fbbb018cccf811e0d533b9e865ec5ffa820c0b5e" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant, and also returns a dictionary which maps from element id:s to elements. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns a tuple containing an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance and a dictionary.</source>
          <target state="translated">문자열 상수에서 XML 섹션을 구문 분석하고 요소 id : s에서 요소로 맵핑되는 사전도 리턴합니다. &lt;em&gt;text&lt;/em&gt; 는 XML 데이터를 포함하는 문자열입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 인스턴스와 사전을 포함하는 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="72927f75fe80a6b69eb37dde451d1d4fc5f35092" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. Same as &lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt;&lt;code&gt;XML()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">문자열 상수에서 XML 섹션을 구문 분석합니다. 동일 &lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt; &lt;code&gt;XML()&lt;/code&gt; &lt;/a&gt; . &lt;em&gt;text&lt;/em&gt; 는 XML 데이터를 포함하는 문자열입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7af853719821e9fd72d58e55be379388db261dbd" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. This function can be used to embed &amp;ldquo;XML literals&amp;rdquo; in Python code. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">문자열 상수에서 XML 섹션을 구문 분석합니다. 이 함수는 Python 코드에 &quot;XML 리터럴&quot;을 포함시키는 데 사용할 수 있습니다. &lt;em&gt;text&lt;/em&gt; 는 XML 데이터를 포함하는 문자열입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="dae47704d2ee507567c8bffbe47a3689bb12542a" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree incrementally, and reports what&amp;rsquo;s going on to the user. &lt;em&gt;source&lt;/em&gt; is a filename or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; containing XML data. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. &lt;em&gt;parser&lt;/em&gt; must be a subclass of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and can only use the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; as a target. Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; providing &lt;code&gt;(event, elem)&lt;/code&gt; pairs.</source>
          <target state="translated">XML 섹션을 요소 트리로 점진적으로 구문 분석하고 사용자에게 진행중인 작업을보고합니다. &lt;em&gt;source&lt;/em&gt; 는 XML 데이터를 포함 하는 파일 이름 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 입니다. &lt;em&gt;events&lt;/em&gt; 는보고 할 일련의 이벤트입니다. 지원되는 이벤트는 &lt;code&gt;&quot;start&quot;&lt;/code&gt; , &lt;code&gt;&quot;end&quot;&lt;/code&gt; , &lt;code&gt;&quot;comment&quot;&lt;/code&gt; , &lt;code&gt;&quot;pi&quot;&lt;/code&gt; , &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; 문자열입니다 ( &quot;ns&quot;이벤트는 자세한 네임 스페이스 정보를 얻는 데 사용됨). 경우 &lt;em&gt;이벤트가&lt;/em&gt; 생략되고, 오직 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 이벤트가보고됩니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 제공하지 않으면표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다.&lt;em&gt;파서&lt;/em&gt; 는 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 여야하며 기본 &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt; 만 대상 으로 사용할 수 있습니다 . &lt;code&gt;(event, elem)&lt;/code&gt; 쌍을 제공 하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;반복자를&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e872edbf40c427986497592bdf1120e648adaf87" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree incrementally, and reports what&amp;rsquo;s going on to the user. &lt;em&gt;source&lt;/em&gt; is a filename or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; containing XML data. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. &lt;em&gt;parser&lt;/em&gt; must be a subclass of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and can only use the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; as a target. Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; providing &lt;code&gt;(event, elem)&lt;/code&gt; pairs.</source>
          <target state="translated">XML 섹션을 요소 트리로 점진적으로 구문 분석하고 사용자에게 진행 상황을보고합니다. &lt;em&gt;source&lt;/em&gt; 는 XML 데이터를 포함 하는 파일 이름 또는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 입니다. &lt;em&gt;이벤트&lt;/em&gt; 는 다시보고 할 일련의 이벤트입니다. 지원되는 이벤트는 문자열 &lt;code&gt;&quot;start&quot;&lt;/code&gt; , &lt;code&gt;&quot;end&quot;&lt;/code&gt; , &lt;code&gt;&quot;comment&quot;&lt;/code&gt; , &lt;code&gt;&quot;pi&quot;&lt;/code&gt; , &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; 입니다 ( &quot;ns&quot;이벤트는 자세한 네임 스페이스 정보를 가져 오는 데 사용됨). 경우 &lt;em&gt;이벤트가&lt;/em&gt; 생략되고, 오직 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 이벤트가보고됩니다. &lt;em&gt;parser&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 주어지지 않으면표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다.&lt;em&gt;파서&lt;/em&gt; 는 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 의 하위 클래스 여야하며 기본 &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt; 만 대상 으로 사용할 수 있습니다 . &lt;code&gt;(event, elem)&lt;/code&gt; 쌍을 제공 하는 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;반복자를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ee0df73ef04440db4a8154c7c363a73ee5b68bdc" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree. &lt;em&gt;source&lt;/em&gt; is a filename or file object containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">XML 섹션을 요소 트리로 구문 분석합니다. &lt;em&gt;source&lt;/em&gt; 는 XML 데이터를 포함하는 파일 이름 또는 파일 객체입니다. &lt;em&gt;파서&lt;/em&gt; 는 선택적 파서 인스턴스입니다. 지정하지 않으면 표준 &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt; 파서가 사용됩니다. &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="151f487cf2996ed020c6158161493638425f24db" translate="yes" xml:space="preserve">
          <source>Parses command line options and parameter list. &lt;em&gt;args&lt;/em&gt; is the argument list to be parsed, without the leading reference to the running program. Typically, this means &lt;code&gt;sys.argv[1:]&lt;/code&gt;. &lt;em&gt;shortopts&lt;/em&gt; is the string of option letters that the script wants to recognize, with options that require an argument followed by a colon (&lt;code&gt;':'&lt;/code&gt;; i.e., the same format that Unix &lt;code&gt;getopt()&lt;/code&gt; uses).</source>
          <target state="translated">명령 행 옵션 및 매개 변수 목록을 구문 분석합니다. &lt;em&gt;args&lt;/em&gt; 는 실행중인 프로그램에 대한 선행 참조없이 구문 분석 할 인수 목록입니다. 일반적으로 이것은 &lt;code&gt;sys.argv[1:]&lt;/code&gt; 의미 합니다. &lt;em&gt;shortopts는&lt;/em&gt; (스크립트가 다음에 콜론 인수를 요구하는 옵션을 인식하기를 원하는 옵션 문자의 문자열입니다 &lt;code&gt;':'&lt;/code&gt; , 즉, 동일한 형식이 유닉스 &lt;code&gt;getopt()&lt;/code&gt; 가 사용하는).</target>
        </trans-unit>
        <trans-unit id="df868cb1150d0cfbe21af7ee4cdd7fd10637e164" translate="yes" xml:space="preserve">
          <source>Parses the contents of the string &lt;em&gt;data&lt;/em&gt;, calling the appropriate handler functions to process the parsed data. &lt;em&gt;isfinal&lt;/em&gt; must be true on the final call to this method; it allows the parsing of a single file in fragments, not the submission of multiple files. &lt;em&gt;data&lt;/em&gt; can be the empty string at any time.</source>
          <target state="translated">문자열 &lt;em&gt;데이터&lt;/em&gt; 의 내용을 구문 분석하고 구문 분석 된 데이터를 처리하기 위해 적절한 핸들러 함수를 호출합니다. 이 메소드에 대한 최종 호출에서 &lt;em&gt;isfinal&lt;/em&gt; 은 true 여야합니다. 여러 파일을 제출하지 않고 조각으로 단일 파일을 구문 분석 할 수 있습니다. &lt;em&gt;데이터&lt;/em&gt; 는 언제든지 빈 문자열이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c9fa62bd1c27ae8dae11e96078b9e813bde82ff" translate="yes" xml:space="preserve">
          <source>Parses the lines argument.</source>
          <target state="translated">행 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="69eb6c34919fe2acf467b9421ca3164345b86455" translate="yes" xml:space="preserve">
          <source>Parsing &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers can easily be done by the using the classes from the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">구문 &lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt; 모듈 의 클래스를 사용하여 &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; 헤더 구문 분석을 쉽게 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a72125d574bfaaf5cb1957bf8fd6d75f4bed06e" translate="yes" xml:space="preserve">
          <source>Parsing ASCII Encoded Bytes</source>
          <target state="translated">ASCII로 인코딩 된 바이트 구문 분석</target>
        </trans-unit>
        <trans-unit id="1a2190aff5319c85cf7321ca648eedb2f503316f" translate="yes" xml:space="preserve">
          <source>Parsing Rules</source>
          <target state="translated">파싱 ​​규칙</target>
        </trans-unit>
        <trans-unit id="4574c08a7f81add4e596be6e15b9c64ff9371087" translate="yes" xml:space="preserve">
          <source>Parsing XML</source>
          <target state="translated">XML 파싱</target>
        </trans-unit>
        <trans-unit id="6893fb3b02102f738b0b2dc3c3ca295c4ed12239" translate="yes" xml:space="preserve">
          <source>Parsing XML with Namespaces</source>
          <target state="translated">네임 스페이스를 사용하여 XML 구문 분석</target>
        </trans-unit>
        <trans-unit id="bfa0baebba6e77b74cf2de3bc383caea1641985b" translate="yes" xml:space="preserve">
          <source>Parsing a doctype:</source>
          <target state="translated">독 타입 파싱 :</target>
        </trans-unit>
        <trans-unit id="0a576c94c20901b183af1b9a14ad8b63c3b0db12" translate="yes" xml:space="preserve">
          <source>Parsing a plist:</source>
          <target state="translated">plist 파싱 :</target>
        </trans-unit>
        <trans-unit id="4ed97da7a55821def4af9e81923e5326722f8668" translate="yes" xml:space="preserve">
          <source>Parsing an element with a few attributes and a title:</source>
          <target state="translated">몇 가지 속성과 제목을 가진 요소 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="17b7786ea139dbd78158c2c45139b4c833a9c6d6" translate="yes" xml:space="preserve">
          <source>Parsing arguments</source>
          <target state="translated">인수 파싱</target>
        </trans-unit>
        <trans-unit id="a47b1c882acdc40fdce7e0fb4d77502237f146c7" translate="yes" xml:space="preserve">
          <source>Parsing comments:</source>
          <target state="translated">의견 파싱 :</target>
        </trans-unit>
        <trans-unit id="e31699a29c24a3b26bf46b6d3bdc4ef92cc3a31e" translate="yes" xml:space="preserve">
          <source>Parsing invalid HTML (e.g. unquoted attributes) also works:</source>
          <target state="translated">유효하지 않은 HTML 구문 분석 (예 : 인용되지 않은 속성)도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9d4775ea5c5af964bed4d175c5add3a853ae58b6" translate="yes" xml:space="preserve">
          <source>Parsing is performed by the &lt;code&gt;DictConfigurator&lt;/code&gt; class, whose constructor is passed the dictionary used for configuration, and has a &lt;code&gt;configure()&lt;/code&gt; method. The &lt;a href=&quot;#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt; module has a callable attribute &lt;code&gt;dictConfigClass&lt;/code&gt; which is initially set to &lt;code&gt;DictConfigurator&lt;/code&gt;. You can replace the value of &lt;code&gt;dictConfigClass&lt;/code&gt; with a suitable implementation of your own.</source>
          <target state="translated">구문 분석은 생성자에 구성에 사용 된 사전이 전달되고 &lt;code&gt;configure()&lt;/code&gt; 메소드 가있는 &lt;code&gt;DictConfigurator&lt;/code&gt; 클래스에 의해 수행됩니다 . &lt;a href=&quot;#module-logging.config&quot;&gt; &lt;code&gt;logging.config&lt;/code&gt; 의&lt;/a&gt; 모듈은 호출 속성 갖는다 &lt;code&gt;dictConfigClass&lt;/code&gt; 초기에 설정된 &lt;code&gt;DictConfigurator&lt;/code&gt; 를 . &lt;code&gt;dictConfigClass&lt;/code&gt; 의 값을 자신의 적절한 구현으로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e482f0fc24f824a62c06ebb7859dfede7d0aa064" translate="yes" xml:space="preserve">
          <source>Parsing named and numeric character references and converting them to the correct char (note: these 3 references are all equivalent to &lt;code&gt;'&amp;gt;'&lt;/code&gt;):</source>
          <target state="translated">명명 된 숫자 참조 및 숫자 참조를 구문 분석하고 올바른 문자로 변환 (참고 :이 3 개의 참조는 모두 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 와 동일 ) :</target>
        </trans-unit>
        <trans-unit id="a44bc4f5945b088db01b0d914b0d941b07799822" translate="yes" xml:space="preserve">
          <source>Parsing requirements for mailto URL schemes.</source>
          <target state="translated">mailto URL 스킴에 대한 구문 분석 요구 사항</target>
        </trans-unit>
        <trans-unit id="bf3d21c265eb4a00a78d8f62a6d665405bb16b18" translate="yes" xml:space="preserve">
          <source>Partial mocking</source>
          <target state="translated">부분 조롱</target>
        </trans-unit>
        <trans-unit id="8898adadc5b7993600711b7f5c715af91efba444" translate="yes" xml:space="preserve">
          <source>Partial parsing</source>
          <target state="translated">부분 파싱</target>
        </trans-unit>
        <trans-unit id="8a924cc1e2ca080e3d2d9070952b331ebd977a94" translate="yes" xml:space="preserve">
          <source>Partial support of the Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt; structure is used for &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; creation. The following attributes can be set by passing them as keyword-only arguments.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt; 작성 에는 Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt; 구조 의 일부 지원 이 사용됩니다 . 다음 속성은 키워드 전용 인수로 전달하여 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cefe65497d71ce480712ec369093347b9edf071" translate="yes" xml:space="preserve">
          <source>Pass one or more paths (as strings) to text files to be examined.</source>
          <target state="translated">검사 할 텍스트 파일에 하나 이상의 경로 (문자열)를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="5f7450f952fba25aff224ced294b6f998b462e06" translate="yes" xml:space="preserve">
          <source>Pass the barrier. When all the threads party to the barrier have called this function, they are all released simultaneously. If a &lt;em&gt;timeout&lt;/em&gt; is provided, it is used in preference to any that was supplied to the class constructor.</source>
          <target state="translated">장벽을 통과하십시오. 장벽에 대한 모든 스레드가이 기능을 호출하면 동시에 해제됩니다. 경우 &lt;em&gt;타임 아웃이&lt;/em&gt; 제공되는데, 이는 클래스 생성자에 공급되었다는 우선적으로 사용된다.</target>
        </trans-unit>
        <trans-unit id="990deeb80d6138076466ced9282b16e7f18f84fb" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by both the current process and child processes. May not be available on all systems.</source>
          <target state="translated">로 패스 &lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt; 현재 프로세스와 자식 프로세스 모두에 의해 소비 요청 리소스에. 모든 시스템에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6c0db84a8ee7e54a3fa9e2983efa2cdd04a121a8" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by child processes of the calling process which have been terminated and waited for.</source>
          <target state="translated">로 패스 &lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt; 종료하고 기다렸다 된 호출 프로세스의 자식 프로세스에 의해 소비 요청 리소스에.</target>
        </trans-unit>
        <trans-unit id="65a4c34a2a87e93e40e98a2b333bc373444fe153" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the calling process, which is the sum of resources used by all threads in the process.</source>
          <target state="translated">로 패스 &lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt; 프로세스의 모든 스레드가 사용하는 자원의 합 호출 과정에서 소비 요청 리소스에.</target>
        </trans-unit>
        <trans-unit id="6d9dbad6ac28906fedfb066087f4e23428020121" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the current thread. May not be available on all systems.</source>
          <target state="translated">현재 스레드가 소비 한 자원을 요청 하려면 &lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt; 에 전달하십시오. 모든 시스템에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="271d60f487b5b3f1af07cb53c6718722743b3a26" translate="yes" xml:space="preserve">
          <source>Passed</source>
          <target state="translated">Passed</target>
        </trans-unit>
        <trans-unit id="c1a8ee630c475631807e09dc9f6d88c91b3db2ff" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt;&lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;formatter_class=&lt;/code&gt; indicates that &lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; and &lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; are already correctly formatted and should not be line-wrapped:</source>
          <target state="translated">전달 &lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt; &lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt; 을&lt;/a&gt; 같이 &lt;code&gt;formatter_class=&lt;/code&gt; 나타냅니다 &lt;a href=&quot;#description&quot;&gt;설명&lt;/a&gt; 및 &lt;a href=&quot;#epilog&quot;&gt;에필로그는&lt;/a&gt; 이미 올바른 형식 및 라인 감싸 안 :</target>
        </trans-unit>
        <trans-unit id="3cc7098ba0d08be5b9eeb5f8d505a19e1aa66759" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as &lt;em&gt;trace_callback&lt;/em&gt; will disable the trace callback.</source>
          <target state="translated">&lt;em&gt;trace_callback으로 &lt;/em&gt;&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 전달 하면 추적 콜백이 비활성화됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d024dbf4319068e7f12b8e77a46bc274a6f14064" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; will fail since &lt;code&gt;1900&lt;/code&gt; is not a leap year.</source>
          <target state="translated">전달 &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; 보낸 실패 &lt;code&gt;1900&lt;/code&gt; 윤년 아니다.</target>
        </trans-unit>
        <trans-unit id="02f10d83abb588c6900248de658aa7a62805f3aa" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;debug=True&lt;/code&gt; to &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;debug=True&lt;/code&gt; 를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="6847e074168f7f077adeee00beacd8bad5077f8f" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;include_extras=True&lt;/code&gt; to &lt;a href=&quot;#typing.get_type_hints&quot;&gt;&lt;code&gt;get_type_hints()&lt;/code&gt;&lt;/a&gt; lets one access the extra annotations at runtime.</source>
          <target state="translated">&lt;code&gt;include_extras=True&lt;/code&gt; 를 &lt;a href=&quot;#typing.get_type_hints&quot;&gt; &lt;code&gt;get_type_hints()&lt;/code&gt; &lt;/a&gt; 전달하면 런타임에 추가 주석에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3551e0fe86a1365158e456ce9f8d713fe328a1b" translate="yes" xml:space="preserve">
          <source>Passing a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; without the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments falls under the first case of returning the informal string representation (see also the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; command-line option to Python). For example:</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 또는 &lt;em&gt;오류&lt;/em&gt; 인수 없이 &lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체를 &lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 전달하는 것은 비공식 문자열 표현을 반환하는 첫 번째 경우에 해당합니다 ( Python 의 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt; 명령 행 옵션 참조 ). 예를 들면 다음과 같습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="219eeaa2971021e607b349edacbbef20abc85c84" translate="yes" xml:space="preserve">
          <source>Passing a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; without the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments falls under the first case of returning the informal string representation (see also the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; command-line option to Python). For example:</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 또는 &lt;em&gt;오류&lt;/em&gt; 인수 없이 &lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체를 &lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt; 전달하는 것은 비공식 문자열 표현을 반환하는 첫 번째 경우에 해당합니다 ( Python에 대한 &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt; 명령 줄 옵션 참조 ). 예를 들면 :&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9cdbfdcb197d91dd62f0f8abd3627fccc6f87c2d" translate="yes" xml:space="preserve">
          <source>Passing a directory is also acceptable:</source>
          <target state="translated">디렉토리 전달도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="23ea26b7b9b743e6b69e8adca10474d32ff7f4c4" translate="yes" xml:space="preserve">
          <source>Passing a false value for &lt;em&gt;flag&lt;/em&gt; will cancel a previous call that passed a true value, but otherwise has no effect.</source>
          <target state="translated">&lt;em&gt;플래그에&lt;/em&gt; 대해 잘못된 값을 전달하면 실제 값을 전달한 이전 호출이 취소되지만 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d96b6cf88dd53f9df9983de6c2674fdbef0f57cf" translate="yes" xml:space="preserve">
          <source>Passing an invalid or expired &lt;em&gt;thread_id&lt;/em&gt; may result in undefined behavior, such as segmentation fault.</source>
          <target state="translated">유효하지 않거나 만료 된 &lt;em&gt;thread_id를&lt;/em&gt; 전달하면 세그먼트 화 결함과 같이 정의되지 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4373763b08bb2aaf6a891ea712bad980acdaeae" translate="yes" xml:space="preserve">
          <source>Passing arguments of the wrong type (e.g. passing a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; when an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; is expected) should result in a &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, but passing arguments with the wrong value (e.g. a number outside expected boundaries) should result in a &lt;a href=&quot;#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">잘못된 유형의 인수를 전달하면 (예 : &lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 가 예상 될 때 &lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt; 전달하면 ) &lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생 하지만 잘못된 값을 가진 인수를 전달하면 (예 : 예상 범위를 벗어난 숫자) &lt;a href=&quot;#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ce254e377d02b1546a547ed5a4b85276ee5363e9" translate="yes" xml:space="preserve">
          <source>Passing pointers (or: passing parameters by reference)</source>
          <target state="translated">전달 포인터 (또는 참조로 매개 변수 전달)</target>
        </trans-unit>
        <trans-unit id="f3fa6806e05d0efc4240e4ddbbec8d0f63598164" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;-v&lt;/code&gt; option to your test script will instruct &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; to enable a higher level of verbosity, and produce the following output:</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 옵션을 테스트 스크립트에 전달하면 &lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt; 에 더 자세한 레벨을 표시하고 다음과 같은 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bd57565121ff601125e660a69c2626eb5a561528" translate="yes" xml:space="preserve">
          <source>Passing the &lt;em&gt;encoding&lt;/em&gt; argument to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; allows decoding any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; directly, without needing to make a temporary bytes or bytearray object.</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 인수를 &lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 에&lt;/a&gt; 전달하면 임시 바이트 또는 바이트 배열 객체를 만들 필요없이 모든 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체를&lt;/a&gt; 직접 디코딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41238f9215c8696777f2760fbfa0bf80fb0e35d4" translate="yes" xml:space="preserve">
          <source>Passing the &lt;em&gt;encoding&lt;/em&gt; argument to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; allows decoding any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; directly, without needing to make a temporary bytes or bytearray object.</source>
          <target state="translated">&lt;em&gt;인코딩&lt;/em&gt; 인수를 &lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 에&lt;/a&gt; 전달하면 임시 바이트 또는 bytearray 객체를 만들 필요없이 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체를&lt;/a&gt; 직접 디코딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c8e2c14f5bd9b6c379aece2cadfc65b3d7043c9" translate="yes" xml:space="preserve">
          <source>Passing the optional &lt;em&gt;timeout&lt;/em&gt; parameter will set the timeout on the socket instance before attempting to connect. If no &lt;em&gt;timeout&lt;/em&gt; is supplied, the global default timeout setting returned by &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;getdefaulttimeout()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">선택적 &lt;em&gt;timeout&lt;/em&gt; 매개 변수를 전달하면 연결을 시도하기 전에 소켓 인스턴스의 시간 초과가 설정됩니다. &lt;em&gt;시간 초과&lt;/em&gt; 가 제공 되지 않으면 &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;getdefaulttimeout()&lt;/code&gt; &lt;/a&gt; 반환 한 전역 기본 시간 초과 설정 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="8b7a491eeb7b640b68f36bf4268b49be1a79e14c" translate="yes" xml:space="preserve">
          <source>Password database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;passwd&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">비밀번호 데이터베이스 항목은 속성이 &lt;code&gt;passwd&lt;/code&gt; 구조 의 멤버에 해당하는 튜플 유사 오브젝트로보고됩니다 (아래 속성 필드, &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="124df59fda65fb78cd1ae393c55a5a743faabbc8" translate="yes" xml:space="preserve">
          <source>Passwords are limited to a subset of the ASCII character set. All ASCII punctuation is allowed in passwords, however, note that whitespace and non-printable characters are not allowed in passwords. This is a limitation of the way the .netrc file is parsed and may be removed in the future.</source>
          <target state="translated">암호는 ASCII 문자 집합의 하위 집합으로 제한됩니다. 모든 ASCII 문장 부호는 비밀번호에 허용되지만 공백 및 인쇄 할 수없는 문자는 비밀번호에 사용할 수 없습니다. 이것은 .netrc 파일이 구문 분석되는 방식의 한계이며 향후 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db2483000d154ca9fd74d41fc4e063a4b28faa87" translate="yes" xml:space="preserve">
          <source>Paste</source>
          <target state="translated">Paste</target>
        </trans-unit>
        <trans-unit id="83031d4915377d907a024876b60112ce6b924d4d" translate="yes" xml:space="preserve">
          <source>Patch Decorators</source>
          <target state="translated">패치 데코레이터</target>
        </trans-unit>
        <trans-unit id="09e818ea13f3990a9818a47cc9bb0ee42b62ff97" translate="yes" xml:space="preserve">
          <source>Patch a dictionary, or dictionary like object, and restore the dictionary to its original state after the test.</source>
          <target state="translated">사전 또는 객체와 같은 사전을 패치하고 테스트 후 사전을 원래 상태로 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="263242e9d8ee6d3a8c9d445eaa84200b976eae2d" translate="yes" xml:space="preserve">
          <source>Patch can be used as a &lt;code&gt;TestCase&lt;/code&gt; class decorator. It works by decorating each test method in the class. This reduces the boilerplate code when your test methods share a common patchings set. &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; finds tests by looking for method names that start with &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;. By default this is &lt;code&gt;'test'&lt;/code&gt;, which matches the way &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; finds tests. You can specify an alternative prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;.</source>
          <target state="translated">패치는 &lt;code&gt;TestCase&lt;/code&gt; 클래스 데코레이터 로 사용할 수 있습니다 . 클래스의 각 테스트 방법을 장식하여 작동합니다. 테스트 방법이 공통 패치 세트를 공유 할 때 상용구 코드가 줄어 듭니다. &lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 로 시작하는 메소드 이름을 찾아 테스트를 찾습니다 . 기본적으로 이것은 &lt;code&gt;'test'&lt;/code&gt; 이며 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 가 테스트를 찾는 방식과 일치합니다 . &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 를 설정하여 대체 접 두부를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ea198b4f1da676b4f4ee1391b5cd9f398dde45f" translate="yes" xml:space="preserve">
          <source>Patch can be used as a context manager, with the with statement. Here the patching applies to the indented block after the with statement. If you use &amp;ldquo;as&amp;rdquo; then the patched object will be bound to the name after the &amp;ldquo;as&amp;rdquo;; very useful if &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is creating a mock object for you.</source>
          <target state="translated">with 문을 사용하여 패치를 컨텍스트 관리자로 사용할 수 있습니다. 여기서 패치는 with 문 다음에 들여 쓰기 된 블록에 적용됩니다. &amp;ldquo;as&amp;rdquo;를 사용하면 패치 된 객체는&amp;ldquo;as&amp;rdquo;뒤에 이름으로 바인딩됩니다. &lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt; 가 모의 객체를 만드는 경우 매우 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="e8cdaeb7364059eaef7f04272544a953feb7db50" translate="yes" xml:space="preserve">
          <source>Patching Descriptors and Proxy Objects</source>
          <target state="translated">패치 설명자 및 프록시 객체</target>
        </trans-unit>
        <trans-unit id="88e8009ab58a0045c0df41b27cf1d23b8f9e089e" translate="yes" xml:space="preserve">
          <source>Patching a class replaces the class with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;&lt;em&gt;instance&lt;/em&gt;. If the class is instantiated in the code under test then it will be the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; of the mock that will be used.</source>
          <target state="translated">클래스를 패치하면 클래스가 &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 인스턴스&lt;/em&gt; 로 바뀝니다 . 테스트중인 코드에서 클래스가 인스턴스화 되면 사용될 모의 의 &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="b4f699dcf689fd2e162beca6b9bc0b1522d6aec3" translate="yes" xml:space="preserve">
          <source>Path Browser</source>
          <target state="translated">경로 브라우저</target>
        </trans-unit>
        <trans-unit id="02e6896120f3e34789cebea70374b537c5ff361e" translate="yes" xml:space="preserve">
          <source>Path Objects</source>
          <target state="translated">경로 객체</target>
        </trans-unit>
        <trans-unit id="075cd299fd28fb73d267fb35307dd296768150cc" translate="yes" xml:space="preserve">
          <source>Path for shell if not on Windows; otherwise &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Windows가 아닌 경우 쉘 경로. 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3261580ab23ac434d20083846bb4cb68cc50af6" translate="yes" xml:space="preserve">
          <source>Path objects are traversable using the &lt;code&gt;/&lt;/code&gt; operator.</source>
          <target state="translated">경로 객체는 &lt;code&gt;/&lt;/code&gt; 연산자를 사용하여 순회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a047b8534e4641b171f8a06143fb41928c581a6" translate="yes" xml:space="preserve">
          <source>Path objects expose the following features of &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">Path 객체는 &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; 객체 의 다음 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="90d064bd19c4c3b16b5c26cced735433742488ee" translate="yes" xml:space="preserve">
          <source>Path to the base directory for the user site-packages. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getuserbase&quot;&gt;&lt;code&gt;getuserbase()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local&lt;/code&gt; for UNIX and Mac OS X non-framework builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; for Windows. This value is used by Distutils to compute the installation directories for scripts, data files, Python modules, etc. for the &lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;user installation scheme&lt;/a&gt;. See also &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 사이트 패키지의 기본 디렉토리에 대한 경로입니다. &lt;a href=&quot;#site.getuserbase&quot;&gt; &lt;code&gt;getuserbase()&lt;/code&gt; &lt;/a&gt; 가 아직 호출되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 . 기본값은 UNIX 및 Mac OS X 비 프레임 워크 빌드의 경우 &lt;code&gt;~/.local&lt;/code&gt; , Mac 프레임 워크 빌드의 경우 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt; , Windows의 경우 &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; \ Python 입니다. 이 값은 Distutils에서 &lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;사용자 설치 구성표의&lt;/a&gt; 스크립트, 데이터 파일, Python 모듈 등의 설치 디렉토리를 계산하는 데 사용됩니다 . &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;PYTHONUSERBASE&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ff9913750ddb642232f3d9e28f9fcbcb43231b6" translate="yes" xml:space="preserve">
          <source>Path to the base directory for the user site-packages. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getuserbase&quot;&gt;&lt;code&gt;getuserbase()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local&lt;/code&gt; for UNIX and Mac OS X non-framework builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; for Windows. This value is used by Distutils to compute the installation directories for scripts, data files, Python modules, etc. for the &lt;a href=&quot;https://docs.python.org/3.9/install/index.html#inst-alt-install-user&quot;&gt;user installation scheme&lt;/a&gt;. See also &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 사이트 패키지의 기본 디렉토리 경로입니다. &lt;a href=&quot;#site.getuserbase&quot;&gt; &lt;code&gt;getuserbase()&lt;/code&gt; &lt;/a&gt; 가 아직 호출되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 이 될 수 있습니다 . 기본값은 UNIX 및 Mac OS X 비 프레임 워크 빌드의 경우 &lt;code&gt;~/.local&lt;/code&gt; , Mac 프레임 워크 빌드의 경우 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt; , Windows의 경우 &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; \ Python 입니다. 이 값은 Distutils에서 &lt;a href=&quot;https://docs.python.org/3.9/install/index.html#inst-alt-install-user&quot;&gt;사용자 설치 체계에&lt;/a&gt; 대한 스크립트, 데이터 파일, Python 모듈 등의 설치 디렉토리를 계산하는 데 사용됩니다 . &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;PYTHONUSERBASE&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf71823696007bb6f84923873842b648e97c250a" translate="yes" xml:space="preserve">
          <source>Path to the extension module.</source>
          <target state="translated">확장 모듈의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d24fcb72bd38ac60753fa7a12e92464c2f4e5e6d" translate="yes" xml:space="preserve">
          <source>Path to the file of the module.</source>
          <target state="translated">모듈 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="082345dbe035cd147fedde8ccbd5cf46cf3be213" translate="yes" xml:space="preserve">
          <source>Path to the user site-packages for the running Python. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getusersitepackages&quot;&gt;&lt;code&gt;getusersitepackages()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; for UNIX and non-framework Mac OS X builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; on Windows. This directory is a site directory, which means that &lt;code&gt;.pth&lt;/code&gt; files in it will be processed.</source>
          <target state="translated">실행중인 Python의 사용자 사이트 패키지 경로입니다. &lt;a href=&quot;#site.getusersitepackages&quot;&gt; &lt;code&gt;getusersitepackages()&lt;/code&gt; &lt;/a&gt; 가 아직 호출되지 않은 경우 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 . 기본값은 UNIX 및 비 프레임 워크 Mac OS X 빌드의 경우 &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; &lt;em&gt;X.Y&lt;/em&gt; / site-packages , Mac 프레임 워크 빌드의 경우 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt; / lib / python / site-packages 및 &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; Windows에서 &lt;em&gt;%&lt;/em&gt; \ Python \ Python &lt;em&gt;XY&lt;/em&gt; \ site-packages . 이 디렉토리는 사이트 디렉토리이므로 &lt;code&gt;.pth&lt;/code&gt; 파일이 처리됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7f2f6a9b74e163afaf5e72c91f4670c3537cace" translate="yes" xml:space="preserve">
          <source>Paths are immutable and hashable. Paths of a same flavour are comparable and orderable. These properties respect the flavour&amp;rsquo;s case-folding semantics:</source>
          <target state="translated">경로는 변경 불가능하고 해시 가능합니다. 동일한 맛의 경로는 비교 가능하고 주문 가능합니다. 이 속성들은 맛의 대소 문자 구분 의미를 존중합니다 :</target>
        </trans-unit>
        <trans-unit id="03da30c8c0f70e648054fb4f58fddd43a85d5727" translate="yes" xml:space="preserve">
          <source>Paths of a different flavour compare unequal and cannot be ordered:</source>
          <target state="translated">다른 맛의 경로는 동일하지 않으며 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="e25673f3169af15d776c516ae19aa4030127504a" translate="yes" xml:space="preserve">
          <source>Pattern Matching: The Gestalt Approach</source>
          <target state="translated">패턴 매칭 : 게슈탈트 접근법</target>
        </trans-unit>
        <trans-unit id="9c9057f9e71b9a8f041ec30f3fc4350458b54b40" translate="yes" xml:space="preserve">
          <source>Pattern to match test files (&lt;code&gt;test*.py&lt;/code&gt; default)</source>
          <target state="translated">테스트 파일과 일치하는 패턴 ( &lt;code&gt;test*.py&lt;/code&gt; 기본값)</target>
        </trans-unit>
        <trans-unit id="d5b7a4e35290d6ec7c8f9bf1b9c4ba3420b3d7a4" translate="yes" xml:space="preserve">
          <source>Patterns are matched against the fully qualified test method name as imported by the test loader.</source>
          <target state="translated">패턴은 테스트 로더가 가져온 완전한 테스트 방법 이름과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6d0a9052da3aad8ee1a8be3a656e5124e56d40bc" translate="yes" xml:space="preserve">
          <source>Patterns that contain a wildcard character (&lt;code&gt;*&lt;/code&gt;) are matched against the test name using &lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt;&lt;/a&gt;; otherwise simple case-sensitive substring matching is used.</source>
          <target state="translated">와일드 카드 문자 ( &lt;code&gt;*&lt;/code&gt; ) 를 포함하는 패턴은 &lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt; &lt;/a&gt; 사용하여 테스트 이름과 일치합니다 . 그렇지 않으면 간단한 대소 문자 구분 서브 스트링 일치가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8d24192acf2841a4026f40125b004cd345b161f3" translate="yes" xml:space="preserve">
          <source>Pause receiving.</source>
          <target state="translated">수신 일시 중지</target>
        </trans-unit>
        <trans-unit id="88bbbed3b2561167e07ac594ad41aef9e33b6843" translate="yes" xml:space="preserve">
          <source>Pause the receiving end of the transport. No data will be passed to the protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;protocol.data_received()&lt;/code&gt;&lt;/a&gt; method until &lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt;&lt;code&gt;resume_reading()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">운송의 수신 끝을 일시 중지하십시오. &lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt; &lt;code&gt;resume_reading()&lt;/code&gt; &lt;/a&gt; 이 호출 될 때까지 프로토콜의 &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt; &lt;code&gt;protocol.data_received()&lt;/code&gt; &lt;/a&gt; 메소드로 데이터가 전달되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e99a78e932fa2ab9679cec16918f17a775c3a277" translate="yes" xml:space="preserve">
          <source>Pen control</source>
          <target state="translated">펜 컨트롤</target>
        </trans-unit>
        <trans-unit id="e12a091922aa0b42fc8a921c944e57c5b09dfc58" translate="yes" xml:space="preserve">
          <source>PendingDeprecationWarning</source>
          <target state="translated">PendingDeprecationWarning</target>
        </trans-unit>
        <trans-unit id="1c591f7d8be7ebb8d527e8d468608e3bbf82ef75" translate="yes" xml:space="preserve">
          <source>Percentage. Multiplies the number by 100 and displays in fixed (&lt;code&gt;'f'&lt;/code&gt;) format, followed by a percent sign.</source>
          <target state="translated">백분율. 숫자에 100을 곱하고 고정 ( &lt;code&gt;'f'&lt;/code&gt; ) 형식으로 표시 한 다음 백분율 기호를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0af99ae4d5cee179954d90004dcf8ada413c9870" translate="yes" xml:space="preserve">
          <source>Perform &amp;ldquo;rich comparisons&amp;rdquo; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Specifically, &lt;code&gt;lt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;le(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;eq(a,
b)&lt;/code&gt; is equivalent to &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;ne(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a != b&lt;/code&gt;, &lt;code&gt;gt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt; b&lt;/code&gt; and &lt;code&gt;ge(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a
&amp;gt;= b&lt;/code&gt;. Note that these functions can return any value, which may or may not be interpretable as a Boolean value. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information about rich comparisons.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 사이 &lt;em&gt;의&lt;/em&gt; &quot;풍부한 비교&quot;를 수행하십시오 . 구체적으로, &lt;code&gt;lt(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 와 같고 , &lt;code&gt;le(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;lt;= b&lt;/code&gt; 와 같고 , &lt;code&gt;eq(a, b)&lt;/code&gt; 는 &lt;code&gt;a == b&lt;/code&gt; 와 같습니다 . &lt;code&gt;ne(a, b)&lt;/code&gt; 는 등가 &lt;code&gt;a != b&lt;/code&gt; , &lt;code&gt;gt(a, b)&lt;/code&gt; 동일하다 &lt;code&gt;a &amp;gt; b&lt;/code&gt; 및 &lt;code&gt;ge(a, b)&lt;/code&gt; 동등하다 &lt;code&gt;a &amp;gt;= b&lt;/code&gt; . 이 함수는 모든 값을 반환 할 수 있으며 부울 값으로 해석되거나 해석되지 않을 수 있습니다. 풍부한 비교에 대한 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;비교&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32fa6539ab7677ba37320ddd4e8abfa8a5648e35" translate="yes" xml:space="preserve">
          <source>Perform &amp;ldquo;rich comparisons&amp;rdquo; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Specifically, &lt;code&gt;lt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;le(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;eq(a,
b)&lt;/code&gt; is equivalent to &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;ne(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a != b&lt;/code&gt;, &lt;code&gt;gt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt; b&lt;/code&gt; and &lt;code&gt;ge(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a
&amp;gt;= b&lt;/code&gt;. Note that these functions can return any value, which may or may not be interpretable as a Boolean value. See &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information about rich comparisons.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 간의 &quot;풍부한 비교&quot;를 수행합니다 . 특히, &lt;code&gt;lt(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 와 동등하고 , &lt;code&gt;le(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;lt;= b&lt;/code&gt; 와 동등하고 , &lt;code&gt;eq(a, b)&lt;/code&gt; 는 &lt;code&gt;a == b&lt;/code&gt; 와 동등하고 , &lt;code&gt;ne(a, b)&lt;/code&gt; 는 &lt;code&gt;a != b&lt;/code&gt; 와 동등하고 , &lt;code&gt;gt(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;gt; b&lt;/code&gt; 와 동등 하고 &lt;code&gt;ge(a, b)&lt;/code&gt; 는 &lt;code&gt;a &amp;gt;= b&lt;/code&gt; 와 동등합니다 . 이러한 함수는 부울 값으로 해석되거나 해석되지 않을 수있는 모든 값을 반환 할 수 있습니다. 풍부한 비교에 대한 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;비교&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c68ed757eddddca4140ad328e3ef6838439a850" translate="yes" xml:space="preserve">
          <source>Perform RLE-decompression on the data, as per the binhex4 standard. The algorithm uses &lt;code&gt;0x90&lt;/code&gt; after a byte as a repeat indicator, followed by a count. A count of &lt;code&gt;0&lt;/code&gt; specifies a byte value of &lt;code&gt;0x90&lt;/code&gt;. The routine returns the decompressed data, unless data input data ends in an orphaned repeat indicator, in which case the &lt;a href=&quot;#binascii.Incomplete&quot;&gt;&lt;code&gt;Incomplete&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">binhex4 표준에 따라 데이터에 대해 RLE 압축 해제를 수행하십시오. 이 알고리즘은 바이트 뒤에 &lt;code&gt;0x90&lt;/code&gt; 을 반복 표시기로 사용하고 그 뒤에 카운트를 사용합니다. 카운트 &lt;code&gt;0&lt;/code&gt; 은 바이트 값 &lt;code&gt;0x90&lt;/code&gt; 을 지정합니다 . 데이터 입력 데이터가 고아 반복 표시기에서 끝나지 않으면 루틴은 압축 해제 된 데이터를 리턴합니다.이 경우 &lt;a href=&quot;#binascii.Incomplete&quot;&gt; &lt;code&gt;Incomplete&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="90a0de185e04f628d3f3df798475782c0edfc543" translate="yes" xml:space="preserve">
          <source>Perform a &lt;code&gt;statvfs()&lt;/code&gt; system call on the given path. The return value is an object whose attributes describe the filesystem on the given path, and correspond to the members of the &lt;code&gt;statvfs&lt;/code&gt; structure, namely: &lt;code&gt;f_bsize&lt;/code&gt;, &lt;code&gt;f_frsize&lt;/code&gt;, &lt;code&gt;f_blocks&lt;/code&gt;, &lt;code&gt;f_bfree&lt;/code&gt;, &lt;code&gt;f_bavail&lt;/code&gt;, &lt;code&gt;f_files&lt;/code&gt;, &lt;code&gt;f_ffree&lt;/code&gt;, &lt;code&gt;f_favail&lt;/code&gt;, &lt;code&gt;f_flag&lt;/code&gt;, &lt;code&gt;f_namemax&lt;/code&gt;, &lt;code&gt;f_fsid&lt;/code&gt;.</source>
          <target state="translated">주어진 경로에서 &lt;code&gt;statvfs()&lt;/code&gt; 시스템 호출을 수행하십시오 . 리턴 값은, 그 속성의 부재로 지정된 경로에 파일 시스템 및 대응 설명하는 목적 &lt;code&gt;statvfs&lt;/code&gt; : 구조, 즉 &lt;code&gt;f_bsize&lt;/code&gt; , &lt;code&gt;f_frsize&lt;/code&gt; , &lt;code&gt;f_blocks&lt;/code&gt; , &lt;code&gt;f_bfree&lt;/code&gt; , &lt;code&gt;f_bavail&lt;/code&gt; , &lt;code&gt;f_files&lt;/code&gt; , &lt;code&gt;f_ffree&lt;/code&gt; , &lt;code&gt;f_favail&lt;/code&gt; , &lt;code&gt;f_flag&lt;/code&gt; , &lt;code&gt;f_namemax&lt;/code&gt; , &lt;code&gt;f_fsid&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="97dfa565438c05e03e5adaed406695350ebb06ae" translate="yes" xml:space="preserve">
          <source>Perform a TurtleScreen update. To be used when tracer is turned off.</source>
          <target state="translated">TurtleScreen 업데이트를 수행하십시오. 추적기가 꺼져있을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="24fd06359ec8ff4397b0b107098fc691c9b96e96" translate="yes" xml:space="preserve">
          <source>Perform a string formatting operation. The string on which this method is called can contain literal text or replacement fields delimited by braces &lt;code&gt;{}&lt;/code&gt;. Each replacement field contains either the numeric index of a positional argument, or the name of a keyword argument. Returns a copy of the string where each replacement field is replaced with the string value of the corresponding argument.</source>
          <target state="translated">문자열 형식화 작업을 수행하십시오. 이 메소드가 호출되는 문자열은 중괄호 &lt;code&gt;{}&lt;/code&gt; 로 구분 된 리터럴 텍스트 또는 대체 필드를 포함 할 수 있습니다 . 각 대체 필드에는 위치 인수의 숫자 색인 또는 키워드 인수의 이름이 있습니다. 각 교체 필드가 ​​해당 인수의 문자열 값으로 대체되는 문자열의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4a98062a7ec8da49e613524456695bb57c3b3e79" translate="yes" xml:space="preserve">
          <source>Perform binhex4 style RLE-compression on &lt;em&gt;data&lt;/em&gt; and return the result.</source>
          <target state="translated">&lt;em&gt;데이터&lt;/em&gt; 에 대해 binhex4 스타일 RLE 압축을 수행 하고 결과를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="41580f5611bc59f8749d680e8e8ac34cb9061d02" translate="yes" xml:space="preserve">
          <source>Perform case-insensitive matching; expressions like &lt;code&gt;[A-Z]&lt;/code&gt; will also match lowercase letters. Full Unicode matching (such as &lt;code&gt;&amp;Uuml;&lt;/code&gt; matching &lt;code&gt;&amp;uuml;&lt;/code&gt;) also works unless the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;re.ASCII&lt;/code&gt;&lt;/a&gt; flag is used to disable non-ASCII matches. The current locale does not change the effect of this flag unless the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; flag is also used. Corresponds to the inline flag &lt;code&gt;(?i)&lt;/code&gt;.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 수행하십시오. &lt;code&gt;[A-Z]&lt;/code&gt; 와 같은 표현식 도 소문자와 일치합니다. &lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;re.ASCII&lt;/code&gt; &lt;/a&gt; 플래그를 사용하여 비 ASCII 일치를 비활성화 하지 않으면 전체 유니 코드 일치 (예 : &lt;code&gt;&amp;Uuml;&lt;/code&gt; 일치 &lt;code&gt;&amp;uuml;&lt;/code&gt; )도 작동합니다 . &lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt; 플래그도 사용 하지 않으면 현재 로케일은이 플래그의 효과를 변경하지 않습니다 . 인라인 플래그 &lt;code&gt;(?i)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7141f68329ade808b5b6fd81e8da76f298f39c47" translate="yes" xml:space="preserve">
          <source>Perform hexbin4 binary-to-ASCII translation and return the resulting string. The argument should already be RLE-coded, and have a length divisible by 3 (except possibly the last fragment).</source>
          <target state="translated">hexbin4 2 진에서 ASCII 로의 변환을 수행하고 결과 문자열을 리턴하십시오. 인수는 이미 RLE 코딩되어 있어야하며 길이는 3으로 나눌 수 있습니다 (마지막 조각 제외).</target>
        </trans-unit>
        <trans-unit id="3f0f2162e62c2dca45b2095b72d3889ce4cdfc84" translate="yes" xml:space="preserve">
          <source>Perform multiple patches in a single call. It takes the object to be patched (either as an object or a string to fetch the object by importing) and keyword arguments for the patches:</source>
          <target state="translated">한 번의 호출로 여러 패치를 수행하십시오. 패치 할 오브젝트 (가져 오기로 오브젝트를 페치 할 오브젝트 또는 문자열로) 및 패치에 대한 키워드 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c9a6c66a017976ffd70385b244358e43640500c2" translate="yes" xml:space="preserve">
          <source>Perform the SSL setup handshake.</source>
          <target state="translated">SSL 설정 핸드 셰이크를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b80254279aa6118dbc6274921622d6049737abc7" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of an &lt;code&gt;lstat()&lt;/code&gt; system call on the given path. Similar to &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, but does not follow symbolic links. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">지정된 경로에서 &lt;code&gt;lstat()&lt;/code&gt; 시스템 호출 과 동등한 기능을 수행하십시오 . 유사 &lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt; 하지만 심볼릭 링크를 따르지 않습니다. &lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c4e238899a46acc05e2b8ba043d7a9eaa794d1ac" translate="yes" xml:space="preserve">
          <source>Perform the lock operation &lt;em&gt;operation&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). See the Unix manual &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;flock(2)&lt;/a&gt;&lt;/em&gt; for details. (On some systems, this function is emulated using &lt;code&gt;fcntl()&lt;/code&gt;.)</source>
          <target state="translated">파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 에서 잠금 조작 &lt;em&gt;조작&lt;/em&gt; 을 수행하십시오 ( &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt; 메소드를 제공하는 파일 오브젝트 도 허용됨). 자세한 내용은 유닉스 수동 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;무리 (2)&lt;/a&gt;&lt;/em&gt; 를 참조하십시오. (일부 시스템에서는이 기능이 &lt;code&gt;fcntl()&lt;/code&gt; 사용하여 에뮬레이트됩니다 .)&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfcdf8211b54c6585eddff98af9183765d8e2f90" translate="yes" xml:space="preserve">
          <source>Perform the operation &lt;em&gt;cmd&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). The values used for &lt;em&gt;cmd&lt;/em&gt; are operating system dependent, and are available as constants in the &lt;a href=&quot;#module-fcntl&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; module, using the same names as used in the relevant C header files. The argument &lt;em&gt;arg&lt;/em&gt; can either be an integer value, or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. With an integer value, the return value of this function is the integer return value of the C &lt;code&gt;fcntl()&lt;/code&gt; call. When the argument is bytes it represents a binary structure, e.g. created by &lt;a href=&quot;struct#struct.pack&quot;&gt;&lt;code&gt;struct.pack()&lt;/code&gt;&lt;/a&gt;. The binary data is copied to a buffer whose address is passed to the C &lt;code&gt;fcntl()&lt;/code&gt; call. The return value after a successful call is the contents of the buffer, converted to a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. The length of the returned object will be the same as the length of the &lt;em&gt;arg&lt;/em&gt; argument. This is limited to 1024 bytes. If the information returned in the buffer by the operating system is larger than 1024 bytes, this is most likely to result in a segmentation violation or a more subtle data corruption.</source>
          <target state="translated">파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 에서 &lt;em&gt;cmd&lt;/em&gt; 조작을 수행하십시오 ( &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt; 메소드를 제공하는 파일 오브젝트 도 허용됨). &lt;em&gt;cmd에&lt;/em&gt; 사용되는 값 은 운영 체제에 따라 다르며 관련 C 헤더 파일에 사용 된 것과 동일한 이름을 사용하여 &lt;a href=&quot;#module-fcntl&quot;&gt; &lt;code&gt;fcntl&lt;/code&gt; &lt;/a&gt; 모듈 에서 상수로 사용할 수 있습니다. 인수 &lt;em&gt;arg&lt;/em&gt; 는 정수 값이거나 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다. 정수 값의 경우이 함수의 반환 값은 C &lt;code&gt;fcntl()&lt;/code&gt; 호출 의 정수 반환 값입니다 . 인수가 바이트 인 경우 이진 구조를 나타냅니다 &lt;a href=&quot;struct#struct.pack&quot;&gt; &lt;code&gt;struct.pack()&lt;/code&gt; &lt;/a&gt; 예 : struct.pack ()&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;. 이진 데이터는 주소가 C &lt;code&gt;fcntl()&lt;/code&gt; 호출로 전달되는 버퍼에 복사됩니다 . 성공적인 호출 후의 리턴 값은 버퍼의 컨텐츠이며 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 오브젝트 로 변환됩니다 . 반환 된 객체의 길이는 &lt;em&gt;arg&lt;/em&gt; 인수 의 길이와 같습니다 . 이것은 1024 바이트로 제한됩니다. 운영 체제가 버퍼에 리턴 한 정보가 1024 바이트보다 크면 분할 위반 또는보다 미묘한 데이터 손상이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4283e2dce7960c4de4bf96707e7142a28f6a01fc" translate="yes" xml:space="preserve">
          <source>Perform the same operation as &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt;, but return a tuple &lt;code&gt;(new_string,
number_of_subs_made)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; 와 동일한 작업을 수행 하지만 튜플 &lt;code&gt;(new_string, number_of_subs_made)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="2446d19393c74ec728f3a7d446f5c53c7a11237e" translate="yes" xml:space="preserve">
          <source>Performing these calculations with at least one extra sign extension bit in a finite two&amp;rsquo;s complement representation (a working bit-width of &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; or more) is sufficient to get the same result as if there were an infinite number of sign bits.</source>
          <target state="translated">유한 2의 보수 표현 ( &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; 이상의 작동 비트 너비)에서 하나 이상의 추가 부호 확장 비트를 사용하여 이러한 계산을 수행 하면 동일한 결과를 얻을 수 있습니다. 무한한 수의 부호 비트가있는 것처럼.</target>
        </trans-unit>
        <trans-unit id="f556313cac7de14590c23c9df2ba453fcfdc87a1" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;in&lt;/code&gt; comparison, or &lt;code&gt;not in&lt;/code&gt; if &lt;code&gt;invert&lt;/code&gt; is 1.</source>
          <target state="translated">수행 &lt;code&gt;in&lt;/code&gt; 비교, 또는 &lt;code&gt;not in&lt;/code&gt; 경우 &lt;code&gt;invert&lt;/code&gt; 1입니다.</target>
        </trans-unit>
        <trans-unit id="9e6cabab97195b44b05e4796b7abfc4737033475" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;is&lt;/code&gt; comparison, or &lt;code&gt;is not&lt;/code&gt; if &lt;code&gt;invert&lt;/code&gt; is 1.</source>
          <target state="translated">수행은 &lt;code&gt;is&lt;/code&gt; 비교, 또는 &lt;code&gt;is not&lt;/code&gt; 경우 &lt;code&gt;invert&lt;/code&gt; 1입니다.</target>
        </trans-unit>
        <trans-unit id="640ef075e3b653fe4832abcbc49e2b91ac8bdeae" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.close(fd)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;os.close(fd)&lt;/code&gt; 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="752e3fe0e837a39bb8a813d706f8b3821bc1a177" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt; 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb5c5f5cf17f84ca944b4fa1f5dd157aa23e9c8" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt;.</source>
          <target state="translated">수행합니다 &lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ebc44eecc02e0e3eabcbf63d742a9d04931ce6c" translate="yes" xml:space="preserve">
          <source>Performs a Boolean operation. The operation name can be found in &lt;code&gt;cmp_op[opname]&lt;/code&gt;.</source>
          <target state="translated">부울 연산을 수행합니다. 작업 이름은 &lt;code&gt;cmp_op[opname]&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89f680388cf82b0508f15de49df30d63281b29a9" translate="yes" xml:space="preserve">
          <source>Performs the SSL shutdown handshake, which removes the TLS layer from the underlying socket, and returns the underlying socket object. This can be used to go from encrypted operation over a connection to unencrypted. The returned socket should always be used for further communication with the other side of the connection, rather than the original socket.</source>
          <target state="translated">SSL 종료 핸드 셰이크를 수행하여 기본 소켓에서 TLS 계층을 제거하고 기본 소켓 객체를 반환합니다. 연결을 통한 암호화 된 작업에서 암호화되지 않은 상태로 전환하는 데 사용할 수 있습니다. 반환 된 소켓은 항상 원래 소켓이 아니라 연결의 다른 쪽과 추가 통신을 위해 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d60454ef21734ebe87a8161d440e5d61b544e188" translate="yes" xml:space="preserve">
          <source>Performs the following translations in decoding by default:</source>
          <target state="translated">기본적으로 디코딩시 다음과 같은 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="aabfe29ace57f01ba61c63da5353a7eae4366011" translate="yes" xml:space="preserve">
          <source>Performs the same function as &lt;a href=&quot;#email.utils.parsedate&quot;&gt;&lt;code&gt;parsedate()&lt;/code&gt;&lt;/a&gt;, but returns either &lt;code&gt;None&lt;/code&gt; or a 10-tuple; the first 9 elements make up a tuple that can be passed directly to &lt;a href=&quot;time#time.mktime&quot;&gt;&lt;code&gt;time.mktime()&lt;/code&gt;&lt;/a&gt;, and the tenth is the offset of the date&amp;rsquo;s timezone from UTC (which is the official term for Greenwich Mean Time) &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. If the input string has no timezone, the last element of the tuple returned is &lt;code&gt;0&lt;/code&gt;, which represents UTC. Note that indexes 6, 7, and 8 of the result tuple are not usable.</source>
          <target state="translated">&lt;a href=&quot;#email.utils.parsedate&quot;&gt; &lt;code&gt;parsedate()&lt;/code&gt; &lt;/a&gt; 와 동일한 기능을 수행 하지만 &lt;code&gt;None&lt;/code&gt; 또는 10- 튜플을 반환합니다 . 처음 9 개의 요소는 &lt;a href=&quot;time#time.mktime&quot;&gt; &lt;code&gt;time.mktime()&lt;/code&gt; &lt;/a&gt; 직접 전달 될 수있는 튜플을 구성하며 10 번째는 UTC (그리니치 표준시의 공식 용어) &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; 에서 날짜 시간대의 오프셋입니다 . 입력 문자열에 시간대가없는 경우 반환 된 튜플의 마지막 요소는 &lt;code&gt;0&lt;/code&gt; 이며 UTC를 나타냅니다. 결과 튜플의 인덱스 6, 7, 8은 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="89ddfd2579b261a0b50909628ce2423da1fab7c8" translate="yes" xml:space="preserve">
          <source>Performs the template substitution, returning a new string. &lt;em&gt;mapping&lt;/em&gt; is any dictionary-like object with keys that match the placeholders in the template. Alternatively, you can provide keyword arguments, where the keywords are the placeholders. When both &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt; are given and there are duplicates, the placeholders from &lt;em&gt;kwds&lt;/em&gt; take precedence.</source>
          <target state="translated">템플릿 대체를 수행하여 새 문자열을 반환합니다. &lt;em&gt;매핑&lt;/em&gt; 은 템플릿의 자리 표시 자와 일치하는 키가있는 사전과 유사한 객체입니다. 또는 키워드가 자리 표시자인 키워드 인수를 제공 할 수 있습니다. 두 경우 &lt;em&gt;매핑&lt;/em&gt; 및 &lt;em&gt;kwds이&lt;/em&gt; 주어지고 중복이 존재하는,에서 자리 &lt;em&gt;kwds이&lt;/em&gt; 우선합니다.</target>
        </trans-unit>
        <trans-unit id="bd9e556fabad08ed102376a515af641b54a566ff" translate="yes" xml:space="preserve">
          <source>Permanent Redirect &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;, Section 3 (Experimental)</source>
          <target state="translated">영구 리디렉션 &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt; , 섹션 3 (실험적)</target>
        </trans-unit>
        <trans-unit id="b444a32c5eae0334ca71dda2c1b1398e37f30b7e" translate="yes" xml:space="preserve">
          <source>Permanent Redirect &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;, Section 3 (Experimental)</source>
          <target state="translated">영구 리디렉션 &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt; , 섹션 3 (실험용)</target>
        </trans-unit>
        <trans-unit id="57b018dc8100faa36ae221817b9a0becde766f73" translate="yes" xml:space="preserve">
          <source>Permanently remove deleted items from selected mailbox. Generates an &lt;code&gt;EXPUNGE&lt;/code&gt; response for each deleted message. Returned data contains a list of &lt;code&gt;EXPUNGE&lt;/code&gt; message numbers in order received.</source>
          <target state="translated">선택한 메일 함에서 삭제 된 항목을 영구적으로 제거하십시오. 삭제 된 각 메시지에 대해 &lt;code&gt;EXPUNGE&lt;/code&gt; 응답을 생성합니다 . 리턴 된 데이터는 수신 된 &lt;code&gt;EXPUNGE&lt;/code&gt; 메시지 번호 목록을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="922a2aae018739de2e7f95b2906f6a7bda5805d9" translate="yes" xml:space="preserve">
          <source>Permission bits.</source>
          <target state="translated">권한 비트.</target>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="translated">권한이 거부되었습니다</target>
        </trans-unit>
        <trans-unit id="9240c3d4a70b95b9e2dc2b61c69fc6e9243c67cc" translate="yes" xml:space="preserve">
          <source>PermissionError</source>
          <target state="translated">PermissionError</target>
        </trans-unit>
        <trans-unit id="0bf008ca5d81230e81034b7868f292b6c45a642d" translate="yes" xml:space="preserve">
          <source>Permissions and times of directories are copied with &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt;, individual files are copied using &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디렉토리의 권한과 시간은 &lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt; 로 복사되고 개별 파일은 &lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt; 사용하여 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="e504e73bf0a3461a62cbd35fe470dfc8bf2c5dcf" translate="yes" xml:space="preserve">
          <source>Permitscontrol() to returns the event</source>
          <target state="translated">이벤트를 반환하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c5b5b88cbddaa8e1656fda5a833d01be846fc40f" translate="yes" xml:space="preserve">
          <source>Permutations are emitted in lexicographic sort order. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the permutation tuples will be produced in sorted order.</source>
          <target state="translated">순열은 사전 식 정렬 순서로 방출됩니다. 따라서 입력 &lt;em&gt;반복 가능 항목&lt;/em&gt; 이 정렬되면 순열 튜플이 정렬 된 순서로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0117d320fce0d888119832805e38e4a506f88c57" translate="yes" xml:space="preserve">
          <source>Persistence module which stores non-string data.</source>
          <target state="translated">문자열이 아닌 데이터를 저장하는 지속성 모듈.</target>
        </trans-unit>
        <trans-unit id="d71bbb391ec68a612e1e020d3a59cdde37f5adcf" translate="yes" xml:space="preserve">
          <source>Persistence of External Objects</source>
          <target state="translated">외부 객체의 지속성</target>
        </trans-unit>
        <trans-unit id="f203458ed70f830ecf62ab5ec4fd43db183fc0d2" translate="yes" xml:space="preserve">
          <source>Personalization</source>
          <target state="translated">Personalization</target>
        </trans-unit>
        <trans-unit id="98fd5b480af814b89b456d84e3868a121619c9aa" translate="yes" xml:space="preserve">
          <source>Personalization string length (maximum length accepted by constructors).</source>
          <target state="translated">개인화 문자열 길이 (생성자가 허용하는 최대 길이).</target>
        </trans-unit>
        <trans-unit id="bb60655fa1c14e25e42619b562af366048efc9d5" translate="yes" xml:space="preserve">
          <source>Personalization together with the keyed mode can also be used to derive different keys from a single one.</source>
          <target state="translated">키 모드와 함께 개인 설정을 사용하여 단일 키에서 다른 키를 파생시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="56b2fd265bce2ea4249697652f9737fe616a79da" translate="yes" xml:space="preserve">
          <source>Peter Funk</source>
          <target state="translated">피터 펑크</target>
        </trans-unit>
        <trans-unit id="503cfd892a68c3d0070d442675777ad188230916" translate="yes" xml:space="preserve">
          <source>Picklability</source>
          <target state="translated">Picklability</target>
        </trans-unit>
        <trans-unit id="b9ac15b70935eb9e679e679f6c189fa09ae67d5d" translate="yes" xml:space="preserve">
          <source>Pickle interface constructor registration for extension types.</source>
          <target state="translated">확장 유형에 대한 피클 인터페이스 생성자 등록</target>
        </trans-unit>
        <trans-unit id="2eca33cb11a2aa59b9ecf6f599c9adb004a696a1" translate="yes" xml:space="preserve">
          <source>Pickle serialization</source>
          <target state="translated">피클 직렬화</target>
        </trans-unit>
        <trans-unit id="da804ce72ffb2456e57ba07cb24c19e51d793b78" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. If the connection was previously lost, re-establishes the connection. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">레코드의 속성 사전을 피클하고 2 진 형식으로 소켓에 씁니다. 소켓에 오류가 있으면 자동으로 패킷을 삭제합니다. 연결이 이전에 손실 된 경우 연결을 다시 설정하십시오. 수신 측의 레코드를 &lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 로 피클 링하려면 &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c56053b7d0e78c6fbae95ab53af9ceef0a3c06a" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">레코드의 속성 사전을 피클하고 2 진 형식으로 소켓에 씁니다. 소켓에 오류가 있으면 자동으로 패킷을 삭제합니다. 수신 측의 레코드를 &lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 로 피클 링하려면 &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c94932969478efe7a329a1a295b5659be6c229f7" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary in binary format with a length prefix, and returns it ready for transmission across the socket. The details of this operation are equivalent to:</source>
          <target state="translated">레코드의 속성 사전을 길이 접두사가있는 2 진 형식으로 피클하고 소켓을 통해 전송할 준비가 된 것으로 리턴합니다. 이 작업의 세부 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e451c6df0e9534b87f8f317ad70746e8d408ad1" translate="yes" xml:space="preserve">
          <source>Pickling</source>
          <target state="translated">Pickling</target>
        </trans-unit>
        <trans-unit id="479f26b691b28108bc27a86443e601e66de60606" translate="yes" xml:space="preserve">
          <source>Pickling Class Instances</source>
          <target state="translated">산세 클래스 인스턴스</target>
        </trans-unit>
        <trans-unit id="77e2601ad4aef60f1ee4bac62cdc2791e4c29d92" translate="yes" xml:space="preserve">
          <source>Pickling enums created with the functional API can be tricky as frame stack implementation details are used to try and figure out which module the enumeration is being created in (e.g. it will fail if you use a utility function in separate module, and also may not work on IronPython or Jython). The solution is to specify the module name explicitly as follows:</source>
          <target state="translated">프레임 스택 구현 세부 사항을 사용하여 열거에서 작성중인 모듈을 파악하는 데 기능 API로 작성된 피클 링 열거가 까다로울 수 있습니다 (예 : 별도의 모듈에서 유틸리티 함수를 사용하면 작동하지 않으며 작동하지 않을 수 있음) IronPython 또는 Jython에서). 해결책은 다음과 같이 모듈 이름을 명시 적으로 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="102aedc4c02618208304c84353a4e744e7173c74" translate="yes" xml:space="preserve">
          <source>Pickling: &lt;code&gt;__reduce__&lt;/code&gt;, &lt;code&gt;__reduce_ex__&lt;/code&gt;, &lt;code&gt;__getinitargs__&lt;/code&gt;, &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__getstate__&lt;/code&gt; and &lt;code&gt;__setstate__&lt;/code&gt;</source>
          <target state="translated">산세 : &lt;code&gt;__reduce__&lt;/code&gt; , &lt;code&gt;__reduce_ex__&lt;/code&gt; , &lt;code&gt;__getinitargs__&lt;/code&gt; , &lt;code&gt;__getnewargs__&lt;/code&gt; , &lt;code&gt;__getstate__&lt;/code&gt; 및 &lt;code&gt;__setstate__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ca931fcc670468a1619dccb933e3c60b540bff" translate="yes" xml:space="preserve">
          <source>Pipes and Queues</source>
          <target state="translated">파이프와 큐</target>
        </trans-unit>
        <trans-unit id="e64d6f8a78d48c8a48daa8e413ed0a9ee19f4ecd" translate="yes" xml:space="preserve">
          <source>Pipes are not supported, so the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; methods are not implemented.</source>
          <target state="translated">파이프는 지원되지 않으므로 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt; 메소드는 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a2584aa39f242f7fa61f742e95e02a3f0f8d3752" translate="yes" xml:space="preserve">
          <source>Piping output of your program to tools like &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head(1)&lt;/a&gt;&lt;/em&gt; will cause a &lt;a href=&quot;#signal.SIGPIPE&quot;&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;/a&gt; signal to be sent to your process when the receiver of its standard output closes early. This results in an exception like &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt;. To handle this case, wrap your entry point to catch this exception as follows:</source>
          <target state="translated">프로그램의 출력을 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head (1)&lt;/a&gt;&lt;/em&gt; 과 같은 도구로 파이프 하면 표준 출력의 수신기가 일찍 닫힐 때 &lt;a href=&quot;#signal.SIGPIPE&quot;&gt; &lt;code&gt;SIGPIPE&lt;/code&gt; &lt;/a&gt; 신호가 프로세스로 전송됩니다. 그 결과 &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt; 와 같은 예외가 발생 합니다. 이 경우를 처리하려면 다음과 같이이 예외를 포착하도록 진입 점을 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="e56e96590262671b12c88a46c7794d2d395c71cd" translate="yes" xml:space="preserve">
          <source>Piping output of your program to tools like &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head(1)&lt;/a&gt;&lt;/em&gt; will cause a &lt;code&gt;SIGPIPE&lt;/code&gt; signal to be sent to your process when the receiver of its standard output closes early. This results in an exception like &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt;. To handle this case, wrap your entry point to catch this exception as follows:</source>
          <target state="translated">프로그램의 출력을 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head (1)&lt;/a&gt;&lt;/em&gt; 과 같은 도구로 파이프 하면 표준 출력의 수신기가 일찍 닫히면 &lt;code&gt;SIGPIPE&lt;/code&gt; 신호가 프로세스로 전송됩니다. 이로 인해 &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt; 와 같은 예외가 발생 합니다. 이 경우를 처리하려면 다음과 같이 진입 점을 감싸서이 예외를 포착하십시오.</target>
        </trans-unit>
        <trans-unit id="e7abd9437945479aed23328dd738203dfb013266" translate="yes" xml:space="preserve">
          <source>Planet</source>
          <target state="translated">Planet</target>
        </trans-unit>
        <trans-unit id="123a7f2fcc9ae7cbbbd7c7627a483853a9708dab" translate="yes" xml:space="preserve">
          <source>Platform</source>
          <target state="translated">Platform</target>
        </trans-unit>
        <trans-unit id="38b10a3fef9531f82571079e6c0973fde8c3c114" translate="yes" xml:space="preserve">
          <source>Platform Support</source>
          <target state="translated">플랫폼 지원</target>
        </trans-unit>
        <trans-unit id="ff905013a44bbeb970c42652913293a3fa1300b9" translate="yes" xml:space="preserve">
          <source>Platform dependent, but if non-zero, uniquely identifies the file for a given value of &lt;code&gt;st_dev&lt;/code&gt;. Typically:</source>
          <target state="translated">플랫폼에 따라 다르지만 0이 아닌 경우 주어진 값 &lt;code&gt;st_dev&lt;/code&gt; 에 대한 파일을 고유하게 식별합니다 . 일반적으로</target>
        </trans-unit>
        <trans-unit id="7084e0741690a908772be6f36f009af9b7c5145c" translate="yes" xml:space="preserve">
          <source>Platform dependent:</source>
          <target state="translated">플랫폼에 따라 다름 :</target>
        </trans-unit>
        <trans-unit id="8ca44e603d25c586c9bf6c4ad1e35d8888ae2165" translate="yes" xml:space="preserve">
          <source>Platform specific modules</source>
          <target state="translated">플랫폼 별 모듈</target>
        </trans-unit>
        <trans-unit id="0558191147d4364c96f342a5f33275e60632ba76" translate="yes" xml:space="preserve">
          <source>Platform-dependent efficient copy operations</source>
          <target state="translated">플랫폼에 따른 효율적인 복사 작업</target>
        </trans-unit>
        <trans-unit id="89f3176950b094ee092b083d87a3ea394294bab2" translate="yes" xml:space="preserve">
          <source>Platform-specific notes</source>
          <target state="translated">플랫폼 별 노트</target>
        </trans-unit>
        <trans-unit id="9fe47e8a69eece1d617e5e0b2949d5eb25ff3b3a" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemDefault&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemDefault&lt;/code&gt; 사운드를 재생하십시오 .</target>
        </trans-unit>
        <trans-unit id="566e59746b2e159c689466c2026b06a04a488084" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemExclamation&lt;/code&gt; sound.</source>
          <target state="translated">시스템 &lt;code&gt;SystemExclamation&lt;/code&gt; 사운드를 재생합니다 .</target>
        </trans-unit>
        <trans-unit id="1367087c57e69f911b20e62488a2818796ce3f56" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemHand&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemHand&lt;/code&gt; 사운드를 재생하십시오 .</target>
        </trans-unit>
        <trans-unit id="286413e479c251f2c8b7505d0c7e872201bd0efe" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemQuestion&lt;/code&gt; sound.</source>
          <target state="translated">&lt;code&gt;SystemQuestion&lt;/code&gt; 사운드를 재생하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5a38385bd1801f94f6afcc5224a41a5634b9ea5" translate="yes" xml:space="preserve">
          <source>Play the sound repeatedly. The &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; flag must also be used to avoid blocking. Cannot be used with &lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt;&lt;code&gt;SND_MEMORY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소리를 반복해서 재생하십시오. &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; 의&lt;/a&gt; 플래그도 막지 않도록하는 데 사용되어야합니다. &lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt; &lt;code&gt;SND_MEMORY&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e5c41e818401745189aa92dc2b5b8f589f4936d2" translate="yes" xml:space="preserve">
          <source>Please consult the SQLite documentation about the possible values for the first argument and the meaning of the second and third argument depending on the first one. All necessary constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">첫 번째 인수의 가능한 값과 첫 번째 인수에 따른 두 번째 및 세 번째 인수의 의미에 대해서는 SQLite 문서를 참조하십시오. 필요한 모든 상수는 &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt; 모듈 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="965d48bb52ce2d9d91cc30b01489f2b19edc118e" translate="yes" xml:space="preserve">
          <source>Please note that a much more powerful error checking mechanism is available through the &lt;code&gt;errcheck&lt;/code&gt; attribute; see the reference manual for details.</source>
          <target state="translated">&lt;code&gt;errcheck&lt;/code&gt; 속성을 통해 훨씬 강력한 오류 검사 메커니즘을 사용할 수 있습니다 . 자세한 내용은 참조 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c8fc0f93e5dd7c64f8d2e2fe1baaf4f1c7641a90" translate="yes" xml:space="preserve">
          <source>Please note that config parsers don&amp;rsquo;t support escaping of comment prefixes so using &lt;em&gt;inline_comment_prefixes&lt;/em&gt; may prevent users from specifying option values with characters used as comment prefixes. When in doubt, avoid setting &lt;em&gt;inline_comment_prefixes&lt;/em&gt;. In any circumstances, the only way of storing comment prefix characters at the beginning of a line in multiline values is to interpolate the prefix, for example:</source>
          <target state="translated">구성 파서는 주석 접두사 이스케이프를 지원하지 않으므로 &lt;em&gt;inline_comment_prefixes를&lt;/em&gt; 사용 하면 사용자가 주석 접두사로 사용되는 문자로 옵션 값을 지정하지 못할 수 있습니다. 의심 &lt;em&gt;스러운 경우 inline_comment_prefixes를&lt;/em&gt; 설정하지 마십시오 . 어떤 상황에서든 줄 시작 부분에 주석 접두사 문자를 여러 줄 값으로 저장하는 유일한 방법은 접두사를 보간하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="310bbccd36313c76e203cfc5b0ebdd8ca95d2449" translate="yes" xml:space="preserve">
          <source>Please note that default values have precedence over fallback values. For instance, in our example the &lt;code&gt;'CompressionLevel'&lt;/code&gt; key was specified only in the &lt;code&gt;'DEFAULT'&lt;/code&gt; section. If we try to get it from the section &lt;code&gt;'topsecret.server.com'&lt;/code&gt;, we will always get the default, even if we specify a fallback:</source>
          <target state="translated">기본값은 대체 값보다 우선합니다. 예를 들어,이 예에서 &lt;code&gt;'CompressionLevel'&lt;/code&gt; 키는 &lt;code&gt;'DEFAULT'&lt;/code&gt; 섹션 에서만 지정되었습니다 . &lt;code&gt;'topsecret.server.com'&lt;/code&gt; 섹션에서 가져 오려고 하면 폴백을 지정하더라도 항상 기본값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="86e0817628ee18c1a8ed5a0fc40828bffeaed3c5" translate="yes" xml:space="preserve">
          <source>Please note that direct use of bytecode files (and thus not source code files) inhibits your modules from being usable by all Python implementations or new versions of Python which change the bytecode format.</source>
          <target state="translated">바이트 코드 파일 (및 소스 코드 파일이 아님)을 직접 사용하면 모든 Python 구현 또는 바이트 코드 형식을 변경하는 새 버전의 Python에서 모듈을 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="dfa6d4d5a47f1ee1b1fd351d19df2d53810a47a9" translate="yes" xml:space="preserve">
          <source>Please note that this function works like &lt;a href=&quot;#locale.format_string&quot;&gt;&lt;code&gt;format_string()&lt;/code&gt;&lt;/a&gt; but will only work for exactly one &lt;code&gt;%char&lt;/code&gt; specifier. For example, &lt;code&gt;'%f'&lt;/code&gt; and &lt;code&gt;'%.0f'&lt;/code&gt; are both valid specifiers, but &lt;code&gt;'%f KiB'&lt;/code&gt; is not.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#locale.format_string&quot;&gt; &lt;code&gt;format_string()&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 정확히 하나의 &lt;code&gt;%char&lt;/code&gt; 지정자 에서만 작동 합니다. 예를 들어 &lt;code&gt;'%f'&lt;/code&gt; 와 &lt;code&gt;'%.0f'&lt;/code&gt; 는 모두 유효한 지정자이지만 &lt;code&gt;'%f KiB'&lt;/code&gt; 는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="373685c0595172990b3ace0f5f8fe1c0ca75870e" translate="yes" xml:space="preserve">
          <source>Please note: there are ways to add a set of key-value pairs in a single operation. When you use a regular dictionary in those operations, the order of the keys will be ordered. For example:</source>
          <target state="translated">참고 : 단일 작업에서 일련의 키-값 쌍을 추가하는 방법이 있습니다. 이러한 작업에서 일반 사전을 사용하면 키 순서가 정렬됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ea35b5666ef240cb6a4493c17fe5ba6382d03f6" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for more information on best practices.</source>
          <target state="translated">읽어 보시기 바랍니다 &lt;a href=&quot;ssl#ssl-security&quot;&gt;보안 고려 사항을&lt;/a&gt; 모범 사례에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="47bc58981366eed814a57a39e644b2e08a3b6870" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt;&lt;code&gt;os.supports_follow_symlinks&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt; &lt;code&gt;os.supports_follow_symlinks&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0ae02dfe03795c3955ac3c8f1cf68ffc72a268cb" translate="yes" xml:space="preserve">
          <source>Plus corresponds to the unary prefix plus operator in Python. This operation applies the context precision and rounding, so it is &lt;em&gt;not&lt;/em&gt; an identity operation.</source>
          <target state="translated">Plus는 Python의 단항 접두사 더하기 연산자에 해당합니다. 이 작업은 컨텍스트 정밀도와 반올림을 적용하므로 ID 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0330491d58c610056c9cfabfdbebacfad2431d29" translate="yes" xml:space="preserve">
          <source>Pointer instances are created by calling the &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; function on a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type:</source>
          <target state="translated">&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt; 유형 에서 &lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt; 함수를 호출하여 포인터 인스턴스가 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f705c08361997cb6f7df09dbc0c27afef4b025f1" translate="yes" xml:space="preserve">
          <source>Pointer instances can also be indexed with integers:</source>
          <target state="translated">포인터 인스턴스는 정수로 색인 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="482aa3fcf0e95b3b47d95bdfe561af13938b8ff1" translate="yes" xml:space="preserve">
          <source>Pointer instances have a &lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt;&lt;code&gt;contents&lt;/code&gt;&lt;/a&gt; attribute which returns the object to which the pointer points, the &lt;code&gt;i&lt;/code&gt; object above:</source>
          <target state="translated">포인터 인스턴스에는 포인터가 가리키는 객체, 위 의 &lt;code&gt;i&lt;/code&gt; 객체 를 반환 하는 &lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt; &lt;code&gt;contents&lt;/code&gt; &lt;/a&gt; 속성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5b722fc5ad9faac57dfe90f51b7e6e51ad5a968" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="translated">Pointers</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="f13ca4e051430c60cd600a3b936cd44760445204" translate="yes" xml:space="preserve">
          <source>Policies is a low-level mechanism to alter the behavior of functions like &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt;&lt;code&gt;asyncio.get_event_loop()&lt;/code&gt;&lt;/a&gt;. See also the main &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;policies section&lt;/a&gt; for more details.</source>
          <target state="translated">정책은 &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt; &lt;code&gt;asyncio.get_event_loop()&lt;/code&gt; &lt;/a&gt; 와 같은 함수의 동작을 변경하는 저수준 메커니즘 입니다. 자세한 내용은 기본 &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;정책 섹션&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f6e19b461365ea4d2f9baa4f1541cdbc31638a3c" translate="yes" xml:space="preserve">
          <source>Policy Objects</source>
          <target state="translated">정책 객체</target>
        </trans-unit>
        <trans-unit id="b9d50f1346b401ffaac22261d9a0445a59b9c3ef" translate="yes" xml:space="preserve">
          <source>Policy objects can also be combined using the addition operator, producing a policy object whose settings are a combination of the non-default values of the summed objects:</source>
          <target state="translated">더하기 연산자를 사용하여 정책 개체를 결합하여 설정이 합산 개체의 기본값이 아닌 값의 조합 인 정책 개체를 생성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="10db6aaa1dae6d5ca93baae8300239ae0d491fd7" translate="yes" xml:space="preserve">
          <source>Policy objects give the email package the flexibility to handle all these disparate use cases.</source>
          <target state="translated">정책 개체는 전자 메일 패키지에 이러한 개별 사용 사례를 모두 처리 할 수있는 유연성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cc59ba147a78b1cba0063b32337a5117142efb00" translate="yes" xml:space="preserve">
          <source>Policy objects should implement the APIs defined in the &lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt;&lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt;&lt;/a&gt; abstract base class.</source>
          <target state="translated">정책 객체는 &lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt; &lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt; &lt;/a&gt; 추상 기본 클래스에 정의 된 API를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1809b1c47a1a0f8ffda4a1194b61478553d974fe" translate="yes" xml:space="preserve">
          <source>Polling Objects</source>
          <target state="translated">폴링 객체</target>
        </trans-unit>
        <trans-unit id="5d4332b021cb2ecbffef0b518c251198f0483519" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, -1, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">등록 된 파일 디스크립터 세트를 &lt;code&gt;(fd, event)&lt;/code&gt; 하고보고 할 이벤트 또는 오류가있는 디스크립터에 대해 (fd, event) 2 개의 튜플이 포함 된 비어있는 목록을 리턴합니다 . &lt;em&gt;FD는&lt;/em&gt; 파일 기술자이며, &lt;em&gt;이벤트가&lt;/em&gt; 보고 된 그 기술자에 대한 이벤트 설정 비트 비트 마스크입니다 - &lt;code&gt;POLLIN&lt;/code&gt; 입력을 대기 위해, &lt;code&gt;POLLOUT&lt;/code&gt; 는 기술자가 등등에 기록 될 수 있음을 나타냅니다. 빈 목록은 호출 시간이 초과되었으며 파일 설명자에보고 할 이벤트가 없음을 나타냅니다. 경우 &lt;em&gt;제한 시간이&lt;/em&gt; 주어집니다, 시스템이 돌아 오기 전에 이벤트에 대한 대기 시간 (밀리 초)을 지정합니다. 경우 &lt;em&gt;타임 아웃이&lt;/em&gt; 생략되어, -1, 또는 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;이 폴링 오브젝트에 대한 이벤트가있을 때까지 호출이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="8235db5fc164907dd37c9f8fe6afa7077606c5a7" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, negative, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">등록 된 파일 디스크립터 세트를 &lt;code&gt;(fd, event)&lt;/code&gt; 하고보고 할 이벤트 또는 오류가있는 디스크립터에 대해 (fd, event) 2 개의 튜플이 포함 된 비어있는 목록을 리턴합니다 . &lt;em&gt;FD는&lt;/em&gt; 파일 기술자이며, &lt;em&gt;이벤트가&lt;/em&gt; 보고 된 그 기술자에 대한 이벤트 설정 비트 비트 마스크입니다 - &lt;code&gt;POLLIN&lt;/code&gt; 입력을 대기 위해, &lt;code&gt;POLLOUT&lt;/code&gt; 는 기술자가 등등에 기록 될 수 있음을 나타냅니다. 빈 목록은 호출 시간이 초과되었으며 파일 설명자에보고 할 이벤트가 없음을 나타냅니다. 경우 &lt;em&gt;제한 시간이&lt;/em&gt; 주어집니다, 시스템이 돌아 오기 전에 이벤트에 대한 대기 시간 (밀리 초)을 지정합니다. 경우 &lt;em&gt;타임 아웃이&lt;/em&gt; 생략되어, 음극 또는 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;이 폴링 오브젝트에 대한 이벤트가있을 때까지 호출이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="c27a9bb77fd2f98033253218b572e79bc22251dc" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, and also push the new &lt;em&gt;item&lt;/em&gt;. The heap size doesn&amp;rsquo;t change. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;힙&lt;/em&gt; 에서 가장 작은 항목을 팝하여 반환 하고 새 &lt;em&gt;항목을&lt;/em&gt; 푸시합니다 . 힙 크기는 변경되지 않습니다. 힙이 비어 있으면 &lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9a06f0699ad3349431c67e1a47549dabc15760e" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised. To access the smallest item without popping it, use &lt;code&gt;heap[0]&lt;/code&gt;.</source>
          <target state="translated">힙을 변하지 않고 유지하면서 &lt;em&gt;heap&lt;/em&gt; 에서 가장 작은 항목을 팝하고 반환하십시오 . 힙이 비어 있으면 &lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 팝하지 않고 가장 작은 항목에 액세스하려면 &lt;code&gt;heap[0]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee245e4e5d6d950b1854efc1afc869a99c34f7b0" translate="yes" xml:space="preserve">
          <source>Pop the last-pushed input source from the input stack. This is the same method used internally when the lexer reaches EOF on a stacked input stream.</source>
          <target state="translated">마지막으로 푸시 된 입력 소스를 입력 스택에서 팝합니다. 이는 렉서가 스택 된 입력 스트림에서 EOF에 도달 할 때 내부적으로 사용되는 것과 동일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="055df3f558473d7ece8b7d50e1df0ab063d8b702" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a number. title is the title of the dialog window, prompt is a text mostly describing what numerical information to input. default: default value, minval: minimum value for input, maxval: maximum value for input The number input must be in the range minval .. maxval if these are given. If not, a hint is issued and the dialog remains open for correction. Return the number input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">숫자를 입력 할 수있는 대화 상자가 나타납니다. title은 대화 창의 제목이고 prompt는 입력 할 숫자 정보를 설명하는 텍스트입니다. 기본값 : 기본값, 최소값 : 입력의 최소값, 최대 값 : 입력의 최대 값 입력되는 경우 숫자 입력은 minval .. maxval 범위에 있어야합니다. 그렇지 않은 경우 힌트가 발행되고 수정을 위해 대화 상자가 열려 있습니다. 숫자 입력을 반환합니다. 대화 상자가 취소되면 &lt;code&gt;None&lt;/code&gt; 을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a30e7e9c16d1d2289a14843ccfa17e59bc5f258" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a string. Parameter title is the title of the dialog window, prompt is a text mostly describing what information to input. Return the string input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">문자열 입력을위한 대화창을 띄웁니다. 매개 변수 제목은 대화 창의 제목이며 프롬프트는 대부분 어떤 정보를 입력해야하는지 설명하는 텍스트입니다. 문자열 입력을 반환합니다. 대화 상자가 취소되면 &lt;code&gt;None&lt;/code&gt; 을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="aceabe368eed8bf1ef8907fda06132011ac87f29" translate="yes" xml:space="preserve">
          <source>Popen Constructor</source>
          <target state="translated">Popen 생성자</target>
        </trans-unit>
        <trans-unit id="c58508b5bfbc193df948f2c96619660505caf807" translate="yes" xml:space="preserve">
          <source>Popen Objects</source>
          <target state="translated">교황 개체</target>
        </trans-unit>
        <trans-unit id="a46cb4ea3a3611a4d180ffb9a39ca4d82b2ad2d0" translate="yes" xml:space="preserve">
          <source>Popen and the other functions in this module that use it raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt; with arguments &lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;cwd&lt;/code&gt;, and &lt;code&gt;env&lt;/code&gt;. The value for &lt;code&gt;args&lt;/code&gt; may be a single string or a list of strings, depending on platform.</source>
          <target state="translated">Popen 및이 모듈에서이를 사용하는 다른 함수는 &lt;a href=&quot;sys#auditing&quot;&gt;auditing 이벤트 &lt;/a&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; 을 인수 &lt;code&gt;executable&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;cwd&lt;/code&gt; 및 &lt;code&gt;env&lt;/code&gt; 로 발생 시킵니다. &lt;code&gt;args&lt;/code&gt; 의 값은 플랫폼에 따라 단일 문자열 또는 문자열 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b17551906939bf00cd6210cfc6e1b7c22e1ad7f" translate="yes" xml:space="preserve">
          <source>Popen objects are supported as context managers via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</source>
          <target state="translated">Popen 객체는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 통해 컨텍스트 관리자로 지원됩니다. 종료시 표준 파일 디스크립터가 닫히고 프로세스가 대기합니다.</target>
        </trans-unit>
        <trans-unit id="978c59d8af192e39c8936fde3caa23f59d8cd38d" translate="yes" xml:space="preserve">
          <source>Popen objects are supported as context managers via the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</source>
          <target state="translated">Popen 개체는 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문을 통해 컨텍스트 관리자로 지원됩니다. 종료시 표준 파일 설명자가 닫히고 프로세스가 대기합니다.</target>
        </trans-unit>
        <trans-unit id="2dd4b5da656a3d45200c0848ee3cb43ac97a6338" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; iterables from the stack, joins them in a single tuple, and pushes the result. Implements iterable unpacking in tuple displays &lt;code&gt;(*x, *y, *z)&lt;/code&gt;.</source>
          <target state="translated">Pops 는 스택에서 iterable을 &lt;em&gt;계산&lt;/em&gt; 하여 단일 튜플로 결합하고 결과를 푸시합니다. 튜플 디스플레이 &lt;code&gt;(*x, *y, *z)&lt;/code&gt; 에서 반복 가능한 압축 풀기를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="5814db5efa9b8e3b6caaad0167cd52a48d05cad9" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; mappings from the stack, merges them into a single dictionary, and pushes the result. Implements dictionary unpacking in dictionary displays &lt;code&gt;{**x, **y, **z}&lt;/code&gt;.</source>
          <target state="translated">팝 은 스택에서 매핑을 &lt;em&gt;계산&lt;/em&gt; 하여 단일 사전에 병합 한 다음 결과를 푸시합니다. 사전 표시 &lt;code&gt;{**x, **y, **z}&lt;/code&gt; 에서 사전 압축 풀기를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="f955b29f96865f975ad2cc90b3761ccd0a745b04" translate="yes" xml:space="preserve">
          <source>Pops TOS and delegates to it as a subiterator from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOS를 팝하고 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 에서 하위 반복자로 TOS를 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="dfdc28a8937cb1fea005bc1c6e29745f179c6b94" translate="yes" xml:space="preserve">
          <source>Pops TOS and delegates to it as a subiterator from a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOS를 팝하고 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 에서 하위 반복자로 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="e75775f93f745fd74be7c11015a4c8773b0fb9e4" translate="yes" xml:space="preserve">
          <source>Pops TOS and yields it from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOS를 팝하여 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 에서 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="ca1ee5bef01308b73dd27cc3ba32e25e4bcefd9b" translate="yes" xml:space="preserve">
          <source>Pops TOS and yields it from a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">TOS를 팝하고 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;생성기&lt;/a&gt; 에서 산출합니다 .</target>
        </trans-unit>
        <trans-unit id="311c1ea2633dd1ec9cbb05af909c7c19133217d2" translate="yes" xml:space="preserve">
          <source>Pops a list from the stack and pushes a tuple containing the same values.</source>
          <target state="translated">스택에서 목록을 꺼내고 동일한 값을 포함하는 튜플을 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="6868d2193ffcb37b3d1f2442c16bbba7237b9adc" translate="yes" xml:space="preserve">
          <source>Pops two values from the stack. If SECOND is not None and TOS is true unwinds the EXCEPT_HANDLER block which was created when the exception was caught and pushes &lt;code&gt;NULL&lt;/code&gt; to the stack.</source>
          <target state="translated">스택에서 두 값을 팝합니다. SECOND가 없음이 아니고 TOS가 true 인 경우 예외가 발생했을 때 작성된 EXCEPT_HANDLER 블록을 해제하고 &lt;code&gt;NULL&lt;/code&gt; 을 스택으로 푸시 합니다 .</target>
        </trans-unit>
        <trans-unit id="e6936131642fa3e4ba0d0f2eb70bda60239e2636" translate="yes" xml:space="preserve">
          <source>Population standard deviation of data.</source>
          <target state="translated">데이터의 모집단 표준 편차.</target>
        </trans-unit>
        <trans-unit id="18813ec1cc24c6306c29b1b2d825acb9bd81a19c" translate="yes" xml:space="preserve">
          <source>Population variance of data.</source>
          <target state="translated">데이터의 인구 분산.</target>
        </trans-unit>
        <trans-unit id="5a089a07054447bb48b9434607e3b38a83e6a79f" translate="yes" xml:space="preserve">
          <source>Port number as integer, if present</source>
          <target state="translated">존재하는 경우 정수로 표시되는 포트 번호</target>
        </trans-unit>
        <trans-unit id="b9f18b923e08eb677137525e942c79d70f214b5f" translate="yes" xml:space="preserve">
          <source>Portable Bitmap Files</source>
          <target state="translated">휴대용 비트 맵 파일</target>
        </trans-unit>
        <trans-unit id="abcb4ef75def5eeb0dfd26e2d30fca465df66512" translate="yes" xml:space="preserve">
          <source>Portable Graymap Files</source>
          <target state="translated">휴대용 그레이 맵 파일</target>
        </trans-unit>
        <trans-unit id="0655d96b4660aed951fededfbd01c7c59119ecd3" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics</source>
          <target state="translated">휴대용 네트워크 그래픽</target>
        </trans-unit>
        <trans-unit id="ee01b2134ec356d26acdc9982e7f3833060105a8" translate="yes" xml:space="preserve">
          <source>Portable Pixmap Files</source>
          <target state="translated">휴대용 Pixmap 파일</target>
        </trans-unit>
        <trans-unit id="23882c575954a0789bf02aba9e6dd01f539bc738" translate="yes" xml:space="preserve">
          <source>Portuguese</source>
          <target state="translated">Portuguese</target>
        </trans-unit>
        <trans-unit id="59b624bfe60ebbef01b74f793b39f506221b6c00" translate="yes" xml:space="preserve">
          <source>Positional and keyword arguments may also be passed to &lt;a href=&quot;#atexit.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; to be passed along to the registered function when it is called:</source>
          <target state="translated">위치 및 키워드 인수는 &lt;a href=&quot;#atexit.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt; 로 전달되어 등록 된 함수가 호출 될 때 등록 된 함수 로 전달 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8b8ca1d6ad9d89dd32a11078244dcd70423b419" translate="yes" xml:space="preserve">
          <source>Positional arguments are files to compile or directories that contain source files, traversed recursively. If no argument is given, behave as if the command line was &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">위치 인수는 컴파일 할 파일 또는 소스 파일이 포함 된 디렉토리이며 재귀 적으로 순회합니다. 인수가 제공되지 않으면 명령 행이 &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt; 인 것처럼 작동하십시오 .</target>
        </trans-unit>
        <trans-unit id="06fe9ace9667aa168708159444d8188edd059f54" translate="yes" xml:space="preserve">
          <source>Positive</source>
          <target state="translated">Positive</target>
        </trans-unit>
        <trans-unit id="81a9a0719b90c9b53d8f587213315a80505f6dff" translate="yes" xml:space="preserve">
          <source>Positive and negative infinity, positive and negative zero, and nans, are formatted as &lt;code&gt;inf&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;nan&lt;/code&gt; respectively, regardless of the precision.</source>
          <target state="translated">양수 및 음수 무한대, 양수 및 음수 0 및 &lt;code&gt;nan&lt;/code&gt; 은 정밀도에 관계없이 각각 &lt;code&gt;inf&lt;/code&gt; , &lt;code&gt;-inf&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;-0&lt;/code&gt; 및 nan 으로 형식이 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fbadb91c0f2d470c8467dae6bb12a446a01cc7db" translate="yes" xml:space="preserve">
          <source>Possible states are:</source>
          <target state="translated">가능한 상태는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="63f69fd6d6f413090e0f4f3fa400b942a162733e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; to disable workarounds for broken X.509 certificates.</source>
          <target state="translated">깨진 X.509 인증서에 대한 해결 방법을 비활성화 하기 위해 &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; &lt;/a&gt; 에 가능한 값입니다 .</target>
        </trans-unit>
        <trans-unit id="4ba63e08aceb3c446a295cf92ec1b942aa49b732" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, CRLs of all certificates in the peer cert chain are checked.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 의&lt;/a&gt; 가능한 값입니다 . 이 모드에서는 피어 인증서 체인에있는 모든 인증서의 CRL이 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="681006f1919e6854682d4ccba2e10d6f1ec838d7" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, certificate revocation lists (CRLs) are not checked. By default OpenSSL does neither require nor verify CRLs.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 의&lt;/a&gt; 가능한 값입니다 . 이 모드에서는 CRL (인증서 해지 목록)이 확인되지 않습니다. 기본적으로 OpenSSL은 CRL을 요구하거나 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b96016f2b620584350815c8bed102abcc7f2789a" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, only the peer cert is checked but none of the intermediate CA certificates. The mode requires a valid CRL that is signed by the peer cert&amp;rsquo;s issuer (its direct ancestor CA). If no proper CRL has been loaded with &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt;&lt;/a&gt;, validation will fail.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 에&lt;/a&gt; 가능한 값입니다 . 이 모드에서는 피어 인증서 만 확인되고 중간 CA 인증서는 확인되지 않습니다. 모드에는 피어 인증서의 발급자 (직계 상위 CA)가 서명 한 유효한 CRL이 필요합니다. &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt; &lt;/a&gt; 로 적절한 CRL 이로 드되지 않은 경우 유효성 검사가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="834cb8dd69db769ec9e67cc37db58e1dcab7a3c4" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, only the peer cert is checked but none of the intermediate CA certificates. The mode requires a valid CRL that is signed by the peer cert&amp;rsquo;s issuer (its direct ancestor CA). If no proper CRL has has been loaded with &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt;&lt;/a&gt;, validation will fail.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 의&lt;/a&gt; 가능한 값입니다 . 이 모드에서는 피어 인증서 만 확인하지만 중간 CA 인증서는 확인하지 않습니다. 이 모드에는 피어 인증서 발급자 (직계 조상 CA)가 서명 한 유효한 CRL이 필요합니다. &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt; &lt;/a&gt; 로 올바른 CRL을로드하지 않은 경우 유효성 검사가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="81033163c8cc54904575c439b4a3466834d6c011" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. It instructs OpenSSL to prefer trusted certificates when building the trust chain to validate a certificate. This flag is enabled by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 의&lt;/a&gt; 가능한 값입니다 . 인증서를 검증하기 위해 신뢰 체인을 구축 할 때 OpenSSL에 신뢰할 수있는 인증서를 선호하도록 지시합니다. 이 플래그는 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d3909c91e1e0e21475e53c7bf078037dcbcbfb5" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. Except for &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt;, it is the default mode. With client-side sockets, just about any cert is accepted. Validation errors, such as untrusted or expired cert, are ignored and do not abort the TLS/SSL handshake.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cert_reqs&lt;/code&gt; 매개 변수의 가능한 값은 &lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; 를&lt;/a&gt; 제외하고 기본 모드입니다. 클라이언트 측 소켓을 사용하면 거의 모든 인증서를 사용할 수 있습니다. 신뢰할 수 없거나 만료 된 인증서와 같은 유효성 검사 오류는 무시되며 TLS / SSL 핸드 셰이크를 중단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8c9444f11c8fa0cbf7a1cf96c440bde31779c0e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In client mode, &lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt;&lt;code&gt;CERT_OPTIONAL&lt;/code&gt;&lt;/a&gt; has the same meaning as &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt;. It is recommended to use &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; for client-side sockets instead.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cert_reqs&lt;/code&gt; 매개 변수의 가능한 값은 &lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt; 입니다. 클라이언트 모드에서 &lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt; &lt;code&gt;CERT_OPTIONAL&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다 . 대신 클라이언트 측 소켓에 &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5069135a65407b38a1f42b151ee1613e108b36f0" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In this mode, certificates are required from the other side of the socket connection; an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; will be raised if no certificate is provided, or if its validation fails. This mode is &lt;strong&gt;not&lt;/strong&gt; sufficient to verify a certificate in client mode as it does not match hostnames. &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; must be enabled as well to verify the authenticity of a cert. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and enables &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cert_reqs&lt;/code&gt; 매개 변수의 가능한 값은 &lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt; 입니다. 이 모드에서는 소켓 연결의 다른 쪽에서 인증서가 필요합니다. &lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; 은&lt;/a&gt; 인증서가 제공되지 않은 경우 발생합니다, 또는 유효성 검사가 실패합니다. 이 모드는 &lt;strong&gt;되지&lt;/strong&gt; 는 호스트 이름과 일치하지 않는 클라이언트 모드에서 인증서를 확인하기에 충분. 인증서의 진위 여부를 확인하려면 &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt; 도 활성화해야합니다. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; 는&lt;/a&gt; 사용 &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; 을&lt;/a&gt; 하고 수 &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; 을&lt;/a&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="c2907ec0c1e89d9ea47e904c9015b71f6024c1e0" translate="yes" xml:space="preserve">
          <source>Possible value for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If this is given as &lt;em&gt;mode&lt;/em&gt;, the &lt;code&gt;spawn*()&lt;/code&gt; functions will not return until the new process has run to completion and will return the exit code of the process the run is successful, or &lt;code&gt;-signal&lt;/code&gt; if a signal kills the process.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt; 함수 군에 &lt;em&gt;모드&lt;/em&gt; 매개 변수에 가능한 값 . 이것이 &lt;em&gt;mode로 지정&lt;/em&gt; 되면, &lt;code&gt;spawn*()&lt;/code&gt; 함수는 새 프로세스가 완료 될 때까지 리턴되지 않으며 실행이 성공한 프로세스의 종료 코드를 리턴하거나 &lt;code&gt;-signal&lt;/code&gt; 가 프로세스를 종료 하는 경우-신호 를 리턴합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="595379185db1d5c8fb2fa29686c56e99c74f8a16" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If either of these values is given, the &lt;code&gt;spawn*()&lt;/code&gt; functions will return as soon as the new process has been created, with the process id as the return value.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt; 함수 군에 &lt;em&gt;모드&lt;/em&gt; 매개 변수에 가능한 값 . 이 값 중 하나를 지정 하면 프로세스 ID를 반환 값으로 사용하여 새 프로세스가 생성되는 즉시 &lt;code&gt;spawn*()&lt;/code&gt; 함수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="98444d7e6ce2c20d6c8fa33edbb3a360778be71c" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. These are less portable than those listed above. &lt;a href=&quot;#os.P_DETACH&quot;&gt;&lt;code&gt;P_DETACH&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt;, but the new process is detached from the console of the calling process. If &lt;a href=&quot;#os.P_OVERLAY&quot;&gt;&lt;code&gt;P_OVERLAY&lt;/code&gt;&lt;/a&gt; is used, the current process will be replaced; the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; function will not return.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt; 함수 군에 &lt;em&gt;mode&lt;/em&gt; 매개 변수에 가능한 값 . 이들은 위에 나열된 것보다 이식성이 떨어집니다. &lt;a href=&quot;#os.P_DETACH&quot;&gt; &lt;code&gt;P_DETACH&lt;/code&gt; 은&lt;/a&gt; 유사하다 &lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; &lt;/a&gt; 하지만, 새로운 프로세스는 호출 프로세스의 콘솔에서 분리된다. 경우 &lt;a href=&quot;#os.P_OVERLAY&quot;&gt; &lt;code&gt;P_OVERLAY&lt;/code&gt; 가&lt;/a&gt; 사용되며, 현재 프로세스를 교체해야합니다; &lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt; 기능은 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad471bf2d14a9f069fad782304e156715b0c3a8d" translate="yes" xml:space="preserve">
          <source>Post an article using the &lt;code&gt;POST&lt;/code&gt; command. The &lt;em&gt;data&lt;/em&gt; argument is either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary reading, or any iterable of bytes objects (representing raw lines of the article to be posted). It should represent a well-formed news article, including the required headers. The &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt; method automatically escapes lines beginning with &lt;code&gt;.&lt;/code&gt; and appends the termination line.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 명령을 사용하여 기사를 게시하십시오 . &lt;em&gt;데이터&lt;/em&gt; 인수 중 하나 인 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 바이너리 읽기 위해 열, 또는 (게시하는 기사의 원시 라인을 나타내는) 바이트 객체의 반복자. 필수 헤더를 포함하여 올바르게 구성된 뉴스 기사를 나타내야합니다. &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt; 메서드는 자동으로 시작하는 라인을 탈출 &lt;code&gt;.&lt;/code&gt; 종료 라인을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="db58210c1724ca48af84717417f1155cd9124a3d" translate="yes" xml:space="preserve">
          <source>Post an article using the &lt;code&gt;POST&lt;/code&gt; command. The &lt;em&gt;data&lt;/em&gt; argument is either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary reading, or any iterable of bytes objects (representing raw lines of the article to be posted). It should represent a well-formed news article, including the required headers. The &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt; method automatically escapes lines beginning with &lt;code&gt;.&lt;/code&gt; and appends the termination line.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 명령을 사용하여 기사를 게시합니다 . &lt;em&gt;데이터&lt;/em&gt; 인수 중 하나 인 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 바이너리 읽기 위해 열, 또는 (게시하는 기사의 원시 라인을 나타내는) 바이트 객체의 반복자. 필수 헤더를 포함하여 잘 구성된 뉴스 기사를 나타내야합니다. &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt; 메서드는 자동으로 시작하는 라인을 탈출 &lt;code&gt;.&lt;/code&gt; 종료 줄을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b63bfd48fc2a1b5e7e89f48afbac27f355349bc7" translate="yes" xml:space="preserve">
          <source>Post-init processing</source>
          <target state="translated">초기 처리</target>
        </trans-unit>
        <trans-unit id="be382487def51aeab399ad276c635ee4d94d07d1" translate="yes" xml:space="preserve">
          <source>Power and logarithmic functions</source>
          <target state="translated">전력 및 로그 함수</target>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="178cd9d66a4b1bce25cb5e2cea3f2128b6ffceb3" translate="yes" xml:space="preserve">
          <source>PowerShell Core</source>
          <target state="translated">PowerShell 코어</target>
        </trans-unit>
        <trans-unit id="db3d345a9a0fd91ab9f33caeeec48958f5ce609f" translate="yes" xml:space="preserve">
          <source>Practical Programming in Tcl and Tk</source>
          <target state="translated">Tcl 및 Tk의 실용 프로그래밍</target>
        </trans-unit>
        <trans-unit id="490f67184b68428ab7db592bcebf51431ff864dc" translate="yes" xml:space="preserve">
          <source>Precision (optional), given as a &lt;code&gt;'.'&lt;/code&gt; (dot) followed by the precision. If specified as &lt;code&gt;'*'&lt;/code&gt; (an asterisk), the actual precision is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the value to convert comes after the precision.</source>
          <target state="translated">&lt;code&gt;'.'&lt;/code&gt; 으로 제공되는 정밀도 (선택 사항) (점) 뒤에 정밀도가옵니다. &lt;code&gt;'*'&lt;/code&gt; (별표) 로 지정된 경우 실제 정밀도는 튜플의 다음 요소에서 &lt;em&gt;values&lt;/em&gt; 로 읽히고 변환 할 값은 정밀도 뒤에옵니다.</target>
        </trans-unit>
        <trans-unit id="449d850ff0a5b8d2b97bfb75bf9d9fdcf80b0bd6" translate="yes" xml:space="preserve">
          <source>Precomputed tables</source>
          <target state="translated">미리 계산 된 테이블</target>
        </trans-unit>
        <trans-unit id="71527b4452262b2288bec21620f4277e5383be6c" translate="yes" xml:space="preserve">
          <source>Predicates (expressions within square brackets) must be preceded by a tag name, an asterisk, or another predicate. &lt;code&gt;position&lt;/code&gt; predicates must be preceded by a tag name.</source>
          <target state="translated">술어 (대괄호 안에있는 표현식) 앞에는 태그 이름, 별표 또는 다른 술어가 와야합니다. &lt;code&gt;position&lt;/code&gt; 술어 앞에는 태그 이름이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="707ddefda8b9d501a1d63dad3fcb74d0cb28b51a" translate="yes" xml:space="preserve">
          <source>Preface</source>
          <target state="translated">Preface</target>
        </trans-unit>
        <trans-unit id="bde7dd0530c513b11cc390474cc050f812b6f3db" translate="yes" xml:space="preserve">
          <source>Prefix each line with the time since the program started. Only used while tracing.</source>
          <target state="translated">프로그램이 시작된 이후의 시간을 각 줄 앞에 붙입니다. 추적하는 동안에 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="515863d159aa2e0dd47fb1d5d6139a71281b0192" translate="yes" xml:space="preserve">
          <source>Prefix, net mask and host mask</source>
          <target state="translated">접두사, 네트 마스크 및 호스트 마스크</target>
        </trans-unit>
        <trans-unit id="93c620f6932937b6bc7d5291dc67d610857f5774" translate="yes" xml:space="preserve">
          <source>Prefixes any opcode which has an argument too big to fit into the default one byte. &lt;em&gt;ext&lt;/em&gt; holds an additional byte which act as higher bits in the argument. For each opcode, at most three prefixal &lt;code&gt;EXTENDED_ARG&lt;/code&gt; are allowed, forming an argument from two-byte to four-byte.</source>
          <target state="translated">인수가 너무 커서 기본 1 바이트에 맞지 않는 opcode를 접두어로 사용합니다. &lt;em&gt;ext&lt;/em&gt; 는 인수에서 상위 비트로 작동하는 추가 바이트를 보유합니다. 각 opcode마다 최대 3 개의 접두어 &lt;code&gt;EXTENDED_ARG&lt;/code&gt; 가 허용되며 2 바이트에서 4 바이트 사이의 인수를 형성합니다.</target>
        </trans-unit>
        <trans-unit id="aeab98f5a34301d71af8d216207f9b70ea4d1b4f" translate="yes" xml:space="preserve">
          <source>Prepare a record for handling.</source>
          <target state="translated">취급 할 기록을 준비하십시오.</target>
        </trans-unit>
        <trans-unit id="eaabdea71a53a1d312c68621c7a08cafc4337348" translate="yes" xml:space="preserve">
          <source>Prepare for object destruction. &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; provides a default implementation of this method that calls the instance&amp;rsquo;s &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">객체 파괴를 준비하십시오. &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 는 인스턴스의 &lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는이 메소드의 기본 구현을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="48869057a3eaf9b7bda4696b2a82f8cd32542baa" translate="yes" xml:space="preserve">
          <source>Prepare the request by connecting to a proxy server. The &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;type&lt;/em&gt; will replace those of the instance, and the instance&amp;rsquo;s selector will be the original URL given in the constructor.</source>
          <target state="translated">프록시 서버에 연결하여 요청을 준비하십시오. &lt;em&gt;호스트&lt;/em&gt; 와 &lt;em&gt;유형은&lt;/em&gt; 인스턴스의 사람들을 대체하며, 인스턴스의 선택은 생성자에 주어진 원래의 URL 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="2acd0ee4e2fd08e925fed1556f93a353652b578a" translate="yes" xml:space="preserve">
          <source>Prepares a record for queuing. The object returned by this method is enqueued.</source>
          <target state="translated">큐에 레코드를 준비합니다. 이 메소드에 의해 리턴 된 오브젝트가 큐에 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="57c6749aaa2e639ce29f4d77ddbc7ec04736e80b" translate="yes" xml:space="preserve">
          <source>Pretend &lt;em&gt;count&lt;/em&gt; lines have been changed, starting with line &lt;em&gt;start&lt;/em&gt;. If &lt;em&gt;changed&lt;/em&gt; is supplied, it specifies whether the affected lines are marked as having been changed (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=True&lt;/code&gt;) or unchanged (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=False&lt;/code&gt;).</source>
          <target state="translated">척수 &lt;em&gt;카운트&lt;/em&gt; 라인이 line &lt;em&gt;start로&lt;/em&gt; 시작하여 변경되었습니다 . 경우 &lt;em&gt;변경&lt;/em&gt; 공급되어,이 영향을 줄이 변경된 것으로 표시되는지 여부를 지정 ( &lt;em&gt;변경 &lt;/em&gt; &lt;code&gt;=True&lt;/code&gt; () 또는 변하지 &lt;em&gt;변경 &lt;/em&gt; &lt;code&gt;=False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2f8b9077326620d7215f339382fae5f8dbf5068b" translate="yes" xml:space="preserve">
          <source>Pretend the whole window has been changed, for purposes of drawing optimizations.</source>
          <target state="translated">도면 최적화를 위해 전체 창이 변경된 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d69b44b9452e785bcf38a58c11f7522588dd0a12" translate="yes" xml:space="preserve">
          <source>Pretty printing:</source>
          <target state="translated">예쁜 인쇄 :</target>
        </trans-unit>
        <trans-unit id="cc5593cc97eb10b44d34d3ef59a99ba2b518cf84" translate="yes" xml:space="preserve">
          <source>Pretty top</source>
          <target state="translated">예쁜 탑</target>
        </trans-unit>
        <trans-unit id="736722dd09c56467e68847a72672d85b5b4e5d72" translate="yes" xml:space="preserve">
          <source>PrettyPrinter Objects</source>
          <target state="translated">PrettyPrinter 객체</target>
        </trans-unit>
        <trans-unit id="3d63214479b7b9df436250cf443d77f3a6172b43" translate="yes" xml:space="preserve">
          <source>Prev (previous)</source>
          <target state="translated">이전 (이전)</target>
        </trans-unit>
        <trans-unit id="1706782b9fb86817417f6ce4b4b586638f5f4fe5" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt; from blocking. In particular, this prevents the background thread from being joined automatically when the process exits &amp;ndash; see &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt; 가 차단되지 않도록합니다 . 특히, 프로세스가 종료 될 때 백그라운드 스레드가 자동으로 결합되는 것을 방지합니다 &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="107e68d762b79bad537ef9fb207d4e1d39e52d58" translate="yes" xml:space="preserve">
          <source>Prevent client side from requesting a session ticket.</source>
          <target state="translated">클라이언트 측에서 세션 티켓을 요청하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="c30a1250034cd8e55c1c2149d1282952906d4b8e" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1 as the protocol version.</source>
          <target state="translated">TLSv1 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 TLSv1을 프로토콜 버전으로 선택하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="8afbd15b84e40a48b2da893725e169841a8cfb02" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.1 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">TLSv1.1 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 프로토콜 버전으로 TLSv1.1을 선택하지 못하게합니다. openssl 버전 1.0.1 이상에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e1aad586005b65865ebf605785c29cd1a005d4e0" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.2 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">TLSv1.2 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 프로토콜 버전으로 TLSv1.2를 선택하지 못하게합니다. openssl 버전 1.0.1 이상에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="09c8e59b75ea4fcfcf9e178d3d0fa59ba0f19d05" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.3 as the protocol version. TLS 1.3 is available with OpenSSL 1.1.1 or later. When Python has been compiled against an older version of OpenSSL, the flag defaults to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">TLSv1.3 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 프로토콜 버전으로 TLSv1.3을 선택하지 못하게합니다. TLS 1.3은 OpenSSL 1.1.1 이상에서 사용할 수 있습니다. Python이 이전 버전의 OpenSSL에 대해 컴파일 된 경우 플래그의 기본값은 &lt;em&gt;0&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cbb04da33d788199d87cc8cadc4dadbebdb32b14" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv2 as the protocol version.</source>
          <target state="translated">SSLv2 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 SSLv2를 프로토콜 버전으로 선택하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="e9b46f8715c307e61781566f286e18f0ca110744" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv3 as the protocol version.</source>
          <target state="translated">SSLv3 연결을 방지합니다. 이 옵션은 &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt; 와 함께 만 적용 할 수 있습니다. 피어가 SSLv3을 프로토콜 버전으로 선택하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="9dfcb0887264caddd8e829fb5d7f710039337de4" translate="yes" xml:space="preserve">
          <source>Prevents any more tasks from being submitted to the pool. Once all the tasks have been completed the worker processes will exit.</source>
          <target state="translated">더 이상의 작업이 풀에 제출되지 않도록합니다. 모든 작업이 완료되면 작업자 프로세스가 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="dc320ab03d06fd63221446db92226635a2e40b3c" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same DH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">고유 한 SSL 세션에 동일한 DH 키를 재사용하지 못하게합니다. 이를 통해 순방향 보안이 향상되지만 더 많은 계산 리소스가 필요합니다. 이 옵션은 서버 소켓에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a7ea65f7cda64106b6057a83880d70342ae857bc" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same ECDH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">고유 한 SSL 세션에 동일한 ECDH 키를 재사용하지 못하게합니다. 이를 통해 순방향 보안이 향상되지만 더 많은 계산 리소스가 필요합니다. 이 옵션은 서버 소켓에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f2319e1b3ce31d6273e32117a3b51c171cce33b2" translate="yes" xml:space="preserve">
          <source>Previous History</source>
          <target state="translated">이전 역사</target>
        </trans-unit>
        <trans-unit id="1cf61f9b704231b7d9da66ca29b0efd733397410" translate="yes" xml:space="preserve">
          <source>Previous calls to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; determine exactly what objects are created and how they are assigned. See the documentation for &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 이전 호출은 정확히 어떤 객체가 만들어지고 어떻게 할당되는지를 결정합니다. 자세한 내용은 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="81f547195bef12a0bb74f5af751fe50e78a0c2f3" translate="yes" xml:space="preserve">
          <source>Previous page</source>
          <target state="translated">이전 페이지</target>
        </trans-unit>
        <trans-unit id="7b2c11a3c946fcc3cf0f0e62f1d9a7753a415146" translate="yes" xml:space="preserve">
          <source>Previously detected by MUA</source>
          <target state="translated">이전에 MUA에서 감지</target>
        </trans-unit>
        <trans-unit id="e4da2d9864c0122b5dbabd8caa7e6fe3ce162517" translate="yes" xml:space="preserve">
          <source>Previously registered error handlers (including the standard error handlers) can be looked up by name:</source>
          <target state="translated">이전에 등록 된 오류 처리기 (표준 오류 처리기 포함)는 이름별로 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="translated">Print</target>
        </trans-unit>
        <trans-unit id="92c131e7cbd0707515ecfaf6e40abffb9a8099ab" translate="yes" xml:space="preserve">
          <source>Print (to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;) a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 사이 &lt;em&gt;의&lt;/em&gt; 비교 를 인쇄합니다 ( &lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; 에&lt;/a&gt; ) .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24d7c51d91db7ea29be8c3d303dbaf662d021276" translate="yes" xml:space="preserve">
          <source>Print &lt;em&gt;objects&lt;/em&gt; to the text stream &lt;em&gt;file&lt;/em&gt;, separated by &lt;em&gt;sep&lt;/em&gt; and followed by &lt;em&gt;end&lt;/em&gt;. &lt;em&gt;sep&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;, &lt;em&gt;file&lt;/em&gt; and &lt;em&gt;flush&lt;/em&gt;, if present, must be given as keyword arguments.</source>
          <target state="translated">&lt;em&gt;sep로&lt;/em&gt; 구분 된 다음 &lt;em&gt;끝으로&lt;/em&gt; 텍스트 스트림 &lt;em&gt;파일에 &lt;/em&gt;&lt;em&gt;객체&lt;/em&gt; 를 인쇄 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;sep&lt;/em&gt; , &lt;em&gt;end&lt;/em&gt; , &lt;em&gt;file&lt;/em&gt; 및 &lt;em&gt;flush&lt;/em&gt; 는있는 경우 키워드 인수로 제공되어야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75ea07e0a17305b6a0d75015e0d39ee48139eff9" translate="yes" xml:space="preserve">
          <source>Print Window</source>
          <target state="translated">인쇄 창</target>
        </trans-unit>
        <trans-unit id="092b80785f55799fe50486ddf8f296c06ea3eb11" translate="yes" xml:space="preserve">
          <source>Print a brief description of how the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; should be invoked on the command line. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">명령 행 에서 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 를 호출 하는 방법에 대한 간단한 설명을 인쇄하십시오 . 경우 &lt;em&gt;파일이&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; , &lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; 은&lt;/a&gt; 가정한다.</target>
        </trans-unit>
        <trans-unit id="7a9eb22264c3b5dec2931b1f324be362e8a3caa9" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common immediate subdirectories.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 와 공통 직계 서브 디렉토리 간의 비교를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="9737c0d0218890590b21fe3f519df6b481314ddd" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common subdirectories (recursively).</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 와 공통 서브 디렉토리 사이의 비교를 재귀 적으로 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="42a7ec328f156fde422cd7dc61bb23c09f74e406" translate="yes" xml:space="preserve">
          <source>Print a debug message when the debug level is &lt;code&gt;&amp;gt;&lt;/code&gt; 0. If extra arguments are present, they are substituted in the message using the standard string formatting operator.</source>
          <target state="translated">디버그 레벨 일 때 디버그 메시지를 인쇄 &lt;code&gt;&amp;gt;&lt;/code&gt; 추가 인수가 존재 0 경우, 연산자를 포맷 표준 문자열을 사용하여 메시지로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="3d5dcdf55a88c009944f0a40c26245225b570e85" translate="yes" xml:space="preserve">
          <source>Print a help message, including the program usage and information about the arguments registered with the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">프로그램 사용법 및 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; 에&lt;/a&gt; 등록 된 인수에 대한 정보를 포함하여 도움말 메시지를 인쇄하십시오 . 경우 &lt;em&gt;파일이&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; , &lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; 은&lt;/a&gt; 가정한다.</target>
        </trans-unit>
        <trans-unit id="87a8729cb0a90de0e71cb0527bb7846eb00c7fa6" translate="yes" xml:space="preserve">
          <source>Print a list of useful (used by CGI) environment variables in HTML.</source>
          <target state="translated">HTML에서 유용한 (CGI에서 사용하는) 환경 변수 목록을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="b7d04d6b0c20b3d6e0ad773b82dd44d393b9fe4c" translate="yes" xml:space="preserve">
          <source>Print a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt;&lt;code&gt;formatmonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt; &lt;code&gt;formatmonth()&lt;/code&gt; &lt;/a&gt; 반환 한 월 달력을 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="8819c1eace7f2970056904e5d1b4f13a04ad201a" translate="yes" xml:space="preserve">
          <source>Print a report to standard output that lists the modules imported by the script and their paths, as well as modules that are missing or seem to be missing.</source>
          <target state="translated">스크립트에서 가져온 모듈과 해당 경로 및 누락되었거나 누락 된 것으로 보이는 모듈을 나열하는 보고서를 표준 출력으로 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">간단한 사용법 메시지를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="46d75d2a40c595663c260f13796637d15127363a" translate="yes" xml:space="preserve">
          <source>Print a stack trace, with the most recent frame at the bottom. An arrow indicates the current frame, which determines the context of most commands.</source>
          <target state="translated">가장 최근 프레임이 맨 아래에 오도록 스택 추적을 인쇄하십시오. 화살표는 현재 프레임을 나타내며 대부분의 명령 컨텍스트를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="226e396c7c77d5972c0c2c1364f81ae49c3ca29d" translate="yes" xml:space="preserve">
          <source>Print a summary of all the test cases that have been run by this DocTestRunner, and return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;TestResults(failed, attempted)&lt;/code&gt;.</source>
          <target state="translated">이 DocTestRunner가 실행 한 모든 테스트 케이스의 요약을 인쇄하고 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;TestResults(failed, attempted)&lt;/code&gt; trieded)를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="60fe12c413836934215d2060f32b5de93e29ebdf" translate="yes" xml:space="preserve">
          <source>Print a summary of all the test cases that have been run by this DocTestRunner, and return a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;TestResults(failed, attempted)&lt;/code&gt;.</source>
          <target state="translated">이 DocTestRunner에 의해 실행 된 모든 테스트 케이스의 요약을 인쇄하고 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;명명 된 튜플 &lt;/a&gt; &lt;code&gt;TestResults(failed, attempted)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d50abcb71a77d1ef48177e1bdc2bc346a39afa2a" translate="yes" xml:space="preserve">
          <source>Print a table of contents for the archive to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">아카이브의 목차를 &lt;code&gt;sys.stdout&lt;/code&gt; 에 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bc98eb6896e2c06d7f1828dfb2545f703e3d1a9" translate="yes" xml:space="preserve">
          <source>Print a table of contents to &lt;code&gt;sys.stdout&lt;/code&gt;. If &lt;em&gt;verbose&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, only the names of the members are printed. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, output similar to that of &lt;strong&gt;ls -l&lt;/strong&gt; is produced. If optional &lt;em&gt;members&lt;/em&gt; is given, it must be a subset of the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">목차를 &lt;code&gt;sys.stdout&lt;/code&gt; 에 인쇄하십시오 . 경우 &lt;em&gt;자세한 정보는&lt;/em&gt; 인 &lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; , 회원의 이름 만 인쇄됩니다. &lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt; 인 경우 &lt;strong&gt;ls -l&lt;/strong&gt; 과 유사한 출력 이 생성됩니다. 선택적 &lt;em&gt;멤버&lt;/em&gt; 가 제공되면 &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt; 리턴 한 목록의 서브 세트 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="545453b40125ccaed2d2107f013c9f4c2e12fd2e" translate="yes" xml:space="preserve">
          <source>Print a warning into &lt;a href=&quot;sys#sys.__stderr__&quot;&gt;&lt;code&gt;sys.__stderr__&lt;/code&gt;&lt;/a&gt;. Format the message as: &lt;code&gt;f&quot;Warning -- {msg}&quot;&lt;/code&gt;. If &lt;em&gt;msg&lt;/em&gt; is made of multiple lines, add &lt;code&gt;&quot;Warning -- &quot;&lt;/code&gt; prefix to each line.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.__stderr__&quot;&gt; &lt;code&gt;sys.__stderr__&lt;/code&gt; &lt;/a&gt; 경고를 인쇄합니다 . 메시지 형식을 &lt;code&gt;f&quot;Warning -- {msg}&quot;&lt;/code&gt; 합니다. &lt;em&gt;msg&lt;/em&gt; 가 여러 줄로 구성된 경우 각 줄에 &lt;code&gt;&quot;Warning -- &quot;&lt;/code&gt; 접두사를 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="bc5c5b21b998c663e90c709b002328a575120497" translate="yes" xml:space="preserve">
          <source>Print detailed code object information for the supplied function, method, source code string or code object to &lt;em&gt;file&lt;/em&gt; (or &lt;code&gt;sys.stdout&lt;/code&gt; if &lt;em&gt;file&lt;/em&gt; is not specified).</source>
          <target state="translated">제공된 함수, 메소드, 소스 코드 문자열 또는 코드 오브젝트에 대한 자세한 코드 오브젝트 정보를 &lt;em&gt;파일&lt;/em&gt; 로 인쇄 &lt;em&gt;하십시오&lt;/em&gt; (또는 &lt;em&gt;파일&lt;/em&gt; 이 지정되지 않은 경우 &lt;code&gt;sys.stdout&lt;/code&gt; ).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37d12069e6f16af033ab45913e5be7746c5e26cb" translate="yes" xml:space="preserve">
          <source>Print exception information and stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; to &lt;em&gt;file&lt;/em&gt;. This differs from &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt; in the following ways:</source>
          <target state="translated">예외 정보를 인쇄하고 추적 오브젝트 &lt;em&gt;tb&lt;/em&gt; 에서 &lt;em&gt;파일로&lt;/em&gt; 추적 추적 항목을 스택 &lt;em&gt;하십시오&lt;/em&gt; . 다음과 같은 점에서 &lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt; 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="df0179c0889e679cc1234c128af6d1759f84855f" translate="yes" xml:space="preserve">
          <source>Print information about the specified object rather than the source code</source>
          <target state="translated">소스 코드가 아닌 지정된 객체에 대한 정보를 인쇄합니다</target>
        </trans-unit>
        <trans-unit id="9d7895802cb9df9889bd75e637eaa3eae04b274e" translate="yes" xml:space="preserve">
          <source>Print information of uncollectable objects found (objects which are not reachable but cannot be freed by the collector). These objects will be added to the &lt;code&gt;garbage&lt;/code&gt; list.</source>
          <target state="translated">수집 할 수없는 개체의 정보를 인쇄합니다 (연결할 수 없지만 수집기에서 해제 할 수없는 개체). 이러한 객체는 &lt;code&gt;garbage&lt;/code&gt; 목록에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="c75eed0af00a793cf5ded9d6e4b5cc55d5c12d11" translate="yes" xml:space="preserve">
          <source>Print information on collectable objects found.</source>
          <target state="translated">발견 된 수집 가능한 개체에 대한 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="fd547948a708e1b1b0f64df6d997902a7615f488" translate="yes" xml:space="preserve">
          <source>Print low-level information to stderr about the state of CPython&amp;rsquo;s memory allocator.</source>
          <target state="translated">CPython의 메모리 할당 자 상태에 대한 저수준 정보를 stderr에 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="1e713e958b47d68260886430651371a5089e51b6" translate="yes" xml:space="preserve">
          <source>Print statistics during collection. This information can be useful when tuning the collection frequency.</source>
          <target state="translated">수집 중 통계를 인쇄합니다. 이 정보는 수집 빈도를 조정할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2ebafe93be796a06067ee45e369ac2e44de72e5" translate="yes" xml:space="preserve">
          <source>Print the argument list of the current function.</source>
          <target state="translated">현재 함수의 인수 목록을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="0f9b05a178e0881d089969f09ca376db8448581e" translate="yes" xml:space="preserve">
          <source>Print the byte string &lt;em&gt;char&lt;/em&gt; to the console without buffering.</source>
          <target state="translated">버퍼링없이 바이트 문자열 &lt;em&gt;char&lt;/em&gt; 을 콘솔에 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="caef0f05a449fbd2f0d330f2b834bbe64628bd70" translate="yes" xml:space="preserve">
          <source>Print the calendar for an entire year as returned by &lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; &lt;/a&gt; 반환 한 연도 달력을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="1fa21f2ae8d79fedb943ef8eab2b17d9abd3b148" translate="yes" xml:space="preserve">
          <source>Print the current window to the default printer.</source>
          <target state="translated">현재 창을 기본 프린터로 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="7797e8c591f71dfae6cf64f791e63ba50f0fffba" translate="yes" xml:space="preserve">
          <source>Print the formatted representation of &lt;em&gt;object&lt;/em&gt; on the configured stream, followed by a newline.</source>
          <target state="translated">구성된 스트림 에서 형식화 된 &lt;em&gt;오브젝트&lt;/em&gt; 표시를 인쇄 한 다음 줄 바꾸기를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fc7c1a8b497470b56c309b8fd8305feb81fc79d" translate="yes" xml:space="preserve">
          <source>Print the output of &lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt;&lt;code&gt;bpformat()&lt;/code&gt;&lt;/a&gt; to the file &lt;em&gt;out&lt;/em&gt;, or if it is &lt;code&gt;None&lt;/code&gt;, to standard output.</source>
          <target state="translated">의 출력 인쇄 &lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt; &lt;code&gt;bpformat()&lt;/code&gt; &lt;/a&gt; 파일에 &lt;em&gt;아웃&lt;/em&gt; , 또는없는 경우 &lt;code&gt;None&lt;/code&gt; 표준 출력은.</target>
        </trans-unit>
        <trans-unit id="ce8b91aac985dd890d44d4a961ceca91f374cf43" translate="yes" xml:space="preserve">
          <source>Print the path to the user base directory.</source>
          <target state="translated">사용자 기본 디렉토리의 경로를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="9ea1420c3238a622dfc8af9460e9a233cd909099" translate="yes" xml:space="preserve">
          <source>Print the path to the user site-packages directory.</source>
          <target state="translated">사용자 사이트 패키지 디렉토리의 경로를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="d53f559e5104f639131e23d104fc8e898eb37d26" translate="yes" xml:space="preserve">
          <source>Print the return value for the last return of a function.</source>
          <target state="translated">Print the return value for the last return of a function.</target>
        </trans-unit>
        <trans-unit id="d2745eb0a20cb6c1e0fa2f98f22d8ac073bd292f" translate="yes" xml:space="preserve">
          <source>Print the stack or traceback for this Task.</source>
          <target state="translated">이 작업에 대한 스택 또는 역 추적을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="cf40f8cbbb412ec036d201714e2e87709f667e28" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt; 인스턴스가 작성 될 때 지정된 출력 파일 에 &lt;em&gt;msg&lt;/em&gt; 를 기반으로하는 메시지 오브젝트 구조의 텍스트 표현을 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="3736fd4a21976406b9fb9b5b2ec947f398687a95" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">&lt;em&gt;msg&lt;/em&gt; 를 기반으로하는 메시지 오브젝트 구조의 텍스트 표현을 &lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt; 인스턴스 작성 시 지정된 출력 파일로 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="85716c4627d1c2ba667f0b4530240073c1a8a27b" translate="yes" xml:space="preserve">
          <source>Print the type of the &lt;em&gt;expression&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;표현식&lt;/em&gt; 의 유형을 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="de66d67e0cdcd967953b2d26ab67aebb1e502f14" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries (starting from the invocation point) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. The optional &lt;em&gt;f&lt;/em&gt; argument can be used to specify an alternate stack frame to start. The optional &lt;em&gt;file&lt;/em&gt; argument has the same meaning as for &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">최대 인쇄 &lt;em&gt;제한&lt;/em&gt; 하는 경우 (호출 지점에서 시작) 스택 추적 항목 &lt;em&gt;제한은&lt;/em&gt; 긍정적이다. 그렇지 않으면 마지막 &lt;code&gt;abs(limit)&lt;/code&gt; 항목을 인쇄하십시오 . 경우 &lt;em&gt;제한을&lt;/em&gt; 생략하거나됩니다 &lt;code&gt;None&lt;/code&gt; , 모든 항목이 인쇄됩니다. 선택적 &lt;em&gt;f&lt;/em&gt; 인수를 사용하여 시작할 대체 스택 프레임을 지정할 수 있습니다. 선택적 &lt;em&gt;파일&lt;/em&gt; 인수는 &lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="4430879a1bd415073f613bc0ba2cdf30ae54b218" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; (starting from the caller&amp;rsquo;s frame) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. If &lt;em&gt;file&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the output goes to &lt;code&gt;sys.stderr&lt;/code&gt;; otherwise it should be an open file or file-like object to receive the output.</source>
          <target state="translated">&lt;em&gt;한계&lt;/em&gt; 가 양수 이면 트레이스 백 객체 &lt;em&gt;tb&lt;/em&gt; (호출자의 프레임에서 시작)에서 스택 추적 항목 을 &lt;em&gt;제한&lt;/em&gt; 하도록 인쇄합니다 . 그렇지 않으면 마지막 &lt;code&gt;abs(limit)&lt;/code&gt; 항목을 인쇄하십시오 . 경우 &lt;em&gt;제한을&lt;/em&gt; 생략하거나됩니다 &lt;code&gt;None&lt;/code&gt; , 모든 항목이 인쇄됩니다. 경우 &lt;em&gt;파일을&lt;/em&gt; 생략하거나한다 &lt;code&gt;None&lt;/code&gt; , 출력 간다 &lt;code&gt;sys.stderr&lt;/code&gt; 를 ; 그렇지 않으면 출력을 받기 위해 열린 파일 또는 파일과 유사한 객체 여야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43ee838f35cd5fefb189059307707fc5452dc591" translate="yes" xml:space="preserve">
          <source>Printing help</source>
          <target state="translated">인쇄 도움말</target>
        </trans-unit>
        <trans-unit id="5e3476705dcdaad7c106c25f982e98a8e8918d78" translate="yes" xml:space="preserve">
          <source>Prints a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.month&quot;&gt;&lt;code&gt;month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#calendar.month&quot;&gt; &lt;code&gt;month()&lt;/code&gt; &lt;/a&gt; 반환 한 월 달력을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="178563981d3b66cd8dadea93b3cf517398992cf3" translate="yes" xml:space="preserve">
          <source>Prints an indented representation of the content types of the message object structure. For example:</source>
          <target state="translated">메시지 객체 구조의 내용 유형을 들여 쓰기하여 표시합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90acbbd1c119c04a3ab88d76c20f94aae3ad2b33" translate="yes" xml:space="preserve">
          <source>Prints the calendar for an entire year as returned by &lt;a href=&quot;#module-calendar&quot;&gt;&lt;code&gt;calendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-calendar&quot;&gt; &lt;code&gt;calendar()&lt;/code&gt; &lt;/a&gt; 반환 한 연도의 달력을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="765da75ac67c7e69b1b79350da8a59b182712bf6" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; followed by a newline. If &lt;em&gt;sort_dicts&lt;/em&gt; is false (the default), dictionaries will be displayed with their keys in insertion order, otherwise the dict keys will be sorted. &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; will be passed to &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; as formatting parameters.</source>
          <target state="translated">&lt;em&gt;개체&lt;/em&gt; 의 서식이 지정된 표현과 줄 바꾸기를 인쇄합니다 . 경우 &lt;em&gt;sort_dicts가&lt;/em&gt; false (기본값), 사전은 그렇지 DICT 키가 정렬됩니다, 삽입 순서에서 자신의 키와 함께 표시됩니다. &lt;em&gt;args&lt;/em&gt; 와 &lt;em&gt;kwargs&lt;/em&gt; 는 형식 매개 변수로 &lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; &lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a659c78c60d319d6e45a2e439dc3a225dde2ce3" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; on &lt;em&gt;stream&lt;/em&gt;, followed by a newline. If &lt;em&gt;stream&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;sys.stdout&lt;/code&gt; is used. This may be used in the interactive interpreter instead of the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function for inspecting values (you can even reassign &lt;code&gt;print = pprint.pprint&lt;/code&gt; for use within a scope). &lt;em&gt;indent&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;depth&lt;/em&gt;, &lt;em&gt;compact&lt;/em&gt; and &lt;em&gt;sort_dicts&lt;/em&gt; will be passed to the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; constructor as formatting parameters.</source>
          <target state="translated">형식화 된 &lt;em&gt;객체의&lt;/em&gt; 표현 을 &lt;em&gt;stream&lt;/em&gt; 에 인쇄하고 그 뒤에 개행을 인쇄합니다 . 경우 &lt;em&gt;스트림이&lt;/em&gt; 없습니다 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;sys.stdout&lt;/code&gt; 이 사용됩니다. 이것은 값을 검사하기 위해 &lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt; 함수 대신 대화식 인터프리터에서 사용될 수 있습니다 ( 범위 내에서 사용하기 위해 &lt;code&gt;print = pprint.pprint&lt;/code&gt; 를 다시 지정할 수도 있습니다 ). &lt;em&gt;indent&lt;/em&gt; , &lt;em&gt;width&lt;/em&gt; , &lt;em&gt;depth&lt;/em&gt; , &lt;em&gt;compact&lt;/em&gt; 및 &lt;em&gt;sort_dicts&lt;/em&gt; 는 형식 매개 변수로 &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt; 생성자에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e2c04dcd549cd717d09f1ffd8b8c5756396cea0" translate="yes" xml:space="preserve">
          <source>Prior to 3.0 on POSIX systems, and for all versions on Windows, if &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, this operation goes into an uninterruptible wait on an underlying lock. This means that no exceptions can occur, and in particular a SIGINT will not trigger a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">POSIX 시스템에서 3.0 이전, Windows의 모든 버전에서 &lt;em&gt;블록&lt;/em&gt; 이 참이고 &lt;em&gt;시간 종료&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 인 경우이 조작은 기본 잠금에서 인터럽트 불가능한 대기 상태가됩니다. 이는 예외가 발생하지 않으며 특히 SIGINT가 &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; 를&lt;/a&gt; 트리거하지 않음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="28bcc1b532447f6c38e344dc91337fbe1e3f57fc" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.5, these three functions comprised the high level API to subprocess. You can now use &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; in many cases, but lots of existing code calls these functions.</source>
          <target state="translated">Python 3.5 이전에는이 ​​세 가지 기능이 하위 프로세스에 대한 고급 API로 구성되었습니다. 많은 경우 &lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있지만 기존 코드가 많으면 이러한 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ee485a13f3c61d963098075b257dfa068de81844" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.7, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; was not guaranteed to be ordered, so inputs and outputs were typically scrambled unless &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; was specifically requested. Starting with Python 3.7, the regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; became order preserving, so it is no longer necessary to specify &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; for JSON generation and parsing.</source>
          <target state="translated">Python 3.7 이전에는 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; 의&lt;/a&gt; 순서가 보장되지 않았으므로 &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt; 이 없으면 입력 및 출력이 일반적으로 스크램블되었습니다 .OrderedDict 가 특별히 요청되었습니다. Python 3.7부터 일반 &lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 은 순서 보존이되었으므로 더 이상 &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt; 을 지정할 필요가 없습니다 . JSON 생성 및 구문 분석을위한 OrderedDict.</target>
        </trans-unit>
        <trans-unit id="ce7b4f6920821f37a53df961801a5e76cb98bc7b" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.8, the serialisation order of the XML attributes of elements was artificially made predictable by sorting the attributes by their name. Based on the now guaranteed ordering of dicts, this arbitrary reordering was removed in Python 3.8 to preserve the order in which attributes were originally parsed or created by user code.</source>
          <target state="translated">Python 3.8 이전에는 속성을 이름별로 정렬하여 요소의 XML 속성의 직렬화 순서를 인위적으로 예측할 수있었습니다. 현재 보장 된 dict 순서를 기반으로,이 임의 순서는 Python 3.8에서 제거되어 속성이 원래 사용자 코드에 의해 구문 분석되거나 작성된 순서를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="d1fe312f536bf4e754308dab9f406009132a4bfe" translate="yes" xml:space="preserve">
          <source>Priority Queue</source>
          <target state="translated">우선 순위 대기열</target>
        </trans-unit>
        <trans-unit id="340b6eb8ddb73074dc88d13b36b6daa62750be5f" translate="yes" xml:space="preserve">
          <source>Priority Queue Implementation Notes</source>
          <target state="translated">우선 순위 큐 구현 정보</target>
        </trans-unit>
        <trans-unit id="379a4e214d829e53c41f4b3c44bc18e9da1723bc" translate="yes" xml:space="preserve">
          <source>Priority data band can be read.</source>
          <target state="translated">우선 순위 데이터 대역을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14288e0ca4847b33646fff4072490e000fefb7c7" translate="yes" xml:space="preserve">
          <source>Priority data may be written.</source>
          <target state="translated">우선 순위 데이터가 기록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef7053edee96c0d878acb0f63f6bb849325088c6" translate="yes" xml:space="preserve">
          <source>Priority levels (high to low):</source>
          <target state="translated">우선 순위 수준 (높음에서 낮음) :</target>
        </trans-unit>
        <trans-unit id="42112cc384558a53635559f800e7234355ea8345" translate="yes" xml:space="preserve">
          <source>Private, abstract base class for pointers.</source>
          <target state="translated">포인터를위한 전용의 추상 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="fe0ab232aea403475c4f5484cfb3291f7dcd50a9" translate="yes" xml:space="preserve">
          <source>Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</source>
          <target state="translated">아마도 문제를 해결하는 가장 좋은 방법은 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 에서 초기화 된 인스턴스 멤버의 기본값으로 클래스 속성을 추가하는 것 입니다. &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 에서 기본 속성 만 설정하는 경우 클래스 속성 (물론 인스턴스간에 공유 됨 ) 을 통해 제공하는 것이 더 빠릅니다. 예 :</target>
        </trans-unit>
        <trans-unit id="4d6e37bdb82eb8ed48fc306179c473d1c592bcb9" translate="yes" xml:space="preserve">
          <source>Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</source>
          <target state="translated">Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</target>
        </trans-unit>
        <trans-unit id="82a3f6d4a767ee85079d7f46fcb38e6d4bd370e6" translate="yes" xml:space="preserve">
          <source>Process HTTP error responses.</source>
          <target state="translated">HTTP 오류 응답을 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="e8e0ada6a5ef6d292d2c93e408caca1ecb42b186" translate="yes" xml:space="preserve">
          <source>Process HTTPS error responses.</source>
          <target state="translated">HTTPS 오류 응답을 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="66b1085d2893b19ca61ed0f1a8614ff7c20c8fa9" translate="yes" xml:space="preserve">
          <source>Process ID (if available).</source>
          <target state="translated">프로세스 ID (사용 가능한 경우)</target>
        </trans-unit>
        <trans-unit id="1f5a86d996fe41cd28ad8ea8df3b57c8d1e99153" translate="yes" xml:space="preserve">
          <source>Process Management</source>
          <target state="translated">공정 관리</target>
        </trans-unit>
        <trans-unit id="01df6eb3a4c83ebf34a899c278995155dd9de5c0" translate="yes" xml:space="preserve">
          <source>Process Parameters</source>
          <target state="translated">공정 파라미터</target>
        </trans-unit>
        <trans-unit id="f72f6213bcbf7742acdadc7f46dc0bee1131e9f2" translate="yes" xml:space="preserve">
          <source>Process Pools</source>
          <target state="translated">프로세스 풀</target>
        </trans-unit>
        <trans-unit id="9b86d892e46fbebbb16792b6ab58f8396eb7c342" translate="yes" xml:space="preserve">
          <source>Process Watchers</source>
          <target state="translated">프로세스 감시자</target>
        </trans-unit>
        <trans-unit id="b32cff3bc6a5689bdcb0bac71d092e2dc71583f8" translate="yes" xml:space="preserve">
          <source>Process a chunk of &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;데이터&lt;/em&gt; 청크를 &lt;em&gt;처리&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="947bfb22e72ecdaf6739dda63b55ef088ecd95cc" translate="yes" xml:space="preserve">
          <source>Process a single command keystroke. Here are the supported special keystrokes:</source>
          <target state="translated">단일 명령 키 입력을 처리하십시오. 지원되는 특수 키 입력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f96a65904dd29e5de1a41c2873eb6109ff1be6f8" translate="yes" xml:space="preserve">
          <source>Process a single request. This function calls the following methods in order: &lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt;&lt;code&gt;get_request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt;&lt;code&gt;verify_request()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt;&lt;code&gt;process_request()&lt;/code&gt;&lt;/a&gt;. If the user-provided &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of the handler class raises an exception, the server&amp;rsquo;s &lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt;&lt;code&gt;handle_error()&lt;/code&gt;&lt;/a&gt; method will be called. If no request is received within &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; seconds, &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt;&lt;code&gt;handle_timeout()&lt;/code&gt;&lt;/a&gt; will be called and &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt;&lt;code&gt;handle_request()&lt;/code&gt;&lt;/a&gt; will return.</source>
          <target state="translated">단일 요청을 처리하십시오. 이 함수는 &lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt; &lt;code&gt;get_request()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt; &lt;code&gt;verify_request()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt; &lt;code&gt;process_request()&lt;/code&gt; &lt;/a&gt; 순서로 메소드를 호출합니다 . 핸들러 클래스 의 사용자 제공 &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt; 메소드에서 예외가 발생하면 서버의 &lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt; &lt;code&gt;handle_error()&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt; 초) 내에 요청이 수신되지 않으면 &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt; &lt;code&gt;handle_timeout()&lt;/code&gt; &lt;/a&gt; 이 호출되고 &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt; &lt;code&gt;handle_request()&lt;/code&gt; &lt;/a&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b1c507d17a8072014891e2d12127e007cafa17a7" translate="yes" xml:space="preserve">
          <source>Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</source>
          <target state="translated">SAX 이벤트를 생성하여 입력 소스를 처리하십시오. &lt;em&gt;소스&lt;/em&gt; , A - 객체는 시스템 식별자 (일반적으로 파일명 또는 URL 입력 소스를 식별하는 문자열) 일 수 &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은&lt;/a&gt; 물체, 또는 &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; 의의&lt;/a&gt; 개체. 경우 &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt; 반환 입력이 완전히 처리되고, 파서 객체가 삭제 또는 리셋된다.</target>
        </trans-unit>
        <trans-unit id="ccc9b3accff95c5638423880dd05a2d9429f00db" translate="yes" xml:space="preserve">
          <source>Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</source>
          <target state="translated">Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</target>
        </trans-unit>
        <trans-unit id="2b311ad25d1db62875cc54150c554d28f143828c" translate="yes" xml:space="preserve">
          <source>Process and return data already in the queues (lazy).</source>
          <target state="translated">이미 대기열에있는 데이터를 처리하고 반환합니다 (lazy).</target>
        </trans-unit>
        <trans-unit id="b3599943b558766e7f19245507d6887c0663d872" translate="yes" xml:space="preserve">
          <source>Process identification number (PID).</source>
          <target state="translated">프로세스 식별 번호 (PID).</target>
        </trans-unit>
        <trans-unit id="297f39b6d2abdfdb1292f997173731b0fddec52a" translate="yes" xml:space="preserve">
          <source>Process name (if available).</source>
          <target state="translated">프로세스 이름 (사용 가능한 경우).</target>
        </trans-unit>
        <trans-unit id="4f0cc309bda79cb8d9bbf8927c6dcb4228a77c6c" translate="yes" xml:space="preserve">
          <source>Process objects represent activity that is run in a separate process. The &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; class has equivalents of all the methods of &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로세스 개체는 별도의 프로세스에서 실행되는 활동을 나타냅니다. &lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 클래스의 모든 메소드의 등가물이 &lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2952edfd580aa8a664a3ded614d8f10340a237d" translate="yes" xml:space="preserve">
          <source>Process the HTTP request. The default implementation creates a handler instance using a &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt;&lt;code&gt;wsgiref.handlers&lt;/code&gt;&lt;/a&gt; class to implement the actual WSGI application interface.</source>
          <target state="translated">HTTP 요청을 처리하십시오. 기본 구현은 실제 WSGI 애플리케이션 인터페이스를 구현하기 위해 &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt; &lt;code&gt;wsgiref.handlers&lt;/code&gt; &lt;/a&gt; 클래스를 사용하여 핸들러 인스턴스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="b9f4c1da0a6f95349d5b7cab6bfc3e5d901e4edc" translate="yes" xml:space="preserve">
          <source>ProcessLookupError</source>
          <target state="translated">ProcessLookupError</target>
        </trans-unit>
        <trans-unit id="d4da8a798d14724a0caf5b1f84fe71ed27bd4ff8" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor</source>
          <target state="translated">ProcessPoolExecutor</target>
        </trans-unit>
        <trans-unit id="e1cea46436f44b1ca5b79450691e62e489cd9c5c" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor Example</source>
          <target state="translated">ProcessPoolExecutor 예제</target>
        </trans-unit>
        <trans-unit id="94bb652c9572461a974b5f2114bbee99c0f0b7ed" translate="yes" xml:space="preserve">
          <source>Processes formatting specifiers as in &lt;code&gt;format % val&lt;/code&gt;, but takes the current locale settings into account.</source>
          <target state="translated">&lt;code&gt;format % val&lt;/code&gt; 형식 지정자를 처리 하지만 현재 로케일 설정을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="21f10da205ad95c538599dfb2cba2ce2d07eb428" translate="yes" xml:space="preserve">
          <source>Processing instruction representation.</source>
          <target state="translated">명령 표현 처리</target>
        </trans-unit>
        <trans-unit id="89856bf9806f209990cb1b3750df87125c96da8a" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction Objects</source>
          <target state="translated">명령 객체 처리</target>
        </trans-unit>
        <trans-unit id="84a5556631d8395e80b4ddd01a2e3c3735e1fc89" translate="yes" xml:space="preserve">
          <source>Produce a directory listing as returned by the &lt;code&gt;LIST&lt;/code&gt; command, printing it to standard output. The optional &lt;em&gt;argument&lt;/em&gt; is a directory to list (default is the current server directory). Multiple arguments can be used to pass non-standard options to the &lt;code&gt;LIST&lt;/code&gt; command. If the last argument is a function, it is used as a &lt;em&gt;callback&lt;/em&gt; function as for &lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt;&lt;code&gt;retrlines()&lt;/code&gt;&lt;/a&gt;; the default prints to &lt;code&gt;sys.stdout&lt;/code&gt;. This method returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LIST&lt;/code&gt; 명령 으로 리턴 된 디렉토리 목록을 작성 하여 표준 출력으로 인쇄하십시오. 선택적 &lt;em&gt;인수&lt;/em&gt; 는 나열 할 디렉토리입니다 (기본값은 현재 서버 디렉토리 임). 비표준 옵션을 &lt;code&gt;LIST&lt;/code&gt; 명령 에 전달하는 데 여러 인수를 사용할 수 있습니다 . 마지막 인수가 함수이면 &lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt; &lt;code&gt;retrlines()&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;em&gt;콜백&lt;/em&gt; 함수로 사용됩니다 . 기본값은 &lt;code&gt;sys.stdout&lt;/code&gt; 에 인쇄됩니다 . 이 메소드는 &lt;code&gt;None&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ee2e28d2f8fb31da49f40174236d2b632dbd76de" translate="yes" xml:space="preserve">
          <source>Produce a set of annotated listing files upon program completion that shows how many times each statement was executed. See also &lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt;&lt;code&gt;--coverdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt;&lt;code&gt;--no-report&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">프로그램 완료시 각 명령문이 실행 된 횟수를 표시하는 주석이 달린 리스팅 파일 세트를 생성하십시오. 아래의 &lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt; &lt;code&gt;--coverdir&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt; &lt;code&gt;--no-report&lt;/code&gt; 를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="61b62b4918483f7d1f903deb8e344d1eb90bc205" translate="yes" xml:space="preserve">
          <source>Produce an annotated list from an earlier program run that used the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; option. This does not execute any code.</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt; 옵션 을 사용한 이전 프로그램 실행에서 주석이 달린 목록을 생성하십시오 . 이것은 코드를 실행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6206021551dc337089d35c15bdfd762b397d0ed" translate="yes" xml:space="preserve">
          <source>Producing more informative usage messages.</source>
          <target state="translated">보다 유익한 사용법 메시지를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b1a89bbc60ade6c8211d72a39eee477320394916" translate="yes" xml:space="preserve">
          <source>Profile &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</source>
          <target state="translated">프로파일 &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab5817ee3a38bdd3960784eebb66b96fdd8be97" translate="yes" xml:space="preserve">
          <source>Profile functions should have three arguments: &lt;em&gt;frame&lt;/em&gt;, &lt;em&gt;event&lt;/em&gt;, and &lt;em&gt;arg&lt;/em&gt;. &lt;em&gt;frame&lt;/em&gt; is the current stack frame. &lt;em&gt;event&lt;/em&gt; is a string: &lt;code&gt;'call'&lt;/code&gt;, &lt;code&gt;'return'&lt;/code&gt;, &lt;code&gt;'c_call'&lt;/code&gt;, &lt;code&gt;'c_return'&lt;/code&gt;, or &lt;code&gt;'c_exception'&lt;/code&gt;. &lt;em&gt;arg&lt;/em&gt; depends on the event type.</source>
          <target state="translated">프로파일 함수에는 &lt;em&gt;frame&lt;/em&gt; , &lt;em&gt;event&lt;/em&gt; 및 &lt;em&gt;arg의&lt;/em&gt; 세 가지 인수가 있어야합니다 . &lt;em&gt;frame&lt;/em&gt; 은 현재 스택 프레임입니다. &lt;em&gt;이벤트&lt;/em&gt; 는 &lt;code&gt;'call'&lt;/code&gt; , &lt;code&gt;'return'&lt;/code&gt; , &lt;code&gt;'c_call'&lt;/code&gt; , &lt;code&gt;'c_return'&lt;/code&gt; 또는 &lt;code&gt;'c_exception'&lt;/code&gt; 문자열 입니다. &lt;em&gt;arg&lt;/em&gt; 는 이벤트 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="76b85f64e42b75db85f6100c7446f9839a6a7ea4" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; with the specified global and local environment.</source>
          <target state="translated">지정된 전역 및 로컬 환경으로 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 를 통해 cmd를 프로파일하십시오 .</target>
        </trans-unit>
        <trans-unit id="36dda3343a7263d4db5c33b4996d45f6d08108ef" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 를 통해 cmd를 프로파일하십시오 .</target>
        </trans-unit>
        <trans-unit id="95bd58802dc1b81dce30791a9d8256f51f58596b" translate="yes" xml:space="preserve">
          <source>Program Frameworks</source>
          <target state="translated">프로그램 프레임 워크</target>
        </trans-unit>
        <trans-unit id="29732f847c3e72f38557e028f82b286984b79cf6" translate="yes" xml:space="preserve">
          <source>Programmatic Interface</source>
          <target state="translated">프로그래밍 인터페이스</target>
        </trans-unit>
        <trans-unit id="0cc5a8683e649a82320f81d8b98ad22b1224bb2a" translate="yes" xml:space="preserve">
          <source>Programmatic access to enumeration members and their attributes</source>
          <target state="translated">열거 형 멤버 및 해당 특성에 프로그래밍 방식으로 액세스</target>
        </trans-unit>
        <trans-unit id="43946ee36367ff5b56dd7206534999a5f9bb2e0c" translate="yes" xml:space="preserve">
          <source>Programmatic importing of modules should use &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; instead of this function.</source>
          <target state="translated">프로그래밍 방식으로 모듈을 가져 오려면 이 함수 대신 &lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt; 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="582a71e5cde8061e90cf7cb11216069f82272cfa" translate="yes" xml:space="preserve">
          <source>Programming Python</source>
          <target state="translated">파이썬 프로그래밍</target>
        </trans-unit>
        <trans-unit id="cbb1703ad983064d7b0e59271c23ac61fd18453b" translate="yes" xml:space="preserve">
          <source>Programming guidelines</source>
          <target state="translated">프로그래밍 지침</target>
        </trans-unit>
        <trans-unit id="7da030583783017b4f69be08fb0b0b0892cc669d" translate="yes" xml:space="preserve">
          <source>Progressbar</source>
          <target state="translated">Progressbar</target>
        </trans-unit>
        <trans-unit id="3277e9d5cb2ea7675324d81b2435cfeab83add48" translate="yes" xml:space="preserve">
          <source>Prompt server for an update. Returned data is &lt;code&gt;None&lt;/code&gt; if no new messages, else value of &lt;code&gt;RECENT&lt;/code&gt; response.</source>
          <target state="translated">업데이트를위한 프롬프트 서버. 새 메시지가 없으면 리턴 된 데이터는 &lt;code&gt;None&lt;/code&gt; 이며, 그렇지 않으면 &lt;code&gt;RECENT&lt;/code&gt; 응답의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="36ea9c97c82e09c4c66355ad465d29262386380c" translate="yes" xml:space="preserve">
          <source>Prompt the user for a password without echoing. The user is prompted using the string &lt;em&gt;prompt&lt;/em&gt;, which defaults to &lt;code&gt;'Password: '&lt;/code&gt;. On Unix, the prompt is written to the file-like object &lt;em&gt;stream&lt;/em&gt; using the replace error handler if needed. &lt;em&gt;stream&lt;/em&gt; defaults to the controlling terminal (&lt;code&gt;/dev/tty&lt;/code&gt;) or if that is unavailable to &lt;code&gt;sys.stderr&lt;/code&gt; (this argument is ignored on Windows).</source>
          <target state="translated">에코하지 않고 사용자에게 비밀번호를 묻습니다. 문자열 &lt;em&gt;프롬프트를&lt;/em&gt; 사용하여 사용자에게 &lt;em&gt;프롬프트&lt;/em&gt; 되며 기본값은 &lt;code&gt;'Password: '&lt;/code&gt; 입니다. 유닉스에서, 프롬프트는 필요한 경우 바꾸기 오류 처리기를 사용하여 파일과 같은 객체 &lt;em&gt;스트림에&lt;/em&gt; 기록됩니다 . &lt;em&gt;스트림의&lt;/em&gt; 기본값은 제어 터미널 ( &lt;code&gt;/dev/tty&lt;/code&gt; ) 또는 &lt;code&gt;sys.stderr&lt;/code&gt; 에서 사용할 수없는 경우 (이 인수는 Windows에서 무시 됨)입니다.</target>
        </trans-unit>
        <trans-unit id="588169426c8d1fa7e44bc9a3ff15982cdbfaaa90" translate="yes" xml:space="preserve">
          <source>Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt;.</source>
          <target state="translated">현재 인스턴스의 첫 번째 맵을 제외한 모든 맵이 포함 된 새 &lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt; 을 반환하는 속성 입니다. 검색에서 첫 번째 맵을 건너 뛸 때 유용합니다. 사용 사례는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;중첩 된 범위&lt;/a&gt; 에서 사용되는 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;/a&gt; 키워드의 사용 사례와 유사합니다 . 사용 사례는 내장 &lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt; 함수 의 사용 사례와 유사 합니다. &lt;code&gt;d.parents&lt;/code&gt; 에 대한 참조 는 &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6db0436175436024df80f6a6ee27695c483ed432" translate="yes" xml:space="preserve">
          <source>Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#nonlocal&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt;.</source>
          <target state="translated">Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#nonlocal&quot;&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77a1661ff20d05707d028062bc86d9655da030da" translate="yes" xml:space="preserve">
          <source>Property which is true if the finalizer is alive, false otherwise.</source>
          <target state="translated">종료자가 살아 있으면 true이고, 그렇지 않으면 false 인 속성입니다.</target>
        </trans-unit>
        <trans-unit id="b71393da154d6654d013fdbe1762a139d1f0c832" translate="yes" xml:space="preserve">
          <source>Protect an &lt;a href=&quot;#asyncio-awaitables&quot;&gt;awaitable object&lt;/a&gt; from being &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancelled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio-awaitables&quot;&gt;대기 가능한 객체&lt;/a&gt; 가 &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancelled&lt;/code&gt; &lt;/a&gt; 되지 않도록 보호합니다 .</target>
        </trans-unit>
        <trans-unit id="8770cb52bfc12f5c8b944d6be182d7850b41eb42" translate="yes" xml:space="preserve">
          <source>Protected mode</source>
          <target state="translated">보호 모드</target>
        </trans-unit>
        <trans-unit id="02ca74fb7fe36d1ec1ff43755c49fa63ad40ee48" translate="yes" xml:space="preserve">
          <source>Protocol classes can be generic, for example:</source>
          <target state="translated">프로토콜 클래스는 일반적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc9e334f823b2be75b5b8c5ea9906ea9c0b08817" translate="yes" xml:space="preserve">
          <source>Protocol classes can implement the following &lt;strong&gt;callback methods&lt;/strong&gt;:</source>
          <target state="translated">프로토콜 클래스는 다음과 같은 &lt;strong&gt;콜백 메소드를&lt;/strong&gt; 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad5889cf55d9c9ddf964af330c62999831d5864d" translate="yes" xml:space="preserve">
          <source>Protocol definition for SMTP. This document covers the model, operating procedure, and protocol details for SMTP.</source>
          <target state="translated">SMTP에 대한 프로토콜 정의. 이 문서는 SMTP 모델, 운영 절차 및 프로토콜 세부 사항을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="0eefce21e56451e311edc639e53ac4594f96d85d" translate="yes" xml:space="preserve">
          <source>Protocol driver not attached</source>
          <target state="translated">프로토콜 드라이버가 연결되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="a31583107f763ed101ab870682277a15652cc1cb" translate="yes" xml:space="preserve">
          <source>Protocol error</source>
          <target state="translated">프로토콜 오류</target>
        </trans-unit>
        <trans-unit id="677789471bfc26b9baa2dcb7bdc1e90f13c9beac" translate="yes" xml:space="preserve">
          <source>Protocol family not supported</source>
          <target state="translated">지원되지 않는 프로토콜 제품군</target>
        </trans-unit>
        <trans-unit id="59bb2975367cf35f9a618efe163f6de98389a1c2" translate="yes" xml:space="preserve">
          <source>Protocol not available</source>
          <target state="translated">사용할 수없는 프로토콜</target>
        </trans-unit>
        <trans-unit id="05ba63ff22fffa946a6c1e3e8b9d184a5a911e55" translate="yes" xml:space="preserve">
          <source>Protocol not supported</source>
          <target state="translated">프로토콜이 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="66c27fe46bd114d55a64e98115a7040327f4a014" translate="yes" xml:space="preserve">
          <source>Protocol version 0 is the original &amp;ldquo;human-readable&amp;rdquo; protocol and is backwards compatible with earlier versions of Python.</source>
          <target state="translated">프로토콜 버전 0은 원래 &quot;사람이 읽을 수있는&quot;프로토콜이며 이전 버전의 Python과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="9f1b19752041a2f953f426891837b895ba0ec61a" translate="yes" xml:space="preserve">
          <source>Protocol version 1 is an old binary format which is also compatible with earlier versions of Python.</source>
          <target state="translated">프로토콜 버전 1은 이전 이진 형식이며 이전 버전의 Python 과도 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="b0b436e92f55285dbba9fe3ed7783a21924f5fb8" translate="yes" xml:space="preserve">
          <source>Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</source>
          <target state="translated">프로토콜 버전 2는 Python 2.3에서 도입되었습니다. &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;새로운 스타일의 클래스를&lt;/a&gt; 훨씬 더 효율적으로 산 세척 합니다. 프로토콜 2의 개선 사항에 대한 정보는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b208908a3e046d6aab147ab42a27e5ed8064958" translate="yes" xml:space="preserve">
          <source>Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</source>
          <target state="translated">Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</target>
        </trans-unit>
        <trans-unit id="0d89cbdf33a6f12fe68fa41e5d62e69604f5f111" translate="yes" xml:space="preserve">
          <source>Protocol version 3 was added in Python 3.0. It has explicit support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects and cannot be unpickled by Python 2.x. This was the default protocol in Python 3.0&amp;ndash;3.7.</source>
          <target state="translated">프로토콜 버전 3은 Python 3.0에서 추가되었습니다. &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체를 명시 적으로 지원하며 Python 2.x에서 피클 링 할 수 없습니다. 이것은 Python 3.0&amp;ndash;3.7의 기본 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="167932e2e331e862375a10551050e9f26a28976e" translate="yes" xml:space="preserve">
          <source>Protocol version 4 was added in Python 3.4. It adds support for very large objects, pickling more kinds of objects, and some data format optimizations. It is the default protocol starting with Python 3.8. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 4.</source>
          <target state="translated">프로토콜 버전 4는 Python 3.4에서 추가되었습니다. 매우 큰 객체, 더 많은 종류의 객체 및 일부 데이터 형식 최적화를 지원합니다. Python 3.8로 시작하는 기본 프로토콜입니다. 프로토콜 4의 개선 사항에 대한 정보는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="caac2daa3b9e8785152f90bfa59fc39dc69b7cb8" translate="yes" xml:space="preserve">
          <source>Protocol version 5 was added in Python 3.8. It adds support for out-of-band data and speedup for in-band data. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 5.</source>
          <target state="translated">프로토콜 버전 5는 Python 3.8에서 추가되었습니다. 대역 외 데이터에 대한 지원 및 대역 내 데이터에 대한 속도 향상을 추가합니다. 프로토콜 5의 개선 사항에 대한 정보는 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1202f606b2e32bbc3d0fddceda6783cc8a6fb033" translate="yes" xml:space="preserve">
          <source>Protocol versions</source>
          <target state="translated">프로토콜 버전</target>
        </trans-unit>
        <trans-unit id="3ff5f085a157b60cb28dba0860f39cd3e12b11e1" translate="yes" xml:space="preserve">
          <source>Protocol wrong type for socket</source>
          <target state="translated">소켓에 대한 프로토콜 유형이 잘못되었습니다</target>
        </trans-unit>
        <trans-unit id="dd901073191ed23827708d5ff40ed845574f0ca7" translate="yes" xml:space="preserve">
          <source>ProtocolError Objects</source>
          <target state="translated">ProtocolError 객체</target>
        </trans-unit>
        <trans-unit id="2a6e3082f7bd2a56b001fbb1624e361e5599002d" translate="yes" xml:space="preserve">
          <source>Protocols</source>
          <target state="translated">Protocols</target>
        </trans-unit>
        <trans-unit id="6c9370254ccd0ba3c533df6eb04115252a887895" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_DSYNC&quot;&gt;&lt;code&gt;O_DSYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">&lt;a href=&quot;#os.O_DSYNC&quot;&gt; &lt;code&gt;O_DSYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; 플래그 와 동등한 쓰기 당을 제공하십시오 . 이 플래그 효과는 시스템 호출로 작성된 데이터 범위에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f731e3836b43c76e6eb956ae15aaec713f209063" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_SYNC&quot;&gt;&lt;code&gt;O_SYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">&lt;a href=&quot;#os.O_SYNC&quot;&gt; &lt;code&gt;O_SYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; 플래그 와 동등한 쓰기 당을 제공하십시오 . 이 플래그 효과는 시스템 호출로 작성된 데이터 범위에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="dee6bd9f4cdf3cd7282713ec5dcb4df91afa967f" translate="yes" xml:space="preserve">
          <source>Provide basic introspection for generic types and special typing forms.</source>
          <target state="translated">제네릭 형식과 특수한 타이핑 형식에 대한 기본적인 내부 검사를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="25d9907a6882636abf50f5974e10c9b5af617618" translate="yes" xml:space="preserve">
          <source>Provide data to the compressor object. Returns a chunk of compressed data if possible, or an empty byte string otherwise.</source>
          <target state="translated">압축기 개체에 데이터를 제공하십시오. 가능하면 압축 된 데이터 덩어리를 반환하고, 그렇지 않으면 빈 바이트 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="370dad65015117426ba525e495fbbfdd82d208f2" translate="yes" xml:space="preserve">
          <source>Provider API</source>
          <target state="translated">공급자 API</target>
        </trans-unit>
        <trans-unit id="778e9e5642a2d090654969214e90a85ebd83e83d" translate="yes" xml:space="preserve">
          <source>Provides (for &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; vectors, &lt;em&gt;k&lt;/em&gt; number):</source>
          <target state="translated">제공합니다 ( &lt;em&gt;a&lt;/em&gt; , &lt;em&gt;b&lt;/em&gt; 벡터, &lt;em&gt;k&lt;/em&gt; 숫자) :</target>
        </trans-unit>
        <trans-unit id="1956b5072d57097ccefc1302702b4e99efeb926e" translate="yes" xml:space="preserve">
          <source>Provides a dictionary, based on &lt;code&gt;record&lt;/code&gt;, which is to be URL-encoded and sent to the web server. The default implementation just returns &lt;code&gt;record.__dict__&lt;/code&gt;. This method can be overridden if e.g. only a subset of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; is to be sent to the web server, or if more specific customization of what&amp;rsquo;s sent to the server is required.</source>
          <target state="translated">URL 기반으로 인코딩되어 웹 서버로 전송 될 &lt;code&gt;record&lt;/code&gt; 기반 사전을 제공 합니다. 기본 구현은 단지 &lt;code&gt;record.__dict__&lt;/code&gt; 반환합니다 . 예를 들어 &lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; 의 하위 집합 만 웹 서버로 보내거나 서버로 보낸 내용을보다 구체적으로 사용자 지정해야하는 경우이 방법을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c072b53c7e573480587a748eb43bae4c740a2472" translate="yes" xml:space="preserve">
          <source>Provides a mutable list-like object where all values stored within are stored in a shared memory block. This constrains storable values to only the &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt; (less than 10M bytes each), &lt;code&gt;bytes&lt;/code&gt; (less than 10M bytes each), and &lt;code&gt;None&lt;/code&gt; built-in data types. It also notably differs from the built-in &lt;code&gt;list&lt;/code&gt; type in that these lists can not change their overall length (i.e. no append, insert, etc.) and do not support the dynamic creation of new &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; instances via slicing.</source>
          <target state="translated">내부에 저장된 모든 값이 공유 메모리 블록에 저장되는 변경 가능한 목록 유사 객체를 제공합니다. 이는 저장 가능 값을 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; , &lt;code&gt;str&lt;/code&gt; (각각 10M 바이트 미만), &lt;code&gt;bytes&lt;/code&gt; (각각 10M 바이트 미만) 및 내장 데이터 유형 &lt;code&gt;None&lt;/code&gt; 합니다. 또한 &lt;code&gt;list&lt;/code&gt; 의 전체 길이를 변경할 수없고 (예 : 추가, 삽입 등) 슬라이싱을 통한 새 &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt; 인스턴스 의 동적 생성을 지원하지 않는다는 점에서 기본 제공 목록 유형 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="08a1afa7742389a1900345e97b7ed61c3d3364c2" translate="yes" xml:space="preserve">
          <source>Provides an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</source>
          <target state="translated">피클의 모든 opcode에 대해 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;반복자&lt;/a&gt; 를 제공하여 일련의 &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; 트리플을 반환합니다 . &lt;em&gt;opcode&lt;/em&gt; 는 &lt;code&gt;OpcodeInfo&lt;/code&gt; 클래스 의 인스턴스입니다 . &lt;em&gt;arg&lt;/em&gt; 는 Python 객체로서 opcode 인수의 디코딩 된 값입니다. &lt;em&gt;pos&lt;/em&gt; 는이 opcode가있는 위치입니다. &lt;em&gt;pickle&lt;/em&gt; 은 문자열 또는 파일과 같은 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="826d90d6638bda1a4b1418f5603badb9998e20e0" translate="yes" xml:space="preserve">
          <source>Provides an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</source>
          <target state="translated">Provides an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</target>
        </trans-unit>
        <trans-unit id="6da5bc34e31a7e203e61c3d0dc371e4d52c7b8b4" translate="yes" xml:space="preserve">
          <source>Provides an overriding level &lt;em&gt;level&lt;/em&gt; for all loggers which takes precedence over the logger&amp;rsquo;s own level. When the need arises to temporarily throttle logging output down across the whole application, this function can be useful. Its effect is to disable all logging calls of severity &lt;em&gt;level&lt;/em&gt; and below, so that if you call it with a value of INFO, then all INFO and DEBUG events would be discarded, whereas those of severity WARNING and above would be processed according to the logger&amp;rsquo;s effective level. If &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; is called, it effectively removes this overriding level, so that logging output again depends on the effective levels of individual loggers.</source>
          <target state="translated">로거 자체 레벨보다 우선하는 모든 로거에 우선 순위 &lt;em&gt;레벨&lt;/em&gt; 을 제공합니다 . 전체 응용 프로그램에서 로깅 출력을 일시적으로 제한해야 할 경우이 기능이 유용 할 수 있습니다. 그 결과는 심각도 &lt;em&gt;수준&lt;/em&gt; 이하 의 모든 로깅 호출을 비활성화 하여 값을 INFO로 호출하면 모든 INFO 및 DEBUG 이벤트가 삭제되는 반면 심각도 경고 이상의 이벤트는 로거에 따라 처리됩니다. 효과적인 수준. 만약 &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; 이 로깅 출력을 다시 개별 로거의 유효 수준에 따라 소위되어, 효과적으로,이 겹쳐 레벨을 제거한다.</target>
        </trans-unit>
        <trans-unit id="a9ec39711ed63db25cf35e6e09dca0e55c8fe1a4" translate="yes" xml:space="preserve">
          <source>Provides functionality to topologically sort a graph of hashable nodes.</source>
          <target state="translated">Provides functionality to topologically sort a graph of hashable nodes.</target>
        </trans-unit>
        <trans-unit id="4199b1324e6bc5b4d37525ed1a37df751d8d1273" translate="yes" xml:space="preserve">
          <source>Provides screen oriented methods like &lt;code&gt;setbg()&lt;/code&gt; etc. that are described above.</source>
          <target state="translated">위에서 설명한 &lt;code&gt;setbg()&lt;/code&gt; 등과 같은 화면 지향 메서드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="1878bf8bf86199d2bc6b8ea153656c2051a42071" translate="yes" xml:space="preserve">
          <source>Provides the &lt;a href=&quot;datetime#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; types with which the &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; class is designed to be used.</source>
          <target state="translated">Provides the &lt;a href=&quot;datetime#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; types with which the &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt; &lt;code&gt;ZoneInfo&lt;/code&gt; &lt;/a&gt; class is designed to be used.</target>
        </trans-unit>
        <trans-unit id="3bcce81b2bfb8b4c888c6e8ed2e2a5f477886f7d" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; causes no attribute to be added if the command-line argument was not present:</source>
          <target state="translated">명령 줄 인수가 없으면 &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; 를 제공 하면 속성이 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a736f976e35e63e7d42af793c52253fd6b6d0d72" translate="yes" xml:space="preserve">
          <source>Providing a much simpler interface for custom &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">커스텀 &lt;code&gt;type&lt;/code&gt; 과 &lt;code&gt;action&lt;/code&gt; 위한 훨씬 간단한 인터페이스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="63e7afc9f05c9ff9c919f47c668df6b888d2dc7f" translate="yes" xml:space="preserve">
          <source>Providing both of the script selection options will trigger an exception.</source>
          <target state="translated">두 스크립트 선택 옵션을 모두 제공하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d47999c4330b5fcd4daac54f907a640b4b134c74" translate="yes" xml:space="preserve">
          <source>Providing keyword arguments as in the first example only works for keys that are valid Python identifiers. Otherwise, any valid keys can be used.</source>
          <target state="translated">첫 번째 예에서와 같이 키워드 인수를 제공하면 유효한 Python 식별자 인 키에 대해서만 작동합니다. 그렇지 않으면 유효한 키를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25510081ac86d2210221f153b51cdc9df9ae4304" translate="yes" xml:space="preserve">
          <source>Proxy Objects</source>
          <target state="translated">프록시 객체</target>
        </trans-unit>
        <trans-unit id="2d5c573197196120569f02776eccc66f21f53599" translate="yes" xml:space="preserve">
          <source>Proxy objects are instances of subclasses of &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt;&lt;code&gt;BaseProxy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프록시 객체는 &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt; &lt;code&gt;BaseProxy&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="c75a7087ecf855f67fcb81ebf6a5e6082a750517" translate="yes" xml:space="preserve">
          <source>ProxyBasicAuthHandler Objects</source>
          <target state="translated">ProxyBasicAuthHandler 객체</target>
        </trans-unit>
        <trans-unit id="9a3c956a4a7ba8ac42fa61ab44f51e4675dacefb" translate="yes" xml:space="preserve">
          <source>ProxyDigestAuthHandler Objects</source>
          <target state="translated">ProxyDigestAuthHandler 객체</target>
        </trans-unit>
        <trans-unit id="56ba0f30de43dff01434861636d0129dc0849fff" translate="yes" xml:space="preserve">
          <source>ProxyHandler Objects</source>
          <target state="translated">ProxyHandler 객체</target>
        </trans-unit>
        <trans-unit id="4aeca1dd4670f2e0941bbdb681eaf9b9e7516518" translate="yes" xml:space="preserve">
          <source>Pseudo-code:</source>
          <target state="translated">Pseudo-code:</target>
        </trans-unit>
        <trans-unit id="c0fa5326d4b67d5bcfd41e0e59ce698212f3e714" translate="yes" xml:space="preserve">
          <source>Public classes</source>
          <target state="translated">공개 수업</target>
        </trans-unit>
        <trans-unit id="ab5297b4267339fff5c9910aec762c3934118955" translate="yes" xml:space="preserve">
          <source>Public functions</source>
          <target state="translated">공공 기능</target>
        </trans-unit>
        <trans-unit id="f7563f6262a1a1f5617d82e0f1e3e2dee8d1e4c6" translate="yes" xml:space="preserve">
          <source>Pull API for non-blocking parsing</source>
          <target state="translated">비 차단 파싱을위한 풀 API</target>
        </trans-unit>
        <trans-unit id="c10612aa80041fdd7d816e69a190284aeec952e2" translate="yes" xml:space="preserve">
          <source>Pull the pen down &amp;ndash; drawing when moving.</source>
          <target state="translated">움직일 때 펜을 아래로 당기십시오.</target>
        </trans-unit>
        <trans-unit id="7487a2e53df9e03ad9e8b9f59ae0d9088b93bad6" translate="yes" xml:space="preserve">
          <source>Pull the pen up &amp;ndash; no drawing when moving.</source>
          <target state="translated">움직일 때 그림이없는 펜을 위로 당기십시오.</target>
        </trans-unit>
        <trans-unit id="b6aada712c839fa727d6824da8ff431315046580" translate="yes" xml:space="preserve">
          <source>Pure path objects implement the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface, allowing them to be used anywhere the interface is accepted.</source>
          <target state="translated">순수 경로 객체는 &lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현 하여 인터페이스가 허용되는 모든 위치에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62df8698802935952f3191995f045390c63e6835" translate="yes" xml:space="preserve">
          <source>Pure path objects provide path-handling operations which don&amp;rsquo;t actually access a filesystem. There are three ways to access these classes, which we also call &lt;em&gt;flavours&lt;/em&gt;:</source>
          <target state="translated">순수 경로 객체는 실제로 파일 시스템에 액세스하지 않는 경로 처리 작업을 제공합니다. 이 클래스에 액세스하는 방법에는 세 가지가 있으며,이를 &lt;em&gt;맛&lt;/em&gt; 이라고도합니다 .</target>
        </trans-unit>
        <trans-unit id="86c00397451c193a0cb88542e126e0a1e73aafdb" translate="yes" xml:space="preserve">
          <source>Pure paths</source>
          <target state="translated">순수한 길</target>
        </trans-unit>
        <trans-unit id="fa6b0a14eac80901b75a9e016b6ad99c88fe43b0" translate="yes" xml:space="preserve">
          <source>Pure paths are useful in some special cases; for example:</source>
          <target state="translated">순수한 경로는 특별한 경우에 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a95973d5a8727818a646cdeaf2207e97f5c432af" translate="yes" xml:space="preserve">
          <source>Pure paths provide the following methods and properties:</source>
          <target state="translated">순수한 경로는 다음과 같은 방법과 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="66b0802b57fa5d6f4443fda5ba7dcc1d15cb11ba" translate="yes" xml:space="preserve">
          <source>PureProxy Objects</source>
          <target state="translated">PureProxy 객체</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="d2076bd43bbde39434180af8fb6f4c6d0957b8c3" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.get_wch&quot;&gt;&lt;code&gt;get_wch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">다음 &lt;a href=&quot;#curses.window.get_wch&quot;&gt; &lt;code&gt;get_wch()&lt;/code&gt; &lt;/a&gt; 가 &lt;em&gt;ch&lt;/em&gt; 를 반환 하도록 &lt;em&gt;ch를&lt;/em&gt; 누릅니다 .</target>
        </trans-unit>
        <trans-unit id="cc55018208e43f65febacf54f81f7d45197acf2c" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">밀어 &lt;em&gt;채널&lt;/em&gt; 다음 있도록 &lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46b37576d9141e6a9f06389f49d50517fb63900b" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;item&lt;/em&gt; on the heap, then pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;. The combined action runs more efficiently than &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; followed by a separate call to &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">밀어 &lt;em&gt;항목을&lt;/em&gt; , 힙에 다음 팝과에서 가장 작은 항목을 반환 &lt;em&gt;힙&lt;/em&gt; . 보다 더 효율적으로 조합 된 액션을 실행 &lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt; 개별 통화가 다음 &lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="deeb8489db73ca68d5d5e5c0e00a56bb921df592" translate="yes" xml:space="preserve">
          <source>Push a &lt;code&gt;KEY_MOUSE&lt;/code&gt; event onto the input queue, associating the given state data with it.</source>
          <target state="translated">주어진 상태 데이터와 관련하여 &lt;code&gt;KEY_MOUSE&lt;/code&gt; 이벤트를 입력 큐로 푸시 하십시오.</target>
        </trans-unit>
        <trans-unit id="bdc5f19341ef454044ce777ed9a985c1ee736ce7" translate="yes" xml:space="preserve">
          <source>Push a line of source text to the interpreter. The line should not have a trailing newline; it may have internal newlines. The line is appended to a buffer and the interpreter&amp;rsquo;s &lt;code&gt;runsource()&lt;/code&gt; method is called with the concatenated contents of the buffer as source. If this indicates that the command was executed or invalid, the buffer is reset; otherwise, the command is incomplete, and the buffer is left as it was after the line was appended. The return value is &lt;code&gt;True&lt;/code&gt; if more input is required, &lt;code&gt;False&lt;/code&gt; if the line was dealt with in some way (this is the same as &lt;code&gt;runsource()&lt;/code&gt;).</source>
          <target state="translated">한 줄의 소스 텍스트를 인터프리터에게 보냅니다. 줄에 줄 바꿈 문자가 없어야합니다. 내부 개행이있을 수 있습니다. 행이 버퍼에 추가되고 인터프리터의 &lt;code&gt;runsource()&lt;/code&gt; 메소드가 버퍼의 연결된 컨텐츠를 소스로 사용하여 호출됩니다. 명령이 실행되었거나 유효하지 않음을 나타내는 경우 버퍼가 재설정됩니다. 그렇지 않으면 명령이 불완전하며 버퍼가 줄이 추가 된 후 그대로 남아 있습니다. 더 많은 입력이 필요한 경우 반환 값은 &lt;code&gt;True&lt;/code&gt; 이고 , 라인이 어떤 방식으로 처리 된 경우 &lt;code&gt;False&lt;/code&gt; 입니다 ( &lt;code&gt;runsource()&lt;/code&gt; 와 동일 ).</target>
        </trans-unit>
        <trans-unit id="1ff551f79566ed40a79345d1a8d8c3a5bf217bd8" translate="yes" xml:space="preserve">
          <source>Push an input source stream onto the input stack. If the filename argument is specified it will later be available for use in error messages. This is the same method used internally by the &lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt;&lt;code&gt;sourcehook()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">입력 소스 스트림을 입력 스택으로 밀어 넣습니다. filename 인수가 지정되면 나중에 오류 메시지에 사용할 수 있습니다. 이것은 &lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt; &lt;code&gt;sourcehook()&lt;/code&gt; &lt;/a&gt; 메소드가 내부적으로 사용하는 것과 동일한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="db6c3afd930aeb68d89014ee5433350a0a681bc6" translate="yes" xml:space="preserve">
          <source>Push panel to the top of the stack.</source>
          <target state="translated">스택 상단으로 패널을 밉니다.</target>
        </trans-unit>
        <trans-unit id="285e296d900920005aeb30736d8c5b8dbc446057" translate="yes" xml:space="preserve">
          <source>Push the argument onto the token stack.</source>
          <target state="translated">인수를 토큰 스택으로 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="e33f8f562ff442430fbdaadf2f184466a7cf2d74" translate="yes" xml:space="preserve">
          <source>Push the panel to the bottom of the stack.</source>
          <target state="translated">패널을 스택 맨 아래로 밉니다.</target>
        </trans-unit>
        <trans-unit id="1a260125546e3d60f42e10e3381f7f1f4e4702de" translate="yes" xml:space="preserve">
          <source>Push the value &lt;em&gt;item&lt;/em&gt; onto the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant.</source>
          <target state="translated">&lt;em&gt;힙을 변경하지&lt;/em&gt; 않고 값 &lt;em&gt;항목&lt;/em&gt; 을 &lt;em&gt;힙&lt;/em&gt; 으로 푸시하십시오 .</target>
        </trans-unit>
        <trans-unit id="060b3da8be8c41fc2db4adde6755d0d1a6852f33" translate="yes" xml:space="preserve">
          <source>Pushes &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; onto the stack. Used by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">Pushes &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; onto the stack. Used by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; statement.</target>
        </trans-unit>
        <trans-unit id="e87381f973c93a45ec66467fdd6d2f61819e610f" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;NULL&lt;/code&gt; onto the stack for using it in &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt;&lt;code&gt;POP_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt;&lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt;&lt;/a&gt;. Starts the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt; &lt;code&gt;POP_FINALLY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt; &lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt; &lt;/a&gt; 에서 사용하기 위해 &lt;code&gt;NULL&lt;/code&gt; 을 스택으로 푸시 합니다 . &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt; 블록을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="6d0445bcde7e6ba3eb17ac8b16105316c176699b" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;builtins.__build_class__()&lt;/code&gt; onto the stack. It is later called by &lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt;&lt;code&gt;CALL_FUNCTION&lt;/code&gt;&lt;/a&gt; to construct a class.</source>
          <target state="translated">푸쉬 &lt;code&gt;builtins.__build_class__()&lt;/code&gt; 스택에. 나중에 클래스를 구성하기 위해 &lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt; &lt;code&gt;CALL_FUNCTION&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="49a0ce60315742720d6e790708903a5cbdd38a13" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;co_consts[consti]&lt;/code&gt; onto the stack.</source>
          <target state="translated">푸쉬 &lt;code&gt;co_consts[consti]&lt;/code&gt; 스택 상.</target>
        </trans-unit>
        <trans-unit id="8c5c906f16d7213e3fe5cb70f6c4ba0d38aaf04f" translate="yes" xml:space="preserve">
          <source>Pushes a &lt;code&gt;None&lt;/code&gt; on to the producer queue. When this producer is popped off the queue it causes the channel to be closed.</source>
          <target state="translated">생산자 대기열 로 &lt;code&gt;None&lt;/code&gt; 을 푸시합니다 . 이 제작자가 대기열에서 튀어 나오면 채널이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="914c8745b5a1bdf4649b1e5f23b242a942f8605d" translate="yes" xml:space="preserve">
          <source>Pushes a new dictionary object onto the stack. Pops &lt;code&gt;2 * count&lt;/code&gt; items so that the dictionary holds &lt;em&gt;count&lt;/em&gt; entries: &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt;.</source>
          <target state="translated">새 사전 개체를 스택으로 푸시합니다. 사전이 &lt;em&gt;카운트&lt;/em&gt; 항목을 보유하도록 &lt;code&gt;2 * count&lt;/code&gt; items를 팝 합니다 : &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08052794fb7c2dbab8e430d2dd07bf32e9f75c31" translate="yes" xml:space="preserve">
          <source>Pushes a new function object on the stack. From bottom to top, the consumed stack must consist of values if the argument carries a specified flag value</source>
          <target state="translated">스택에서 새 함수 객체를 푸시합니다. 인수에 지정된 플래그 값이 있으면 소비되는 스택은 아래에서 위로 값으로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="68ab25e4336f083f291523bf1fae81222344fd0f" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. The name of the variable is &lt;code&gt;co_cellvars[i]&lt;/code&gt; if &lt;em&gt;i&lt;/em&gt; is less than the length of &lt;em&gt;co_cellvars&lt;/em&gt;. Otherwise it is &lt;code&gt;co_freevars[i -
len(co_cellvars)]&lt;/code&gt;.</source>
          <target state="translated">셀의 슬롯 &lt;em&gt;i&lt;/em&gt; 및 비어있는 가변 스토리지에 포함 된 셀에 대한 참조를 푸시합니다 . &lt;em&gt;i&lt;/em&gt; 가 &lt;em&gt;co_cellvars&lt;/em&gt; 길이보다 작은 경우 변수 이름은 &lt;code&gt;co_cellvars[i]&lt;/code&gt; 입니다. 그렇지 않으면 &lt;code&gt;co_freevars[i - len(co_cellvars)]&lt;/code&gt; 입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dfe3cb391a82a542609fdfa5be8b3aa0ca06b25" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the local &lt;code&gt;co_varnames[var_num]&lt;/code&gt; onto the stack.</source>
          <target state="translated">로컬 &lt;code&gt;co_varnames[var_num]&lt;/code&gt; 에 대한 참조를 스택으로 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="21b2febb965d2f948ea4cf0206cc623631a6cdd3" translate="yes" xml:space="preserve">
          <source>Pushes a slice object on the stack. &lt;em&gt;argc&lt;/em&gt; must be 2 or 3. If it is 2, &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; is pushed; if it is 3, &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; is pushed. See the &lt;a href=&quot;functions#slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; built-in function for more information.</source>
          <target state="translated">스택에서 슬라이스 객체를 푸시합니다. &lt;em&gt;argc&lt;/em&gt; 는 2 또는 3이어야합니다. 2 인 경우 &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; 가 푸시됩니다. 3이면 &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; 가 푸시됩니다. 자세한 내용은 &lt;a href=&quot;functions#slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt; 내장 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d73d5ba6395f82b6350b0d8b60bb72d4aec78ca" translate="yes" xml:space="preserve">
          <source>Pushes a try block from a try-finally or try-except clause onto the block stack. &lt;em&gt;delta&lt;/em&gt; points to the finally block or the first except block.</source>
          <target state="translated">try-finally 또는 try-except 절에서 try 블록을 블록 스택으로 푸시합니다. &lt;em&gt;델타&lt;/em&gt; 는 finally 블록 또는 첫 번째 제외 블록을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="20231af18a4c3e5c00a678485187da72502959f9" translate="yes" xml:space="preserve">
          <source>Pushes data on to the channel&amp;rsquo;s queue to ensure its transmission. This is all you need to do to have the channel write the data out to the network, although it is possible to use your own producers in more complex schemes to implement encryption and chunking, for example.</source>
          <target state="translated">전송을 위해 데이터를 채널 대기열로 푸시합니다. 예를 들어, 암호화 및 청킹을 구현하기 위해 더 복잡한 방식으로 자체 제작자를 사용하는 것이 가능하지만 채널이 네트워크에 데이터를 쓰도록하려면이 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c46ce674d43f69f80e61570dc3c7d94f5756df0" translate="yes" xml:space="preserve">
          <source>Pushes the address of the next instruction onto the stack and increments bytecode counter by &lt;em&gt;delta&lt;/em&gt;. Used for calling the finally block as a &amp;ldquo;subroutine&amp;rdquo;.</source>
          <target state="translated">다음 명령어의 주소를 스택으로 푸시하고 바이트 코드 카운터를 &lt;em&gt;델타&lt;/em&gt; 단위로 증가시킵니다 . finally 블록을 &quot;서브 루틴&quot;으로 호출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d579563bfb99148066bcc319f8230278195bae33" translate="yes" xml:space="preserve">
          <source>Pushes the value associated with &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">&lt;code&gt;co_names[namei]&lt;/code&gt; 와 연관된 값을 스택으로 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="83775fb1f938d53ebaafa17df99df1094d912529" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue.</source>
          <target state="translated">넣어 &lt;em&gt;항목을&lt;/em&gt; 큐에.</target>
        </trans-unit>
        <trans-unit id="58b24c1f540864fcca7249c13913776d87e3018e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. If optional args &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is false), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">넣어 &lt;em&gt;항목을&lt;/em&gt; 큐에. 선택적 args &lt;em&gt;블록&lt;/em&gt; 이 true이고 &lt;em&gt;시간 종료&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; (기본값) 인 경우, 사용 가능한 슬롯이 사용 가능할 때까지 필요한 경우 차단하십시오. 경우 &lt;em&gt;제한 시간은&lt;/em&gt; 최대 양수, 차단이다 &lt;em&gt;타임 아웃&lt;/em&gt; 초와 제기 &lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt; 여유 슬롯이 그 시간 내에서 사용할 수 없었다 경우 예외를. 그렇지 않으면 ( &lt;em&gt;블록&lt;/em&gt; 이 false 인 경우) 비어있는 슬롯을 즉시 사용할 수있는 경우 항목을 대기열에 넣거나 &lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt; 예외를 발생 시킵니다 ( 이 경우 &lt;em&gt;시간 초과&lt;/em&gt; 는 무시 됨).</target>
        </trans-unit>
        <trans-unit id="8934b5345ae85e054929da0954168f7106a4dc3e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. The method never blocks and always succeeds (except for potential low-level errors such as failure to allocate memory). The optional args &lt;em&gt;block&lt;/em&gt; and &lt;em&gt;timeout&lt;/em&gt; are ignored and only provided for compatibility with &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;Queue.put()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">넣어 &lt;em&gt;항목을&lt;/em&gt; 큐에. 이 방법은 절대로 차단하지 않고 항상 성공합니다 (메모리 할당 실패와 같은 잠재적 인 저수준 오류 제외). 선택적 args &lt;em&gt;블록&lt;/em&gt; 및 &lt;em&gt;시간 초과&lt;/em&gt; 는 무시되며 &lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;Queue.put()&lt;/code&gt; &lt;/a&gt; 과의 호환성을 위해서만 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb7807661d9be22693cbaed0a5656176c454fe3d" translate="yes" xml:space="preserve">
          <source>Put an item into the queue without blocking.</source>
          <target state="translated">차단하지 않고 항목을 대기열에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="8218d84bd6234ff18e8621ebfadb8c4e7388dc86" translate="yes" xml:space="preserve">
          <source>Put an item into the queue. If the queue is full, wait until a free slot is available before adding the item.</source>
          <target state="translated">항목을 대기열에 넣습니다. 대기열이 가득 찬 경우 사용 가능한 슬롯을 사용할 수있을 때까지 기다렸다가 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f9cae25a978f59af9278740f11652ef7349f16a2" translate="yes" xml:space="preserve">
          <source>Put obj into the queue. If the optional argument &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">obj를 대기열에 넣습니다. 선택적 인수 &lt;em&gt;블록&lt;/em&gt; 이 &lt;code&gt;True&lt;/code&gt; (기본값)이고 &lt;em&gt;시간 초과&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; (기본값) 인 경우 사용 가능한 슬롯을 사용할 수있을 때까지 필요한 경우 차단하십시오. 경우 &lt;em&gt;시간 제한은&lt;/em&gt; 양수, 차단 대부분에있다 &lt;em&gt;타임 아웃&lt;/em&gt; 초와 제기 &lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; 의&lt;/a&gt; 여유 슬롯이 그 시간 내에서 사용할 수 없었다 경우 예외를. 그렇지 않으면 ( &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; ), 여유 슬롯을 즉시 사용할 수 있으면 대기열에 항목을 넣고 그렇지 않으면 대기열을 올리십시오. &lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt; 예외 ( 이 경우 &lt;em&gt;시간 초과&lt;/em&gt; 는 무시됩니다).</target>
        </trans-unit>
        <trans-unit id="e30ebfbecb90eab274dc7f46a9658e29a415f031" translate="yes" xml:space="preserve">
          <source>Put the SMTP connection in TLS (Transport Layer Security) mode. All SMTP commands that follow will be encrypted. You should then call &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; again.</source>
          <target state="translated">SMTP 연결을 TLS (Transport Layer Security) 모드로 설정하십시오. 뒤 따르는 모든 SMTP 명령은 암호화됩니다. 그런 다음 &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt; 다시 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2ad11b0512fca8842d107a0a94c7fecd10f4d659" translate="yes" xml:space="preserve">
          <source>Put the barrier into a broken state. This causes any active or future calls to &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; to fail with the &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt;. Use this for example if one of the threads needs to abort, to avoid deadlocking the application.</source>
          <target state="translated">장벽을 고장난 상태로 만듭니다. 이로 인해 활성 또는 이후의 &lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; 호출 이 &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt; 와 함께 실패 합니다 . 예를 들어 애플리케이션 중 교착 상태를 피하기 위해 스레드 중 하나를 중단해야하는 경우이를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9ad93fb8bceb03469b0b240c1d94e65e4ddf2c18" translate="yes" xml:space="preserve">
          <source>Put the device into non-blocking mode. Once in non-blocking mode, there is no way to return it to blocking mode.</source>
          <target state="translated">장치를 비 차단 모드로 설정하십시오. 비 차단 모드에서는 차단 모드로 되돌릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1091cfdefe23623ba530a4b8db12fc943326a5c3" translate="yes" xml:space="preserve">
          <source>Put the socket object into closed state without actually closing the underlying file descriptor. The file descriptor is returned, and can be reused for other purposes.</source>
          <target state="translated">기본 파일 설명자를 실제로 닫지 않고 소켓 객체를 닫힌 상태로 만듭니다. 파일 디스크립터가 리턴되며 다른 목적으로 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d46fd9600b7e447b3fa4d11f9c74fc286b7f64" translate="yes" xml:space="preserve">
          <source>PyGObject</source>
          <target state="translated">PyGObject</target>
        </trans-unit>
        <trans-unit id="4d31c346c14baa247ff0c97428735b59c889439f" translate="yes" xml:space="preserve">
          <source>PyGObject provides introspection bindings for C libraries using &lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject&lt;/a&gt;. One of these libraries is the &lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK+ 3&lt;/a&gt; widget set. GTK+ comes with many more widgets than Tkinter provides. An online &lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK+ 3 Tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGObject는 &lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject를&lt;/a&gt; 사용하여 C 라이브러리에 대한 내부 검사 바인딩을 제공합니다 . 이러한 라이브러리 중 하나는 &lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK + 3&lt;/a&gt; 위젯 세트입니다. GTK +는 Tkinter가 제공하는 것보다 더 많은 위젯을 제공합니다. 온라인 &lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK + 3 자습서&lt;/a&gt; 가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="42911d3d75f013cbeb6206491fb434ba0ff3febc" translate="yes" xml:space="preserve">
          <source>PyGTK</source>
          <target state="translated">PyGTK</target>
        </trans-unit>
        <trans-unit id="b94652fa2011827f7f94decf66c9ec4272404a0c" translate="yes" xml:space="preserve">
          <source>PyGTK provides bindings for an older version of the library, GTK+ 2. It provides an object oriented interface that is slightly higher level than the C one. There are also bindings to &lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME&lt;/a&gt;. An online &lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGTK는 이전 버전의 라이브러리 인 GTK + 2에 대한 바인딩을 제공합니다. Cy보다 약간 더 높은 객체 지향 인터페이스를 제공합니다. &lt;a href=&quot;https://www.gnome.org/&quot;&gt;그놈에 대한&lt;/a&gt; 바인딩도 있습니다 . 온라인 &lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;자습서&lt;/a&gt; 가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="72fc60a60556ef9bd9b31b6d159b81a698f1f3ec" translate="yes" xml:space="preserve">
          <source>PyGTK, PyQt, PySide2, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</source>
          <target state="translated">PyGTK, PyQt, PySide2, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</target>
        </trans-unit>
        <trans-unit id="d64c8cbe603dd88121eb44e96c989e19fb82e43a" translate="yes" xml:space="preserve">
          <source>PyGTK, PyQt, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</source>
          <target state="translated">PyGTK, PyQt 및 wxPython은 모두 Tkinter보다 현대적인 모양과 느낌 및 더 많은 위젯을 가지고 있습니다. 또한 크로스 플랫폼 및 플랫폼에 따라 다른 많은 Python 용 GUI 툴킷이 있습니다. 훨씬 더 완전한 목록과 다른 GUI 툴킷이 비교되는 문서에 대한 링크는 Python Wiki 의 &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI 프로그래밍&lt;/a&gt; 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="591695c92a51e0a4994db8d71fa3299632cd41a3" translate="yes" xml:space="preserve">
          <source>PyQt</source>
          <target state="translated">PyQt</target>
        </trans-unit>
        <trans-unit id="9ae98c491854c976c1556187b6e1b97776f7d16f" translate="yes" xml:space="preserve">
          <source>PyQt is a &lt;strong&gt;sip&lt;/strong&gt;-wrapped binding to the Qt toolkit. Qt is an extensive C++ GUI application development framework that is available for Unix, Windows and Mac OS X. &lt;strong&gt;sip&lt;/strong&gt; is a tool for generating bindings for C++ libraries as Python classes, and is specifically designed for Python.</source>
          <target state="translated">PyQt는 Qt 툴킷에 대한 &lt;strong&gt;sip-&lt;/strong&gt; wrapped 바인딩입니다. Qt는 Unix, Windows 및 Mac OS X에서 사용할 수있는 광범위한 C ++ GUI 응용 프로그램 개발 프레임 워크입니다. &lt;strong&gt;sip&lt;/strong&gt; 는 C ++ 라이브러리에 대한 바인딩을 Python 클래스로 생성하는 도구이며 특히 Python을 위해 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="619105fc659c95fc540d2c1e747b3b2993ea7fd1" translate="yes" xml:space="preserve">
          <source>PySide</source>
          <target state="translated">PySide</target>
        </trans-unit>
        <trans-unit id="c06a107c4ddf3a14e7737b994f893c16e1981005" translate="yes" xml:space="preserve">
          <source>PySide is a newer binding to the Qt toolkit, provided by Nokia. Compared to PyQt, its licensing scheme is friendlier to non-open source applications.</source>
          <target state="translated">PySide는 Nokia에서 제공하는 Qt 툴킷에 대한 최신 바인딩입니다. PyQt와 비교할 때, 라이센스 체계는 비 오픈 소스 응용 프로그램에 더 친숙합니다.</target>
        </trans-unit>
        <trans-unit id="c3f3053e8f5508f08f8fe926bd6611b8e41de151" translate="yes" xml:space="preserve">
          <source>PySide2</source>
          <target state="translated">PySide2</target>
        </trans-unit>
        <trans-unit id="8cc5e9ed71ff538ccf01ed1a98424a08329a58d3" translate="yes" xml:space="preserve">
          <source>PyZipFile Objects</source>
          <target state="translated">PyZipFile 객체</target>
        </trans-unit>
        <trans-unit id="0abcfa3470fb7187c7fa3a03e26b907cf9a49745" translate="yes" xml:space="preserve">
          <source>Py_UNICODE</source>
          <target state="translated">Py_UNICODE</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="6b8f61655c7227cb356bd2f7409e5033dbd21174" translate="yes" xml:space="preserve">
          <source>Python 3.3 adds several new functions in &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; that can be used to make precise measurements of process or wall-clock time. For example, see &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.3 은 프로세스 또는 벽시계 시간을 정확하게 측정하는 데 사용할 수있는 몇 가지 새로운 기능을 &lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 추가합니다 . 예를 들어 &lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">파이썬 API</target>
        </trans-unit>
        <trans-unit id="3ee394b6d17ed1fc6cf7615a47330585fc9b0a01" translate="yes" xml:space="preserve">
          <source>Python Bytecode Instructions</source>
          <target state="translated">파이썬 바이트 코드 명령어</target>
        </trans-unit>
        <trans-unit id="60e6e681b6665f4178aacb421b80a3d4b9d00034" translate="yes" xml:space="preserve">
          <source>Python Development Mode</source>
          <target state="translated">Python Development Mode</target>
        </trans-unit>
        <trans-unit id="3cb0f443a4045dcf52595aa8531b43c5c2fa7460" translate="yes" xml:space="preserve">
          <source>Python Docs</source>
          <target state="translated">파이썬 문서</target>
        </trans-unit>
        <trans-unit id="0355f05a806d1783a9cc7d8c5ea6ee60f3d6f24f" translate="yes" xml:space="preserve">
          <source>Python Interface</source>
          <target state="translated">파이썬 인터페이스</target>
        </trans-unit>
        <trans-unit id="1f009e17d19f9da1b9faa9295f208962e3e63806" translate="yes" xml:space="preserve">
          <source>Python Language Mapping Specification</source>
          <target state="translated">파이썬 언어 매핑 사양</target>
        </trans-unit>
        <trans-unit id="0c6b8fde978bf14a2cd633dafb4a0b230f557746" translate="yes" xml:space="preserve">
          <source>Python Language Services</source>
          <target state="translated">파이썬 언어 서비스</target>
        </trans-unit>
        <trans-unit id="092211b0a454b4bd3d5953ff3df7fd3f99cf63ea" translate="yes" xml:space="preserve">
          <source>Python Packaging User Guide: Creating and using virtual environments</source>
          <target state="translated">Python Packaging 사용자 안내서 : 가상 환경 작성 및 사용</target>
        </trans-unit>
        <trans-unit id="7a623bcfe092da5ad8c875bc8b6a2c58c3966c7b" translate="yes" xml:space="preserve">
          <source>Python Runtime Services</source>
          <target state="translated">파이썬 런타임 서비스</target>
        </trans-unit>
        <trans-unit id="5e8caadc585bc176b908975c7b0f5adfd3ca07e5" translate="yes" xml:space="preserve">
          <source>Python Shell</source>
          <target state="translated">파이썬 쉘</target>
        </trans-unit>
        <trans-unit id="37023209cd8d17b87ec33c9fedfa931e2dc4f32b" translate="yes" xml:space="preserve">
          <source>Python Shell window</source>
          <target state="translated">파이썬 쉘 창</target>
        </trans-unit>
        <trans-unit id="b7d42ac213c92acc79852232679f79b31ea56451" translate="yes" xml:space="preserve">
          <source>Python Specific Encodings</source>
          <target state="translated">파이썬 특정 인코딩</target>
        </trans-unit>
        <trans-unit id="99225c5a1bfdba35aa585e3e9d0046d88e7f76de" translate="yes" xml:space="preserve">
          <source>Python Tkinter Resources</source>
          <target state="translated">파이썬 Tkinter 리소스</target>
        </trans-unit>
        <trans-unit id="c4b41fa096c8ca8de1aca03645726f801a284621" translate="yes" xml:space="preserve">
          <source>Python Type</source>
          <target state="translated">파이썬 타입</target>
        </trans-unit>
        <trans-unit id="8df32fb907357083986db821e14e12d057113627" translate="yes" xml:space="preserve">
          <source>Python and Tkinter Programming</source>
          <target state="translated">파이썬과 Tkinter 프로그래밍</target>
        </trans-unit>
        <trans-unit id="aafe008164775ee95643f93c690b0bf91843c0fc" translate="yes" xml:space="preserve">
          <source>Python applications should normally find no need to invoke these functions, and should use &lt;a href=&quot;gettext#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; instead. A known exception to this rule are applications that link with additional C libraries which internally invoke &lt;code&gt;gettext()&lt;/code&gt; or &lt;code&gt;dcgettext()&lt;/code&gt;. For these applications, it may be necessary to bind the text domain, so that the libraries can properly locate their message catalogs.</source>
          <target state="translated">파이썬 응용 프로그램은 일반적으로 이러한 함수를 호출 할 필요가 없으며 대신 &lt;a href=&quot;gettext#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다. 이 규칙의 알려진 예외는 내부적으로 &lt;code&gt;gettext()&lt;/code&gt; 또는 &lt;code&gt;dcgettext()&lt;/code&gt; 호출하는 추가 C 라이브러리와 링크되는 응용 프로그램입니다 . 이러한 응용 프로그램의 경우 라이브러리가 메시지 카탈로그를 올바르게 찾을 수 있도록 텍스트 도메인을 바인드해야합니다.</target>
        </trans-unit>
        <trans-unit id="7ba27acbccfe931c72cdbb3e8631db3a08ab43de" translate="yes" xml:space="preserve">
          <source>Python callable. Will be called with no arguments whenever either of the increment or decrement buttons are pressed.</source>
          <target state="translated">파이썬 호출 가능. 증가 또는 감소 버튼 중 하나를 누를 때마다 인수없이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7c63cfd12aa8ac5be1bf526866c306771615c5c9" translate="yes" xml:space="preserve">
          <source>Python code objects have a &lt;code&gt;co_flags&lt;/code&gt; attribute, which is a bitmap of the following flags:</source>
          <target state="translated">Python 코드 객체에는 &lt;code&gt;co_flags&lt;/code&gt; 속성이 있으며 이는 다음 플래그의 비트 맵입니다.</target>
        </trans-unit>
        <trans-unit id="55264df222d98db1d1d4885beaee43c36a00af15" translate="yes" xml:space="preserve">
          <source>Python comes with a number of codecs built-in, either implemented as C functions or with dictionaries as mapping tables. The following table lists the codecs by name, together with a few common aliases, and the languages for which the encoding is likely used. Neither the list of aliases nor the list of languages is meant to be exhaustive. Notice that spelling alternatives that only differ in case or use a hyphen instead of an underscore are also valid aliases; therefore, e.g. &lt;code&gt;'utf-8'&lt;/code&gt; is a valid alias for the &lt;code&gt;'utf_8'&lt;/code&gt; codec.</source>
          <target state="translated">Python에는 C 함수로 구현되거나 사전을 매핑 테이블로 사용하는 많은 코덱이 내장되어 있습니다. 다음 표는 몇 가지 공통 별칭 및 인코딩이 사용되는 언어와 함께 이름별로 코덱을 나열합니다. 별명 목록이나 언어 목록이 모두 철저하지는 않습니다. 대소 문자 만 다르거 나 밑줄 대신 하이픈을 사용하는 철자 대안도 유효한 별칭입니다. 따라서 &lt;code&gt;'utf-8'&lt;/code&gt; 은 &lt;code&gt;'utf_8'&lt;/code&gt; 코덱 의 유효한 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="6638c7fb834b1386886a4ceb27ea78e43c6f048a" translate="yes" xml:space="preserve">
          <source>Python coroutines are &lt;em&gt;awaitables&lt;/em&gt; and therefore can be awaited from other coroutines:</source>
          <target state="translated">파이썬 코 루틴은 &lt;em&gt;기다릴&lt;/em&gt; 수 있으므로 다른 코 루틴에서 &lt;em&gt;기다릴&lt;/em&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d88fc13b34091cdf70c9cff13c4b1284d594820" translate="yes" xml:space="preserve">
          <source>Python currently supports seven schemes:</source>
          <target state="translated">파이썬은 현재 7 가지 방식을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="eaf945f94327f2c0ce5f5922c999addd589c7d83" translate="yes" xml:space="preserve">
          <source>Python defines &lt;code&gt;pow(0, 0)&lt;/code&gt; and &lt;code&gt;0 ** 0&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, as is common for programming languages.</source>
          <target state="translated">파이썬은 프로그래밍 언어에서 공통적으로 &lt;code&gt;pow(0, 0)&lt;/code&gt; 및 &lt;code&gt;0 ** 0&lt;/code&gt; 을 &lt;code&gt;1&lt;/code&gt; 로 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6b384100739e74cedd9aa09dc50763c7744aa517" translate="yes" xml:space="preserve">
          <source>Python defines several context managers to support easy thread synchronisation, prompt closure of files or other objects, and simpler manipulation of the active decimal arithmetic context. The specific types are not treated specially beyond their implementation of the context management protocol. See the &lt;a href=&quot;contextlib#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt; module for some examples.</source>
          <target state="translated">Python은 쉬운 스레드 동기화, 파일 또는 기타 객체의 신속한 폐쇄 및 활성 10 진수 산술 컨텍스트의 간단한 조작을 지원하기 위해 여러 컨텍스트 관리자를 정의합니다. 특정 유형은 컨텍스트 관리 프로토콜의 구현을 넘어서는 특별히 취급되지 않습니다. 일부 예제 는 &lt;a href=&quot;contextlib#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="137da51dc044f7d1989ccf40d2cf2bb7660c7a2f" translate="yes" xml:space="preserve">
          <source>Python defines several iterator objects to support iteration over general and specific sequence types, dictionaries, and other more specialized forms. The specific types are not important beyond their implementation of the iterator protocol.</source>
          <target state="translated">파이썬은 몇 가지 반복자 객체를 정의하여 일반 및 특정 시퀀스 유형, 사전 및 기타 더 특수한 형식에 대한 반복을 지원합니다. 특정 유형은 반복자 프로토콜 구현을 넘어서는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b17cefa47591600687b4080407aa059ba0bde83" translate="yes" xml:space="preserve">
          <source>Python does not currently have an equivalent to &lt;code&gt;scanf()&lt;/code&gt;. Regular expressions are generally more powerful, though also more verbose, than &lt;code&gt;scanf()&lt;/code&gt; format strings. The table below offers some more-or-less equivalent mappings between &lt;code&gt;scanf()&lt;/code&gt; format tokens and regular expressions.</source>
          <target state="translated">파이썬에는 현재 &lt;code&gt;scanf()&lt;/code&gt; 와 동등한 것이 없습니다 . 정규 표현식은 일반적으로 &lt;code&gt;scanf()&lt;/code&gt; 형식 문자열 보다 더 강력하지만 더 강력 합니다. 아래 표는 &lt;code&gt;scanf()&lt;/code&gt; 형식 토큰과 정규식 사이에 다소 비슷한 매핑을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="3865683b646bac2aedc53f477cbeee82b1f7c068" translate="yes" xml:space="preserve">
          <source>Python doesn&amp;rsquo;t depend on the underlying operating system&amp;rsquo;s notion of text files; all the processing is done by Python itself, and is therefore platform-independent.</source>
          <target state="translated">파이썬은 기본 운영 체제의 텍스트 파일 개념에 의존하지 않습니다. 모든 처리는 Python 자체에서 수행되므로 플랫폼 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="239ff465648afd8737ce9440466db62f2e0139ae" translate="yes" xml:space="preserve">
          <source>Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. A comparison between numbers of different types behaves as though the exact values of those numbers were being compared. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="translated">Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. A comparison between numbers of different types behaves as though the exact values of those numbers were being compared. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8638513dc3901fe6eaa10ec89548c63a1ae8d88b" translate="yes" xml:space="preserve">
          <source>Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. Comparisons between numbers of mixed type use the same rule. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; The constructors &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt; can be used to produce numbers of a specific type.</source>
          <target state="translated">파이썬은 혼합 산술을 완벽하게 지원합니다. 이진 산술 연산자에 다른 숫자 유형의 피연산자가있는 경우&amp;ldquo;좁은&amp;rdquo;유형의 피연산자는 다른 것의 피연산자로 넓어집니다. 여기서 정수는 부동 소수점보다 좁으며 복잡한 것보다 좁습니다. 혼합 유형 수의 비교는 동일한 규칙을 사용합니다. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2 &lt;/a&gt;&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 특정 유형의 숫자를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dd854c517849a451ddd0370a06d5d10daf25373" translate="yes" xml:space="preserve">
          <source>Python has a more primitive serialization module called &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;, but in general &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; should always be the preferred way to serialize Python objects. &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; exists primarily to support Python&amp;rsquo;s &lt;code&gt;.pyc&lt;/code&gt; files.</source>
          <target state="translated">파이썬에는 &lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 이라는 더 원시적 인 직렬화 모듈이 있지만 일반적으로 &lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt; 은 항상 파이썬 객체를 직렬화하는 선호되는 방법이어야합니다. &lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 은 주로 Python의 &lt;code&gt;.pyc&lt;/code&gt; 파일 을 지원하기 위해 존재 합니다.</target>
        </trans-unit>
        <trans-unit id="125ddd4ef4447aca73bf2a25322e98803fa07676" translate="yes" xml:space="preserve">
          <source>Python has been able to execute zip files which contain a &lt;code&gt;__main__.py&lt;/code&gt; file since version 2.6. In order to be executed by Python, an application archive simply has to be a standard zip file containing a &lt;code&gt;__main__.py&lt;/code&gt; file which will be run as the entry point for the application. As usual for any Python script, the parent of the script (in this case the zip file) will be placed on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; and thus further modules can be imported from the zip file.</source>
          <target state="translated">Python은 버전 2.6 이후 &lt;code&gt;__main__.py&lt;/code&gt; 파일 을 포함하는 zip 파일을 실행할 수있었습니다 . Python에서 실행하려면 응용 프로그램 아카이브는 응용 프로그램 의 시작점으로 실행될 &lt;code&gt;__main__.py&lt;/code&gt; 파일이 포함 된 표준 zip 파일 이어야합니다. 모든 Python 스크립트와 마찬가지로 스크립트의 상위 (이 경우 zip 파일)는 &lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; 에&lt;/a&gt; 배치 되므로 zip 파일에서 추가 모듈을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8662158d794f9720576b3782157e79d1cffd1410" translate="yes" xml:space="preserve">
          <source>Python has provisional and experimental support for TLS 1.3 with OpenSSL 1.1.1. The new protocol behaves slightly differently than previous version of TLS/SSL. Some new TLS 1.3 features are not yet available.</source>
          <target state="translated">Python은 OpenSSL 1.1.1과 함께 TLS 1.3을 임시 및 실험적으로 지원합니다. 새로운 프로토콜은 이전 버전의 TLS / SSL과 약간 다르게 작동합니다. 일부 새로운 TLS 1.3 기능은 아직 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b3eae67939d577e355bd547630d90de6f5735051" translate="yes" xml:space="preserve">
          <source>Python installation issues occasionally stop IDLE: multiple versions can clash, or a single installation might need admin access. If one undo the clash, or cannot or does not want to run as admin, it might be easiest to completely remove Python and start over.</source>
          <target state="translated">Python 설치 문제로 인해 IDLE이 중지되는 경우가 있습니다. 여러 버전이 충돌하거나 단일 설치에 관리자 액세스가 필요할 수 있습니다. 충돌을 취소하거나 관리자 권한으로 실행하고 싶지 않거나 실행하지 않으려면 Python을 완전히 제거하고 다시 시작하는 것이 가장 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="e2b2848aeccd01905aee189ff04a70f830b0c331" translate="yes" xml:space="preserve">
          <source>Python is started in isolated mode (command line option &lt;code&gt;-I&lt;/code&gt;), except if the &lt;code&gt;__isolated&lt;/code&gt; keyword is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__isolated&lt;/code&gt; 키워드가 &lt;code&gt;False&lt;/code&gt; 로 설정된 경우를 제외하고 Python은 격리 모드 (명령 행 옵션 &lt;code&gt;-I&lt;/code&gt; ) 에서 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="038067e0594bc4123eff8d27bc300eff7f181804" translate="yes" xml:space="preserve">
          <source>Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</source>
          <target state="translated">Python 모듈의 코드가 다시 컴파일되고 모듈 수준 코드가 다시 실행 되어 원래 모듈을로드 한 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;로더&lt;/a&gt; 를 재사용하여 모듈 사전에 이름으로 바인드 된 새 오브젝트 세트를 정의 합니다. 확장 모듈 의 &lt;code&gt;init&lt;/code&gt; 기능은 두 번째로 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40f531efde58146c04e1e85d63984af05989dd2e" translate="yes" xml:space="preserve">
          <source>Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</source>
          <target state="translated">Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</target>
        </trans-unit>
        <trans-unit id="2ea68622690cfcc29885ac7d1676e3539567a58b" translate="yes" xml:space="preserve">
          <source>Python offers two different primitive operations based on regular expressions: &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;re.match()&lt;/code&gt;&lt;/a&gt; checks for a match only at the beginning of the string, while &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt; checks for a match anywhere in the string (this is what Perl does by default).</source>
          <target state="translated">파이썬은 정규 표현식을 기반으로 두 가지 다른 기본 연산을 제공합니다. &lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;re.match()&lt;/code&gt; &lt;/a&gt; 는 문자열의 시작 부분에서만 일치를 확인하고 &lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt; 는 문자열의 어느 곳에서나 일치를 확인합니다 (기본적으로 Perl이 수행하는 작업) ).</target>
        </trans-unit>
        <trans-unit id="dc58dabbdc5bf17a7dfddcd9a8c1a72ef3764bbf" translate="yes" xml:space="preserve">
          <source>Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt;&lt;code&gt;PyErr_WarnEx()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</source>
          <target state="translated">Python 프로그래머 는이 모듈에 정의 된 &lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt; 함수 를 호출하여 경고를 발행 합니다. (C 프로그래머는 &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt; &lt;code&gt;PyErr_WarnEx()&lt;/code&gt; &lt;/a&gt; 사용 합니다. 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;예외 처리&lt;/a&gt; 를 참조하십시오).</target>
        </trans-unit>
        <trans-unit id="d7cc288148db796debd312dd1161e435d7dd95d5" translate="yes" xml:space="preserve">
          <source>Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt;&lt;code&gt;PyErr_WarnEx()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</source>
          <target state="translated">Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt; &lt;code&gt;PyErr_WarnEx()&lt;/code&gt; &lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</target>
        </trans-unit>
        <trans-unit id="e37dc2c721fd1ebbf3abee81977fa9b416561970" translate="yes" xml:space="preserve">
          <source>Python searches a standard list of directories to find one which the calling user can create files in. The list is:</source>
          <target state="translated">Python은 표준 디렉토리 목록을 검색하여 호출하는 사용자가 파일을 작성할 수있는 디렉토리를 찾습니다. 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c6d42373ec2780784c0876435cfe9919395c210" translate="yes" xml:space="preserve">
          <source>Python shell window (interactive interpreter) with colorizing of code input, output, and error messages</source>
          <target state="translated">코드 입력, 출력 및 오류 메시지를 채색하는 Python 셸 창 (대화식 인터프리터)</target>
        </trans-unit>
        <trans-unit id="64e5bc4d53eb593d318b2c56159cc8882c917467" translate="yes" xml:space="preserve">
          <source>Python signal handlers are always executed in the main Python thread of the main interpreter, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Python signal handlers are always executed in the main Python thread of the main interpreter, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; module instead.</target>
        </trans-unit>
        <trans-unit id="2df8d28b8372bf27065261b4a06d22c97b3c0df5" translate="yes" xml:space="preserve">
          <source>Python signal handlers are always executed in the main Python thread, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Python 신호 처리기는 신호가 다른 스레드에서 수신 된 경우에도 항상 기본 Python 스레드에서 실행됩니다. 이는 신호를 스레드 간 통신 수단으로 사용할 수 없음을 의미합니다. 대신 &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt; 모듈 에서 동기화 프리미티브를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="805515798ecd3a95f5151c4222be6d7e0eb0a1ce" translate="yes" xml:space="preserve">
          <source>Python stores default member variable values in class attributes. Consider this example, not using dataclasses:</source>
          <target state="translated">파이썬은 기본 멤버 변수 값을 클래스 속성에 저장합니다. 데이터 클래스를 사용하지 않고이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="e57d4905f981518de8f41bf06f243fe9666343f0" translate="yes" xml:space="preserve">
          <source>Python supports a concept of iteration over containers. This is implemented using two distinct methods; these are used to allow user-defined classes to support iteration. Sequences, described below in more detail, always support the iteration methods.</source>
          <target state="translated">파이썬은 컨테이너에 대한 반복 개념을 지원합니다. 이것은 두 가지 방법으로 구현됩니다. 이것들은 사용자 정의 클래스가 반복을 지원하는 데 사용됩니다. 아래에 자세히 설명 된 시퀀스는 항상 반복 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e0a75faf88bfb70662f9456d02405996512aa26f" translate="yes" xml:space="preserve">
          <source>Python supports this conversion in several ways: the &lt;code&gt;idna&lt;/code&gt; codec performs conversion between Unicode and ACE, separating an input string into labels based on the separator characters defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;section 3.1 of RFC 3490&lt;/strong&gt;&lt;/a&gt; and converting each label to ACE as required, and conversely separating an input byte string into labels based on the &lt;code&gt;.&lt;/code&gt; separator and converting any ACE labels found into unicode. Furthermore, the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module transparently converts Unicode host names to ACE, so that applications need not be concerned about converting host names themselves when they pass them to the socket module. On top of that, modules that have host names as function parameters, such as &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ftplib#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt;, accept Unicode host names (&lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; then also transparently sends an IDNA hostname in the &lt;em&gt;Host&lt;/em&gt; field if it sends that field at all).</source>
          <target state="translated">파이썬은 여러 가지 방식으로이 변환을 지원합니다. &lt;code&gt;idna&lt;/code&gt; 코덱은 유니 코드와 ACE 간의 변환을 수행하고, &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 3490의 섹션 3.1에&lt;/strong&gt;&lt;/a&gt; 정의 된 구분 문자를 기반으로 입력 문자열을 레이블 로 분리하고, 필요에 따라 각 레이블을 ACE로 변환하고, 반대로 입력을 분리합니다 에 따라 바이트 문자열을 레이블로 바꿉니다 &lt;code&gt;.&lt;/code&gt; 구분 기호를 찾아 유니 코드로 찾은 ACE 레이블을 변환합니다. 또한 &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 모듈은 유니 코드 호스트 이름을 투명하게 ACE로 변환하므로 응용 프로그램이 호스트 이름을 소켓 모듈로 전달할 때 호스트 이름을 변환하는 것에 대해 걱정할 필요가 없습니다. 또한 &lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;ftplib#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; &lt;/a&gt; 와 같은 함수 매개 변수로 호스트 이름을 갖는 모듈유니 코드 호스트 이름을 수락합니다 ( &lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt; 는 해당 필드를 전혀 보내지 않으면 &lt;em&gt;호스트&lt;/em&gt; 필드 에 IDNA 호스트 이름을 투명하게 보냅니다 ).</target>
        </trans-unit>
        <trans-unit id="121a3c63ec9b91ea07418db0e66efcf64062bcca" translate="yes" xml:space="preserve">
          <source>Python type</source>
          <target state="translated">파이썬 타입</target>
        </trans-unit>
        <trans-unit id="9ccd99214ece3191a794e3112fc45207a3eb50bd" translate="yes" xml:space="preserve">
          <source>Python uses an installation scheme that differs depending on the platform and on the installation options. These schemes are stored in &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; under unique identifiers based on the value returned by &lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python은 플랫폼 및 설치 옵션에 따라 다른 설치 체계를 사용합니다. 이 체계는 &lt;a href=&quot;os#os.name&quot;&gt; &lt;code&gt;os.name&lt;/code&gt; 이&lt;/a&gt; 반환 한 값을 기반으로 고유 식별자 로 &lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; &lt;/a&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="5252a40c4f65097cb15222a351f8348f0bc26406" translate="yes" xml:space="preserve">
          <source>Python uses files to contain certificates. They should be formatted as &amp;ldquo;PEM&amp;rdquo; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422&lt;/strong&gt;&lt;/a&gt;), which is a base-64 encoded form wrapped with a header line and a footer line:</source>
          <target state="translated">파이썬은 파일을 사용하여 인증서를 포함합니다. 헤더 줄과 바닥 글 줄로 감싸 인 base-64로 인코딩 된 형식 인 &quot;PEM&quot;( &lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422&lt;/strong&gt;&lt;/a&gt; 참조) 형식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f8bdbb93a76ab2d3cdffb25ae64e2c3b88bee50" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</source>
          <target state="translated">파이썬의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;제너레이터&lt;/a&gt; 와 &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt; 데코레이터는 이러한 프로토콜을 구현하는 편리한 방법을 제공합니다. 생성기 함수가 &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt; 데코레이터로 장식 된 경우 데코 레이팅 되지 않은 생성기 함수로 생성 된 반복자가 아닌 필요한 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 메서드를 구현하는 컨텍스트 관리자를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="677bd4593d4e82724111b6c2b600512ad45bb115" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</source>
          <target state="translated">파이썬의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;제너레이터&lt;/a&gt; 는 이터레이터 프로토콜을 구현하는 편리한 방법을 제공합니다. 컨테이너 객체의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; 메소드가 생성자로 구현되면 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt; 메소드를 제공하는 반복자 객체 (기술적으로 생성기 객체)를 자동으로 반환합니다 . 제너레이터에 대한 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;생산량 표현 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c605662dab5a29ccef91d000e38909b7e68ed8f" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:</source>
          <target state="translated">Python의 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문은 컨텍스트 관리자가 정의한 런타임 컨텍스트의 개념을 지원합니다. 이는 사용자 정의 클래스가 명령문 본문이 실행되고 명령문이 종료 될 때 종료되기 전에 입력되는 런타임 컨텍스트를 정의 할 수 있도록하는 메소드 쌍을 사용하여 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0a47ad8d7d841597280bcef6a16f461e273a2fc2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</source>
          <target state="translated">Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</target>
        </trans-unit>
        <trans-unit id="ae2a11a2852cf0600a5dba8208eeeae443ad35d4" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</source>
          <target state="translated">Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a2541be56194ca8830b9a8f4584d68116947e6fe" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:</source>
          <target state="translated">Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:</target>
        </trans-unit>
        <trans-unit id="62fc66372953f6ab112fc8bd0382a503991fcf19" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s built-in I/O library, including both abstract classes and some concrete classes such as file I/O.</source>
          <target state="translated">추상 클래스와 파일 I / O와 같은 일부 구체적인 클래스를 포함한 Python의 내장 I / O 라이브러리</target>
        </trans-unit>
        <trans-unit id="a375ced3f944826fda74f05d6e50538bb8b37488" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s interfaces for processing XML are grouped in the &lt;code&gt;xml&lt;/code&gt; package.</source>
          <target state="translated">XML 처리를위한 Python의 인터페이스는 &lt;code&gt;xml&lt;/code&gt; 패키지 로 그룹화됩니다 .</target>
        </trans-unit>
        <trans-unit id="8db5f8b1f1148220554e3b71399989ac48a9561a" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard library is very extensive, offering a wide range of facilities as indicated by the long table of contents listed below. The library contains built-in modules (written in C) that provide access to system functionality such as file I/O that would otherwise be inaccessible to Python programmers, as well as modules written in Python that provide standardized solutions for many problems that occur in everyday programming. Some of these modules are explicitly designed to encourage and enhance the portability of Python programs by abstracting away platform-specifics into platform-neutral APIs.</source>
          <target state="translated">Python의 표준 라이브러리는 매우 광범위하여 아래에 나열된 긴 목차로 표시되는 다양한 기능을 제공합니다. 이 라이브러리에는 Python 프로그래머가 액세스 할 수없는 파일 I / O와 같은 시스템 기능에 액세스 할 수있는 내장 모듈 (C로 작성)과 많은 문제에 대해 표준화 된 솔루션을 제공하는 Python으로 작성된 모듈이 포함되어 있습니다. 일상적인 프로그래밍. 이러한 모듈 중 일부는 플랫폼 별 API를 플랫폼 중립적 API로 추상화하여 Python 프로그램의 이식성을 장려하고 향상 시키도록 명시 적으로 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="a56d74116e43a96d3671879a0a1353285c0a42d1" translate="yes" xml:space="preserve">
          <source>Q. I noticed that context precision is applied to the results of operations but not to the inputs. Is there anything to watch out for when mixing values of different precisions?</source>
          <target state="translated">Q. 컨텍스트 정밀도가 연산 결과에는 적용되지만 입력에는 적용되지 않습니다. 다른 정밀도 값을 혼합 할 때주의해야 할 것이 있습니까?</target>
        </trans-unit>
        <trans-unit id="184e8ee9a97600966afe3fe06142b4741fecfdc6" translate="yes" xml:space="preserve">
          <source>Q. In a fixed-point application with two decimal places, some inputs have many places and need to be rounded. Others are not supposed to have excess digits and need to be validated. What methods should be used?</source>
          <target state="translated">Q. 소수점 이하 두 자리의 고정 소수점 응용 프로그램에서 일부 입력에는 여러 자리가 있으므로 반올림해야합니다. 다른 사람은 초과 자릿수가 없어야하며 유효성을 검사해야합니다. 어떤 방법을 사용해야합니까?</target>
        </trans-unit>
        <trans-unit id="cf287f2c6a76496fdced9da2a97d5411e4cd69a2" translate="yes" xml:space="preserve">
          <source>Q. Is the CPython implementation fast for large numbers?</source>
          <target state="translated">Q. CPython은 많은 수의 빠른 구현입니까?</target>
        </trans-unit>
        <trans-unit id="41099d70c4a2d310ac02e2147ae184e06ddd6db1" translate="yes" xml:space="preserve">
          <source>Q. Is there a way to convert a regular float to a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">Q. 일반 float를 &lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 로 변환하는 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="2a4cfd94822d098abcdf3a658fff987ccb270559" translate="yes" xml:space="preserve">
          <source>Q. It is cumbersome to type &lt;code&gt;decimal.Decimal('1234.5')&lt;/code&gt;. Is there a way to minimize typing when using the interactive interpreter?</source>
          <target state="translated">Q. &lt;code&gt;decimal.Decimal('1234.5')&lt;/code&gt; 을 입력하는 것은 번거 롭습니다 . 대화식 인터프리터를 사용할 때 타이핑을 최소화하는 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="434b41406d63e88e90b7a2e94979b5737ff0a790" translate="yes" xml:space="preserve">
          <source>Q. Once I have valid two place inputs, how do I maintain that invariant throughout an application?</source>
          <target state="translated">Q. 유효한 두 자리 입력이 있으면 응용 프로그램 전체에서 불변을 유지하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a552838f973a788a3762885e44efbeb55fed4de6" translate="yes" xml:space="preserve">
          <source>Q. Some decimal values always print with exponential notation. Is there a way to get a non-exponential representation?</source>
          <target state="translated">Q. 일부 10 진수 값은 항상 지수 표기법으로 인쇄됩니다. 비지 수적 표현을 얻는 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="efdff4caeb47a86ad4dcce8a816e26d400c5a2ef" translate="yes" xml:space="preserve">
          <source>Q. There are many ways to express the same value. The numbers &lt;code&gt;200&lt;/code&gt;, &lt;code&gt;200.000&lt;/code&gt;, &lt;code&gt;2E2&lt;/code&gt;, and &lt;code&gt;02E+4&lt;/code&gt; all have the same value at various precisions. Is there a way to transform them to a single recognizable canonical value?</source>
          <target state="translated">Q. 같은 가치를 표현하는 방법에는 여러 가지가 있습니다. 숫자 &lt;code&gt;200&lt;/code&gt; , &lt;code&gt;200.000&lt;/code&gt; , &lt;code&gt;2E2&lt;/code&gt; 및 &lt;code&gt;02E+4&lt;/code&gt; 는 모두 다양한 정밀도에서 동일한 값을 갖습니다. 그것들을 하나의 인식 가능한 표준 값으로 변환하는 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="12c5b25eefaaf388326b462caef87d681c47cf1f" translate="yes" xml:space="preserve">
          <source>Q. Within a complex calculation, how can I make sure that I haven&amp;rsquo;t gotten a spurious result because of insufficient precision or rounding anomalies.</source>
          <target state="translated">Q. 복잡한 계산에서 정밀도가 불충분하거나 반올림 이상으로 인해 잘못된 결과를 얻지 못한 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="332067183f2ce95de719c0a525e235eae58d074a" translate="yes" xml:space="preserve">
          <source>QName Objects</source>
          <target state="translated">QName 객체</target>
        </trans-unit>
        <trans-unit id="e2fce752ca401b308d2ac6e2708b36aff84ff002" translate="yes" xml:space="preserve">
          <source>QName wrapper. This can be used to wrap a QName attribute value, in order to get proper namespace handling on output. &lt;em&gt;text_or_uri&lt;/em&gt; is a string containing the QName value, in the form {uri}local, or, if the tag argument is given, the URI part of a QName. If &lt;em&gt;tag&lt;/em&gt; is given, the first argument is interpreted as a URI, and this argument is interpreted as a local name. &lt;a href=&quot;#xml.etree.ElementTree.QName&quot;&gt;&lt;code&gt;QName&lt;/code&gt;&lt;/a&gt; instances are opaque.</source>
          <target state="translated">QName 래퍼. 출력에서 네임 스페이스를 올바르게 처리하기 위해 QName 속성 값을 래핑하는 데 사용할 수 있습니다. &lt;em&gt;text_or_uri&lt;/em&gt; 는 {uri} local 형식으로 QName 값을 포함하는 문자열이거나 태그 인수가 제공되면 QName의 URI 부분입니다. 경우 &lt;em&gt;태그가&lt;/em&gt; 주어진 첫 번째 인수는 URI로 해석됩니다,이 인수는 로컬 이름으로 해석됩니다. &lt;a href=&quot;#xml.etree.ElementTree.QName&quot;&gt; &lt;code&gt;QName&lt;/code&gt; &lt;/a&gt; 인스턴스가 불투명합니다.</target>
        </trans-unit>
        <trans-unit id="5860c8458788e44e7636fa364548e067049a0d7b" translate="yes" xml:space="preserve">
          <source>QUIT</source>
          <target state="translated">QUIT</target>
        </trans-unit>
        <trans-unit id="73b2ff0d16b082ecede8e9b05601f92714c8c513" translate="yes" xml:space="preserve">
          <source>Queries on ST Objects</source>
          <target state="translated">ST 객체에 대한 쿼리</target>
        </trans-unit>
        <trans-unit id="ab66121a0bc7c0b8a6aaee889cc54e93513b06e9" translate="yes" xml:space="preserve">
          <source>Queries the given executable (defaults to the Python interpreter binary) for various architecture information.</source>
          <target state="translated">다양한 아키텍처 정보에 대해 주어진 실행 파일을 쿼리합니다 (기본값은 Python 인터프리터 바이너리).</target>
        </trans-unit>
        <trans-unit id="299ec896adc2c252dcea6805c40e9a91a11f850a" translate="yes" xml:space="preserve">
          <source>Query component</source>
          <target state="translated">쿼리 구성 요소</target>
        </trans-unit>
        <trans-unit id="0404dd683dbc5f71444913158ce10905f534d293" translate="yes" xml:space="preserve">
          <source>Query or modify horizontal position of the treeview.</source>
          <target state="translated">트 리뷰의 가로 위치를 쿼리하거나 수정합니다.</target>
        </trans-unit>
        <trans-unit id="f3137551469b1aac6319fe3bb1f6f5dc55c48802" translate="yes" xml:space="preserve">
          <source>Query or modify the configuration options of the Tix application context. If no option is specified, returns a dictionary all of the available options. If option is specified with no value, then the method returns a list describing the one named option (this list will be identical to the corresponding sublist of the value returned if no option is specified). If one or more option-value pairs are specified, then the method modifies the given option(s) to have the given value(s); in this case the method returns an empty string. Option may be any of the configuration options.</source>
          <target state="translated">Tix 애플리케이션 컨텍스트의 구성 옵션을 조회하거나 수정하십시오. 옵션을 지정하지 않으면 사용 가능한 모든 옵션을 사전에 반환합니다. option을 값없이 지정하면 메서드는 명명 된 옵션 하나를 설명하는 목록을 반환합니다 (이 목록은 옵션을 지정하지 않은 경우 반환되는 값의 해당 하위 목록과 동일 함). 하나 이상의 옵션-값 쌍이 지정된 경우, 메소드는 주어진 값을 갖도록 주어진 옵션을 수정합니다. 이 경우 메서드는 빈 문자열을 반환합니다. 옵션은 구성 옵션 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3411c4b5457d5f86c7ff912b35ce82d4368a90e" translate="yes" xml:space="preserve">
          <source>Query or modify the heading options for the specified &lt;em&gt;column&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;열의&lt;/em&gt; 제목 옵션을 쿼리하거나 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="e1eb3b4198a33afbb12fb74d12272ff4ad1739f1" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;column&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;열에&lt;/em&gt; 대한 옵션을 쿼리하거나 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="069eb8475b8cd15fc964be359e94827025782b6b" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;항목에&lt;/em&gt; 대한 옵션을 조회하거나 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="723650e9732d43f711b60b214741478002d36c63" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;tagname&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;tagname&lt;/em&gt; 의 옵션을 조회하거나 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d31c0506051a5a4710db0bff55099734b00676f0" translate="yes" xml:space="preserve">
          <source>Query or modify the options of the specific &lt;em&gt;tab_id&lt;/em&gt;.</source>
          <target state="translated">특정 &lt;em&gt;tab_id&lt;/em&gt; 의 옵션을 쿼리하거나 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="530c55b9295c467994e092bafdf0d25b46ddc05e" translate="yes" xml:space="preserve">
          <source>Query or modify vertical position of the treeview.</source>
          <target state="translated">트 리뷰의 수직 위치를 쿼리하거나 수정합니다.</target>
        </trans-unit>
        <trans-unit id="a54e9015afaf3040642420dd5908057649fd153b" translate="yes" xml:space="preserve">
          <source>Query or set the default value of the specified option(s) in &lt;em&gt;style&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;style&lt;/em&gt; 에서 지정된 옵션의 기본값을 쿼리하거나 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ccecafbaa149fddd3ee35e984ca1f1ff13368e9" translate="yes" xml:space="preserve">
          <source>Query or sets dynamic values of the specified option(s) in &lt;em&gt;style&lt;/em&gt;.</source>
          <target state="translated">지정된 옵션의 동적 값을 &lt;em&gt;style로&lt;/em&gt; 쿼리하거나 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3b7011e503bd87a591251a590e176d2f8118d9ce" translate="yes" xml:space="preserve">
          <source>Query the server&amp;rsquo;s capabilities as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2449.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2449&lt;/strong&gt;&lt;/a&gt;. Returns a dictionary in the form &lt;code&gt;{'name': ['param'...]}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2449.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2449에&lt;/strong&gt;&lt;/a&gt; 지정된 서버 기능을 조회하십시오 . &lt;code&gt;{'name': ['param'...]}&lt;/code&gt; 형식으로 사전을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="449bae23eac37a985c7d71e5a4cb82646b71e61c" translate="yes" xml:space="preserve">
          <source>Querying path properties:</source>
          <target state="translated">쿼리 경로 속성 :</target>
        </trans-unit>
        <trans-unit id="8ae17d7b262729ea440d0673b507aa9e8c22bd4a" translate="yes" xml:space="preserve">
          <source>Querying the size of a terminal</source>
          <target state="translated">터미널 크기 쿼리</target>
        </trans-unit>
        <trans-unit id="c37f91c2a4c0dfd4703731640367d2f6614c4abc" translate="yes" xml:space="preserve">
          <source>Querying the size of the output terminal</source>
          <target state="translated">출력 터미널의 크기 쿼리</target>
        </trans-unit>
        <trans-unit id="002ff598115d84595ffeee6219cb5c03d3a1d4a6" translate="yes" xml:space="preserve">
          <source>Question</source>
          <target state="translated">Question</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="bd67243a09150c1cca311daac0a967d7282fadc5" translate="yes" xml:space="preserve">
          <source>Queue Objects</source>
          <target state="translated">큐 객체</target>
        </trans-unit>
        <trans-unit id="8fa61222581c10ad0120496b1f531fd922fa2b3a" translate="yes" xml:space="preserve">
          <source>Queue objects (&lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#queue.LifoQueue&quot;&gt;&lt;code&gt;LifoQueue&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#queue.PriorityQueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt;) provide the public methods described below.</source>
          <target state="translated">큐 객체 ( &lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#queue.LifoQueue&quot;&gt; &lt;code&gt;LifoQueue&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#queue.PriorityQueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt; )는 아래에 설명 된 공용 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4f425cbe378acfd9f1a8de93cea4965d49b9e251" translate="yes" xml:space="preserve">
          <source>QueueHandler</source>
          <target state="translated">QueueHandler</target>
        </trans-unit>
        <trans-unit id="2f1f3352372721053da1ab577f2842c42e6e8dfd" translate="yes" xml:space="preserve">
          <source>QueueListener</source>
          <target state="translated">QueueListener</target>
        </trans-unit>
        <trans-unit id="83dbc32040459c6d170231f099414d8cc8806687" translate="yes" xml:space="preserve">
          <source>Queues</source>
          <target state="translated">Queues</target>
        </trans-unit>
        <trans-unit id="ad29d9b9f009a6cdb44666226a27ecac9d357b47" translate="yes" xml:space="preserve">
          <source>Queues are thread and process safe.</source>
          <target state="translated">대기열은 스레드 및 프로세스 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8ab9e848689bfc7257f1be1f467e76856e54b587" translate="yes" xml:space="preserve">
          <source>Queues can be used to distribute workload between several concurrent tasks:</source>
          <target state="translated">대기열을 사용하여 여러 동시 작업간에 작업 부하를 분산시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e96968057fbbd4d3efa5fc0f76107086ff30c0d" translate="yes" xml:space="preserve">
          <source>Queues should be used to distribute work amongst multiple asyncio Tasks, implement connection pools, and pub/sub patterns.</source>
          <target state="translated">대기열은 여러 asyncio 작업간에 작업을 분배하고 연결 풀을 구현하며 펍 / 서브 패턴을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d2b679e22dfa3101d1ba7bf2ec43c351c8ef687" translate="yes" xml:space="preserve">
          <source>Quick Guide</source>
          <target state="translated">빠른 설명</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="7dd0abc6c28752043604672ca88d6f1a334a8032" translate="yes" xml:space="preserve">
          <source>Quick-start Tutorial</source>
          <target state="translated">빠른 시작 자습서</target>
        </trans-unit>
        <trans-unit id="4babb1d9227e9cf95369d0a1db1908f28649b65e" translate="yes" xml:space="preserve">
          <source>Quiet and signaling NaNs are also included in the total ordering. The result of this function is &lt;code&gt;Decimal('0')&lt;/code&gt; if both operands have the same representation, &lt;code&gt;Decimal('-1')&lt;/code&gt; if the first operand is lower in the total order than the second, and &lt;code&gt;Decimal('1')&lt;/code&gt; if the first operand is higher in the total order than the second operand. See the specification for details of the total order.</source>
          <target state="translated">조용하고 신호 NaN도 총 주문에 포함됩니다. 이 함수의 결과는 &lt;code&gt;Decimal('0')&lt;/code&gt; 두 피연산자는 동일한 표현이있는 경우 &lt;code&gt;Decimal('-1')&lt;/code&gt; 는 첫 번째 피연산자 번째보다 전체 순서 낮은 경우, 및 &lt;code&gt;Decimal('1')&lt;/code&gt; 는 IF를 첫 번째 피연산자는 두 번째 피연산자보다 전체 순서에서 더 높습니다. 총 주문에 대한 자세한 내용은 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c32ccfb23b10eafc366f5df18350d5e5c78818c6" translate="yes" xml:space="preserve">
          <source>Quit from the debugger. The program being executed is aborted.</source>
          <target state="translated">디버거에서 종료하십시오. 실행중인 프로그램이 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="e9a049dd51f6f6165f82600419d9408a49973ebc" translate="yes" xml:space="preserve">
          <source>Quota exceeded</source>
          <target state="translated">할당량 초과</target>
        </trans-unit>
        <trans-unit id="d948c11d9b187ba19486b6cb13c596158cb156b8" translate="yes" xml:space="preserve">
          <source>Quote characters are not recognized within words (&lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; is parsed as the single word &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt;);</source>
          <target state="translated">따옴표 문자는 단어 내에서 인식되지 않습니다 ( &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; 는 단일 단어 &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; 로 구문 분석 됨 ).</target>
        </trans-unit>
        <trans-unit id="cf43703d976b5083d479d158bf1057729ed499a1" translate="yes" xml:space="preserve">
          <source>Quoted empty strings (&lt;code&gt;''&lt;/code&gt;) are allowed.</source>
          <target state="translated">인용 된 빈 문자열 ( &lt;code&gt;''&lt;/code&gt; )이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="1de88b7a5518f32064e4736088839ca0a35cef5f" translate="yes" xml:space="preserve">
          <source>Quotes are stripped out, and do not separate words (&lt;code&gt;&quot;Do&quot;Not&quot;Separate&quot;&lt;/code&gt; is parsed as the single word &lt;code&gt;DoNotSeparate&lt;/code&gt;);</source>
          <target state="translated">따옴표가 제거되고 단어를 분리 &lt;code&gt;&quot;Do&quot;Not&quot;Separate&quot;&lt;/code&gt; ( &quot;Do&quot;Not &quot;Separate&quot; 는 단일 단어 &lt;code&gt;DoNotSeparate&lt;/code&gt; 로 구문 분석 됨 ).</target>
        </trans-unit>
        <trans-unit id="3baf119d765d9f829905b317e59f73675764e9ee" translate="yes" xml:space="preserve">
          <source>Quoting the docs for that value:</source>
          <target state="translated">해당 값에 대한 문서 인용 :</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="cabc5c96018f7018921f4448490e0330a4b89f05" translate="yes" xml:space="preserve">
          <source>R flag</source>
          <target state="translated">R 플래그</target>
        </trans-unit>
        <trans-unit id="4acdb8f75fc10aeabb85627f5b065c26ab3a0d42" translate="yes" xml:space="preserve">
          <source>R flag and O flag</source>
          <target state="translated">R 플래그와 O 플래그</target>
        </trans-unit>
        <trans-unit id="c54a6c7f5be551f84672806b45e8628a63c06c62" translate="yes" xml:space="preserve">
          <source>RCPT</source>
          <target state="translated">RCPT</target>
        </trans-unit>
        <trans-unit id="971a36c4421e4cbb57c2d5af10bfa1a4e0b52c61" translate="yes" xml:space="preserve">
          <source>RFS specific error</source>
          <target state="translated">RFS 특정 오류</target>
        </trans-unit>
        <trans-unit id="2c12ad208e53e2457d4dd4d5838ee8fb9e6f7b91" translate="yes" xml:space="preserve">
          <source>RLock Objects</source>
          <target state="translated">RLock 객체</target>
        </trans-unit>
        <trans-unit id="b86aad6bcd44688901d1d90d82637c77c09de567" translate="yes" xml:space="preserve">
          <source>RSET</source>
          <target state="translated">RSET</target>
        </trans-unit>
        <trans-unit id="a1c2f06372ca0b2789b9b64df1a575c0e730b3a4" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; if the socket is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt; and the read would block.</source>
          <target state="translated">올리 &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; 를&lt;/a&gt; 소켓 인 경우 &lt;a href=&quot;#ssl-nonblocking&quot;&gt;비 블로킹&lt;/a&gt; 과 읽기 차단합니다.</target>
        </trans-unit>
        <trans-unit id="487f22f4c2f92d02b3f0636b5755e31f6f23e284" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; if the socket is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt; and the write would block.</source>
          <target state="translated">올리 &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; 를&lt;/a&gt; 소켓 인 경우 &lt;a href=&quot;#ssl-nonblocking&quot;&gt;비 블로킹&lt;/a&gt; 와 쓰기가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="d2bd0f4cf527cddda0cf32631211e4b1d3a115b2" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;resource&lt;/em&gt; is not available. &lt;em&gt;msg&lt;/em&gt; is the argument to &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if it is raised. Always returns &lt;code&gt;True&lt;/code&gt; if called by a function whose &lt;code&gt;__name__&lt;/code&gt; is &lt;code&gt;'__main__'&lt;/code&gt;. Used when tests are executed by &lt;code&gt;test.regrtest&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt; 사용할 수없는 경우 &lt;em&gt;리소스&lt;/em&gt; 거부 &lt;em&gt;msg&lt;/em&gt; 는 &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; 에&lt;/a&gt; 대한 인수 입니다. &lt;code&gt;__name__&lt;/code&gt; 이 &lt;code&gt;'__main__'&lt;/code&gt; 인 함수에 의해 호출되면 항상 &lt;code&gt;True&lt;/code&gt; 를 반환합니다 . &lt;code&gt;test.regrtest&lt;/code&gt; 가 테스트를 실행할 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab18aff48bbfd5b6a5bf472b5ad070ee5656353a" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt;&lt;code&gt;SendfileNotAvailableError&lt;/code&gt;&lt;/a&gt; if the system does not support &lt;em&gt;sendfile&lt;/em&gt; syscall and &lt;em&gt;fallback&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">올리 &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt; &lt;code&gt;SendfileNotAvailableError&lt;/code&gt; 을&lt;/a&gt; 시스템이 지원하지 않는 경우 &lt;em&gt;에 sendfile&lt;/em&gt; 콜 및 &lt;em&gt;대체&lt;/em&gt; 입니다 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="527292d4de0f371692e481985d15cb116d202b2d" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt;&lt;code&gt;SendfileNotAvailableError&lt;/code&gt;&lt;/a&gt; if the system does not support the &lt;em&gt;sendfile&lt;/em&gt; syscall and &lt;em&gt;fallback&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">올리 &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt; &lt;code&gt;SendfileNotAvailableError&lt;/code&gt; 를&lt;/a&gt; 지원하지 않는 시스템의 경우 &lt;em&gt;sendfile을&lt;/em&gt; 콜 및 &lt;em&gt;대체가&lt;/em&gt; 있습니다 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3949a795c96bcc51f936b853e92dc8da9c47436c" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no cooked data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. Do not block unless in the midst of an IAC sequence.</source>
          <target state="translated">올리기 &lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 연결이 닫힌없이 조리 데이터를 사용할 수있는 경우. 사용 가능한 요리 데이터가 없으면 &lt;code&gt;b''&lt;/code&gt; 반환 합니다. IAC 시퀀스 중에 있지 않는 한 차단하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="962bd72f06e8e4fc81d5eb5e468371d15b1b67d9" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. Do not block unless in the midst of an IAC sequence.</source>
          <target state="translated">올리기 &lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 연결이 닫힌 경우 자료 없음. 사용 가능한 요리 데이터가 없으면 &lt;code&gt;b''&lt;/code&gt; 반환 합니다. IAC 시퀀스 중에 있지 않는 한 차단하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="97f0fa880269b6b6271c64f1f4a208758cb64d47" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. This method never blocks.</source>
          <target state="translated">올리기 &lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt; 연결이 닫힌 경우 자료 없음. 사용 가능한 요리 데이터가 없으면 &lt;code&gt;b''&lt;/code&gt; 반환 합니다. 이 방법은 절대 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b3410be4134473ff83a9cf274834d1bb99e74ab" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; (or a subclass); this is the default. Implemented in &lt;a href=&quot;#codecs.strict_errors&quot;&gt;&lt;code&gt;strict_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">올리고 &lt;a href=&quot;exceptions#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; (또는 서브 클래스); 이것이 기본값입니다. &lt;a href=&quot;#codecs.strict_errors&quot;&gt; &lt;code&gt;strict_errors()&lt;/code&gt; &lt;/a&gt; 에서 구현되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8f67c030aedb349de53ad484b068199c66d4cd06" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the signal number is invalid or uncatchable. Raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if there is a problem setting up the handler.</source>
          <target state="translated">올리 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 신호 번호가 유효하지 않거나 catch 할 수없는 경우. 올리 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 에를&lt;/a&gt; 핸들러를 설정 문제가있는 경우.</target>
        </trans-unit>
        <trans-unit id="814415113c0c8decdf1d88d3ed37e7070bc13872" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; on TLS certification validation failures.</source>
          <target state="translated">TLS 인증 검증 실패에 대한 &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; &lt;/a&gt; 를 올립니다 .</target>
        </trans-unit>
        <trans-unit id="308c5a294475831ade67dc9414117e18e489fe7b" translate="yes" xml:space="preserve">
          <source>Raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception. Override this in subclasses to do something useful with this message. Whatever was passed in the constructor as &lt;em&gt;remoteaddr&lt;/em&gt; will be available as the &lt;code&gt;_remoteaddr&lt;/code&gt; attribute. &lt;em&gt;peer&lt;/em&gt; is the remote host&amp;rsquo;s address, &lt;em&gt;mailfrom&lt;/em&gt; is the envelope originator, &lt;em&gt;rcpttos&lt;/em&gt; are the envelope recipients and &lt;em&gt;data&lt;/em&gt; is a string containing the contents of the e-mail (which should be in &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt; format).</source>
          <target state="translated">인상 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 의&lt;/a&gt; 예외. 서브 클래스에서이를 대체하여이 메시지에 유용한 것을 수행하십시오. 로 무엇이든 생성자에 전달 &lt;em&gt;remoteaddr이&lt;/em&gt; 는 AS 사용할 수 &lt;code&gt;_remoteaddr&lt;/code&gt; 의 속성. &lt;em&gt;peer&lt;/em&gt; 는 원격 호스트의 주소이고 &lt;em&gt;mailfrom&lt;/em&gt; 은 봉투 발신자이고 &lt;em&gt;rcpttos&lt;/em&gt; 는 봉투 수신자이며 &lt;em&gt;data&lt;/em&gt; 는 전자 메일 내용을 포함하는 문자열입니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt; 형식 이어야 함 ).</target>
        </trans-unit>
        <trans-unit id="65e72f948dcfe673bb8541b444b8355706436e8a" translate="yes" xml:space="preserve">
          <source>Raise a &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">인상 &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; 의&lt;/a&gt; 예외.</target>
        </trans-unit>
        <trans-unit id="614b50a0330db1e9fafcc7da211960ef6fb721cb" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;#pickle.UnpicklingError&quot;&gt;&lt;code&gt;UnpicklingError&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">올려 &lt;a href=&quot;#pickle.UnpicklingError&quot;&gt; &lt;code&gt;UnpicklingError&lt;/code&gt; 을&lt;/a&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="b88624f1396637aa9a76429273275f50508df400" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt;&lt;code&gt;IncompleteReadError&lt;/code&gt;&lt;/a&gt; if EOF is reached before &lt;em&gt;n&lt;/em&gt; can be read. Use the &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt;&lt;code&gt;IncompleteReadError.partial&lt;/code&gt;&lt;/a&gt; attribute to get the partially read data.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt; 을 읽기 전에 EOF에 도달 하면 &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt; &lt;code&gt;IncompleteReadError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다. 부분적으로 읽은 데이터를 가져 오려면 &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt; &lt;code&gt;IncompleteReadError.partial&lt;/code&gt; &lt;/a&gt; 속성을 사용하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efc13ca6f8e3fbd85005048384acd91374c4f460" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if the process exit code is not equal to &lt;em&gt;exitcode&lt;/em&gt;.</source>
          <target state="translated">Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt; if the process exit code is not equal to &lt;em&gt;exitcode&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="6a58c93294747790e1b22b847370e743fc01c245" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.addaudithook&lt;/code&gt; with no arguments. If any existing hooks raise an exception derived from &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, the new hook will not be added and the exception suppressed. As a result, callers cannot assume that their hook has been added unless they control all existing hooks.</source>
          <target state="translated">인수없이 감사 이벤트 &lt;code&gt;sys.addaudithook&lt;/code&gt; 을 발생 시킵니다 . 기존 후크에서 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 에서 파생 된 예외가 발생 하면 새 후크가 추가되지 않고 예외가 억제됩니다. 결과적으로 발신자는 기존 후크를 모두 제어하지 않으면 후크가 추가되었다고 가정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ca3d89a5fb88f6f9a0bd62453f5695f34f7fa45d" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.excepthook&lt;/code&gt; with arguments &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;traceback&lt;/code&gt; when an uncaught exception occurs. If no hook has been set, &lt;code&gt;hook&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;. If any hook raises an exception derived from &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; the call to the hook will be suppressed. Otherwise, the audit hook exception will be reported as unraisable and &lt;code&gt;sys.excepthook&lt;/code&gt; will be called.</source>
          <target state="translated">포착되지 않은 예외가 발생하면 인수 &lt;code&gt;hook&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;traceback&lt;/code&gt; 으로 감사 이벤트 &lt;code&gt;sys.excepthook&lt;/code&gt; 을 발생시킵니다. 더 후크가 설정되어 있지 않은 경우, &lt;code&gt;hook&lt;/code&gt; 하지 않을 수 &lt;code&gt;None&lt;/code&gt; . 후크에서 &lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 에서 파생 된 예외가 발생 하면 후크 호출이 억제됩니다. 그렇지 않으면 감사 후크 예외가 발생 불가능한 것으로보고되고 &lt;code&gt;sys.excepthook&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="45011f2084f8278270a25782bcd2640523f13528" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.unraisablehook&lt;/code&gt; with arguments &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;unraisable&lt;/code&gt; when an exception that cannot be handled occurs. The &lt;code&gt;unraisable&lt;/code&gt; object is the same as what will be passed to the hook. If no hook has been set, &lt;code&gt;hook&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">감사 이벤트 올립니다 &lt;code&gt;sys.unraisablehook&lt;/code&gt; 인수와 &lt;code&gt;hook&lt;/code&gt; , &lt;code&gt;unraisable&lt;/code&gt; 는 처리 할 수없는 예외가 발생했을 때. &lt;code&gt;unraisable&lt;/code&gt; 객체는 후크에 전달 될 것과 동일합니다. 더 후크가 설정되어 있지 않은 경우, &lt;code&gt;hook&lt;/code&gt; 하지 않을 수 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="affbfb75a3c2a51aa4c31c84fc00c1d40fb4949e" translate="yes" xml:space="preserve">
          <source>Raise an auditing event and trigger any active auditing hooks. &lt;em&gt;event&lt;/em&gt; is a string identifying the event, and &lt;em&gt;args&lt;/em&gt; may contain optional arguments with more information about the event. The number and types of arguments for a given event are considered a public and stable API and should not be modified between releases.</source>
          <target state="translated">Raise an auditing event and trigger any active auditing hooks. &lt;em&gt;event&lt;/em&gt; is a string identifying the event, and &lt;em&gt;args&lt;/em&gt; may contain optional arguments with more information about the event. The number and types of arguments for a given event are considered a public and stable API and should not be modified between releases.</target>
        </trans-unit>
        <trans-unit id="209de910e7786b23db5dc873a89af3a05981debf" translate="yes" xml:space="preserve">
          <source>Raise an auditing event with any active hooks. The event name is a string identifying the event and its associated schema, which is the number and types of arguments. The schema for a given event is considered public and stable API and should not be modified between releases.</source>
          <target state="translated">활성 후크로 감사 이벤트를 발생시킵니다. 이벤트 이름은 이벤트 및 관련 스키마를 식별하는 문자열이며 인수의 수와 유형입니다. 주어진 이벤트에 대한 스키마는 공개적이고 안정적인 API로 간주되며 릴리스간에 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="13cf5b4eef107d04fdb694c15a3c5afda9b3e4e4" translate="yes" xml:space="preserve">
          <source>Raise an error if key is not a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attribute, otherwise behave the same as &lt;a href=&quot;stdtypes#dict.setdefault&quot;&gt;&lt;code&gt;dict.setdefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키가 유효한 &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; 속성 이 아닌 경우 오류를 발생 &lt;a href=&quot;stdtypes#dict.setdefault&quot;&gt; &lt;code&gt;dict.setdefault()&lt;/code&gt; &lt;/a&gt; . 그렇지 않으면 dict.setdefault () 와 동일하게 동작하십시오 .</target>
        </trans-unit>
        <trans-unit id="513ada27286511dfac9e3b76b355e74118db90a0" translate="yes" xml:space="preserve">
          <source>Raise an error.</source>
          <target state="translated">오류를 제기하십시오.</target>
        </trans-unit>
        <trans-unit id="b98d56804717a8344b3faca8217587e3500c68a0" translate="yes" xml:space="preserve">
          <source>Raise an exception for all conversions, even empty strings. The error handler is ignored.</source>
          <target state="translated">빈 문자열이라도 모든 변환에 대해 예외를 발생시킵니다. 오류 처리기는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bf3b3c75170387df65e41bc9318129e65dbdf4ee" translate="yes" xml:space="preserve">
          <source>Raise the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception. When not caught, this will cause the thread to exit silently.</source>
          <target state="translated">인상 &lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; 없이의&lt;/a&gt; 예외. 잡히지 않으면 스레드가 자동으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="3ccbc658af15a6aeb17ccf284357dee98b1d51f5" translate="yes" xml:space="preserve">
          <source>Raised by &lt;a href=&quot;#tabnanny.process_tokens&quot;&gt;&lt;code&gt;process_tokens()&lt;/code&gt;&lt;/a&gt; if detecting an ambiguous indent. Captured and handled in &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모호한 들여 쓰기를 감지하면 &lt;a href=&quot;#tabnanny.process_tokens&quot;&gt; &lt;code&gt;process_tokens()&lt;/code&gt; &lt;/a&gt; 의해 발생 합니다. &lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; &lt;/a&gt; 에서 캡처하고 처리했습니다 .</target>
        </trans-unit>
        <trans-unit id="91700c02a657d1a22a6d0888df755d5dfb61f79b" translate="yes" xml:space="preserve">
          <source>Raised by any of the functions when an error is detected.</source>
          <target state="translated">오류가 감지되면 기능 중 하나로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="245b5484a84dffa039ee789ab007738e78ad447d" translate="yes" xml:space="preserve">
          <source>Raised by built-in function &lt;a href=&quot;functions#next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method to signal that there are no further items produced by the iterator.</source>
          <target state="translated">내장 함수 &lt;a href=&quot;functions#next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;반복자&lt;/a&gt; 의 &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 발생하여 반복자가 생성 한 추가 항목이 없음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="070be47adbdbee3b24ae6e3d0f21d7840e70a35e" translate="yes" xml:space="preserve">
          <source>Raised by built-in function &lt;a href=&quot;functions#next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method to signal that there are no further items produced by the iterator.</source>
          <target state="translated">Raised by built-in function &lt;a href=&quot;functions#next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; and an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt; method to signal that there are no further items produced by the iterator.</target>
        </trans-unit>
        <trans-unit id="2983d41c68d982efc0d0b57a90c10a02c160d04c" translate="yes" xml:space="preserve">
          <source>Raised by methods with a timeout when the timeout expires.</source>
          <target state="translated">시간 초과가 만료되면 시간 초과가있는 메서드에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dc96cf122ef42afab52327246420df5bb1d3c53c" translate="yes" xml:space="preserve">
          <source>Raised by the &lt;a href=&quot;asyncio-stream#asyncio-streams&quot;&gt;asyncio stream APIs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-streams&quot;&gt;asyncio 스트림 API에&lt;/a&gt; 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="7b51969a7cc445dc68596da644b1a18f7d7fcbb1" translate="yes" xml:space="preserve">
          <source>Raised for module specific errors.</source>
          <target state="translated">모듈 별 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="1baf724ee5fe516d3b35aeb53c1e867b3c240c00" translate="yes" xml:space="preserve">
          <source>Raised if a parameter or an operation is not supported on the underlying object.</source>
          <target state="translated">기본 개체에서 매개 변수 또는 작업이 지원되지 않으면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="abf08139e31556af9d9e88d3cf3c121cebad53f2" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">에 제기 &lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; &lt;/a&gt; 같은 I / O 오류와 같은 - 특정 오류. &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 는 잘못된 키 지정과 같은 일반적인 매핑 오류에 대해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="da2f1875aa7b05656f96bc8ec5f6498856443e73" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">에 제기 &lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt; 같은 I / O 오류와 같은 - 특정 오류. &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 는 잘못된 키 지정과 같은 일반적인 매핑 오류에 대해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bebf1eb5d03fa1b1f275fdb3636f5eae78a1c67d" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">에 제기 &lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt; 같은 I / O 오류와 같은 - 특정 오류. &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 는 잘못된 키 지정과 같은 일반적인 매핑 오류에 대해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b383d0b7cb3f178108fcc45ef0363602bc197b0f" translate="yes" xml:space="preserve">
          <source>Raised on attempts to modify an object where modifications are not allowed (such as for read-only nodes).</source>
          <target state="translated">수정이 허용되지 않는 개체 (예 : 읽기 전용 노드)를 수정하려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3ff9f6d3bfabe1e49c2d2cd9998e69b497930e6d" translate="yes" xml:space="preserve">
          <source>Raised on thread-specific errors.</source>
          <target state="translated">스레드 별 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="537bf0e92bcd7af8483212b23b70188a1ca87261" translate="yes" xml:space="preserve">
          <source>Raised on timeout by functions like &lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;. Keep in mind that &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; is &lt;strong&gt;unrelated&lt;/strong&gt; to the built-in &lt;a href=&quot;exceptions#TimeoutError&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; &lt;/a&gt; 와 같은 함수에 의해 시간 초과가 발생했습니다 . 있다는 사실을 숙지 &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; 가 있다 &lt;strong&gt;무관 한&lt;/strong&gt; 내장에 &lt;a href=&quot;exceptions#TimeoutError&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt; 예외입니다.</target>
        </trans-unit>
        <trans-unit id="7f3c87e4ded0cbb2cff11ecad1e4e1ec32b13cf1" translate="yes" xml:space="preserve">
          <source>Raised to signal an error from the underlying &lt;a href=&quot;#signal.setitimer&quot;&gt;&lt;code&gt;setitimer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.getitimer&quot;&gt;&lt;code&gt;getitimer()&lt;/code&gt;&lt;/a&gt; implementation. Expect this error if an invalid interval timer or a negative time is passed to &lt;a href=&quot;#signal.setitimer&quot;&gt;&lt;code&gt;setitimer()&lt;/code&gt;&lt;/a&gt;. This error is a subtype of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 &lt;a href=&quot;#signal.setitimer&quot;&gt; &lt;code&gt;setitimer()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#signal.getitimer&quot;&gt; &lt;code&gt;getitimer()&lt;/code&gt; &lt;/a&gt; 구현 에서 오류를 알리기 위해 발생했습니다 . 유효하지 않은 간격 타이머 또는 음수 시간이 &lt;a href=&quot;#signal.setitimer&quot;&gt; &lt;code&gt;setitimer()&lt;/code&gt; &lt;/a&gt; 전달되면이 오류가 예상 됩니다. 이 오류는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 하위 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="7fe1e20fa35932b3cf3d6a9a5e14ed636dc84926" translate="yes" xml:space="preserve">
          <source>Raised to signal an error from the underlying SSL implementation (currently provided by the OpenSSL library). This signifies some problem in the higher-level encryption and authentication layer that&amp;rsquo;s superimposed on the underlying network connection. This error is a subtype of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. The error code and message of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; instances are provided by the OpenSSL library.</source>
          <target state="translated">기본 SSL 구현 (현재 OpenSSL 라이브러리에서 제공)에서 오류를 알리기 위해 발생합니다. 이는 기본 네트워크 연결에 겹쳐지는 상위 레벨 암호화 및 인증 계층의 일부 문제를 나타냅니다. 이 오류는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 의 하위 유형입니다 . &lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt; 인스턴스 의 오류 코드 및 메시지 는 OpenSSL 라이브러리에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6a7e966363f7c43fd69d2d7a8980d282b0fbe461" translate="yes" xml:space="preserve">
          <source>Raised under some error conditions when parsing the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; headers of a message, this class is derived from &lt;a href=&quot;#email.errors.MessageParseError&quot;&gt;&lt;code&gt;MessageParseError&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;email.message#email.message.EmailMessage.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; method will raise this error if the content type is unknown when the method is called. &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; may raise this error for certain base64 decoding errors, and when an attempt is made to create a header that appears to contain an embedded header (that is, there is what is supposed to be a continuation line that has no leading whitespace and looks like a header).</source>
          <target state="translated">메시지 의 &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; 헤더를 구문 분석 할 때 일부 오류 조건에서 발생 하는이 클래스는 &lt;a href=&quot;#email.errors.MessageParseError&quot;&gt; &lt;code&gt;MessageParseError&lt;/code&gt; &lt;/a&gt; 에서 파생됩니다 . &lt;a href=&quot;email.message#email.message.EmailMessage.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 콘텐츠 형식 알 수없는 경우 방법이 오류가 발생합니다. &lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt; 는 특정 base64 디코딩 오류에 대해이 오류를 발생시킬 수 있으며, 포함 된 헤더를 포함하는 것으로 보이는 헤더를 만들려고 시도 할 때 (즉, 선행 공백이없고 연속 선이있는 것으로 보입니다) 헤더).</target>
        </trans-unit>
        <trans-unit id="1db95b972bdf66f0789930e2414ef74b4a9b15ac" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#envvar-PYTHONTZPATH&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONTZPATH&lt;/code&gt;&lt;/a&gt; contains an invalid component that will be filtered out, such as a relative path.</source>
          <target state="translated">Raised when &lt;a href=&quot;#envvar-PYTHONTZPATH&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONTZPATH&lt;/code&gt; &lt;/a&gt; contains an invalid component that will be filtered out, such as a relative path.</target>
        </trans-unit>
        <trans-unit id="617e5051c07bf55a90ef9fecf77ff467dabb6cb3" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer&lt;/a&gt; related operation cannot be performed.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;버퍼&lt;/a&gt; 관련 작업을 수행 할 수 없을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="187e39f0dad7df3a4efed4d1751d3054ddb97a0a" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; is closed; see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;generator.close()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;coroutine.close()&lt;/code&gt;&lt;/a&gt;. It directly inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; since it is technically not an error.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;발전기&lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;코 루틴&lt;/a&gt; 이 닫힐 때 발생합니다 . &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;generator.close()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;coroutine.close()&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 기술적으로 오류가 아니기 때문에 &lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt; 에서 직접 상속 합니다.</target>
        </trans-unit>
        <trans-unit id="b317c70139f2f50a46d6b375c9f0293ba7350a09" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer&lt;/a&gt; related operation cannot be performed.</source>
          <target state="translated">Raised when a &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer&lt;/a&gt; related operation cannot be performed.</target>
        </trans-unit>
        <trans-unit id="7c0bae11fc041a7acb55254efe584deb7672cb29" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; is closed; see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;generator.close()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;coroutine.close()&lt;/code&gt;&lt;/a&gt;. It directly inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; since it is technically not an error.</source>
          <target state="translated">Raised when a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; is closed; see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;generator.close()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;coroutine.close()&lt;/code&gt; &lt;/a&gt;. It directly inherits from &lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; since it is technically not an error.</target>
        </trans-unit>
        <trans-unit id="41098d3349464b37af05302ad74bfe09fe931237" translate="yes" xml:space="preserve">
          <source>Raised when a Task is cancelled. See also &lt;a href=&quot;asyncio-task#asyncio.Task.cancel&quot;&gt;&lt;code&gt;Task.cancel()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">작업이 취소되면 발생합니다. &lt;a href=&quot;asyncio-task#asyncio.Task.cancel&quot;&gt; &lt;code&gt;Task.cancel()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99485010453317f4839a224b98155a228a8d2d31" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related encoding or decoding error occurs. It is a subclass of &lt;a href=&quot;#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유니 코드 관련 인코딩 또는 디코딩 오류가 발생하면 발생합니다. &lt;a href=&quot;#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="2018eef101b2f4d0cdf86e08cde977dd0c66f60f" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during decoding. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디코딩 중에 유니 코드 관련 오류가 발생하면 발생합니다. &lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="4c91c642aba5bbb3e9611b2f284aaec30beda70f" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during encoding. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인코딩 중에 유니 코드 관련 오류가 발생하면 발생합니다. &lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="8cb5f76edfdda9f55f655978fb8c9e58f15abc70" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during translating. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">번역하는 동안 유니 코드 관련 오류가 발생하면 발생합니다. &lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e30b0c7a0e9e8c499e6135e347a0262de4697cc4" translate="yes" xml:space="preserve">
          <source>Raised when a directory operation (such as &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;) is requested on something which is not a directory. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;.</source>
          <target state="translated">디렉토리가 아닌 다른 디렉토리에서 디렉토리 조작 (예 : &lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt; )을 요청하면 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ENOTDIR&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="f836922934916388b6630da53747c489b0b017d5" translate="yes" xml:space="preserve">
          <source>Raised when a file operation (such as &lt;a href=&quot;os#os.remove&quot;&gt;&lt;code&gt;os.remove()&lt;/code&gt;&lt;/a&gt;) is requested on a directory. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;.</source>
          <target state="translated">디렉토리 에서 파일 작업 (예 : &lt;a href=&quot;os#os.remove&quot;&gt; &lt;code&gt;os.remove()&lt;/code&gt; &lt;/a&gt; )이 요청되면 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EISDIR&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="2fa0e53dc1968e11d9bb54b28011070563c164fd" translate="yes" xml:space="preserve">
          <source>Raised when a file or directory is requested but doesn&amp;rsquo;t exist. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;.</source>
          <target state="translated">파일이나 디렉토리가 요청되었지만 존재하지 않을 때 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ENOENT&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="7129f2d93cf00de4b8ab65fcffd612decb408de9" translate="yes" xml:space="preserve">
          <source>Raised when a future is cancelled.</source>
          <target state="translated">미래가 취소되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5ff497a3606243528ae596e76f679e9b5d0e83e" translate="yes" xml:space="preserve">
          <source>Raised when a future operation exceeds the given timeout.</source>
          <target state="translated">향후 작업이 지정된 시간 초과를 초과하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b69c8d3075f854ffb4db6ca4db57fc62b4846431" translate="yes" xml:space="preserve">
          <source>Raised when a given process doesn&amp;rsquo;t exist. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;.</source>
          <target state="translated">주어진 프로세스가 존재하지 않을 때 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ESRCH&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="1c7780b6f82c22b1007a3ed52e42762b1e1b4108" translate="yes" xml:space="preserve">
          <source>Raised when a local or global name is not found. This applies only to unqualified names. The associated value is an error message that includes the name that could not be found.</source>
          <target state="translated">로컬 또는 글로벌 이름을 찾을 수 없을 때 발생합니다. 이것은 규정되지 않은 이름에만 적용됩니다. 연관된 값은 찾을 수없는 이름을 포함하는 오류 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="4535b411526027ac118fc7423603430f6f77204d" translate="yes" xml:space="preserve">
          <source>Raised when a mailbox is expected but is not found, such as when instantiating a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; subclass with a path that does not exist (and with the &lt;em&gt;create&lt;/em&gt; parameter set to &lt;code&gt;False&lt;/code&gt;), or when opening a folder that does not exist.</source>
          <target state="translated">존재하지 않는 경로로 (그리고 &lt;em&gt;create&lt;/em&gt; 매개 변수가 &lt;code&gt;False&lt;/code&gt; 로 설정된 ) &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 서브 클래스를 인스턴스화 하거나 존재하지 않는 폴더를 열 때와 같이 사서함이 예상되지만 찾을 수없는 경우 발생합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4b3706acb5e19e9dd3b20ebaa9fb12da7f73b46" translate="yes" xml:space="preserve">
          <source>Raised when a mailbox is not empty but is expected to be, such as when deleting a folder that contains messages.</source>
          <target state="translated">메일 함이 비어 있지 않지만 메시지가 포함 된 폴더를 삭제할 때와 같이 예상되는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="29fa887635b98cd97b286abcca41a5285d1532c4" translate="yes" xml:space="preserve">
          <source>Raised when a mapping (dictionary) key is not found in the set of existing keys.</source>
          <target state="translated">기존 키 세트에서 맵핑 (사전) 키를 찾을 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b4813ea6633b6ee18af13f0a8e20689288ddb6d8" translate="yes" xml:space="preserve">
          <source>Raised when a node is inserted in a different document than it currently belongs to, and the implementation does not support migrating the node from one document to the other.</source>
          <target state="translated">노드가 현재 속한 문서와 다른 문서에 삽입 될 때 발생하며 구현시 한 문서에서 다른 문서로 노드 마이그레이션을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccf1abcce481459a6586330a57730d8a02595e41" translate="yes" xml:space="preserve">
          <source>Raised when a payload is added to a &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;add_payload()&lt;/code&gt;, but the payload is already a scalar and the message&amp;rsquo;s &lt;em&gt;Content-Type&lt;/em&gt; main type is not either &lt;em&gt;multipart&lt;/em&gt; or missing. &lt;a href=&quot;#email.errors.MultipartConversionError&quot;&gt;&lt;code&gt;MultipartConversionError&lt;/code&gt;&lt;/a&gt; multiply inherits from &lt;a href=&quot;#email.errors.MessageError&quot;&gt;&lt;code&gt;MessageError&lt;/code&gt;&lt;/a&gt; and the built-in &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;add_payload()&lt;/code&gt; 사용하여 페이로드가 &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 객체에 추가 되었지만 페이로드가 이미 스칼라이고 메시지의 &lt;em&gt;Content-Type&lt;/em&gt; 기본 유형이 &lt;em&gt;여러 부분&lt;/em&gt; 이 아니 거나없는 경우에 발생합니다. &lt;a href=&quot;#email.errors.MultipartConversionError&quot;&gt; &lt;code&gt;MultipartConversionError&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#email.errors.MessageError&quot;&gt; &lt;code&gt;MessageError&lt;/code&gt; &lt;/a&gt; 와 내장 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를&lt;/a&gt; 곱 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ac15f68208a959e5d90aff2e430959074ae6d2b" translate="yes" xml:space="preserve">
          <source>Raised when a reference is made to a local variable in a function or method, but no value has been bound to that variable. This is a subclass of &lt;a href=&quot;#NameError&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">함수 또는 메소드에서 로컬 변수에 대한 참조가 작성되었지만 해당 변수에 바인딩 된 값이없는 경우 발생합니다. 이것은 &lt;a href=&quot;#NameError&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="d5c15cc830f5bee7143900d7592e9bea83bc7ca5" translate="yes" xml:space="preserve">
          <source>Raised when a sequence subscript is out of range. (Slice indices are silently truncated to fall in the allowed range; if an index is not an integer, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="translated">시퀀스 첨자가 범위를 벗어날 때 발생합니다. (슬라이스 인덱스는 허용 범위에 속하도록 자동으로 잘립니다. 인덱스가 정수가 아닌 경우 &lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.)</target>
        </trans-unit>
        <trans-unit id="836ac5fd240c91206491984f5396cb57cefd2188" translate="yes" xml:space="preserve">
          <source>Raised when a specified range of text does not fit into a string. This is not known to be used in the Python DOM implementations, but may be received from DOM implementations not written in Python.</source>
          <target state="translated">지정된 텍스트 범위가 문자열에 맞지 않을 때 발생합니다. 이것은 Python DOM 구현에서 사용되는 것으로 알려져 있지 않지만 Python으로 작성되지 않은 DOM 구현에서 수신 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bee8969add5862bfa046bf4a87b2119da43bd766" translate="yes" xml:space="preserve">
          <source>Raised when a system call is interrupted by an incoming signal. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;a href=&quot;errno#errno.EINTR&quot;&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">수신 신호에 의해 시스템 호출이 중단되면 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;a href=&quot;errno#errno.EINTR&quot;&gt; &lt;code&gt;EINTR&lt;/code&gt; 에&lt;/a&gt; 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="192e3a29045db8e91297a6481d51b54c3ff2d65a" translate="yes" xml:space="preserve">
          <source>Raised when a system function timed out at the system level. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;.</source>
          <target state="translated">시스템 기능이 시스템 수준에서 시간 초과되면 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ETIMEDOUT&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="0d567a14527f762054253cadf609186f38653719" translate="yes" xml:space="preserve">
          <source>Raised when an &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement fails.</source>
          <target state="translated">경우에 발생 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; 문이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="b937f6a3587a8b5ab789627ae34cf709b4abafa8" translate="yes" xml:space="preserve">
          <source>Raised when an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement fails.</source>
          <target state="translated">Raised when an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; statement fails.</target>
        </trans-unit>
        <trans-unit id="5945c1d5737e249b836423b124cc966a7203214a" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to insert a node where the node type is not allowed.</source>
          <target state="translated">노드 유형이 허용되지 않는 노드를 삽입하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c146f51a1a22ce7be88f5e3fc18559eb0b36abea" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to insert an &lt;code&gt;Attr&lt;/code&gt; node that is already present elsewhere in the document.</source>
          <target state="translated">문서의 다른 곳에 이미 존재 하는 &lt;code&gt;Attr&lt;/code&gt; 노드 를 삽입하려고 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="3ecd22b9ee23ec28a85db41faa926f7bb23daecf" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to modify the type of a node.</source>
          <target state="translated">노드 유형을 수정하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="149a7fc4e849fe2dbcd86b6a6099f2c4b9505a07" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to use an object that is not defined or is no longer usable.</source>
          <target state="translated">정의되지 않았거나 더 이상 사용할 수없는 객체를 사용하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b8cfb95b5fbc853892e47f514184913b78acf955" translate="yes" xml:space="preserve">
          <source>Raised when an attribute reference (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#attribute-references&quot;&gt;Attribute references&lt;/a&gt;) or assignment fails. (When an object does not support attribute references or attribute assignments at all, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="translated">속성 참조 ( &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#attribute-references&quot;&gt;속성 참조 참조&lt;/a&gt; ) 또는 할당이 실패하면 발생합니다. (객체가 속성 참조 나 속성 할당을 전혀 지원하지 않으면 &lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.)</target>
        </trans-unit>
        <trans-unit id="7f24d181b36ebcaba063a8e6916bcaf64bda3f88" translate="yes" xml:space="preserve">
          <source>Raised when an attribute reference (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#attribute-references&quot;&gt;Attribute references&lt;/a&gt;) or assignment fails. (When an object does not support attribute references or attribute assignments at all, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="translated">Raised when an attribute reference (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#attribute-references&quot;&gt;Attribute references&lt;/a&gt;) or assignment fails. (When an object does not support attribute references or attribute assignments at all, &lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; is raised.)</target>
        </trans-unit>
        <trans-unit id="6f78ebf753bab31ace3810a94417434fa41a6672" translate="yes" xml:space="preserve">
          <source>Raised when an error is detected that doesn&amp;rsquo;t fall in any of the other categories. The associated value is a string indicating what precisely went wrong.</source>
          <target state="translated">다른 범주에 속하지 않는 오류가 감지되면 발생합니다. 연관된 값은 정확히 무엇이 잘못되었는지를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a787646929310b8199ab55a8e3de5507387a81aa" translate="yes" xml:space="preserve">
          <source>Raised when an implicitly defined &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is called on a dataclass which was defined with &lt;code&gt;frozen=True&lt;/code&gt;.</source>
          <target state="translated">묵시적으로 정의 된 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;frozen=True&lt;/code&gt; 로 정의 된 데이터 클래스에서 호출 될 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="84257a71c0e7d4143ed352f9f864b98136bbd62b" translate="yes" xml:space="preserve">
          <source>Raised when an implicitly defined &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is called on a dataclass which was defined with &lt;code&gt;frozen=True&lt;/code&gt;.</source>
          <target state="translated">Raised when an implicitly defined &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt; is called on a dataclass which was defined with &lt;code&gt;frozen=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42fccf9cd15a154e1afbd5a825835935ea240c46" translate="yes" xml:space="preserve">
          <source>Raised when an index or size parameter to a method is negative or exceeds the allowed values.</source>
          <target state="translated">메소드의 색인 또는 크기 매개 변수가 음수이거나 허용 된 값을 초과하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2565d594815edb534ee6de4dacaf2a546fff4d90" translate="yes" xml:space="preserve">
          <source>Raised when an input byte could not properly be assigned to a character; for example, a NUL byte (value &lt;code&gt;0&lt;/code&gt;) in a UTF-8 input stream.</source>
          <target state="translated">입력 바이트를 문자에 올바르게 할당 할 수 없을 때 발생합니다. 예를 들어, UTF-8 입력 스트림 의 NUL 바이트 (값 &lt;code&gt;0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7d7dd1e0ead0426d93968affe5e1667c5472e2f1" translate="yes" xml:space="preserve">
          <source>Raised when an invalid or illegal string is specified.</source>
          <target state="translated">유효하지 않거나 잘못된 문자열이 지정되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c813eccfc69c0664893e9c82027cb01fa7db5291" translate="yes" xml:space="preserve">
          <source>Raised when an operation is performed on a future that is not allowed in the current state.</source>
          <target state="translated">현재 상태에서 허용되지 않는 미래에 작업이 수행 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7c1feda89f7b1be1568a90504487213bf1d6e2f3" translate="yes" xml:space="preserve">
          <source>Raised when an operation on a child process failed. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;.</source>
          <target state="translated">자식 프로세스 작업이 실패했을 때 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECHILD&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="4cfa50647a51c263accb156260c868da54119176" translate="yes" xml:space="preserve">
          <source>Raised when an operation or function is applied to an object of inappropriate type. The associated value is a string giving details about the type mismatch.</source>
          <target state="translated">부적절한 유형의 객체에 작업 또는 기능이 적용될 때 발생합니다. 연관된 값은 유형 불일치에 대한 세부 사항을 제공하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="f1b0fa6358da619838e976caf300cdaecbc7434d" translate="yes" xml:space="preserve">
          <source>Raised when an operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as &lt;a href=&quot;#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">조작 또는 함수가 올바른 유형이지만 부적절한 값을 갖는 인수를 수신 할 때 발생하며 &lt;a href=&quot;#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt; 와 같은보다 정확한 예외로 상황이 설명되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2f1d3a8eb30cec2d71cc6db649391b9a9039c152" translate="yes" xml:space="preserve">
          <source>Raised when an operation runs out of memory but the situation may still be rescued (by deleting some objects). The associated value is a string indicating what kind of (internal) operation ran out of memory. Note that because of the underlying memory management architecture (C&amp;rsquo;s &lt;code&gt;malloc()&lt;/code&gt; function), the interpreter may not always be able to completely recover from this situation; it nevertheless raises an exception so that a stack traceback can be printed, in case a run-away program was the cause.</source>
          <target state="translated">작업에 메모리가 부족하지만 상황이 여전히 일부 개체를 삭제하여 복구 될 수있을 때 발생합니다. 관련 값은 어떤 종류의 (내부) 작업에서 메모리가 부족했는지를 나타내는 문자열입니다. 기본 메모리 관리 아키텍처 (C의 &lt;code&gt;malloc()&lt;/code&gt; 함수)로 인해 인터프리터가이 상황에서 항상 완전히 복구 할 수있는 것은 아닙니다. 그럼에도 불구하고 런 어웨이 프로그램이 원인 일 경우 스택 추적을 인쇄 할 수 있도록 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="15b6a587f2dea584ce3780a71b6e9091108d69ce" translate="yes" xml:space="preserve">
          <source>Raised when an operation would block on an object (e.g. socket) set for non-blocking operation. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;, &lt;code&gt;EALREADY&lt;/code&gt;, &lt;code&gt;EWOULDBLOCK&lt;/code&gt; and &lt;code&gt;EINPROGRESS&lt;/code&gt;.</source>
          <target state="translated">비 차단 작업을 위해 설정된 객체 (예 : 소켓)에서 작업이 차단 될 때 발생합니다. 에 해당하는 &lt;code&gt;errno&lt;/code&gt; 를 &lt;code&gt;EAGAIN&lt;/code&gt; , &lt;code&gt;EALREADY&lt;/code&gt; , &lt;code&gt;EWOULDBLOCK&lt;/code&gt; 및 &lt;code&gt;EINPROGRESS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1632029902d58132af51401ecead66e3b74d41b0" translate="yes" xml:space="preserve">
          <source>Raised when construction of a &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; object fails because the specified key could not be found on the system. This is a subclass of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raised when construction of a &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt; &lt;code&gt;ZoneInfo&lt;/code&gt; &lt;/a&gt; object fails because the specified key could not be found on the system. This is a subclass of &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="071c2f2348407f377cf093c42e97717a7295ee9b" translate="yes" xml:space="preserve">
          <source>Raised when either a docstring or expression that may be split over several lines is not completed anywhere in the file, for example:</source>
          <target state="translated">여러 줄로 분할 될 수있는 docstring 또는 expression이 파일의 어느 위치에서나 완료되지 않으면 발생합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8173f406e1e46af1b511049a62a3e5d77c75621a" translate="yes" xml:space="preserve">
          <source>Raised when indentation contains an inconsistent use of tabs and spaces. This is a subclass of &lt;a href=&quot;#IndentationError&quot;&gt;&lt;code&gt;IndentationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">들여 쓰기에 일관성이없는 탭과 공백 사용이 포함 된 경우 발생합니다. 이것은 &lt;a href=&quot;#IndentationError&quot;&gt; &lt;code&gt;IndentationError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="f26eba02b7f68f1b93b15968c0c8bffa60e82f19" translate="yes" xml:space="preserve">
          <source>Raised when some mailbox-related condition beyond the control of the program causes it to be unable to proceed, such as when failing to acquire a lock that another program already holds a lock, or when a uniquely-generated file name already exists.</source>
          <target state="translated">프로그램이 제어 할 수없는 일부 사서함 관련 조건으로 인해 다른 프로그램이 이미 잠금을 보유한 잠금을 획득하지 못하거나 고유하게 생성 된 파일 이름이 이미 존재하는 경우와 같이 진행될 수없는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a1e3e96778b4a76c6bb63f399424514bf51419b" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; function hits an end-of-file condition (EOF) without reading any data. (N.B.: the &lt;code&gt;io.IOBase.read()&lt;/code&gt; and &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;io.IOBase.readline()&lt;/code&gt;&lt;/a&gt; methods return an empty string when they hit EOF.)</source>
          <target state="translated">경우에 발생 &lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt; 함수는 임의의 데이터를 판독하지 않고 파일 끝 조건 (EOF)을 히트. (NB : &lt;code&gt;io.IOBase.read()&lt;/code&gt; 및 &lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;io.IOBase.readline()&lt;/code&gt; &lt;/a&gt; 메서드는 EOF에 도달하면 빈 문자열을 반환합니다.)</target>
        </trans-unit>
        <trans-unit id="c8187000ffcc004cf488ed36d80812d62f29f188" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement has troubles trying to load a module. Also raised when the &amp;ldquo;from list&amp;rdquo; in &lt;code&gt;from ... import&lt;/code&gt; has a name that cannot be found.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문에 모듈을로드하는 데 문제가 있을 때 발생합니다 . &lt;code&gt;from ... import&lt;/code&gt; 의 &quot;from list&quot;에서 이름을 찾을 수없는 경우에도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="798f7e7af20023ccf8a033036635c2f6f2015437" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement has troubles trying to load a module. Also raised when the &amp;ldquo;from list&amp;rdquo; in &lt;code&gt;from ... import&lt;/code&gt; has a name that cannot be found.</source>
          <target state="translated">Raised when the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; statement has troubles trying to load a module. Also raised when the &amp;ldquo;from list&amp;rdquo; in &lt;code&gt;from ... import&lt;/code&gt; has a name that cannot be found.</target>
        </trans-unit>
        <trans-unit id="c5a0109d2a5c23e5e14daed241f3537e0efbfef8" translate="yes" xml:space="preserve">
          <source>Raised when the data in a file cannot be parsed, such as when an &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instance attempts to read a corrupted &lt;code&gt;.mh_sequences&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt; 인스턴스가 손상된 &lt;code&gt;.mh_sequences&lt;/code&gt; 파일 을 읽으려고 할 때와 같이 파일의 데이터를 구문 분석 할 수 없을 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="146054eb7828ebcac691fb3dbda2da3741b10a04" translate="yes" xml:space="preserve">
          <source>Raised when the implementation does not support the requested type of object or operation.</source>
          <target state="translated">구현이 요청 된 유형의 객체 또는 작업을 지원하지 않을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b4f3e6d615fa197033468c28f628c05354cbf396" translate="yes" xml:space="preserve">
          <source>Raised when the interpreter finds an internal error, but the situation does not look so serious to cause it to abandon all hope. The associated value is a string indicating what went wrong (in low-level terms).</source>
          <target state="translated">통역사가 내부 오류를 발견했을 때 발생하지만 상황이 모든 희망을 버릴 정도로 심각하게 보이지는 않습니다. 연관된 값은 무엇이 잘못되었는지 (낮은 수준으로) 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a941d5c673c4b371a41d611c42daed10ef3bc500" translate="yes" xml:space="preserve">
          <source>Raised when the parser encounters a syntax error. This may occur in an &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement, in a call to the built-in functions &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, or when reading the initial script or standard input (also interactively).</source>
          <target state="translated">파서에 구문 오류가 발생하면 발생합니다. 이는 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문, 내장 함수 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 호출 또는 초기 스크립트 또는 표준 입력 (대화식)을 읽을 때 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6444f209283e513e4874397077844674a92b3047" translate="yes" xml:space="preserve">
          <source>Raised when the parser encounters a syntax error. This may occur in an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement, in a call to the built-in functions &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, or when reading the initial script or standard input (also interactively).</source>
          <target state="translated">Raised when the parser encounters a syntax error. This may occur in an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; statement, in a call to the built-in functions &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;, or when reading the initial script or standard input (also interactively).</target>
        </trans-unit>
        <trans-unit id="26bd9e205db6583e46e333a0118865687e016863" translate="yes" xml:space="preserve">
          <source>Raised when the result of an arithmetic operation is too large to be represented. This cannot occur for integers (which would rather raise &lt;a href=&quot;#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; than give up). However, for historical reasons, OverflowError is sometimes raised for integers that are outside a required range. Because of the lack of standardization of floating point exception handling in C, most floating point operations are not checked.</source>
          <target state="translated">산술 연산의 결과가 너무 커서 표현할 수 없을 때 발생합니다. 이것은 정수에서 발생할 수 없습니다 ( 포기하는 것보다 &lt;a href=&quot;#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt; 가 발생합니다). 그러나 역사적 이유로 인해 필요한 범위를 벗어난 정수의 경우 OverflowError가 발생하는 경우가 있습니다. C에서 부동 소수점 예외 처리의 표준화가 없기 때문에 대부분의 부동 소수점 연산은 점검되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9447026f9df744be9ee128a09126624b58463e43" translate="yes" xml:space="preserve">
          <source>Raised when the second argument of a division or modulo operation is zero. The associated value is a string indicating the type of the operands and the operation.</source>
          <target state="translated">나누기 또는 모듈로 연산의 두 번째 인수가 0 일 때 발생합니다. 연관된 값은 피연산자의 유형 및 연산을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4775761a9c5cb275b116d24a71b80b5be8a9a2c5" translate="yes" xml:space="preserve">
          <source>Raised when the user hits the interrupt key (normally</source>
          <target state="translated">사용자가 인터럽트 키를 눌렀을 때 발생합니다 (일반적으로</target>
        </trans-unit>
        <trans-unit id="4db30c88f41b18a01cc76f6eb12efcd692885a4c" translate="yes" xml:space="preserve">
          <source>Raised when there is an authentication error.</source>
          <target state="translated">인증 오류가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7a17fa2784976b37bb998d75d962a816fac48634" translate="yes" xml:space="preserve">
          <source>Raised when trying to create a file or directory which already exists. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;.</source>
          <target state="translated">이미 존재하는 파일이나 디렉토리를 만들려고 할 때 발생합니다. 에 해당하는 &lt;code&gt;errno&lt;/code&gt; 는 &lt;code&gt;EEXIST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="025e7b830e478e39e0a379feaeb271aa79b69e76" translate="yes" xml:space="preserve">
          <source>Raised when trying to run an operation without the adequate access rights - for example filesystem permissions. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt; and &lt;code&gt;EPERM&lt;/code&gt;.</source>
          <target state="translated">파일 시스템 권한과 같은 적절한 액세스 권한없이 작업을 실행하려고 할 때 발생합니다. &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EACCES&lt;/code&gt; 및 &lt;code&gt;EPERM&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="238a00f356dee73a56bd4ca0031f0eebb8fb06a3" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt; if an invalid control is specified, or &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if an unsupported control is specified.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; &lt;/a&gt; 잘못된 제어가 지정된 경우, 또는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 지원되지 않는 컨트롤이 지정된 경우.</target>
        </trans-unit>
        <trans-unit id="ac7f57a0ff24a51ebd2b019405d1f096075057e1" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt; if an invalid mixer control was specified, or if the specified volumes were out-of-range.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; 를&lt;/a&gt; 잘못된 믹서 컨트롤이 지정된 경우, 또는 지정된 볼륨 범위 외 있다면.</target>
        </trans-unit>
        <trans-unit id="d1469e58af18bc65cb7589d2e63c275155510418" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;data&lt;/em&gt; has fewer than two values.</source>
          <target state="translated">올린다 &lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; 을&lt;/a&gt; 하는 경우 &lt;em&gt;데이터가&lt;/em&gt; 두 개 미만의 값을 갖는다.</target>
        </trans-unit>
        <trans-unit id="799ebcc5213436d53ec32c6d0a050b0cc45ca5e8" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;data&lt;/em&gt; is empty.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; 이&lt;/a&gt; 경우 &lt;em&gt;데이터가&lt;/em&gt; 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b499d88e8c6595b524fb41721a6812376d234ff" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#tarfile.HeaderError&quot;&gt;&lt;code&gt;HeaderError&lt;/code&gt;&lt;/a&gt; if the buffer is invalid.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;#tarfile.HeaderError&quot;&gt; &lt;code&gt;HeaderError&lt;/code&gt; 를&lt;/a&gt; 버퍼가 무효 인 경우.</target>
        </trans-unit>
        <trans-unit id="40b6d67cb90046b3b63b5dcad43fc14488bd45bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt; if the timeout occurs before all Futures are done.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; 을&lt;/a&gt; 모든 선물이 완료되기 전에 타임 아웃이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="02d004ae5bd069157f48f6b273f43669e0c5afbd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if no matching cookie exists.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 를이&lt;/a&gt; 일치하는 쿠키가 존재하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="91ba61c2f7451f16f2ac78bd5e08da93d73b8658" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ProcessLookupError&quot;&gt;&lt;code&gt;ProcessLookupError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;pid&lt;/em&gt; can&amp;rsquo;t be found and &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt; when the user doesn&amp;rsquo;t have &lt;code&gt;CAP_SYS_RESOURCE&lt;/code&gt; for the process.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#ProcessLookupError&quot;&gt; &lt;code&gt;ProcessLookupError&lt;/code&gt; &lt;/a&gt;&lt;em&gt; PID를&lt;/em&gt; 찾을 수 없습니다와 &lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; 는&lt;/a&gt; 사용자가없는 경우 &lt;code&gt;CAP_SYS_RESOURCE&lt;/code&gt; 를 하는 과정에 대해.</target>
        </trans-unit>
        <trans-unit id="53937e5a7d70f054e980e2a37b896bf64eed1ea2" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;instance&lt;/code&gt; is not a dataclass instance.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;instance&lt;/code&gt; dataclass 인스턴스가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a91d3d7d9b2850e6dd1726232f8e33aef0e2e413" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if either of the arguments are not integers. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if either of the arguments are negative.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 인수 중 하나가 정수가 아닌 경우. 발생시킵니다&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 인수 중 하나가 부정적인 경우.</target>
        </trans-unit>
        <trans-unit id="742c3253209370a98134cc25fd53354074e0c3e6" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid resource is specified, if the new soft limit exceeds the hard limit, or if a process tries to raise its hard limit. Specifying a limit of &lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt;&lt;code&gt;RLIM_INFINITY&lt;/code&gt;&lt;/a&gt; when the hard or system limit for that resource is not unlimited will result in a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. A process with the effective UID of super-user can request any valid limit value, including unlimited, but &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will still be raised if the requested limit exceeds the system imposed limit.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 잘못된 자원이 지정된 경우 새로운 소프트 제한은 하드 제한을 초과하는 경우, 또는 프로세스가 하드 제한을 인상하려고하면. 해당 자원의 하드 또는 시스템 한계가 무제한이 아닌 경우 &lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt; &lt;code&gt;RLIM_INFINITY&lt;/code&gt; &lt;/a&gt; 한계를 지정 하면&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;. 수퍼 유저의 유효 UID가있는 프로세스는 무제한을 포함하여 유효한 제한 값을 요청할 수 있지만요청 된 제한이 시스템 부과 제한을 초과하면&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 계속 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1f93a1ac7f309867b8d7baa46bed663660d26046" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if any node in &lt;em&gt;nodes&lt;/em&gt; has already been marked as processed by a previous call to this method or if a node was not added to the graph by using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;TopologicalSorter.add()&lt;/code&gt;&lt;/a&gt;, if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt; or if node has not yet been returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; if any node in &lt;em&gt;nodes&lt;/em&gt; has already been marked as processed by a previous call to this method or if a node was not added to the graph by using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt; &lt;code&gt;TopologicalSorter.add()&lt;/code&gt; &lt;/a&gt;, if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt; or if node has not yet been returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ebb6ee96d560023c993889a0b355cc4923ffc66d" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called after &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; if called after &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e2e146c798bfc44e2ad573a62ac77fdb983eb7f5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called more times than there were items placed in the queue.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 큐에 배치 항목이 있었다보다 더 많은 시간이라고합니다.</target>
        </trans-unit>
        <trans-unit id="a92c9456ded4e70f1194e0e64e6ad1e70c06f3fd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt; previously.</source>
          <target state="translated">Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt; previously.</target>
        </trans-unit>
        <trans-unit id="79802bd247b2fab5e87d9034c68acee395355c10" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if no signature can be provided, and &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if that type of object is not supported.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를이&lt;/a&gt; 더 서명이 제공 할 수없는 경우, 및 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 객체의 유형이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="594dd1109a995b371fac6a3d6bb6647ee1e74ff5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; on protocol errors.</source>
          <target state="translated">제기 &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; 을&lt;/a&gt; 프로토콜 오류에.</target>
        </trans-unit>
        <trans-unit id="758bae30f6db4e2386562c3f494933a38e3c16d2" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if the input dataset is empty, if it contains a zero, or if it contains a negative value. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable.</source>
          <target state="translated">제기 &lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; 을&lt;/a&gt; 가 0을 포함하는 경우, 또는 음의 값을 포함하는 경우, 입력 데이터 집합이 비어있는 경우. &lt;em&gt;데이터&lt;/em&gt; 시퀀스 또는 반복 가능한 수있다.</target>
        </trans-unit>
        <trans-unit id="bb7175e654d8cec4a1e4d0bf4f680af987bf4d62" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; error if the Future is already &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">제기 &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; 의&lt;/a&gt; 미래가 이미되어있는 경우 오류를&lt;em&gt; 수행&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5c80ba2542e0af03bbef50e69aeeb4c3a81b77ad" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found or the codec doesn&amp;rsquo;t support an incremental decoder.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt; 부호화를 찾을 수없는 경우 또는 코덱 증분 디코더를 지원하지 않는다.</target>
        </trans-unit>
        <trans-unit id="b63f05b5798012ffc63adfd031f372ae0deb3890" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found or the codec doesn&amp;rsquo;t support an incremental encoder.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt; 부호화를 찾을 수없는 경우 또는 코덱 증분 인코더를 지원하지 않는다.</target>
        </trans-unit>
        <trans-unit id="13e52e3ac65af8901398f21b27126fbcd7a0e912" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt; 부호화를 찾을 수없는 경우에이.</target>
        </trans-unit>
        <trans-unit id="0e6dce7afb06128f2150033972ef474abcfc3e54" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the handler cannot be found.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt; 핸들러를 찾을 수없는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="3e61c009e9f13b2b3a453e9b03b63e924188e5c5" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called more times than there were items placed in the queue.</source>
          <target state="translated">제기 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를이&lt;/a&gt; 큐에 배치 항목이 있었다보다 더 많은 시간이라고합니다.</target>
        </trans-unit>
        <trans-unit id="c25c140a614f4600cd58acb9788428e868cd6c64" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;cpython.run_interactivehook&lt;/code&gt; with the hook object as the argument when the hook is called on startup.</source>
          <target state="translated">제기 &lt;a href=&quot;#auditing&quot;&gt; 감사 이벤트 &lt;/a&gt; &lt;code&gt;cpython.run_interactivehook&lt;/code&gt; 후크가 시작할 때 호출되는 인수로 후크 객체를.</target>
        </trans-unit>
        <trans-unit id="6e3659576e7d56fd42b0192cfe01b816827d0d7a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys._current_frames&lt;/code&gt; with no arguments.</source>
          <target state="translated">제기 &lt;a href=&quot;#auditing&quot;&gt; 감사 이벤트 &lt;/a&gt; &lt;code&gt;sys._current_frames&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="39e0509c4828435eb2063c4749e88e820e4c4e19" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys._getframe&lt;/code&gt; with no arguments.</source>
          <target state="translated">제기 &lt;a href=&quot;#auditing&quot;&gt; 감사 이벤트 &lt;/a&gt; &lt;code&gt;sys._getframe&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="2715c6ef6d6047ee2a10c30494274b1581ce87a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.set_asyncgen_hooks_finalizer&lt;/code&gt; with no arguments.</source>
          <target state="translated">제기 &lt;a href=&quot;#auditing&quot;&gt; 감사 이벤트 &lt;/a&gt; &lt;code&gt;sys.set_asyncgen_hooks_finalizer&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="c0fb916a1e815458b71e1e1a89376bfe5a45dc3a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.set_asyncgen_hooks_firstiter&lt;/code&gt; with no arguments.</source>
          <target state="translated">&lt;a href=&quot;#auditing&quot;&gt;감사 이벤트를 발생&lt;/a&gt; 시킵니다. &lt;code&gt;sys.set_asyncgen_hooks_firstiter&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="52dad9dad3b32b119aba16eea230246633895842" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.setprofile&lt;/code&gt; with no arguments.</source>
          <target state="translated">&lt;a href=&quot;#auditing&quot;&gt;감사 이벤트를 발생&lt;/a&gt; 시킵니다. &lt;code&gt;sys.setprofile&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="16ca2c45afe8a124ff7e4d1f9da35856dafa3fa3" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.settrace&lt;/code&gt; with no arguments.</source>
          <target state="translated">&lt;a href=&quot;#auditing&quot;&gt;감사 이벤트를 발생&lt;/a&gt; 시킵니다. &lt;code&gt;sys.settrace&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="efafa56e78f31621c13f731f324927897b824411" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;array.__new__&lt;/code&gt; with arguments &lt;code&gt;typecode&lt;/code&gt;, &lt;code&gt;initializer&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;array.__new__&lt;/code&gt; 인수와 &lt;code&gt;typecode&lt;/code&gt; , &lt;code&gt;initializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="079936061198eb6088c170bd396ee47f6049c02f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.breakpoint&lt;/code&gt; with argument &lt;code&gt;breakpointhook&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;builtins.breakpoint&lt;/code&gt; 인수를 &lt;code&gt;breakpointhook&lt;/code&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="72c0ec1cbc6b8946a86e313a56e7de8acc0ff7e1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.id&lt;/code&gt; with argument &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;builtins.id&lt;/code&gt; with argument &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ebc51f218e9004d7b94fe769d4cb2198aaf3cdd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.input&lt;/code&gt; with argument &lt;code&gt;prompt&lt;/code&gt; before reading input</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;builtins.input&lt;/code&gt; 인수를 &lt;code&gt;prompt&lt;/code&gt; 입력을 읽기 전에 프롬프트</target>
        </trans-unit>
        <trans-unit id="53c39966d4b0e5d67eb25146622558c37663ccc7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;code.__new__&lt;/code&gt; with arguments &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;argcount&lt;/code&gt;, &lt;code&gt;posonlyargcount&lt;/code&gt;, &lt;code&gt;kwonlyargcount&lt;/code&gt;, &lt;code&gt;nlocals&lt;/code&gt;, &lt;code&gt;stacksize&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;argcount&lt;/code&gt; , &lt;code&gt;posonlyargcount&lt;/code&gt; , &lt;code&gt;kwonlyargcount&lt;/code&gt; , &lt;code&gt;nlocals&lt;/code&gt; , &lt;code&gt;stacksize&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; 가 포함 된 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;code.__new__&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="dbd715add0e866debc2ed538e8d47460989be563" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;compile&lt;/code&gt; with arguments &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;. This event may also be raised by implicit compilation.</source>
          <target state="translated">인수 &lt;code&gt;source&lt;/code&gt; 및 &lt;code&gt;filename&lt;/code&gt; 을 &lt;code&gt;compile&lt;/code&gt; 하여 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt;컴파일 을 발생 시킵니다. 이 이벤트는 암시적인 컴파일로 발생할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9760e460d25516ad7f78ab56e8fb1fecb0606067" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.addressof&lt;/code&gt; with argument &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;obj&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.addressof&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="68ace3ef224bfccf1cc7d3e720e02017dbebc57c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata/buffer&lt;/code&gt; with arguments &lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.cdata/buffer&lt;/code&gt; 인수와 &lt;code&gt;pointer&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; , &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ab3444f481a6369c603e1ad538dd221023c9d44" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.create_string_buffer&lt;/code&gt; with arguments &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;init&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 가 있는 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.create_string_buffer&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5b7c565e8a29f3db5258895f6725951d4f55463c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.create_unicode_buffer&lt;/code&gt; with arguments &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;init&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 가 있는 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.create_unicode_buffer&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="40768b76b5d41d388ae2b81735890f852de6b22a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.get_errno&lt;/code&gt; with no arguments.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.get_errno&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="b112d7a70da482cfcd999ed8d36300eee0b160f0" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.get_last_error&lt;/code&gt; with no arguments.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.get_last_error&lt;/code&gt; 인수 없음을.</target>
        </trans-unit>
        <trans-unit id="431aacfcd3f8b88c1df3928779bc3e1e9867dcfc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.set_errno&lt;/code&gt; with argument &lt;code&gt;errno&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.set_errno&lt;/code&gt; 인수를 &lt;code&gt;errno&lt;/code&gt; 는 .</target>
        </trans-unit>
        <trans-unit id="3ba6cc6cc5936ec2ab86e9cf060f45927ab5a9b6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.set_last_error&lt;/code&gt; with argument &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;error&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.set_last_error&lt;/code&gt; 를 발생시킵니다. .</target>
        </trans-unit>
        <trans-unit id="5a804cbaf29eae46476e1731002fcce6340bb3f0" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.string_at&lt;/code&gt; with arguments &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;address&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.string_at&lt;/code&gt; 을 발생 시킵니다. .</target>
        </trans-unit>
        <trans-unit id="8d6b171a4597fcb595d9d806a5c0cfc26285efdb" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.wstring_at&lt;/code&gt; with arguments &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;address&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ctypes.wstring_at&lt;/code&gt; 을 발생 시킵니다. .</target>
        </trans-unit>
        <trans-unit id="403d12339bdaf377051f6e0fc09c75388702dc9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ensurepip.bootstrap&lt;/code&gt; with argument &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;root&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ensurepip.bootstrap&lt;/code&gt; 을 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="842d393d07933374e0857825fc6ac6bd8a102d7b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;exec&lt;/code&gt; with the code object as the argument. Code compilation events may also be raised.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;exec&lt;/code&gt; 인수로 코드 객체를. 코드 컴파일 이벤트가 발생할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9e4c6953062f5a75abf8c61f38e47c11287dab4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.fcntl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;fcntl.fcntl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bf190c09aa3ceca01742ceda1c4ce686833909e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.flock&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;fcntl.flock&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;operation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79daab2129bee23ba6e299b18c77c60e26eda66d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.ioctl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;fcntl.ioctl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;request&lt;/code&gt; , &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47bfa71e21f980226ed0abe960bdef1383e08c83" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.lockf&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;whence&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;fcntl.lockf&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;len&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;whence&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f122a1eab81f37d648e38f51dba15b370ce9805" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ftplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; 인수 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;ftplib.connect&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="15bf37d46c26f40dc2f6748f2cfd031b747e22dc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ftplib.sendcmd&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트가 &lt;/a&gt; &lt;code&gt;ftplib.sendcmd&lt;/code&gt; 인수와 &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="582c9671c5f20287d28bb66d62df01cad4b05165" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;function.__new__&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;function.__new__&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6efc2da71b14329e9da0e2276777354d4c6ec256" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;glob.glob&lt;/code&gt; with arguments &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;recursive&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;glob.glob&lt;/code&gt; 인수와 &lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;recursive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8684756366c03d40cef85d8a80b15e114b8d0c30" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;imaplib.open&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; 인수 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;imaplib.open&lt;/code&gt; 을 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="4ea054955479414e79a7f6fe8174e9d2bd08ff4a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;imaplib.send&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt; 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;imaplib.send&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="60bfb7b427a42844719ecaaccf9ee76e3bcb939c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;mmap.__new__&lt;/code&gt; with arguments &lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;mmap.__new__&lt;/code&gt; 인수와 &lt;code&gt;fileno&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; , &lt;code&gt;access&lt;/code&gt; , &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30d15accbd9decc4c86fdaff72574007793534fb" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.get_osfhandle&lt;/code&gt; with argument &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;msvcrt.get_osfhandle&lt;/code&gt; with argument &lt;code&gt;fd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="563c526294fc7179fce70e0d251a3ec38101415e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.locking&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;nbytes&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;msvcrt.locking&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;nbytes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce8e155274ad8ddfe9343d27771f3e0aefd8d732" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.open_osfhandle&lt;/code&gt; with arguments &lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;msvcrt.open_osfhandle&lt;/code&gt; with arguments &lt;code&gt;handle&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e826a502c1efa032d18a01fff7f577e27e639e2" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;nntplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; 인수 로 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;nntplib.connect&lt;/code&gt; 를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="8c9c311595c304be374f4ba8ca21fd804373ac91" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;open&lt;/code&gt; 인수와 &lt;code&gt;file&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c334c43fb99a8eefdffacf34c0d3ffe16f937f64" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">발생시킵니다 &lt;a href=&quot;sys#auditing&quot;&gt;감사 이벤트 &lt;/a&gt; &lt;code&gt;open&lt;/code&gt; 인수와 &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e71dd7331655d6529aca68def547506a0864145" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.add_dll_directory&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.add_dll_directory&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41154196fe24018107ba80e55c97f1051c47085e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chdir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.chdir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f089f131f9cd18be9e51c2c19a8c5440aa5dbf00" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chflags&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.chflags&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20b6a4b3307f202d92fa8064e6e4315d50ae73a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chmod&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.chmod&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="378e0b2877a8d38d64283378190713357b7bc3ef" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; , &lt;code&gt;gid&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="274b00973197b823aae949dcaae896de0441df9b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.exec&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.exec&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7b159e28e71480331f48c5a29274f30f16dacee" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fork&lt;/code&gt; with no arguments.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.fork&lt;/code&gt; with no arguments.</target>
        </trans-unit>
        <trans-unit id="f538747e2ad1c4b9f997fc9bff298b3005abf264" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.forkpty&lt;/code&gt; with no arguments.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.forkpty&lt;/code&gt; with no arguments.</target>
        </trans-unit>
        <trans-unit id="b615b2db59ea7b4eaf65621d07438e8d93cdf83a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fwalk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;follow_symlinks&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.fwalk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topdown&lt;/code&gt; , &lt;code&gt;onerror&lt;/code&gt; , &lt;code&gt;follow_symlinks&lt;/code&gt; , &lt;code&gt;dir_fd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffe03c0e428f4ba678d3c3035d95471c980b0cea" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.getxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.getxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;attribute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d76717857a00c7bb21d54df919ae81654bbd5b1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.kill&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.kill&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt; , &lt;code&gt;sig&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed5fc375e226e3e8698afd7fc246479c4d94b3a8" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.killpg&lt;/code&gt; with arguments &lt;code&gt;pgid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="translated">Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt; &lt;code&gt;os.killpg&lt;/code&gt; with arguments &lt;code&gt;pgid&lt;/code&gt; , &lt;code&gt;sig&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
