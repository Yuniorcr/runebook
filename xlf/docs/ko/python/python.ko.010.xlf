<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="41cf36b57a09029e0930c65593e97c425f25385c" translate="yes" xml:space="preserve">
          <source>Determines whether the window accepts the focus during keyboard traversal. 0, 1 or an empty string is returned. If 0 is returned, it means that the window should be skipped entirely during keyboard traversal. If 1, it means that the window should receive the input focus as long as it is viewable. And an empty string means that the traversal scripts make the decision about whether or not to focus on the window.</source>
          <target state="translated">키보드 순회 동안 창에서 포커스를 허용할지 여부를 결정합니다. 0, 1 또는 빈 문자열이 반환됩니다. 0이 반환되면 키보드 탐색 중에 창을 완전히 건너 뛰어야한다는 의미입니다. 1 인 경우, 창은 볼 수있는 한 입력 포커스를 받아야 함을 의미합니다. 빈 문자열은 순회 스크립트가 창에 초점을 맞출 지 여부를 결정 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a9b9c524283ef65e98a82d93ec990e57870e259e" translate="yes" xml:space="preserve">
          <source>Determining if an Object is Aware or Naive</source>
          <target state="translated">객체가 인식인지 순진한 지 판단</target>
        </trans-unit>
        <trans-unit id="67f3adfacb330aee4a77e40e7fde0c2b8c823dc3" translate="yes" xml:space="preserve">
          <source>Deterministic pycs</source>
          <target state="translated">결정적 pycs</target>
        </trans-unit>
        <trans-unit id="227ba6b966ce35298cb13e42b2cde346a9f64fbf" translate="yes" xml:space="preserve">
          <source>Developers of applications written in Python may wish to hide &lt;em&gt;all&lt;/em&gt; Python level warnings from their users by default, and only display them when running tests or otherwise working on the application. The &lt;a href=&quot;sys#sys.warnoptions&quot;&gt;&lt;code&gt;sys.warnoptions&lt;/code&gt;&lt;/a&gt; attribute used to pass filter configurations to the interpreter can be used as a marker to indicate whether or not warnings should be disabled:</source>
          <target state="translated">Python으로 작성된 응용 프로그램 개발자는 기본적으로 사용자에게 &lt;em&gt;모든&lt;/em&gt; Python 수준 경고 를 숨기고 테스트를 실행하거나 응용 프로그램에서 작업 할 때만 표시 할 수 있습니다. &lt;a href=&quot;sys#sys.warnoptions&quot;&gt; &lt;code&gt;sys.warnoptions&lt;/code&gt; 은&lt;/a&gt; 인터프리터가 경고를 비활성화해야하는지 여부를 표시하는 마커로 사용할 수 있습니다에 필터 구성을 전달하는 데 사용되는 속성 :</target>
        </trans-unit>
        <trans-unit id="c83efca71a2db98805984e21bc069c97a6e54f0a" translate="yes" xml:space="preserve">
          <source>Developers of test runners for Python code are advised to instead ensure that &lt;em&gt;all&lt;/em&gt; warnings are displayed by default for the code under test, using code like:</source>
          <target state="translated">Python 코드 용 테스트 러너 개발자는 대신 다음과 같은 코드를 사용하여 테스트중인 코드에 대해 기본적으로 &lt;em&gt;모든&lt;/em&gt; 경고가 표시 되도록해야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0d42a8d569e440582dd6f493e86e769d7ace0645" translate="yes" xml:space="preserve">
          <source>Developing tkinter applications</source>
          <target state="translated">tkinter 어플리케이션 개발</target>
        </trans-unit>
        <trans-unit id="69e08870be0ea69b026eb028e089a45e4aadb5ae" translate="yes" xml:space="preserve">
          <source>Developing with asyncio</source>
          <target state="translated">asyncio로 개발</target>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="translated">개발 도구</target>
        </trans-unit>
        <trans-unit id="9a6a50b41ee8aba0a7ad4d460b7fcd489d8aaf30" translate="yes" xml:space="preserve">
          <source>Device control 2, block-mode flow control</source>
          <target state="translated">장치 제어 2, 블록 모드 흐름 제어</target>
        </trans-unit>
        <trans-unit id="99e66b66a02a1ee7e99342652890cd1ca85ebf30" translate="yes" xml:space="preserve">
          <source>Device control 4</source>
          <target state="translated">장치 제어 4</target>
        </trans-unit>
        <trans-unit id="88140a99cc73d6037ebc42dbf052b9760e08e9ad" translate="yes" xml:space="preserve">
          <source>Device inode resides on.</source>
          <target state="translated">장치 inode가 상주합니다.</target>
        </trans-unit>
        <trans-unit id="472deee175b73a542254dec55f58f9d2616f1d1b" translate="yes" xml:space="preserve">
          <source>Device not a stream</source>
          <target state="translated">스트림이 아닌 기기</target>
        </trans-unit>
        <trans-unit id="e914a8417a836459823812aa69a567d2573691c0" translate="yes" xml:space="preserve">
          <source>Device or resource busy</source>
          <target state="translated">장치 또는 리소스 사용량이 많음</target>
        </trans-unit>
        <trans-unit id="fbf791da64a6f6cc8813eb953ab15733b8a9afc1" translate="yes" xml:space="preserve">
          <source>Dialects and Formatting Parameters</source>
          <target state="translated">방언 및 서식 매개 변수</target>
        </trans-unit>
        <trans-unit id="f8808ef7cf0e671eacf36da443a071254bd3ccd1" translate="yes" xml:space="preserve">
          <source>Dialects support the following attributes:</source>
          <target state="translated">방언은 다음 속성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ab5432e726cd06aa63821e0e9ee891817a60436e" translate="yes" xml:space="preserve">
          <source>Dialog to let the user choose a color.</source>
          <target state="translated">사용자가 색상을 선택할 수있는 대화 상자.</target>
        </trans-unit>
        <trans-unit id="7b2f0dc8ba3fefcd0ad85c299eb369b0c44ec6f2" translate="yes" xml:space="preserve">
          <source>DictReader objects have the following public attribute:</source>
          <target state="translated">DictReader 개체에는 다음과 같은 공용 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7701461b214d90ff772f645eb7737e941419731" translate="yes" xml:space="preserve">
          <source>DictWriter objects have the following public method:</source>
          <target state="translated">DictWriter 객체에는 다음과 같은 공용 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dab1b2e060963421780f99f99f8333356b11f484" translate="yes" xml:space="preserve">
          <source>Dictionaries and dictionary views are reversible.</source>
          <target state="translated">사전 및 사전보기는 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8a3f2e4e27b59aff156a80c90bd0e61a79e929f" translate="yes" xml:space="preserve">
          <source>Dictionaries are sorted by key before the display is computed.</source>
          <target state="translated">사전은 키를 기준으로 정렬되어 표시가 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="cc77ad3dc358d8f0c4202fd6b67fedccf96b0c7a" translate="yes" xml:space="preserve">
          <source>Dictionaries can be created by placing a comma-separated list of &lt;code&gt;key: value&lt;/code&gt; pairs within braces, for example: &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; or &lt;code&gt;{4098:
'jack', 4127: 'sjoerd'}&lt;/code&gt;, or by the &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">쉼표로 구분 된 &lt;code&gt;key: value&lt;/code&gt; 쌍 목록을 중괄호 안에 넣으면 사전을 만들 수 있습니다 ( 예 : &lt;code&gt;{'jack': 4098, 'sjoerd': 4127}&lt;/code&gt; 또는 &lt;code&gt;{4098: 'jack', 4127: 'sjoerd'}&lt;/code&gt; ). 또는 &lt;a href=&quot;#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 생성자에 의해 .</target>
        </trans-unit>
        <trans-unit id="fcda0270e3f9044179237f7db532a14ec2abb911" translate="yes" xml:space="preserve">
          <source>Dictionaries can be created by several means:</source>
          <target state="translated">사전은 여러 가지 방법으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c3a2db47bf8a581a52622cba95060db97ba81bb" translate="yes" xml:space="preserve">
          <source>Dictionaries compare equal if and only if they have the same &lt;code&gt;(key,
value)&lt;/code&gt; pairs (regardless of ordering). Order comparisons (&amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;&amp;lt;=&amp;rsquo;, &amp;lsquo;&amp;gt;=&amp;rsquo;, &amp;lsquo;&amp;gt;&amp;rsquo;) raise &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사전 은 순서에 관계없이 동일한 &lt;code&gt;(key, value)&lt;/code&gt; 쌍 을 가진 경우에만 동등을 비교 합니다. 순서 비교 ( '&amp;lt;', '&amp;lt;=', '&amp;gt; =', '&amp;gt;')는 &lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="39c1670b0b7a7ba40b9a9d4c83b18f7c9c04ad3a" translate="yes" xml:space="preserve">
          <source>Dictionaries preserve insertion order. Note that updating a key does not affect the order. Keys added after deletion are inserted at the end.</source>
          <target state="translated">사전은 삽입 순서를 유지합니다. 키를 업데이트해도 순서에는 영향을 미치지 않습니다. 삭제 후 추가 된 키는 끝에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="11e4e1bd6354fe87eabd1901d226ac34a6736551" translate="yes" xml:space="preserve">
          <source>Dictionary Schema Details</source>
          <target state="translated">사전 스키마 세부 사항</target>
        </trans-unit>
        <trans-unit id="d8b283c48261e4ecb7a9bbe964e5c60e4131f141" translate="yes" xml:space="preserve">
          <source>Dictionary mapping field names to default values.</source>
          <target state="translated">사전에 필드 이름을 기본값으로 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="6042f2bfa5164ad89d60a949b51e0f9674e3a2bb" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to MIME types.</source>
          <target state="translated">MIME 유형에 대한 사전 매핑 파일 이름 확장자.</target>
        </trans-unit>
        <trans-unit id="cb6ed1766c441df58f2b613e0dea5ef76b601253" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to encoding types.</source>
          <target state="translated">인코딩 유형에 대한 사전 매핑 파일 이름 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="cc743300da11561abe7cccb0301d600320914337" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to encoding types. This is initially a copy of the global &lt;a href=&quot;#mimetypes.encodings_map&quot;&gt;&lt;code&gt;encodings_map&lt;/code&gt;&lt;/a&gt; defined in the module.</source>
          <target state="translated">인코딩 유형에 대한 사전 매핑 파일 이름 확장자입니다. 이것은 처음에 모듈에 정의 된 전역 &lt;a href=&quot;#mimetypes.encodings_map&quot;&gt; &lt;code&gt;encodings_map&lt;/code&gt; &lt;/a&gt; 의 사본입니다 .</target>
        </trans-unit>
        <trans-unit id="3946d8795bb6d7919f1c5e41c5b09a7f43674b39" translate="yes" xml:space="preserve">
          <source>Dictionary mapping filename extensions to non-standard, but commonly found MIME types.</source>
          <target state="translated">비표준이지만 일반적으로 발견되는 MIME 유형에 대한 사전 매핑 파일 이름 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="a23d5e1a918ecde718d3194609b2fb09730da8db" translate="yes" xml:space="preserve">
          <source>Dictionary mapping host names to &lt;code&gt;(login, account, password)&lt;/code&gt; tuples. The &amp;lsquo;default&amp;rsquo; entry, if any, is represented as a pseudo-host by that name.</source>
          <target state="translated">호스트 이름을 &lt;code&gt;(login, account, password)&lt;/code&gt; 튜플에 사전 매핑합니다 . 'default'항목 (있는 경우)은 해당 이름으로 의사 호스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6a20be1cc4b03cc107300484267c30e75500f64e" translate="yes" xml:space="preserve">
          <source>Dictionary mapping macro names to string lists.</source>
          <target state="translated">매크로 이름을 문자열 목록에 사전 매핑</target>
        </trans-unit>
        <trans-unit id="1a6f3a328e7fe9dc5d4d50d48b00b95c792889e9" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.confstr&quot;&gt;&lt;code&gt;confstr()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">&lt;a href=&quot;#os.confstr&quot;&gt; &lt;code&gt;confstr()&lt;/code&gt; &lt;/a&gt; 에서 허용되는 사전 맵핑 이름을 호스트 운영 체제에서 해당 이름에 대해 정의 된 정수 값으로 맵핑합니다 . 시스템에 알려진 이름 세트를 판별하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ccdaf305830e968d57992fa9d9bf0a4e700fa8c" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.pathconf&quot;&gt;&lt;code&gt;pathconf()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.fpathconf&quot;&gt;&lt;code&gt;fpathconf()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">&lt;a href=&quot;#os.pathconf&quot;&gt; &lt;code&gt;pathconf()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.fpathconf&quot;&gt; &lt;code&gt;fpathconf()&lt;/code&gt; &lt;/a&gt; 에서 허용되는 사전 매핑 이름을 호스트 운영 체제에서 해당 이름에 대해 정의 된 정수 값으로 매핑합니다 . 시스템에 알려진 이름 세트를 판별하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5052e74fa4846ce8de8b33c9e8642836e29e4f8" translate="yes" xml:space="preserve">
          <source>Dictionary mapping names accepted by &lt;a href=&quot;#os.sysconf&quot;&gt;&lt;code&gt;sysconf()&lt;/code&gt;&lt;/a&gt; to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.</source>
          <target state="translated">&lt;a href=&quot;#os.sysconf&quot;&gt; &lt;code&gt;sysconf()&lt;/code&gt; &lt;/a&gt; 에서 허용되는 사전 매핑 이름을 호스트 운영 체제에서 해당 이름에 대해 정의 된 정수 값으로 매핑합니다 . 시스템에 알려진 이름 세트를 판별하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1042fd8ccb48d1cccd2c79e82340ae4728ce4bc" translate="yes" xml:space="preserve">
          <source>Dictionary mapping operation names to bytecodes.</source>
          <target state="translated">바이트 코드에 대한 사전 맵핑 조작 이름</target>
        </trans-unit>
        <trans-unit id="d320f3654028862a4c4a9c7058e10c8a100bc32e" translate="yes" xml:space="preserve">
          <source>Dictionary mapping suffixes to suffixes. This is used to allow recognition of encoded files for which the encoding and the type are indicated by the same extension. For example, the &lt;code&gt;.tgz&lt;/code&gt; extension is mapped to &lt;code&gt;.tar.gz&lt;/code&gt; to allow the encoding and type to be recognized separately.</source>
          <target state="translated">접미사에 접두사를 매핑합니다. 인코딩과 형식이 동일한 확장자로 표시되는 인코딩 된 파일을 인식하는 데 사용됩니다. 예를 들어 &lt;code&gt;.tgz&lt;/code&gt; 확장자는 &lt;code&gt;.tar.gz&lt;/code&gt; 에 매핑되어 인코딩과 형식을 개별적으로 인식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba111bb63f7f04cb2c6ffad0dfc326bced082a43" translate="yes" xml:space="preserve">
          <source>Dictionary mapping suffixes to suffixes. This is used to allow recognition of encoded files for which the encoding and the type are indicated by the same extension. For example, the &lt;code&gt;.tgz&lt;/code&gt; extension is mapped to &lt;code&gt;.tar.gz&lt;/code&gt; to allow the encoding and type to be recognized separately. This is initially a copy of the global &lt;a href=&quot;#mimetypes.suffix_map&quot;&gt;&lt;code&gt;suffix_map&lt;/code&gt;&lt;/a&gt; defined in the module.</source>
          <target state="translated">접미사에 접두사를 매핑합니다. 인코딩과 형식이 동일한 확장자로 표시되는 인코딩 된 파일을 인식하는 데 사용됩니다. 예를 들어 &lt;code&gt;.tgz&lt;/code&gt; 확장자는 &lt;code&gt;.tar.gz&lt;/code&gt; 에 매핑되어 인코딩과 형식을 개별적으로 인식 할 수 있습니다. 이것은 처음에 모듈에 정의 된 전역 &lt;a href=&quot;#mimetypes.suffix_map&quot;&gt; &lt;code&gt;suffix_map&lt;/code&gt; &lt;/a&gt; 의 사본입니다 .</target>
        </trans-unit>
        <trans-unit id="168115d9d1a3a169576861b302205ec9e2950502" translate="yes" xml:space="preserve">
          <source>Dictionary mapping the numeric values of the constants defined in this module back to name strings, allowing more human-readable representation of parse trees to be generated.</source>
          <target state="translated">이 모듈에 정의 된 상수의 숫자 값을 이름 문자열로 다시 매핑하여보다 읽기 쉬운 구문 분석 트리 표현을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3dabf768529c5c0a05d31ae2894f6e329b9c6c9" translate="yes" xml:space="preserve">
          <source>Dictionary providing a mapping from the errno value to the string name in the underlying system. For instance, &lt;code&gt;errno.errorcode[errno.EPERM]&lt;/code&gt; maps to &lt;code&gt;'EPERM'&lt;/code&gt;.</source>
          <target state="translated">errno 값에서 기본 시스템의 문자열 이름으로의 맵핑을 제공하는 사전. 예를 들어, &lt;code&gt;errno.errorcode[errno.EPERM]&lt;/code&gt; 은 &lt;code&gt;'EPERM'&lt;/code&gt; 에 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="40597299627c550fcec55295c4bb145ed6cf1d78" translate="yes" xml:space="preserve">
          <source>Dictionary view objects</source>
          <target state="translated">사전 뷰 객체</target>
        </trans-unit>
        <trans-unit id="36bd5b623a353d13fe2893d2198b78a7baeb18e9" translate="yes" xml:space="preserve">
          <source>Dictionary views can be iterated over to yield their respective data, and support membership tests:</source>
          <target state="translated">사전보기를 반복하여 각 데이터를 산출하고 멤버십 테스트를 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="139d350f94ffb48040d8894ee7a42401613111f6" translate="yes" xml:space="preserve">
          <source>Differ Example</source>
          <target state="translated">다른 예</target>
        </trans-unit>
        <trans-unit id="cd728318667a85a62b573e348a3f148aef08641b" translate="yes" xml:space="preserve">
          <source>Differ Objects</source>
          <target state="translated">다른 객체</target>
        </trans-unit>
        <trans-unit id="b16f1f66543d3256c7320f66ff9ae94cbd849539" translate="yes" xml:space="preserve">
          <source>Difference</source>
          <target state="translated">Difference</target>
        </trans-unit>
        <trans-unit id="3f42c895712e6c6a328c797466b0a8dec5f7adc8" translate="yes" xml:space="preserve">
          <source>Difference of &lt;em&gt;t2&lt;/em&gt; and &lt;em&gt;t3&lt;/em&gt;. Afterwards &lt;em&gt;t1&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt; - &lt;em&gt;t3&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t1&lt;/em&gt; + &lt;em&gt;t3&lt;/em&gt; are true. (1)(6)</source>
          <target state="translated">의 차이 &lt;em&gt;T2&lt;/em&gt; 와 &lt;em&gt;T3&lt;/em&gt; . 이후 &lt;em&gt;t1&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt; - &lt;em&gt;t3&lt;/em&gt; 및 &lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t1&lt;/em&gt; + &lt;em&gt;t3&lt;/em&gt; 은 true입니다. (1) (6)</target>
        </trans-unit>
        <trans-unit id="6624ab01690a92e0f0a8a19484c2fd2471ce1058" translate="yes" xml:space="preserve">
          <source>Difference of number of memory blocks between the old and the new snapshots (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been allocated in the new snapshot.</source>
          <target state="translated">기존 스냅 샷과 새 스냅 샷 사이의 메모리 블록 수 차이 ( &lt;code&gt;int&lt;/code&gt; ) : 새 스냅 샷 에 메모리 블록이 할당 된 경우 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="86f96f336ae06cf6a1b8a61189ade72185a20755" translate="yes" xml:space="preserve">
          <source>Difference of total size of memory blocks in bytes between the old and the new snapshots (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been allocated in the new snapshot.</source>
          <target state="translated">기존 스냅 샷과 새 스냅 샷 사이의 총 메모리 블록 크기 (바이트) 차이 ( &lt;code&gt;int&lt;/code&gt; ) : 메모리 블록이 새 스냅 샷에 할당 된 경우 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="40bbccf2ba866425060b0cb20b93db8b94798d1b" translate="yes" xml:space="preserve">
          <source>Different values of &lt;code&gt;nargs&lt;/code&gt; may cause the metavar to be used multiple times. Providing a tuple to &lt;code&gt;metavar&lt;/code&gt; specifies a different display for each of the arguments:</source>
          <target state="translated">서로 다른 값 &lt;code&gt;nargs&lt;/code&gt; 는 metavar 여러 번 사용 될 수 있습니다. 튜플을 &lt;code&gt;metavar&lt;/code&gt; 에 제공하면 각 인수에 대해 서로 다른 표시가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="fc6fd1376fd880cb9ae2825f4fd3cf98cb14391b" translate="yes" xml:space="preserve">
          <source>Dim mode</source>
          <target state="translated">희미한 모드</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="b138c42c2b3dec6d9d696fea7e389c6986342198" translate="yes" xml:space="preserve">
          <source>Directly calling &lt;code&gt;blocking_io()&lt;/code&gt; in any coroutine would block the event loop for its duration, resulting in an additional 1 second of run time. Instead, by using &lt;code&gt;asyncio.to_thread()&lt;/code&gt;, we can run it in a separate thread without blocking the event loop.</source>
          <target state="translated">모든 코 루틴에서 &lt;code&gt;blocking_io()&lt;/code&gt; 를 직접 호출 하면 해당 기간 동안 이벤트 루프가 차단되어 추가로 1 초의 런타임이 발생합니다. 대신 &lt;code&gt;asyncio.to_thread()&lt;/code&gt; 를 사용 하여 이벤트 루프를 차단하지 않고 별도의 스레드에서 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc6a447bac6f99d1a389591808fbaff01c06f423" translate="yes" xml:space="preserve">
          <source>Directly using the &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt; class allows formatting profile results without writing the profile data to a file:</source>
          <target state="translated">&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;/a&gt; 클래스를 직접 사용하면 프로파일 데이터를 파일에 쓰지 않고도 프로파일 결과의 형식을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc6eeb851607c3b55aaacacd74d18bddb9fd02b0" translate="yes" xml:space="preserve">
          <source>Directory Objects</source>
          <target state="translated">디렉토리 객체</target>
        </trans-unit>
        <trans-unit id="ffd1ab279b81704543013ac343cefcf1e2b7548e" translate="yes" xml:space="preserve">
          <source>Directory and files operations</source>
          <target state="translated">디렉토리 및 파일 작업</target>
        </trans-unit>
        <trans-unit id="ca827528d6904965fcebbbcad976a987f5f845b3" translate="yes" xml:space="preserve">
          <source>Directory not empty</source>
          <target state="translated">비어 있지 않은 디렉토리</target>
        </trans-unit>
        <trans-unit id="bcd01b1fcfc45feeb0b610cedd055b91feedcae8" translate="yes" xml:space="preserve">
          <source>Directory prepended to the path to each file being compiled. This will appear in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.</source>
          <target state="translated">컴파일되는 각 파일의 경로 앞에 붙는 디렉토리. 이것은 컴파일 타임 트레이스 백에 표시되며 바이트 코드 파일로 컴파일되어 바이트 코드 파일이 실행될 때 소스 파일이 존재하지 않는 경우 트레이스 백 및 기타 메시지에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e24ad17992020f3be6b95a5b746b62d6077b46e8" translate="yes" xml:space="preserve">
          <source>Directory to start discovery (&lt;code&gt;.&lt;/code&gt; default)</source>
          <target state="translated">감지를 시작할 디렉토리 ( &lt;code&gt;.&lt;/code&gt; 기본값)</target>
        </trans-unit>
        <trans-unit id="aa85c82dbbd07d561fa1ca6cdd3784c4b55212eb" translate="yes" xml:space="preserve">
          <source>Directory where the report files go. The coverage report for &lt;code&gt;package.module&lt;/code&gt; is written to file &lt;code&gt;&lt;em&gt;dir&lt;/em&gt;/&lt;em&gt;package&lt;/em&gt;/&lt;em&gt;module&lt;/em&gt;.cover&lt;/code&gt;.</source>
          <target state="translated">보고서 파일이있는 디렉토리입니다. &lt;code&gt;package.module&lt;/code&gt; 의 적용 범위 보고서 는 &lt;code&gt;&lt;em&gt;dir&lt;/em&gt;/&lt;em&gt;package&lt;/em&gt;/&lt;em&gt;module&lt;/em&gt;.cover&lt;/code&gt; 파일에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="b880122308ce27b5ab48c3a6d598cd3097440d21" translate="yes" xml:space="preserve">
          <source>Disable all renegotiation in TLSv1.2 and earlier. Do not send HelloRequest messages, and ignore renegotiation requests via ClientHello.</source>
          <target state="translated">TLSv1.2 및 이전 버전에서 모든 재협상을 비활성화하십시오. HelloRequest 메시지를 보내지 말고 ClientHello를 통한 재협상 요청을 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="6702afe54fec9e2d0d8d66485bd9af6027c6ec30" translate="yes" xml:space="preserve">
          <source>Disable automatic garbage collection.</source>
          <target state="translated">자동 가비지 수집을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="67ac096f22bb26091ab23d04893929ab1c5ee4a3" translate="yes" xml:space="preserve">
          <source>Disable compression on the SSL channel. This is useful if the application protocol supports its own compression scheme.</source>
          <target state="translated">SSL 채널에서 압축을 비활성화하십시오. 응용 프로그램 프로토콜이 자체 압축 체계를 지원하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6a617b5eeb1945ca47df687d9c7242d1929b1d88" translate="yes" xml:space="preserve">
          <source>Disable escaping of non-ascii characters, see &lt;a href=&quot;#json.dumps&quot;&gt;&lt;code&gt;json.dumps()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">ASCII가 아닌 문자의 이스케이프를 비활성화 합니다. 자세한 내용 은 &lt;a href=&quot;#json.dumps&quot;&gt; &lt;code&gt;json.dumps()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8554496342320bb00b9cd6ea070562a878bad5db" translate="yes" xml:space="preserve">
          <source>Disable the breakpoints given as a space separated list of breakpoint numbers. Disabling a breakpoint means it cannot cause the program to stop execution, but unlike clearing a breakpoint, it remains in the list of breakpoints and can be (re-)enabled.</source>
          <target state="translated">공백으로 구분 된 중단 점 번호 목록으로 제공된 중단 점을 비활성화하십시오. 중단 점을 비활성화하면 프로그램 실행을 중지 할 수 없지만 중단 점을 지우는 것과 달리 중단 점 목록에 남아 있으며 다시 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61473ef24244fd6354a880a118dc31e352e4ff73" translate="yes" xml:space="preserve">
          <source>Disable the fault handler: uninstall the signal handlers installed by &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">결함 핸들러를 사용 불가능하게하십시오 . &lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt; 설치된 신호 핸들러를 설치 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ed405df70ba7025acb374fe4e8581c83ef8fb55" translate="yes" xml:space="preserve">
          <source>Disables registry reflection for 32-bit processes running on a 64-bit operating system.</source>
          <target state="translated">64 비트 운영 체제에서 실행중인 32 비트 프로세스에 대한 레지스트리 반영을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5bfbd758cfd4b12de4ce9b1991cf396206be8124" translate="yes" xml:space="preserve">
          <source>Disablesevent</source>
          <target state="translated">Disablesevent</target>
        </trans-unit>
        <trans-unit id="f2c139f4275906840325036c5447f3b226e78992" translate="yes" xml:space="preserve">
          <source>Disassemble a code object, indicating the last instruction if &lt;em&gt;lasti&lt;/em&gt; was provided. The output is divided in the following columns:</source>
          <target state="translated">&lt;em&gt;lasti&lt;/em&gt; 가 제공된 경우 마지막 명령을 나타내는 코드 객체를 분해하십시오 . 출력은 다음 열로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="eb66f3ccadfa9df8451bb8de2769fa1fa09e0581" translate="yes" xml:space="preserve">
          <source>Disassemble the &lt;em&gt;x&lt;/em&gt; object. &lt;em&gt;x&lt;/em&gt; can denote either a module, a class, a method, a function, a generator, an asynchronous generator, a coroutine, a code object, a string of source code or a byte sequence of raw bytecode. For a module, it disassembles all functions. For a class, it disassembles all methods (including class and static methods). For a code object or sequence of raw bytecode, it prints one line per bytecode instruction. It also recursively disassembles nested code objects (the code of comprehensions, generator expressions and nested functions, and the code used for building nested classes). Strings are first compiled to code objects with the &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; built-in function before being disassembled. If no object is provided, this function disassembles the last traceback.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt; 객체를 분해하십시오 . &lt;em&gt;x&lt;/em&gt; 는 모듈, 클래스, 메소드, 함수, 생성기, 비동기 생성기, 코 루틴, 코드 객체, 소스 코드의 문자열 또는 원시 바이트 코드의 바이트 시퀀스를 나타낼 수 있습니다. 모듈의 경우 모든 기능을 분해합니다. 클래스의 경우 모든 메소드 (클래스 및 정적 메소드 포함)를 디스 어셈블합니다. 코드 객체 또는 원시 바이트 코드 시퀀스의 경우 바이트 코드 명령어 당 한 줄을 인쇄합니다. 또한 중첩 된 코드 개체 (독해 코드, 생성기 식 및 중첩 함수, 중첩 클래스 작성에 사용되는 코드)를 재귀 적으로 분해합니다. 문자열은 먼저 &lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt; 객체를 코딩하기 위해 컴파일됩니다.분해하기 전에 붙박이 기능. 객체가 제공되지 않으면이 함수는 마지막 역 추적을 분해합니다.</target>
        </trans-unit>
        <trans-unit id="c5a722487b8d1e4d30d77117b7eb465b9eac4723" translate="yes" xml:space="preserve">
          <source>Disassemble the top-of-stack function of a traceback, using the last traceback if none was passed. The instruction causing the exception is indicated.</source>
          <target state="translated">전달되지 않은 경우 마지막 역 추적을 사용하여 역 추적의 상단 기능을 분해하십시오. 예외를 일으키는 명령이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c2a4395b2a5ea228066e1b239a95864f6fbc655c" translate="yes" xml:space="preserve">
          <source>Discard all session cookies.</source>
          <target state="translated">모든 세션 쿠키를 폐기하십시오.</target>
        </trans-unit>
        <trans-unit id="2596998b4fe1168192e8b375218c5ec98e0bd94d" translate="yes" xml:space="preserve">
          <source>Discard queued data on file descriptor &lt;em&gt;fd&lt;/em&gt;. The &lt;em&gt;queue&lt;/em&gt; selector specifies which queue: &lt;code&gt;TCIFLUSH&lt;/code&gt; for the input queue, &lt;code&gt;TCOFLUSH&lt;/code&gt; for the output queue, or &lt;code&gt;TCIOFLUSH&lt;/code&gt; for both queues.</source>
          <target state="translated">대기중인 데이터를 파일 설명자 &lt;em&gt;fd&lt;/em&gt; 에 폐기하십시오 . &lt;em&gt;대기열&lt;/em&gt; 선택 지정되는 큐 : &lt;code&gt;TCIFLUSH&lt;/code&gt; 입력 큐, &lt;code&gt;TCOFLUSH&lt;/code&gt; 출력 큐, 또는 대 &lt;code&gt;TCIOFLUSH&lt;/code&gt; 모두 큐.</target>
        </trans-unit>
        <trans-unit id="a2c9625daf2840b98fcf5f102e1b6ba05dd18ca3" translate="yes" xml:space="preserve">
          <source>Discards all contained cookies that have a true &lt;code&gt;discard&lt;/code&gt; attribute (usually because they had either no &lt;code&gt;max-age&lt;/code&gt; or &lt;code&gt;expires&lt;/code&gt; cookie-attribute, or an explicit &lt;code&gt;discard&lt;/code&gt; cookie-attribute). For interactive browsers, the end of a session usually corresponds to closing the browser window.</source>
          <target state="translated">실제 &lt;code&gt;discard&lt;/code&gt; 속성 이있는 모든 포함 된 쿠키를 삭제 합니다 (일반적으로 &lt;code&gt;max-age&lt;/code&gt; 없거나 쿠키 속성 &lt;code&gt;expires&lt;/code&gt; 되었거나 명시 적 &lt;code&gt;discard&lt;/code&gt; 쿠키 속성 이 있기 때문에 ). 대화식 브라우저의 경우 세션 끝은 일반적으로 브라우저 창을 닫는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4e9a60543dd57372c68f390bac04e0461166ca1d" translate="yes" xml:space="preserve">
          <source>Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. This was published in &lt;a href=&quot;http://www.drdobbs.com/&quot;&gt;Dr. Dobb&amp;rsquo;s Journal&lt;/a&gt; in July, 1988.</source>
          <target state="translated">John W. Ratcliff와 DE Metzener의 비슷한 알고리즘에 대한 토론. 이것은 1988 년 7 월 &lt;a href=&quot;http://www.drdobbs.com/&quot;&gt;Dobb 's Journal&lt;/a&gt; 에 실렸다 .</target>
        </trans-unit>
        <trans-unit id="d4527219ebc14b19edf84ed58e3cf877b05f8ae4" translate="yes" xml:space="preserve">
          <source>Discussion of the special methods used to support object state retrieval and restoration.</source>
          <target state="translated">객체 상태 검색 및 복원을 지원하는 데 사용되는 특수 방법에 대한 토론</target>
        </trans-unit>
        <trans-unit id="199d52ab4e7eeeec4b75fa2687c5cf88feebd5ce" translate="yes" xml:space="preserve">
          <source>Dispatch Tables</source>
          <target state="translated">디스패치 테이블</target>
        </trans-unit>
        <trans-unit id="120c31099db22289dd35dfede7eab3541204be55" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;url&lt;/em&gt; using the browser handled by this controller. If &lt;em&gt;new&lt;/em&gt; is 1, a new browser window is opened if possible. If &lt;em&gt;new&lt;/em&gt; is 2, a new browser page (&amp;ldquo;tab&amp;rdquo;) is opened if possible.</source>
          <target state="translated">이 컨트롤러가 처리하는 브라우저를 사용하여 &lt;em&gt;URL&lt;/em&gt; 을 표시 하십시오. 경우 &lt;em&gt;새가&lt;/em&gt; 1 가능하면 새 브라우저 창이 열립니다. 경우 &lt;em&gt;새가&lt;/em&gt; 2, 새 브라우저 페이지입니다 가능하면 ( &quot;탭&quot;)가 열립니다.</target>
        </trans-unit>
        <trans-unit id="f6fb36a69d73ec27ad1d1472002427d3ae1cb9ab" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;url&lt;/em&gt; using the default browser. If &lt;em&gt;new&lt;/em&gt; is 0, the &lt;em&gt;url&lt;/em&gt; is opened in the same browser window if possible. If &lt;em&gt;new&lt;/em&gt; is 1, a new browser window is opened if possible. If &lt;em&gt;new&lt;/em&gt; is 2, a new browser page (&amp;ldquo;tab&amp;rdquo;) is opened if possible. If &lt;em&gt;autoraise&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the window is raised if possible (note that under many window managers this will occur regardless of the setting of this variable).</source>
          <target state="translated">기본 브라우저를 사용하여 &lt;em&gt;URL&lt;/em&gt; 을 표시 하십시오. 경우 &lt;em&gt;새가&lt;/em&gt; 0의 &lt;em&gt;URL은&lt;/em&gt; 동일한 브라우저 창 가능한 경우에 열립니다. 경우 &lt;em&gt;새가&lt;/em&gt; 1 가능하면 새 브라우저 창이 열립니다. 경우 &lt;em&gt;새가&lt;/em&gt; 2, 새 브라우저 페이지입니다 가능하면 ( &quot;탭&quot;)가 열립니다. 경우 &lt;em&gt;autoraise가&lt;/em&gt; 있다 &lt;code&gt;True&lt;/code&gt; 가능 (주 많은 윈도우 매니저에 따라 본에 관계없이이 변수의 설정에 발생하는 것)하면, 윈도우가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="13017eda9a7646a38f56cc4d72d63ed546778ff6" translate="yes" xml:space="preserve">
          <source>Display a horizontal line starting at &lt;code&gt;(y, x)&lt;/code&gt; with length &lt;em&gt;n&lt;/em&gt; consisting of the character &lt;em&gt;ch&lt;/em&gt;.</source>
          <target state="translated">시작 수평선 표시 &lt;code&gt;(y, x)&lt;/code&gt; 길이가 &lt;em&gt;N 개의&lt;/em&gt; 문자로 이루어진 &lt;em&gt;CH&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f19f71996c2d490fdfdeff600e4250507ae38bb5" translate="yes" xml:space="preserve">
          <source>Display a vertical line starting at &lt;code&gt;(y, x)&lt;/code&gt; with length &lt;em&gt;n&lt;/em&gt; consisting of the character &lt;em&gt;ch&lt;/em&gt;.</source>
          <target state="translated">시작 수직선을 표시 &lt;code&gt;(y, x)&lt;/code&gt; 길이가 &lt;em&gt;N 개의&lt;/em&gt; 문자로 이루어진 &lt;em&gt;CH&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9d7e7727e3e3cb853031d8d0c1277467f8459b" translate="yes" xml:space="preserve">
          <source>Display debug information about compiled expression. No corresponding inline flag.</source>
          <target state="translated">컴파일 된 식에 대한 디버그 정보를 표시합니다. 해당 인라인 플래그가 없습니다.</target>
        </trans-unit>
        <trans-unit id="8920c6735bdd22367a16ff3e75e24ff01a275d3d" translate="yes" xml:space="preserve">
          <source>Display lines as they are executed.</source>
          <target state="translated">행이 실행될 때 표시합니다.</target>
        </trans-unit>
        <trans-unit id="353e5399b87fe59bf1c77b7f579f0adff69b179d" translate="yes" xml:space="preserve">
          <source>Display the 10 files allocating the most memory:</source>
          <target state="translated">가장 많은 메모리를 할당하는 10 개의 파일을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="dfddf83d4b9349eea3d92aca890036f08ba476c1" translate="yes" xml:space="preserve">
          <source>Display the calling relationships exposed by running the program.</source>
          <target state="translated">프로그램을 실행하여 노출 된 호출 관계를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="acc7bc5de5e0e49fb62bcc6a7ffe55ed19638aef" translate="yes" xml:space="preserve">
          <source>Display the current date with call_later()</source>
          <target state="translated">call_later ()로 현재 날짜 표시</target>
        </trans-unit>
        <trans-unit id="27969bc4b7ef1252a2b1e1a3c667ae4c6936e686" translate="yes" xml:space="preserve">
          <source>Display the exception that just occurred. We remove the first stack item because it is within the interpreter object implementation. The output is written by the &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">방금 발생한 예외를 표시하십시오. 첫 번째 스택 항목은 인터프리터 객체 구현 내에 있기 때문에 제거합니다. 출력은 &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt; 메소드로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="707e41d17abca028a5e98cfa1758e30bd472c734" translate="yes" xml:space="preserve">
          <source>Display the functions executed by running the program.</source>
          <target state="translated">프로그램을 실행하여 실행 된 기능을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7c2f45b5531b60dc5a7d302f261bf0a21953134d" translate="yes" xml:space="preserve">
          <source>Display the interpreter embedded in the archive, for diagnostic purposes. In this case, any other options are ignored and SOURCE must be an archive, not a directory.</source>
          <target state="translated">진단 목적으로 아카이브에 임베드 된 인터프리터를 표시하십시오. 이 경우 다른 옵션은 무시되고 SOURCE는 디렉토리가 아닌 아카이브 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f51b781010d52173391d7f7c2cabf79ba6b00c3a" translate="yes" xml:space="preserve">
          <source>Display the panel (which might have been hidden).</source>
          <target state="translated">숨겨 졌을 수도있는 패널을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="80b34d14136938fe6e2823bb4036030f94af3ed5" translate="yes" xml:space="preserve">
          <source>Display the syntax error that just occurred. This does not display a stack trace because there isn&amp;rsquo;t one for syntax errors. If &lt;em&gt;filename&lt;/em&gt; is given, it is stuffed into the exception instead of the default filename provided by Python&amp;rsquo;s parser, because it always uses &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; when reading from a string. The output is written by the &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">방금 발생한 구문 오류를 표시하십시오. 구문 오류가 없기 때문에 스택 추적이 표시되지 않습니다. 경우 &lt;em&gt;파일 이름이&lt;/em&gt; 주어 항상 사용하기 때문에, 그것은 예외 대신 파이썬의 구문 분석기에서 제공하는 기본 파일 이름에 박제되어 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; 문자열에서 읽을 때. 출력은 &lt;a href=&quot;#code.InteractiveInterpreter.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt; 메소드로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="67b271d8095bfb0281d7cadf4bee170b8076a98c" translate="yes" xml:space="preserve">
          <source>Display the top 10</source>
          <target state="translated">상위 10 개 표시</target>
        </trans-unit>
        <trans-unit id="24ba3c37ed6f52b28171c9f6d98aed2e8d196536" translate="yes" xml:space="preserve">
          <source>Display the value of the expression if it changed, each time execution stops in the current frame.</source>
          <target state="translated">현재 프레임에서 실행이 중지 될 때마다 표현식의 값이 변경되면이를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1c38724023d1d974b88c593a9b7e180d2e599d65" translate="yes" xml:space="preserve">
          <source>Display the version of the module and exit.</source>
          <target state="translated">모듈의 버전을 표시하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="029e04b31534b7edac240599c5b991dcaf5bba7e" translate="yes" xml:space="preserve">
          <source>Display this IDLE document, detailing the menu options, basic editing and navigation, and other tips.</source>
          <target state="translated">메뉴 옵션, 기본 편집 및 탐색 및 기타 팁을 자세히 설명하는이 유휴 문서를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="b10a75882873e7163ae8a8a02e0a51df096ef953" translate="yes" xml:space="preserve">
          <source>Display usage and exit.</source>
          <target state="translated">사용법을 표시하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="a4bd2df6e17ff0f0517f62a68c5aa517f24226b3" translate="yes" xml:space="preserve">
          <source>Display version, copyright, license, credits, and more.</source>
          <target state="translated">버전, 저작권, 라이센스, 크레딧 등을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="009ce48f7048f7e5f0cb064ebec8077d5c89382e" translate="yes" xml:space="preserve">
          <source>Disposition</source>
          <target state="translated">Disposition</target>
        </trans-unit>
        <trans-unit id="20b69002d2c6e520b927b3a43dea0de43d58c5f7" translate="yes" xml:space="preserve">
          <source>Distinct argument patterns may be considered to be distinct calls with separate cache entries. For example, &lt;code&gt;f(a=1, b=2)&lt;/code&gt; and &lt;code&gt;f(b=2, a=1)&lt;/code&gt; differ in their keyword argument order and may have two separate cache entries.</source>
          <target state="translated">별개의 인수 패턴은 별도의 캐시 항목이있는 별개의 호출로 간주 될 수 있습니다. 예를 들어, &lt;code&gt;f(a=1, b=2)&lt;/code&gt; 및 &lt;code&gt;f(b=2, a=1)&lt;/code&gt; 는 키워드 인수 순서가 다르며 두 개의 별도 캐시 항목이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cd1c8a78ee9c2a7323dae344547c6d55dc3fb14" translate="yes" xml:space="preserve">
          <source>Distinct from both single use and reentrant context managers are &amp;ldquo;reusable&amp;rdquo; context managers (or, to be completely explicit, &amp;ldquo;reusable, but not reentrant&amp;rdquo; context managers, since reentrant context managers are also reusable). These context managers support being used multiple times, but will fail (or otherwise not work correctly) if the specific context manager instance has already been used in a containing with statement.</source>
          <target state="translated">단일 사용 및 재진입 컨텍스트 관리자와 구별되는 &quot;재사용 가능한&quot;컨텍스트 관리자입니다 (또는 재진입 컨텍스트 관리자도 재사용 가능하므로 완전히 명시 적이거나 &quot;재사용 가능하지만 재진입 할 ​​수 없음&quot;) 컨텍스트 관리자입니다. 이러한 컨텍스트 관리자는 여러 번 사용되는 것을 지원하지만 특정 컨텍스트 관리자 인스턴스가 포함 with 문에 이미 사용 된 경우 실패합니다 (또는 올바르게 작동하지 않음).</target>
        </trans-unit>
        <trans-unit id="85af23b5424dad3c493f2e8d5a5b573cc731a8e3" translate="yes" xml:space="preserve">
          <source>Distinguishing test iterations using subtests</source>
          <target state="translated">하위 테스트를 사용하여 테스트 반복 구별</target>
        </trans-unit>
        <trans-unit id="788e31b37b8efd934ca4ce597a5260242da6c678" translate="yes" xml:space="preserve">
          <source>Distributing Python Modules (Legacy version)</source>
          <target state="translated">파이썬 모듈 배포 (레거시 버전)</target>
        </trans-unit>
        <trans-unit id="46be8efcce69378124f44728d91708a8597915f8" translate="yes" xml:space="preserve">
          <source>Distribution files</source>
          <target state="translated">배포 파일</target>
        </trans-unit>
        <trans-unit id="218a336f7d3c8849777d9ee8add3bbed03333de2" translate="yes" xml:space="preserve">
          <source>Distribution metadata</source>
          <target state="translated">배포 메타 데이터</target>
        </trans-unit>
        <trans-unit id="20a0cd11e022f816090238286fd14f8d2b546e87" translate="yes" xml:space="preserve">
          <source>Distribution requirements</source>
          <target state="translated">배포 요구 사항</target>
        </trans-unit>
        <trans-unit id="6d9fbc32b4eaa47c3d3e3e0f4259a92de14156ef" translate="yes" xml:space="preserve">
          <source>Distribution versions</source>
          <target state="translated">배포판</target>
        </trans-unit>
        <trans-unit id="71fff5ea85661c16e7519843bc17a41ff8e91eb9" translate="yes" xml:space="preserve">
          <source>Distributions</source>
          <target state="translated">Distributions</target>
        </trans-unit>
        <trans-unit id="dba5f7b801f7c7025e3dabcd3d37753760f4dbe1" translate="yes" xml:space="preserve">
          <source>Divide &lt;em&gt;data&lt;/em&gt; into &lt;em&gt;n&lt;/em&gt; continuous intervals with equal probability. Returns a list of &lt;code&gt;n - 1&lt;/code&gt; cut points separating the intervals.</source>
          <target state="translated">분할 &lt;em&gt;데이터&lt;/em&gt; 로 &lt;em&gt;N&lt;/em&gt; 동일한 확률 연속 구간. 구간을 분리하는 &lt;code&gt;n - 1&lt;/code&gt; 절단 점 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="aa3e27e86228c726c3ef08f35de01264e76d72a0" translate="yes" xml:space="preserve">
          <source>Divide data into intervals with equal probability.</source>
          <target state="translated">확률이 같은 구간으로 데이터를 나눕니다.</target>
        </trans-unit>
        <trans-unit id="7a294dbc43830d66cf929c8c8b3998bdb4327fb6" translate="yes" xml:space="preserve">
          <source>Divide the given string into examples and intervening text, and return them as a list of alternating &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s and strings. Line numbers for the &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt;s are 0-based. The optional argument &lt;em&gt;name&lt;/em&gt; is a name identifying this string, and is only used for error messages.</source>
          <target state="translated">주어진 문자열을 예제와 중간 텍스트로 나누고 대체 &lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; 및 문자열 목록으로 반환하십시오. &lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; 의 줄 번호 는 0부터 시작합니다. 선택적 인수 &lt;em&gt;이름&lt;/em&gt; 은이 문자열을 식별하는 이름이며 오류 메시지에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="287a88fed9b5807828cdc14c0e4c5235f42ad073" translate="yes" xml:space="preserve">
          <source>Divide the normal distribution into &lt;em&gt;n&lt;/em&gt; continuous intervals with equal probability. Returns a list of (n - 1) cut points separating the intervals.</source>
          <target state="translated">정규 분포를 동일한 확률 로 &lt;em&gt;n 개의&lt;/em&gt; 연속 간격으로 나눕니다 . 간격을 구분하는 (n-1) 절단 점 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6572353bc2d41f71740a90e1de08f6ac079aa71c" translate="yes" xml:space="preserve">
          <source>Divides two numbers and returns the integer part of the result.</source>
          <target state="translated">두 숫자를 나누고 결과의 정수 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30d936ef2bdc1ec9706ee5f744c29609c9ac3aa5" translate="yes" xml:space="preserve">
          <source>Dividing a constant by an instance of &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; is not supported because the result wouldn&amp;rsquo;t be normally distributed.</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt; 인스턴스로 상수를 나누는 것은 결과가 정상적으로 분배되지 않기 때문에 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bbbec44416269797757a1579d0b1247911acd066" translate="yes" xml:space="preserve">
          <source>Division</source>
          <target state="translated">Division</target>
        </trans-unit>
        <trans-unit id="e5eb20e5c067ea0c34b9ac912ec95b871121e9ea" translate="yes" xml:space="preserve">
          <source>Division (3) of overall duration &lt;em&gt;t2&lt;/em&gt; by interval unit &lt;em&gt;t3&lt;/em&gt;. Returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">전체 지속 시간 &lt;em&gt;t2의&lt;/em&gt; 구간 ( &lt;em&gt;t3)에&lt;/em&gt; 의한 구간 (3) . &lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="bdbac7241c2f36b2d99a0ed0c6cd33d0082be63f" translate="yes" xml:space="preserve">
          <source>Division by 0 raises &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">0으로 &lt;a href=&quot;exceptions#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1cb1f784122a51e930d4116beaebb03612ed0f90" translate="yes" xml:space="preserve">
          <source>Django&amp;rsquo;s &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/context.py&quot;&gt;Context class&lt;/a&gt; for templating is a read-only chain of mappings. It also features pushing and popping of contexts similar to the &lt;a href=&quot;#collections.ChainMap.new_child&quot;&gt;&lt;code&gt;new_child()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#collections.ChainMap.parents&quot;&gt;&lt;code&gt;parents&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">템플릿 화를위한 Django의 &lt;a href=&quot;https://github.com/django/django/blob/master/django/template/context.py&quot;&gt;Context 클래스&lt;/a&gt; 는 읽기 전용 매핑 체인입니다. 또한 &lt;a href=&quot;#collections.ChainMap.new_child&quot;&gt; &lt;code&gt;new_child()&lt;/code&gt; &lt;/a&gt; 메소드 및 &lt;a href=&quot;#collections.ChainMap.parents&quot;&gt; &lt;code&gt;parents&lt;/code&gt; &lt;/a&gt; 속성 과 유사한 컨텍스트를 푸시하고 터지는 기능이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eeb591199802a69e904d88d2106b2d31bf4d9722" translate="yes" xml:space="preserve">
          <source>Do &lt;a href=&quot;#check-module&quot;&gt;Check Module&lt;/a&gt;. If no error, restart the shell to clean the environment, then execute the module. Output is displayed in the Shell window. Note that output requires use of &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt;. When execution is complete, the Shell retains focus and displays a prompt. At this point, one may interactively explore the result of execution. This is similar to executing a file with &lt;code&gt;python -i file&lt;/code&gt; at a command line.</source>
          <target state="translated">마 &lt;a href=&quot;#check-module&quot;&gt;모듈을 확인합니다&lt;/a&gt; . 오류가 없으면 셸을 다시 시작하여 환경을 청소 한 다음 모듈을 실행하십시오. Shell 창에 출력이 표시됩니다. 출력에는 &lt;code&gt;print&lt;/code&gt; 또는 &lt;code&gt;write&lt;/code&gt; 를 사용해야합니다 . 실행이 완료되면 Shell은 포커스를 유지하고 프롬프트를 표시합니다. 이 시점에서 실행 결과를 대화식으로 탐색 할 수 있습니다. 이것은 명령 행에서 &lt;code&gt;python -i file&lt;/code&gt; 을 사용하여 파일을 실행하는 것과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="cd9e4d30f8cc723de4d149fa329ee8f8a98dc4bd" translate="yes" xml:space="preserve">
          <source>Do a plural-forms lookup of a message id. &lt;em&gt;singular&lt;/em&gt; is used as the message id for purposes of lookup in the catalog, while &lt;em&gt;n&lt;/em&gt; is used to determine which plural form to use.</source>
          <target state="translated">메시지 ID의 복수 양식 조회를 수행하십시오. &lt;em&gt;singular&lt;/em&gt; 는 카탈로그에서 조회를 위해 메시지 ID로 사용되는 반면 &lt;em&gt;n&lt;/em&gt; 은 사용할 복수형을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="68cd8fd719e9ac463c601d1f4195c63b4fd3351c" translate="yes" xml:space="preserve">
          <source>Do a plural-forms lookup of a message id. &lt;em&gt;singular&lt;/em&gt; is used as the message id for purposes of lookup in the catalog, while &lt;em&gt;n&lt;/em&gt; is used to determine which plural form to use. The returned message string is a Unicode string.</source>
          <target state="translated">메시지 ID의 복수 양식 조회를 수행하십시오. &lt;em&gt;singular&lt;/em&gt; 는 카탈로그에서 조회를 위해 메시지 ID로 사용되는 반면 &lt;em&gt;n&lt;/em&gt; 은 사용할 복수형을 결정하는 데 사용됩니다. 리턴 된 메시지 문자열은 유니 코드 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e0a441b7398a9f65222c06733df2a4d2e2b02ec5" translate="yes" xml:space="preserve">
          <source>Do formatting for a record - if a formatter is set, use it. Otherwise, use the default formatter for the module.</source>
          <target state="translated">레코드를 포맷하십시오-포맷터가 설정된 경우 사용하십시오. 그렇지 않으면 모듈의 기본 포맷터를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b6589e67d3090bf9b9da4d718362d012c0a32f12" translate="yes" xml:space="preserve">
          <source>Do not display the expression any more in the current frame. Without expression, clear all display expressions for the current frame.</source>
          <target state="translated">현재 프레임에 더 이상 표현식을 표시하지 마십시오. 식이 없으면 현재 프레임의 모든 표시 식을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="06521232fa735574a02ca5b55fa8b562caa16292" translate="yes" xml:space="preserve">
          <source>Do not dump the file.</source>
          <target state="translated">파일을 덤프하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c632735f4b8d924e489d3bafe3a21ea4e348fd93" translate="yes" xml:space="preserve">
          <source>Do not generate annotated listings. This is useful if you intend to make several runs with &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt;, and then produce a single set of annotated listings at the end.</source>
          <target state="translated">주석이 달린 리스팅을 생성하지 마십시오. &lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; 로&lt;/a&gt; 여러 번 실행 한 다음 끝에 주석이 달린 단일 목록을 생성 하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="ccc05b92eed59e4a3f1ef94ac0ab070f30b719be" translate="yes" xml:space="preserve">
          <source>Do not instantiate the class directly.</source>
          <target state="translated">클래스를 직접 인스턴스화하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="50afc3876abe8deb63fcb13bb579ac815ed47f90" translate="yes" xml:space="preserve">
          <source>Do not interrupt sounds currently playing.</source>
          <target state="translated">현재 재생중인 사운드를 중단하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1024b9422648b3adf0f39455ac5cba143511fea3" translate="yes" xml:space="preserve">
          <source>Do not lock database.</source>
          <target state="translated">데이터베이스를 잠그지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4a7c43cbc655e7bcf00394f4473ebe655a06041a" translate="yes" xml:space="preserve">
          <source>Do not print the list of files compiled. If passed once, error messages will still be printed. If passed twice (&lt;code&gt;-qq&lt;/code&gt;), all output is suppressed.</source>
          <target state="translated">컴파일 된 파일 목록을 인쇄하지 마십시오. 한 번 통과해도 오류 메시지가 계속 인쇄됩니다. 두 번 전달하면 ( &lt;code&gt;-qq&lt;/code&gt; ) 모든 출력이 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="5a4af04dfadd635864f1d47051a2f6d2d40a7326" translate="yes" xml:space="preserve">
          <source>Do not recurse into subdirectories, only compile source code files directly contained in the named or implied directories.</source>
          <target state="translated">서브 디렉토리로 재귀하지 말고 이름 지정된 디렉토리 또는 내재 된 디렉토리에 직접 포함 된 소스 코드 파일 만 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="12d94812e86e2c93f2de3c4eb8df6b85de7af955" translate="yes" xml:space="preserve">
          <source>Do not rely on the shelf being closed automatically; always call &lt;a href=&quot;#shelve.Shelf.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; explicitly when you don&amp;rsquo;t need it any more, or use &lt;a href=&quot;#shelve.open&quot;&gt;&lt;code&gt;shelve.open()&lt;/code&gt;&lt;/a&gt; as a context manager:</source>
          <target state="translated">선반이 자동으로 닫히는 것에 의존하지 마십시오. 더 이상 필요하지 않은 경우 항상 &lt;a href=&quot;#shelve.Shelf.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 명시 적으로 호출 하거나 컨텍스트 관리자로 &lt;a href=&quot;#shelve.open&quot;&gt; &lt;code&gt;shelve.open()&lt;/code&gt; &lt;/a&gt; 을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="40de5cf71f2263de0c71c91bd19a81f093c553d5" translate="yes" xml:space="preserve">
          <source>Do not reopen an already connected instance.</source>
          <target state="translated">이미 연결된 인스턴스를 다시 열지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8fe4941def3982e086581837fb544fe5fa8976d7" translate="yes" xml:space="preserve">
          <source>Do not set &lt;a href=&quot;#signal.SIGPIPE&quot;&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s disposition to &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt; in order to avoid &lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt;. Doing that would cause your program to exit unexpectedly also whenever any socket connection is interrupted while your program is still writing to it.</source>
          <target state="translated">&lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt; 를 방지하기 위해 &lt;a href=&quot;#signal.SIGPIPE&quot;&gt; &lt;code&gt;SIGPIPE&lt;/code&gt; &lt;/a&gt; 의 처리를 &lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt; 로 설정하지 마십시오 . 그렇게하면 프로그램이 아직 쓰는 동안 소켓 연결이 중단 될 때마다 프로그램이 예기치 않게 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="5ce5d4dcc66330340d108fe7d87893af7471ed1f" translate="yes" xml:space="preserve">
          <source>Do not set &lt;code&gt;SIGPIPE&lt;/code&gt;&amp;rsquo;s disposition to &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;/a&gt; in order to avoid &lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt;. Doing that would cause your program to exit unexpectedly also whenever any socket connection is interrupted while your program is still writing to it.</source>
          <target state="translated">&lt;a href=&quot;exceptions#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt; 를 피하기 위해 &lt;code&gt;SIGPIPE&lt;/code&gt; 의 배치를 &lt;a href=&quot;#signal.SIG_DFL&quot;&gt; &lt;code&gt;SIG_DFL&lt;/code&gt; &lt;/a&gt; 로 설정하지 마십시오 . 그렇게하면 프로그램이 여전히 쓰이고있는 동안 소켓 연결이 중단 될 때마다 프로그램이 예기치 않게 종료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="393ebdae087b04fef0d03db43359e5113026e598" translate="yes" xml:space="preserve">
          <source>Do not try to reopen an already connected instance.</source>
          <target state="translated">이미 연결된 인스턴스를 다시 열려고하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="cedb87dc9f6380227ee290d839e507e4f318c8f9" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; with this function. The child process will block if it generates enough output to a pipe to fill up the OS pipe buffer as the pipes are not being read from.</source>
          <target state="translated">이 기능과 함께 &lt;code&gt;stdout=PIPE&lt;/code&gt; 또는 &lt;code&gt;stderr=PIPE&lt;/code&gt; 를 사용하지 마십시오 . 파이프를 읽을 때 OS 파이프 버퍼를 채우기 위해 파이프에 충분한 출력을 생성하면 하위 프로세스가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="de65886633d48caad23e43d68744518a68705029" translate="yes" xml:space="preserve">
          <source>Do not use a proxy object from more than one thread unless you protect it with a lock.</source>
          <target state="translated">잠금으로 보호하지 않는 한 둘 이상의 스레드에서 프록시 오브젝트를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6560f226fca8db32a9c82c605563fe8e8a89e12d" translate="yes" xml:space="preserve">
          <source>Do not wait for data which is not immediately available. If this flag is specified, the system call will return instantly if it would have to read data from the backing storage or wait for a lock.</source>
          <target state="translated">즉시 사용할 수없는 데이터를 기다리지 마십시오. 이 플래그를 지정하면 백업 스토리지에서 데이터를 읽거나 잠금을 기다려야 할 경우 시스템 호출이 즉시 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c0132ab944eec806896591b4dcefc5c8c94b4538" translate="yes" xml:space="preserve">
          <source>Do nothing by default. This exists so a subclass can override it.</source>
          <target state="translated">기본적으로 아무것도하지 마십시오. 서브 클래스가이를 대체 할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1cf886c54793b70e8941f7ee56688e9c0987e9a4" translate="yes" xml:space="preserve">
          <source>Do nothing code. Used as a placeholder by the bytecode optimizer.</source>
          <target state="translated">코드를 작성하지 마십시오. 바이트 코드 최적화 프로그램에서 자리 표시 자로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b79381b5e4abbab070d893c170cf6863d7f68d8f" translate="yes" xml:space="preserve">
          <source>Do nothing if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is not tracing memory allocations.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt; 모듈이 메모리 할당을 추적 하지 않는 경우 아무 작업도 수행하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="265c757a06e5de848a47f036dfceb6ab1cf300cc" translate="yes" xml:space="preserve">
          <source>Do nothing if the process completed.</source>
          <target state="translated">프로세스가 완료되면 아무것도하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="63a53b3c148512836e10b471262a7b6c2e6d6ef8" translate="yes" xml:space="preserve">
          <source>Do nothing. Might be used as a keep-alive.</source>
          <target state="translated">아무것도하지 마세요. 연결 유지로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c873b0f21139faab33c49c07e735493d868a9f61" translate="yes" xml:space="preserve">
          <source>Do whatever it takes to actually log the specified logging record. This version is intended to be implemented by subclasses and so raises a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 로깅 레코드를 실제로 기록하는 데 필요한 모든 작업을 수행하십시오. 이 버전은 서브 클래스에 의해 구현되도록 만들어 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="82a1c2e28fd0eb3132bb7ba77b16bc64702f8182" translate="yes" xml:space="preserve">
          <source>DocCGIXMLRPCRequestHandler</source>
          <target state="translated">DocCGIXMLRPCRequestHandler</target>
        </trans-unit>
        <trans-unit id="1ca5aa6039469fe8728dd326bd8c3cb563edc91d" translate="yes" xml:space="preserve">
          <source>DocTest Objects</source>
          <target state="translated">DocTest 객체</target>
        </trans-unit>
        <trans-unit id="73f9464603c21d6597be356ca9db0699a606c183" translate="yes" xml:space="preserve">
          <source>DocTestFinder objects</source>
          <target state="translated">DocTestFinder 객체</target>
        </trans-unit>
        <trans-unit id="f929c1001ce7dc1e5d6017ef4471a48cd0c00655" translate="yes" xml:space="preserve">
          <source>DocTestParser objects</source>
          <target state="translated">DocTestParser 객체</target>
        </trans-unit>
        <trans-unit id="b644827da6680ffaf980ed80a6f83fb238489881" translate="yes" xml:space="preserve">
          <source>DocTestRunner objects</source>
          <target state="translated">DocTestRunner 객체</target>
        </trans-unit>
        <trans-unit id="dbd1b3059dc7d5c324f4210557c75552c0f77590" translate="yes" xml:space="preserve">
          <source>DocXMLRPCServer Objects</source>
          <target state="translated">DocXMLRPCServer 객체</target>
        </trans-unit>
        <trans-unit id="385ac7c1acbac24f9d3c3a76215d29ce43eca20f" translate="yes" xml:space="preserve">
          <source>Docstrings can be customized by making direct assignments to the &lt;code&gt;__doc__&lt;/code&gt; fields:</source>
          <target state="translated">&lt;code&gt;__doc__&lt;/code&gt; 필드에 직접 할당하여 문서 문자열을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3efe7d550d55032ef1a594fe010efc79ad889696" translate="yes" xml:space="preserve">
          <source>Doctest also makes an excellent tool for regression testing, especially if you don&amp;rsquo;t skimp on explanatory text. By interleaving prose and examples, it becomes much easier to keep track of what&amp;rsquo;s actually being tested, and why. When a test fails, good prose can make it much easier to figure out what the problem is, and how it should be fixed. It&amp;rsquo;s true that you could write extensive comments in code-based testing, but few programmers do. Many have found that using doctest approaches instead leads to much clearer tests. Perhaps this is simply because doctest makes writing prose a little easier than writing code, while writing comments in code is a little harder. I think it goes deeper than just that: the natural attitude when writing a doctest-based test is that you want to explain the fine points of your software, and illustrate them with examples. This in turn naturally leads to test files that start with the simplest features, and logically progress to complications and edge cases. A coherent narrative is the result, instead of a collection of isolated functions that test isolated bits of functionality seemingly at random. It&amp;rsquo;s a different attitude, and produces different results, blurring the distinction between testing and explaining.</source>
          <target state="translated">Doctest는 특히 설명 텍스트를 사용하지 않는 경우 회귀 테스트를위한 훌륭한 도구를 만듭니다. 산문과 예제를 인터리빙하면 실제로 테스트 대상과 이유를 추적하기가 훨씬 쉬워집니다. 테스트가 실패하면 좋은 산문을 통해 문제가 무엇인지, 문제를 해결하는 방법을 훨씬 쉽게 파악할 수 있습니다. 코드 기반 테스트에서 광범위한 주석을 작성할 수는 있지만 프로그래머는 거의 없습니다. 많은 사람들이 doctest 접근법을 사용하는 것이 훨씬 더 명확한 테스트로 이어진다는 것을 발견했습니다. 아마도 이것은 doctest가 코드를 작성하는 것보다 산문을 작성하는 것이 조금 더 쉬운 반면 코드에 주석을 작성하는 것이 조금 더 어렵 기 때문일 수 있습니다. doctest 기반 테스트를 작성할 때의 자연스러운 태도는 소프트웨어의 장점을 설명하고 예제를 통해 설명하고자한다는 것입니다.이것은 자연스럽게 가장 간단한 기능으로 시작하는 테스트 파일로 이어지고 논리적으로 복잡한 문제로 진행됩니다. 일관된 내러티브는 기능적으로 고립 된 비트를 무작위로 테스트하는 고립 된 함수 모음 대신 결과입니다. 그것은 다른 태도이고 다른 결과를 만들어 내고 테스트와 설명의 구별을 흐리게합니다.</target>
        </trans-unit>
        <trans-unit id="fcbd85d55b4ae1c1b68c5c4968f941e910f8f6eb" translate="yes" xml:space="preserve">
          <source>Doctest can&amp;rsquo;t guess whether your expected output came from an exception traceback or from ordinary printing. So, e.g., an example that expects &lt;code&gt;ValueError: 42 is prime&lt;/code&gt; will pass whether &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is actually raised or if the example merely prints that traceback text. In practice, ordinary output rarely begins with a traceback header line, so this doesn&amp;rsquo;t create real problems.</source>
          <target state="translated">Doctest는 예상 출력이 예외 추적 또는 일반 인쇄에서 나온 것인지 추측 할 수 없습니다. 따라서 예를 들어 &lt;code&gt;ValueError: 42 is prime&lt;/code&gt; 것으로 예상되는 예제는 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 실제로 발생 하는지 또는 예제가 단순히 해당 추적 텍스트를 인쇄 하는지 여부를 전달합니다 . 실제로 일반 출력은 거의 역 추적 헤더 행으로 시작하지 않으므로 실제 문제는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6535db5edc84e2b27c0941ee6ab8317ae646202" translate="yes" xml:space="preserve">
          <source>Doctest directives may be used to modify the &lt;a href=&quot;#doctest-options&quot;&gt;option flags&lt;/a&gt; for an individual example. Doctest directives are special Python comments following an example&amp;rsquo;s source code:</source>
          <target state="translated">Doctest 지시문을 사용 하여 개별 예제에 대한 &lt;a href=&quot;#doctest-options&quot;&gt;옵션 플래그&lt;/a&gt; 를 수정할 수 있습니다 . Doctest 지시문은 예제 소스 코드 다음에 나오는 특수한 Python 주석입니다.</target>
        </trans-unit>
        <trans-unit id="6b26d4e14358a0d63bbcd8212793958f73f96735" translate="yes" xml:space="preserve">
          <source>Doctest provides several mechanisms for debugging doctest examples:</source>
          <target state="translated">Doctest는 doctest 예제를 디버깅하기위한 몇 가지 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e740d41cc733e38d4a21312172b56d6ea8e3a666" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 1 Specification</source>
          <target state="translated">DOM (Document Object Model) 레벨 1 사양</target>
        </trans-unit>
        <trans-unit id="6be2ce90f6e0398537ee671de98726b9a59795a4" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 2 Specification</source>
          <target state="translated">DOM (Document Object Model) 레벨 2 사양</target>
        </trans-unit>
        <trans-unit id="9a3a1b08117152fba18c532a4c06ba131ed34f12" translate="yes" xml:space="preserve">
          <source>Document Objects</source>
          <target state="translated">문서 객체</target>
        </trans-unit>
        <trans-unit id="b99accd9e73ee9bb14ab8b72d9ac2c0cbbe19ce9" translate="yes" xml:space="preserve">
          <source>Document describing the generic syntactic requirements for both Uniform Resource Names (URNs) and Uniform Resource Locators (URLs).</source>
          <target state="translated">URN (Uniform Resource Names) 및 URL (Uniform Resource Locator)에 대한 일반적인 구문 요구 사항을 설명하는 문서</target>
        </trans-unit>
        <trans-unit id="56aec556555fb59a8820b30b25469c6d976fb748" translate="yes" xml:space="preserve">
          <source>DocumentType Objects</source>
          <target state="translated">DocumentType 객체</target>
        </trans-unit>
        <trans-unit id="71330a4d4ce5df6d4a272f28923ca430bad572ac" translate="yes" xml:space="preserve">
          <source>Documentation for tar archive files, including GNU tar extensions.</source>
          <target state="translated">GNU tar 확장자를 포함한 tar 아카이브 파일에 대한 설명서.</target>
        </trans-unit>
        <trans-unit id="7bbda680f665e0833e2d6c4158a5e8679b7f993a" translate="yes" xml:space="preserve">
          <source>Documentation of the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; standard module.</source>
          <target state="translated">&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt; 표준 모듈의 설명서</target>
        </trans-unit>
        <trans-unit id="c48574c7a3ee1deed4dd1acbed50852343aee3ba" translate="yes" xml:space="preserve">
          <source>Documentation of the higher-level archiving facilities provided by the standard &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">표준 &lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt; 모듈이 제공하는 상위 레벨 아카이빙 기능에 대한 문서 .</target>
        </trans-unit>
        <trans-unit id="35469c2ea1370f03c82a5166accde7c0b88be3ab" translate="yes" xml:space="preserve">
          <source>Documentation of underlying &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">기본 &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 클래스의 문서</target>
        </trans-unit>
        <trans-unit id="54469b6bd39b705e43b8962025cf5f918051f4d6" translate="yes" xml:space="preserve">
          <source>Documentation on the ZIP file format by Phil Katz, the creator of the format and algorithms used.</source>
          <target state="translated">사용 된 형식 및 알고리즘의 작성자 인 Phil Katz의 ZIP 파일 형식에 대한 문서.</target>
        </trans-unit>
        <trans-unit id="dfc3f775cf5605ee404503333f0469b1ec2c9db4" translate="yes" xml:space="preserve">
          <source>Documenting XMLRPC server</source>
          <target state="translated">XMLRPC 서버 문서화</target>
        </trans-unit>
        <trans-unit id="7f4e3c304116baf5bc099500ff7f0ff374185591" translate="yes" xml:space="preserve">
          <source>Documents describing the protocol, and sources and binaries for servers implementing it, can all be found at the University of Washington&amp;rsquo;s &lt;em&gt;IMAP Information Center&lt;/em&gt; (&lt;a href=&quot;https://www.washington.edu/imap/&quot;&gt;https://www.washington.edu/imap/&lt;/a&gt;).</source>
          <target state="translated">프로토콜을 설명하는 문서와이를 구현하는 서버의 소스 및 바이너리는 모두 워싱턴 대학의 &lt;em&gt;IMAP 정보 센터&lt;/em&gt; ( &lt;a href=&quot;https://www.washington.edu/imap/&quot;&gt;https://www.washington.edu/imap/&lt;/a&gt; ) 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96ac8cee958aa67c5f7fedc6c1005eaeb9fbedf6" translate="yes" xml:space="preserve">
          <source>Does a rollover, as described above.</source>
          <target state="translated">위에서 설명한대로 롤오버를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="7a8626e81074581005f4c901e9c1a54a5825b177" translate="yes" xml:space="preserve">
          <source>Does basic configuration for the logging system by creating a &lt;a href=&quot;logging.handlers#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt; with a default &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; and adding it to the root logger. The functions &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.warning&quot;&gt;&lt;code&gt;warning()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.error&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.critical&quot;&gt;&lt;code&gt;critical()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt; automatically if no handlers are defined for the root logger.</source>
          <target state="translated">기본 &lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;a href=&quot;logging.handlers#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt; 를 만들고 루트 로거에 추가 하여 로깅 시스템의 기본 구성을 수행합니다 . 함수의 &lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#logging.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#logging.warning&quot;&gt; &lt;code&gt;warning()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#logging.error&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#logging.critical&quot;&gt; &lt;code&gt;critical()&lt;/code&gt; &lt;/a&gt; 를 호출합니다 &lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; &lt;/a&gt; 어떤 핸들러가 루트 로거에 대해 정의되지 않은 경우 자동으로.</target>
        </trans-unit>
        <trans-unit id="ad0846e643d2a7724261b5a5d3f96eaae8b761fa" translate="yes" xml:space="preserve">
          <source>DomainFilter</source>
          <target state="translated">DomainFilter</target>
        </trans-unit>
        <trans-unit id="de01c31d5c21fe5caa3232783ced4d1c02a6b27a" translate="yes" xml:space="preserve">
          <source>Domains in block or allow lists that do not start with a dot must equal the cookie domain to be matched. For example, &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; matches a blacklist entry of &lt;code&gt;&quot;example.com&quot;&lt;/code&gt;, but &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; does not. Domains that do start with a dot are matched by more specific domains too. For example, both &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; and &lt;code&gt;&quot;www.coyote.example.com&quot;&lt;/code&gt; match &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; (but &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; itself does not). IP addresses are an exception, and must match exactly. For example, if blocked_domains contains &lt;code&gt;&quot;192.168.1.2&quot;&lt;/code&gt; and &lt;code&gt;&quot;.168.1.2&quot;&lt;/code&gt;, 192.168.1.2 is blocked, but 193.168.1.2 is not.</source>
          <target state="translated">점으로 시작하지 않는 차단 또는 허용 목록의 도메인은 쿠키 도메인과 일치해야합니다. 예를 들어, &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 블랙리스트 항목과 일치 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 하지만, &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 하지 않습니다. 점으로 시작하는 도메인은 더 구체적인 도메인과도 일치합니다. 예를 들어 &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 과 &lt;code&gt;&quot;www.coyote.example.com&quot;&lt;/code&gt; 은 &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; 과 일치 하지만 &lt;code&gt;&quot;example.com&quot;&lt;/code&gt; 자체는 일치 하지 않습니다. IP 주소는 예외이며 정확히 일치해야합니다. 예를 들어, blocked_domains 경우 포함 &lt;code&gt;&quot;192.168.1.2&quot;&lt;/code&gt; 와 &lt;code&gt;&quot;.168.1.2&quot;&lt;/code&gt; 192.168.1.2가그러나 193.168.1.2는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cf96a1e7a8abc2d716d1f2663d364ef25b9418d7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t add &lt;em&gt;Cookie2&lt;/em&gt; header to requests (the presence of this header indicates to the server that we understand &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies).</source>
          <target state="translated">요청 에 &lt;em&gt;Cookie2&lt;/em&gt; 헤더를 추가하지 마십시오 (이 헤더가 있으면 서버에 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2965를&lt;/strong&gt;&lt;/a&gt; 이해하고 있음을 나타냅니다)&lt;strong&gt;&lt;/strong&gt; 쿠키를 ).</target>
        </trans-unit>
        <trans-unit id="55793ccb24e71c744183363c60eb5bcab00036d0" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow setting cookies whose path doesn&amp;rsquo;t path-match request URI.</source>
          <target state="translated">경로가 요청 URI와 경로 일치하지 않는 쿠키 설정은 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0646536920e21baacc70a4a35d41604e456fa60e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow sites to set two-component domains with country-code top-level domains like &lt;code&gt;.co.uk&lt;/code&gt;, &lt;code&gt;.gov.uk&lt;/code&gt;, &lt;code&gt;.co.nz&lt;/code&gt;.etc. This is far from perfect and isn&amp;rsquo;t guaranteed to work!</source>
          <target state="translated">사이트에서 &lt;code&gt;.co.uk&lt;/code&gt; , &lt;code&gt;.gov.uk&lt;/code&gt; 와 같은 국가 코드 최상위 도메인으로 2 개의 구성 요소 도메인을 설정할 수 없도록합니다 . &lt;code&gt;.co.nz&lt;/code&gt; 등의 . 이것은 완벽하지 않으며 작동하지 않을 수도 있습니다!</target>
        </trans-unit>
        <trans-unit id="9a8ed9cba02c1b5af492322ff1a5bd489834f04f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t confuse this with the &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">이것을 &lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt; 과 혼동하지 마십시오 모듈</target>
        </trans-unit>
        <trans-unit id="4b9dd891921e1fac8c1f37c42d9157badf88fc9e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t parse type comments.</source>
          <target state="translated">유형 주석을 구문 분석하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="d7fbf8a3496384473277777e85aca46d6bd68611" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to give a CGI script a set-uid mode. This doesn&amp;rsquo;t work on most systems, and is a security liability as well.</source>
          <target state="translated">CGI 스크립트에 set-uid 모드를 제공하려고하지 마십시오. 이것은 대부분의 시스템에서 작동하지 않으며 보안 책임이기도합니다.</target>
        </trans-unit>
        <trans-unit id="73e352bc7716a4ca88225ac742e68f01e718e026" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the &lt;a href=&quot;#ast.NodeVisitor&quot;&gt;&lt;code&gt;NodeVisitor&lt;/code&gt;&lt;/a&gt; if you want to apply changes to nodes during traversal. For this a special visitor exists (&lt;a href=&quot;#ast.NodeTransformer&quot;&gt;&lt;code&gt;NodeTransformer&lt;/code&gt;&lt;/a&gt;) that allows modifications.</source>
          <target state="translated">순회 중에 노드에 변경 사항을 적용 하려면 &lt;a href=&quot;#ast.NodeVisitor&quot;&gt; &lt;code&gt;NodeVisitor&lt;/code&gt; 를&lt;/a&gt; 사용하지 마십시오 . 이를 위해 특별한 방문자가 존재합니다 ( &lt;a href=&quot;#ast.NodeTransformer&quot;&gt; &lt;code&gt;NodeTransformer&lt;/code&gt; &lt;/a&gt; )가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b48b909493b3b77706e420cd1f45faa37cba811" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this module without reading the &lt;a href=&quot;#ssl-security&quot;&gt;Security considerations&lt;/a&gt;. Doing so may lead to a false sense of security, as the default settings of the ssl module are not necessarily appropriate for your application.</source>
          <target state="translated">&lt;a href=&quot;#ssl-security&quot;&gt;보안 고려 사항&lt;/a&gt; 을 읽지 않고이 모듈을 사용하지 마십시오 . SSL 모듈의 기본 설정이 응용 프로그램에 반드시 적합하지는 않으므로 잘못된 보안 감각으로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4dc45aa9e26e2bd41d47c239adc70dd7e4698c6" translate="yes" xml:space="preserve">
          <source>Donald E., Jeffrey I. Schiller</source>
          <target state="translated">Donald E., Jeffrey I. Schiller</target>
        </trans-unit>
        <trans-unit id="7b449ef2828479985e2452fffd29b041ff92dd8c" translate="yes" xml:space="preserve">
          <source>Door.</source>
          <target state="translated">Door.</target>
        </trans-unit>
        <trans-unit id="e18572a00fb194205c79f6b8ffad6831eacd6462" translate="yes" xml:space="preserve">
          <source>Double quotes: &lt;code&gt;&quot;allows embedded 'single' quotes&quot;&lt;/code&gt;.</source>
          <target state="translated">큰 따옴표 : &lt;code&gt;&quot;allows embedded 'single' quotes&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b825c0f075c2ae4499a8ae58525c32123e914501" translate="yes" xml:space="preserve">
          <source>Double quotes: &lt;code&gt;b&quot;still allows embedded 'single' quotes&quot;&lt;/code&gt;.</source>
          <target state="translated">큰 따옴표 : &lt;code&gt;b&quot;still allows embedded 'single' quotes&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf93e5ce8bc1228c2585b3f5a368053c9fe8346a" translate="yes" xml:space="preserve">
          <source>Down</source>
          <target state="translated">Down</target>
        </trans-unit>
        <trans-unit id="9687248b68a4174fe2d16babdd2986cb843c40b2" translate="yes" xml:space="preserve">
          <source>Down-arrow</source>
          <target state="translated">Down-arrow</target>
        </trans-unit>
        <trans-unit id="23d33e22acfcb9ecddb4a85f10607dc4ff49e23c" translate="yes" xml:space="preserve">
          <source>Draft</source>
          <target state="translated">Draft</target>
        </trans-unit>
        <trans-unit id="5313774fc5d54ca1dbac0e699b905bbbba26e8fe" translate="yes" xml:space="preserve">
          <source>Drag-and-drop support for &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;. This is experimental and should become deprecated when it is replaced with the Tk DND.</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; 에&lt;/a&gt; 대한 드래그 앤 드롭 지원 . 이것은 실험적이며 Tk DND로 대체 될 때 사용되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="07f3f9a467149b2dbbe728abdecdbdc76069eb48" translate="yes" xml:space="preserve">
          <source>Draw a border around the edges of the window. Each parameter specifies the character to use for a specific part of the border; see the table below for more details.</source>
          <target state="translated">창의 가장자리 주위에 테두리를 그립니다. 각 매개 변수는 경계의 특정 부분에 사용할 문자를 지정합니다. 자세한 내용은 아래 표를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="07d19779082e62a479ed14856bfdb1ed7f18c5e3" translate="yes" xml:space="preserve">
          <source>Draw a circle with given &lt;em&gt;radius&lt;/em&gt;. The center is &lt;em&gt;radius&lt;/em&gt; units left of the turtle; &lt;em&gt;extent&lt;/em&gt; &amp;ndash; an angle &amp;ndash; determines which part of the circle is drawn. If &lt;em&gt;extent&lt;/em&gt; is not given, draw the entire circle. If &lt;em&gt;extent&lt;/em&gt; is not a full circle, one endpoint of the arc is the current pen position. Draw the arc in counterclockwise direction if &lt;em&gt;radius&lt;/em&gt; is positive, otherwise in clockwise direction. Finally the direction of the turtle is changed by the amount of &lt;em&gt;extent&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;반지름&lt;/em&gt; 으로 원을 그 립니다. 중심은 거북이 왼쪽의 &lt;em&gt;반지름&lt;/em&gt; 단위입니다. &lt;em&gt;범위&lt;/em&gt; &amp;ndash; 각도 &amp;ndash; 원의 어느 부분을 그릴 지 결정합니다. 경우 &lt;em&gt;범위가&lt;/em&gt; 지정되지, 전체 원을 그립니다. &lt;em&gt;범위&lt;/em&gt; 가 완전한 원이 아닌 경우 호의 한 끝 점이 현재 펜 위치입니다. &lt;em&gt;반지름&lt;/em&gt; 이 양수 이면 시계 반대 방향으로 , 그렇지 않으면 시계 방향으로 호를 그립니다 . 마지막으로 거북이의 방향은 &lt;em&gt;정도&lt;/em&gt; 에 따라 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb9f78f1407fa6442fb02c776b4e87b4667a669b" translate="yes" xml:space="preserve">
          <source>Draw a circular dot with diameter &lt;em&gt;size&lt;/em&gt;, using &lt;em&gt;color&lt;/em&gt;. If &lt;em&gt;size&lt;/em&gt; is not given, the maximum of pensize+4 and 2*pensize is used.</source>
          <target state="translated">&lt;em&gt;색상을&lt;/em&gt; 사용하여 지름 &lt;em&gt;크기&lt;/em&gt; 의 원형 점을 그 &lt;em&gt;립니다&lt;/em&gt; . 만약 &lt;em&gt;크기&lt;/em&gt; 주어지지 않는, pensize + 4, 2 * pensize 최대 사용된다.</target>
        </trans-unit>
        <trans-unit id="53d0344e7ff511ab866aef27f35e30da12db6af3" translate="yes" xml:space="preserve">
          <source>Draw a rectangle. The first argument must be a window object; the remaining arguments are coordinates relative to that window. The second and third arguments are the y and x coordinates of the upper left hand corner of the rectangle to be drawn; the fourth and fifth arguments are the y and x coordinates of the lower right hand corner. The rectangle will be drawn using VT100/IBM PC forms characters on terminals that make this possible (including xterm and most other software terminal emulators). Otherwise it will be drawn with ASCII dashes, vertical bars, and plus signs.</source>
          <target state="translated">직사각형을 그립니다. 첫 번째 인수는 윈도우 객체 여야합니다. 나머지 인수는 해당 창을 기준으로 좌표입니다. 두 번째 및 세 번째 인수는 그릴 사각형의 왼쪽 위 모서리의 y 및 x 좌표입니다. 네 번째 및 다섯 번째 인수는 오른쪽 아래 모서리의 y 및 x 좌표입니다. 사각형은이를 가능하게하는 터미널 (xterm 및 대부분의 다른 소프트웨어 터미널 에뮬레이터 포함)에서 VT100 / IBM PC 양식 문자를 사용하여 그려집니다. 그렇지 않으면 ASCII 대시, 세로 막대 및 더하기 기호로 그려집니다.</target>
        </trans-unit>
        <trans-unit id="33e720b1654b934e16ab4a5c3395dff71ee2eab6" translate="yes" xml:space="preserve">
          <source>Drawing state</source>
          <target state="translated">그리기 상태</target>
        </trans-unit>
        <trans-unit id="8908dfbd1a90f7318e04a78c865f51ee77db0103" translate="yes" xml:space="preserve">
          <source>Due to limitations in the &lt;code&gt;Expat&lt;/code&gt; library used by &lt;code&gt;pyexpat&lt;/code&gt;, the &lt;code&gt;xmlparser&lt;/code&gt; instance returned can only be used to parse a single XML document. Call &lt;code&gt;ParserCreate&lt;/code&gt; for each document to provide unique parser instances.</source>
          <target state="translated">&lt;code&gt;pyexpat&lt;/code&gt; 가 사용 하는 &lt;code&gt;Expat&lt;/code&gt; 라이브러리의 제한 사항으로 인해 리턴 된 &lt;code&gt;xmlparser&lt;/code&gt; 인스턴스는 단일 XML 문서를 구문 분석하는 데만 사용할 수 있습니다. Call &lt;code&gt;ParserCreate&lt;/code&gt; 고유 한 파서 인스턴스를 제공하려면 각 문서에 대해 를 .</target>
        </trans-unit>
        <trans-unit id="6241e2cf3a6ba60bd7c9650b006c1caf26b0e295" translate="yes" xml:space="preserve">
          <source>Due to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt;, &lt;code&gt;asyncio.to_thread()&lt;/code&gt; can typically only be used to make IO-bound functions non-blocking. However, for extension modules that release the GIL or alternative Python implementations that don&amp;rsquo;t have one, &lt;code&gt;asyncio.to_thread()&lt;/code&gt; can also be used for CPU-bound functions.</source>
          <target state="translated">때문에에 &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-gil&quot;&gt;GIL&lt;/a&gt; , &lt;code&gt;asyncio.to_thread()&lt;/code&gt; 전형적 IO 바인딩 기능을 비 블로킹을 할 때 사용할 수 있습니다. 그러나 GIL을 릴리스하는 확장 모듈 또는 하나가없는 대체 Python 구현의 경우 &lt;code&gt;asyncio.to_thread()&lt;/code&gt; 도 CPU 바인딩 함수에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c0275bc8b35befce3bfad9a917c9e7ad508f141" translate="yes" xml:space="preserve">
          <source>Due to the chunked encoding specification, empty chunks yielded by an iterator body will be ignored by the chunk-encoder. This is to avoid premature termination of the read of the request by the target server due to malformed encoding.</source>
          <target state="translated">청크 인코딩 사양으로 인해 반복자 본문에서 생성 된 빈 청크는 청크 인코더에서 무시됩니다. 이는 형식이 잘못된 인코딩으로 인해 대상 서버의 요청 읽기가 조기에 종료되지 않도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="49e61c086a1b16a67c5f900260c35d18d4bb00e5" translate="yes" xml:space="preserve">
          <source>Due to the early negotiation phase of the TLS connection, only limited methods and attributes are usable like &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt;&lt;code&gt;SSLSocket.context&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLSocket.cipher&quot;&gt;&lt;code&gt;SSLSocket.cipher()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SSLSocket.compress()&lt;/code&gt; methods require that the TLS connection has progressed beyond the TLS Client Hello and therefore will not contain return meaningful values nor can they be called safely.</source>
          <target state="translated">TLS 연결의 초기 협상 단계로 인해 &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#ssl.SSLSocket.context&quot;&gt; &lt;code&gt;SSLSocket.context&lt;/code&gt; &lt;/a&gt; 와 같은 제한된 메소드 및 속성 만 사용할 수 있습니다. &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ssl.SSLSocket.getpeercert&quot;&gt; &lt;code&gt;SSLSocket.getpeercert()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ssl.SSLSocket.cipher&quot;&gt; &lt;code&gt;SSLSocket.cipher()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SSLSocket.compress()&lt;/code&gt; 메소드를 사용하려면 TLS 연결이 TLS 클라이언트 Hello 이상으로 진행되어야하므로 리턴 값이 포함되지 않거나 안전하게 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a0730ae056616317913542eb7710d1784f15239a" translate="yes" xml:space="preserve">
          <source>Due to the use of &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; as described above, there are potential security risks which result from using the &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; to send and receive configurations via sockets. The risks are limited to where multiple users with no mutual trust run code on the same machine; see the &lt;a href=&quot;#logging.config.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">때문에의 사용 &lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 상술 한 바와 같이 사용 결과 잠재적 인 보안 위험이 있습니다 &lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt; 전송하고 소켓을 통해 구성을받을 수는. 상호 신뢰가없는 여러 사용자가 동일한 시스템에서 코드를 실행하는 경우에만 위험이 제한됩니다. 자세한 내용은 &lt;a href=&quot;#logging.config.listen&quot;&gt; &lt;code&gt;listen()&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="96fd28191d21f7ac96af7a2598a56b2a7fed2474" translate="yes" xml:space="preserve">
          <source>Due to the way the decorator protocol works, a callback function declared this way cannot take any parameters. Instead, any resources to be released must be accessed as closure variables.</source>
          <target state="translated">데코레이터 프로토콜의 작동 방식으로 인해이 방법으로 선언 된 콜백 함수는 매개 변수를 사용할 수 없습니다. 대신 해제 할 모든 리소스는 클로저 변수로 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d2e4c52874ae980f39833d0bd6768bd0323fd4f" translate="yes" xml:space="preserve">
          <source>Dump the class data as a string in the format of a netrc file. (This discards comments and may reorder the entries.)</source>
          <target state="translated">클래스 데이터를 netrc 파일 형식의 문자열로 덤프하십시오. (이는 주석을 버리고 항목을 다시 정렬 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="439b7c1b68ef2b52834db37b6a73b9d923047385" translate="yes" xml:space="preserve">
          <source>Dump the tracebacks of all threads into &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, dump only the current thread.</source>
          <target state="translated">모든 스레드의 역 추적을 &lt;em&gt;파일&lt;/em&gt; 로 덤프 &lt;em&gt;하십시오&lt;/em&gt; . 경우 &lt;em&gt;all_threads이&lt;/em&gt; 있다 &lt;code&gt;False&lt;/code&gt; 만 현재 스레드 덤프.</target>
        </trans-unit>
        <trans-unit id="22af09cc316559d66133b87399c0a38c4090f960" translate="yes" xml:space="preserve">
          <source>Dump the tracebacks of all threads, after a timeout of &lt;em&gt;timeout&lt;/em&gt; seconds, or every &lt;em&gt;timeout&lt;/em&gt; seconds if &lt;em&gt;repeat&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;. If &lt;em&gt;exit&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, call &lt;code&gt;_exit()&lt;/code&gt; with status=1 after dumping the tracebacks. (Note &lt;code&gt;_exit()&lt;/code&gt; exits the process immediately, which means it doesn&amp;rsquo;t do any cleanup like flushing file buffers.) If the function is called twice, the new call replaces previous parameters and resets the timeout. The timer has a sub-second resolution.</source>
          <target state="translated">제한 시간 초과 시간 초과 후 또는 &lt;em&gt;반복&lt;/em&gt; 이 &lt;code&gt;True&lt;/code&gt; 인 경우 &lt;em&gt;제한 시간 &lt;/em&gt;&lt;em&gt;초과&lt;/em&gt; 후 모든 스레드의 추적을 덤프하십시오 . 경우 &lt;em&gt;출구&lt;/em&gt; 입니다 &lt;code&gt;True&lt;/code&gt; , 전화 &lt;code&gt;_exit()&lt;/code&gt; 역 추적을 덤프 후 상태 = 1. 참고 &lt;code&gt;_exit()&lt;/code&gt; 는 프로세스를 즉시 종료하므로 파일 버퍼 플러시와 같은 정리를 수행하지 않습니다. 함수가 두 번 호출되면 새 호출이 이전 매개 변수를 대체하고 시간 종료를 재설정합니다. 타이머의 해상도는 1 초 미만입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d0953f02e2e64737942e00a542536186f667eee" translate="yes" xml:space="preserve">
          <source>Dumping the traceback</source>
          <target state="translated">역 추적 덤프</target>
        </trans-unit>
        <trans-unit id="90aae7e430fa2817e82b75cea83ccfb192f261d9" translate="yes" xml:space="preserve">
          <source>Dumping the traceback on a user signal</source>
          <target state="translated">사용자 신호에서 역 추적 덤프</target>
        </trans-unit>
        <trans-unit id="3611658d48f19a2ec51c68bd199c34eace02a55f" translate="yes" xml:space="preserve">
          <source>Dumping the tracebacks after a timeout</source>
          <target state="translated">시간 종료 후 역 추적 덤프</target>
        </trans-unit>
        <trans-unit id="0b22a109bf726c4eb513d42599d86cc74075919c" translate="yes" xml:space="preserve">
          <source>Duplicate a socket and prepare it for sharing with a target process. The target process must be provided with &lt;em&gt;process_id&lt;/em&gt;. The resulting bytes object can then be passed to the target process using some form of interprocess communication and the socket can be recreated there using &lt;a href=&quot;#socket.fromshare&quot;&gt;&lt;code&gt;fromshare()&lt;/code&gt;&lt;/a&gt;. Once this method has been called, it is safe to close the socket since the operating system has already duplicated it for the target process.</source>
          <target state="translated">소켓을 복제하고 대상 프로세스와 공유 할 수 있도록 준비하십시오. 대상 프로세스에는 &lt;em&gt;process_id&lt;/em&gt; 가 제공되어야합니다 . 그런 다음 결과 바이트 오브젝트를 프로세스 간 통신 양식을 사용하여 대상 프로세스로 전달하고 &lt;a href=&quot;#socket.fromshare&quot;&gt; &lt;code&gt;fromshare()&lt;/code&gt; &lt;/a&gt; 사용하여 소켓을 다시 작성할 수 있습니다 . 이 메소드가 호출되면 운영 체제가 이미 대상 프로세스에 대해 소켓을 복제 했으므로 소켓을 닫는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="f8871fb7b172ee8410208de389e003b29c2a3b9a" translate="yes" xml:space="preserve">
          <source>Duplicate elements are &lt;em&gt;not&lt;/em&gt; ignored when comparing &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt;. It verifies whether each element has the same count in both sequences. Equivalent to: &lt;code&gt;assertEqual(Counter(list(first)), Counter(list(second)))&lt;/code&gt; but works with sequences of unhashable objects as well.</source>
          <target state="translated">&lt;em&gt;첫 번째&lt;/em&gt; 와 &lt;em&gt;두 번째를&lt;/em&gt; 비교할 때 중복 요소는 무시 &lt;em&gt;되지 않습니다&lt;/em&gt; . 두 시퀀스에서 각 요소의 개수가 같은지 확인합니다. : 상당 &lt;code&gt;assertEqual(Counter(list(first)), Counter(list(second)))&lt;/code&gt; 뿐만 아니라 unhashable 오브젝트의 시퀀스로 동작한다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6261f6f0d2ab40a062aa81a3e2c8eff386d6a0c" translate="yes" xml:space="preserve">
          <source>Duplicate file descriptor &lt;em&gt;fd&lt;/em&gt; to &lt;em&gt;fd2&lt;/em&gt;, closing the latter first if necessary. Return &lt;em&gt;fd2&lt;/em&gt;. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;inheritable&lt;/a&gt; by default or non-inheritable if &lt;em&gt;inheritable&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">파일 디스크립터 &lt;em&gt;fd&lt;/em&gt; 를 &lt;em&gt;fd2에&lt;/em&gt; 복제 하여 필요한 경우 후자를 먼저 닫습니다. &lt;em&gt;fd2를&lt;/em&gt; 반환 &lt;em&gt;하십시오&lt;/em&gt; . 새로운 파일 기술자는 &lt;a href=&quot;#fd-inheritance&quot;&gt;상속&lt;/a&gt; 기본 경우 또는 비 상속에 의해 &lt;em&gt;상속이&lt;/em&gt; 있습니다 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="889a8f8c7c99ee1c1b9d552eba33b9db1f6ef6dd" translate="yes" xml:space="preserve">
          <source>Duplicate the file descriptor &lt;em&gt;fd&lt;/em&gt; (an integer as returned by a file object&amp;rsquo;s &lt;code&gt;fileno()&lt;/code&gt; method) and build a socket object from the result. Address family, socket type and protocol number are as for the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function above. The file descriptor should refer to a socket, but this is not checked &amp;mdash; subsequent operations on the object may fail if the file descriptor is invalid. This function is rarely needed, but can be used to get or set socket options on a socket passed to a program as standard input or output (such as a server started by the Unix inet daemon). The socket is assumed to be in blocking mode.</source>
          <target state="translated">파일 기술자 &lt;em&gt;fd&lt;/em&gt; (파일 객체의 &lt;code&gt;fileno()&lt;/code&gt; 메소드에 의해 리턴 된 정수)를 복제하고 결과로부터 소켓 객체를 빌드하십시오. 주소 패밀리, 소켓 유형 및 프로토콜 번호는 위 의 &lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt; 함수와 같습니다. 파일 디스크립터는 소켓을 참조해야하지만 이것은 점검되지 않습니다. 파일 디스크립터가 유효하지 않으면 오브젝트에 대한 후속 조작이 실패 할 수 있습니다. 이 기능은 거의 필요하지 않지만 표준 입력 또는 출력 (예 : Unix inet 데몬으로 시작된 서버)으로 프로그램에 전달 된 소켓의 소켓 옵션을 가져 오거나 설정하는 데 사용할 수 있습니다. 소켓은 차단 모드에 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="3d9868ddaefa32c9871f4b477dbca6d50aa12695" translate="yes" xml:space="preserve">
          <source>Duplicate the socket.</source>
          <target state="translated">소켓을 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="1057c796a3bda52be52f517af1249d81d336e4bd" translate="yes" xml:space="preserve">
          <source>DuplicateFreeEnum</source>
          <target state="translated">DuplicateFreeEnum</target>
        </trans-unit>
        <trans-unit id="1410d937e036bef29faacd4b4c842e3d2a937812" translate="yes" xml:space="preserve">
          <source>Duplicated annotations are not removed:</source>
          <target state="translated">중복 된 주석은 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b90a5b94425621edab723374c22d6af5af560415" translate="yes" xml:space="preserve">
          <source>Duplicates the reference on top of the stack.</source>
          <target state="translated">스택 위에 참조를 복제합니다.</target>
        </trans-unit>
        <trans-unit id="37773116f5751a7989aff3a01ae26af5226bb51c" translate="yes" xml:space="preserve">
          <source>Duplicates the two references on top of the stack, leaving them in the same order.</source>
          <target state="translated">스택 위에 두 참조를 복제하여 동일한 순서로 둡니다.</target>
        </trans-unit>
        <trans-unit id="23531d122060762c19d9fa7db965b70b708f270d" translate="yes" xml:space="preserve">
          <source>Duplicating enum members and values</source>
          <target state="translated">열거 형 멤버 및 값 복제</target>
        </trans-unit>
        <trans-unit id="dfef2f63f57cbced5af413a84d928321ccd4c524" translate="yes" xml:space="preserve">
          <source>During asynchronous processing, each mapped channel&amp;rsquo;s &lt;a href=&quot;#asyncore.dispatcher.readable&quot;&gt;&lt;code&gt;readable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncore.dispatcher.writable&quot;&gt;&lt;code&gt;writable()&lt;/code&gt;&lt;/a&gt; methods are used to determine whether the channel&amp;rsquo;s socket should be added to the list of channels &lt;code&gt;select()&lt;/code&gt;ed or &lt;code&gt;poll()&lt;/code&gt;ed for read and write events.</source>
          <target state="translated">비동기 처리 중에, 맵핑 된 각 채널의 &lt;a href=&quot;#asyncore.dispatcher.readable&quot;&gt; &lt;code&gt;readable()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#asyncore.dispatcher.writable&quot;&gt; &lt;code&gt;writable()&lt;/code&gt; &lt;/a&gt; 메소드는 채널 소켓이 읽기 및 쓰기 이벤트를 위해 &lt;code&gt;select()&lt;/code&gt; ed 또는 &lt;code&gt;poll()&lt;/code&gt; ed 채널 목록에 추가되어야하는지 여부를 판별하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3e475528d442e3ae5736dcca583d9176a13e698" translate="yes" xml:space="preserve">
          <source>Dynamic Type Creation</source>
          <target state="translated">동적 타입 생성</target>
        </trans-unit>
        <trans-unit id="45ecdb297a5d03af0ed09d7f32b5225a16db07d6" translate="yes" xml:space="preserve">
          <source>Dynamically adding abstract methods to a class, or attempting to modify the abstraction status of a method or class once it is created, are not supported. The &lt;a href=&quot;#abc.abstractmethod&quot;&gt;&lt;code&gt;abstractmethod()&lt;/code&gt;&lt;/a&gt; only affects subclasses derived using regular inheritance; &amp;ldquo;virtual subclasses&amp;rdquo; registered with the ABC&amp;rsquo;s &lt;code&gt;register()&lt;/code&gt; method are not affected.</source>
          <target state="translated">클래스에 추상 메소드를 동적으로 추가하거나 메소드 또는 클래스가 작성된 후에 추상화 상태를 수정하려는 시도는 지원되지 않습니다. &lt;a href=&quot;#abc.abstractmethod&quot;&gt; &lt;code&gt;abstractmethod()&lt;/code&gt; &lt;/a&gt; 정규 상속을 사용하여 도출 된 서브 클래스에 영향을 미친다; ABC의 &lt;code&gt;register()&lt;/code&gt; 메소드로 등록 된 &quot;가상 서브 클래스&quot; 는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9eba0f202ad83d024c1a994a5349b82499dd6c1f" translate="yes" xml:space="preserve">
          <source>EBCDIC-CP-BE, EBCDIC-CP-CH, IBM500</source>
          <target state="translated">EBCDIC-CP-BE, EBCDIC-CP-CH, IBM500</target>
        </trans-unit>
        <trans-unit id="fd237df64f3b34807e426182cc5fd026a5538720" translate="yes" xml:space="preserve">
          <source>EBCDIC-CP-HE, IBM424</source>
          <target state="translated">EBCDIC-CP-HE, IBM424</target>
        </trans-unit>
        <trans-unit id="4fd668988fb53bd9a053b46077c87d876ac3dd0c" translate="yes" xml:space="preserve">
          <source>EHLO</source>
          <target state="translated">EHLO</target>
        </trans-unit>
        <trans-unit id="b5f455d3e9fdf793b9ed474569d144a430f4fed1" translate="yes" xml:space="preserve">
          <source>EOF is signaled with a &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; value;</source>
          <target state="translated">EOF는 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 값으로 시그널링됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c49f83b052d9fd32537298873b9355036344465" translate="yes" xml:space="preserve">
          <source>EOF is signaled with an empty string (&lt;code&gt;''&lt;/code&gt;);</source>
          <target state="translated">EOF는 빈 문자열 ( &lt;code&gt;''&lt;/code&gt; )로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7b9e6e531c95a34720d1a8d1d5a2c5f1c560afeb" translate="yes" xml:space="preserve">
          <source>EOFError</source>
          <target state="translated">EOFError</target>
        </trans-unit>
        <trans-unit id="8664dc00e7190b6b4bc1b4c25bf22f56acbe19cd" translate="yes" xml:space="preserve">
          <source>EXPN</source>
          <target state="translated">EXPN</target>
        </trans-unit>
        <trans-unit id="3f257ef4deeb38d39d7c23f398e671c79834f42f" translate="yes" xml:space="preserve">
          <source>Each class keeps a list of weak references to its immediate subclasses. This method returns a list of all those references still alive. Example:</source>
          <target state="translated">각 클래스는 직계 서브 클래스에 대한 약한 참조 목록을 유지합니다. 이 메소드는 여전히 존재하는 모든 참조 목록을 리턴합니다. 예:</target>
        </trans-unit>
        <trans-unit id="49b3d8c715909f41cc320395540e3e23f0c84cef" translate="yes" xml:space="preserve">
          <source>Each codec has to define four interfaces to make it usable as codec in Python: stateless encoder, stateless decoder, stream reader and stream writer. The stream reader and writers typically reuse the stateless encoder/decoder to implement the file protocols. Codec authors also need to define how the codec will handle encoding and decoding errors.</source>
          <target state="translated">각 코덱은 파이썬에서 코덱으로 사용할 수 있도록 상태 비 저장 인코더, 상태 비 저장 디코더, 스트림 판독기 및 스트림 기록기의 네 가지 인터페이스를 정의해야합니다. 스트림 리더 및 기록기는 일반적으로 상태 비 저장 인코더 / 디코더를 재사용하여 파일 프로토콜을 구현합니다. 코덱 작성자도 코덱에서 인코딩 및 디코딩 오류를 처리하는 방법을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e5ae951076a28f94f188c0c78d56dc1243a53b4" translate="yes" xml:space="preserve">
          <source>Each command returns a tuple: &lt;code&gt;(type, [data, ...])&lt;/code&gt; where &lt;em&gt;type&lt;/em&gt; is usually &lt;code&gt;'OK'&lt;/code&gt; or &lt;code&gt;'NO'&lt;/code&gt;, and &lt;em&gt;data&lt;/em&gt; is either the text from the command response, or mandated results from the command. Each &lt;em&gt;data&lt;/em&gt; is either a &lt;code&gt;bytes&lt;/code&gt;, or a tuple. If a tuple, then the first part is the header of the response, and the second part contains the data (ie: &amp;lsquo;literal&amp;rsquo; value).</source>
          <target state="translated">각 명령은 튜플을 반환합니다 : &lt;code&gt;(type, [data, ...])&lt;/code&gt; 여기서 &lt;em&gt;type&lt;/em&gt; 은 일반적으로 &lt;code&gt;'OK'&lt;/code&gt; 또는 &lt;code&gt;'NO'&lt;/code&gt; 이고 &lt;em&gt;data&lt;/em&gt; 는 명령 응답의 텍스트이거나 명령의 필수 결과입니다. 각 &lt;em&gt;데이터&lt;/em&gt; 는 &lt;code&gt;bytes&lt;/code&gt; 또는 튜플입니다. 튜플 인 경우 첫 번째 부분은 응답의 헤더이고 두 번째 부분에는 데이터가 포함됩니다 (예 : 'literal'값).</target>
        </trans-unit>
        <trans-unit id="282f17f731792f16d9273e6a347f472556b09b25" translate="yes" xml:space="preserve">
          <source>Each command returns a tuple: &lt;code&gt;(type, [data, ...])&lt;/code&gt; where &lt;em&gt;type&lt;/em&gt; is usually &lt;code&gt;'OK'&lt;/code&gt; or &lt;code&gt;'NO'&lt;/code&gt;, and &lt;em&gt;data&lt;/em&gt; is either the text from the command response, or mandated results from the command. Each &lt;em&gt;data&lt;/em&gt; is either a string, or a tuple. If a tuple, then the first part is the header of the response, and the second part contains the data (ie: &amp;lsquo;literal&amp;rsquo; value).</source>
          <target state="translated">각 명령은 tuple : &lt;code&gt;(type, [data, ...])&lt;/code&gt; 반환합니다. 여기서 &lt;em&gt;type&lt;/em&gt; 은 일반적으로 &lt;code&gt;'OK'&lt;/code&gt; 또는 &lt;code&gt;'NO'&lt;/code&gt; 이며 &lt;em&gt;data&lt;/em&gt; 는 명령 응답의 텍스트이거나 명령의 명령 결과입니다. 각 &lt;em&gt;데이터&lt;/em&gt; 는 문자열 또는 튜플입니다. 튜플 인 경우 첫 번째 부분은 응답의 머리글이고 두 번째 부분은 데이터 (예 : 'literal'값)를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b1fc694bb45d480ca1940a2e1064ce8c21ebc647" translate="yes" xml:space="preserve">
          <source>Each concrete class has an attribute &lt;a href=&quot;#ast.AST._fields&quot;&gt;&lt;code&gt;_fields&lt;/code&gt;&lt;/a&gt; which gives the names of all child nodes.</source>
          <target state="translated">각 구체적 클래스에는 모든 하위 노드의 이름을 제공하는 &lt;a href=&quot;#ast.AST._fields&quot;&gt; &lt;code&gt;_fields&lt;/code&gt; &lt;/a&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="68a50347d1587b9181be5b21c8a4401ebdc590f5" translate="yes" xml:space="preserve">
          <source>Each element of &lt;em&gt;pathsegments&lt;/em&gt; can be either a string representing a path segment, an object implementing the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface which returns a string, or another path object:</source>
          <target state="translated">각 요소 &lt;em&gt;pathsegments는&lt;/em&gt; 경로 세그먼트는 구현 객체를 나타내는 문자열, &lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; 의&lt;/a&gt; 캐릭터 또는 다른 경로 객체를 반환 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="7d47bd7e76e37961a2c232d0d7b5ad58b1d23e40" translate="yes" xml:space="preserve">
          <source>Each element of the sequences returned by &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; has a simple form. Sequences representing non-terminal elements in the grammar always have a length greater than one. The first element is an integer which identifies a production in the grammar. These integers are given symbolic names in the C header file &lt;code&gt;Include/graminit.h&lt;/code&gt; and the Python module &lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;. Each additional element of the sequence represents a component of the production as recognized in the input string: these are always sequences which have the same form as the parent. An important aspect of this structure which should be noted is that keywords used to identify the parent node type, such as the keyword &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;if_stmt&lt;/code&gt;, are included in the node tree without any special treatment. For example, the &lt;code&gt;if&lt;/code&gt; keyword is represented by the tuple &lt;code&gt;(1, 'if')&lt;/code&gt;, where &lt;code&gt;1&lt;/code&gt; is the numeric value associated with all &lt;code&gt;NAME&lt;/code&gt; tokens, including variable and function names defined by the user. In an alternate form returned when line number information is requested, the same token might be represented as &lt;code&gt;(1, 'if', 12)&lt;/code&gt;, where the &lt;code&gt;12&lt;/code&gt; represents the line number at which the terminal symbol was found.</source>
          <target state="translated">&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt; 의해 리턴되는 시퀀스의 각 요소 는 간단한 형식을 갖습니다. 문법에서 비 터미널 요소를 나타내는 시퀀스의 길이는 항상 1보다 큽니다. 첫 번째 요소는 문법에서 생산을 식별하는 정수입니다. 이 정수는 C 헤더 파일 &lt;code&gt;Include/graminit.h&lt;/code&gt; 및 Python 모듈 &lt;a href=&quot;symbol#module-symbol&quot;&gt; &lt;code&gt;symbol&lt;/code&gt; 에&lt;/a&gt; 기호 이름이 지정 됩니다. 시퀀스의 각 추가 요소는 입력 문자열에서 인식되는 프로덕션 구성 요소를 나타냅니다. 이들은 항상 부모와 동일한 형식의 시퀀스입니다. 주목해야이 구조의 중요한 부분은 키워드와 부모 노드의 타입을 식별하기 위해 사용 된 키워드 인 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;if_stmt&lt;/code&gt; 는 특별한 처리없이 노드 트리에 포함됩니다. 예를 들어 &lt;code&gt;if&lt;/code&gt; 키워드는 튜플 &lt;code&gt;(1, 'if')&lt;/code&gt; 로 표시되며, 여기서 &lt;code&gt;1&lt;/code&gt; 은 사용자가 정의한 변수 및 함수 이름을 포함하여 모든 &lt;code&gt;NAME&lt;/code&gt; 토큰 과 연관된 숫자 값 입니다. 행 번호 정보가 요청 될 때 리턴되는 대체 양식에서 동일한 토큰은 &lt;code&gt;(1, 'if', 12)&lt;/code&gt; 로 표시 될 수 있습니다 . 여기서 &lt;code&gt;12&lt;/code&gt; 는 터미널 기호가 발견 된 행 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c3694a4b7f2e5e589699cb04ebdebc3c44a3f4a6" translate="yes" xml:space="preserve">
          <source>Each element of the sequences returned by &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; has a simple form. Sequences representing non-terminal elements in the grammar always have a length greater than one. The first element is an integer which identifies a production in the grammar. These integers are given symbolic names in the C header file &lt;code&gt;Include/graminit.h&lt;/code&gt; and the Python module &lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;. Each additional element of the sequence represents a component of the production as recognized in the input string: these are always sequences which have the same form as the parent. An important aspect of this structure which should be noted is that keywords used to identify the parent node type, such as the keyword &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;if_stmt&lt;/code&gt;, are included in the node tree without any special treatment. For example, the &lt;code&gt;if&lt;/code&gt; keyword is represented by the tuple &lt;code&gt;(1, 'if')&lt;/code&gt;, where &lt;code&gt;1&lt;/code&gt; is the numeric value associated with all &lt;code&gt;NAME&lt;/code&gt; tokens, including variable and function names defined by the user. In an alternate form returned when line number information is requested, the same token might be represented as &lt;code&gt;(1, 'if', 12)&lt;/code&gt;, where the &lt;code&gt;12&lt;/code&gt; represents the line number at which the terminal symbol was found.</source>
          <target state="translated">&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 시퀀스의 각 요소 는 간단한 형식을 갖습니다. 문법에서 비 터미널 요소를 나타내는 시퀀스의 길이는 항상 1보다 깁니다. 첫 번째 요소는 문법에서 생산을 식별하는 정수입니다. 이러한 정수는 C 헤더 파일 &lt;code&gt;Include/graminit.h&lt;/code&gt; 및 Python 모듈 &lt;a href=&quot;symbol#module-symbol&quot;&gt; &lt;code&gt;symbol&lt;/code&gt; 에&lt;/a&gt; 기호 이름이 지정 됩니다. 시퀀스의 각 추가 요소는 입력 문자열에서 인식되는 프로덕션 구성 요소를 나타냅니다. 이들은 항상 상위와 동일한 형식을 갖는 시퀀스입니다. 주목해야이 구조의 중요한 부분은 키워드와 부모 노드의 타입을 식별하기 위해 사용 된 키워드 인 &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;if_stmt&lt;/code&gt; 는 특별한 처리없이 노드 트리에 포함됩니다. 예를 들어 &lt;code&gt;if&lt;/code&gt; 키워드는 튜플 &lt;code&gt;(1, 'if')&lt;/code&gt; . 여기서 &lt;code&gt;1&lt;/code&gt; 은 사용자가 정의한 변수 및 함수 이름을 포함하여 모든 &lt;code&gt;NAME&lt;/code&gt; 토큰 과 관련된 숫자 값 입니다. 줄 번호 정보가 요청 될 때 반환되는 대체 형식에서 동일한 토큰은 &lt;code&gt;(1, 'if', 12)&lt;/code&gt; 로 표시 될 수 있습니다 . 여기서 &lt;code&gt;12&lt;/code&gt; 는 터미널 기호가 발견 된 줄 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fbbb92dbc3b8b3f3d23474fa6aec35d50a033430" translate="yes" xml:space="preserve">
          <source>Each instance maintains a stack of registered callbacks that are called in reverse order when the instance is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement). Note that callbacks are &lt;em&gt;not&lt;/em&gt; invoked implicitly when the context stack instance is garbage collected.</source>
          <target state="translated">각 인스턴스는 인스턴스가 닫힐 때 ( &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 끝에서 명시 적 또는 암시 적으로) 역순으로 호출되는 등록 된 콜백 스택을 유지 관리합니다 . 컨텍스트 스택 인스턴스가 가비지 수집 될 때 콜백은 암시 적으로 호출 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="686ca9cda61b82be89d20b603510c3bf98f284a7" translate="yes" xml:space="preserve">
          <source>Each instance maintains a stack of registered callbacks that are called in reverse order when the instance is closed (either explicitly or implicitly at the end of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement). Note that callbacks are &lt;em&gt;not&lt;/em&gt; invoked implicitly when the context stack instance is garbage collected.</source>
          <target state="translated">각 인스턴스는 인스턴스가 닫힐 때 역순으로 호출되는 등록 된 콜백 스택을 유지합니다 ( &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 끝에서 명시 적으로 또는 암시 적으로 ). 컨텍스트 스택 인스턴스가 가비지 수집 될 때 콜백은 암시 적으로 호출 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8de95ec9ac0b515be6306a38072974d2399457c5" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; will run a single base method: the method named &lt;em&gt;methodName&lt;/em&gt;. In most uses of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;, you will neither change the &lt;em&gt;methodName&lt;/em&gt; nor reimplement the default &lt;code&gt;runTest()&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; 의&lt;/a&gt; 각 인스턴스는 단일 기본 메소드 인 &lt;em&gt;methodName&lt;/em&gt; 이라는 메소드를 실행합니다 . 대부분의 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 사용에서는 &lt;em&gt;methodName을&lt;/em&gt; 변경 하거나 기본 &lt;code&gt;runTest()&lt;/code&gt; 메소드를 다시 구현하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1caec864f11d896329b6c2f98e42ed6c3ffa4d84" translate="yes" xml:space="preserve">
          <source>Each instance of a concrete class has one attribute for each child node, of the type as defined in the grammar. For example, &lt;a href=&quot;#ast.BinOp&quot;&gt;&lt;code&gt;ast.BinOp&lt;/code&gt;&lt;/a&gt; instances have an attribute &lt;code&gt;left&lt;/code&gt; of type &lt;code&gt;ast.expr&lt;/code&gt;.</source>
          <target state="translated">구체적인 클래스의 각 인스턴스에는 문법에 정의 된 유형의 각 자식 노드에 대해 하나의 속성이 있습니다. 예를 들어 &lt;a href=&quot;#ast.BinOp&quot;&gt; &lt;code&gt;ast.BinOp&lt;/code&gt; &lt;/a&gt; 인스턴스에는 &lt;code&gt;ast.expr&lt;/code&gt; 유형 의 속성이 &lt;code&gt;left&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4adfaccfd02783f72f1bf5a8a740336421c2115" translate="yes" xml:space="preserve">
          <source>Each instance of a concrete class has one attribute for each child node, of the type as defined in the grammar. For example, &lt;code&gt;ast.BinOp&lt;/code&gt; instances have an attribute &lt;code&gt;left&lt;/code&gt; of type &lt;code&gt;ast.expr&lt;/code&gt;.</source>
          <target state="translated">구체적 클래스의 각 인스턴스에는 각 하위 노드에 대해 문법에 정의 된 유형의 속성이 하나씩 있습니다. 예를 들어, &lt;code&gt;ast.BinOp&lt;/code&gt; 의 인스턴스는 속성이 &lt;code&gt;left&lt;/code&gt; 타입의 &lt;code&gt;ast.expr&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="13ea0b080ba9b453721cead18f47d5cd873c0211" translate="yes" xml:space="preserve">
          <source>Each item also has a list of tags, which can be used to associate event bindings with individual items and control the appearance of the item.</source>
          <target state="translated">각 항목에는 이벤트 바인딩을 개별 항목과 연관시키고 항목의 모양을 제어하는 ​​데 사용할 수있는 태그 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e44e01ec262fcc06e2c821c79bd1b985a39335e0" translate="yes" xml:space="preserve">
          <source>Each item in the list will be a string which is the value of the &lt;code&gt;charset&lt;/code&gt; parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header for the represented subpart. However, if the subpart has no &lt;em&gt;Content-Type&lt;/em&gt; header, no &lt;code&gt;charset&lt;/code&gt; parameter, or is not of the &lt;em&gt;text&lt;/em&gt; main MIME type, then that item in the returned list will be &lt;em&gt;failobj&lt;/em&gt;.</source>
          <target state="translated">목록의 각 항목은 표시된 &lt;code&gt;charset&lt;/code&gt; 에 대한 &lt;em&gt;Content-Type&lt;/em&gt; 헤더 의 charset 매개 변수 값인 문자열입니다 . 그러나 &lt;em&gt;서브 파트에 &lt;/em&gt;&lt;em&gt;Content-Type&lt;/em&gt; 헤더가 없거나 &lt;code&gt;charset&lt;/code&gt; 매개 변수가 없거나 &lt;em&gt;텍스트&lt;/em&gt; 기본 MIME 유형 이 아닌 경우 리턴 된 목록의 해당 항목은 &lt;em&gt;failobj&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bf9f8e6f669080eee75ae9dc5a75b7bbd4c47d81" translate="yes" xml:space="preserve">
          <source>Each item in the list will be a string which is the value of the &lt;code&gt;charset&lt;/code&gt; parameter in the &lt;em&gt;Content-Type&lt;/em&gt; header for the represented subpart. If the subpart has no &lt;em&gt;Content-Type&lt;/em&gt; header, no &lt;code&gt;charset&lt;/code&gt; parameter, or is not of the &lt;em&gt;text&lt;/em&gt; main MIME type, then that item in the returned list will be &lt;em&gt;failobj&lt;/em&gt;.</source>
          <target state="translated">목록의 각 항목은 표시된 &lt;code&gt;charset&lt;/code&gt; 에 대한 &lt;em&gt;Content-Type&lt;/em&gt; 헤더 의 charset 매개 변수 값인 문자열입니다 . 하부 파트로 더가없는 경우 &lt;em&gt;컨텐츠 유형&lt;/em&gt; 헤더, 아니 &lt;code&gt;charset&lt;/code&gt; 파라미터를, 또는이 아닌 &lt;em&gt;텍스트&lt;/em&gt; 의 주요 MIME 타입, 다음 반환 된 목록에서 해당 항목이 될 것입니다 &lt;em&gt;failobj을&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="da0ee9fd3f992367055d3f5837dcc4a138a402ce" translate="yes" xml:space="preserve">
          <source>Each item in this tuple contains further information about a parameter, it must be a tuple containing one, two, or three items.</source>
          <target state="translated">이 튜플의 각 항목에는 매개 변수에 대한 추가 정보가 포함되며 1, 2 또는 3 개의 항목을 포함하는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="77e53c8c02a8a57ebc4ed20d807d943b6ff96866" translate="yes" xml:space="preserve">
          <source>Each item is identified by a unique name. The widget will generate item IDs if they are not supplied by the caller. There is a distinguished root item, named &lt;code&gt;{}&lt;/code&gt;. The root item itself is not displayed; its children appear at the top level of the hierarchy.</source>
          <target state="translated">각 항목은 고유 한 이름으로 식별됩니다. 호출자가 제공하지 않으면 위젯은 항목 ID를 생성합니다. &lt;code&gt;{}&lt;/code&gt; 라는 구별 된 루트 항목이 있습니다 . 루트 항목 자체는 표시되지 않습니다. 하위는 계층 구조의 최상위 수준에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4bce3597203de7edee0f57b19d4a2d5cbffdf95e" translate="yes" xml:space="preserve">
          <source>Each item should have the same number of values as the widget option columns. If there are fewer values than columns, the remaining values are assumed empty. If there are more values than columns, the extra values are ignored.</source>
          <target state="translated">각 항목은 위젯 옵션 열과 동일한 수의 값을 가져야합니다. 열보다 적은 값이 있으면 나머지 값은 비어 있다고 가정합니다. 열보다 많은 값이 있으면 추가 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e78be99b38a7a6e8f05f339ced460b87f7c2eaf4" translate="yes" xml:space="preserve">
          <source>Each iteration yields a tuple as specified by the format string.</source>
          <target state="translated">각 반복은 형식 문자열에 지정된대로 튜플을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2f826346b31818133756fc3c73c82e215e0c9cf5" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;kw&lt;/em&gt; is an option and each value is a string identifying the value for that option.</source>
          <target state="translated">&lt;em&gt;kw의&lt;/em&gt; 각 키 는 옵션이며 각 값은 해당 옵션의 값을 식별하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="39b11157702a1c985e2f006a001b5fee4627520f" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;kw&lt;/em&gt; is an option and each value should be a list or a tuple (usually) containing statespecs grouped in tuples, lists, or some other preference. A statespec is a compound of one or more states and then a value.</source>
          <target state="translated">&lt;em&gt;kw의&lt;/em&gt; 각 키 는 옵션이며 각 값은 목록 또는 튜플, 목록 또는 기타 기본 설정으로 그룹화 된 상태 사양을 포함하는 튜플 (일반적으로)이어야합니다. statespec은 하나 이상의 상태를 혼합 한 다음 값입니다.</target>
        </trans-unit>
        <trans-unit id="3e8597bf6453e280e6bc0fb06128abdc83d25df7" translate="yes" xml:space="preserve">
          <source>Each key in &lt;em&gt;settings&lt;/em&gt; is a style and each value may contain the keys &amp;lsquo;configure&amp;rsquo;, &amp;lsquo;map&amp;rsquo;, &amp;lsquo;layout&amp;rsquo; and &amp;lsquo;element create&amp;rsquo; and they are expected to have the same format as specified by the methods &lt;a href=&quot;#tkinter.ttk.Style.configure&quot;&gt;&lt;code&gt;Style.configure()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt;&lt;code&gt;Style.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.ttk.Style.layout&quot;&gt;&lt;code&gt;Style.layout()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt;&lt;code&gt;Style.element_create()&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;em&gt;설정의&lt;/em&gt; 각 키 는 스타일이며 각 값에는 'configure', 'map', 'layout'및 'element create'키가 포함될 수 있으며 &lt;a href=&quot;#tkinter.ttk.Style.configure&quot;&gt; &lt;code&gt;Style.configure()&lt;/code&gt; &lt;/a&gt; 메소드에서 지정한 것과 동일한 형식을 갖습니다 . &lt;a href=&quot;#tkinter.ttk.Style.map&quot;&gt; &lt;code&gt;Style.map()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#tkinter.ttk.Style.layout&quot;&gt; &lt;code&gt;Style.layout()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#tkinter.ttk.Style.element_create&quot;&gt; &lt;code&gt;Style.element_create()&lt;/code&gt; &lt;/a&gt; 각각</target>
        </trans-unit>
        <trans-unit id="87388fd6d132977913179af099110ca3324339a0" translate="yes" xml:space="preserve">
          <source>Each line of a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; delta begins with a two-letter code:</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt; 델타 의 각 줄은 두 글자 코드로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e42a08c19ff6f318b0b306e48a39eabc2c06f3ef" translate="yes" xml:space="preserve">
          <source>Each line of the traceback stack (if present) must be indented further than the first line of the example, &lt;em&gt;or&lt;/em&gt; start with a non-alphanumeric character. The first line following the traceback header indented the same and starting with an alphanumeric is taken to be the start of the exception detail. Of course this does the right thing for genuine tracebacks.</source>
          <target state="translated">역 추적 스택의 각 행 (있는 경우)은 예제의 첫 번째 행보다 들여 쓰기 &lt;em&gt;되거나&lt;/em&gt; 영숫자가 아닌 문자로 시작해야합니다. 역 추적 헤더 다음에 오는 첫 행은 동일하게 들여 쓰기되고 영숫자로 시작하는 예외 세부 사항의 시작으로 간주됩니다. 물론 이것은 진정한 역 추적에 올바른 일을합니다.</target>
        </trans-unit>
        <trans-unit id="966983a00fbe34b47c3c999bd9e9a31fd05e66a8" translate="yes" xml:space="preserve">
          <source>Each module in the &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package whose name starts with &lt;code&gt;test_&lt;/code&gt; is a testing suite for a specific module or feature. All new tests should be written using the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module. Some older tests are written using a &amp;ldquo;traditional&amp;rdquo; testing style that compares output printed to &lt;code&gt;sys.stdout&lt;/code&gt;; this style of test is considered deprecated.</source>
          <target state="translated">이름이 &lt;code&gt;test_&lt;/code&gt; 로 시작 하는 &lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; 패키지의 각 모듈은 특정 모듈 또는 기능에 대한 테스트 스위트입니다. 모든 새로운 테스트는 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 작성해야합니다 . 일부 오래된 테스트는 &lt;code&gt;sys.stdout&lt;/code&gt; 에 인쇄 된 출력을 비교하는 &quot;전통적인&quot;테스트 스타일을 사용하여 작성됩니다 . 이 스타일의 테스트는 더 이상 사용되지 않는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="570d43e41fd016220171b8d9766922e2767c092c" translate="yes" xml:space="preserve">
          <source>Each of the authentication methods supported by &lt;a href=&quot;#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; are tried in turn if they are advertised as supported by the server. See &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt;&lt;code&gt;auth()&lt;/code&gt;&lt;/a&gt; for a list of supported authentication methods. &lt;em&gt;initial_response_ok&lt;/em&gt; is passed through to &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt;&lt;code&gt;auth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; 에서&lt;/a&gt; 지원하는 각 인증 방법 은 서버에서 지원하는 것으로 보급되면 차례로 시도됩니다. 지원되는 인증 방법 목록은 &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt; &lt;code&gt;auth()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . &lt;em&gt;initial_response_ok&lt;/em&gt; 가 &lt;a href=&quot;#smtplib.SMTP.auth&quot;&gt; &lt;code&gt;auth()&lt;/code&gt; &lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0be42f64114c87525015606161dd516884beee6" translate="yes" xml:space="preserve">
          <source>Each of the following constants defines a tar archive format that the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module is able to create. See section &lt;a href=&quot;#tar-formats&quot;&gt;Supported tar formats&lt;/a&gt; for details.</source>
          <target state="translated">다음 각 상수는 &lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt; 모듈이 작성할 수 있는 tar 아카이브 형식을 정의합니다 . 자세한 내용은 &lt;a href=&quot;#tar-formats&quot;&gt;지원되는 tar 형식&lt;/a&gt; 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c8eacfcf105bb64fff8fabb452ae84f33e7ee8ec" translate="yes" xml:space="preserve">
          <source>Each of the methods &lt;a href=&quot;#venv.EnvBuilder.ensure_directories&quot;&gt;&lt;code&gt;ensure_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.create_configuration&quot;&gt;&lt;code&gt;create_configuration()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt;&lt;code&gt;setup_scripts()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt;&lt;code&gt;post_setup()&lt;/code&gt;&lt;/a&gt; can be overridden.</source>
          <target state="translated">방법의 각 &lt;a href=&quot;#venv.EnvBuilder.ensure_directories&quot;&gt; &lt;code&gt;ensure_directories()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#venv.EnvBuilder.create_configuration&quot;&gt; &lt;code&gt;create_configuration()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt; &lt;code&gt;setup_scripts()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt; &lt;code&gt;post_setup()&lt;/code&gt; &lt;/a&gt; 무시 될 수있다.</target>
        </trans-unit>
        <trans-unit id="7dc6ae0f9750e9fa2a785125e5f9d0d801c4c29a" translate="yes" xml:space="preserve">
          <source>Each row read from the csv file is returned as a list of strings. No automatic data type conversion is performed unless the &lt;code&gt;QUOTE_NONNUMERIC&lt;/code&gt; format option is specified (in which case unquoted fields are transformed into floats).</source>
          <target state="translated">csv 파일에서 읽은 각 행은 문자열 목록으로 반환됩니다. &lt;code&gt;QUOTE_NONNUMERIC&lt;/code&gt; 형식 옵션이 지정되지 않은 경우 (인용되지 않은 필드가 부동 소수점으로 변환 됨) 자동 데이터 유형 변환이 수행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="39af9c24f6267667f16c1f8937c3f68cebb65cc8" translate="yes" xml:space="preserve">
          <source>Each scheme is itself composed of a series of paths and each path has a unique identifier. Python currently uses eight paths:</source>
          <target state="translated">각 체계 자체는 일련의 경로로 구성되며 각 경로에는 고유 식별자가 있습니다. 파이썬은 현재 8 가지 경로를 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="d6be844de18e8ac1c0c125847ea509ec8672f2af" translate="yes" xml:space="preserve">
          <source>Each sequence must contain individual single-line strings ending with newlines. Such sequences can be obtained from the &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt;&lt;code&gt;readlines()&lt;/code&gt;&lt;/a&gt; method of file-like objects. The delta generated also consists of newline-terminated strings, ready to be printed as-is via the &lt;a href=&quot;io#io.IOBase.writelines&quot;&gt;&lt;code&gt;writelines()&lt;/code&gt;&lt;/a&gt; method of a file-like object.</source>
          <target state="translated">각 시퀀스에는 개행으로 끝나는 개별 단일 행 문자열이 포함되어야합니다. 이러한 시퀀스는 파일과 같은 객체 의 &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt; &lt;code&gt;readlines()&lt;/code&gt; &lt;/a&gt; 메서드 에서 얻을 수 있습니다 . 생성 된 델타는 줄 바꿈으로 끝나는 문자열로 구성되어 파일과 같은 객체 의 &lt;a href=&quot;io#io.IOBase.writelines&quot;&gt; &lt;code&gt;writelines()&lt;/code&gt; &lt;/a&gt; 메소드를 통해 그대로 인쇄 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6fea372c2e6910286f3770084c74f69f7479d39" translate="yes" xml:space="preserve">
          <source>Each statement in &lt;code&gt;__future__.py&lt;/code&gt; is of the form:</source>
          <target state="translated">&lt;code&gt;__future__.py&lt;/code&gt; 의 각 문장 은 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="9e29db3d8e94a8e1eddfab4dff35fd962a74e06a" translate="yes" xml:space="preserve">
          <source>Each string is limited to 500 characters.</source>
          <target state="translated">각 문자열은 500 자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="170cfb863712b473cc75fb950f928a5a8285210f" translate="yes" xml:space="preserve">
          <source>Each thread has its own current context which is accessed or changed using the &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; functions:</source>
          <target state="translated">각 스레드에는 &lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 액세스하거나 변경되는 고유 한 현재 컨텍스트가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4d777ac10aa65cebbc73a8b54c83325611989663" translate="yes" xml:space="preserve">
          <source>Each time a telnet option is read on the input flow, this &lt;em&gt;callback&lt;/em&gt; (if set) is called with the following parameters: callback(telnet socket, command (DO/DONT/WILL/WONT), option). No other action is done afterwards by telnetlib.</source>
          <target state="translated">입력 흐름에서 텔넷 옵션을 읽을 때마다 콜백 (텔넷 소켓, 명령 (DO / DONT / WILL / WONT), 옵션) 매개 변수를 사용 하여이 &lt;em&gt;콜백&lt;/em&gt; (설정된 경우)이 호출됩니다. telnetlib에 의해 다른 조치는 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfad8ccc8a211d61d36409d0bf2f14aa35ee256d" translate="yes" xml:space="preserve">
          <source>Each type variable argument to &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; must be distinct. This is thus invalid:</source>
          <target state="translated">&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; 에&lt;/a&gt; 대한 각 유형 변수 인수 는 고유해야합니다. 따라서 이것은 유효하지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="c84331c7ef4d85ab05cce6fed746ac676d4e101d" translate="yes" xml:space="preserve">
          <source>Each widget in &lt;code&gt;ttk&lt;/code&gt; is assigned a style, which specifies the set of elements making up the widget and how they are arranged, along with dynamic and default settings for element options. By default the style name is the same as the widget&amp;rsquo;s class name, but it may be overridden by the widget&amp;rsquo;s style option. If you don&amp;rsquo;t know the class name of a widget, use the method &lt;code&gt;Misc.winfo_class()&lt;/code&gt; (somewidget.winfo_class()).</source>
          <target state="translated">&lt;code&gt;ttk&lt;/code&gt; 의 각 위젯 에는 스타일이 지정되는데, 이는 위젯을 구성하는 요소 세트와 요소 옵션의 동적 및 기본 설정과 함께 위젯을 구성하는 요소 세트 및 배열 방식을 지정합니다. 기본적으로 스타일 이름은 위젯의 클래스 이름과 동일하지만 위젯의 스타일 옵션으로 대체 될 수 있습니다. 위젯의 클래스 이름을 모르는 경우 &lt;code&gt;Misc.winfo_class()&lt;/code&gt; 메소드 (somewidget.winfo_class ())를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ac6958e8c84c43dc505ed0bc0da9c2ae587471df" translate="yes" xml:space="preserve">
          <source>Edge and Level Trigger Polling (epoll) Objects</source>
          <target state="translated">에지 및 레벨 트리거 폴링 (epoll) 오브젝트</target>
        </trans-unit>
        <trans-unit id="5583cdff4d4a6580ea0a38b30db66be0866f671a" translate="yes" xml:space="preserve">
          <source>Edit menu (Shell and Editor)</source>
          <target state="translated">편집 메뉴 (쉘 및 편집기)</target>
        </trans-unit>
        <trans-unit id="185ea171b3d3bde051ea325fee7b199751c8574b" translate="yes" xml:space="preserve">
          <source>Editable text widget for curses supporting &lt;strong&gt;Emacs&lt;/strong&gt;-like bindings.</source>
          <target state="translated">&lt;strong&gt;Emacs&lt;/strong&gt; 와 같은 바인딩을 지원하는 curses를위한 편집 가능한 텍스트 위젯 .</target>
        </trans-unit>
        <trans-unit id="938a52ac689dd4874b63cf940ebb77391725c7d1" translate="yes" xml:space="preserve">
          <source>Editing and navigation</source>
          <target state="translated">편집 및 탐색</target>
        </trans-unit>
        <trans-unit id="90f14ba0b6909fa15eb3284afbcd0982f6764f14" translate="yes" xml:space="preserve">
          <source>Editor windows</source>
          <target state="translated">에디터 창</target>
        </trans-unit>
        <trans-unit id="0efd6762e1cf2a894e742725c6e1de2bd3237193" translate="yes" xml:space="preserve">
          <source>Editor windows also have breakpoint functions. Lines with a breakpoint set are specially marked. Breakpoints only have an effect when running under the debugger. Breakpoints for a file are saved in the user&amp;rsquo;s &lt;code&gt;.idlerc&lt;/code&gt; directory.</source>
          <target state="translated">편집기 창에는 중단 점 기능도 있습니다. 중단 점이 설정된 줄은 특별히 표시됩니다. 중단 점은 디버거에서 실행할 때만 영향을 미칩니다. 파일의 중단 점은 사용자의 &lt;code&gt;.idlerc&lt;/code&gt; 디렉토리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="766678d2b718b817641af4ac74b0cbc28f9013bf" translate="yes" xml:space="preserve">
          <source>Effects of the Python Development Mode</source>
          <target state="translated">Python 개발 모드의 효과</target>
        </trans-unit>
        <trans-unit id="2072c523779b54d2efd759254f1191af3f0206d0" translate="yes" xml:space="preserve">
          <source>Effects of the Python Development Mode:</source>
          <target state="translated">Python 개발 모드의 효과 :</target>
        </trans-unit>
        <trans-unit id="8a9ba193ecdd6f264d6c16c5e8ae467c10e10059" translate="yes" xml:space="preserve">
          <source>Either &amp;ldquo;normal&amp;rdquo;, &amp;ldquo;disabled&amp;rdquo; or &amp;ldquo;hidden&amp;rdquo;. If &amp;ldquo;disabled&amp;rdquo;, then the tab is not selectable. If &amp;ldquo;hidden&amp;rdquo;, then the tab is not shown.</source>
          <target state="translated">&amp;ldquo;정상&amp;rdquo;,&amp;ldquo;비활성화&amp;rdquo;또는&amp;ldquo;숨김&amp;rdquo;입니다. &quot;비활성화&quot;되면 탭을 선택할 수 없습니다. &quot;숨겨진&quot;경우 탭이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abd9d70a96769f378e601ed03a344c72fddacf4f" translate="yes" xml:space="preserve">
          <source>Either &lt;em&gt;action&lt;/em&gt; or &lt;em&gt;delayfunc&lt;/em&gt; can raise an exception. In either case, the scheduler will maintain a consistent state and propagate the exception. If an exception is raised by &lt;em&gt;action&lt;/em&gt;, the event will not be attempted in future calls to &lt;a href=&quot;#sched.scheduler.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어느 &lt;em&gt;행동&lt;/em&gt; 이나 &lt;em&gt;delayfunc는&lt;/em&gt; 예외를 발생시킬 수 있습니다. 두 경우 모두 스케줄러는 일관성있는 상태를 유지하고 예외를 전파합니다. &lt;em&gt;action으로&lt;/em&gt; 예외가 발생하면 나중에 &lt;a href=&quot;#sched.scheduler.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 호출에서 이벤트가 시도되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="85c84f61f57bea218ff74b0e009533443082981e" translate="yes" xml:space="preserve">
          <source>Either escapes special characters (permitting you to match characters like &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'?'&lt;/code&gt;, and so forth), or signals a special sequence; special sequences are discussed below.</source>
          <target state="translated">특수 문자를 이스케이프하거나 ( &lt;code&gt;'*'&lt;/code&gt; , &lt;code&gt;'?'&lt;/code&gt; 등과 같은 문자와 일치하도록 허용 함 ) 특수 시퀀스를 표시합니다. 특별한 순서는 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eee7c7fedc41829e794e6532414686d341b604b" translate="yes" xml:space="preserve">
          <source>Either this method or &lt;a href=&quot;#test.support.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; should be used for any tests where a server socket needs to be bound to a particular port for the duration of the test. Which one to use depends on whether the calling code is creating a Python socket, or if an unused port needs to be provided in a constructor or passed to an external program (i.e. the &lt;code&gt;-accept&lt;/code&gt; argument to openssl&amp;rsquo;s s_server mode). Always prefer &lt;a href=&quot;#test.support.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;#test.support.find_unused_port&quot;&gt;&lt;code&gt;find_unused_port()&lt;/code&gt;&lt;/a&gt; where possible. Using a hard coded port is discouraged since it can make multiple instances of the test impossible to run simultaneously, which is a problem for buildbots.</source>
          <target state="translated">테스트 기간 동안 서버 소켓을 특정 포트에 바인딩해야하는 테스트에는 이 메소드 또는 &lt;a href=&quot;#test.support.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt; 사용해야합니다. 사용할 코드는 호출 코드가 Python 소켓을 작성하는지 또는 사용되지 않는 포트를 생성자에 제공 &lt;code&gt;-accept&lt;/code&gt; 또는 외부 프로그램에 전달 해야하는지 (즉, openssl의 s_server 모드에 대한 -accept 인수)에 따라 다릅니다 . 가능하면 &lt;a href=&quot;#test.support.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt; 보다 &lt;a href=&quot;#test.support.find_unused_port&quot;&gt; &lt;code&gt;find_unused_port()&lt;/code&gt; &lt;/a&gt; 항상 선호 하십시오. 하드 코딩 된 포트를 사용하면 테스트의 여러 인스턴스를 동시에 실행할 수 없으므로 빌드 봇에 문제가 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9a6c46c5e94ad5acddfcaefdbb1838daf6a17636" translate="yes" xml:space="preserve">
          <source>Either this method or &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; should be used for any tests where a server socket needs to be bound to a particular port for the duration of the test. Which one to use depends on whether the calling code is creating a Python socket, or if an unused port needs to be provided in a constructor or passed to an external program (i.e. the &lt;code&gt;-accept&lt;/code&gt; argument to openssl&amp;rsquo;s s_server mode). Always prefer &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt;&lt;code&gt;bind_port()&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;#test.support.socket_helper.find_unused_port&quot;&gt;&lt;code&gt;find_unused_port()&lt;/code&gt;&lt;/a&gt; where possible. Using a hard coded port is discouraged since it can make multiple instances of the test impossible to run simultaneously, which is a problem for buildbots.</source>
          <target state="translated">이 메서드 또는 &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt; 는 테스트 기간 동안 서버 소켓을 특정 포트에 바인딩해야하는 모든 테스트에 사용해야합니다. 어떤 것을 사용할 것인지는 호출 코드가 파이썬 소켓을 생성하는지 또는 사용되지 않은 포트가 생성자에서 제공되어야하는지 또는 외부 프로그램에 전달되어야하는지에 따라 다릅니다 (예 : openssl의 s_server 모드에 대한 &lt;code&gt;-accept&lt;/code&gt; 인수). 가능한 경우 항상 &lt;a href=&quot;#test.support.socket_helper.bind_port&quot;&gt; &lt;code&gt;bind_port()&lt;/code&gt; &lt;/a&gt; 보다 &lt;a href=&quot;#test.support.socket_helper.find_unused_port&quot;&gt; &lt;code&gt;find_unused_port()&lt;/code&gt; &lt;/a&gt; 선호 하십시오. 하드 코딩 된 포트를 사용하면 여러 테스트 인스턴스를 동시에 실행할 수 없게되므로 빌드 봇에 문제가 될 수 있으므로 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="595af9f0b2bd2f1aad5e8a611a6b67dcd9fdb296" translate="yes" xml:space="preserve">
          <source>Either type of image is created through either the &lt;code&gt;file&lt;/code&gt; or the &lt;code&gt;data&lt;/code&gt; option (other options are available as well).</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 또는 &lt;code&gt;data&lt;/code&gt; 옵션 중 하나를 통해 이미지 유형이 생성됩니다 (다른 옵션도 사용 가능).</target>
        </trans-unit>
        <trans-unit id="359218794b7e55476802d4e7b22031fcdc11a904" translate="yes" xml:space="preserve">
          <source>Element Objects</source>
          <target state="translated">요소 객체</target>
        </trans-unit>
        <trans-unit id="49534abd221be130bf26afdaca69c9d22709f868" translate="yes" xml:space="preserve">
          <source>Element class. This class defines the Element interface, and provides a reference implementation of this interface.</source>
          <target state="translated">요소 클래스. 이 클래스는 Element 인터페이스를 정의하고이 인터페이스의 참조 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ef0b2c7a0b2591de8486cfbe012dd3bf013c9430" translate="yes" xml:space="preserve">
          <source>Element nodes in the document hierarchy.</source>
          <target state="translated">문서 계층의 요소 노드</target>
        </trans-unit>
        <trans-unit id="f4648a38161abf7ec412ca53076e6858990db678" translate="yes" xml:space="preserve">
          <source>ElementTree Objects</source>
          <target state="translated">ElementTree 객체</target>
        </trans-unit>
        <trans-unit id="4f2ce384320f7363ad9b94cc0a546bdae1eab4d4" translate="yes" xml:space="preserve">
          <source>ElementTree wrapper class. This class represents an entire element hierarchy, and adds some extra support for serialization to and from standard XML.</source>
          <target state="translated">ElementTree 랩퍼 클래스. 이 클래스는 전체 요소 계층 구조를 나타내며 표준 XML과의 직렬화에 대한 추가 지원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e24a4bf20d22559c7e5a0526dfebb54f5104a66b" translate="yes" xml:space="preserve">
          <source>Elements are counted from an &lt;em&gt;iterable&lt;/em&gt; or added-in from another &lt;em&gt;mapping&lt;/em&gt; (or counter). Like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; but adds counts instead of replacing them. Also, the &lt;em&gt;iterable&lt;/em&gt; is expected to be a sequence of elements, not a sequence of &lt;code&gt;(key, value)&lt;/code&gt; pairs.</source>
          <target state="translated">요소는 &lt;em&gt;반복 가능&lt;/em&gt; 하거나 추가 된 다른 &lt;em&gt;매핑&lt;/em&gt; (또는 카운터) 에서 계산됩니다 . &lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 개수를 바꾸지 않고 추가합니다. 또한 &lt;em&gt;iterable&lt;/em&gt; 은 일련의 &lt;code&gt;(key, value)&lt;/code&gt; 쌍이 아닌 일련의 요소 일 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5957fa1f33f3be4329508a3d81ddf845cff5498" translate="yes" xml:space="preserve">
          <source>Elements are counted from an &lt;em&gt;iterable&lt;/em&gt; or initialized from another &lt;em&gt;mapping&lt;/em&gt; (or counter):</source>
          <target state="translated">요소는 &lt;em&gt;iterable&lt;/em&gt; 에서 계산 되거나 다른 &lt;em&gt;매핑&lt;/em&gt; (또는 카운터) 에서 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e16188e6c59f02f989fa3685c7fd0fc9c19161c4" translate="yes" xml:space="preserve">
          <source>Elements are subtracted from an &lt;em&gt;iterable&lt;/em&gt; or from another &lt;em&gt;mapping&lt;/em&gt; (or counter). Like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; but subtracts counts instead of replacing them. Both inputs and outputs may be zero or negative.</source>
          <target state="translated">&lt;em&gt;반복 가능한&lt;/em&gt; 요소 나 다른 &lt;em&gt;매핑&lt;/em&gt; (또는 카운터) 에서 요소를 뺍니다 . &lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 개수를 교체하는 대신 빼기합니다. 입력과 출력 모두 0이거나 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0143fc64324e3d8e5c44dbc294959eb5a7104759" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, the generated combinations will also be unique.</source>
          <target state="translated">요소는 가치가 아닌 위치에 따라 고유 한 것으로 취급됩니다. 따라서 입력 요소가 고유 한 경우 생성 된 조합도 고유합니다.</target>
        </trans-unit>
        <trans-unit id="11dcc2ac3f506948cc124bda3adca41a062af817" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each combination.</source>
          <target state="translated">요소는 가치가 아닌 위치에 따라 고유 한 것으로 취급됩니다. 따라서 입력 요소가 고유 한 경우 각 조합에 반복 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a7b6e8e82fdfd17809cefa633bda0e009bcc17f5" translate="yes" xml:space="preserve">
          <source>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each permutation.</source>
          <target state="translated">요소는 가치가 아닌 위치에 따라 고유 한 것으로 취급됩니다. 따라서 입력 요소가 고유하면 각 순열에 반복 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="34a8d1deb6f308a56f56218b6f5d343ef934119f" translate="yes" xml:space="preserve">
          <source>Elements which are declared to be &lt;code&gt;EMPTY&lt;/code&gt; have this model type.</source>
          <target state="translated">&lt;code&gt;EMPTY&lt;/code&gt; 로 선언 된 요소 는이 모델 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="10f74c250875f4d100fff5cde5ff0835190404c1" translate="yes" xml:space="preserve">
          <source>Elimination of PYO files</source>
          <target state="translated">PYO 파일 제거</target>
        </trans-unit>
        <trans-unit id="6ff0f4a868ef59be803181103a0f8dacda1099dd" translate="yes" xml:space="preserve">
          <source>Ellipsis</source>
          <target state="translated">Ellipsis</target>
        </trans-unit>
        <trans-unit id="ed17628a4f82dc8f7f14625d39bd363df62db888" translate="yes" xml:space="preserve">
          <source>Else &lt;em&gt;MandatoryRelease&lt;/em&gt; records when the feature became part of the language; in releases at or after that, modules no longer need a future statement to use the feature in question, but may continue to use such imports.</source>
          <target state="translated">다른 &lt;em&gt;필수&lt;/em&gt; 기능이 언어의 일부가 된 시점을 기록합니다. 그 이후 또는 이후 릴리스에서 모듈은 더 이상 해당 기능을 사용하기 위해 미래의 진술이 필요하지 않지만 그러한 수입을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84add5b2952787581cb9a8851eef63d1ec75d22b" translate="yes" xml:space="preserve">
          <source>Email</source>
          <target state="translated">Email</target>
        </trans-unit>
        <trans-unit id="da824744005afe1d0c34eee098eaf67872e3d742" translate="yes" xml:space="preserve">
          <source>Emit a short attention sound.</source>
          <target state="translated">짧은주의 소리를 내십시오.</target>
        </trans-unit>
        <trans-unit id="712fe37c31ba2210e87e7f7f3b1bf5e14d866d27" translate="yes" xml:space="preserve">
          <source>Empties the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Used by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">셀의 슬롯 &lt;em&gt;i&lt;/em&gt; 에 포함 된 셀과 비어있는 가변 스토리지를 비 웁니다 . &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt; 문에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ed21ab90fe378dfcb0eca7cdd9be415109ce1c81" translate="yes" xml:space="preserve">
          <source>Empties the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Used by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt;&lt;code&gt;del&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">셀의 슬롯 &lt;em&gt;i&lt;/em&gt; 와 사용 가능한 가변 저장소에 포함 된 셀을 비 웁니다 . &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#del&quot;&gt; &lt;code&gt;del&lt;/code&gt; &lt;/a&gt; 문에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f66f8ef5d271d13742c0b875e964787e7b320e6" translate="yes" xml:space="preserve">
          <source>Empty files are opened and immediately closed; the only time their presence in the list of filenames is noticeable at all is when the last file opened is empty.</source>
          <target state="translated">빈 파일이 열리고 즉시 닫힙니다. 파일 이름 목록에 존재하는 유일한 시간은 마지막으로 열린 파일이 비어있을 때입니다.</target>
        </trans-unit>
        <trans-unit id="989470481eafc77ed997959fad54049224706769" translate="yes" xml:space="preserve">
          <source>Empty iterables are allowed, but acceptance of three empty iterables is platform-dependent. (It is known to work on Unix but not on Windows.) The optional &lt;em&gt;timeout&lt;/em&gt; argument specifies a time-out as a floating point number in seconds. When the &lt;em&gt;timeout&lt;/em&gt; argument is omitted the function blocks until at least one file descriptor is ready. A time-out value of zero specifies a poll and never blocks.</source>
          <target state="translated">빈 이터 러블이 허용되지만 세 개의 빈 이터 러블을 허용하는 것은 플랫폼에 따라 다릅니다. (Unix에서는 작동하지만 Windows에서는 작동하지 않는 것으로 알려져 있습니다.) 선택적 &lt;em&gt;timeout&lt;/em&gt; 인수는 시간 &lt;em&gt;제한을&lt;/em&gt; 부동 소수점 숫자 (초)로 지정합니다. 때 &lt;em&gt;타임 아웃&lt;/em&gt; 인수가 함수 블록을 생략 적어도 하나 개의 파일 기술자가 준비 될 때까지. 시간 제한 값이 0이면 폴을 지정하고 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96fc58d87dcfa6680714e0fc0a204c20e1bc2122" translate="yes" xml:space="preserve">
          <source>Empty matches for the pattern split the string only when not adjacent to a previous empty match.</source>
          <target state="translated">패턴에 대한 빈 일치는 이전 빈 일치에 인접하지 않은 경우에만 문자열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="6eb0779fd09c16502ebd15fb0795bd1835ade77f" translate="yes" xml:space="preserve">
          <source>Empty sequences are allowed, but acceptance of three empty sequences is platform-dependent. (It is known to work on Unix but not on Windows.) The optional &lt;em&gt;timeout&lt;/em&gt; argument specifies a time-out as a floating point number in seconds. When the &lt;em&gt;timeout&lt;/em&gt; argument is omitted the function blocks until at least one file descriptor is ready. A time-out value of zero specifies a poll and never blocks.</source>
          <target state="translated">빈 시퀀스는 허용되지만 3 개의 빈 시퀀스는 플랫폼에 따라 다릅니다. (그것은 유닉스에서 작동하는 것으로 알려져 있지만 Windows에 있습니다.) 옵션 &lt;em&gt;타임 아웃&lt;/em&gt; 인수가 초 부동 소수점 숫자로 시간 제한을 지정합니다. 때 &lt;em&gt;타임 아웃&lt;/em&gt; 인수가 함수 블록을 생략 적어도 하나 개의 파일 기술자가 준비 될 때까지. 시간 제한 값이 0이면 폴링을 지정하고 절대로 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9ca147c86f3511f63e922200d892933735a3ce7" translate="yes" xml:space="preserve">
          <source>Enable &amp;ldquo;passive&amp;rdquo; mode if &lt;em&gt;val&lt;/em&gt; is true, otherwise disable passive mode. Passive mode is on by default.</source>
          <target state="translated">&lt;em&gt;val&lt;/em&gt; 이 true이면 &quot;수동&quot;모드를 활성화 하고, 그렇지 않으면 수동 모드를 비활성화하십시오. 수동 모드는 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="086568da0d78035964a7e9e36aa55f06cd524374" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;asyncio debug mode&lt;/a&gt;. For example, &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; checks for coroutines that were not awaited and logs them.</source>
          <target state="translated">&lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;asyncio 디버그 모드를&lt;/a&gt; 활성화 합니다 . 예를 들어, &lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt; 는 대기 하지 않은 코 루틴을 확인하고 기록합니다.</target>
        </trans-unit>
        <trans-unit id="1a1830a9ad6b230d4772920b444e77e892a7b2c0" translate="yes" xml:space="preserve">
          <source>Enable &lt;em&gt;capability&lt;/em&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5161.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5161&lt;/strong&gt;&lt;/a&gt;). Most capabilities do not need to be enabled. Currently only the &lt;code&gt;UTF8=ACCEPT&lt;/code&gt; capability is supported (see &lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;기능을&lt;/em&gt; 활성화 &lt;em&gt;합니다&lt;/em&gt; ( &lt;a href=&quot;https://tools.ietf.org/html/rfc5161.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5161&lt;/strong&gt;&lt;/a&gt; 참조 ). 대부분의 기능을 활성화 할 필요는 없습니다. 현재 &lt;code&gt;UTF8=ACCEPT&lt;/code&gt; 기능 만 지원됩니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e64969c2a478b0193d345f61f0278bb04e5a5c3d" translate="yes" xml:space="preserve">
          <source>Enable TLS 1.3 post-handshake client authentication. Post-handshake auth is disabled by default and a server can only request a TLS client certificate during the initial handshake. When enabled, a server may request a TLS client certificate at any time after the handshake.</source>
          <target state="translated">TLS 1.3 사후 핸드 셰이크 클라이언트 인증을 사용하십시오. 핸드 셰이크 후 인증은 기본적으로 비활성화되어 있으며 서버는 초기 핸드 셰이크 중 TLS 클라이언트 인증서 만 요청할 수 있습니다. 사용 가능한 경우, 서버는 핸드 셰이크 후 언제라도 TLS 클라이언트 인증서를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b01e8ffd8306cea3683a91d93d4207b25a77ccd" translate="yes" xml:space="preserve">
          <source>Enable a server to accept connections. If &lt;em&gt;backlog&lt;/em&gt; is specified, it must be at least 0 (if it is lower, it is set to 0); it specifies the number of unaccepted connections that the system will allow before refusing new connections. If not specified, a default reasonable value is chosen.</source>
          <target state="translated">서버가 연결을 수락하도록합니다. &lt;em&gt;백 로그&lt;/em&gt; 가 지정된 경우 최소 0이어야합니다 (낮 으면 0으로 설정 됨). 새 연결을 거부하기 전에 시스템에서 허용 할 수없는 허용 연결 수를 지정합니다. 지정하지 않으면 적절한 기본 값이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="971896ffb7e3ebd15d517c1f88efeb1e585f6fb1" translate="yes" xml:space="preserve">
          <source>Enable automatic garbage collection.</source>
          <target state="translated">자동 가비지 콜렉션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eacc85becdea9d34a7f0f87cf3c7f4659f303bdb" translate="yes" xml:space="preserve">
          <source>Enable keyboard traversal for a toplevel window containing this notebook.</source>
          <target state="translated">이 노트북이 포함 된 최상위 창에 키보드 탐색을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eeb17b55c47c064f0c885ac6edcfc504029b5711" translate="yes" xml:space="preserve">
          <source>Enable or disable automatic calls to &lt;code&gt;add_history()&lt;/code&gt; when reading input via readline. The &lt;em&gt;enabled&lt;/em&gt; argument should be a Boolean value that when true, enables auto history, and that when false, disables auto history.</source>
          <target state="translated">readline을 통해 입력을 읽을 때 &lt;code&gt;add_history()&lt;/code&gt; 자동 호출을 활성화 또는 비활성화합니다 . &lt;em&gt;활성화&lt;/em&gt; 인수는 사실, 자동 기록을 가능하게하는 부울 값, 그리고 그 때 거짓, 비활성화 자동 기록한다.</target>
        </trans-unit>
        <trans-unit id="26a73bd72aa4da39ed18ebf87aa69760fe6a344f" translate="yes" xml:space="preserve">
          <source>Enable or disable the debug mode.</source>
          <target state="translated">디버그 모드를 활성화 또는 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="befd2646a620e600335d49ff83a819d286b6b876" translate="yes" xml:space="preserve">
          <source>Enable stricter semantics for mixing floats and Decimals.</source>
          <target state="translated">float와 Decimals를 혼합하기 위해 더 엄격한 의미를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f9377cf43de0047335652dca6650eb8fd8f870ef" translate="yes" xml:space="preserve">
          <source>Enable the breakpoints specified.</source>
          <target state="translated">지정된 중단 점을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="78484a7c1326bcc3e5583395ac67b8a7c9642313" translate="yes" xml:space="preserve">
          <source>Enable the fault handler: install handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt; and &lt;code&gt;SIGILL&lt;/code&gt; signals to dump the Python traceback. If &lt;em&gt;all_threads&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, produce tracebacks for every running thread. Otherwise, dump only the current thread.</source>
          <target state="translated">오류 처리기를 활성화하십시오. &lt;code&gt;SIGSEGV&lt;/code&gt; , &lt;code&gt;SIGFPE&lt;/code&gt; , &lt;code&gt;SIGABRT&lt;/code&gt; , &lt;code&gt;SIGBUS&lt;/code&gt; 및 &lt;code&gt;SIGILL&lt;/code&gt; 신호에 대한 처리기를 설치 하여 Python 추적 백을 덤프하십시오. &lt;em&gt;all_threads&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우 실행중인 모든 스레드에 대해 역 추적을 생성하십시오. 그렇지 않으면 현재 스레드 만 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="00219e9a1b9ff26ad0b40fd3c6c39fe8683fdcc9" translate="yes" xml:space="preserve">
          <source>Enables CAN FD support in a CAN_RAW socket. This is disabled by default. This allows your application to send both CAN and CAN FD frames; however, you must accept both CAN and CAN FD frames when reading from the socket.</source>
          <target state="translated">CAN_RAW 소켓에서 CAN FD 지원을 활성화합니다. 기본적으로 비활성화되어 있습니다. 이를 통해 어플리케이션은 CAN 및 CAN FD 프레임을 모두 전송할 수 있습니다. 그러나 소켓에서 읽을 때는 CAN 및 CAN FD 프레임을 모두 수용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1710fc7505c79b54673902cffbe395489ac698dc" translate="yes" xml:space="preserve">
          <source>Enables support for &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; style type comments (&lt;code&gt;# type: &amp;lt;type&amp;gt;&lt;/code&gt;, &lt;code&gt;# type: ignore &amp;lt;stuff&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; 스타일 유형 주석 지원을 활성화합니다 ( &lt;code&gt;# type: &amp;lt;type&amp;gt;&lt;/code&gt; , &lt;code&gt;# type: ignore &amp;lt;stuff&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="433b11bbca8680e3b1eb83dc619dac219f09fcd3" translate="yes" xml:space="preserve">
          <source>Enables support for top-level &lt;code&gt;await&lt;/code&gt;, &lt;code&gt;async for&lt;/code&gt;, &lt;code&gt;async with&lt;/code&gt; and async comprehensions.</source>
          <target state="translated">최상위 수준의 &lt;code&gt;await&lt;/code&gt; , &lt;code&gt;async for&lt;/code&gt; , &lt;code&gt;async with&lt;/code&gt; 및 async 이해를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b48d635867970782604405e57297e025f0d6a89c" translate="yes" xml:space="preserve">
          <source>Enables workarounds for various bugs present in other SSL implementations. This option is set by default. It does not necessarily set the same flags as OpenSSL&amp;rsquo;s &lt;code&gt;SSL_OP_ALL&lt;/code&gt; constant.</source>
          <target state="translated">다른 SSL 구현에 존재하는 다양한 버그에 대한 해결 방법을 활성화합니다. 이 옵션은 기본적으로 설정되어 있습니다. 반드시 OpenSSL의 &lt;code&gt;SSL_OP_ALL&lt;/code&gt; 상수 와 동일한 플래그를 설정하지 않아도됩니다 .</target>
        </trans-unit>
        <trans-unit id="1cdca8499ba0f0ffddfe7036f37fdfd9bd58cea9" translate="yes" xml:space="preserve">
          <source>Enabling debug mode</source>
          <target state="translated">디버그 모드 활성화</target>
        </trans-unit>
        <trans-unit id="07af2f6e3bb3a4e462e895058fcbc45334a604b2" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;em&gt;allow_dotted_names&lt;/em&gt; option allows intruders to access your module&amp;rsquo;s global variables and may allow intruders to execute arbitrary code on your machine. Only use this example only within a secure, closed network.</source>
          <target state="translated">&lt;em&gt;allow_dotted_names&lt;/em&gt; 옵션을 활성화 하면 침입자가 모듈의 전역 변수에 액세스 할 수 있으며 침입자가 컴퓨터에서 임의의 코드를 실행할 수 있습니다. 이 예제는 안전하고 폐쇄 된 네트워크 내에서만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c7b1af61e74fb0fcb6656cb2909de6d3c9f228d8" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;em&gt;allow_dotted_names&lt;/em&gt; option allows intruders to access your module&amp;rsquo;s global variables and may allow intruders to execute arbitrary code on your machine. Only use this option on a secure, closed network.</source>
          <target state="translated">&lt;em&gt;allow_dotted_names&lt;/em&gt; 옵션을 활성화 하면 침입자가 모듈의 전역 변수에 액세스 할 수 있으며 침입자가 컴퓨터에서 임의의 코드를 실행할 수 있습니다. 안전한 비공개 네트워크에서만이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e0dc0c7e9924417b53fe768dcbe06985665e6209" translate="yes" xml:space="preserve">
          <source>Enabling the Python Development Mode displays a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; warning:</source>
          <target state="translated">Python 개발 모드를 활성화하면 &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt; 경고 가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2e7fa36c7837dad6cdfdadeb04e867884476ccf" translate="yes" xml:space="preserve">
          <source>Enabling the Python Development Mode is similar to the following command, but with additional effects described below:</source>
          <target state="translated">Python 개발 모드를 활성화하는 것은 다음 명령과 유사하지만 아래에 설명 된 추가 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a19099a826dd8a9592dea4c03d95ca189ffd83fd" translate="yes" xml:space="preserve">
          <source>Encapsulate an XML error or warning. This class can contain basic error or warning information from either the XML parser or the application: it can be subclassed to provide additional functionality or to add localization. Note that although the handlers defined in the &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt; interface receive instances of this exception, it is not required to actually raise the exception &amp;mdash; it is also useful as a container for information.</source>
          <target state="translated">XML 오류 또는 경고를 캡슐화하십시오. 이 클래스에는 XML 파서 또는 응용 프로그램의 기본 오류 또는 경고 정보가 포함될 수 있습니다. 추가 기능을 제공하거나 지역화를 추가하기 위해 서브 클래 싱 될 수 있습니다. &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt; 인터페이스에 정의 된 핸들러 는이 예외의 인스턴스를 수신 하지만 실제로 예외를 발생시킬 필요는 없습니다. 또한 정보의 컨테이너로도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7b89d059b48fe1d6ce07ae4ebf8b9b1f65d5439b" translate="yes" xml:space="preserve">
          <source>Encapsulates the asynchronous execution of a callable. &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; instances are created by &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt;&lt;code&gt;Executor.submit()&lt;/code&gt;&lt;/a&gt; and should not be created directly except for testing.</source>
          <target state="translated">호출 가능 항목의 비동기 실행을 캡슐화합니다. &lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 인스턴스는 &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt; &lt;code&gt;Executor.submit()&lt;/code&gt; &lt;/a&gt; 의해 생성되며 테스트를 제외하고 직접 생성해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3fc3b238ce3cff3109f5fca3d21d66f397859fba" translate="yes" xml:space="preserve">
          <source>Encapsulation of the information needed by the &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to read entities.</source>
          <target state="translated">엔티티를 읽기 위해 &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 에 필요한 정보를 캡슐화합니다 .</target>
        </trans-unit>
        <trans-unit id="14f77877197d80a81f16a011d2af74a80b57468e" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes preserve the literal value of all characters within the quotes;</source>
          <target state="translated">따옴표로 묶는 문자는 따옴표 안에있는 모든 문자의 리터럴 값을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="88ad97909485c7dd6989f04a4e8fcd2dc6f0fac1" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes which are not part of &lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt;&lt;code&gt;escapedquotes&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;&quot;'&quot;&lt;/code&gt;) preserve the literal value of all characters within the quotes;</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt; &lt;code&gt;escapedquotes&lt;/code&gt; &lt;/a&gt; 된 따옴표의 일부가 아닌 따옴표로 묶는 문자 (예 : &lt;code&gt;&quot;'&quot;&lt;/code&gt; )는 따옴표 안에있는 모든 문자의 리터럴 값을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="d4821252d35584af9326a6e7f60f1d73b77d48c3" translate="yes" xml:space="preserve">
          <source>Enclosing characters in quotes which are part of &lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt;&lt;code&gt;escapedquotes&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;'&quot;'&lt;/code&gt;) preserves the literal value of all characters within the quotes, with the exception of the characters mentioned in &lt;a href=&quot;#shlex.shlex.escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt;. The escape characters retain its special meaning only when followed by the quote in use, or the escape character itself. Otherwise the escape character will be considered a normal character.</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex.escapedquotes&quot;&gt; &lt;code&gt;escapedquotes&lt;/code&gt; 의&lt;/a&gt; 일부인 따옴표로 묶은 문자 (예 : &lt;code&gt;'&quot;'&lt;/code&gt; )는 &lt;a href=&quot;#shlex.shlex.escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt; 에서 언급 된 문자를 제외하고 따옴표 내 모든 문자의 리터럴 값을 유지합니다 . 이스케이프 문자는 따옴표 뒤에 오는 경우에만 특별한 의미를 유지합니다. 또는 이스케이프 문자 자체를 사용하지 않으면 이스케이프 문자가 일반 문자로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="8e3ef7fb5bbf1067d36ca7d114791bb1ecfe2094" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the URL- and filesystem-safe alphabet, which substitutes &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; in the standard Base64 alphabet, and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. The result can still contain &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">인코딩은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;객체 같은 바이트 &lt;/a&gt;&lt;em&gt;들&lt;/em&gt; URL- 및 파일 시스템 안전 알파벳, 대체품을 사용 &lt;code&gt;-&lt;/code&gt; 대신 &lt;code&gt;+&lt;/code&gt; 와 &lt;code&gt;_&lt;/code&gt; 대신 &lt;code&gt;/&lt;/code&gt; 표준을 Base64 알파벳 및 부호화 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; . 결과에는 여전히 &lt;code&gt;=&lt;/code&gt; 가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfbd8dc1abad46fd0071384996480ac840443421" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the standard Base64 alphabet and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인코딩은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 같은 객체 &lt;/a&gt;&lt;em&gt;의이&lt;/em&gt; 표준 Base64로 알파벳을 사용하여 인코딩 된 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84e671106e5fd09bcba9090332501ac45ae84724" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt;&lt;em&gt;filename&lt;/em&gt; to the filesystem encoding with &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler, or &lt;code&gt;'strict'&lt;/code&gt; on Windows; return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">인코딩 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 &lt;/a&gt;&lt;em&gt;이름&lt;/em&gt; 을 가진 파일 시스템 인코딩 &lt;code&gt;'surrogateescape'&lt;/code&gt; 오류 처리기, 또는 &lt;code&gt;'strict'&lt;/code&gt; Windows에서; &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 변경하지 않고 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="05fe0e75fe79f4d8975b5cd3a8909af0029ef6cf" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the URL- and filesystem-safe alphabet, which substitutes &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; in the standard Base64 alphabet, and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. The result can still contain &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the URL- and filesystem-safe alphabet, which substitutes &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; in the standard Base64 alphabet, and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;. The result can still contain &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ba8ada5c22b1dea8030be84eb23548ca6cf244" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the standard Base64 alphabet and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using the standard Base64 alphabet and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="076372c7ed27099e4d1463b4eb578995770fc7f3" translate="yes" xml:space="preserve">
          <source>Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt;&lt;em&gt;filename&lt;/em&gt; to the filesystem encoding with &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler, or &lt;code&gt;'strict'&lt;/code&gt; on Windows; return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">Encode &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt;&lt;em&gt;filename&lt;/em&gt; to the filesystem encoding with &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler, or &lt;code&gt;'strict'&lt;/code&gt; on Windows; return &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; unchanged.</target>
        </trans-unit>
        <trans-unit id="ffdf7198a76c3276541a5db4c0b0209534929dca" translate="yes" xml:space="preserve">
          <source>Encode &lt;em&gt;s&lt;/em&gt; using the &lt;code&gt;ASCII&lt;/code&gt; codec and the &lt;code&gt;surrogateescape&lt;/code&gt; error handler, and pass it to the &lt;em&gt;write&lt;/em&gt; method of the &lt;em&gt;outfp&lt;/em&gt; passed to the &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s constructor.</source>
          <target state="translated">인코딩 &lt;em&gt;S&lt;/em&gt; 은 USING &lt;code&gt;ASCII&lt;/code&gt; 의 코덱과 &lt;code&gt;surrogateescape&lt;/code&gt; 의 오류 처리기 및로 패스 &lt;em&gt;기록&lt;/em&gt; 의 방법 &lt;em&gt;outfp&lt;/em&gt; 받는 전달 &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt; 의 생성자.</target>
        </trans-unit>
        <trans-unit id="6e685faa81657b0e3f36d4d3a4f45234790e538f" translate="yes" xml:space="preserve">
          <source>Encode a message header into an RFC-compliant format, possibly wrapping long lines and encapsulating non-ASCII parts in base64 or quoted-printable encodings.</source>
          <target state="translated">메시지 헤더를 RFC 호환 형식으로 인코딩하여 긴 행을 래핑하고 비 ASCII 부분을 base64 또는 인용 인쇄 가능 인코딩으로 캡슐화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba9ada320fca1e8cb2142e1346d247f9f806f542" translate="yes" xml:space="preserve">
          <source>Encode and decode MIME base64 data</source>
          <target state="translated">MIME base64 데이터 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="7ab581d597f3bf448a02f8351b29151a923e6e6f" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using Ascii85 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인 코드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트 형 객체 &lt;/a&gt;&lt;em&gt;b를&lt;/em&gt; ASCII85를 사용하여 인코딩 된 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d11216cbf678c1763da91fd2fb9b0f745134c5fd" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using base85 (as used in e.g. git-style binary diffs) and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">base85를 사용하여 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​같은 객체 &lt;/a&gt;&lt;em&gt;b&lt;/em&gt; 를 인코딩하고 (예 : git-style binary diffs에 사용) 인코딩 된 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf1fdba47a42f7a6afd6ab89d4bca80118d00ef3" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base16 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인 코드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 같은 객체 &lt;/a&gt;&lt;em&gt;의&lt;/em&gt; 사용을 Base16 인코딩 된 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d56aa77069a6187dbe9ae10ef72b7abeab315a8e" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base32 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인 코드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 같은 객체 &lt;/a&gt;&lt;em&gt;의&lt;/em&gt; 사용을 Base32 인코딩 된 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="635ad9b339c141c690488f6ac82847a524ee904f" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base64 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인 코드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 같은 객체 &lt;/a&gt;&lt;em&gt;의&lt;/em&gt; 사용가 base64 인코딩 된 반환 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83850d70b6021bfeec0e6a1e79a7dc069defb565" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt;, which can contain arbitrary binary data, and return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the base64-encoded data, with newlines (&lt;code&gt;b'\n'&lt;/code&gt;) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">인 코드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트 형 객체 &lt;/a&gt;&lt;em&gt;들&lt;/em&gt; 임의의 이진 데이터를 포함하고, 복귀 할 수있는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 바꿈과 함께 base64 인코딩 된 데이터를 포함하는 ( &lt;code&gt;b'\n'&lt;/code&gt; )에 삽입 출력마다 76 바이트 후에 후행 개행 있다는 것을 보장 같은 당 &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</target>
        </trans-unit>
        <trans-unit id="6c24483d2a7551dba9ca85707c56b2a4d3adba2a" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using Ascii85 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using Ascii85 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="286d7e815fd0189e292a2ad6beea18b707ea6d62" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using base85 (as used in e.g. git-style binary diffs) and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;b&lt;/em&gt; using base85 (as used in e.g. git-style binary diffs) and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="730735ea1ed7145d328c5f5cd530ec18fa4e9a18" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base16 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base16 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c7841a8d4a266107d80bd65cf7027f070a979143" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base32 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base32 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c1ccfd30475fd6bdfe8a78f4b61b4f29aff9304b" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base64 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; using Base64 and return the encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="11789d869c4dcccbb878dde1c467ecd5806dab44" translate="yes" xml:space="preserve">
          <source>Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt;, which can contain arbitrary binary data, and return &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing the base64-encoded data, with newlines (&lt;code&gt;b'\n'&lt;/code&gt;) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">Encode the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;&lt;em&gt;s&lt;/em&gt;, which can contain arbitrary binary data, and return &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; containing the base64-encoded data, with newlines ( &lt;code&gt;b'\n'&lt;/code&gt; ) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</target>
        </trans-unit>
        <trans-unit id="ae13ec2bd5725d886fbbd75e44ed1df1c2ae02ed" translate="yes" xml:space="preserve">
          <source>Encode the contents of the &lt;em&gt;input&lt;/em&gt; file and write the resulting quoted-printable data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;binary file objects&lt;/a&gt;. &lt;em&gt;quotetabs&lt;/em&gt;, a non-optional flag which controls whether to encode embedded spaces and tabs; when true it encodes such embedded whitespace, and when false it leaves them unencoded. Note that spaces and tabs appearing at the end of lines are always encoded, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;header&lt;/em&gt; is a flag which controls if spaces are encoded as underscores as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;입력&lt;/em&gt; 파일 의 내용을 인코딩하고 인용 된 인쇄 가능한 결과 데이터를 &lt;em&gt;출력&lt;/em&gt; 파일에 씁니다 . &lt;em&gt;입력&lt;/em&gt; 및 &lt;em&gt;출력&lt;/em&gt; 은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;이진 파일 객체&lt;/a&gt; 여야 합니다 . &lt;em&gt;인용&lt;/em&gt; 공간 (embedded spaces)과 탭 (tab)의 인코딩 여부를 제어하는 ​​비 선택적 플래그 인 &lt;em&gt;quotetabs&lt;/em&gt; true이면 이러한 포함 된 공백을 인코딩하고 false이면 인코딩되지 않은 상태로 둡니다. 줄 끝에 나타나는 공백과 탭은 항상 &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521에&lt;/strong&gt;&lt;/a&gt; 따라 인코딩됩니다 . &lt;em&gt;헤더&lt;/em&gt; 는 &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522에&lt;/strong&gt;&lt;/a&gt; 따라 공백이 밑줄로 인코딩되는지 여부를 제어하는 ​​플래그입니다 .</target>
        </trans-unit>
        <trans-unit id="ddb0a5f7f449a827c30ca94d3c06bf83c01065e9" translate="yes" xml:space="preserve">
          <source>Encode the contents of the &lt;em&gt;input&lt;/em&gt; file and write the resulting quoted-printable data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;binary file objects&lt;/a&gt;. &lt;em&gt;quotetabs&lt;/em&gt;, a non-optional flag which controls whether to encode embedded spaces and tabs; when true it encodes such embedded whitespace, and when false it leaves them unencoded. Note that spaces and tabs appearing at the end of lines are always encoded, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;header&lt;/em&gt; is a flag which controls if spaces are encoded as underscores as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Encode the contents of the &lt;em&gt;input&lt;/em&gt; file and write the resulting quoted-printable data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;binary file objects&lt;/a&gt;. &lt;em&gt;quotetabs&lt;/em&gt;, a non-optional flag which controls whether to encode embedded spaces and tabs; when true it encodes such embedded whitespace, and when false it leaves them unencoded. Note that spaces and tabs appearing at the end of lines are always encoded, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;header&lt;/em&gt; is a flag which controls if spaces are encoded as underscores as per &lt;a href=&quot;https://tools.ietf.org/html/rfc1522.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1522&lt;/strong&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6b1af585911b3e2c2490aef5a95b4109bcbec15d" translate="yes" xml:space="preserve">
          <source>Encode the contents of the binary &lt;em&gt;input&lt;/em&gt; file and write the resulting base64 encoded data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. &lt;em&gt;input&lt;/em&gt; will be read until &lt;code&gt;input.read()&lt;/code&gt; returns an empty bytes object. &lt;a href=&quot;#base64.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; inserts a newline character (&lt;code&gt;b'\n'&lt;/code&gt;) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">이진 &lt;em&gt;입력&lt;/em&gt; 파일 의 내용을 인코딩하고 결과 base64로 인코딩 된 데이터를 &lt;em&gt;출력&lt;/em&gt; 파일에 씁니다 . &lt;em&gt;입력&lt;/em&gt; 및 &lt;em&gt;출력&lt;/em&gt; 은 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;파일 객체&lt;/a&gt; 여야 합니다 . &lt;code&gt;input.read()&lt;/code&gt; 가 빈 바이트 객체를 반환 할 때까지 &lt;em&gt;입력&lt;/em&gt; 을 읽습니다 . &lt;a href=&quot;#base64.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; 는 출력의 76 바이트마다 줄 바꿈 문자 ( &lt;code&gt;b'\n'&lt;/code&gt; )를 삽입 할 뿐만 아니라 &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME)에 따라 출력이 항상 줄 바꿈으로 끝나도록합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b52a84f90bd01e427f867044644866c0976f8b2" translate="yes" xml:space="preserve">
          <source>Encode the contents of the binary &lt;em&gt;input&lt;/em&gt; file and write the resulting base64 encoded data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. &lt;em&gt;input&lt;/em&gt; will be read until &lt;code&gt;input.read()&lt;/code&gt; returns an empty bytes object. &lt;a href=&quot;#base64.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; inserts a newline character (&lt;code&gt;b'\n'&lt;/code&gt;) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</source>
          <target state="translated">Encode the contents of the binary &lt;em&gt;input&lt;/em&gt; file and write the resulting base64 encoded data to the &lt;em&gt;output&lt;/em&gt; file. &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. &lt;em&gt;input&lt;/em&gt; will be read until &lt;code&gt;input.read()&lt;/code&gt; returns an empty bytes object. &lt;a href=&quot;#base64.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; inserts a newline character ( &lt;code&gt;b'\n'&lt;/code&gt; ) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt; (MIME).</target>
        </trans-unit>
        <trans-unit id="5ece4908e842d1a57462d3e13321736479cca5fc" translate="yes" xml:space="preserve">
          <source>Encode the given object, &lt;em&gt;o&lt;/em&gt;, and yield each string representation as available. For example:</source>
          <target state="translated">지정된 객체 &lt;em&gt;o를&lt;/em&gt; 인코딩하고 사용 가능한 각 문자열 표현을 생성합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4edd62a7f69a53a1d9591005cca6ad7e417e11cf" translate="yes" xml:space="preserve">
          <source>Encode the string &lt;em&gt;s&lt;/em&gt; according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;. Optional &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;language&lt;/em&gt;, if given is the character set name and language name to use. If neither is given, &lt;em&gt;s&lt;/em&gt; is returned as-is. If &lt;em&gt;charset&lt;/em&gt; is given but &lt;em&gt;language&lt;/em&gt; is not, the string is encoded using the empty string for &lt;em&gt;language&lt;/em&gt;.</source>
          <target state="translated">문자열 인코딩 &lt;em&gt;들&lt;/em&gt; 에 따라 &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; . 선택적 &lt;em&gt;문자 세트&lt;/em&gt; 및 &lt;em&gt;언어 (&lt;/em&gt; 제공된 경우 사용할 문자 세트 이름 및 언어 이름) 둘 다 지정하지 않으면 &lt;em&gt;s&lt;/em&gt; 는있는 그대로 반환됩니다. 경우 &lt;em&gt;캐릭터 세트가&lt;/em&gt; 주어 있지만 &lt;em&gt;언어가&lt;/em&gt; 아닌, 문자열에 대한 빈 문자열을 사용하여 인코딩되는 &lt;em&gt;언어를&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e8df3651ff60e834a39b4df93aa682f9e7023628" translate="yes" xml:space="preserve">
          <source>Encoder / decoder</source>
          <target state="translated">인코더 / 디코더</target>
        </trans-unit>
        <trans-unit id="0b2560b8670c5d6b00522cd4ae4b4d4307d0b2be" translate="yes" xml:space="preserve">
          <source>Encoders and Decoders</source>
          <target state="translated">인코더 및 디코더</target>
        </trans-unit>
        <trans-unit id="d71cfe7f4cafe8422a37c04504b23989f4687ef0" translate="yes" xml:space="preserve">
          <source>Encodes &lt;em&gt;obj&lt;/em&gt; using the codec registered for &lt;em&gt;encoding&lt;/em&gt;.</source>
          <target state="translated">인코딩에 등록 된 코덱을 사용하여 &lt;em&gt;obj&lt;/em&gt; 를 &lt;em&gt;인코딩&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5a0794f1f14ae2870d08446eefc407ddf1f0233a" translate="yes" xml:space="preserve">
          <source>Encodes &lt;em&gt;object&lt;/em&gt; (taking the current state of the encoder into account) and returns the resulting encoded object. If this is the last call to &lt;a href=&quot;#codecs.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;final&lt;/em&gt; must be true (the default is false).</source>
          <target state="translated">&lt;em&gt;객체를&lt;/em&gt; 인코딩 하고 (엔코더의 현재 상태를 고려하여) 결과 인코딩 된 객체를 반환합니다. 이것이 &lt;a href=&quot;#codecs.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; final에&lt;/em&gt; 대한 마지막 호출 인 경우 true 여야합니다 (기본값은 false).</target>
        </trans-unit>
        <trans-unit id="43b6fc9174410620829b5e6f78b9b2c8513e41c1" translate="yes" xml:space="preserve">
          <source>Encodes the facility and priority into an integer. You can pass in strings or integers - if strings are passed, internal mapping dictionaries are used to convert them to integers.</source>
          <target state="translated">기능과 우선 순위를 정수로 인코딩합니다. 문자열이나 정수를 전달할 수 있습니다. 문자열이 전달되면 내부 매핑 사전을 사용하여 정수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="378f8c352c46252bbb75391a25357f76d573bd74" translate="yes" xml:space="preserve">
          <source>Encodes the object &lt;em&gt;input&lt;/em&gt; and returns a tuple (output object, length consumed). For instance, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; converts a string object to a bytes object using a particular character set encoding (e.g., &lt;code&gt;cp1252&lt;/code&gt; or &lt;code&gt;iso-8859-1&lt;/code&gt;).</source>
          <target state="translated">객체 &lt;em&gt;입력을&lt;/em&gt; 인코딩하고 튜플 (출력 객체, 소비 된 길이)을 반환합니다. 예를 들어, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;텍스트 인코딩&lt;/a&gt; 은 특정 문자 세트 인코딩 (예 : &lt;code&gt;cp1252&lt;/code&gt; 또는 &lt;code&gt;iso-8859-1&lt;/code&gt; )을 사용하여 문자열 객체를 바이트 객체로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a23bc0a6d8752d25efb2c617bc68c6592e8d47d2" translate="yes" xml:space="preserve">
          <source>Encodes the object &lt;em&gt;input&lt;/em&gt; and returns a tuple (output object, length consumed). For instance, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; converts a string object to a bytes object using a particular character set encoding (e.g., &lt;code&gt;cp1252&lt;/code&gt; or &lt;code&gt;iso-8859-1&lt;/code&gt;).</source>
          <target state="translated">Encodes the object &lt;em&gt;input&lt;/em&gt; and returns a tuple (output object, length consumed). For instance, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; converts a string object to a bytes object using a particular character set encoding (e.g., &lt;code&gt;cp1252&lt;/code&gt; or &lt;code&gt;iso-8859-1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fc1b7b9683d09c85651ce4de2401dc8d304b150a" translate="yes" xml:space="preserve">
          <source>Encodes the payload into base64 form and sets the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to &lt;code&gt;base64&lt;/code&gt;. This is a good encoding to use when most of your payload is unprintable data since it is a more compact form than quoted-printable. The drawback of base64 encoding is that it renders the text non-human readable.</source>
          <target state="translated">페이로드를 base64 형식 &lt;em&gt;으로 인코딩&lt;/em&gt; 하고 &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; 헤더를 &lt;code&gt;base64&lt;/code&gt; 로 설정 합니다. 이것은 페이로드가 대부분 인쇄 할 수없는 데이터 일 때 사용하기에 좋은 인코딩입니다. 따옴표로 인쇄 할 수있는 것보다 더 간결한 형식이기 때문입니다. base64 인코딩의 단점은 텍스트를 사람이 읽을 수 없도록 렌더링한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="95c8e0549c3213a2dda1d9312f81c01e867a1e92" translate="yes" xml:space="preserve">
          <source>Encodes the payload into quoted-printable form and sets the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to &lt;code&gt;quoted-printable&lt;/code&gt;&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. This is a good encoding to use when most of your payload is normal printable data, but contains a few unprintable characters.</source>
          <target state="translated">페이로드를 인용 인쇄 가능한 양식 &lt;em&gt;으로 인코딩&lt;/em&gt; 하고 &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; 헤더를 &lt;code&gt;quoted-printable&lt;/code&gt; &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1로 설정&lt;/a&gt; 합니다. 이것은 대부분의 페이로드가 인쇄 가능한 일반 데이터이지만 인쇄 할 수없는 문자가 몇 개있을 때 사용하기에 적합한 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="596bb52694c422af5f31e595be194a5b80ef5824" translate="yes" xml:space="preserve">
          <source>Encoding basic Python object hierarchies:</source>
          <target state="translated">기본 파이썬 객체 계층 인코딩 :</target>
        </trans-unit>
        <trans-unit id="e01623560da289b520db5d6a7d88c0bbc24861ce" translate="yes" xml:space="preserve">
          <source>Encoding of PalmOS 3.5.</source>
          <target state="translated">PalmOS 3.5 인코딩.</target>
        </trans-unit>
        <trans-unit id="b04bd66c21e22fbff9114ec0c6134bbca1a0b6a8" translate="yes" xml:space="preserve">
          <source>Encoding suitable as the contents of a Unicode literal in ASCII-encoded Python source code, except that quotes are not escaped. Decode from Latin-1 source code. Beware that Python source code actually uses UTF-8 by default.</source>
          <target state="translated">따옴표가 이스케이프되지 않는 것을 제외하고 ASCII로 인코딩 된 Python 소스 코드의 유니 코드 리터럴 내용으로 적합한 인코딩. Latin-1 소스 코드에서 디코딩하십시오. 파이썬 소스 코드는 실제로 기본적으로 UTF-8을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7aec5e156e6be9b6aed99321306edff96823d8f5" translate="yes" xml:space="preserve">
          <source>Encoding used to encode method arguments (Unicode strings and characters). The encoding attribute is inherited from the parent window when a subwindow is created, for example with &lt;a href=&quot;#curses.window.subwin&quot;&gt;&lt;code&gt;window.subwin()&lt;/code&gt;&lt;/a&gt;. By default, the locale encoding is used (see &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">메소드 인수를 인코딩하는 데 사용되는 인코딩 (유니 코드 문자열 및 문자). 인코딩 속성은 하위 창을 만들 때 부모 창에서 상속됩니다 &lt;a href=&quot;#curses.window.subwin&quot;&gt; &lt;code&gt;window.subwin()&lt;/code&gt; &lt;/a&gt; 예 : window.subwin ()) . 기본적으로 로케일 인코딩이 사용됩니다 ( &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1a47ec39576a907fb4fc37fec210dc585edad95c" translate="yes" xml:space="preserve">
          <source>Encodings and Unicode</source>
          <target state="translated">인코딩 및 유니 코드</target>
        </trans-unit>
        <trans-unit id="edf16238133674f34dc062d2161f4e728de8384b" translate="yes" xml:space="preserve">
          <source>Encodings are first looked up in the registry&amp;rsquo;s cache. If not found, the list of registered search functions is scanned. If no &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object is found, a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; is raised. Otherwise, the &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object is stored in the cache and returned to the caller.</source>
          <target state="translated">인코딩은 먼저 레지스트리 캐시에서 조회됩니다. 찾을 수 없으면 등록 된 검색 기능 목록이 스캔됩니다. &lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt; 개체가 없으면 &lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 그렇지 않으면 &lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt; 개체가 캐시에 저장되어 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="630b425d9a00bb04751b2932f13d862908b045cf" translate="yes" xml:space="preserve">
          <source>Encrypted password</source>
          <target state="translated">암호화 된 비밀번호</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="1922f8549c83f9841a0a3a96665a811403626eb9" translate="yes" xml:space="preserve">
          <source>End of medium</source>
          <target state="translated">매체의 끝</target>
        </trans-unit>
        <trans-unit id="4de459b167bc17b3a0e6bbfc5dba938d1d966746" translate="yes" xml:space="preserve">
          <source>End of text</source>
          <target state="translated">텍스트 끝</target>
        </trans-unit>
        <trans-unit id="8c7f307345f3f9f062b9e039589289044820b04a" translate="yes" xml:space="preserve">
          <source>End of transmission</source>
          <target state="translated">전송 끝</target>
        </trans-unit>
        <trans-unit id="b750001d7ab130d7ac487cd2ca42bd5cd9f92224" translate="yes" xml:space="preserve">
          <source>End the scope of a prefix-URI mapping.</source>
          <target state="translated">접두사 URI 매핑 범위를 끝냅니다.</target>
        </trans-unit>
        <trans-unit id="96a5fa3659b07bd3bd2f4d5beb5509f96a53c4a4" translate="yes" xml:space="preserve">
          <source>End transmission block</source>
          <target state="translated">전송 블록 종료</target>
        </trans-unit>
        <trans-unit id="e7a088c0208f7d8311fb5b3d1e0349a153b3d9ab" translate="yes" xml:space="preserve">
          <source>Engineering notation has an exponent which is a multiple of 3. This can leave up to 3 digits to the left of the decimal place and may require the addition of either one or two trailing zeros.</source>
          <target state="translated">공학 표기법에는 지수의 배수가 3의 배수입니다. 소수점 이하 자릿수 왼쪽에 최대 3 자리 숫자를 남길 수 있으며 하나 또는 두 개의 후행 0을 추가해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="649df08a448ee3fa90f3746baaf6b0907df42c91" translate="yes" xml:space="preserve">
          <source>English</source>
          <target state="translated">English</target>
        </trans-unit>
        <trans-unit id="dcb1a009593a59322d64d1a3b6206a794460cc47" translate="yes" xml:space="preserve">
          <source>Enqueues the record on the queue using &lt;code&gt;put_nowait()&lt;/code&gt;; you may want to override this if you want to use blocking behaviour, or a timeout, or a customized queue implementation.</source>
          <target state="translated">put_nowait &lt;code&gt;put_nowait()&lt;/code&gt; 사용하여 큐의 레코드를 큐에 넣습니다 . 블로킹 동작 또는 시간 종료 또는 사용자 정의 된 큐 구현을 사용하려는 경우이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2888af4186691fc661359ab6d5971e729720db66" translate="yes" xml:space="preserve">
          <source>Enqueues the result of preparing the LogRecord. Should an exception occur (e.g. because a bounded queue has filled up), the &lt;a href=&quot;logging#logging.Handler.handleError&quot;&gt;&lt;code&gt;handleError()&lt;/code&gt;&lt;/a&gt; method is called to handle the error. This can result in the record silently being dropped (if &lt;code&gt;logging.raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;) or a message printed to &lt;code&gt;sys.stderr&lt;/code&gt; (if &lt;code&gt;logging.raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">LogRecord 준비 결과를 큐에 넣습니다. 예외가 발생하면 (예 : 경계 큐가 가득 차서) 오류를 처리하기 위해 &lt;a href=&quot;logging#logging.Handler.handleError&quot;&gt; &lt;code&gt;handleError()&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. 이로 인해 레코드가 자동으로 삭제 되거나 ( &lt;code&gt;logging.raiseExceptions&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 인 경우 ) &lt;code&gt;sys.stderr&lt;/code&gt; 에 메시지가 인쇄 될 수 &lt;code&gt;logging.raiseExceptions&lt;/code&gt; ( logging.raiseExceptions 가 &lt;code&gt;True&lt;/code&gt; 인 경우 ).</target>
        </trans-unit>
        <trans-unit id="aa2754429737b3533e1ef0357b5a96fb4a6836c9" translate="yes" xml:space="preserve">
          <source>Enquiry, goes with &lt;code&gt;ACK&lt;/code&gt; flow control</source>
          <target state="translated">문의, &lt;code&gt;ACK&lt;/code&gt; 흐름 제어 와 함께</target>
        </trans-unit>
        <trans-unit id="ae5b77717b5f7a8d678dfc4e7f6ca1d4b33f96da" translate="yes" xml:space="preserve">
          <source>Ensure all logging output has been flushed. This version does nothing and is intended to be implemented by subclasses.</source>
          <target state="translated">모든 로깅 출력이 플러시되었는지 확인하십시오. 이 버전은 아무것도하지 않으며 서브 클래스에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="97cf15e5a9cea6dea99ae04c2ca52a01855adc4b" translate="yes" xml:space="preserve">
          <source>Ensure that &lt;em&gt;item&lt;/em&gt; is visible.</source>
          <target state="translated">&lt;em&gt;항목&lt;/em&gt; 이 보이는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9aa26e76cdc98319b44465edafcf37d57d6abbaa" translate="yes" xml:space="preserve">
          <source>Ensure that all arguments to &lt;code&gt;Process.__init__()&lt;/code&gt; are picklable. Also, if you subclass &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; then make sure that instances will be picklable when the &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt;&lt;code&gt;Process.start&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">&lt;code&gt;Process.__init__()&lt;/code&gt; 대한 모든 인수가 선택 가능한지 확인하십시오 . 또한 &lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 를 서브 클래 싱 하는 경우 &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt; &lt;code&gt;Process.start&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때 인스턴스를 선택할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3c36c2f4b34cceda516e9a8a5706327c94c9ce7" translate="yes" xml:space="preserve">
          <source>Ensure that the arguments to the methods of proxies are picklable.</source>
          <target state="translated">프록시 메소드에 대한 인수가 선택 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="762ec42796d5195f94b6f19b0a871c17688f7448" translate="yes" xml:space="preserve">
          <source>Ensures that enough disk space is allocated for the file specified by &lt;em&gt;fd&lt;/em&gt; starting from &lt;em&gt;offset&lt;/em&gt; and continuing for &lt;em&gt;len&lt;/em&gt; bytes.</source>
          <target state="translated">&lt;em&gt;fd에&lt;/em&gt; 의해 지정된 파일에 대해 &lt;em&gt;오프셋&lt;/em&gt; 에서 시작 하여 &lt;em&gt;len&lt;/em&gt; 바이트 동안 계속되는 충분한 디스크 공간이 할당되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="b7eb63354554772150750f9cedad21f70a5cb44a" translate="yes" xml:space="preserve">
          <source>Ensuring unique enumeration values</source>
          <target state="translated">고유 한 열거 형 값 보장</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="8fa2a05b9d6104dc8feb95f4c534efae63c8fab5" translate="yes" xml:space="preserve">
          <source>Enter &lt;em&gt;string&lt;/em&gt; in the table of &amp;ldquo;interned&amp;rdquo; strings and return the interned string &amp;ndash; which is &lt;em&gt;string&lt;/em&gt; itself or a copy. Interning strings is useful to gain a little performance on dictionary lookup &amp;ndash; if the keys in a dictionary are interned, and the lookup key is interned, the key comparisons (after hashing) can be done by a pointer compare instead of a string compare. Normally, the names used in Python programs are automatically interned, and the dictionaries used to hold module, class or instance attributes have interned keys.</source>
          <target state="translated">&quot;interned&quot;문자열 표에 &lt;em&gt;문자열&lt;/em&gt; 을 입력 하고 &lt;em&gt;문자열&lt;/em&gt; 자체 또는 사본 인 interned 문자열을 반환합니다 . 인터 닝 문자열은 사전 룩업에서 약간의 성능을 얻는 데 유용합니다. 딕셔너리의 키가 인터 닝되고 룩업 키가 인터 론 인 경우, 문자열 비교 대신 포인터 비교를 통해 키 비교 (해시 후)를 수행 할 수 있습니다. 일반적으로 Python 프로그램에서 사용되는 이름은 자동으로 인터 닝되며 모듈, 클래스 또는 인스턴스 속성을 보유하는 데 사용되는 사전에는 인터 턴 된 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b663cf4347cd84e7bc69f1115cc575cfd52e6845" translate="yes" xml:space="preserve">
          <source>Enter a polling loop that terminates after count passes or all open channels have been closed. All arguments are optional. The &lt;em&gt;count&lt;/em&gt; parameter defaults to &lt;code&gt;None&lt;/code&gt;, resulting in the loop terminating only when all channels have been closed. The &lt;em&gt;timeout&lt;/em&gt; argument sets the timeout parameter for the appropriate &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; call, measured in seconds; the default is 30 seconds. The &lt;em&gt;use_poll&lt;/em&gt; parameter, if true, indicates that &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; (the default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">카운트 통과 또는 모든 열린 채널이 닫힌 후 종료되는 폴링 루프를 입력하십시오. 모든 인수는 선택 사항입니다. &lt;em&gt;카운트&lt;/em&gt; , 파라미터 디폴트 &lt;code&gt;None&lt;/code&gt; 모든 채널이 폐쇄되었을 때에 만 종료 루프 결과. &lt;em&gt;초과&lt;/em&gt; 인자는 적절한 타임 아웃 파라미터 세트 &lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt; 초 단위로 측정 호출; 기본값은 30 초입니다. &lt;em&gt;use_poll의&lt;/em&gt; 매개 변수가 true의 경우, 그 표시 &lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt; 에 우선 사용되어야한다 &lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; (기본값은 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf6ee635905c79fc10776a891aacc8f8db536c1a" translate="yes" xml:space="preserve">
          <source>Enter a recursive debugger that steps through the code argument (which is an arbitrary expression or statement to be executed in the current environment).</source>
          <target state="translated">코드 인수 (현재 환경에서 실행될 임의의 표현식 또는 명령문)를 단계별로 수행하는 순환 디버거를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="06cda8081b0c699a9ae8156111f134ffc77e8bf8" translate="yes" xml:space="preserve">
          <source>Enter cbreak mode. In cbreak mode (sometimes called &amp;ldquo;rare&amp;rdquo; mode) normal tty line buffering is turned off and characters are available to be read one by one. However, unlike raw mode, special characters (interrupt, quit, suspend, and flow control) retain their effects on the tty driver and calling program. Calling first &lt;a href=&quot;#curses.raw&quot;&gt;&lt;code&gt;raw()&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;#curses.cbreak&quot;&gt;&lt;code&gt;cbreak()&lt;/code&gt;&lt;/a&gt; leaves the terminal in cbreak mode.</source>
          <target state="translated">파단 모드로 들어갑니다. cbreak 모드 ( &quot;희귀&quot;모드라고도 함)에서는 일반 tty 라인 버퍼링이 해제되고 문자를 하나씩 읽을 수 있습니다. 그러나 원시 모드와 달리 특수 문자 (인터럽트, 종료, 일시 중단 및 흐름 제어)는 tty 드라이버 및 호출 프로그램에 영향을 미칩니다. 먼저 &lt;a href=&quot;#curses.raw&quot;&gt; &lt;code&gt;raw()&lt;/code&gt; &lt;/a&gt; 를 호출 한 다음 &lt;a href=&quot;#curses.cbreak&quot;&gt; &lt;code&gt;cbreak()&lt;/code&gt; &lt;/a&gt;() 를 호출 하면 터미널이 중단 모드로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="f8cea7d09a31360054e9f869e3c5d795b0458192" translate="yes" xml:space="preserve">
          <source>Enter converters.</source>
          <target state="translated">변환기를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="602385ef4a72988bf782bf33f06a8f646ad69432" translate="yes" xml:space="preserve">
          <source>Enter echo mode. In echo mode, each character input is echoed to the screen as it is entered.</source>
          <target state="translated">에코 모드로 들어갑니다. 에코 모드에서는 각 문자 입력이 입력 될 때 화면에 에코됩니다.</target>
        </trans-unit>
        <trans-unit id="429905251e2a3e543f489797d59b5a24f9ef97db" translate="yes" xml:space="preserve">
          <source>Enter newline mode. This mode translates the return key into newline on input, and translates newline into return and line-feed on output. Newline mode is initially on.</source>
          <target state="translated">개행 모드로 들어갑니다. 이 모드는 입력시 리턴 키를 줄 바꾸기로 변환하고 출력에서 ​​줄 바꾸기를 리턴 및 줄 바꿈으로 변환합니다. 개행 모드는 처음에 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="31b90800a714a8a3e0ab43e272c0b938df50c7db" translate="yes" xml:space="preserve">
          <source>Enter or send (unreliable)</source>
          <target state="translated">입력 또는 발송 (신뢰할 수 없음)</target>
        </trans-unit>
        <trans-unit id="7b32a1a4ed5b14160b995b3b5225adbecd8b0343" translate="yes" xml:space="preserve">
          <source>Enter post-mortem debugging of the given &lt;em&gt;traceback&lt;/em&gt; object. If no &lt;em&gt;traceback&lt;/em&gt; is given, it uses the one of the exception that is currently being handled (an exception must be being handled if the default is to be used).</source>
          <target state="translated">주어진 &lt;em&gt;역 추적&lt;/em&gt; 객체 의 사후 디버깅을 입력하십시오 . &lt;em&gt;역 추적&lt;/em&gt; 이 제공 되지 않으면 현재 처리중인 예외 중 하나를 사용합니다 (기본값을 사용하려면 예외를 처리해야합니다).</target>
        </trans-unit>
        <trans-unit id="f097b04746b05b7586d964276b16901fd65c113d" translate="yes" xml:space="preserve">
          <source>Enter post-mortem debugging of the traceback found in &lt;a href=&quot;sys#sys.last_traceback&quot;&gt;&lt;code&gt;sys.last_traceback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.last_traceback&quot;&gt; &lt;code&gt;sys.last_traceback&lt;/code&gt; &lt;/a&gt; 에있는 트레이스 백의 사후 디버깅을 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ccc9469aa0d39ac8b4ae0c50a90919c84871d0d" translate="yes" xml:space="preserve">
          <source>Enter raw mode. In raw mode, normal line buffering and processing of interrupt, quit, suspend, and flow control keys are turned off; characters are presented to curses input functions one by one.</source>
          <target state="translated">원시 모드로 들어갑니다. 원시 모드에서는 일반 회선 버퍼링 및 인터럽트, 종료, 일시 중단 및 흐름 제어 키 처리가 해제됩니다. 입력 기능을 하나씩 저주하기 위해 문자가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a0dbd0b641f4836b322a1ad352c0e6127776e34d" translate="yes" xml:space="preserve">
          <source>Enter the debugger at the calling stack frame. This is useful to hard-code a breakpoint at a given point in a program, even if the code is not otherwise being debugged (e.g. when an assertion fails). If given, &lt;em&gt;header&lt;/em&gt; is printed to the console just before debugging begins.</source>
          <target state="translated">호출 스택 프레임에 디버거를 입력하십시오. 이는 코드가 달리 디버깅되지 않는 경우에도 (예 : 어설 션이 실패한 경우) 프로그램의 특정 지점에서 중단 점을 하드 코딩하는 데 유용합니다. 주어진 경우, 디버깅이 시작되기 직전에 &lt;em&gt;헤더&lt;/em&gt; 가 콘솔에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c2390d15b9f37ee098a11e644788934b4602939e" translate="yes" xml:space="preserve">
          <source>Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the &lt;code&gt;as&lt;/code&gt; clause of &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements using this context manager.</source>
          <target state="translated">런타임 컨텍스트를 입력하고이 오브젝트 또는 런타임 컨텍스트와 관련된 다른 오브젝트를 리턴하십시오. 이 메소드에 의해 리턴 된 값은 이 컨텍스트 관리자를 사용 하는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문의 &lt;code&gt;as&lt;/code&gt; 절 에서 식별자에 바인드됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb2047c3bba3ba8a6dc620b750759389818e8f2f" translate="yes" xml:space="preserve">
          <source>Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the &lt;code&gt;as&lt;/code&gt; clause of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements using this context manager.</source>
          <target state="translated">Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the &lt;code&gt;as&lt;/code&gt; clause of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statements using this context manager.</target>
        </trans-unit>
        <trans-unit id="8a3ea35903eb24e2439f6a0e520d488eeda6c731" translate="yes" xml:space="preserve">
          <source>Entering a blank line repeats the last command entered. Exception: if the last command was a &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; command, the next 11 lines are listed.</source>
          <target state="translated">빈 줄을 입력하면 마지막으로 입력 한 명령이 반복됩니다. 예외 : 마지막 명령이 &lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt; 명령 인 경우 다음 11 행이 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="611a51f214fed567158739312e45abb78fbe33de" translate="yes" xml:space="preserve">
          <source>Enters a new context manager and adds its &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack. The return value is the result of the context manager&amp;rsquo;s own &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">새로운 컨텍스트 관리자를 시작하고 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; 메소드를 콜백 스택에 추가합니다. 리턴 값은 컨텍스트 관리자 자체의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; 메소드 의 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="c57dad185f83c1fe4fcb59dfcf4791150f8db483" translate="yes" xml:space="preserve">
          <source>Enters a new context manager and adds its &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; method to the callback stack. The return value is the result of the context manager&amp;rsquo;s own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Enters a new context manager and adds its &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt; method to the callback stack. The return value is the result of the context manager&amp;rsquo;s own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="bd5d52ebfda30bf0319952ff2a299cea17d4e30d" translate="yes" xml:space="preserve">
          <source>Entity declarations can contain more than just text for replacement. They can also point to external resources or local files. The XML parser accesses the resource and embeds the content into the XML document.</source>
          <target state="translated">엔터티 선언에는 대체 할 텍스트 이상이 포함될 수 있습니다. 외부 리소스 나 로컬 파일을 가리킬 수도 있습니다. XML 파서는 리소스에 액세스하여 내용을 XML 문서에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="2dbd6d3f83290ba9348b436b12d8b7daf2635aa9" translate="yes" xml:space="preserve">
          <source>EntityResolver Objects</source>
          <target state="translated">EntityResolver 객체</target>
        </trans-unit>
        <trans-unit id="953bd861b8d839338c4a580a2b0b5c9b37af0e5f" translate="yes" xml:space="preserve">
          <source>Entries are typically tuples of the form &lt;code&gt;(priority_number, data)&lt;/code&gt;.</source>
          <target state="translated">엔트리는 일반적으로 &lt;code&gt;(priority_number, data)&lt;/code&gt; 형식의 튜플입니다 .</target>
        </trans-unit>
        <trans-unit id="087b9e0aeb254cf0e900ba213fa1da3a8e9d24f1" translate="yes" xml:space="preserve">
          <source>Entries which cannot be determined are set to &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">확인할 수없는 항목은 &lt;code&gt;''&lt;/code&gt; 로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="53705f2e3b68f3633d75ceaf05413bb3ba654a56" translate="yes" xml:space="preserve">
          <source>Entries which cannot be determined are set to &lt;code&gt;''&lt;/code&gt;. All tuple entries are strings.</source>
          <target state="translated">확인할 수없는 항목은 &lt;code&gt;''&lt;/code&gt; 로 설정되어 있습니다. 모든 튜플 항목은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="18f73528d44427047489bb703aa3ca755342dbbb" translate="yes" xml:space="preserve">
          <source>Entry points</source>
          <target state="translated">진입 점</target>
        </trans-unit>
        <trans-unit id="d4d3e8a2c230f83aa0e684d966714d49817aea3f" translate="yes" xml:space="preserve">
          <source>Entry widget indexes (index, view index, etc.)</source>
          <target state="translated">엔트리 위젯 인덱스 (인덱스, 뷰 인덱스 등)</target>
        </trans-unit>
        <trans-unit id="ef8f90b6c36e96a8f3138956ecec46b1d2f89b29" translate="yes" xml:space="preserve">
          <source>Entry widgets have options that refer to character positions in the text being displayed. You can use these &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; functions to access these special points in text widgets:</source>
          <target state="translated">입력 위젯에는 표시되는 텍스트에서 문자 위치를 참조하는 옵션이 있습니다. 이 &lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt; 함수를 사용 하여 텍스트 위젯에서 이러한 특수 지점에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35748b339b75707aa86eccdc826e9c484f210273" translate="yes" xml:space="preserve">
          <source>Enum Classes</source>
          <target state="translated">열거 형 클래스</target>
        </trans-unit>
        <trans-unit id="bd214812f74614a175b9a557097bf69a0bea623e" translate="yes" xml:space="preserve">
          <source>Enum Members (aka instances)</source>
          <target state="translated">열거 형 멤버 (일명 인스턴스)</target>
        </trans-unit>
        <trans-unit id="5b06633b47e3b3d368410e3fcb03bd07f5b3d58c" translate="yes" xml:space="preserve">
          <source>Enum Name</source>
          <target state="translated">열거 형 이름</target>
        </trans-unit>
        <trans-unit id="74cee2f76b2f08d1d822a0ac94ba9d489a4bdb9e" translate="yes" xml:space="preserve">
          <source>Enum class decorator that ensures only one name is bound to any one value.</source>
          <target state="translated">하나의 이름 만 하나의 값에 바인딩되도록하는 Enum 클래스 데코레이터.</target>
        </trans-unit>
        <trans-unit id="4a5bc6fdb389a921b77691f1ae62efd63242c0e2" translate="yes" xml:space="preserve">
          <source>Enum member values</source>
          <target state="translated">열거 형 멤버 값</target>
        </trans-unit>
        <trans-unit id="3d0a2cd7fcbb6a833c1876f5c6fae7bafe7f2441" translate="yes" xml:space="preserve">
          <source>Enum members also have a property that contains just their item name:</source>
          <target state="translated">열거 형 멤버에는 항목 이름 만 포함 된 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac8abe6035a83a26f86fc58e8f94b33a048f67de" translate="yes" xml:space="preserve">
          <source>Enumerate the children of the current directory.</source>
          <target state="translated">현재 디렉토리의 자식을 열거합니다.</target>
        </trans-unit>
        <trans-unit id="d908e41face2db6aa2e63d82a5d94ab42f2201db" translate="yes" xml:space="preserve">
          <source>Enumerates subkeys of an open registry key, returning a string.</source>
          <target state="translated">열린 레지스트리 키의 하위 키를 열거하고 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="672127fd3527f8fc48242253b35034acf2091efe" translate="yes" xml:space="preserve">
          <source>Enumerates values of an open registry key, returning a tuple.</source>
          <target state="translated">열린 레지스트리 키의 값을 열거하고 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3fb14da66a56415bff0ad761c36d594d42bedbae" translate="yes" xml:space="preserve">
          <source>Enumeration members are compared by identity:</source>
          <target state="translated">열거 멤버는 ID로 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="1178a57aa7859712c54c6114945255e34205b1e4" translate="yes" xml:space="preserve">
          <source>Enumeration members are hashable, so they can be used in dictionaries and sets:</source>
          <target state="translated">열거 형 멤버는 해시 가능하므로 사전 및 세트에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e472257922d05bccf3578137ac9fc6b17ee1a5f2" translate="yes" xml:space="preserve">
          <source>Enumeration members have human readable string representations:</source>
          <target state="translated">열거 형 멤버에는 사람이 읽을 수있는 문자열 표현이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd0a466f4da4a792ee601c1958443d6ace0821a6" translate="yes" xml:space="preserve">
          <source>Enumerations are Python classes, and can have methods and special methods as usual. If we have this enumeration:</source>
          <target state="translated">열거 형은 Python 클래스이며 평소와 같이 메서드와 특수 메서드를 가질 수 있습니다. 이 열거 형이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="40f561f88b2257b63cb2fb13e1fe24beff58df37" translate="yes" xml:space="preserve">
          <source>Enumerations are created using the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax, which makes them easy to read and write. An alternative creation method is described in &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;. To define an enumeration, subclass &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">열거는 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; 구문을 사용하여 작성 되므로 쉽게 읽고 쓸 수 있습니다. 대체 작성 방법은 &lt;a href=&quot;#functional-api&quot;&gt;Functional API에&lt;/a&gt; 설명되어 있습니다. 열거를 정의하려면 다음과 같이 &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 을 서브 클래스로 만드십시오 .</target>
        </trans-unit>
        <trans-unit id="b249d18934543185a909fe2565d3ae6f3298031e" translate="yes" xml:space="preserve">
          <source>Enumerations are created using the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax, which makes them easy to read and write. An alternative creation method is described in &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;. To define an enumeration, subclass &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">Enumerations are created using the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; syntax, which makes them easy to read and write. An alternative creation method is described in &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt;. To define an enumeration, subclass &lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; as follows:</target>
        </trans-unit>
        <trans-unit id="916080f51e0a1e47a17a417292d676be5cdcc6c5" translate="yes" xml:space="preserve">
          <source>Enumerations can be pickled and unpickled:</source>
          <target state="translated">열거는 피클 링 및 피클 링 해제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afa830c866023673c4f9348a0f95ab021df8ef05" translate="yes" xml:space="preserve">
          <source>Enumerations support iteration, in definition order:</source>
          <target state="translated">열거는 정의 순서로 반복을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="922ed09b766daccfca53d5df49778614ae54ae66" translate="yes" xml:space="preserve">
          <source>Enums have a custom metaclass that affects many aspects of both derived Enum classes and their instances (members).</source>
          <target state="translated">열거 형에는 파생 된 열거 형 클래스와 해당 인스턴스 (멤버)의 여러 측면에 영향을주는 사용자 지정 메타 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f595aaad578ca1ec1beb6f14e376368516b3b030" translate="yes" xml:space="preserve">
          <source>Environment configuration</source>
          <target state="translated">Environment configuration</target>
        </trans-unit>
        <trans-unit id="52290975d27191c5718cc3c19935ef179fd55b88" translate="yes" xml:space="preserve">
          <source>Environment example:</source>
          <target state="translated">환경 예 :</target>
        </trans-unit>
        <trans-unit id="7acfb9859940856ef732a50aabb8e6e5a634d65f" translate="yes" xml:space="preserve">
          <source>EnvironmentError</source>
          <target state="translated">EnvironmentError</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="0ea9631890f3c3ddadbb49be5feb1a38c4f675ab" translate="yes" xml:space="preserve">
          <source>Equality comparisons are defined though:</source>
          <target state="translated">평등 비교는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="bd00d2fa4ce7f9b3799e9324d37d66327650eef7" translate="yes" xml:space="preserve">
          <source>Equality tests between &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects are order-sensitive and are implemented as &lt;code&gt;list(od1.items())==list(od2.items())&lt;/code&gt;. Equality tests between &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects and other &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; objects are order-insensitive like regular dictionaries. This allows &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; objects to be substituted anywhere a regular dictionary is used.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 객체 간의 동일성 테스트 는 순서에 민감하며 &lt;code&gt;list(od1.items())==list(od2.items())&lt;/code&gt; 됩니다. &lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 객체와 다른 &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt; 객체 간의 동일성 테스트는 일반 사전과 같이 순서에 영향을받지 않습니다. 이를 통해 &lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt; 객체를 일반 사전이 사용되는 모든 위치로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61ce4cfe7855e867407978f9c2806aa92588f0fa" translate="yes" xml:space="preserve">
          <source>Equivalent to 0 (ie. all of the above Netscape domain strictness flags switched off).</source>
          <target state="translated">0과 같습니다 (즉, 위의 모든 Netscape 도메인 엄격 플래그가 꺼져 있음).</target>
        </trans-unit>
        <trans-unit id="3e1a831f3885fcf01724787c32f8ff7381b26db1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.EmailMessage.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;bytes(msg)&lt;/code&gt; to produce a bytes object containing the serialized message.</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 허용 &lt;code&gt;bytes(msg)&lt;/code&gt; 바이트 직렬화 된 메시지를 포함하는 오브젝트를 생성한다.</target>
        </trans-unit>
        <trans-unit id="d9cce4bbb04162f7733d5750ecd4d39c58ff074b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt;&lt;code&gt;as_bytes()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;bytes(msg)&lt;/code&gt; to produce a bytes object containing the formatted message.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message.as_bytes&quot;&gt; &lt;code&gt;as_bytes()&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 수 &lt;code&gt;bytes(msg)&lt;/code&gt; 바이트는 형식의 메시지를 포함하는 객체를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59158a5ff65138652445ed251a27dc21a6e9150e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#email.message.Message.as_string&quot;&gt;&lt;code&gt;as_string()&lt;/code&gt;&lt;/a&gt;. Allows &lt;code&gt;str(msg)&lt;/code&gt; to produce a string containing the formatted message.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message.as_string&quot;&gt; &lt;code&gt;as_string()&lt;/code&gt; &lt;/a&gt; 같습니다 . 수 &lt;code&gt;str(msg)&lt;/code&gt; 형식화 된 메시지를 포함하는 문자열을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f56c313d1897cc5bd915d14d383918de3b15796" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#gettext.GNUTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.GNUTranslations.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but the translation is returned as a byte string encoded in the preferred system encoding if no encoding was explicitly set with &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt;&lt;code&gt;set_output_charset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동등 &lt;a href=&quot;#gettext.GNUTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#gettext.GNUTranslations.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt; 되지만 부호화가 명시 적으로 설정하지 않았다면 번역이 바람직한 시스템 인코딩으로 인코딩 된 바이트의 문자열로 반환 &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt; &lt;code&gt;set_output_charset()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b929dcdf93e833942100bcfd2521eb537f4575c4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but the translation is returned as a byte string encoded in the preferred system encoding if no encoding was explicitly set with &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt;&lt;code&gt;set_output_charset()&lt;/code&gt;&lt;/a&gt;. Overridden in derived classes.</source>
          <target state="translated">동등 &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#gettext.NullTranslations.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt; 되지만 부호화가 명시 적으로 설정하지 않았다면 번역이 바람직한 시스템 인코딩으로 인코딩 된 바이트의 문자열로 반환 &lt;a href=&quot;#gettext.NullTranslations.set_output_charset&quot;&gt; &lt;code&gt;set_output_charset()&lt;/code&gt; &lt;/a&gt; . 파생 클래스에서 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="02563697a0fa57e5ce1168a5733d29d5e6f44a1a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#winreg.KEY_READ&quot;&gt;&lt;code&gt;KEY_READ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#winreg.KEY_READ&quot;&gt; &lt;code&gt;KEY_READ&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="69dff8b0d9537ee5a976ee7fb9f22df6af014657" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;'grouping'&lt;/code&gt;, used for monetary values.</source>
          <target state="translated">화폐 가치에 사용되는 &lt;code&gt;'grouping'&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6fd5ba978072c7d2a6ca1194f41377f2f6c02509" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d9577878c711c65c19c4d1a6b45fc26fa77f1b8c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;EPOLLIN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EPOLLIN&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="2443801768eb95d9756d03d866b00db3da79813a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;EPOLLOUT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EPOLLOUT&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="5c75de4891c94ac80ca2797e5676efa9d38daabd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;as_string(policy=self.policy.clone(utf8=True))&lt;/code&gt;. Allows &lt;code&gt;str(msg)&lt;/code&gt; to produce a string containing the serialized message in a readable format.</source>
          <target state="translated">상당 &lt;code&gt;as_string(policy=self.policy.clone(utf8=True))&lt;/code&gt; . 허용 &lt;code&gt;str(msg)&lt;/code&gt; 읽을 수있는 형식으로 직렬화 된 메시지를 포함하는 문자열을 생성한다.</target>
        </trans-unit>
        <trans-unit id="498f574627ce47a8c97257efb3e593bf179bd84b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;get(False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get(False)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="882d9b2b409ad6b7450f6c950c6fa3b50fddd662" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;not key in d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;not key in d&lt;/code&gt; 를 입력 하지 않는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1411dd558ed3d5c3b0e3e1943566fb197cdb665f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;pencolor(colorstring1)&lt;/code&gt; and &lt;code&gt;fillcolor(colorstring2)&lt;/code&gt; and analogously if the other input format is used.</source>
          <target state="translated">상당 &lt;code&gt;pencolor(colorstring1)&lt;/code&gt; 과 &lt;code&gt;fillcolor(colorstring2)&lt;/code&gt; 과 유사하게, 다른 입력 형식을 사용하는 경우.</target>
        </trans-unit>
        <trans-unit id="d3e0663e7f56bca65438c71c5ecf53a3ac03e471" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(item)&lt;/code&gt;, provided for compatibility with &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt;&lt;code&gt;Queue.put_nowait()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">등가 &lt;code&gt;put(item)&lt;/code&gt; 과의 호환성을 위해 제공 &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt; &lt;code&gt;Queue.put_nowait()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cf151630145678e1c1abceeac6eb7289eb99e6b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(item, False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put(item, False)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ba2c64df04b46764b2b3b68b2579acfafb0a714f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;put(obj, False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put(obj, False)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fa7377fb4a7fcc696f633b01dc35eb725c5ff01c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;tputs(str, 1, putchar)&lt;/code&gt;; emit the value of a specified terminfo capability for the current terminal. Note that the output of &lt;a href=&quot;#curses.putp&quot;&gt;&lt;code&gt;putp()&lt;/code&gt;&lt;/a&gt; always goes to standard output.</source>
          <target state="translated">&lt;code&gt;tputs(str, 1, putchar)&lt;/code&gt; 와 동일합니다 . 현재 터미널에 대해 지정된 terminfo 기능의 값을 내 보냅니다. &lt;a href=&quot;#curses.putp&quot;&gt; &lt;code&gt;putp()&lt;/code&gt; &lt;/a&gt; 의 출력은 항상 표준 출력으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1e63fcd5fb787d4a3c6b9d9ed88dfe3dca78e6d4" translate="yes" xml:space="preserve">
          <source>Equivalent to the corresponding functions without the &lt;code&gt;l&lt;/code&gt; prefix (&lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.dgettext&quot;&gt;&lt;code&gt;dgettext()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.dngettext&quot;&gt;&lt;code&gt;dngettext()&lt;/code&gt;&lt;/a&gt;), but the translation is returned as a byte string encoded in the preferred system encoding if no other encoding was explicitly set with &lt;a href=&quot;#gettext.bind_textdomain_codeset&quot;&gt;&lt;code&gt;bind_textdomain_codeset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;l&lt;/code&gt; 접두사 ( &lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#gettext.dgettext&quot;&gt; &lt;code&gt;dgettext()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#gettext.dngettext&quot;&gt; &lt;code&gt;dngettext()&lt;/code&gt; &lt;/a&gt; )가 없는 해당 함수 와 동일 하지만 다른 인코딩을 사용하여 명시 적으로 설정하지 않은 경우 기본 시스템 인코딩에서 인코딩 된 바이트 문자열로 변환이 리턴됩니다. &lt;a href=&quot;#gettext.bind_textdomain_codeset&quot;&gt; &lt;code&gt;bind_textdomain_codeset()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="315728e0990367d75d40e64feff3d637283509e1" translate="yes" xml:space="preserve">
          <source>Erase from cursor to the end of the line.</source>
          <target state="translated">커서에서 줄 끝까지 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="4619259d1590500b34cdd053102b2bb5cb08a27d" translate="yes" xml:space="preserve">
          <source>Erase from cursor to the end of the window: all lines below the cursor are deleted, and then the equivalent of &lt;a href=&quot;#curses.window.clrtoeol&quot;&gt;&lt;code&gt;clrtoeol()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">커서에서 창 끝까지 지우기 : 커서 아래의 모든 행이 삭제 된 다음 &lt;a href=&quot;#curses.window.clrtoeol&quot;&gt; &lt;code&gt;clrtoeol()&lt;/code&gt; &lt;/a&gt; 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="d3e856491e1bc6fd30d79529b1024eb08ed1e4e9" translate="yes" xml:space="preserve">
          <source>Error Handlers</source>
          <target state="translated">오류 처리기</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="4c6986de1c86cf9ac917927e4adfec8f6bfe5614" translate="yes" xml:space="preserve">
          <source>Error Handling API</source>
          <target state="translated">오류 처리 API</target>
        </trans-unit>
        <trans-unit id="9e8a18bdf1224aba7c5640dca2752cb0f27bda94" translate="yes" xml:space="preserve">
          <source>Error condition happened on the assoc. fd</source>
          <target state="translated">Assoc에서 오류 조건이 발생했습니다. fd</target>
        </trans-unit>
        <trans-unit id="c06a4667ab2007b00a3679ad01f2c2deae43bffe" translate="yes" xml:space="preserve">
          <source>Error condition of some sort</source>
          <target state="translated">어떤 종류의 오류 조건</target>
        </trans-unit>
        <trans-unit id="e4a425fe29ba88e41be9834c2976e81cdd62ab0e" translate="yes" xml:space="preserve">
          <source>Error handling is done in the same way as defined for the stream readers and writers.</source>
          <target state="translated">오류 처리는 스트림 판독기 및 기록기에 정의 된 것과 같은 방식으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0ce0e9091d4c585a750b4f74ffd57e53b22799a3" translate="yes" xml:space="preserve">
          <source>Error occurred during establishment of a connection with the server.</source>
          <target state="translated">서버와의 연결을 설정하는 동안 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="2aad66e5d2aeba2dd907b4c02fdd7536e059af24" translate="yes" xml:space="preserve">
          <source>Error raised when an unpicklable object is encountered by &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt;. It inherits &lt;a href=&quot;#pickle.PickleError&quot;&gt;&lt;code&gt;PickleError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt; 가 피클 링 할 수없는 객체를 발견하면 오류가 발생했습니다 . &lt;a href=&quot;#pickle.PickleError&quot;&gt; &lt;code&gt;PickleError&lt;/code&gt; 를&lt;/a&gt; 상속 받습니다 .</target>
        </trans-unit>
        <trans-unit id="700cc5c8bc3311f1f7de53ead5e890a4d6df4103" translate="yes" xml:space="preserve">
          <source>Error raised when there is a problem unpickling an object, such as a data corruption or a security violation. It inherits &lt;a href=&quot;#pickle.PickleError&quot;&gt;&lt;code&gt;PickleError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터 손상 또는 보안 위반과 같은 개체를 언 클링하는 데 문제가있을 때 발생하는 오류입니다. &lt;a href=&quot;#pickle.PickleError&quot;&gt; &lt;code&gt;PickleError&lt;/code&gt; 를&lt;/a&gt; 상속 받습니다 .</target>
        </trans-unit>
        <trans-unit id="1bd7165001d6a8de56949614e8427bb6f024f601" translate="yes" xml:space="preserve">
          <source>ErrorHandler Objects</source>
          <target state="translated">ErrorHandler 객체</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9777fd6046fd2b79471201c70d64c950708d6028" translate="yes" xml:space="preserve">
          <source>Errors are reported as exceptions; the usual exceptions are given for type errors, while errors reported by the system calls raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오류는 예외로보고됩니다. 시스템 오류에 의해보고 된 오류는 &lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 동안 유형 오류에 대한 일반적인 예외가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4cfe1f435f06beaae8e7d7c6d43e5dddbe640bb" translate="yes" xml:space="preserve">
          <source>Escape</source>
          <target state="translated">Escape</target>
        </trans-unit>
        <trans-unit id="a3ca63fcb126584c7cbc69cb44097bc0a98431f5" translate="yes" xml:space="preserve">
          <source>Escape &lt;code&gt;'&amp;amp;'&lt;/code&gt;, &lt;code&gt;'&amp;lt;'&lt;/code&gt;, and &lt;code&gt;'&amp;gt;'&lt;/code&gt; in a string of data.</source>
          <target state="translated">데이터 문자열에서 &lt;code&gt;'&amp;amp;'&lt;/code&gt; , &lt;code&gt;'&amp;lt;'&lt;/code&gt; 및 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 이스케이프</target>
        </trans-unit>
        <trans-unit id="87b0bd467ee85b7f8847d9eb3649852161ccbc0c" translate="yes" xml:space="preserve">
          <source>Escape all special characters (&lt;code&gt;'?'&lt;/code&gt;, &lt;code&gt;'*'&lt;/code&gt; and &lt;code&gt;'['&lt;/code&gt;). This is useful if you want to match an arbitrary literal string that may have special characters in it. Special characters in drive/UNC sharepoints are not escaped, e.g. on Windows &lt;code&gt;escape('//?/c:/Quo vadis?.txt')&lt;/code&gt; returns &lt;code&gt;'//?/c:/Quo vadis[?].txt'&lt;/code&gt;.</source>
          <target state="translated">모든 특수 문자 ( &lt;code&gt;'?'&lt;/code&gt; , &lt;code&gt;'*'&lt;/code&gt; 및 &lt;code&gt;'['&lt;/code&gt; )를 이스케이프하십시오 . 특수 문자가 포함 된 임의의 리터럴 문자열과 일치시키려는 경우에 유용합니다. 드라이브 / UNC 공유 점의 특수 문자는 이스케이프되지 않습니다. 예를 들어 Windows &lt;code&gt;escape('//?/c:/Quo vadis?.txt')&lt;/code&gt; 는 &lt;code&gt;'//?/c:/Quo vadis[?].txt'&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="645fe693ac8b623ab59ba5a913fa56e06ea5cf34" translate="yes" xml:space="preserve">
          <source>Escape characters are not recognized;</source>
          <target state="translated">이스케이프 문자는 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c8ea8bc4f65d5bfd8546e074c6c3ed1833a24b0" translate="yes" xml:space="preserve">
          <source>Escape special characters in &lt;em&gt;pattern&lt;/em&gt;. This is useful if you want to match an arbitrary literal string that may have regular expression metacharacters in it. For example:</source>
          <target state="translated">&lt;em&gt;패턴&lt;/em&gt; 에서 특수 문자를 이스케이프 처리하십시오 . 정규 표현식 메타 문자가있을 수있는 임의의 리터럴 문자열을 일치시키려는 경우에 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d0a36d2b4f6f39c281a11428ee518d9f087808c" translate="yes" xml:space="preserve">
          <source>Esperanto, Maltese</source>
          <target state="translated">에스페란토, 몰타어</target>
        </trans-unit>
        <trans-unit id="b9603ee7bcecaa495cbf6687553a3756c705570d" translate="yes" xml:space="preserve">
          <source>Essentially, transports and protocols should only be used in libraries and frameworks and never in high-level asyncio applications.</source>
          <target state="translated">기본적으로 전송 및 프로토콜은 라이브러리 및 프레임 워크에서만 사용해야하며 고급 asyncio 애플리케이션에서는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0946aa68f0bba7f1fbe4c3793c30db49bbee67bd" translate="yes" xml:space="preserve">
          <source>Establish a TCP connection.</source>
          <target state="translated">TCP 연결을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d2d166fb4f8060af809ab3750f0779c96f2c2772" translate="yes" xml:space="preserve">
          <source>Establish a Unix socket connection and return a pair of &lt;code&gt;(reader, writer)&lt;/code&gt;.</source>
          <target state="translated">유닉스 소켓 연결을 설정하고 &lt;code&gt;(reader, writer)&lt;/code&gt; 쌍을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f41b06a3c2e0f7210c8c5ea4a7a815d0f61f476" translate="yes" xml:space="preserve">
          <source>Establish a Unix socket connection.</source>
          <target state="translated">유닉스 소켓 연결을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="27ddc90aba864b61e63ca9fcab375d32046e5f68" translate="yes" xml:space="preserve">
          <source>Establish a network connection and return a pair of &lt;code&gt;(reader, writer)&lt;/code&gt; objects.</source>
          <target state="translated">네트워크 연결을 설정하고 한 쌍의 &lt;code&gt;(reader, writer)&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b33dfb090a73f3e7fa9ec19387939863ce9a9697" translate="yes" xml:space="preserve">
          <source>Establishes a connection to a predefined registry handle on another computer, and returns a &lt;a href=&quot;#handle-object&quot;&gt;handle object&lt;/a&gt;.</source>
          <target state="translated">다른 컴퓨터에서 사전 정의 된 레지스트리 핸들에 연결하고 &lt;a href=&quot;#handle-object&quot;&gt;핸들 오브젝트를&lt;/a&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="46eac8641b41a554c4af978ac95022766230c363" translate="yes" xml:space="preserve">
          <source>Establishes an arbitrary timer</source>
          <target state="translated">임의 타이머 설정</target>
        </trans-unit>
        <trans-unit id="387507d9043a48f9895cfaa2673836fe0752cb7a" translate="yes" xml:space="preserve">
          <source>Evaluate the &lt;em&gt;expression&lt;/em&gt; (given as a string or a code object) under debugger control. When &lt;a href=&quot;#pdb.runeval&quot;&gt;&lt;code&gt;runeval()&lt;/code&gt;&lt;/a&gt; returns, it returns the value of the expression. Otherwise this function is similar to &lt;a href=&quot;#pdb.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디버거 제어 에서 &lt;em&gt;표현식&lt;/em&gt; (문자열 또는 코드 오브젝트로 제공)을 평가하십시오 . 때 &lt;a href=&quot;#pdb.runeval&quot;&gt; &lt;code&gt;runeval()&lt;/code&gt; &lt;/a&gt; 반환 할 때 식의 값을 반환합니다. 그렇지 않으면이 함수는 &lt;a href=&quot;#pdb.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="bbd8f1d5e5391f6492fcec6625b513a0bb874fcf" translate="yes" xml:space="preserve">
          <source>Evaluate the &lt;em&gt;expression&lt;/em&gt; in the current context and print its value.</source>
          <target state="translated">현재 컨텍스트에서 &lt;em&gt;표현식&lt;/em&gt; 을 평가하고 해당 값을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="2e025428974165b15278efafd9c9b0d22a029d83" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;n! / (k! * (n - k)!)&lt;/code&gt; when &lt;code&gt;k &amp;lt;= n&lt;/code&gt; and evaluates to zero when &lt;code&gt;k &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n! / (k! * (n - k)!)&lt;/code&gt; 평가합니다 ! / (K * (N! - K)!) &lt;code&gt;k &amp;lt;= n&lt;/code&gt; 과 평가하여 제로 &lt;code&gt;k &amp;gt; n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db06d1f9400c9b6f59b6bcb16845f15ee0707af4" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;n! / (n - k)!&lt;/code&gt; when &lt;code&gt;k &amp;lt;= n&lt;/code&gt; and evaluates to zero when &lt;code&gt;k &amp;gt; n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n! / (n - k)!&lt;/code&gt; 평가합니다 ! / (n-k)! 경우 &lt;code&gt;k &amp;lt;= n&lt;/code&gt; 제로하고 평가하여 &lt;code&gt;k &amp;gt; n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b97d45e2e76a4e66439f778565d0ee17e1fde472" translate="yes" xml:space="preserve">
          <source>Even if two unicode strings are normalized and look the same to a human reader, if one has combining characters and the other doesn&amp;rsquo;t, they may not compare equal.</source>
          <target state="translated">두 개의 유니 코드 문자열이 정규화되어 인간의 독자와 동일하게 보이지만 하나는 결합 문자가 있고 다른 하나는 그렇지 않은 경우 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2371ef0b3d2525f10074eb1b01da734606274be" translate="yes" xml:space="preserve">
          <source>Even the higher-level file copying functions (&lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;shutil.copy()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;shutil.copy2()&lt;/code&gt;&lt;/a&gt;) cannot copy all file metadata.</source>
          <target state="translated">고급 파일 복사 기능 ( &lt;a href=&quot;#shutil.copy&quot;&gt; &lt;code&gt;shutil.copy()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;shutil.copy2()&lt;/code&gt; &lt;/a&gt; ) 조차도 모든 파일 메타 데이터를 복사 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="499bbe4b0828963aced093b14a412aa05bcf8a05" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; does not declare &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt; because their signatures will vary, implementations and clients should consider those methods part of the interface. Also, implementations may raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt;&lt;code&gt;UnsupportedOperation&lt;/code&gt;&lt;/a&gt;) when operations they do not support are called.</source>
          <target state="translated">비록 &lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt; 선언하지 않습니다 &lt;code&gt;read()&lt;/code&gt; 또는 &lt;code&gt;write()&lt;/code&gt; 자신의 서명이 달라질 수 있기 때문에, 구현 및 클라이언트는 인터페이스의 이러한 메소드 부분을 고려해야한다. 또한 구현이 지원하지 않는 작업이 호출 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 구현시 ValueError (또는 &lt;a href=&quot;#io.UnsupportedOperation&quot;&gt; &lt;code&gt;UnsupportedOperation&lt;/code&gt; &lt;/a&gt; )가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7263b2f6cfc43f8cba961ab3031692280b00432" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt;&lt;code&gt;FunctionTestCase&lt;/code&gt;&lt;/a&gt; can be used to quickly convert an existing test base over to a &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;-based system, this approach is not recommended. Taking the time to set up proper &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; subclasses will make future test refactorings infinitely easier.</source>
          <target state="translated">비록 &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt; &lt;code&gt;FunctionTestCase&lt;/code&gt; 이&lt;/a&gt; 빠르게에 걸쳐 기존의 테스트 기반으로 변환하는 데 사용할 수있는 &lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 기반 시스템을,이 방법은 사용하지 않는 것이 좋습니다. 적절한 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 서브 클래스 를 설정하기 위해 시간을 내면 향후 테스트 리팩토링이 훨씬 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="ff19b36ae0ff27e7c6b431a5884cd7d3d669658d" translate="yes" xml:space="preserve">
          <source>Even though there&amp;rsquo;s a native keyed hashing mode, BLAKE2 can, of course, be used in HMAC construction with &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">기본 키 해싱 모드가 있더라도 BLAKE2는 물론 &lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 HMAC 구성에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7f036ced6014aec397327a4880396286c4f3e4e" translate="yes" xml:space="preserve">
          <source>Even though we use the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax to create Enums, Enums are not normal Python classes. See &lt;a href=&quot;#how-are-enums-different&quot;&gt;How are Enums different?&lt;/a&gt; for more details.</source>
          <target state="translated">비록 우리가 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; 구문을 사용하여 Enum을 생성 하더라도 Enum은 일반적인 Python 클래스가 아닙니다. &lt;a href=&quot;#how-are-enums-different&quot;&gt;열거 형&lt;/a&gt; 은 어떻게 다릅니 까? 상세 사항은.</target>
        </trans-unit>
        <trans-unit id="ff240f57ce265df8c3bfbeee2e1169f4222a2b42" translate="yes" xml:space="preserve">
          <source>Even though we use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; syntax to create Enums, Enums are not normal Python classes. See &lt;a href=&quot;#how-are-enums-different&quot;&gt;How are Enums different?&lt;/a&gt; for more details.</source>
          <target state="translated">Even though we use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; syntax to create Enums, Enums are not normal Python classes. See &lt;a href=&quot;#how-are-enums-different&quot;&gt;How are Enums different?&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="16cdaf23858a23440a22c418d4c6b612df6fdb46" translate="yes" xml:space="preserve">
          <source>Event Loop</source>
          <target state="translated">이벤트 루프</target>
        </trans-unit>
        <trans-unit id="5576dbff159fec8a46dbd0a52a25671fa3b9372e" translate="yes" xml:space="preserve">
          <source>Event Loop Implementations</source>
          <target state="translated">이벤트 루프 구현</target>
        </trans-unit>
        <trans-unit id="77a9a7549edf389a9cb37745d2e54aceacf3da51" translate="yes" xml:space="preserve">
          <source>Event Loop Methods</source>
          <target state="translated">이벤트 루프 방법</target>
        </trans-unit>
        <trans-unit id="a67706b3e7508f740414461219436fc9a73e214a" translate="yes" xml:space="preserve">
          <source>Event Loop Policies</source>
          <target state="translated">이벤트 루프 정책</target>
        </trans-unit>
        <trans-unit id="6c2ed30703b4deb10039f26a41c46d82ade3869e" translate="yes" xml:space="preserve">
          <source>Event Objects</source>
          <target state="translated">이벤트 객체</target>
        </trans-unit>
        <trans-unit id="ed3cd825d47faf09b9e89f0c92cdae979e2e31a2" translate="yes" xml:space="preserve">
          <source>Event handler for click event on directory.</source>
          <target state="translated">Event handler for click event on directory.</target>
        </trans-unit>
        <trans-unit id="11b9ad2ef7942d8668e807a0bd3d61addc9bc8a3" translate="yes" xml:space="preserve">
          <source>Event handler for double-click event on directory.</source>
          <target state="translated">Event handler for double-click event on directory.</target>
        </trans-unit>
        <trans-unit id="9eb5bd3296bfcd9a9d0d09fd539431fab0855169" translate="yes" xml:space="preserve">
          <source>Event handler for double-click event on file.</source>
          <target state="translated">Event handler for double-click event on file.</target>
        </trans-unit>
        <trans-unit id="093fbe8ab68194b8bb10c5cfddd1e74b5b34f347" translate="yes" xml:space="preserve">
          <source>Event handler for single-click event on file.</source>
          <target state="translated">Event handler for single-click event on file.</target>
        </trans-unit>
        <trans-unit id="440fcc4d594dae931e312babd2de1b9b3d2a28fc" translate="yes" xml:space="preserve">
          <source>Event loop provides mechanisms to schedule callback functions to be called at some point in the future. Event loop uses monotonic clocks to track time.</source>
          <target state="translated">이벤트 루프는 향후 어느 시점에서 콜백 함수가 호출되도록 예약하는 메커니즘을 제공합니다. 이벤트 루프는 단조로운 시계를 사용하여 시간을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="62e71e6548032c1c325d64816dbf74d764e0c929" translate="yes" xml:space="preserve">
          <source>Event loops have &lt;strong&gt;low-level&lt;/strong&gt; APIs for the following:</source>
          <target state="translated">이벤트 루프에는 다음에 대한 &lt;strong&gt;저수준&lt;/strong&gt; API가 있습니다.</target>
        </trans-unit>
        <trans-unit id="517d8715e77155c962befa306539460c53898616" translate="yes" xml:space="preserve">
          <source>Event loops use cooperative scheduling: an event loop runs one Task at a time. While a Task awaits for the completion of a Future, the event loop runs other Tasks, callbacks, or performs IO operations.</source>
          <target state="translated">이벤트 루프는 협력 스케줄링을 사용합니다. 이벤트 루프는 한 번에 하나의 작업을 실행합니다. 작업이 미래의 완료를 기다리는 동안 이벤트 루프는 다른 작업을 실행하거나 콜백하거나 IO 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ced38f1f5acc3782ecfa5e0a5049aac2064b7102" translate="yes" xml:space="preserve">
          <source>Event methods, such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; accept factories that return streaming protocols.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt; &lt;code&gt;loop.create_unix_server()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt; &lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt; 와 같은 이벤트 메소드 는 스트리밍 프로토콜을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2666c7b871ccb15924b349d18cdc53f00b1b05d" translate="yes" xml:space="preserve">
          <source>Event port.</source>
          <target state="translated">이벤트 포트.</target>
        </trans-unit>
        <trans-unit id="c09e1c6446bbff501e408ad68773effacce68f7c" translate="yes" xml:space="preserve">
          <source>Events provided in a previous call to &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;read_events()&lt;/code&gt;&lt;/a&gt; will not be yielded again. Events are consumed from the internal queue only when they are retrieved from the iterator, so multiple readers iterating in parallel over iterators obtained from &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt;&lt;code&gt;read_events()&lt;/code&gt;&lt;/a&gt; will have unpredictable results.</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;read_events()&lt;/code&gt; &lt;/a&gt; 에 대한 이전 호출에서 제공된 이벤트 는 다시 생성되지 않습니다. 이벤트가 반복자에서 검색 될 때만 내부 큐에서 이벤트가 소비되므로 &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser.read_events&quot;&gt; &lt;code&gt;read_events()&lt;/code&gt; &lt;/a&gt; 에서 얻은 반복자에 대해 병렬로 반복되는 여러 독자 가 예측할 수없는 결과를 갖게됩니다.</target>
        </trans-unit>
        <trans-unit id="87f71e1dc2cd3d8c17bb5319ed639fa3a8cf8f61" translate="yes" xml:space="preserve">
          <source>Events that must be waited for on this file object.</source>
          <target state="translated">이 파일 객체에서 기다려야하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="adeeb9efa131202d0465b43c1ad89c9661314fa7" translate="yes" xml:space="preserve">
          <source>Ever since the SSL module was introduced in Python 2.6, the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; class has provided two related but distinct areas of functionality:</source>
          <target state="translated">SSL 2.6이 Python 2.6에 도입 된 이후로 &lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt; 클래스는 두 가지 관련이 있지만 고유 한 기능 영역을 제공했습니다.</target>
        </trans-unit>
        <trans-unit id="3c376cc3b04f0eda118d988e7f66f6dd0fa1fb91" translate="yes" xml:space="preserve">
          <source>Every distribution includes some metadata, which you can extract using the &lt;code&gt;metadata()&lt;/code&gt; function:</source>
          <target state="translated">모든 배포에는 &lt;code&gt;metadata()&lt;/code&gt; 함수를 사용하여 추출 할 수있는 일부 메타 데이터가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="5790b30b90561d5789c25e94ba42cf2105a4a907" translate="yes" xml:space="preserve">
          <source>Every handler with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; has that method called to pre-process the request.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; 와 같은 메소드를 가진 모든 핸들러 에는 요청을 사전 처리하기 위해 해당 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="87dd6abe2d83be9ac05336f5766d67cec0efbdc0" translate="yes" xml:space="preserve">
          <source>Every handler with a method named like &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; has that method called to post-process the response.</source>
          <target state="translated">&lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; 와 같은 이름의 메소드를 가진 모든 핸들러 에는 응답 후 처리를 위해 해당 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="023f8d53f12bb3daad0277efc4c3662d502e1d1f" translate="yes" xml:space="preserve">
          <source>Every new component that is installed using &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; or a Distutils-based system will follow the same scheme to copy its file in the right places.</source>
          <target state="translated">&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt; 또는 Distutils 기반 시스템을 사용하여 설치되는 모든 새 구성 요소 는 동일한 구성표에 따라 파일을 올바른 위치에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="986fbc42665dc91f40f77aea3b95a8ca43c093c4" translate="yes" xml:space="preserve">
          <source>Every type is compatible with &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 유형은 &lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt; 와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="53b7884e98183ceb9b4cfd1d011ac92d5357e2a0" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;headersonly&lt;/em&gt; defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt; 와 정확히 동일하지만 &lt;em&gt;헤더 만&lt;/em&gt; 기본값이 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="46f25aeba7b5a83d7186802db481749d4e234b64" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;headersonly&lt;/em&gt; defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;헤더 만&lt;/em&gt; 기본값이 &lt;code&gt;True&lt;/code&gt; 인 것을 제외하고는 &lt;a href=&quot;#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 와 정확히 같습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efd3fcb68660d6ddc801f3d5fff097ef21ad1001" translate="yes" xml:space="preserve">
          <source>Exactly one of &lt;em&gt;hex&lt;/em&gt;, &lt;em&gt;bytes&lt;/em&gt;, &lt;em&gt;bytes_le&lt;/em&gt;, &lt;em&gt;fields&lt;/em&gt;, or &lt;em&gt;int&lt;/em&gt; must be given. The &lt;em&gt;version&lt;/em&gt; argument is optional; if given, the resulting UUID will have its variant and version number set according to &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;, overriding bits in the given &lt;em&gt;hex&lt;/em&gt;, &lt;em&gt;bytes&lt;/em&gt;, &lt;em&gt;bytes_le&lt;/em&gt;, &lt;em&gt;fields&lt;/em&gt;, or &lt;em&gt;int&lt;/em&gt;.</source>
          <target state="translated">정확히 &lt;em&gt;hex&lt;/em&gt; , &lt;em&gt;bytes&lt;/em&gt; , &lt;em&gt;bytes_le&lt;/em&gt; , &lt;em&gt;fields&lt;/em&gt; 또는 &lt;em&gt;int&lt;/em&gt; 중 하나를 제공해야합니다. &lt;em&gt;버전&lt;/em&gt; 인수는 선택 사항입니다; 주어진 경우 결과 UUID는 &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt; 에 따라 변형 및 버전 번호가 설정 되어 지정된 &lt;em&gt;16 진&lt;/em&gt; , &lt;em&gt;바이트&lt;/em&gt; , &lt;em&gt;bytes_le&lt;/em&gt; , &lt;em&gt;필드&lt;/em&gt; 또는 &lt;em&gt;int의&lt;/em&gt; 비트를 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="065d263ca721579032051461d0f85c251cda8d94" translate="yes" xml:space="preserve">
          <source>Examine the set of signals that are pending for delivery to the calling thread (i.e., the signals which have been raised while blocked). Return the set of the pending signals.</source>
          <target state="translated">호출 스레드로 전달 대기중인 신호 세트 (예 : 차단 된 상태에서 발생 된 신호)를 검사하십시오. 보류중인 신호 세트를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="8140c9559ead396556a69cb7c13870d100e23e12" translate="yes" xml:space="preserve">
          <source>Examining Symbol Tables</source>
          <target state="translated">심볼 테이블 검사</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ba64059d54ecf2e4f58095e4ffbe78024c708b65" translate="yes" xml:space="preserve">
          <source>Example 1, copy an existing database into another:</source>
          <target state="translated">예 1, 기존 데이터베이스를 다른 데이터베이스에 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="137645e6411b45ecbf0303ef253386e5ec8dcb85" translate="yes" xml:space="preserve">
          <source>Example 2, copy an existing database into a transient copy:</source>
          <target state="translated">예 2, 기존 데이터베이스를 임시 사본으로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="c37bc538c5bc9675c11e37a0307e34b3f0c1f015" translate="yes" xml:space="preserve">
          <source>Example HTML Parser Application</source>
          <target state="translated">HTML 파서 응용 프로그램 예</target>
        </trans-unit>
        <trans-unit id="0debb52aa0d853532835e594e85ae883978d8199" translate="yes" xml:space="preserve">
          <source>Example Objects</source>
          <target state="translated">예제 객체</target>
        </trans-unit>
        <trans-unit id="d73338318be14a2ee00fe61b468ee7e6b4519df6" translate="yes" xml:space="preserve">
          <source>Example call to enable tracing with &lt;em&gt;skip&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;skip&lt;/em&gt; 을 사용하여 추적을 사용하기위한 호출 예제 :</target>
        </trans-unit>
        <trans-unit id="a6887178fdbaf756ad1659904ae754f41804ae6d" translate="yes" xml:space="preserve">
          <source>Example for a TurtleScreen instance named &lt;code&gt;screen&lt;/code&gt; and a Turtle instance named turtle:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; 이라는 TurtleScreen 인스턴스 와 turtle이라는 Turtle 인스턴스의 예 :</target>
        </trans-unit>
        <trans-unit id="865e4a8d44043cfd9cf400e7ea38cc03278129a8" translate="yes" xml:space="preserve">
          <source>Example for a context with one CA cert and one other cert:</source>
          <target state="translated">하나의 CA 인증서와 다른 하나의 인증서가있는 컨텍스트의 예 :</target>
        </trans-unit>
        <trans-unit id="fef9a506f6a96368c854bbe7b4f86e06f07d8682" translate="yes" xml:space="preserve">
          <source>Example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;statistical bootstrapping&lt;/a&gt; using resampling with replacement to estimate a confidence interval for the mean of a sample of size five:</source>
          <target state="translated">크기가 5 인 표본의 평균에 대한 신뢰 구간을 추정하기 위해 대체로 리샘플링을 사용 하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;통계 부트 스트랩 핑의&lt;/a&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="3ca61bbb7e9b81c9545dbd2fcf6d7aecf4ad39b2" translate="yes" xml:space="preserve">
          <source>Example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;statistical bootstrapping&lt;/a&gt; using resampling with replacement to estimate a confidence interval for the mean of a sample:</source>
          <target state="translated">Example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrapping_(statistics)&quot;&gt;statistical bootstrapping&lt;/a&gt; using resampling with replacement to estimate a confidence interval for the mean of a sample:</target>
        </trans-unit>
        <trans-unit id="86c7e42216c745a3820b86e8839c09c2adbf656f" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;ContextDecorator&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="8357286354d7663d68a111084817ddfbcaa5aee9" translate="yes" xml:space="preserve">
          <source>Example of Client Usage</source>
          <target state="translated">클라이언트 사용 예</target>
        </trans-unit>
        <trans-unit id="5440db91bbed4c909b616c48187fbe4347314229" translate="yes" xml:space="preserve">
          <source>Example of Client and Server Usage</source>
          <target state="translated">클라이언트 및 서버 사용 예</target>
        </trans-unit>
        <trans-unit id="8c2d5ec44c12d9ff6754b9395d719e20a220c4a2" translate="yes" xml:space="preserve">
          <source>Example of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests&quot;&gt;resampling permutation test&lt;/a&gt; to determine the statistical significance or &lt;a href=&quot;https://en.wikipedia.org/wiki/P-value&quot;&gt;p-value&lt;/a&gt; of an observed difference between the effects of a drug versus a placebo:</source>
          <target state="translated">약물의 효과와 위약 사이의 관찰 된 차이 의 통계적 유의성 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/P-value&quot;&gt;p- 값&lt;/a&gt; 을 결정하기 위한 &lt;a href=&quot;https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests&quot;&gt;리샘플링 순열 테스트의&lt;/a&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="f554a16636435edbf30d67f304f055459fe1f648" translate="yes" xml:space="preserve">
          <source>Example of a WSGI application serving the current directory, accept optional directory and port number (default: 8000) on the command line:</source>
          <target state="translated">현재 디렉토리를 제공하는 WSGI 애플리케이션의 예, 명령 행에서 선택적 디렉토리 및 포트 번호 (기본값 : 8000)를 승인하십시오.</target>
        </trans-unit>
        <trans-unit id="3e0f8a042f13e9fc73559f195e6936162acacf55" translate="yes" xml:space="preserve">
          <source>Example of a script counting the number of lines of the text file specified in the command line:</source>
          <target state="translated">Example of a script counting the number of lines of the text file specified in the command line:</target>
        </trans-unit>
        <trans-unit id="b39c929319837464183a66a188d5a4b74c358856" translate="yes" xml:space="preserve">
          <source>Example of a script rewriter that transforms float literals into Decimal objects:</source>
          <target state="translated">부동 리터럴을 Decimal 객체로 변환하는 스크립트 재 작성기의 예 :</target>
        </trans-unit>
        <trans-unit id="3df4e542b42fe51861f15425bec08c9e581be4f2" translate="yes" xml:space="preserve">
          <source>Example of a segmentation fault on Linux with and without enabling the fault handler:</source>
          <target state="translated">결함 핸들러를 사용하거나 사용하지 않는 Linux의 세그먼트 결함 예 :</target>
        </trans-unit>
        <trans-unit id="8494eb293c63909857aec1796f431b7a0bcbfea9" translate="yes" xml:space="preserve">
          <source>Example of an LRU cache for static web content:</source>
          <target state="translated">정적 웹 컨텐츠에 대한 LRU 캐시의 예 :</target>
        </trans-unit>
        <trans-unit id="34595c8b7423a2763fbbca8c42af8ea2cc5eda5c" translate="yes" xml:space="preserve">
          <source>Example of an unhandled exception:</source>
          <target state="translated">처리되지 않은 예외의 예 :</target>
        </trans-unit>
        <trans-unit id="a3bc5b7aba328df1e407aaf62166c8f472d2c871" translate="yes" xml:space="preserve">
          <source>Example of changing the attribute &amp;ldquo;target&amp;rdquo; of every link in first paragraph:</source>
          <target state="translated">첫 번째 단락에서 모든 링크의 &quot;대상&quot;속성을 변경하는 예 :</target>
        </trans-unit>
        <trans-unit id="c8cc5adbc6bda92d954c23713e40bb147c821ac5" translate="yes" xml:space="preserve">
          <source>Example of coroutine displaying the current date every second for 5 seconds:</source>
          <target state="translated">5 초 동안 1 초마다 현재 날짜를 표시하는 코 루틴의 예 :</target>
        </trans-unit>
        <trans-unit id="ace7964881fa427c9b955e08733877f771e2256c" translate="yes" xml:space="preserve">
          <source>Example of counting days to an event:</source>
          <target state="translated">이벤트 일수 계산의 예 :</target>
        </trans-unit>
        <trans-unit id="36b3976e8dd6454c66e771264b482ca8db8300d9" translate="yes" xml:space="preserve">
          <source>Example of efficiently computing &lt;a href=&quot;https://en.wikipedia.org/wiki/Fibonacci_number&quot;&gt;Fibonacci numbers&lt;/a&gt; using a cache to implement a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming&quot;&gt;dynamic programming&lt;/a&gt; technique:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming&quot;&gt;동적 프로그래밍&lt;/a&gt; 기술 을 구현하기 위해 캐시를 사용하여 &lt;a href=&quot;https://en.wikipedia.org/wiki/Fibonacci_number&quot;&gt;피보나치 수&lt;/a&gt; 를 효율적으로 계산하는 예 :</target>
        </trans-unit>
        <trans-unit id="92e63a15b16a1e3592e498eb90ae1c50fad07a68" translate="yes" xml:space="preserve">
          <source>Example of how to GZIP compress a binary string:</source>
          <target state="translated">이진 문자열을 GZIP 압축하는 방법의 예 :</target>
        </trans-unit>
        <trans-unit id="1474ae500b5a001a9b1d649894b172c8f216da9b" translate="yes" xml:space="preserve">
          <source>Example of how to GZIP compress an existing file:</source>
          <target state="translated">기존 파일을 GZIP 압축하는 방법의 예 :</target>
        </trans-unit>
        <trans-unit id="85dc75b483cd6ca6d07c566852cffb63738c9c78" translate="yes" xml:space="preserve">
          <source>Example of how to create a compressed GZIP file:</source>
          <target state="translated">압축 된 GZIP 파일을 작성하는 방법의 예 :</target>
        </trans-unit>
        <trans-unit id="4dd12dcc603cf2780656fa2a8bb16e8d59559b18" translate="yes" xml:space="preserve">
          <source>Example of how to read a compressed file:</source>
          <target state="translated">압축 파일을 읽는 방법의 예 :</target>
        </trans-unit>
        <trans-unit id="6f2cfef200873444a0503cb83516d7f97f10d111" translate="yes" xml:space="preserve">
          <source>Example of how to wait for enqueued tasks to be completed:</source>
          <target state="translated">대기중인 작업이 완료되기를 기다리는 방법의 예 :</target>
        </trans-unit>
        <trans-unit id="279156ed9b71d7424658bef303f91a5f62b81e6a" translate="yes" xml:space="preserve">
          <source>Example of letting user specified command-line arguments take precedence over environment variables which in turn take precedence over default values:</source>
          <target state="translated">사용자 지정 명령 줄 인수가 환경 변수보다 우선하도록하는 예 : 기본값보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="626096412640de8c129ec606e725bbd326ee4695" translate="yes" xml:space="preserve">
          <source>Example of output before/after running some tests of the Python test suite:</source>
          <target state="translated">Python 테스트 스위트의 일부 테스트를 실행하기 전 / 후의 출력 예 :</target>
        </trans-unit>
        <trans-unit id="c591df6074ed0fe5e6bf8dc7b32c667a8e5dba71" translate="yes" xml:space="preserve">
          <source>Example of output of the Python test suite (traceback limited to 25 frames):</source>
          <target state="translated">Python 테스트 스위트의 출력 예 (트레이스 백이 25 프레임으로 제한됨) :</target>
        </trans-unit>
        <trans-unit id="baf8308b40270c8e949acaa0e52904b087b78869" translate="yes" xml:space="preserve">
          <source>Example of output of the Python test suite:</source>
          <target state="translated">Python 테스트 스위트의 출력 예 :</target>
        </trans-unit>
        <trans-unit id="41696aeac4c168c952d61557ba52d98acdc47f3b" translate="yes" xml:space="preserve">
          <source>Example of simulating Python&amp;rsquo;s internal lookup chain:</source>
          <target state="translated">Python의 내부 조회 체인을 시뮬레이션하는 예 :</target>
        </trans-unit>
        <trans-unit id="74185058881dcc36931b01100d8e43520182b9fe" translate="yes" xml:space="preserve">
          <source>Example of tokenizing a file programmatically, reading unicode strings instead of bytes with &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Example of tokenizing a file programmatically, reading unicode strings instead of bytes with &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="d13f5ff947b45e47e249594d1bd333d3fdd19f37" translate="yes" xml:space="preserve">
          <source>Example of tokenizing from the command line. The script:</source>
          <target state="translated">명령 행에서 토큰 화의 예. 스크립트 :</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="ff254b80ff4deddde105df533b4ecf09cb09b4b9" translate="yes" xml:space="preserve">
          <source>Example of using &lt;a href=&quot;#operator.itemgetter&quot;&gt;&lt;code&gt;itemgetter()&lt;/code&gt;&lt;/a&gt; to retrieve specific fields from a tuple record:</source>
          <target state="translated">&lt;a href=&quot;#operator.itemgetter&quot;&gt; &lt;code&gt;itemgetter()&lt;/code&gt; &lt;/a&gt; 를 사용하여 튜플 레코드에서 특정 필드를 검색 하는 예 :</target>
        </trans-unit>
        <trans-unit id="1f16a763880498f7b430c362f22c1b3f123bbad9" translate="yes" xml:space="preserve">
          <source>Example patterns for using the &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; class to simulate nested contexts:</source>
          <target state="translated">중첩 된 컨텍스트를 시뮬레이션하기 위해 &lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt; 클래스를 사용하는 예제 패턴 :</target>
        </trans-unit>
        <trans-unit id="b57fbbce3024226f494b8c9f6b74c9e0f9482dfe" translate="yes" xml:space="preserve">
          <source>Example usage of ModuleFinder</source>
          <target state="translated">ModuleFinder 사용 예</target>
        </trans-unit>
        <trans-unit id="97e958b379493045126047344a14c53561a623ed" translate="yes" xml:space="preserve">
          <source>Example usage of some of the methods of &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">일부 &lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 메소드의 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="60f284f90e62dd3c3da0a06cd83c63a0a2636e6f" translate="yes" xml:space="preserve">
          <source>Example usage of the binary objects. We&amp;rsquo;re going to transfer an image over XMLRPC:</source>
          <target state="translated">이진 객체의 사용 예 우리는 XMLRPC를 통해 이미지를 전송할 것입니다 :</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="c7a9f6edde5b90563dc590480ce2c19b3ceb8c4c" translate="yes" xml:space="preserve">
          <source>Example use with input stream:</source>
          <target state="translated">입력 스트림과 함께 사용 예 :</target>
        </trans-unit>
        <trans-unit id="40207c8cfe3dfb26f745fedfb1e280021e268b08" translate="yes" xml:space="preserve">
          <source>Example use with output streams:</source>
          <target state="translated">출력 스트림과 함께 사용 예 :</target>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a53066aab3018c902feba5bb8428b1e0c0ca3f41" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Tuple[T1, T2]&lt;/code&gt; is a tuple of two elements corresponding to type variables T1 and T2. &lt;code&gt;Tuple[int, float, str]&lt;/code&gt; is a tuple of an int, a float and a string.</source>
          <target state="translated">예 : &lt;code&gt;Tuple[T1, T2]&lt;/code&gt; 은 유형 변수 T1 및 T2에 해당하는 두 요소의 튜플입니다. &lt;code&gt;Tuple[int, float, str]&lt;/code&gt; 은 int, float 및 string의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="d5ff9b1ca76cd267a4d86feb025b24f6e8e44e83" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;http.client.responses[http.client.NOT_FOUND]&lt;/code&gt; is &lt;code&gt;'Not Found'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;http.client.responses[http.client.NOT_FOUND]&lt;/code&gt; 는 &lt;code&gt;'Not Found'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3bac6bf28038e84740e2a40be66e3c0eab528c1a" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote('/El Ni&amp;ntilde;o/')&lt;/code&gt; yields &lt;code&gt;'/El%20Ni%C3%B1o/'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;quote('/El Ni&amp;ntilde;o/')&lt;/code&gt; 수율 &lt;code&gt;'/El%20Ni%C3%B1o/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11fef01fb5ea38d0eca370802e6deeb2a2aace34" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote_from_bytes(b'a&amp;amp;\xef')&lt;/code&gt; yields &lt;code&gt;'a%26%EF'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;quote_from_bytes(b'a&amp;amp;\xef')&lt;/code&gt; &lt;code&gt;'a%26%EF'&lt;/code&gt; 산출 합니다.</target>
        </trans-unit>
        <trans-unit id="51cdde3985a7fb4acf75fc1fdc43cf98aa4d7fb8" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;quote_plus('/El Ni&amp;ntilde;o/')&lt;/code&gt; yields &lt;code&gt;'%2FEl+Ni%C3%B1o%2F'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;quote_plus('/El Ni&amp;ntilde;o/')&lt;/code&gt; 수율 &lt;code&gt;'%2FEl+Ni%C3%B1o%2F'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8c50fbefe3d09e28519b8ae7c691cb75894a1fd" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote('/El%20Ni%C3%B1o/')&lt;/code&gt; yields &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;unquote('/El%20Ni%C3%B1o/')&lt;/code&gt; &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt; 산출 합니다.</target>
        </trans-unit>
        <trans-unit id="b8d066e789bc4b0e4ff9e3d86d53595cc3ee6e29" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote_plus('/El+Ni%C3%B1o/')&lt;/code&gt; yields &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;unquote_plus('/El+Ni%C3%B1o/')&lt;/code&gt; &lt;code&gt;'/El Ni&amp;ntilde;o/'&lt;/code&gt; 산출 합니다.</target>
        </trans-unit>
        <trans-unit id="9e1ac2893d1259af6f482135918cb008646b0886" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;unquote_to_bytes('a%26%EF')&lt;/code&gt; yields &lt;code&gt;b'a&amp;amp;\xef'&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;unquote_to_bytes('a%26%EF')&lt;/code&gt; 산출 &lt;code&gt;b'a&amp;amp;\xef'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c3aa7e06017e8ff98680df27fbdea1b412f07ad" translate="yes" xml:space="preserve">
          <source>Example: Emulation of compile()</source>
          <target state="translated">예 : compile () 에뮬레이션</target>
        </trans-unit>
        <trans-unit id="b26c82a6a778161b5bdbdbe192421089f6e5017f" translate="yes" xml:space="preserve">
          <source>Example: Given the function &lt;code&gt;myfunc()&lt;/code&gt;:</source>
          <target state="translated">예 : &lt;code&gt;myfunc()&lt;/code&gt; 함수가 주어 졌을 때 :</target>
        </trans-unit>
        <trans-unit id="0fa10e8510aad6feea266e052f24f7f689f84c23" translate="yes" xml:space="preserve">
          <source>Example: print all descriptions of arguments:</source>
          <target state="translated">예 : 인수에 대한 모든 설명을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="70c3542949a842ba3f647de478464545ff410014" translate="yes" xml:space="preserve">
          <source>Example: print all keyword-only arguments without default values:</source>
          <target state="translated">예 : 기본값없이 모든 키워드 전용 인수를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="6d082aaac0220b28f2b8c187674d4fc1ad5d01c2" translate="yes" xml:space="preserve">
          <source>Examples (all on a SVR4 compliant system):</source>
          <target state="translated">예 (모두 SVR4 호환 시스템에서) :</target>
        </trans-unit>
        <trans-unit id="ba7cb01919ec9e725d24d29be0234801f58640ba" translate="yes" xml:space="preserve">
          <source>Examples and Recipes</source>
          <target state="translated">예와 요리법</target>
        </trans-unit>
        <trans-unit id="a361faee4c8e9d15d95654bf795e643a84fc895c" translate="yes" xml:space="preserve">
          <source>Examples containing both expected output and an exception are not supported. Trying to guess where one ends and the other begins is too error-prone, and that also makes for a confusing test.</source>
          <target state="translated">예상 출력과 예외가 모두 포함 된 예는 지원되지 않습니다. 어느 쪽이 끝나고 다른 쪽이 시작되는지 추측하려고하면 오류가 발생하기 쉬우므로 혼동되는 테스트가됩니다.</target>
        </trans-unit>
        <trans-unit id="86ce654eab3bc677fad0231965f3321413be76f0" translate="yes" xml:space="preserve">
          <source>Examples of &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; arithmetic:</source>
          <target state="translated">&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 산술의 예 :</target>
        </trans-unit>
        <trans-unit id="a9cb2f8191f0236461789853c793fe43887124be" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용 예 : &lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f53aa95370601fa81bc3dadc1f65b4708e63a4cd" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용 예 : &lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec3db14421f66f5032b9ec5cc4a9289b18017179" translate="yes" xml:space="preserve">
          <source>Examples of Usage: &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용 예 : &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="217609f8d539d8fd74dde985eae19ac4f03520a8" translate="yes" xml:space="preserve">
          <source>Examples of returned values:</source>
          <target state="translated">반환 값의 예 :</target>
        </trans-unit>
        <trans-unit id="259aa5fcfc60a59c500052a700193e18835bd2e4" translate="yes" xml:space="preserve">
          <source>Examples of these sections in the file are given below.</source>
          <target state="translated">파일에서 이러한 섹션의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6854cb6d7461f271239ae6431fef4bbfb9d0849f" translate="yes" xml:space="preserve">
          <source>Examples of usage</source>
          <target state="translated">사용법의 예</target>
        </trans-unit>
        <trans-unit id="91fc4c486785c00452b26ce872ca765962ee129b" translate="yes" xml:space="preserve">
          <source>Examples of usage: &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용 예 : &lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7140845a3bb12ad8574343147a832baa55c8d7e8" translate="yes" xml:space="preserve">
          <source>Examples of working with &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt; 객체 작업의 예 :</target>
        </trans-unit>
        <trans-unit id="f129f0c85e501b41344120925f5197433ede1e8c" translate="yes" xml:space="preserve">
          <source>Examples of working with a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체 로 작업하는 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="cc3ff6324e8eebbf50e9554bcdd2e7c7a2cbc65b" translate="yes" xml:space="preserve">
          <source>Exceeding limitations on different file systems can cause decompression failed. Such as allowable characters in the directory entries, length of the file name, length of the pathname, size of a single file, and number of files, etc.</source>
          <target state="translated">다른 파일 시스템에 대한 제한을 초과하면 압축 해제에 실패 할 수 있습니다. 디렉토리 항목에 허용되는 문자, 파일 이름 길이, 경로 이름 길이, 단일 파일 크기 및 파일 수 등</target>
        </trans-unit>
        <trans-unit id="1f7913834e700496b52dad8f01ac19616ff774c6" translate="yes" xml:space="preserve">
          <source>Except for the code &lt;code&gt;'C'&lt;/code&gt;, the language code corresponds to &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;language code&lt;/em&gt; and &lt;em&gt;encoding&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt; if their values cannot be determined.</source>
          <target state="translated">코드 &lt;code&gt;'C'&lt;/code&gt; 를 제외하고 언어 코드는 &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1766에&lt;/strong&gt;&lt;/a&gt; 해당합니다 . 값을 판별 할 수없는 경우 &lt;em&gt;언어 코드&lt;/em&gt; 및 &lt;em&gt;인코딩&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80904ba25a9e3243ed632e1ff1cc6a03a8d1747e" translate="yes" xml:space="preserve">
          <source>Except for the code &lt;code&gt;'C'&lt;/code&gt;, the language code corresponds to &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1766&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;language code&lt;/em&gt; and &lt;em&gt;encoding&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt; if their values cannot be determined.</source>
          <target state="translated">코드 &lt;code&gt;'C'&lt;/code&gt; 를 제외하고 언어 코드는 &lt;a href=&quot;https://tools.ietf.org/html/rfc1766.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 1766에&lt;/strong&gt;&lt;/a&gt; 해당합니다 . 값을 판별 할 수없는 경우 &lt;em&gt;언어 코드&lt;/em&gt; 및 &lt;em&gt;인코딩&lt;/em&gt; 이 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="0748cd739094a93fe7da05e30469096aa55c80e4" translate="yes" xml:space="preserve">
          <source>Exception classes</source>
          <target state="translated">예외 클래스</target>
        </trans-unit>
        <trans-unit id="312428d3e8acfd1d42aeb467b6b1c11802d7c8c2" translate="yes" xml:space="preserve">
          <source>Exception failing because of &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; invalidity: incorrect attributes, incorrect &lt;em&gt;Set-Cookie&lt;/em&gt; header, etc.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; 무효 성으로 인한 예외 실패 : 잘못된 속성, 잘못된 &lt;em&gt;Set-Cookie&lt;/em&gt; 헤더 등</target>
        </trans-unit>
        <trans-unit id="209011554fcfc911dcec7eb38e42eca35be08388" translate="yes" xml:space="preserve">
          <source>Exception hierarchy</source>
          <target state="translated">예외 계층</target>
        </trans-unit>
        <trans-unit id="8b676f0d2de85f0abc2af15f19b9c6a83a75d753" translate="yes" xml:space="preserve">
          <source>Exception raised by &lt;code&gt;Connection.recv_bytes_into()&lt;/code&gt; when the supplied buffer object is too small for the message read.</source>
          <target state="translated">제공된 버퍼 오브젝트가 메시지 읽기에 비해 너무 작은 경우 &lt;code&gt;Connection.recv_bytes_into()&lt;/code&gt; 의해 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8e9814d47307c441f0f179379aabd00fa81be39a" translate="yes" xml:space="preserve">
          <source>Exception raised by strict parsers if a single option appears twice during reading from a single file, string or dictionary. This catches misspellings and case sensitivity-related errors, e.g. a dictionary may have two keys representing the same case-insensitive configuration key.</source>
          <target state="translated">단일 파일, 문자열 또는 사전에서 읽는 동안 단일 옵션이 두 번 나타나는 경우 엄격한 파서에서 예외가 발생합니다. 이 경우 맞춤법 오류와 대소 문자 구분 관련 오류가 발생합니다. 예를 들어 사전에는 대소 문자를 구분하지 않는 동일한 구성 키를 나타내는 두 개의 키가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0be211047c69b5d08f64a29ebebc88eb78862e7f" translate="yes" xml:space="preserve">
          <source>Exception raised by the &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; class for quitting the debugger.</source>
          <target state="translated">디버거를 종료하기 위해 &lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt; 클래스에서 예외가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="f74f98c16d92d1f665535f7524cabfe2c83a8b61" translate="yes" xml:space="preserve">
          <source>Exception raised by the &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; class when syntactical errors are encountered in source text. Instances of this exception provide three interesting attributes: &lt;code&gt;msg&lt;/code&gt; is a textual explanation of the error, &lt;code&gt;filename&lt;/code&gt; is the name of the source file, and &lt;code&gt;lineno&lt;/code&gt; gives the line number on which the error was found.</source>
          <target state="translated">소스 텍스트에서 구문 오류가 발생 하면 &lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; &lt;/a&gt; 클래스 에서 예외 가 발생했습니다. 이 예외의 인스턴스는 세 가지 흥미로운 속성을 제공합니다. &lt;code&gt;msg&lt;/code&gt; 는 오류에 대한 텍스트 설명, &lt;code&gt;filename&lt;/code&gt; 은 소스 파일 이름, &lt;code&gt;lineno&lt;/code&gt; 는 오류가 발견 된 행 번호를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="72225b97067acb514db053e3737009c2206a61fb" translate="yes" xml:space="preserve">
          <source>Exception raised by zipimporter objects. It&amp;rsquo;s a subclass of &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;, so it can be caught as &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;, too.</source>
          <target state="translated">zipimporter 객체에 의해 예외가 발생했습니다. 그것은의 서브 클래스의 &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; 를&lt;/a&gt; 이 같이 잡을 수 있도록, &lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; 를&lt;/a&gt; 도.</target>
        </trans-unit>
        <trans-unit id="326de5ee01a9691f56ba64beec39fbde19b7e2b8" translate="yes" xml:space="preserve">
          <source>Exception raised for errors that are related to the database&amp;rsquo;s operation and not necessarily under the control of the programmer, e.g. an unexpected disconnect occurs, the data source name is not found, a transaction could not be processed, etc. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스 작동과 관련이 있고 프로그래머가 반드시 제어 할 필요는없는 오류 (예 : 예기치 않은 연결 끊기 발생, 데이터 소스 이름을 찾을 수 없음, 트랜잭션을 처리 할 수 ​​없음 등)에 대한 예외가 발생했습니다. 이는 &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다. .</target>
        </trans-unit>
        <trans-unit id="ee960a200e08a9cd1318594ffd8b99e35250caec" translate="yes" xml:space="preserve">
          <source>Exception raised for errors that are related to the database.</source>
          <target state="translated">데이터베이스와 관련된 오류에 대한 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="01200d3d284b1e6dc53e60c9884b2ad8119aa369" translate="yes" xml:space="preserve">
          <source>Exception raised for programming errors, e.g. table not found or already exists, syntax error in the SQL statement, wrong number of parameters specified, etc. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로그래밍 오류 (예 : 테이블을 찾을 수 없거나 이미 존재 함), SQL 문의 구문 오류, 지정된 매개 변수 수가 잘못됨에 대한 예외가 발생했습니다. 이는 &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="4271bf7a06917b05a5d1384e0893d9d319bbe0ab" translate="yes" xml:space="preserve">
          <source>Exception raised if &lt;code&gt;add_section()&lt;/code&gt; is called with the name of a section that is already present or in strict parsers when a section if found more than once in a single input file, string or dictionary.</source>
          <target state="translated">단일 입력 파일, 문자열 또는 사전에서 섹션을 두 번 이상 찾은 경우 이미 존재하는 섹션의 이름으로 엄격한 구문 분석기에서 &lt;code&gt;add_section()&lt;/code&gt; 을 호출 하면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="057a471983601bd66f25f0c5286e874cf7e33a0b" translate="yes" xml:space="preserve">
          <source>Exception raised in case a method or database API was used which is not supported by the database, e.g. calling the &lt;a href=&quot;#sqlite3.Connection.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt; method on a connection that does not support transaction or has transactions turned off. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스에서 지원하지 않는 메소드 또는 데이터베이스 API가 사용 된 경우 예외 (예 : 트랜잭션을 지원하지 않거나 트랜잭션이 해제 된 연결 에서 &lt;a href=&quot;#sqlite3.Connection.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; &lt;/a&gt; 메소드 호출 ) &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="d060797ed8d4ae3223972050fa472e9e83ba86d6" translate="yes" xml:space="preserve">
          <source>Exception raised on any errors from this module (errors from &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module are not caught). The reason for the exception is passed to the constructor as a string.</source>
          <target state="translated">이 모듈의 오류에 대해 예외가 발생했습니다 ( &lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt; 모듈의 오류는 포착되지 않습니다). 예외의 이유는 문자열로 생성자에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="bd190d9d0aef112603ae20aa4d23969762ddd09b" translate="yes" xml:space="preserve">
          <source>Exception raised on any errors. The reason for the exception is passed to the constructor as a string.</source>
          <target state="translated">오류가 발생하면 예외가 발생합니다. 예외의 이유는 문자열로 생성자에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="add7af7e43c5821985246901960320352b13632a" translate="yes" xml:space="preserve">
          <source>Exception raised on compression and decompression errors.</source>
          <target state="translated">압축 및 압축 해제 오류에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="83582aafa9421ade9e11a1c6e9ada45e9240c08e" translate="yes" xml:space="preserve">
          <source>Exception raised on errors. These are usually programming errors.</source>
          <target state="translated">오류로 인해 예외가 발생했습니다. 이들은 대개 프로그래밍 오류입니다.</target>
        </trans-unit>
        <trans-unit id="d89247aeb60c7b476bf711d788fdd3b23f45a545" translate="yes" xml:space="preserve">
          <source>Exception raised on incomplete data. These are usually not programming errors, but may be handled by reading a little more data and trying again.</source>
          <target state="translated">불완전한 데이터에서 예외가 발생했습니다. 일반적으로 프로그래밍 오류는 아니지만 조금 더 많은 데이터를 읽고 다시 시도하면 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee06e8cdc58ec38aa06821b5c570c6ead19e78bf" translate="yes" xml:space="preserve">
          <source>Exception raised on various occasions; argument is a string describing what is wrong.</source>
          <target state="translated">여러 경우에 예외가 발생했다. argument는 무엇이 잘못되었는지 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8aea2f4d93f31bf28c13b84df0443c26570db178" translate="yes" xml:space="preserve">
          <source>Exception raised when a browser control error occurs.</source>
          <target state="translated">브라우저 제어 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d49e7c6044bf1d82135e97b494b41e584ec919ed" translate="yes" xml:space="preserve">
          <source>Exception raised when a curses library function returns an error.</source>
          <target state="translated">curses 라이브러리 함수가 오류를 리턴하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="73bd4d3b3c0dbde6b337c936d8c4ddb67a2f15f9" translate="yes" xml:space="preserve">
          <source>Exception raised when a failure occurs within the parser module. This is generally produced for validation failures rather than the built-in &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; raised during normal parsing. The exception argument is either a string describing the reason of the failure or a tuple containing a sequence causing the failure from a parse tree passed to &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; and an explanatory string. Calls to &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; need to be able to handle either type of exception, while calls to other functions in the module will only need to be aware of the simple string values.</source>
          <target state="translated">파서 모듈 내에서 오류가 발생하면 예외가 발생합니다. 일반적으로 일반 구문 분석 중에 발생 하는 기본 제공 &lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가&lt;/a&gt; 아닌 유효성 검사 실패에 대해 생성됩니다 . 예외 인수는 실패 이유를 설명하는 문자열이거나 &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; 전달 된 구문 분석 트리에서 실패를 유발하는 시퀀스를 포함하는 튜플 및 설명 문자열입니다. &lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt; 대한 호출은 두 가지 유형의 예외를 처리 할 수 ​​있어야하지만 모듈의 다른 함수에 대한 호출은 단순한 문자열 값만 인식하면됩니다.</target>
        </trans-unit>
        <trans-unit id="0cb1412863f6feab0709a71cd7908436a470d95a" translate="yes" xml:space="preserve">
          <source>Exception raised when a proxy object is used but the underlying object has been collected. This is the same as the standard &lt;a href=&quot;exceptions#ReferenceError&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">프록시 객체가 사용되었지만 기본 객체가 수집 된 경우 예외가 발생했습니다. 이것은 표준 &lt;a href=&quot;exceptions#ReferenceError&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt; 예외 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e3633dc111c05817710e4593aa78a11ceb9920e4" translate="yes" xml:space="preserve">
          <source>Exception raised when a reply is received from the server that does not begin with a digit in the range 1&amp;ndash;5.</source>
          <target state="translated">서버에서 1-5 범위의 숫자로 시작하지 않는 응답을 수신하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8b175a0377a3f39fe7da494c1e660375102c528d" translate="yes" xml:space="preserve">
          <source>Exception raised when a reply is received from the server that does not fit the response specifications of the File Transfer Protocol, i.e. begin with a digit in the range 1&amp;ndash;5.</source>
          <target state="translated">파일 전송 프로토콜의 응답 스펙에 맞지 않는 서버로부터 응답을 수신 할 때 (예 : 1-5 범위의 숫자로 시작) 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="178c3d0791275ff5c898f9c8e23a3262f4890471" translate="yes" xml:space="preserve">
          <source>Exception raised when a response code in the range 400&amp;ndash;499 is received.</source>
          <target state="translated">400-499 범위의 응답 코드가 수신되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4313ff412f1b54328f22236a36a88ad719a8f052" translate="yes" xml:space="preserve">
          <source>Exception raised when a response code in the range 500&amp;ndash;599 is received.</source>
          <target state="translated">500-599 범위의 응답 코드가 수신되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b310113af08754064dafc82caa63d5845c17c234" translate="yes" xml:space="preserve">
          <source>Exception raised when a specified option is not found in the specified section.</source>
          <target state="translated">지정된 섹션에서 지정된 옵션을 찾지 못하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1004e9f4741227620239abe10c19ae1f580a13e0" translate="yes" xml:space="preserve">
          <source>Exception raised when a specified section is not found.</source>
          <target state="translated">지정된 섹션을 찾지 못하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d170cc3be4359bff0d1bd6c483fb6593917ddd92" translate="yes" xml:space="preserve">
          <source>Exception raised when a string passed to one of the functions here is not a valid regular expression (for example, it might contain unmatched parentheses) or when some other error occurs during compilation or matching. It is never an error if a string contains no match for a pattern. The error instance has the following additional attributes:</source>
          <target state="translated">여기에있는 함수 중 하나로 전달 된 문자열이 유효한 정규식이 아니거나 (예 : 일치하지 않는 괄호를 포함 할 수 있음) 컴파일 또는 일치하는 동안 다른 오류가 발생하면 예외가 발생합니다. 문자열에 패턴과 일치하는 것이 없으면 오류가 아닙니다. 오류 인스턴스에는 다음과 같은 추가 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa4e1d32e4e5cc4617660d479d0e6e738f91e3aa" translate="yes" xml:space="preserve">
          <source>Exception raised when an error code signifying a permanent error (response codes in the range 500&amp;ndash;599) is received.</source>
          <target state="translated">영구 오류를 나타내는 오류 코드 (500-599 범위의 응답 코드)가 수신되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bebdf5cfc60e6b3b7fe1aaa5a65b62566a2f3963" translate="yes" xml:space="preserve">
          <source>Exception raised when an error code signifying a temporary error (response codes in the range 400&amp;ndash;499) is received.</source>
          <target state="translated">일시적 오류 (400-499 범위의 응답 코드)를 나타내는 오류 코드가 수신되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a5694a429c5b81e9ff0998944dfdfe1bb38edae7" translate="yes" xml:space="preserve">
          <source>Exception raised when an error occurs while attempting to compile the file.</source>
          <target state="translated">파일 컴파일을 시도하는 동안 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7d2745077fcab3e366892be2556894fde814c021" translate="yes" xml:space="preserve">
          <source>Exception raised when an option referenced from a value does not exist. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값에서 참조 된 옵션이 존재하지 않으면 예외가 발생합니다. 하위 클래스 &lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b7880563336914d732cc4888dbfc1750c2e27d3" translate="yes" xml:space="preserve">
          <source>Exception raised when an unexpected reply is received from the server.</source>
          <target state="translated">서버에서 예기치 않은 응답이 수신되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f4b8fc254e42ccc6740f5732866846a4a570ce88" translate="yes" xml:space="preserve">
          <source>Exception raised when attempting to parse a file which has no section headers.</source>
          <target state="translated">섹션 헤더가없는 파일을 구문 분석 할 때 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="c79f27b9a9e561a4cfaa3a6453eb34419222db51" translate="yes" xml:space="preserve">
          <source>Exception raised when errors occur attempting to parse a file.</source>
          <target state="translated">파일 구문 분석 중에 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="631784ac2fbe83dd79545eb9ccb32e5e4637a3f2" translate="yes" xml:space="preserve">
          <source>Exception raised when non-blocking &lt;a href=&quot;#queue.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#queue.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt;) is called on a &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; object which is empty.</source>
          <target state="translated">비 &lt;a href=&quot;#queue.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#queue.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; (또는 get_nowait () ) 가 비어 있는 &lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 객체 에서 호출 되면 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="46b915457295e62b46f8751e8312793a4805b076" translate="yes" xml:space="preserve">
          <source>Exception raised when non-blocking &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;put()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt;&lt;code&gt;put_nowait()&lt;/code&gt;&lt;/a&gt;) is called on a &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; object which is full.</source>
          <target state="translated">비 차단 &lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;put()&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;#queue.Queue.put_nowait&quot;&gt; &lt;code&gt;put_nowait()&lt;/code&gt; &lt;/a&gt; ) 이 가득 찬 &lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 객체 에서 호출 되면 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="c1b955eb00c6914a5e6e63306f665ace77961838" translate="yes" xml:space="preserve">
          <source>Exception raised when something can&amp;rsquo;t be encoded using the binhex format (for example, a filename is too long to fit in the filename field), or when input is not properly encoded binhex data.</source>
          <target state="translated">Binhex 형식을 사용하여 무언가를 인코딩 할 수없는 경우 (예 : 파일 이름이 너무 길어서 파일 이름 필드에 맞지 않음) 또는 입력이 Binhex 데이터를 올바르게 인코딩하지 않은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c563209ae42fb0b135aae77ecc57a734af366ac5" translate="yes" xml:space="preserve">
          <source>Exception raised when string interpolation cannot be completed because the number of iterations exceeds &lt;a href=&quot;#configparser.MAX_INTERPOLATION_DEPTH&quot;&gt;&lt;code&gt;MAX_INTERPOLATION_DEPTH&lt;/code&gt;&lt;/a&gt;. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반복 횟수가 &lt;a href=&quot;#configparser.MAX_INTERPOLATION_DEPTH&quot;&gt; &lt;code&gt;MAX_INTERPOLATION_DEPTH&lt;/code&gt; 를&lt;/a&gt; 초과하여 문자열 보간을 완료 할 수없는 경우 예외가 발생합니다 . 하위 클래스 &lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df8889c1d3d172d311451a8a2ec6064de60c1810" translate="yes" xml:space="preserve">
          <source>Exception raised when the &lt;a href=&quot;#asyncio.Queue.put_nowait&quot;&gt;&lt;code&gt;put_nowait()&lt;/code&gt;&lt;/a&gt; method is called on a queue that has reached its &lt;em&gt;maxsize&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.Queue.put_nowait&quot;&gt; &lt;code&gt;put_nowait()&lt;/code&gt; &lt;/a&gt; 메소드가 &lt;em&gt;maxsize에&lt;/em&gt; 도달 한 큐에서 호출 될 때 예외가 발생 했습니다 .</target>
        </trans-unit>
        <trans-unit id="ba8897a682d567138428408ab9df581f4594f8ab" translate="yes" xml:space="preserve">
          <source>Exception raised when the locale passed to &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; is not recognized.</source>
          <target state="translated">&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt; 전달 된 로케일 이 인식되지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="bb3faee804f53ff4db6f433e551c2d08c0c32915" translate="yes" xml:space="preserve">
          <source>Exception raised when the relational integrity of the database is affected, e.g. a foreign key check fails. It is a subclass of &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt;&lt;code&gt;DatabaseError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터베이스의 관계 무결성이 영향을받는 경우 예외가 발생합니다 (예 : 외래 키 검사 실패). &lt;a href=&quot;#sqlite3.DatabaseError&quot;&gt; &lt;code&gt;DatabaseError&lt;/code&gt; &lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="04bb87f4130b4180b1ba156d3a51be1dea3bdb9b" translate="yes" xml:space="preserve">
          <source>Exception raised when the source text into which substitutions are made does not conform to the required syntax. Subclass of &lt;a href=&quot;#configparser.InterpolationError&quot;&gt;&lt;code&gt;InterpolationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대체 할 소스 텍스트가 필수 구문을 준수하지 않는 경우 예외가 발생합니다. 하위 클래스 &lt;a href=&quot;#configparser.InterpolationError&quot;&gt; &lt;code&gt;InterpolationError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="532ac37a2d888c287b65abc3fd3680b66b2ca974" translate="yes" xml:space="preserve">
          <source>Exception raised when there is some error in the response data.</source>
          <target state="translated">응답 데이터에 오류가있을 때 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="224d233b1223bd5e534e4c92fba78ccc504d48bd" translate="yes" xml:space="preserve">
          <source>Exception to be raised when a test fails. This is deprecated in favor of &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;-based tests and &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s assertion methods.</source>
          <target state="translated">테스트가 실패하면 예외가 발생합니다. 이것은 &lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 기반 테스트 및 &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; 의 어설 션 메소드 를 위해 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6f961bbc4f35e8d30c38075dc27127e8e39cb1ef" translate="yes" xml:space="preserve">
          <source>Exception tuple (&amp;agrave; la &lt;code&gt;sys.exc_info&lt;/code&gt;) or, if no exception has occurred, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">예외 튜플 (a la &lt;code&gt;sys.exc_info&lt;/code&gt; ) 또는 예외가 발생하지 않으면 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e151058274b1944e593ebbb920057fb138f7f000" translate="yes" xml:space="preserve">
          <source>Exception when a node does not exist in the referenced context. For example, &lt;code&gt;NamedNodeMap.removeNamedItem()&lt;/code&gt; will raise this if the node passed in does not exist in the map.</source>
          <target state="translated">참조 된 컨텍스트에 노드가 존재하지 않는 경우 예외. 예를 들어, 전달 된 노드가 맵에 없으면 &lt;code&gt;NamedNodeMap.removeNamedItem()&lt;/code&gt; 이이를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="369b35fc723492a4b2012ba48db7d24ca448035c" translate="yes" xml:space="preserve">
          <source>Exceptions and Error Handling</source>
          <target state="translated">예외 및 오류 처리</target>
        </trans-unit>
        <trans-unit id="ccf1573108e16e6d38ba26ddc8eacf022ebd30f9" translate="yes" xml:space="preserve">
          <source>Exceptions and warnings</source>
          <target state="translated">예외 및 경고</target>
        </trans-unit>
        <trans-unit id="df71308e3d32ab453e4717e512971ad84660cee6" translate="yes" xml:space="preserve">
          <source>Exceptions defined in this module all inherit from &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 모듈에 정의 된 예외는 모두 &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; &lt;/a&gt; 에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="befafc060d7dd8ad7d50727f39e2bf81a426267d" translate="yes" xml:space="preserve">
          <source>Exceptions in this module are coded as class instances:</source>
          <target state="translated">이 모듈의 예외는 클래스 인스턴스로 코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="a249548d6691d3290bc9485f451db6dd6febec8a" translate="yes" xml:space="preserve">
          <source>Exceptions raised by finalizer callbacks during garbage collection will be shown on the standard error output, but cannot be propagated. They are handled in the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method or a weak reference&amp;rsquo;s callback.</source>
          <target state="translated">가비지 수집 중에 파이널 라이저 콜백에서 발생한 예외는 표준 오류 출력에 표시되지만 전파 할 수는 없습니다. 객체의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; 메소드 또는 약한 참조의 콜백 에서 발생하는 예외와 같은 방식으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="d796429598fba2d1c58a59f6f3ee19a6a7783970" translate="yes" xml:space="preserve">
          <source>Exceptions raised by finalizer callbacks during garbage collection will be shown on the standard error output, but cannot be propagated. They are handled in the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method or a weak reference&amp;rsquo;s callback.</source>
          <target state="translated">Exceptions raised by finalizer callbacks during garbage collection will be shown on the standard error output, but cannot be propagated. They are handled in the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; method or a weak reference&amp;rsquo;s callback.</target>
        </trans-unit>
        <trans-unit id="a8f3eecca356dbdba89502d5f4b7f7be1cd1bf0d" translate="yes" xml:space="preserve">
          <source>Exceptions raised by the callback will be noted on the standard error output, but cannot be propagated; they are handled in exactly the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">콜백에 의해 발생한 예외는 표준 오류 출력에 표시되지만 전파 될 수는 없습니다. 객체의 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; 메소드 에서 발생한 예외와 정확히 같은 방식으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="c86df5cc027824161d8e65075c77d500a0c90077" translate="yes" xml:space="preserve">
          <source>Exceptions raised by the callback will be noted on the standard error output, but cannot be propagated; they are handled in exactly the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;__del__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Exceptions raised by the callback will be noted on the standard error output, but cannot be propagated; they are handled in exactly the same way as exceptions raised from an object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt; &lt;code&gt;__del__()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="602a17b7f1d4f59e242e69ecf8bb008f79200e74" translate="yes" xml:space="preserve">
          <source>Exceptions raised in the child process, before the new program has started to execute, will be re-raised in the parent.</source>
          <target state="translated">새 프로그램이 실행되기 전에 자식 프로세스에서 발생한 예외는 부모에서 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0a861a497465e6d5e961800a373ccee2f73c3c64" translate="yes" xml:space="preserve">
          <source>Exchange full</source>
          <target state="translated">전체 교환</target>
        </trans-unit>
        <trans-unit id="40111bff621e73a44959a0a4b3c7a85b2711035e" translate="yes" xml:space="preserve">
          <source>Exchanging objects between processes</source>
          <target state="translated">프로세스 간 객체 교환</target>
        </trans-unit>
        <trans-unit id="c31466ffb66056cc1102e73d3e7736f02ea55d33" translate="yes" xml:space="preserve">
          <source>Exclamation</source>
          <target state="translated">Exclamation</target>
        </trans-unit>
        <trans-unit id="08b88e08cae7b5bb1e4110d2f9f58f64e8ddb558" translate="yes" xml:space="preserve">
          <source>Excluded time components are truncated, not rounded.</source>
          <target state="translated">제외 된 시간 구성 요소는 반올림되지 않고 잘립니다.</target>
        </trans-unit>
        <trans-unit id="b63162a783524a1ec5efa41e95fe5121b9b98b72" translate="yes" xml:space="preserve">
          <source>Exec format error</source>
          <target state="translated">실행 형식 오류</target>
        </trans-unit>
        <trans-unit id="61e507592e1b0d9543a474be7a1e6119f6855048" translate="yes" xml:space="preserve">
          <source>Executable documentation / literate testing.</source>
          <target state="translated">실행 가능한 문서 / 리터 레이트 테스트.</target>
        </trans-unit>
        <trans-unit id="05733ba7a5338b29357c9f188c1b0ffe46bb2809" translate="yes" xml:space="preserve">
          <source>Executables named here without a full path will be searched in the directories given in the &lt;code id=&quot;index-3&quot;&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="translated">전체 경로없이 여기에 명명 된 실행 파일은 &lt;code id=&quot;index-3&quot;&gt;PATH&lt;/code&gt; 환경 변수에 지정된 디렉토리에서 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="286f2d3129a2b679620ae0bdaa405b24e672bf6a" translate="yes" xml:space="preserve">
          <source>Execute &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; subclasses passed to the function. The function scans the classes for methods starting with the prefix &lt;code&gt;test_&lt;/code&gt; and executes the tests individually.</source>
          <target state="translated">실행 &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; 의&lt;/a&gt; 함수에 전달 된 서브 클래스를. 이 함수는 접두어 &lt;code&gt;test_&lt;/code&gt; 로 시작하는 메소드에 대해 클래스를 스캔 하고 테스트를 개별적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a241e75b43251ba0271bd81025aacaae9b72202b" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;callable(*args, **kwargs)&lt;/code&gt; code in the context object the &lt;em&gt;run&lt;/em&gt; method is called on. Return the result of the execution or propagate an exception if one occurred.</source>
          <target state="translated">실행 &lt;code&gt;callable(*args, **kwargs)&lt;/code&gt; 하여 컨텍스트 오브젝트 코드를 &lt;em&gt;실행&lt;/em&gt; 방법에 호출된다. 실행 결과를 반환하거나 예외가 발생한 경우 예외를 전파합니다.</target>
        </trans-unit>
        <trans-unit id="69ed63c879a440dcfb6d968855ae91e33bf18942" translate="yes" xml:space="preserve">
          <source>Execute a child program in a new process. On POSIX, the class uses &lt;a href=&quot;os#os.execvp&quot;&gt;&lt;code&gt;os.execvp()&lt;/code&gt;&lt;/a&gt;-like behavior to execute the child program. On Windows, the class uses the Windows &lt;code&gt;CreateProcess()&lt;/code&gt; function. The arguments to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; are as follows.</source>
          <target state="translated">새 프로세스에서 하위 프로그램을 실행하십시오. POSIX에서 클래스는 &lt;a href=&quot;os#os.execvp&quot;&gt; &lt;code&gt;os.execvp()&lt;/code&gt; &lt;/a&gt; 와 유사한 동작을 사용하여 자식 프로그램을 실행합니다. Windows에서 클래스는 Windows &lt;code&gt;CreateProcess()&lt;/code&gt; 함수를 사용합니다. &lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; 에&lt;/a&gt; 대한 주장 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e6a91ef61eaa929da297d5aebf9277979dbd795f" translate="yes" xml:space="preserve">
          <source>Execute a code object. When an exception occurs, &lt;a href=&quot;#code.InteractiveInterpreter.showtraceback&quot;&gt;&lt;code&gt;showtraceback()&lt;/code&gt;&lt;/a&gt; is called to display a traceback. All exceptions are caught except &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt;, which is allowed to propagate.</source>
          <target state="translated">코드 객체를 실행하십시오. 예외가 발생하면 &lt;a href=&quot;#code.InteractiveInterpreter.showtraceback&quot;&gt; &lt;code&gt;showtraceback()&lt;/code&gt; &lt;/a&gt; 이 호출되어 역 추적을 표시합니다. 전파가 허용되는 &lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; 를&lt;/a&gt; 제외한 모든 예외가 포착 됩니다.</target>
        </trans-unit>
        <trans-unit id="7e81ce564d602b517c838c91c8da9ba683c00772" translate="yes" xml:space="preserve">
          <source>Execute a readline initialization file. The default filename is the last filename used. This calls &lt;code&gt;rl_read_init_file()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">readline 초기화 파일을 실행하십시오. 기본 파일 이름은 마지막으로 사용한 파일 이름입니다. 기본 라이브러리에서 &lt;code&gt;rl_read_init_file()&lt;/code&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="ba07fbeef18083f616ae510801b11d8066bf6eb3" translate="yes" xml:space="preserve">
          <source>Execute command args with messages identified by UID, rather than message number. Returns response appropriate to command. At least one argument must be supplied; if none are provided, the server will return an error and an exception will be raised.</source>
          <target state="translated">메시지 번호가 아닌 UID로 식별 된 메시지를 사용하여 명령 인수를 실행하십시오. 명령에 적합한 응답을 반환합니다. 최소한 하나의 인수가 제공되어야합니다. 아무것도 제공되지 않으면 서버는 오류를 반환하고 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="81aec3d478a802d061fd2f1de4579ce8cc091bb6" translate="yes" xml:space="preserve">
          <source>Execute end of drag-and-drop functions.</source>
          <target state="translated">Execute end of drag-and-drop functions.</target>
        </trans-unit>
        <trans-unit id="31b06121b9ec4fe8849d3894f93b635bf18f224d" translate="yes" xml:space="preserve">
          <source>Execute the (one-line) &lt;em&gt;statement&lt;/em&gt; in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. To set a global variable, you can prefix the assignment command with a &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; statement on the same line, e.g.:</source>
          <target state="translated">현재 스택 프레임의 컨텍스트에서 (한 줄) &lt;em&gt;명령문&lt;/em&gt; 을 실행하십시오 . 명령문의 첫 단어가 디버거 명령과 유사하지 않으면 느낌표를 생략 할 수 있습니다. 전역 변수를 설정하려면 다음과 같이 같은 행에 할당 명령 앞에 &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#global&quot;&gt; &lt;code&gt;global&lt;/code&gt; &lt;/a&gt; 명령문을 붙일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a2d8be28eb3a8b0ac4892111bfc50e0b9f95c8" translate="yes" xml:space="preserve">
          <source>Execute the (one-line) &lt;em&gt;statement&lt;/em&gt; in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. To set a global variable, you can prefix the assignment command with a &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; statement on the same line, e.g.:</source>
          <target state="translated">Execute the (one-line) &lt;em&gt;statement&lt;/em&gt; in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. To set a global variable, you can prefix the assignment command with a &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#global&quot;&gt; &lt;code&gt;global&lt;/code&gt; &lt;/a&gt; statement on the same line, e.g.:</target>
        </trans-unit>
        <trans-unit id="826334beb56840bb5c7db5683c5e7ca7ddf91968" translate="yes" xml:space="preserve">
          <source>Execute the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt; and return the result.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;코 루틴 &lt;/a&gt;&lt;em&gt;코로를&lt;/em&gt; 실행하고 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="208568cb191f36b8a472e3e6ac5a9cae457cbb80" translate="yes" xml:space="preserve">
          <source>Execute the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt; and return the result.</source>
          <target state="translated">Execute the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt;&lt;em&gt;coro&lt;/em&gt; and return the result.</target>
        </trans-unit>
        <trans-unit id="993f7355e3e5a673bcbcdb78e35376ca7db42fbf" translate="yes" xml:space="preserve">
          <source>Execute the &lt;em&gt;statement&lt;/em&gt; (given as a string or a code object) under debugger control. The debugger prompt appears before any code is executed; you can set breakpoints and type &lt;a href=&quot;#pdbcommand-continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt;, or you can step through the statement using &lt;a href=&quot;#pdbcommand-step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pdbcommand-next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; (all these commands are explained below). The optional &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; arguments specify the environment in which the code is executed; by default the dictionary of the module &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; is used. (See the explanation of the built-in &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; functions.)</source>
          <target state="translated">디버거 제어 하에서 &lt;em&gt;명령문&lt;/em&gt; (문자열 또는 코드 오브젝트로 제공됨)을 실행하십시오 . 코드가 실행되기 전에 디버거 프롬프트가 나타납니다. 중단 점을 설정하고 &lt;a href=&quot;#pdbcommand-continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; 를&lt;/a&gt; 입력 하거나 &lt;a href=&quot;#pdbcommand-step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#pdbcommand-next&quot;&gt; &lt;code&gt;next&lt;/code&gt; 를&lt;/a&gt; 사용하여 명령문을 단계별로 실행할 수 있습니다 (이러한 모든 명령은 아래에 설명되어 있음). 선택적 &lt;em&gt;globals&lt;/em&gt; 및 &lt;em&gt;locals&lt;/em&gt; 인수는 코드가 실행되는 환경을 지정합니다. 기본적으로 &lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt; 모듈의 사전 이 사용됩니다. 내장 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 함수에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="957c0a46c8c5eae402bb66fc52f1f0746167605d" translate="yes" xml:space="preserve">
          <source>Execute the SQL query of the view, through &lt;code&gt;MSIViewExecute()&lt;/code&gt;. If &lt;em&gt;params&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it is a record describing actual values of the parameter tokens in the query.</source>
          <target state="translated">&lt;code&gt;MSIViewExecute()&lt;/code&gt; 통해 뷰의 SQL 쿼리를 실행하십시오 . &lt;em&gt;params&lt;/em&gt; 가 &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 쿼리에서 매개 변수 토큰의 실제 값을 설명하는 레코드입니다.</target>
        </trans-unit>
        <trans-unit id="3d06b0236831d9b4a24c24c13a620443b6325555" translate="yes" xml:space="preserve">
          <source>Execute the code at the named filesystem location and return the resulting module globals dictionary. As with a script name supplied to the CPython command line, the supplied path may refer to a Python source file, a compiled bytecode file or a valid sys.path entry containing a &lt;code&gt;__main__&lt;/code&gt; module (e.g. a zipfile containing a top-level &lt;code&gt;__main__.py&lt;/code&gt; file).</source>
          <target state="translated">명명 된 파일 시스템 위치에서 코드를 실행하고 결과 모듈 전역 사전을 반환합니다. CPython 명령 행에 제공된 스크립트 이름과 같이 제공된 경로는 Python 소스 파일, 컴파일 된 바이트 코드 파일 또는 &lt;code&gt;__main__&lt;/code&gt; 모듈을 포함하는 유효한 sys.path 항목 (예 : 최상위 &lt;code&gt;__main__.py&lt;/code&gt; 를 포함하는 zip 파일)을 나타낼 수 있습니다. 파일).</target>
        </trans-unit>
        <trans-unit id="793598dfa7dcb5d5d2f8a7449ed34dd13e3bc919" translate="yes" xml:space="preserve">
          <source>Execute the code of the specified module and return the resulting module globals dictionary. The module&amp;rsquo;s code is first located using the standard import mechanism (refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; for details) and then executed in a fresh module namespace.</source>
          <target state="translated">지정된 모듈의 코드를 실행하고 결과 모듈 글로벌 사전을 리턴하십시오. 모듈 코드는 먼저 표준 가져 오기 메커니즘 (자세한 내용은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt; 참조)을 사용하여 찾은 다음 새로운 모듈 네임 스페이스에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9e21a77bd94392e4d0027b41d97cf1fc40ff6a2e" translate="yes" xml:space="preserve">
          <source>Execute the command (a string) in a subshell. This is implemented by calling the Standard C function &lt;code&gt;system()&lt;/code&gt;, and has the same limitations. Changes to &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;, etc. are not reflected in the environment of the executed command. If &lt;em&gt;command&lt;/em&gt; generates any output, it will be sent to the interpreter standard output stream.</source>
          <target state="translated">서브 쉘에서 명령 (문자열)을 실행하십시오. 이것은 표준 C 함수 &lt;code&gt;system()&lt;/code&gt; 을 호출하여 구현되며 동일한 제한이 있습니다. &lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt; 등의 변경 사항 은 실행 된 명령 환경에 반영되지 않습니다. 경우 &lt;em&gt;명령은&lt;/em&gt; 출력을 생성, 그것은 인터프리터 표준 출력 스트림으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="2aedf6c540cf5d6012a301638f91c6d689e3a5db" translate="yes" xml:space="preserve">
          <source>Execute the command and gather statistics from the execution with the current tracing parameters, in the defined global and local environments. If not defined, &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; default to empty dictionaries.</source>
          <target state="translated">정의 된 글로벌 및 로컬 환경에서 명령을 실행하고 현재 추적 매개 변수를 사용하여 실행에서 통계를 수집하십시오. 정의되지 않은 경우 &lt;em&gt;전역&lt;/em&gt; 및 &lt;em&gt;지역은&lt;/em&gt; 기본적으로 빈 사전으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="80a05e02bcf359c90586f52db20dad5469639bd2" translate="yes" xml:space="preserve">
          <source>Execute the command and gather statistics from the execution with the current tracing parameters. &lt;em&gt;cmd&lt;/em&gt; must be a string or code object, suitable for passing into &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명령을 실행하고 현재 추적 매개 변수를 사용하여 실행에서 통계를 수집하십시오. &lt;em&gt;cmd&lt;/em&gt; 는 &lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt; 로 전달하기에 적합한 문자열 또는 코드 객체 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="734e46faf8e21459ae0c946eb0235e32ee99537b" translate="yes" xml:space="preserve">
          <source>Execute the current line, stop at the first possible occasion (either in a function that is called or on the next line in the current function).</source>
          <target state="translated">현재 행을 실행하고 가능한 첫 번째 시점 (현재 함수의 호출 된 함수 또는 다음 행)에서 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="b63fd92562c30795dffe275ecbc6d69bedc43beb" translate="yes" xml:space="preserve">
          <source>Execute the init line provided in the &lt;em&gt;string&lt;/em&gt; argument. This calls &lt;code&gt;rl_parse_and_bind()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">&lt;em&gt;문자열&lt;/em&gt; 인수에 제공된 init 행을 실행하십시오 . 기본 라이브러리에서 &lt;code&gt;rl_parse_and_bind()&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="a9a25ececa2495c95f119e64a7b4b8eb079e7b80" translate="yes" xml:space="preserve">
          <source>Execute the program &lt;em&gt;path&lt;/em&gt; in a new process.</source>
          <target state="translated">새로운 프로세스에서 프로그램 &lt;em&gt;경로&lt;/em&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4fc211867504f03ecbc0ba4699cf8ff7d3f11f2" translate="yes" xml:space="preserve">
          <source>Execute the string &lt;em&gt;cmd&lt;/em&gt; in a shell with &lt;code&gt;Popen.check_output()&lt;/code&gt; and return a 2-tuple &lt;code&gt;(exitcode, output)&lt;/code&gt;. The locale encoding is used; see the notes on &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;Popen.check_output()&lt;/code&gt; 을 사용하여 쉘에서 문자열 &lt;em&gt;cmd&lt;/em&gt; 를 실행하고 2 튜플 &lt;code&gt;(exitcode, output)&lt;/code&gt; 반환하십시오 . 로케일 인코딩이 사용됩니다. 자세한 내용은 &lt;a href=&quot;#frequently-used-arguments&quot;&gt;자주 사용되는 인수에&lt;/a&gt; 대한 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3e7484258f8f0d962a52cb295082cfc4486e5526" translate="yes" xml:space="preserve">
          <source>Executes an SQL command against all parameter sequences or mappings found in the sequence &lt;em&gt;seq_of_parameters&lt;/em&gt;. The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module also allows using an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding parameters instead of a sequence.</source>
          <target state="translated">&lt;em&gt;seq_of_parameters&lt;/em&gt; 시퀀스에있는 모든 매개 변수 시퀀스 또는 매핑에 대해 SQL 명령을 실행합니다 . &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 를 용&lt;/a&gt; 모듈은 또한 사용 허용 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;반복자&lt;/a&gt; 대신 일련의 파라미터를 산출한다.</target>
        </trans-unit>
        <trans-unit id="dfb8f22d4ae4cfd8596a107d50ed4e22cc848004" translate="yes" xml:space="preserve">
          <source>Executes an SQL command against all parameter sequences or mappings found in the sequence &lt;em&gt;seq_of_parameters&lt;/em&gt;. The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module also allows using an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding parameters instead of a sequence.</source>
          <target state="translated">Executes an SQL command against all parameter sequences or mappings found in the sequence &lt;em&gt;seq_of_parameters&lt;/em&gt;. The &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt; module also allows using an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding parameters instead of a sequence.</target>
        </trans-unit>
        <trans-unit id="5fed61f794b123d4df64a51baba8f0490dd462f4" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement. The SQL statement may be parameterized (i. e. placeholders instead of SQL literals). The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module supports two kinds of placeholders: question marks (qmark style) and named placeholders (named style).</source>
          <target state="translated">SQL 문을 실행합니다. SQL 문은 매개 변수화 될 수 있습니다 (예 : SQL 리터럴 대신 플레이스 홀더). &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 를의&lt;/a&gt; 물음표 (qmark 스타일)라는 이름 자리 (이름 첨부 서식) : 모듈은 두 자리의 종류를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c49ddd797cbb0588fd381fc136bcc980a935ae82" translate="yes" xml:space="preserve">
          <source>Executing code in thread or process pools</source>
          <target state="translated">스레드 또는 프로세스 풀에서 코드 실행</target>
        </trans-unit>
        <trans-unit id="de93521cc9f60a060ec9a4429e441b99ed1e28ff" translate="yes" xml:space="preserve">
          <source>Executing the event means executing &lt;code&gt;action(*argument, **kwargs)&lt;/code&gt;. &lt;em&gt;argument&lt;/em&gt; is a sequence holding the positional arguments for &lt;em&gt;action&lt;/em&gt;. &lt;em&gt;kwargs&lt;/em&gt; is a dictionary holding the keyword arguments for &lt;em&gt;action&lt;/em&gt;.</source>
          <target state="translated">이벤트를 실행한다는 것은 &lt;code&gt;action(*argument, **kwargs)&lt;/code&gt; 실행을 의미 합니다. &lt;em&gt;argument&lt;/em&gt; 는 &lt;em&gt;action에&lt;/em&gt; 대한 위치 인수를 보유하는 시퀀스 입니다. &lt;em&gt;kwargs&lt;/em&gt; 는 &lt;em&gt;action에&lt;/em&gt; 대한 키워드 인수를 보유한 사전 입니다.</target>
        </trans-unit>
        <trans-unit id="b44827a87c41a75678cdd5f76bd61447a3fc10f5" translate="yes" xml:space="preserve">
          <source>Execution of Python signal handlers</source>
          <target state="translated">Python 신호 처리기 실행</target>
        </trans-unit>
        <trans-unit id="ed3931e45d9bc3ce577741dbd125810e45a2b826" translate="yes" xml:space="preserve">
          <source>Executor Objects</source>
          <target state="translated">실행자 객체</target>
        </trans-unit>
        <trans-unit id="211c10fefffd8e3b3e355bf1edcb1832fad0f9ca" translate="yes" xml:space="preserve">
          <source>Exhaust as many code paths as possible. Test where branching occurs and thus tailor input to make sure as many different paths through the code are taken.</source>
          <target state="translated">가능한 많은 코드 경로를 소진하십시오. 분기가 발생하는 위치를 테스트하고 코드를 통과하는 여러 경로가 사용되도록 입력을 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="222f4735cc04fbb94d3f36bb2ec690b85bf1cebb" translate="yes" xml:space="preserve">
          <source>Existing context managers that already have a base class can be extended by using &lt;code&gt;ContextDecorator&lt;/code&gt; as a mixin class:</source>
          <target state="translated">&lt;code&gt;ContextDecorator&lt;/code&gt; 를 mixin 클래스로 사용하여 이미 기본 클래스가있는 기존 컨텍스트 관리자를 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f83b6fe3aebf13744e866019556d9129cd7a55be" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Exit</target>
        </trans-unit>
        <trans-unit id="8dc762b6cd999e9e7c339e2a9ffd275e4e6e9d6b" translate="yes" xml:space="preserve">
          <source>Exit Windows</source>
          <target state="translated">Windows 종료</target>
        </trans-unit>
        <trans-unit id="0eb6852fe58ab846e7bbe411d7c5e62bb4d27841" translate="yes" xml:space="preserve">
          <source>Exit code that means a specified host did not exist.</source>
          <target state="translated">지정된 호스트가 존재하지 않음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="7a22f8343aa29394ba70bf5dc7afa73c08926734" translate="yes" xml:space="preserve">
          <source>Exit code that means a specified user did not exist.</source>
          <target state="translated">지정된 사용자가 존재하지 않음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="1e96d47cca855bf6edef7796cdce40087e984555" translate="yes" xml:space="preserve">
          <source>Exit code that means a temporary failure occurred. This indicates something that may not really be an error, such as a network connection that couldn&amp;rsquo;t be made during a retryable operation.</source>
          <target state="translated">일시적인 오류가 발생했음을 나타내는 종료 코드. 다시 시도 가능한 작업 중에 만들 수 없었던 네트워크 연결과 같이 실제로 오류가 아닌 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="130b0662bd564bed3b370b021be7c79e675673ec" translate="yes" xml:space="preserve">
          <source>Exit code that means a user specified output file could not be created.</source>
          <target state="translated">사용자 지정 출력 파일을 작성할 수 없음을 의미하는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="ee6998f7707f8890d572b71f35265321e03105a3" translate="yes" xml:space="preserve">
          <source>Exit code that means an input file did not exist or was not readable.</source>
          <target state="translated">입력 파일이 존재하지 않거나 읽을 수 없음을 의미하는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="9105cdf46e59b903bc936574e1e7533cdf138f82" translate="yes" xml:space="preserve">
          <source>Exit code that means an internal software error was detected.</source>
          <target state="translated">내부 소프트웨어 오류가 감지되었음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="1d74434dbdfc578d821f4318fe90a51b17a17cd4" translate="yes" xml:space="preserve">
          <source>Exit code that means an operating system error was detected, such as the inability to fork or create a pipe.</source>
          <target state="translated">파이프를 포크하거나 만들 수없는 등 운영 체제 오류가 감지되었음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="05d48920a0aebcc6b3c4c2390c6c09782f77ea3e" translate="yes" xml:space="preserve">
          <source>Exit code that means no error occurred.</source>
          <target state="translated">오류가 발생하지 않았다는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="0f7bc1803a4a72d74f632ceb8f951a754f403608" translate="yes" xml:space="preserve">
          <source>Exit code that means some system file did not exist, could not be opened, or had some other kind of error.</source>
          <target state="translated">일부 시스템 파일이 없거나 열 수 없거나 다른 종류의 오류가 발생했음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="873b690550da75d449939d35005ee675abb600c4" translate="yes" xml:space="preserve">
          <source>Exit code that means something like &amp;ldquo;an entry was not found&amp;rdquo;.</source>
          <target state="translated">&quot;항목을 찾을 수 없음&quot;과 같은 종료 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ae632ba3b2d0e464ffc16d4e6f9467aeab63b17f" translate="yes" xml:space="preserve">
          <source>Exit code that means that a protocol exchange was illegal, invalid, or not understood.</source>
          <target state="translated">프로토콜 교환이 불법이거나 유효하지 않거나 이해되지 않았 음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="2236398f4560c2c3270ca6afed0572a5a292e10b" translate="yes" xml:space="preserve">
          <source>Exit code that means that a required service is unavailable.</source>
          <target state="translated">필요한 서비스를 사용할 수 없음을 의미하는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="2769a4e9e329eedb10d1c8259f8c1431a9d913e1" translate="yes" xml:space="preserve">
          <source>Exit code that means that an error occurred while doing I/O on some file.</source>
          <target state="translated">일부 파일에서 I / O를 수행하는 동안 오류가 발생했음을 나타내는 종료 코드입니다.</target>
        </trans-unit>
        <trans-unit id="18fe8007ea03054c8698943a4e0e8de37594ec1d" translate="yes" xml:space="preserve">
          <source>Exit code that means that some kind of configuration error occurred.</source>
          <target state="translated">종료 코드는 일종의 구성 오류가 발생했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c7fbf7f46a8ce37387db819583c55d99b5c0a745" translate="yes" xml:space="preserve">
          <source>Exit code that means that there were insufficient permissions to perform the operation (but not intended for file system problems).</source>
          <target state="translated">종료 코드는 작업을 수행 할 수있는 권한이 충분하지 않음을 의미하지만 파일 시스템 문제를위한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0045f24ba4cbea5891945395b979e9d9cf52329e" translate="yes" xml:space="preserve">
          <source>Exit code that means the command was used incorrectly, such as when the wrong number of arguments are given.</source>
          <target state="translated">잘못된 수의 인수가 제공된 경우와 같이 명령이 잘못 사용되었음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="0ab31a146165c6ef2fb3014ef6aa6d6dab33309d" translate="yes" xml:space="preserve">
          <source>Exit code that means the input data was incorrect.</source>
          <target state="translated">입력 데이터가 잘못되었음을 나타내는 종료 코드.</target>
        </trans-unit>
        <trans-unit id="7c7a5953cdb8427212ad792fdc557eb0ada3a393" translate="yes" xml:space="preserve">
          <source>Exit dialog returning current selection.</source>
          <target state="translated">Exit dialog returning current selection.</target>
        </trans-unit>
        <trans-unit id="e01cb7a32370242cba226e91bd6d151eb568a747" translate="yes" xml:space="preserve">
          <source>Exit dialog returning filename, if any.</source>
          <target state="translated">Exit dialog returning filename, if any.</target>
        </trans-unit>
        <trans-unit id="29749cfb9382cb00c435991190794173c3a641de" translate="yes" xml:space="preserve">
          <source>Exit from Python. This is implemented by raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception, so cleanup actions specified by finally clauses of &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements are honored, and it is possible to intercept the exit attempt at an outer level.</source>
          <target state="translated">파이썬에서 빠져 나옵니다. 이는 &lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt; 예외 를 발생시켜 구현 되므로 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; 문의 finally 절에 지정된 정리 조치 가 적용되며 외부 시도에서 종료 시도를 가로 챌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f1f744d60565c7a347622495b0bff7cd037b37c" translate="yes" xml:space="preserve">
          <source>Exit from Python. This is implemented by raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception, so cleanup actions specified by finally clauses of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statements are honored, and it is possible to intercept the exit attempt at an outer level.</source>
          <target state="translated">Exit from Python. This is implemented by raising the &lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt; exception, so cleanup actions specified by finally clauses of &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; statements are honored, and it is possible to intercept the exit attempt at an outer level.</target>
        </trans-unit>
        <trans-unit id="ccb0d6a92730bf5e1a73f3bfc4f253e7d84022d0" translate="yes" xml:space="preserve">
          <source>Exit insert char mode</source>
          <target state="translated">삽입 문자 모드 종료</target>
        </trans-unit>
        <trans-unit id="031fa31cf206c2ec1cd22ca183b8e96c3c9872e8" translate="yes" xml:space="preserve">
          <source>Exit status of the child process. If the process exited due to a signal, this will be the negative signal number.</source>
          <target state="translated">하위 프로세스의 종료 상태 신호로 인해 프로세스가 종료 된 경우 음의 신호 번호가됩니다.</target>
        </trans-unit>
        <trans-unit id="19adb7c9c5eaa16417045df4e6323c37b803665c" translate="yes" xml:space="preserve">
          <source>Exit status of the child process. Typically, an exit status of 0 indicates that it ran successfully.</source>
          <target state="translated">하위 프로세스의 종료 상태 일반적으로 종료 상태 0은 성공적으로 실행되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="782552048b669f3e29d23655320f5c5ec4a69c8d" translate="yes" xml:space="preserve">
          <source>Exit the process with status &lt;em&gt;n&lt;/em&gt;, without calling cleanup handlers, flushing stdio buffers, etc.</source>
          <target state="translated">정리 핸들러 호출, stdio 버퍼 플러시 등을 수행하지 않고 상태 &lt;em&gt;n으로&lt;/em&gt; 프로세스를 종료하십시오 .</target>
        </trans-unit>
        <trans-unit id="e568f5a9fa1a0a52b3de44fc53325fcc76e97cc0" translate="yes" xml:space="preserve">
          <source>Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">런타임 컨텍스트를 종료하고 발생한 예외를 억제해야하는지 여부를 나타내는 부울 플래그를 리턴하십시오. &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문의 본문을 실행하는 동안 예외가 발생 하면 인수에 예외 유형, 값 및 역 추적 정보가 포함됩니다. 그렇지 않으면 세 인수가 모두 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fa1387d769b587d725aac2d843518392e062f346" translate="yes" xml:space="preserve">
          <source>Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="813d6a80ed490c32c14fd6b15893f76ab9515615" translate="yes" xml:space="preserve">
          <source>Exiting methods</source>
          <target state="translated">종료 방법</target>
        </trans-unit>
        <trans-unit id="f0545bde9ddc8fa1efb4f51bf8ddc1930ca8a6aa" translate="yes" xml:space="preserve">
          <source>Exiting the context manager cleans up any temporary file created when the resource needs to be extracted from e.g. a zip file.</source>
          <target state="translated">컨텍스트 관리자를 종료하면 zip 파일과 같은 리소스를 추출해야 할 때 생성 된 임시 파일이 정리됩니다.</target>
        </trans-unit>
        <trans-unit id="705912607514938d70ecf589927512f5012e6eed" translate="yes" xml:space="preserve">
          <source>Expand Word</source>
          <target state="translated">단어 확장</target>
        </trans-unit>
        <trans-unit id="4b0fc2127b40c104cccfbdb5737f0aa1b76fc944" translate="yes" xml:space="preserve">
          <source>Expand a prefix you have typed to match a full word in the same window; repeat to get a different expansion.</source>
          <target state="translated">동일한 창에서 전체 단어와 일치하도록 입력 한 접두사를 확장하십시오. 다른 확장을 얻으려면 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="af74b0c485a7e9735a00ba13b8e6543ff0acd03a" translate="yes" xml:space="preserve">
          <source>Expands all children of &lt;em&gt;node&lt;/em&gt; into &lt;em&gt;node&lt;/em&gt;. Example:</source>
          <target state="translated">&lt;em&gt;node의&lt;/em&gt; 모든 하위를 &lt;em&gt;node&lt;/em&gt; 로 확장 &lt;em&gt;합니다&lt;/em&gt; . 예:</target>
        </trans-unit>
        <trans-unit id="b6235ec6054cdf78ee69907b788f865a06567cfe" translate="yes" xml:space="preserve">
          <source>Expands environment variable placeholders &lt;code&gt;%NAME%&lt;/code&gt; in strings like &lt;a href=&quot;#winreg.REG_EXPAND_SZ&quot;&gt;&lt;code&gt;REG_EXPAND_SZ&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#winreg.REG_EXPAND_SZ&quot;&gt; &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; &lt;/a&gt; 와 같은 문자열에서 환경 변수 자리 표시 자 &lt;code&gt;%NAME%&lt;/code&gt; 을 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="1fd1d786684facabead378e367b48b5f9bad65fb" translate="yes" xml:space="preserve">
          <source>Expansion field data. The &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP Application Note&lt;/a&gt; contains some comments on the internal structure of the data contained in this &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">확장 필드 데이터. &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP 애플리케이션 노트는&lt;/a&gt; 데이터의 내부 구조에 대한 몇 가지 의견이에 포함 된 포함 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="59e2311798f2ce925a5a5bcf558e82fd2f02f1be" translate="yes" xml:space="preserve">
          <source>Expat can optionally do XML namespace processing for you, enabled by providing a value for &lt;em&gt;namespace_separator&lt;/em&gt;. The value must be a one-character string; a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if the string has an illegal length (&lt;code&gt;None&lt;/code&gt; is considered the same as omission). When namespace processing is enabled, element type names and attribute names that belong to a namespace will be expanded. The element name passed to the element handlers &lt;code&gt;StartElementHandler&lt;/code&gt; and &lt;code&gt;EndElementHandler&lt;/code&gt; will be the concatenation of the namespace URI, the namespace separator character, and the local part of the name. If the namespace separator is a zero byte (&lt;code&gt;chr(0)&lt;/code&gt;) then the namespace URI and the local part will be concatenated without any separator.</source>
          <target state="translated">해외 거주자는 선택적으로 당신을 위해 XML 네임 스페이스 처리를 할 수있는, 값 제공으로 활성화 &lt;em&gt;namespace_separator을&lt;/em&gt; . 값은 한 문자 문자열이어야합니다. &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 문자열 (불법 길이가있는 경우 발생합니다 &lt;code&gt;None&lt;/code&gt; 누락과 동일한 것으로 간주되지 않는다). 네임 스페이스 처리가 활성화되면 네임 스페이스에 속하는 요소 유형 이름 및 속성 이름이 확장됩니다. 요소 처리기 &lt;code&gt;StartElementHandler&lt;/code&gt; 및 &lt;code&gt;EndElementHandler&lt;/code&gt; 에 전달 된 요소 이름 은 네임 스페이스 URI, 네임 스페이스 구분 문자 및 이름의 로컬 부분이 연결됩니다. 네임 스페이스 구분자가 0 바이트 인 경우 ( &lt;code&gt;chr(0)&lt;/code&gt; ) 네임 스페이스 URI와 로컬 부분은 구분 기호없이 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="da8abdeaaae5e01377deae8fb1c50c19174a8ea8" translate="yes" xml:space="preserve">
          <source>Expat error constants</source>
          <target state="translated">국외 오류 상수</target>
        </trans-unit>
        <trans-unit id="08105ec54ec812c08ae7f829e3d2d086acf47b22" translate="yes" xml:space="preserve">
          <source>Expat was not able to allocate memory internally.</source>
          <target state="translated">국외 거주자는 내부적으로 메모리를 할당 할 수 없었습니다.</target>
        </trans-unit>
        <trans-unit id="ae83915ff1e542a4aa9b192c227278e059870679" translate="yes" xml:space="preserve">
          <source>Expat&amp;rsquo;s internal error number for the specific error. The &lt;a href=&quot;#xml.parsers.expat.errors.messages&quot;&gt;&lt;code&gt;errors.messages&lt;/code&gt;&lt;/a&gt; dictionary maps these error numbers to Expat&amp;rsquo;s error messages. For example:</source>
          <target state="translated">특정 오류에 대한 국외 거주자의 내부 오류 번호. 는 &lt;a href=&quot;#xml.parsers.expat.errors.messages&quot;&gt; &lt;code&gt;errors.messages&lt;/code&gt; &lt;/a&gt; 사전 국외 거주자의 오류 메시지에 이러한 오류 번호를 매핑합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="49b412a0f51820f38bfe44b5bc6f73f29177ee5e" translate="yes" xml:space="preserve">
          <source>ExpatError Exceptions</source>
          <target state="translated">ExpatError 예외</target>
        </trans-unit>
        <trans-unit id="247dde85da683c7c073b9190b1453ace6096f3d3" translate="yes" xml:space="preserve">
          <source>Expected failures use the &lt;a href=&quot;#unittest.expectedFailure&quot;&gt;&lt;code&gt;expectedFailure()&lt;/code&gt;&lt;/a&gt; decorator.</source>
          <target state="translated">예상되는 실패는 &lt;a href=&quot;#unittest.expectedFailure&quot;&gt; &lt;code&gt;expectedFailure()&lt;/code&gt; &lt;/a&gt; 데코레이터를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="78647db73123cd8372fb4f4bbcc9f2105592afba" translate="yes" xml:space="preserve">
          <source>Expected output cannot contain an all-whitespace line, since such a line is taken to signal the end of expected output. If expected output does contain a blank line, put &lt;code&gt;&amp;lt;BLANKLINE&amp;gt;&lt;/code&gt; in your doctest example each place a blank line is expected.</source>
          <target state="translated">예상 출력은 모두 공백 라인을 포함 할 수 없습니다. 이러한 라인은 예상 출력의 끝을 알리기 위해 사용되기 때문입니다. 예상 출력에 빈 줄이 포함 되어 있으면 doctest 예제에 &lt;code&gt;&amp;lt;BLANKLINE&amp;gt;&lt;/code&gt; 을 빈 줄이 예상되는 각 위치에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="93617b006b3706f8adecd6a3c8aad6df6b3318d3" translate="yes" xml:space="preserve">
          <source>Expected output:</source>
          <target state="translated">예상 출력 :</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="4521cb9e86ffb37d381aebe8d8ce8956c54915a1" translate="yes" xml:space="preserve">
          <source>Explicitly close the audio device. When you are done writing to or reading from an audio device, you should explicitly close it. A closed device cannot be used again.</source>
          <target state="translated">오디오 장치를 명시 적으로 닫습니다. 오디오 장치에 쓰거나 읽은 후에는 명시 적으로 닫아야합니다. 닫힌 장치는 다시 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4bbffebc70065656746756e2001956fe84cdef41" translate="yes" xml:space="preserve">
          <source>Explicitly pass resources to child processes</source>
          <target state="translated">자식 프로세스에 리소스를 명시 적으로 전달</target>
        </trans-unit>
        <trans-unit id="6c8f65243d9f006f8c6c4439bd8b8a6b5dfac7c9" translate="yes" xml:space="preserve">
          <source>Explicitly via the column name</source>
          <target state="translated">열 이름을 통해 명시 적으로</target>
        </trans-unit>
        <trans-unit id="8a330a9c7957095585f0e465fcc1e74ca875851e" translate="yes" xml:space="preserve">
          <source>Exponent notation. Prints the number in scientific notation using the letter &amp;lsquo;e&amp;rsquo; to indicate the exponent. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">지수 표기법. 지수를 나타 내기 위해 문자 'e'를 사용하여 과학적 표기법으로 숫자를 인쇄합니다. 기본 정밀도는 &lt;code&gt;6&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13a4114eb5527628350c89f4e332e24a8b6adaf7" translate="yes" xml:space="preserve">
          <source>Exponent notation. Same as &lt;code&gt;'e'&lt;/code&gt; except it uses an upper case &amp;lsquo;E&amp;rsquo; as the separator character.</source>
          <target state="translated">지수 표기법. 구분 문자로 대문자 'E'를 사용한다는 점을 제외하고 &lt;code&gt;'e'&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="3237bbd0fba00be230671cc5c9f06d02aebed723" translate="yes" xml:space="preserve">
          <source>Exponent was lower than &lt;code&gt;Emin&lt;/code&gt; prior to rounding.</source>
          <target state="translated">반올림하기 전에 지수가 &lt;code&gt;Emin&lt;/code&gt; 보다 낮았습니다 .</target>
        </trans-unit>
        <trans-unit id="dbc59c1ddea13a6824ca57d6407a1a5c5633bc43" translate="yes" xml:space="preserve">
          <source>Exponential distribution. &lt;em&gt;lambd&lt;/em&gt; is 1.0 divided by the desired mean. It should be nonzero. (The parameter would be called &amp;ldquo;lambda&amp;rdquo;, but that is a reserved word in Python.) Returned values range from 0 to positive infinity if &lt;em&gt;lambd&lt;/em&gt; is positive, and from negative infinity to 0 if &lt;em&gt;lambd&lt;/em&gt; is negative.</source>
          <target state="translated">지수 분포. &lt;em&gt;lambd&lt;/em&gt; 는 1.0을 원하는 평균으로 나눈 &lt;em&gt;값&lt;/em&gt; 입니다. 0이 아니어야합니다. (파라미터가 '람다'이라하지만 파이썬 예약어 될 것이다.)가 리턴 값은 0에서 무한대까지의 범위 &lt;em&gt;lambd이&lt;/em&gt; 긍정적이고, 음의 무한대에서 0으로하는 경우 &lt;em&gt;lambd는&lt;/em&gt; 제외이다.</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="ffae2a0dbff1d55c82d5123af3372ea49a2b14bb" translate="yes" xml:space="preserve">
          <source>Expressing a percentage:</source>
          <target state="translated">백분율 표현 :</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="be18dee812522c6b5b7a76e5832b6a8e4ca2b812" translate="yes" xml:space="preserve">
          <source>Extend the left side of the deque by appending elements from &lt;em&gt;iterable&lt;/em&gt;. Note, the series of left appends results in reversing the order of elements in the iterable argument.</source>
          <target state="translated">&lt;em&gt;iterable의&lt;/em&gt; 요소를 추가하여 deque의 왼쪽을 확장하십시오 . 일련의 왼쪽 추가는 반복 가능한 인수에서 요소의 순서를 반대로합니다.</target>
        </trans-unit>
        <trans-unit id="f6c82ec936c20f92c0eaa0ffe5c71b79d6e553a1" translate="yes" xml:space="preserve">
          <source>Extend the right side of the deque by appending elements from the iterable argument.</source>
          <target state="translated">반복 가능한 인수에서 요소를 추가하여 deque의 오른쪽을 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="ffb6a2c58a4241d2ba27231ce784eb5eb15764da" translate="yes" xml:space="preserve">
          <source>Extend the search path for the modules which comprise a package. Intended use is to place the following code in a package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt;:</source>
          <target state="translated">패키지를 구성하는 모듈의 검색 경로를 확장하십시오. 의도 된 용도는 패키지의 &lt;code&gt;__init__.py&lt;/code&gt; 에 다음 코드를 배치하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="8d3082bbd7153cdb35672556257cd022495b60e6" translate="yes" xml:space="preserve">
          <source>Extended header setting. This method is similar to &lt;a href=&quot;#email.message.EmailMessage.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; except that additional header parameters can be provided as keyword arguments. &lt;em&gt;_name&lt;/em&gt; is the header field to add and &lt;em&gt;_value&lt;/em&gt; is the &lt;em&gt;primary&lt;/em&gt; value for the header.</source>
          <target state="translated">확장 된 헤더 설정. 이 메소드는 추가 헤더 매개 변수를 키워드 인수로 제공 할 수 있다는 점을 제외하고 &lt;a href=&quot;#email.message.EmailMessage.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; 과 유사합니다 . &lt;em&gt;_name&lt;/em&gt; 은 추가 할 헤더 필드이고 &lt;em&gt;_value&lt;/em&gt; 는 헤더 의 &lt;em&gt;기본&lt;/em&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="a223abaf54dc8e1ab3eeaa89f4cd896ed498bd79" translate="yes" xml:space="preserve">
          <source>Extended header setting. This method is similar to &lt;a href=&quot;#email.message.Message.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt; except that additional header parameters can be provided as keyword arguments. &lt;em&gt;_name&lt;/em&gt; is the header field to add and &lt;em&gt;_value&lt;/em&gt; is the &lt;em&gt;primary&lt;/em&gt; value for the header.</source>
          <target state="translated">확장 된 헤더 설정. 이 메소드는 추가 헤더 매개 변수를 키워드 인수로 제공 할 수 있다는 점을 제외하고 &lt;a href=&quot;#email.message.Message.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt; 과 유사합니다 . &lt;em&gt;_name&lt;/em&gt; 은 추가 할 헤더 필드이고 &lt;em&gt;_value&lt;/em&gt; 는 헤더 의 &lt;em&gt;기본&lt;/em&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="8e0502094d27643a7e46ac113e2ec9103e1bc071" translate="yes" xml:space="preserve">
          <source>Extending &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt; 확장 :</target>
        </trans-unit>
        <trans-unit id="3afaf5c09876f5a31aa15d2a3378f3f6a609a66e" translate="yes" xml:space="preserve">
          <source>Extending the search algorithm</source>
          <target state="translated">검색 알고리즘 확장</target>
        </trans-unit>
        <trans-unit id="d14fa83017c01db06e1c086ad2b398b643736e71" translate="yes" xml:space="preserve">
          <source>Extends this array with data from the given unicode string. The array must be a type &lt;code&gt;'u'&lt;/code&gt; array; otherwise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;code&gt;array.frombytes(unicodestring.encode(enc))&lt;/code&gt; to append Unicode data to an array of some other type.</source>
          <target state="translated">지정된 유니 코드 문자열의 데이터로이 배열을 확장합니다. 배열은 유형 &lt;code&gt;'u'&lt;/code&gt; 배열이어야합니다 . 그렇지 않으면 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 사용 &lt;code&gt;array.frombytes(unicodestring.encode(enc))&lt;/code&gt; 어떤 다른 유형의 어레이를 유니 코드 데이터를 추가한다.</target>
        </trans-unit>
        <trans-unit id="d17e683a4537ea32b7744d3fc9435748a13093cb" translate="yes" xml:space="preserve">
          <source>Extensible JSON encoder for Python data structures.</source>
          <target state="translated">Python 데이터 구조를위한 확장 가능한 JSON 인코더</target>
        </trans-unit>
        <trans-unit id="4c367fb4974a67cae0c760962b58c3b9529d4ac9" translate="yes" xml:space="preserve">
          <source>Extension modules should never call &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt;, except to find out what the current locale is. But since the return value can only be used portably to restore it, that is not very useful (except perhaps to find out whether or not the locale is &lt;code&gt;C&lt;/code&gt;).</source>
          <target state="translated">확장 모듈은 현재 로케일이 무엇인지 알아내는 것을 제외하고 &lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt; 호출해서는 안됩니다 . 그러나 반환 값은 이식하기 위해 이식 가능하게 사용될 수 있기 때문에 그다지 유용하지 않습니다 (로케일이 &lt;code&gt;C&lt;/code&gt; 인지 아닌지 여부는 제외 ).</target>
        </trans-unit>
        <trans-unit id="ba4c6b9afff6a08f053cba5afe9f2c4f782f677a" translate="yes" xml:space="preserve">
          <source>Extension types can easily be made to support weak references; see &lt;a href=&quot;https://docs.python.org/3.8/extending/newtypes.html#weakref-support&quot;&gt;Weak Reference Support&lt;/a&gt;.</source>
          <target state="translated">약한 참조를 지원하기 위해 확장 유형을 쉽게 만들 수 있습니다. &lt;a href=&quot;https://docs.python.org/3.8/extending/newtypes.html#weakref-support&quot;&gt;약한 참조 지원을 참조&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7695e067464a73173175fe091ca6abd7a955315" translate="yes" xml:space="preserve">
          <source>Extension types can easily be made to support weak references; see &lt;a href=&quot;https://docs.python.org/3.9/extending/newtypes.html#weakref-support&quot;&gt;Weak Reference Support&lt;/a&gt;.</source>
          <target state="translated">Extension types can easily be made to support weak references; see &lt;a href=&quot;https://docs.python.org/3.9/extending/newtypes.html#weakref-support&quot;&gt;Weak Reference Support&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="6c4a75205736caa4d532e632bbb923d90e882d92" translate="yes" xml:space="preserve">
          <source>Extensions peculiar to a particular operating system are also available through the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module, but using them is of course a threat to portability.</source>
          <target state="translated">특정 운영 체제에 맞는 확장 기능도 &lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt; 모듈을 통해 사용할 수 있지만이를 사용하는 것은 물론 이식성에 위협이됩니다.</target>
        </trans-unit>
        <trans-unit id="59a8e4193969041eb8a334bce8673971dd5ac36d" translate="yes" xml:space="preserve">
          <source>Extensive tutorial plus friendlier widget pages for some of the widgets.</source>
          <target state="translated">일부 위젯에 대한 광범위한 자습서 및 더 친숙한 위젯 페이지</target>
        </trans-unit>
        <trans-unit id="c970654c58357168192acf4ccb045a4ec563e56d" translate="yes" xml:space="preserve">
          <source>External file attributes.</source>
          <target state="translated">외부 파일 속성</target>
        </trans-unit>
        <trans-unit id="80cd74c846919e1cd0c0abf54f9566f2c9d1d9eb" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive as a file object. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If &lt;em&gt;member&lt;/em&gt; is a regular file or a link, an &lt;a href=&quot;io#io.BufferedReader&quot;&gt;&lt;code&gt;io.BufferedReader&lt;/code&gt;&lt;/a&gt; object is returned. For all other existing members, &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned. If &lt;em&gt;member&lt;/em&gt; does not appear in the archive, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">Extract a member from the archive as a file object. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; object. If &lt;em&gt;member&lt;/em&gt; is a regular file or a link, an &lt;a href=&quot;io#io.BufferedReader&quot;&gt; &lt;code&gt;io.BufferedReader&lt;/code&gt; &lt;/a&gt; object is returned. For all other existing members, &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; is returned. If &lt;em&gt;member&lt;/em&gt; does not appear in the archive, &lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; is raised.</target>
        </trans-unit>
        <trans-unit id="2dfc8906bc4cd8f73d660501349acb60a736207e" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive as a file object. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. If &lt;em&gt;member&lt;/em&gt; is a regular file or a link, an &lt;a href=&quot;io#io.BufferedReader&quot;&gt;&lt;code&gt;io.BufferedReader&lt;/code&gt;&lt;/a&gt; object is returned. Otherwise, &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">아카이브에서 멤버를 파일 오브젝트로 추출하십시오. &lt;em&gt;member&lt;/em&gt; 는 파일 이름이거나 &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다 . 경우 &lt;em&gt;회원이&lt;/em&gt; 일반 파일 또는 링크입니다, &lt;a href=&quot;io#io.BufferedReader&quot;&gt; &lt;code&gt;io.BufferedReader&lt;/code&gt; 의&lt;/a&gt; 객체가 돌려 주어집니다. 그렇지 않으면 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7153d56eaff624dd418e50a12f92bf3a17f36bf7" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. You can specify a different directory using &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. File attributes (owner, mtime, mode) are set unless &lt;em&gt;set_attrs&lt;/em&gt; is false.</source>
          <target state="translated">전체 이름을 사용하여 아카이브에서 현재 작업 디렉토리로 멤버를 추출하십시오. 파일 정보가 최대한 정확하게 추출됩니다. &lt;em&gt;member&lt;/em&gt; 는 파일 이름이거나 &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다 . &lt;em&gt;path를&lt;/em&gt; 사용하여 다른 디렉토리를 지정할 수 있습니다 . &lt;em&gt;path&lt;/em&gt; 는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;경로와 같은 객체&lt;/a&gt; 일 수 있습니다 . &lt;em&gt;set_attrs&lt;/em&gt; 가 false가 아니면 파일 속성 (소유자, mtime, 모드)이 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="068a6dfa3ec47426ce09e59400eb121e7b5441f7" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object. You can specify a different directory using &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. File attributes (owner, mtime, mode) are set unless &lt;em&gt;set_attrs&lt;/em&gt; is false.</source>
          <target state="translated">Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. &lt;em&gt;member&lt;/em&gt; may be a filename or a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; object. You can specify a different directory using &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. File attributes (owner, mtime, mode) are set unless &lt;em&gt;set_attrs&lt;/em&gt; is false.</target>
        </trans-unit>
        <trans-unit id="49bf42b59323ef5711d695a532178f9f50306eed" translate="yes" xml:space="preserve">
          <source>Extract a member from the archive to the current working directory; &lt;em&gt;member&lt;/em&gt; must be its full name or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. Its file information is extracted as accurately as possible. &lt;em&gt;path&lt;/em&gt; specifies a different directory to extract to. &lt;em&gt;member&lt;/em&gt; can be a filename or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;pwd&lt;/em&gt; is the password used for encrypted files.</source>
          <target state="translated">아카이브에서 현재 작업 디렉토리로 멤버를 추출하십시오. &lt;em&gt;member&lt;/em&gt; 는 전체 이름이거나 &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt; 객체 여야 합니다. 파일 정보가 최대한 정확하게 추출됩니다. &lt;em&gt;path&lt;/em&gt; 는 추출 할 다른 디렉토리를 지정합니다. &lt;em&gt;member&lt;/em&gt; 는 파일 이름 또는 &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt; 객체 일 수 있습니다 . &lt;em&gt;pwd&lt;/em&gt; 는 암호화 된 파일에 사용되는 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="544c78afc0b0d1b40f8be394b534ce094d439335" translate="yes" xml:space="preserve">
          <source>Extract all doctest examples from the given string, and collect them into a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">주어진 문자열에서 모든 doctest 예제를 추출하여 &lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt; 객체 로 수집합니다 .</target>
        </trans-unit>
        <trans-unit id="cce34faeb7495a0b53c8fa130ee26d2cc6aa07f2" translate="yes" xml:space="preserve">
          <source>Extract all doctest examples from the given string, and return them as a list of &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; objects. Line numbers are 0-based. The optional argument &lt;em&gt;name&lt;/em&gt; is a name identifying this string, and is only used for error messages.</source>
          <target state="translated">주어진 문자열에서 모든 doctest 예제를 추출하여 &lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt; 개체 목록으로 반환합니다 . 줄 번호는 0부터 시작합니다. 선택적 인수 &lt;em&gt;이름&lt;/em&gt; 은이 문자열을 식별하는 이름이며 오류 메시지에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c9c93f9c15436e53bdd54ee82b7378dd38a0185" translate="yes" xml:space="preserve">
          <source>Extract all members from the archive to the current working directory or directory &lt;em&gt;path&lt;/em&gt;. If optional &lt;em&gt;members&lt;/em&gt; is given, it must be a subset of the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;. Directory information like owner, modification time and permissions are set after all members have been extracted. This is done to work around two problems: A directory&amp;rsquo;s modification time is reset each time a file is created in it. And, if a directory&amp;rsquo;s permissions do not allow writing, extracting files to it will fail.</source>
          <target state="translated">아카이브에서 현재 작업 디렉토리 또는 디렉토리 &lt;em&gt;경로로&lt;/em&gt; 모든 멤버를 추출하십시오 . 선택적 &lt;em&gt;멤버&lt;/em&gt; 가 제공되면 &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt; 리턴 한 목록의 서브 세트 여야합니다 . 소유자, 수정 시간 및 권한과 같은 디렉토리 정보는 모든 구성원이 추출 된 후에 설정됩니다. 이것은 두 가지 문제를 해결하기 위해 수행됩니다. 디렉토리의 수정 시간은 파일이 생성 될 때마다 재설정됩니다. 또한 디렉토리의 권한이 쓰기를 허용하지 않으면 파일 추출이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="ae6c5957177f81679444f51641f06f6286ee4707" translate="yes" xml:space="preserve">
          <source>Extract all members from the archive to the current working directory. &lt;em&gt;path&lt;/em&gt; specifies a different directory to extract to. &lt;em&gt;members&lt;/em&gt; is optional and must be a subset of the list returned by &lt;a href=&quot;#zipfile.ZipFile.namelist&quot;&gt;&lt;code&gt;namelist()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;pwd&lt;/em&gt; is the password used for encrypted files.</source>
          <target state="translated">아카이브에서 현재 작업 디렉토리로 모든 멤버를 추출하십시오. &lt;em&gt;path&lt;/em&gt; 는 추출 할 다른 디렉토리를 지정합니다. &lt;em&gt;member&lt;/em&gt; 는 선택 사항이며 &lt;a href=&quot;#zipfile.ZipFile.namelist&quot;&gt; &lt;code&gt;namelist()&lt;/code&gt; &lt;/a&gt; 리턴 한 목록 의 서브 세트 여야합니다 . &lt;em&gt;pwd&lt;/em&gt; 는 암호화 된 파일에 사용되는 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="10ff4d347f866ccd5f2a70db8425173e5abbb3e1" translate="yes" xml:space="preserve">
          <source>Extract cookies from HTTP &lt;em&gt;response&lt;/em&gt; and store them in the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt;, where allowed by policy.</source>
          <target state="translated">HTTP &lt;em&gt;응답&lt;/em&gt; 에서 쿠키를 추출 하여 정책에서 허용하는 경우 &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; 에&lt;/a&gt; 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="7762c8d14b070a61912e484ba2fc6db8aad38059" translate="yes" xml:space="preserve">
          <source>Extract tarfile into the current directory if &lt;em&gt;output_dir&lt;/em&gt; is not specified.</source>
          <target state="translated">&lt;em&gt;output_dir&lt;/em&gt; 이 지정되지 않은 경우 tarfile을 현재 디렉토리로 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee747f17d62300fd6c830b297f78009d8493b4da" translate="yes" xml:space="preserve">
          <source>Extract the device major number from a raw device number (usually the &lt;code&gt;st_dev&lt;/code&gt; or &lt;code&gt;st_rdev&lt;/code&gt; field from &lt;code&gt;stat&lt;/code&gt;).</source>
          <target state="translated">원시 장치 번호 (일반적으로 &lt;code&gt;stat&lt;/code&gt; 의 &lt;code&gt;st_dev&lt;/code&gt; 또는 &lt;code&gt;st_rdev&lt;/code&gt; 필드)에서 장치 주 번호를 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="5de253fc01d8caa12b19702c93bce330b8060401" translate="yes" xml:space="preserve">
          <source>Extract the device minor number from a raw device number (usually the &lt;code&gt;st_dev&lt;/code&gt; or &lt;code&gt;st_rdev&lt;/code&gt; field from &lt;code&gt;stat&lt;/code&gt;).</source>
          <target state="translated">원시 장치 번호 (일반적으로 &lt;code&gt;stat&lt;/code&gt; 의 &lt;code&gt;st_dev&lt;/code&gt; 또는 &lt;code&gt;st_rdev&lt;/code&gt; 필드)에서 장치 부 번호를 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="3546e06d76818c1a64fd63ff46d39da1c08c38e7" translate="yes" xml:space="preserve">
          <source>Extract the raw traceback from the current stack frame. The return value has the same format as for &lt;a href=&quot;#traceback.extract_tb&quot;&gt;&lt;code&gt;extract_tb()&lt;/code&gt;&lt;/a&gt;. The optional &lt;em&gt;f&lt;/em&gt; and &lt;em&gt;limit&lt;/em&gt; arguments have the same meaning as for &lt;a href=&quot;#traceback.print_stack&quot;&gt;&lt;code&gt;print_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 스택 프레임에서 원시 역 추출을 추출하십시오. 리턴 값은 &lt;a href=&quot;#traceback.extract_tb&quot;&gt; &lt;code&gt;extract_tb()&lt;/code&gt; &lt;/a&gt; 와 형식이 동일합니다 . 선택적 &lt;em&gt;f&lt;/em&gt; 및 &lt;em&gt;limit&lt;/em&gt; 인수는 &lt;a href=&quot;#traceback.print_stack&quot;&gt; &lt;code&gt;print_stack()&lt;/code&gt; &lt;/a&gt; 과 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="e90fa4052b0c2e280e5fd99db0fbdd283520863d" translate="yes" xml:space="preserve">
          <source>Extract the url from a wrapped URL (that is, a string formatted as &lt;code&gt;&amp;lt;URL:scheme://host/path&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;scheme://host/path&amp;gt;&lt;/code&gt;, &lt;code&gt;URL:scheme://host/path&lt;/code&gt; or &lt;code&gt;scheme://host/path&lt;/code&gt;). If &lt;em&gt;url&lt;/em&gt; is not a wrapped URL, it is returned without changes.</source>
          <target state="translated">랩핑 된 URL에서 URL을 추출하십시오 (즉, &lt;code&gt;&amp;lt;URL:scheme://host/path&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;scheme://host/path&amp;gt;&lt;/code&gt; , &lt;code&gt;URL:scheme://host/path&lt;/code&gt; 또는 &lt;code&gt;scheme://host/path&lt;/code&gt; ). &lt;em&gt;url&lt;/em&gt; 이 랩핑 된 URL이 아닌 경우 변경없이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="80f14583713f04ef76e155d25c0906636fb553b4" translate="yes" xml:space="preserve">
          <source>Extract zipfile into target directory.</source>
          <target state="translated">zip 파일을 대상 디렉토리로 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="7a127fcb19d14c22958f0b2767119f711a5ee7e4" translate="yes" xml:space="preserve">
          <source>F flag</source>
          <target state="translated">F 플래그</target>
        </trans-unit>
        <trans-unit id="07c257b16606b468b4287bbfd069963fcb6c04a5" translate="yes" xml:space="preserve">
          <source>FIFO</source>
          <target state="translated">FIFO</target>
        </trans-unit>
        <trans-unit id="0e2b10e415755511239c761ec49ff29c9352b3b0" translate="yes" xml:space="preserve">
          <source>FIFO.</source>
          <target state="translated">FIFO.</target>
        </trans-unit>
        <trans-unit id="e47e8f6fd115bffcf60d2af9abb109a1fa0925c8" translate="yes" xml:space="preserve">
          <source>FIFOs are pipes that can be accessed like regular files. FIFOs exist until they are deleted (for example with &lt;a href=&quot;#os.unlink&quot;&gt;&lt;code&gt;os.unlink()&lt;/code&gt;&lt;/a&gt;). Generally, FIFOs are used as rendezvous between &amp;ldquo;client&amp;rdquo; and &amp;ldquo;server&amp;rdquo; type processes: the server opens the FIFO for reading, and the client opens it for writing. Note that &lt;a href=&quot;#os.mkfifo&quot;&gt;&lt;code&gt;mkfifo()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t open the FIFO &amp;mdash; it just creates the rendezvous point.</source>
          <target state="translated">FIFO는 일반 파일처럼 액세스 할 수있는 파이프입니다. FIFO는 삭제 될 때까지 존재합니다 (예 : &lt;a href=&quot;#os.unlink&quot;&gt; &lt;code&gt;os.unlink()&lt;/code&gt; &lt;/a&gt; ). 일반적으로 FIFO는 &quot;클라이언트&quot;와 &quot;서버&quot;유형 프로세스 사이의 랑데부로 사용됩니다. 서버는 읽기 위해 FIFO를 열고 클라이언트는 쓰기 위해 FIFO를 엽니 다. 참고 것으로 &lt;a href=&quot;#os.mkfifo&quot;&gt; &lt;code&gt;mkfifo()&lt;/code&gt; &lt;/a&gt; FIFO에 열리지 않습니다 - 그냥 랑데부 지점을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="73792fb55d9abc9e92d1d3ebcd41bd7ba0f108d2" translate="yes" xml:space="preserve">
          <source>FILTER_DIR</source>
          <target state="translated">FILTER_DIR</target>
        </trans-unit>
        <trans-unit id="3d8d38284d7c48984126ae4544c8465c506ee097" translate="yes" xml:space="preserve">
          <source>FLT_RADIX</source>
          <target state="translated">FLT_RADIX</target>
        </trans-unit>
        <trans-unit id="234dca4e2a0e92e5608ec0464e330e76723ea1d3" translate="yes" xml:space="preserve">
          <source>FLT_ROUNDS</source>
          <target state="translated">FLT_ROUNDS</target>
        </trans-unit>
        <trans-unit id="fff53c283733fcf57487666af2c11072c9f49c9f" translate="yes" xml:space="preserve">
          <source>FTP Objects</source>
          <target state="translated">FTP 객체</target>
        </trans-unit>
        <trans-unit id="d290164b6f9f0f0391591dd5f84256b1aa55a88a" translate="yes" xml:space="preserve">
          <source>FTPHandler Objects</source>
          <target state="translated">FTPHandler 객체</target>
        </trans-unit>
        <trans-unit id="aa3185ffb8ddcb7e8518130ce5be3ff6a65da6ca" translate="yes" xml:space="preserve">
          <source>FTP_TLS Objects</source>
          <target state="translated">FTP_TLS 객체</target>
        </trans-unit>
        <trans-unit id="a1c787ee1263352ed63b1407e8cc20b772ec3981" translate="yes" xml:space="preserve">
          <source>Facilities:</source>
          <target state="translated">Facilities:</target>
        </trans-unit>
        <trans-unit id="057a04d70c3eb26b21d6a1fc2b1b41a4dfb8a5c6" translate="yes" xml:space="preserve">
          <source>Factory function for drag-and-drop process.</source>
          <target state="translated">Factory function for drag-and-drop process.</target>
        </trans-unit>
        <trans-unit id="6f7d036abe80e350d83c5c2ef79b8d3dffb2724d" translate="yes" xml:space="preserve">
          <source>Fails if either of &lt;em&gt;first&lt;/em&gt; or &lt;em&gt;second&lt;/em&gt; does not have a &lt;code&gt;set.difference()&lt;/code&gt; method.</source>
          <target state="translated">&lt;em&gt;첫 번째&lt;/em&gt; 또는 &lt;em&gt;두 번째&lt;/em&gt; 중 하나에 &lt;code&gt;set.difference()&lt;/code&gt; 메서드 가 없으면 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="e8dee02f91d0dedd9886f02de920cf9df2f8dc44" translate="yes" xml:space="preserve">
          <source>Fairly portable uname interface. Returns a &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; containing six attributes: &lt;a href=&quot;#platform.system&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.node&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.release&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#platform.machine&quot;&gt;&lt;code&gt;machine&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#platform.processor&quot;&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">휴대 성이 뛰어난 uname 인터페이스. &lt;a href=&quot;#platform.system&quot;&gt; &lt;code&gt;system&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#platform.node&quot;&gt; &lt;code&gt;node&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#platform.release&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#platform.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#platform.machine&quot;&gt; &lt;code&gt;machine&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#platform.processor&quot;&gt; &lt;code&gt;processor&lt;/code&gt; 의&lt;/a&gt; 여섯 가지 속성이 포함 된 &lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="294d81f34aa607f6b9a4fa9aa3bd6b4ade4054e3" translate="yes" xml:space="preserve">
          <source>Fallback Values</source>
          <target state="translated">대체 값</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="ac137ed5a5d51689e8820aa48b3c1f650954ec51" translate="yes" xml:space="preserve">
          <source>Fast, floating point arithmetic mean.</source>
          <target state="translated">부동 소수점 산술 평균.</target>
        </trans-unit>
        <trans-unit id="c85baec0392432a2c74935a26751b47a0c953558" translate="yes" xml:space="preserve">
          <source>Fault Objects</source>
          <target state="translated">결함 객체</target>
        </trans-unit>
        <trans-unit id="91f8cc8b15d01ea4c886759792d8b779dea3eea4" translate="yes" xml:space="preserve">
          <source>Fault handler state</source>
          <target state="translated">결함 핸들러 상태</target>
        </trans-unit>
        <trans-unit id="4d5f2566e2cbc8bd29a99af73a71daeccdfbc018" translate="yes" xml:space="preserve">
          <source>Feature Table</source>
          <target state="translated">기능 표</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="12c5a78b3238d1421e12eecf4ddf3ff8b1e448d5" translate="yes" xml:space="preserve">
          <source>Feed some text to the parser. It is processed insofar as it consists of complete elements; incomplete data is buffered until more data is fed or &lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is called. &lt;em&gt;data&lt;/em&gt; must be &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파서에 텍스트를 공급하십시오. 완전한 요소로 구성되는 한 처리됩니다. 불완전한 데이터는 더 많은 데이터가 제공되거나 &lt;a href=&quot;#html.parser.HTMLParser.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때까지 버퍼링 됩니다. &lt;em&gt;데이터&lt;/em&gt; 는 &lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2f6658ca774a02313850f8d0282b532ca38865c5" translate="yes" xml:space="preserve">
          <source>Feed the given bytes data to the parser.</source>
          <target state="translated">주어진 바이트 데이터를 파서에 공급합니다.</target>
        </trans-unit>
        <trans-unit id="387b29142d787ced69aeae549492449687987c43" translate="yes" xml:space="preserve">
          <source>Feed the parser some more data. &lt;em&gt;data&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; containing one or more lines. The lines can be partial and the parser will stitch such partial lines together properly. The lines can have any of the three common line endings: carriage return, newline, or carriage return and newline (they can even be mixed).</source>
          <target state="translated">파서에 더 많은 데이터를 공급하십시오. &lt;em&gt;데이터&lt;/em&gt; 는 하나 이상의 행을 포함 하는 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;바이트와 ​​유사한 객체&lt;/a&gt; 여야합니다 . 선은 부분적 일 수 있으며 파서는 그러한 부분적 선을 올바르게 연결합니다. 줄은 캐리지 리턴, 줄 바꿈 또는 캐리지 리턴과 줄 바꿈의 세 가지 공통 줄 끝을 가질 수 있습니다 (혼합 가능).</target>
        </trans-unit>
        <trans-unit id="8d2e25abe9d22776590f8162eed428faabb925ef" translate="yes" xml:space="preserve">
          <source>Feed the parser some more data. &lt;em&gt;data&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; containing one or more lines. The lines can be partial and the parser will stitch such partial lines together properly. The lines can have any of the three common line endings: carriage return, newline, or carriage return and newline (they can even be mixed).</source>
          <target state="translated">Feed the parser some more data. &lt;em&gt;data&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; containing one or more lines. The lines can be partial and the parser will stitch such partial lines together properly. The lines can have any of the three common line endings: carriage return, newline, or carriage return and newline (they can even be mixed).</target>
        </trans-unit>
        <trans-unit id="a50061ac9428ad8cb79bfb2c8ac329810e31e666" translate="yes" xml:space="preserve">
          <source>FeedParser API</source>
          <target state="translated">FeedParser API</target>
        </trans-unit>
        <trans-unit id="4b2cf2461de886a6ab48362af6c696c99b94d007" translate="yes" xml:space="preserve">
          <source>Feeding incomplete chunks to &lt;a href=&quot;#html.parser.HTMLParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; works, but &lt;a href=&quot;#html.parser.HTMLParser.handle_data&quot;&gt;&lt;code&gt;handle_data()&lt;/code&gt;&lt;/a&gt; might be called more than once (unless &lt;em&gt;convert_charrefs&lt;/em&gt; is set to &lt;code&gt;True&lt;/code&gt;):</source>
          <target state="translated">불완전한 청크를 &lt;a href=&quot;#html.parser.HTMLParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt; 에 공급하는 것은 작동하지만 &lt;a href=&quot;#html.parser.HTMLParser.handle_data&quot;&gt; &lt;code&gt;handle_data()&lt;/code&gt; &lt;/a&gt; 가 두 번 이상 호출 될 수 있습니다 ( &lt;em&gt;convert_charrefs&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정 되지 않은 경우 ).</target>
        </trans-unit>
        <trans-unit id="8c798e0422da17ca64b8b53da08c916bb2d4dba5" translate="yes" xml:space="preserve">
          <source>Feeding string objects into &lt;code&gt;update()&lt;/code&gt; is not supported, as hashes work on bytes, not on characters.</source>
          <target state="translated">해시가 문자가 아닌 바이트에서 작동하므로 문자열 객체를 &lt;code&gt;update()&lt;/code&gt; 에 공급하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3cb49dc70c7bb4c8ba2aa9114340fbd11566992" translate="yes" xml:space="preserve">
          <source>Feeds data to the parser. &lt;em&gt;data&lt;/em&gt; is encoded data.</source>
          <target state="translated">파서에 데이터를 공급합니다. &lt;em&gt;데이터&lt;/em&gt; 는 인코딩 된 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="63da3e374ffa9eea709999e80cff37c228002165" translate="yes" xml:space="preserve">
          <source>Fetch (parts of) messages. &lt;em&gt;message_parts&lt;/em&gt; should be a string of message part names enclosed within parentheses, eg: &lt;code&gt;&quot;(UID BODY[TEXT])&quot;&lt;/code&gt;. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">메시지를 가져옵니다 (일부). &lt;em&gt;message_parts&lt;/em&gt; 는 괄호로 묶인 메시지 부분 이름의 문자열이어야합니다 &lt;code&gt;&quot;(UID BODY[TEXT])&quot;&lt;/code&gt; 예 : &quot;(UID BODY [TEXT])&quot;) . 반환 된 데이터는 메시지 부분 봉투와 데이터의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="a353d7de52e3d80c0d9c5a4d72ac4dc117b1a277" translate="yes" xml:space="preserve">
          <source>Fetch and/or change the signal mask of the calling thread. The signal mask is the set of signals whose delivery is currently blocked for the caller. Return the old signal mask as a set of signals.</source>
          <target state="translated">호출 스레드의 신호 마스크를 가져 오거나 변경합니다. 신호 마스크는 발신자가 현재 배달이 차단 된 신호 세트입니다. 이전 신호 마스크를 신호 세트로 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="cc3b211a4b23d07ed59e5660c59a281f7c520d6e" translate="yes" xml:space="preserve">
          <source>Fetch truncated part of a message. Returned data is a tuple of message part envelope and data.</source>
          <target state="translated">메시지의 잘린 부분을 가져옵니다. 반환 된 데이터는 메시지 부분 봉투와 데이터의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="41a014822c374f4dc32ed7c3bb8b27a133b416fe" translate="yes" xml:space="preserve">
          <source>Fetches all (remaining) rows of a query result, returning a list. Note that the cursor&amp;rsquo;s arraysize attribute can affect the performance of this operation. An empty list is returned when no rows are available.</source>
          <target state="translated">쿼리 결과의 모든 (남은) 행을 가져오고 목록을 반환합니다. 커서의 arraysize 속성은이 작업의 성능에 영향을 줄 수 있습니다. 사용 가능한 행이 없으면 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b5c8387f5e5b6662fa105e9b5dc36427bb6cda63" translate="yes" xml:space="preserve">
          <source>Fetches the next row of a query result set, returning a single sequence, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; when no more data is available.</source>
          <target state="translated">하나의 시퀀스 또는 반환, 쿼리 결과 집합의 다음 행을 꺼냅니다 &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 더 이상 데이터를 사용할 수 없을 때.</target>
        </trans-unit>
        <trans-unit id="e2a8b384625d9b783eb012a6161ee49d504b3ea1" translate="yes" xml:space="preserve">
          <source>Fetches the next set of rows of a query result, returning a list. An empty list is returned when no more rows are available.</source>
          <target state="translated">쿼리 결과의 다음 행 집합을 가져 와서 목록을 반환합니다. 더 이상 사용할 수있는 행이 없으면 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="82d6a64de9a0838fcf2235d8ad49a6d8855b7d1d" translate="yes" xml:space="preserve">
          <source>Fetching a &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt;&lt;code&gt;PropertyMock&lt;/code&gt;&lt;/a&gt; instance from an object calls the mock, with no args. Setting it calls the mock with the value being set.</source>
          <target state="translated">객체에서 &lt;a href=&quot;#unittest.mock.PropertyMock&quot;&gt; &lt;code&gt;PropertyMock&lt;/code&gt; &lt;/a&gt; 인스턴스를 가져 오면 인수없이 mock을 호출합니다. 설정하면 설정된 값으로 모의를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d54dbc3819945e4ef1e4f3d81c00a574445b7866" translate="yes" xml:space="preserve">
          <source>Fetching a header value from a &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; results in that header being parsed and a header object created and returned.</source>
          <target state="translated">&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 에서 헤더 값을 가져 오면 해당 헤더가 구문 분석되고 헤더 오브젝트가 작성되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7fdf343dc9e81798f45e8297c11c3eb775196edb" translate="yes" xml:space="preserve">
          <source>Fetching attributes statically</source>
          <target state="translated">정적으로 속성 가져 오기</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="2dc913c8c6f4ce49af0f66f51e4ef93d71f78ea2" translate="yes" xml:space="preserve">
          <source>Field &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s can be retrieved from the &lt;em&gt;class&lt;/em&gt;, they are useful for debugging because they can provide useful information:</source>
          <target state="translated">필드 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;디스크립터&lt;/a&gt; 는 &lt;em&gt;클래스&lt;/em&gt; 에서 검색 할 수 있으며 유용한 정보를 제공 할 수 있으므로 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f58a808acfe9f9a5304f70174d304e16577af9d3" translate="yes" xml:space="preserve">
          <source>Field &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s can be retrieved from the &lt;em&gt;class&lt;/em&gt;, they are useful for debugging because they can provide useful information:</source>
          <target state="translated">Field &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s can be retrieved from the &lt;em&gt;class&lt;/em&gt;, they are useful for debugging because they can provide useful information:</target>
        </trans-unit>
        <trans-unit id="a9ad8121718f3a086e20f1b811bdb35613fea58f" translate="yes" xml:space="preserve">
          <source>Field names must be unique within one structure or union. This is not checked, only one field can be accessed when names are repeated.</source>
          <target state="translated">필드 이름은 하나의 구조 또는 공용체 내에서 고유해야합니다. 이것은 확인되지 않으며 이름이 반복 될 때 하나의 필드에만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1aebfd4803965d0fd4af25c185165627060d49d6" translate="yes" xml:space="preserve">
          <source>Field values can be ints, strings, or instances of the Binary class.</source>
          <target state="translated">필드 값은 정수, 문자열 또는 이진 클래스의 인스턴스 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c2529071dd608545d05e8531aeb3706a1791075" translate="yes" xml:space="preserve">
          <source>Fields with a default value must come after any fields without a default.</source>
          <target state="translated">기본값이있는 필드는 기본값이없는 필드 뒤에 와야합니다.</target>
        </trans-unit>
        <trans-unit id="d19959803c490a8117d9f8eafb258f26113cfeed" translate="yes" xml:space="preserve">
          <source>File &amp;amp; Directory Access</source>
          <target state="translated">파일 및 디렉토리 액세스</target>
        </trans-unit>
        <trans-unit id="d63d873dbd7f480c6ba1f630266ff8116e6cfb7e" translate="yes" xml:space="preserve">
          <source>File Descriptor Operations</source>
          <target state="translated">파일 디스크립터 조작</target>
        </trans-unit>
        <trans-unit id="0d12a3f0ea99ebe85fe967431fc2aa6a3e0fd02b" translate="yes" xml:space="preserve">
          <source>File Formats</source>
          <target state="translated">파일 형식</target>
        </trans-unit>
        <trans-unit id="4bade3d77b57056d9a51c2d50dd4f03f30abeec7" translate="yes" xml:space="preserve">
          <source>File Handlers</source>
          <target state="translated">파일 핸들러</target>
        </trans-unit>
        <trans-unit id="e6e2940ee51b2dfd01e2af1d2390a9c616642912" translate="yes" xml:space="preserve">
          <source>File Names, Command Line Arguments, and Environment Variables</source>
          <target state="translated">파일 이름, 명령 줄 인수 및 환경 변수</target>
        </trans-unit>
        <trans-unit id="6dec3d0c4b79541a012c7baa6831c7a5ed83666c" translate="yes" xml:space="preserve">
          <source>File Object Creation</source>
          <target state="translated">파일 객체 생성</target>
        </trans-unit>
        <trans-unit id="a726cab0d7c518573e2f7003375fc21599153b1b" translate="yes" xml:space="preserve">
          <source>File Operations</source>
          <target state="translated">파일 작업</target>
        </trans-unit>
        <trans-unit id="fb6199fbca045175a16aa44e72c21f07a4b53d94" translate="yes" xml:space="preserve">
          <source>File Selectors</source>
          <target state="translated">파일 선택기</target>
        </trans-unit>
        <trans-unit id="14692faa66db9ad4f6b25ac054c61284fcee9f47" translate="yes" xml:space="preserve">
          <source>File Separator</source>
          <target state="translated">파일 구분자</target>
        </trans-unit>
        <trans-unit id="65d2775d2856db4e2072563cba39b4d84c4b88b1" translate="yes" xml:space="preserve">
          <source>File System limitations</source>
          <target state="translated">파일 시스템 제한</target>
        </trans-unit>
        <trans-unit id="ba50e3ff10f69bbcd78d2b51aa445f4bc91949b8" translate="yes" xml:space="preserve">
          <source>File and Directory Access</source>
          <target state="translated">파일 및 디렉토리 액세스</target>
        </trans-unit>
        <trans-unit id="f706e474058c3454a43a75c49c2b8118348979e4" translate="yes" xml:space="preserve">
          <source>File descriptor in bad state</source>
          <target state="translated">잘못된 상태의 파일 디스크립터</target>
        </trans-unit>
        <trans-unit id="a95112fa18cc4f2138e56a1ce528b00f3ae2af02" translate="yes" xml:space="preserve">
          <source>File descriptors are small integers corresponding to a file that has been opened by the current process. For example, standard input is usually file descriptor 0, standard output is 1, and standard error is 2. Further files opened by a process will then be assigned 3, 4, 5, and so forth. The name &amp;ldquo;file descriptor&amp;rdquo; is slightly deceptive; on Unix platforms, sockets and pipes are also referenced by file descriptors.</source>
          <target state="translated">파일 디스크립터는 현재 프로세스에서 열린 파일에 해당하는 작은 정수입니다. 예를 들어, 표준 입력은 일반적으로 파일 디스크립터 0이고 표준 출력은 1이며 표준 오류는 2입니다. 프로세스에 의해 열린 추가 파일에는 3, 4, 5 등이 할당됩니다. &amp;ldquo;파일 설명자&amp;rdquo;라는 이름은 약간 기만적입니다. 유닉스 플랫폼에서 소켓과 파이프는 파일 디스크립터에 의해 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="e4abf36a5ea54ec41cce22ec0fe706639aba0b93" translate="yes" xml:space="preserve">
          <source>File exists</source>
          <target state="translated">파일이 존재</target>
        </trans-unit>
        <trans-unit id="cb5afff2713b6247dbc93cc5a2a8350787630318" translate="yes" xml:space="preserve">
          <source>File generation number.</source>
          <target state="translated">파일 생성 번호</target>
        </trans-unit>
        <trans-unit id="3e8a264d601e926718226415b8aea5f39c39c77a" translate="yes" xml:space="preserve">
          <source>File locking deadlock error</source>
          <target state="translated">파일 잠금 교착 상태 오류</target>
        </trans-unit>
        <trans-unit id="a753126c02a7cdcf2329de8b6f0184b625a67089" translate="yes" xml:space="preserve">
          <source>File menu (Shell and Editor)</source>
          <target state="translated">파일 메뉴 (쉘 및 편집기)</target>
        </trans-unit>
        <trans-unit id="6ec4b4ae68331f38e8eb79a30a03536a294a8f5c" translate="yes" xml:space="preserve">
          <source>File mode: file type and file mode bits (permissions).</source>
          <target state="translated">파일 모드 : 파일 유형 및 파일 모드 비트 (권한).</target>
        </trans-unit>
        <trans-unit id="8a87b64cae5a39a0265ada62f19e089c25fa123c" translate="yes" xml:space="preserve">
          <source>File name too long</source>
          <target state="translated">파일 이름이 너무 깁니다</target>
        </trans-unit>
        <trans-unit id="42f4b294f545a51be6ba48389e180aadbe58f642" translate="yes" xml:space="preserve">
          <source>File object registered.</source>
          <target state="translated">파일 객체가 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="b8840fb4bc3b477275dcdcfe4e561235b1db91f8" translate="yes" xml:space="preserve">
          <source>File objects on Windows are not acceptable, but sockets are. On Windows, the underlying &lt;code&gt;select()&lt;/code&gt; function is provided by the WinSock library, and does not handle file descriptors that don&amp;rsquo;t originate from WinSock.</source>
          <target state="translated">Windows의 파일 오브젝트는 허용되지 않지만 소켓은 허용됩니다. Windows에서 기본 &lt;code&gt;select()&lt;/code&gt; 함수는 WinSock 라이브러리에서 제공되며 WinSock에서 생성되지 않은 파일 디스크립터를 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="600941bc483d702b3e6700aa5c9df8eaacfc769f" translate="yes" xml:space="preserve">
          <source>File separator</source>
          <target state="translated">파일 구분자</target>
        </trans-unit>
        <trans-unit id="f61db49fc791da76e7a4fae457554297e80648e3" translate="yes" xml:space="preserve">
          <source>File system calls on reserved paths can fail mysteriously or have unintended effects.</source>
          <target state="translated">예약 된 경로의 파일 시스템 호출은 신비하게 실패하거나 의도하지 않은 결과를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78c59929bfdd3ce1a14ecda0c9b3a704ea61f8d0" translate="yes" xml:space="preserve">
          <source>File system path representation: &lt;code&gt;__fspath__&lt;/code&gt;</source>
          <target state="translated">파일 시스템 경로 표현 : &lt;code&gt;__fspath__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bca9e4b99c52f14bead7db3f4a025c74ea71611" translate="yes" xml:space="preserve">
          <source>File table overflow</source>
          <target state="translated">파일 테이블 오버 플로우</target>
        </trans-unit>
        <trans-unit id="a0704a4eaa055ab08e3766911e446737f4f2a445" translate="yes" xml:space="preserve">
          <source>File too large</source>
          <target state="translated">파일이 너무 큽니다</target>
        </trans-unit>
        <trans-unit id="51583aa4b17cb383a15403102b60604e1ffe68c3" translate="yes" xml:space="preserve">
          <source>File type.</source>
          <target state="translated">파일 형식</target>
        </trans-unit>
        <trans-unit id="e0343558dc440a496930dadd39dd8387c3ef8a09" translate="yes" xml:space="preserve">
          <source>File type. &lt;em&gt;type&lt;/em&gt; is usually one of these constants: &lt;code&gt;REGTYPE&lt;/code&gt;, &lt;code&gt;AREGTYPE&lt;/code&gt;, &lt;code&gt;LNKTYPE&lt;/code&gt;, &lt;code&gt;SYMTYPE&lt;/code&gt;, &lt;code&gt;DIRTYPE&lt;/code&gt;, &lt;code&gt;FIFOTYPE&lt;/code&gt;, &lt;code&gt;CONTTYPE&lt;/code&gt;, &lt;code&gt;CHRTYPE&lt;/code&gt;, &lt;code&gt;BLKTYPE&lt;/code&gt;, &lt;code&gt;GNUTYPE_SPARSE&lt;/code&gt;. To determine the type of a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object more conveniently, use the &lt;code&gt;is*()&lt;/code&gt; methods below.</source>
          <target state="translated">파일 형식 &lt;em&gt;type&lt;/em&gt; 은 일반적으로 &lt;code&gt;REGTYPE&lt;/code&gt; , &lt;code&gt;AREGTYPE&lt;/code&gt; , &lt;code&gt;LNKTYPE&lt;/code&gt; , &lt;code&gt;SYMTYPE&lt;/code&gt; , &lt;code&gt;DIRTYPE&lt;/code&gt; , &lt;code&gt;FIFOTYPE&lt;/code&gt; , &lt;code&gt;CONTTYPE&lt;/code&gt; , &lt;code&gt;CHRTYPE&lt;/code&gt; , &lt;code&gt;BLKTYPE&lt;/code&gt; , &lt;code&gt;GNUTYPE_SPARSE&lt;/code&gt; 상수 중 하나입니다 . &lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt; 객체 의 유형을 보다 편리하게 결정하려면 아래 의 &lt;code&gt;is*()&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc6610cbbc8b48db2b32dc4cea18d4eb726c9792" translate="yes" xml:space="preserve">
          <source>FileCookieJar subclasses and co-operation with web browsers</source>
          <target state="translated">FileCookieJar 서브 클래스 및 웹 브라우저와의 협력</target>
        </trans-unit>
        <trans-unit id="f383b8e9b99251c23741b31d5cc53abb63e20cdc" translate="yes" xml:space="preserve">
          <source>FileExistsError</source>
          <target state="translated">FileExistsError</target>
        </trans-unit>
        <trans-unit id="0ac6dbee4d8f540761408e72685ba06c2b71eae5" translate="yes" xml:space="preserve">
          <source>FileHandler</source>
          <target state="translated">FileHandler</target>
        </trans-unit>
        <trans-unit id="badf54288fb507d144cec214315538aa33ce8145" translate="yes" xml:space="preserve">
          <source>FileHandler Objects</source>
          <target state="translated">FileHandler 객체</target>
        </trans-unit>
        <trans-unit id="58c4fa0a0ae8dd1958950cee046cf91990f7447f" translate="yes" xml:space="preserve">
          <source>FileNotFoundError</source>
          <target state="translated">FileNotFoundError</target>
        </trans-unit>
        <trans-unit id="08f576d210cb57554632ff4a6560f019db2aebb7" translate="yes" xml:space="preserve">
          <source>FileType objects</source>
          <target state="translated">FileType 객체</target>
        </trans-unit>
        <trans-unit id="1327b5f2d09eccc6cf4ed8241ec999e6fd23b758" translate="yes" xml:space="preserve">
          <source>FileType objects understand the pseudo-argument &lt;code&gt;'-'&lt;/code&gt; and automatically convert this into &lt;code&gt;sys.stdin&lt;/code&gt; for readable &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects and &lt;code&gt;sys.stdout&lt;/code&gt; for writable &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">FileType 객체는 의사 인수 &lt;code&gt;'-'&lt;/code&gt; 를 이해하고 읽을 수있는 &lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt; 객체의 경우 &lt;code&gt;sys.stdin&lt;/code&gt; 으로 , 그리고 쓰기 가능한 &lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt; 객체의 경우 &lt;code&gt;sys.stdout&lt;/code&gt; 으로 자동 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="40393ad111e27bcc683ee72e707bba890145c9d7" translate="yes" xml:space="preserve">
          <source>Filename (&lt;code&gt;str&lt;/code&gt;).</source>
          <target state="translated">파일 이름 ( &lt;code&gt;str&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="87a4cc2de20c7671ca65638a2d02e9365422f798" translate="yes" xml:space="preserve">
          <source>Filename of default file in which to keep cookies. This attribute may be assigned to.</source>
          <target state="translated">쿠키를 보관할 기본 파일의 파일 이름입니다. 이 속성은 할당 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52c43544dfb2a45f1802d1c763e2a6dc8daaa754" translate="yes" xml:space="preserve">
          <source>Filename pattern of the filter (&lt;code&gt;str&lt;/code&gt;). Read-only property.</source>
          <target state="translated">필터의 파일 이름 패턴 ( &lt;code&gt;str&lt;/code&gt; ). 읽기 전용 속성</target>
        </trans-unit>
        <trans-unit id="68d63bdb6592b17bfb046f862f466553bd3f6720" translate="yes" xml:space="preserve">
          <source>Filename portion of &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pathname&lt;/code&gt; 의 파일 이름 부분 .</target>
        </trans-unit>
        <trans-unit id="003505cb00a80d1f2f5ea93d0f9242196378636c" translate="yes" xml:space="preserve">
          <source>Files and Directories</source>
          <target state="translated">파일과 디렉토리</target>
        </trans-unit>
        <trans-unit id="759a6920d195b7ce8672f19ab41d440633e44c8b" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in &lt;em&gt;a&lt;/em&gt;, filtered by &lt;em&gt;hide&lt;/em&gt; and &lt;em&gt;ignore&lt;/em&gt;.</source>
          <target state="translated">의 파일 및 하위 디렉토리 , 필터링 &lt;em&gt;숨기기&lt;/em&gt; 와 &lt;em&gt;무시&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a3936a42ac96b8925399b319d5a7d796d3d8db8" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in &lt;em&gt;b&lt;/em&gt;, filtered by &lt;em&gt;hide&lt;/em&gt; and &lt;em&gt;ignore&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;b의&lt;/em&gt; 파일 및 하위 디렉토리로 , &lt;em&gt;hide&lt;/em&gt; 및 &lt;em&gt;ignore로&lt;/em&gt; 필터링됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8b6fbc3a2273d1bb7466dae95464866701031f5" translate="yes" xml:space="preserve">
          <source>Files and subdirectories in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">모두의 파일 및 하위 디렉토리 와 &lt;em&gt;B&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed0be31e2bc597af493e72f4f33679b95df48ed6" translate="yes" xml:space="preserve">
          <source>Files and subdirectories only in &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">파일 및에서만 하위 디렉토리 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ac464055e749e1e5b207f242390a2ba0bfdade9" translate="yes" xml:space="preserve">
          <source>Files and subdirectories only in &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">파일 및에서만 하위 디렉토리 &lt;em&gt;나&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ae626010c4822a53276953b22090762c22ac3e" translate="yes" xml:space="preserve">
          <source>Files are an example of effectively single use context managers, since the first &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement will close the file, preventing any further IO operations using that file object.</source>
          <target state="translated">첫 번째 &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문은 파일을 닫아 해당 파일 객체를 사용하는 추가 IO 작업을 막기 때문에 파일 은 효과적으로 단일 사용 컨텍스트 관리자의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="c71d9778579ae9a94c7003b41c7a6b8d545f9ec7" translate="yes" xml:space="preserve">
          <source>Files are an example of effectively single use context managers, since the first &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement will close the file, preventing any further IO operations using that file object.</source>
          <target state="translated">Files are an example of effectively single use context managers, since the first &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; statement will close the file, preventing any further IO operations using that file object.</target>
        </trans-unit>
        <trans-unit id="4cd878bcefca3ec6e629466dc58bb31702253a22" translate="yes" xml:space="preserve">
          <source>Files in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">모두의 파일 와 &lt;em&gt;B&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea2f41f1c05642d27cd04535fc0e6f3df0c5954b" translate="yes" xml:space="preserve">
          <source>Files which are identical in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, using the class&amp;rsquo;s file comparison operator.</source>
          <target state="translated">클래스의 파일 비교 연산자를 사용하여 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 에서 동일한 파일.</target>
        </trans-unit>
        <trans-unit id="749d478161c9a248300f584a3f2f59df027d8b21" translate="yes" xml:space="preserve">
          <source>Files which are in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, but could not be compared.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 모두 있지만 비교할 수없는 파일 .</target>
        </trans-unit>
        <trans-unit id="633f984cfb9a0ec3e74e412efec54a2603e5069c" translate="yes" xml:space="preserve">
          <source>Files which are in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, whose contents differ according to the class&amp;rsquo;s file comparison operator.</source>
          <target state="translated">클래스의 파일 비교 연산자에 따라 내용이 다른 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 모두에 &lt;em&gt;있는&lt;/em&gt; 파일.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1ee9e004d27605af6eb217be8809442c35a541" translate="yes" xml:space="preserve">
          <source>Fill the shape drawn after the last call to &lt;a href=&quot;#turtle.begin_fill&quot;&gt;&lt;code&gt;begin_fill()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#turtle.begin_fill&quot;&gt; &lt;code&gt;begin_fill()&lt;/code&gt; &lt;/a&gt; 을 마지막으로 호출 한 후 그린 모양을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="98325be45e57b01ea42841fb2dc63e31875877c1" translate="yes" xml:space="preserve">
          <source>Filling</source>
          <target state="translated">Filling</target>
        </trans-unit>
        <trans-unit id="3310f43302c999c8492a42df42ea6b5b288e9557" translate="yes" xml:space="preserve">
          <source>Filling an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; with information about program arguments is done by making calls to the &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method. Generally, these calls tell the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; how to take the strings on the command line and turn them into objects. This information is stored and used when &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; is called. For example:</source>
          <target state="translated">프로그램 인수에 대한 정보 로 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 를 채우는 것은 &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 수행됩니다 . 일반적으로 이러한 호출은 &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt; 에 명령 줄에서 문자열을 가져 와서 객체로 만드는 방법을 알려줍니다 . 이 정보는 &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 저장되고 사용됩니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="a912d88c08a6e2310110ffbd20aa2b37095a730a" translate="yes" xml:space="preserve">
          <source>Filter Objects</source>
          <target state="translated">필터 객체</target>
        </trans-unit>
        <trans-unit id="a2d118fb1199e7aba611e82fb161d544d1eac75d" translate="yes" xml:space="preserve">
          <source>Filter action.</source>
          <target state="translated">필터 동작.</target>
        </trans-unit>
        <trans-unit id="40f168dc65ac13c1d458eb61d8d66634ac1a3375" translate="yes" xml:space="preserve">
          <source>Filter on traces of memory blocks.</source>
          <target state="translated">미량의 메모리 블록을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="46599895c7cc0e31d2f5baffff2b94f7c4930832" translate="yes" xml:space="preserve">
          <source>Filter specific EOF condition</source>
          <target state="translated">필터 별 EOF 조건</target>
        </trans-unit>
        <trans-unit id="46c8bfb7a3178cfafcd4b07b975d5792a4676ea6" translate="yes" xml:space="preserve">
          <source>Filter specific data.</source>
          <target state="translated">특정 데이터를 필터링하십시오.</target>
        </trans-unit>
        <trans-unit id="9ac71d86bc0dc3c87565de360f8c150dfeaa3a12" translate="yes" xml:space="preserve">
          <source>Filter specific flags.</source>
          <target state="translated">특정 플래그를 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="90bab0b2418045b3e5941db6175b231502b4d0a8" translate="yes" xml:space="preserve">
          <source>Filter the files by directory.</source>
          <target state="translated">Filter the files by directory.</target>
        </trans-unit>
        <trans-unit id="f615ce4691db8194f5e5c00719b0315f74011927" translate="yes" xml:space="preserve">
          <source>Filter traces of memory blocks by their address space (domain).</source>
          <target state="translated">주소 공간 (도메인)별로 메모리 블록의 흔적을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="2353cd812767e6ab918c30790318afb782c94439" translate="yes" xml:space="preserve">
          <source>Filters provide a finer grained facility for determining which log records to output.</source>
          <target state="translated">필터는 출력 할 로그 레코드를 결정하기위한보다 세분화 된 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="91234c54704fa45cc1c28452be237689e3afdac5" translate="yes" xml:space="preserve">
          <source>Finalizer Objects</source>
          <target state="translated">파이널 라이저 객체</target>
        </trans-unit>
        <trans-unit id="b4a9f27a229332b0ddb9b525d8627f1feae36bc7" translate="yes" xml:space="preserve">
          <source>Finally send the headers to the output stream and flush the internal headers buffer.</source>
          <target state="translated">마지막으로 헤더를 출력 스트림으로 보내고 내부 헤더 버퍼를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="5340045eb569806018888d3e6ca8151bb31425b6" translate="yes" xml:space="preserve">
          <source>Finally the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; provides the following methods and attributes:</source>
          <target state="translated">마지막으로 &lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt; 는 다음과 같은 메소드와 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ac7a70a71bee49fd5902a24b61b093fc56eeefe4" translate="yes" xml:space="preserve">
          <source>Finally, developers of interactive shells that run user code in a namespace other than &lt;code&gt;__main__&lt;/code&gt; are advised to ensure that &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; messages are made visible by default, using code like the following (where &lt;code&gt;user_ns&lt;/code&gt; is the module used to execute code entered interactively):</source>
          <target state="translated">마지막으로 &lt;code&gt;__main__&lt;/code&gt; 이외의 네임 스페이스에서 사용자 코드를 실행하는 대화식 쉘 개발자는 다음과 같은 코드를 사용하여 &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt; 메시지가 기본적으로 표시 되도록하는 것이 좋습니다 (여기서 &lt;code&gt;user_ns&lt;/code&gt; 는 대화식으로 입력 된 코드를 실행하는 데 사용되는 모듈입니다).</target>
        </trans-unit>
        <trans-unit id="54483631603508ccb6eef71317df3b382f7a7d0f" translate="yes" xml:space="preserve">
          <source>Finally, it provides some additional type-related utility classes and functions that are not fundamental enough to be builtins.</source>
          <target state="translated">마지막으로, 내장에 충분하지 않은 몇 가지 추가 유형 관련 유틸리티 클래스 및 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4cc1441649b921d6fdae0ab41c8bf613ba751dc2" translate="yes" xml:space="preserve">
          <source>Finally, split each entry into a list with first name, last name, telephone number, and address. We use the &lt;code&gt;maxsplit&lt;/code&gt; parameter of &lt;a href=&quot;#re.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; because the address has spaces, our splitting pattern, in it:</source>
          <target state="translated">마지막으로 각 항목을 이름, 성, 전화 번호 및 주소가있는 목록으로 분할하십시오. 우리 는 &lt;a href=&quot;#re.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;maxsplit&lt;/code&gt; 매개 변수를 사용합니다 . 주소에는 분리 패턴 인 공백이 있기 때문입니다 :</target>
        </trans-unit>
        <trans-unit id="ca29ccfc698632fd34f8bef6c54a4c7594301bca" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;type&lt;/em&gt; determines how the data should be presented.</source>
          <target state="translated">마지막으로 &lt;em&gt;유형에&lt;/em&gt; 따라 데이터 표시 방법이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="6e412b4e5a4b243814ad83cb939463fbbfcd9073" translate="yes" xml:space="preserve">
          <source>Finally, the last line makes &lt;code&gt;Foo&lt;/code&gt; a virtual subclass of &lt;code&gt;MyIterable&lt;/code&gt;, even though it does not define an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method (it uses the old-style iterable protocol, defined in terms of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;). Note that this will not make &lt;code&gt;get_iterator&lt;/code&gt; available as a method of &lt;code&gt;Foo&lt;/code&gt;, so it is provided separately.</source>
          <target state="translated">마지막으로, &lt;code&gt;Foo&lt;/code&gt; 는 &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; 메소드를 정의하지 않더라도 Foo 를 &lt;code&gt;MyIterable&lt;/code&gt; 의 가상 서브 클래스로 만듭니다 ( &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt; 관점에서 정의 된 구식 반복 가능 프로토콜 사용 ). 이렇게하면 &lt;code&gt;get_iterator&lt;/code&gt; 를 &lt;code&gt;Foo&lt;/code&gt; 의 메소드로 사용할 수 없으므로 별도로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a303a2bc925625afc4519d11fc8b93908009a399" translate="yes" xml:space="preserve">
          <source>Finally, the last line makes &lt;code&gt;Foo&lt;/code&gt; a virtual subclass of &lt;code&gt;MyIterable&lt;/code&gt;, even though it does not define an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method (it uses the old-style iterable protocol, defined in terms of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;). Note that this will not make &lt;code&gt;get_iterator&lt;/code&gt; available as a method of &lt;code&gt;Foo&lt;/code&gt;, so it is provided separately.</source>
          <target state="translated">Finally, the last line makes &lt;code&gt;Foo&lt;/code&gt; a virtual subclass of &lt;code&gt;MyIterable&lt;/code&gt; , even though it does not define an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt; method (it uses the old-style iterable protocol, defined in terms of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;). Note that this will not make &lt;code&gt;get_iterator&lt;/code&gt; available as a method of &lt;code&gt;Foo&lt;/code&gt; , so it is provided separately.</target>
        </trans-unit>
        <trans-unit id="90e60f8d4aa2795892376f060e02bfac6967dbef" translate="yes" xml:space="preserve">
          <source>Finally, the module defines the following functions:</source>
          <target state="translated">마지막으로 모듈은 다음 기능을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4802b5d7cd86363b824fd0ca9a616c0d0c5ad299" translate="yes" xml:space="preserve">
          <source>Finally, we compare the two:</source>
          <target state="translated">마지막으로 두 가지를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="df251b06eefdaa932e97b54fbe9a74d3e606fa61" translate="yes" xml:space="preserve">
          <source>Find</source>
          <target state="translated">Find</target>
        </trans-unit>
        <trans-unit id="e22d01c9a1cff7d8d85bf94c081d389c7cb45c44" translate="yes" xml:space="preserve">
          <source>Find Again</source>
          <target state="translated">다시 찾기</target>
        </trans-unit>
        <trans-unit id="fee9d437c96f424d55cbaea346f0b4c8fcac6cb5" translate="yes" xml:space="preserve">
          <source>Find Selection</source>
          <target state="translated">선택 찾기</target>
        </trans-unit>
        <trans-unit id="ef1f9108191ec94e03062bd8ad91db6782be5303" translate="yes" xml:space="preserve">
          <source>Find all the test modules by recursing into subdirectories from the specified start directory, and return a TestSuite object containing them. Only test files that match &lt;em&gt;pattern&lt;/em&gt; will be loaded. (Using shell style pattern matching.) Only module names that are importable (i.e. are valid Python identifiers) will be loaded.</source>
          <target state="translated">지정된 시작 디렉토리에서 서브 디렉토리로 반복하여 모든 테스트 모듈을 찾아서이를 포함하는 TestSuite 오브젝트를 리턴하십시오. &lt;em&gt;패턴&lt;/em&gt; 과 일치하는 테스트 파일 만 로드됩니다. (쉘 스타일 패턴 일치 사용) 가져올 수있는 (즉, 유효한 Python 식별자) 모듈 이름 만로드됩니다.</target>
        </trans-unit>
        <trans-unit id="5c62bc8f6363fb9566dfbefc3e5e304573710820" translate="yes" xml:space="preserve">
          <source>Find in Files&amp;hellip;</source>
          <target state="translated">파일에서 찾기&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="e1a3407ce9c645e9293a18e98df208634d5b0fd6" translate="yes" xml:space="preserve">
          <source>Find longest matching block in &lt;code&gt;a[alo:ahi]&lt;/code&gt; and &lt;code&gt;b[blo:bhi]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a[alo:ahi]&lt;/code&gt; 및 &lt;code&gt;b[blo:bhi]&lt;/code&gt; 에서 가장 긴 일치 블록을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="88973852d34b548cba7442351fe7931983f58261" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for a module, optionally relative to the specified &lt;strong&gt;package&lt;/strong&gt; name. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; is returned (unless the spec would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no spec is found.</source>
          <target state="translated">선택적으로 지정된 &lt;strong&gt;패키지&lt;/strong&gt; 이름을 기준으로 모듈 의 &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;스펙&lt;/a&gt; 을 찾으십시오 . 모듈 인 경우 &lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 에&lt;/a&gt; 다음 &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; (사양이 없을 것이다 않는 리턴 &lt;code&gt;None&lt;/code&gt; 하거나하는 경우, 설정되지 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를가&lt;/a&gt; 상승한다). 그렇지 않으면 &lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; 를&lt;/a&gt; 사용한 검색 이 수행됩니다. &lt;code&gt;None&lt;/code&gt; 어떤 스펙이 발견되지 않으면 반환되지 않습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47cc28f6ec26c92278c802332aae87071d54200f" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for a module, optionally relative to the specified &lt;strong&gt;package&lt;/strong&gt; name. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; is returned (unless the spec would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no spec is found.</source>
          <target state="translated">Find the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for a module, optionally relative to the specified &lt;strong&gt;package&lt;/strong&gt; name. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;, then &lt;code&gt;sys.modules[name].__spec__&lt;/code&gt; is returned (unless the spec would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no spec is found.</target>
        </trans-unit>
        <trans-unit id="bb323e03785be602bcba83db798ce16c9bf59cc4" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://en.wikipedia.org/wiki/Quartile&quot;&gt;quartiles&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Decile&quot;&gt;deciles&lt;/a&gt; for the SAT scores:</source>
          <target state="translated">SAT 점수에 대한 &lt;a href=&quot;https://en.wikipedia.org/wiki/Quartile&quot;&gt;사 분위수&lt;/a&gt; 와 &lt;a href=&quot;https://en.wikipedia.org/wiki/Decile&quot;&gt;십 &lt;/a&gt;분위수를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="54727e2ae4fbfa9a1379603de62399cc1ea08e5c" translate="yes" xml:space="preserve">
          <source>Find the loader for a module, optionally within the specified &lt;em&gt;path&lt;/em&gt;. If the module is in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;sys.modules[name].__loader__&lt;/code&gt; is returned (unless the loader would be &lt;code&gt;None&lt;/code&gt; or is not set, in which case &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised). Otherwise a search using &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; is done. &lt;code&gt;None&lt;/code&gt; is returned if no loader is found.</source>
          <target state="translated">선택적으로 지정된 &lt;em&gt;경로&lt;/em&gt; 내에서 모듈의 로더를 찾으십시오 . 모듈 인 경우 &lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 에&lt;/a&gt; 다음 &lt;code&gt;sys.modules[name].__loader__&lt;/code&gt; (로더는 없을 것이다 않는 리턴 &lt;code&gt;None&lt;/code&gt; 하거나하는 경우, 설정되지 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를가&lt;/a&gt; 상승한다). 그렇지 않으면 &lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; 를&lt;/a&gt; 사용한 검색 이 수행됩니다. &lt;code&gt;None&lt;/code&gt; 어떤 로더가 발견되지 않으면 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="466bd9c283ada3a2104411c5b7cd20bcb47f3b3e" translate="yes" xml:space="preserve">
          <source>Find&amp;hellip;</source>
          <target state="translated">Find&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cf4be453d54751062a87b79b8d32be07d8baa9ca" translate="yes" xml:space="preserve">
          <source>Finding all Adverbs</source>
          <target state="translated">모든 부사 찾기</target>
        </trans-unit>
        <trans-unit id="b721c6da8e2db8fb2ef1a1be90eac8dd41d6f9e7" translate="yes" xml:space="preserve">
          <source>Finding all Adverbs and their Positions</source>
          <target state="translated">모든 부사와 그 위치 찾기</target>
        </trans-unit>
        <trans-unit id="0a2099ef6eb29e011a3b48632c5a2afdec3ee58e" translate="yes" xml:space="preserve">
          <source>Finding interesting elements</source>
          <target state="translated">흥미로운 요소 찾기</target>
        </trans-unit>
        <trans-unit id="f7bb5e00680fccf4dcccd7c41b77a19932915851" translate="yes" xml:space="preserve">
          <source>Finding shared libraries</source>
          <target state="translated">공유 라이브러리 찾기</target>
        </trans-unit>
        <trans-unit id="8e54a9c2cec2bb117d48536f67fc88db48ee2cec" translate="yes" xml:space="preserve">
          <source>Finds all matching subelements, by tag name or &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns a list containing all matching elements in document order. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">태그 이름 또는 &lt;a href=&quot;#elementtree-xpath&quot;&gt;경로&lt;/a&gt; 별로 일치하는 모든 하위 요소를 찾습니다 . 일치하는 모든 요소가 포함 된 목록을 문서 순서로 반환합니다. &lt;em&gt;네임 스페이스&lt;/em&gt; 는 네임 스페이스 접두사에서 전체 이름으로의 선택적 매핑입니다. 패스 &lt;code&gt;''&lt;/code&gt; 주어진 공간에 표현의 모든 접두어가 태그 이름을 이동하는 접두사로.</target>
        </trans-unit>
        <trans-unit id="d859b654af5ed61880223a7226d7e7e1d3483231" translate="yes" xml:space="preserve">
          <source>Finds all matching subelements, by tag name or &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns an iterable yielding all matching elements in document order. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name.</source>
          <target state="translated">태그 이름 또는 &lt;a href=&quot;#elementtree-xpath&quot;&gt;경로&lt;/a&gt; 별로 일치하는 모든 하위 요소를 찾습니다 . 일치하는 모든 요소를 ​​문서 순서로 반환하는 반복 가능을 리턴합니다. &lt;em&gt;네임 스페이스&lt;/em&gt; 는 네임 스페이스 접두사에서 전체 이름으로의 선택적 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="5b27a1b5e4d00faec99659152610aca79a1d8fdf" translate="yes" xml:space="preserve">
          <source>Finds and returns the closest &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self&lt;/code&gt; that has denominator at most max_denominator. This method is useful for finding rational approximations to a given floating-point number:</source>
          <target state="translated">분모가 최대 max_denominator 인 &lt;code&gt;self&lt;/code&gt; 가장 가까운 &lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt; 를 찾아 반환합니다 . 이 방법은 주어진 부동 소수점 수에 대한 합리적인 근사치를 찾는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d10a60a0eaf8db436783842ebe25ff70039b0d06" translate="yes" xml:space="preserve">
          <source>Finds text for the first subelement matching &lt;em&gt;match&lt;/em&gt;. &lt;em&gt;match&lt;/em&gt; may be a tag name or a &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns the text content of the first matching element, or &lt;em&gt;default&lt;/em&gt; if no element was found. Note that if the matching element has no text content an empty string is returned. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">첫 번째 하위 요소에 일치하는 텍스트를 찾습니다 &lt;em&gt;일치&lt;/em&gt; . &lt;em&gt;match&lt;/em&gt; 는 태그 이름 또는 &lt;a href=&quot;#elementtree-xpath&quot;&gt;경로&lt;/a&gt; 일 수 있습니다 . 일치하는 첫 번째 요소의 텍스트 컨텐츠를 리턴하거나 요소가없는 경우 &lt;em&gt;기본값을&lt;/em&gt; 리턴합니다 . 일치하는 요소에 텍스트 내용이 없으면 빈 문자열이 반환됩니다. &lt;em&gt;네임 스페이스&lt;/em&gt; 는 네임 스페이스 접두사에서 전체 이름으로의 선택적 매핑입니다. 패스 &lt;code&gt;''&lt;/code&gt; 주어진 공간에 표현의 모든 접두어가 태그 이름을 이동하는 접두사로.</target>
        </trans-unit>
        <trans-unit id="da452c485a924a8c6950daa3d141c59442b42e7b" translate="yes" xml:space="preserve">
          <source>Finds the caller&amp;rsquo;s source filename and line number. Returns the filename, line number, function name and stack information as a 4-element tuple. The stack information is returned as &lt;code&gt;None&lt;/code&gt; unless &lt;em&gt;stack_info&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">발신자의 소스 파일 이름과 줄 번호를 찾습니다. 파일 이름, 줄 번호, 함수 이름 및 스택 정보를 4 요소 튜플로 반환합니다. &lt;em&gt;stack_info&lt;/em&gt; 가 &lt;code&gt;True&lt;/code&gt; 가 아니면 스택 정보는 &lt;code&gt;None&lt;/code&gt; 으로 반환됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef05bb45a66bea7421c281f5a43ff7fb8a6ea316" translate="yes" xml:space="preserve">
          <source>Finds the first subelement matching &lt;em&gt;match&lt;/em&gt;. &lt;em&gt;match&lt;/em&gt; may be a tag name or a &lt;a href=&quot;#elementtree-xpath&quot;&gt;path&lt;/a&gt;. Returns an element instance or &lt;code&gt;None&lt;/code&gt;. &lt;em&gt;namespaces&lt;/em&gt; is an optional mapping from namespace prefix to full name. Pass &lt;code&gt;''&lt;/code&gt; as prefix to move all unprefixed tag names in the expression into the given namespace.</source>
          <target state="translated">첫 번째 하위 요소 일치 찾습니다 &lt;em&gt;일치&lt;/em&gt; . &lt;em&gt;match&lt;/em&gt; 는 태그 이름 또는 &lt;a href=&quot;#elementtree-xpath&quot;&gt;경로&lt;/a&gt; 일 수 있습니다 . 요소 인스턴스 또는 &lt;code&gt;None&lt;/code&gt; 을 반환합니다 . &lt;em&gt;네임 스페이스&lt;/em&gt; 는 네임 스페이스 접두사에서 전체 이름으로의 선택적 매핑입니다. 패스 &lt;code&gt;''&lt;/code&gt; 주어진 공간에 표현의 모든 접두어가 태그 이름을 이동하는 접두사로.</target>
        </trans-unit>
        <trans-unit id="383b6f69481b14ce56e9a9c5c3e3db37deae4310" translate="yes" xml:space="preserve">
          <source>Finds the value &lt;em&gt;x&lt;/em&gt; of the random variable &lt;em&gt;X&lt;/em&gt; such that the probability of the variable being less than or equal to that value equals the given probability &lt;em&gt;p&lt;/em&gt;.</source>
          <target state="translated">변수가 해당 값보다 작거나 같은 확률이 주어진 확률 &lt;em&gt;p&lt;/em&gt; 와 같도록 랜덤 변수 &lt;em&gt;X&lt;/em&gt; 의 값 &lt;em&gt;x&lt;/em&gt; 를 찾습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04d5bbaf630e544c5dc9e758ee6e372783543ff0" translate="yes" xml:space="preserve">
          <source>Finer Points</source>
          <target state="translated">더 좋은 포인트</target>
        </trans-unit>
        <trans-unit id="432bdfa8572e3f54d5ae893d2654804bc7796b03" translate="yes" xml:space="preserve">
          <source>Finish the compression process, returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing any data stored in the compressor&amp;rsquo;s internal buffers.</source>
          <target state="translated">압축 과정을 마치고 컴프레서의 내부 버퍼에 저장된 데이터를 포함 하는 &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="baed4062148e238b2036d98ee1192d5e5bac6f1c" translate="yes" xml:space="preserve">
          <source>Finish the compression process. Returns the compressed data left in internal buffers.</source>
          <target state="translated">압축 프로세스를 완료하십시오. 내부 버퍼에 남아있는 압축 된 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6b9354378ed8f6903d12116f4cc1f005f0095a5" translate="yes" xml:space="preserve">
          <source>Finishes cleaning up the stack when a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement block exits.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 문 블록이 종료 되면 스택 정리를 완료 합니다.</target>
        </trans-unit>
        <trans-unit id="321b3d472ac84279a6e6dbb1bf70264bbbfa42e3" translate="yes" xml:space="preserve">
          <source>Finishes feeding data to the parser. Returns the result of calling the &lt;code&gt;close()&lt;/code&gt; method of the &lt;em&gt;target&lt;/em&gt; passed during construction; by default, this is the toplevel document element.</source>
          <target state="translated">파서에 데이터 공급을 완료합니다. 생성하는 동안 전달 된 &lt;em&gt;대상&lt;/em&gt; 의 &lt;code&gt;close()&lt;/code&gt; 메서드 를 호출 한 결과를 반환합니다 . 기본적으로 이것이 최상위 문서 요소입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41b7c3042f5a197e5d2450646a9d85e745f8b93c" translate="yes" xml:space="preserve">
          <source>First of all, check for trivial installation errors &amp;mdash; reading the section above on installing your CGI script carefully can save you a lot of time. If you wonder whether you have understood the installation procedure correctly, try installing a copy of this module file (&lt;code&gt;cgi.py&lt;/code&gt;) as a CGI script. When invoked as a script, the file will dump its environment and the contents of the form in HTML form. Give it the right mode etc, and send it a request. If it&amp;rsquo;s installed in the standard &lt;code&gt;cgi-bin&lt;/code&gt; directory, it should be possible to send it a request by entering a URL into your browser of the form:</source>
          <target state="translated">우선, 사소한 설치 오류를 확인하십시오. CGI 스크립트 설치에 관한 위의 섹션을주의 깊게 읽으면 많은 시간을 절약 할 수 있습니다. 설치 절차를 올바르게 이해했는지 궁금하다면이 모듈 파일 ( &lt;code&gt;cgi.py&lt;/code&gt; ) 사본을 CGI 스크립트로 설치하십시오. 스크립트로 호출되면 파일은 해당 환경과 양식의 내용을 HTML 양식으로 덤프합니다. 올바른 모드 등을 제공하고 요청을 보내십시오. 표준 &lt;code&gt;cgi-bin&lt;/code&gt; 디렉토리에 설치 되어 있으면 브라우저에 다음 형식의 URL을 입력하여 요청을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebb675d8053ea8a8ebe83ac6094160e6e0071a71" translate="yes" xml:space="preserve">
          <source>First the problem specific to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; has two assert methods that are extremely handy: &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">먼저 &lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; 과&lt;/a&gt; 관련된 문제 입니다. &lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt; 에는 &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;라는 매우 편리한 두 가지 assert 메소드가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98a58557fac74f7c207b0b17436f5fa6565e938f" translate="yes" xml:space="preserve">
          <source>First the whitespace in &lt;em&gt;text&lt;/em&gt; is collapsed (all whitespace is replaced by single spaces). If the result fits in the &lt;em&gt;width&lt;/em&gt;, it is returned. Otherwise, enough words are dropped from the end so that the remaining words plus the &lt;code&gt;placeholder&lt;/code&gt; fit within &lt;code&gt;width&lt;/code&gt;:</source>
          <target state="translated">먼저 &lt;em&gt;텍스트&lt;/em&gt; 의 공백 이 축소됩니다 (모든 공백이 단일 공백으로 바)). 결과가 &lt;em&gt;width에&lt;/em&gt; 맞으면 반환됩니다. 그렇지 않으면 나머지 단어와 &lt;code&gt;placeholder&lt;/code&gt; &lt;code&gt;width&lt;/code&gt; 맞도록 충분한 단어가 끝에서 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="60176e770782809052d5a4eae68bdf54ef2f18da" translate="yes" xml:space="preserve">
          <source>First, here is the input. Normally it may come from a file, here we are using triple-quoted string syntax</source>
          <target state="translated">먼저 여기에 입력이 있습니다. 일반적으로 파일에서 올 수 있습니다. 여기에서 삼중 인용 문자열 구문을 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ac8683471df447adf6eda69155e038372dd0b95" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s see how to create and send a simple text message (both the text content and the addresses may contain unicode characters):</source>
          <target state="translated">먼저 간단한 문자 메시지를 작성하고 보내는 방법을 살펴 보겠습니다 (문자 내용과 주소에 유니 코드 문자가 포함될 수 있음).</target>
        </trans-unit>
        <trans-unit id="4920efe102a0e3e17da7a48214b1bdd90e8c1783" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll define a converter function that accepts the string as a parameter and constructs a &lt;code&gt;Point&lt;/code&gt; object from it.</source>
          <target state="translated">먼저 문자열을 매개 변수로 받아들이고 그로부터 &lt;code&gt;Point&lt;/code&gt; 객체를 생성하는 변환기 함수를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="93012090d3ab01bc45208ed0ff57920fc70eb692" translate="yes" xml:space="preserve">
          <source>First, you must create a class for the callback function. The class knows the calling convention, the return type, and the number and types of arguments this function will receive.</source>
          <target state="translated">먼저 콜백 함수를위한 클래스를 만들어야합니다. 클래스는 호출 규칙, 반환 유형 및이 함수가받을 인수의 수와 유형을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ce9ecce087746a2eeddfb2675b9f7cd5ce64f3c" translate="yes" xml:space="preserve">
          <source>First-party package maintained by the CPython core developers to supply time zone data via PyPI.</source>
          <target state="translated">First-party package maintained by the CPython core developers to supply time zone data via PyPI.</target>
        </trans-unit>
        <trans-unit id="7d07384c1c8d9575109c37bcf20f13d8dfa38fc1" translate="yes" xml:space="preserve">
          <source>Firstly, the syntax for bytes literals is largely the same as that for string literals, except that a &lt;code&gt;b&lt;/code&gt; prefix is added:</source>
          <target state="translated">첫째, 바이트 리터럴 구문은 &lt;code&gt;b&lt;/code&gt; 접두사가 추가 된 것을 제외하고는 문자열 리터럴 구문과 거의 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cae6d93dfa09be89bb26051b385df24aec65afc3" translate="yes" xml:space="preserve">
          <source>Fixed-point notation. Displays the number as a fixed-point number. The default precision is &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">고정 소수점 표기법. 숫자를 고정 소수점 숫자로 표시합니다. 기본 정밀도는 &lt;code&gt;6&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="33dac53d2b4a4305f7f3bd7b3790965764d3b777" translate="yes" xml:space="preserve">
          <source>Fixed-point notation. Same as &lt;code&gt;'f'&lt;/code&gt;, but converts &lt;code&gt;nan&lt;/code&gt; to &lt;code&gt;NAN&lt;/code&gt; and &lt;code&gt;inf&lt;/code&gt; to &lt;code&gt;INF&lt;/code&gt;.</source>
          <target state="translated">고정 소수점 표기법. &lt;code&gt;'f'&lt;/code&gt; 와 동일 하지만 &lt;code&gt;nan&lt;/code&gt; 을 &lt;code&gt;NAN&lt;/code&gt; 으로 , &lt;code&gt;inf&lt;/code&gt; 를 &lt;code&gt;INF&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="53c31b9a84b3e76a8d130dc88d836771394313f6" translate="yes" xml:space="preserve">
          <source>Fixers</source>
          <target state="translated">Fixers</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="7c9da9ff0cbbea2040b17e92a80753515d34a4d1" translate="yes" xml:space="preserve">
          <source>Flag indicating whether or not the global data structures have been initialized. This is set to &lt;code&gt;True&lt;/code&gt; by &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">글로벌 데이터 구조가 초기화되었는지 여부를 나타내는 플래그. &lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt; 의해 &lt;code&gt;True&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c927012d2c39be22f56b1f50daa3abb8534258b8" translate="yes" xml:space="preserve">
          <source>Flag indicating whether to print only the filenames of files containing whitespace related problems. This is set to true by the &lt;code&gt;-q&lt;/code&gt; option if called as a script.</source>
          <target state="translated">공백 관련 문제가 포함 된 파일의 파일 이름 만 인쇄할지 여부를 나타내는 플래그입니다. 스크립트로 호출되면 &lt;code&gt;-q&lt;/code&gt; 옵션에 의해 true로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="040ef0b73190ae184815b93c35518c7d638c9bfa" translate="yes" xml:space="preserve">
          <source>Flag indicating whether to print verbose messages. This is incremented by the &lt;code&gt;-v&lt;/code&gt; option if called as a script.</source>
          <target state="translated">자세한 메시지를 인쇄할지 여부를 나타내는 플래그입니다. 스크립트로 호출 된 경우 &lt;code&gt;-v&lt;/code&gt; 옵션으로 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="b827eb1ab4608b80fa780507f686619a8640bde9" translate="yes" xml:space="preserve">
          <source>Flag message number &lt;em&gt;which&lt;/em&gt; for deletion. On most servers deletions are not actually performed until QUIT (the major exception is Eudora QPOP, which deliberately violates the RFCs by doing pending deletes on any disconnect).</source>
          <target state="translated">신고 메시지 수 &lt;em&gt;있는&lt;/em&gt; 삭제. 대부분의 서버에서 삭제는 실제로 QUIT가 될 때까지 실제로 수행되지 않습니다 (주요 예외는 Eudora QPOP이며, 연결이 끊어 질 때 보류중인 삭제를 수행하여 의도적으로 RFC를 위반 함).</target>
        </trans-unit>
        <trans-unit id="b2c7e2cd1de9bde763ad0040d719d08ce2bcd792" translate="yes" xml:space="preserve">
          <source>Flag showing the status of the user site-packages directory. &lt;code&gt;True&lt;/code&gt; means that it is enabled and was added to &lt;code&gt;sys.path&lt;/code&gt;. &lt;code&gt;False&lt;/code&gt; means that it was disabled by user request (with &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;None&lt;/code&gt; means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator.</source>
          <target state="translated">사용자 사이트 패키지 디렉토리의 상태를 나타내는 플래그. &lt;code&gt;True&lt;/code&gt; 는 활성화되어 &lt;code&gt;sys.path&lt;/code&gt; 에 추가되었음을 의미합니다 . &lt;code&gt;False&lt;/code&gt; 는 사용자 요청 ( &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt; 사용&lt;/a&gt; )에 의해 비활성화되었음을 의미합니다 . &lt;code&gt;None&lt;/code&gt; 은 보안상의 이유로 (사용자 또는 그룹 ID와 유효 ID가 일치하지 않음) 또는 관리자가 비활성화 했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c0df1398588bf74289226e39d494c4154f2fb439" translate="yes" xml:space="preserve">
          <source>Flag showing the status of the user site-packages directory. &lt;code&gt;True&lt;/code&gt; means that it is enabled and was added to &lt;code&gt;sys.path&lt;/code&gt;. &lt;code&gt;False&lt;/code&gt; means that it was disabled by user request (with &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt;&lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;None&lt;/code&gt; means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator.</source>
          <target state="translated">Flag showing the status of the user site-packages directory. &lt;code&gt;True&lt;/code&gt; means that it is enabled and was added to &lt;code&gt;sys.path&lt;/code&gt; . &lt;code&gt;False&lt;/code&gt; means that it was disabled by user request (with &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-8&quot;&gt; &lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt; &lt;/a&gt;). &lt;code&gt;None&lt;/code&gt; means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator.</target>
        </trans-unit>
        <trans-unit id="250420fa54c4474c1a02e4a0675c7b67e4859b14" translate="yes" xml:space="preserve">
          <source>Flag to use as &lt;em&gt;mode&lt;/em&gt; parameter. On platforms where this flag is not available, it is defined as the integer zero.</source>
          <target state="translated">&lt;em&gt;모드&lt;/em&gt; 매개 변수 로 사용할 플래그 입니다. 이 플래그를 사용할 수없는 플랫폼에서는 정수 0으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="27da8f9d92b7abf1907ea7a26ca4441a58763537" translate="yes" xml:space="preserve">
          <source>Flag to use as &lt;em&gt;mode&lt;/em&gt; parameter. On platforms where this is not available, it is the same as &lt;em&gt;RTLD_GLOBAL&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;모드&lt;/em&gt; 매개 변수 로 사용할 플래그 입니다. 이를 사용할 수없는 플랫폼에서는 &lt;em&gt;RTLD_GLOBAL&lt;/em&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f8db8a172be6fab179a39aa7dee85e1f7afcbd56" translate="yes" xml:space="preserve">
          <source>Flagged</source>
          <target state="translated">Flagged</target>
        </trans-unit>
        <trans-unit id="1f07acd047ff4da9984807d5f9663de56e86b6b0" translate="yes" xml:space="preserve">
          <source>Flags for use with the &lt;a href=&quot;sys#sys.setdlopenflags&quot;&gt;&lt;code&gt;setdlopenflags()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sys#sys.getdlopenflags&quot;&gt;&lt;code&gt;getdlopenflags()&lt;/code&gt;&lt;/a&gt; functions. See the Unix manual page &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen(3)&lt;/a&gt;&lt;/em&gt; for what the different flags mean.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.setdlopenflags&quot;&gt; &lt;code&gt;setdlopenflags()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sys#sys.getdlopenflags&quot;&gt; &lt;code&gt;getdlopenflags()&lt;/code&gt; &lt;/a&gt; 함수 와 함께 사용할 플래그입니다 . 다른 플래그의 의미 는 Unix 매뉴얼 페이지 &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen (3)&lt;/a&gt;&lt;/em&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd24040b0de304246d5aae1e83cfc89a9def0cfd" translate="yes" xml:space="preserve">
          <source>Flags indicating how strict to be with domain-matching rules for Netscape cookies. See below for acceptable values.</source>
          <target state="translated">Netscape 쿠키에 대한 도메인 일치 규칙이 얼마나 엄격한지를 나타내는 플래그입니다. 허용 가능한 값은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c56c51fdb9503b6e8d9353fdc1a8910b2b26f96b" translate="yes" xml:space="preserve">
          <source>Flags that can be used in &lt;em&gt;advice&lt;/em&gt; in &lt;a href=&quot;#os.posix_fadvise&quot;&gt;&lt;code&gt;posix_fadvise()&lt;/code&gt;&lt;/a&gt; that specify the access pattern that is likely to be used.</source>
          <target state="translated">&lt;a href=&quot;#os.posix_fadvise&quot;&gt; &lt;code&gt;posix_fadvise()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 조언&lt;/em&gt; 에 사용될 수있는 액세스 패턴을 지정하는 플래그 .</target>
        </trans-unit>
        <trans-unit id="4b29537980e35e6955e907c0423783c7fd5421c9" translate="yes" xml:space="preserve">
          <source>Flags that can be used in &lt;em&gt;options&lt;/em&gt; in &lt;a href=&quot;#os.waitid&quot;&gt;&lt;code&gt;waitid()&lt;/code&gt;&lt;/a&gt; that specify what child signal to wait for.</source>
          <target state="translated">대기 할 자식 신호를 지정하는 &lt;a href=&quot;#os.waitid&quot;&gt; &lt;code&gt;waitid()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 옵션&lt;/em&gt; 에서 사용할 수있는 플래그입니다 .</target>
        </trans-unit>
        <trans-unit id="be03f41ac820d005e351ffd4e5eca83d99f28dd1" translate="yes" xml:space="preserve">
          <source>Flags that specify what action &lt;a href=&quot;#os.lockf&quot;&gt;&lt;code&gt;lockf()&lt;/code&gt;&lt;/a&gt; will take.</source>
          <target state="translated">&lt;a href=&quot;#os.lockf&quot;&gt; &lt;code&gt;lockf()&lt;/code&gt; &lt;/a&gt; 수행 할 조치를 지정하는 플래그 .</target>
        </trans-unit>
        <trans-unit id="6b378e0209f751bf8ed04ced4462379afd4e9bee" translate="yes" xml:space="preserve">
          <source>Flash the screen. That is, change it to reverse-video and then change it back in a short interval. Some people prefer such as &amp;lsquo;visible bell&amp;rsquo; to the audible attention signal produced by &lt;a href=&quot;#curses.beep&quot;&gt;&lt;code&gt;beep()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">화면을 깜박입니다. 즉, 반전 비디오로 변경 한 다음 짧은 간격으로 다시 변경하십시오. 어떤 사람들은 &lt;a href=&quot;#curses.beep&quot;&gt; &lt;code&gt;beep()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 가청주의 신호보다 '보이는 벨'과 같은 것을 선호합니다 .</target>
        </trans-unit>
        <trans-unit id="0ef0237069aeed94495fee21d06b8dfebec5e725" translate="yes" xml:space="preserve">
          <source>Flattening the message may trigger changes to the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).</source>
          <target state="translated">문자열로 변환을 완료하기 위해 기본값을 채워야하는 경우 메시지를 병합하면 &lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; 에 대한 변경이 트리거 될 수 있습니다 (예 : MIME 경계가 생성 또는 수정 될 수 있음).</target>
        </trans-unit>
        <trans-unit id="6338fe9d3c497dd27f17da5bf52b9bad1bcb9779" translate="yes" xml:space="preserve">
          <source>Flattening the message may trigger changes to the &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).</source>
          <target state="translated">메시지를 평탄화하는 것은 변경 트리거 할 &lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt; 기본값 문자열로 변환을 수행하여 충전 될 필요가 있다면 (예를 들어, MIME 경계가 생성되거나 수정 될 수있다).</target>
        </trans-unit>
        <trans-unit id="683dbea5f7e1b5080e1ef7590ab4063b4f6510c0" translate="yes" xml:space="preserve">
          <source>Float value. If set, this is the maximum value to which the increment button will increment.</source>
          <target state="translated">부동 값. 설정된 경우 이것은 증가 버튼이 증가 할 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="7afaf725c9b3acf299192e4694d4dfeb71640eb3" translate="yes" xml:space="preserve">
          <source>Float value. If set, this is the minimum value to which the decrement button will decrement. Must be spelled as &lt;code&gt;from_&lt;/code&gt; when used as an argument, since &lt;code&gt;from&lt;/code&gt; is a Python keyword.</source>
          <target state="translated">부동 값. 설정하면 감소 버튼이 감소하는 최소값입니다. &lt;code&gt;from&lt;/code&gt; 은 Python 키워드 이므로 인수로 사용될 때는 &lt;code&gt;from_&lt;/code&gt; 로 철자를 입력해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33b570f9eefd74d9957d763fc0f22770675a13a7" translate="yes" xml:space="preserve">
          <source>Float value. Specifies the amount which the increment/decrement buttons change the value. Defaults to 1.0.</source>
          <target state="translated">부동 값. 증분 / 감소 버튼이 값을 변경하는 양을 지정합니다. 기본값은 1.0입니다.</target>
        </trans-unit>
        <trans-unit id="1e1efdbc9f8f5ce44c24fc5643ba097cac8e6daf" translate="yes" xml:space="preserve">
          <source>Floating Point Notes</source>
          <target state="translated">부동 소수점</target>
        </trans-unit>
        <trans-unit id="73d93d27d9be83ac0e1af6809845bb8b3e09dbf0" translate="yes" xml:space="preserve">
          <source>Floating point decimal format.</source>
          <target state="translated">부동 소수점 10 진수 형식.</target>
        </trans-unit>
        <trans-unit id="2b8008eef2f18bcf702847524bbc3d7f4c157eeb" translate="yes" xml:space="preserve">
          <source>Floating point exponential format (lowercase).</source>
          <target state="translated">부동 소수점 지수 형식 (소문자).</target>
        </trans-unit>
        <trans-unit id="3c529f15e6525e1ea8a92bc5c4f6df6089d52413" translate="yes" xml:space="preserve">
          <source>Floating point exponential format (uppercase).</source>
          <target state="translated">부동 소수점 지수 형식 (대문자).</target>
        </trans-unit>
        <trans-unit id="da386ed9df0e1a298956f76f008527bba636b22b" translate="yes" xml:space="preserve">
          <source>Floating point format. Uses lowercase exponential format if exponent is less than -4 or not less than precision, decimal format otherwise.</source>
          <target state="translated">부동 소수점 형식 지수가 -4보다 작거나 정밀도보다 작 으면 소문자 지수 형식을 사용하고, 그렇지 않으면 10 진수 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef7899b795de9435e853c0f84ac89f21e7eb5224" translate="yes" xml:space="preserve">
          <source>Floating point format. Uses uppercase exponential format if exponent is less than -4 or not less than precision, decimal format otherwise.</source>
          <target state="translated">부동 소수점 형식 지수가 -4보다 작거나 정밀도보다 작 으면 대문자 지수 형식을 사용하고, 그렇지 않으면 10 진수 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6160e62f4a06dbbef1c2dbfca55ca8444c4640ec" translate="yes" xml:space="preserve">
          <source>Floating-point exception. For example, division by zero.</source>
          <target state="translated">Floating-point exception. For example, division by zero.</target>
        </trans-unit>
        <trans-unit id="394f073446cec66b8aa90a4344a4ceaf8429ec3d" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are also subject to small output variations across platforms, because Python defers to the platform C library for float formatting, and C libraries vary widely in quality here.</source>
          <target state="translated">파이썬은 부동 형식화를 위해 플랫폼 C 라이브러리를 연기하고 여기에서 C 라이브러리의 품질이 매우 다양하기 때문에 부동 소수점 숫자는 플랫폼마다 약간의 출력 변형이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9f798cc28676aec8b10ead1c825d53504590834d" translate="yes" xml:space="preserve">
          <source>Floating-point positive infinity. Equivalent to &lt;code&gt;float('inf')&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 양의 무한대. &lt;code&gt;float('inf')&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5e9add85e668caad4a6328b8f15ea6541b73c6c7" translate="yes" xml:space="preserve">
          <source>FloatingPointError</source>
          <target state="translated">FloatingPointError</target>
        </trans-unit>
        <trans-unit id="0693c8a5c8ecb50a7a38a20549795a6f793dc1be" translate="yes" xml:space="preserve">
          <source>Flow Control Callbacks</source>
          <target state="translated">흐름 제어 콜백</target>
        </trans-unit>
        <trans-unit id="71ba0aeeee03560a33571599cba3282543b48123" translate="yes" xml:space="preserve">
          <source>Flow control callbacks can be called by transports to pause or resume writing performed by the protocol.</source>
          <target state="translated">흐름 제어 콜백은 전송에 의해 호출되어 프로토콜에 의해 수행 된 쓰기를 일시 중지하거나 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ecb5d4d4053c9b879e8913cfbedf4f7978220bc" translate="yes" xml:space="preserve">
          <source>Flush all input buffers. This throws away any typeahead that has been typed by the user and has not yet been processed by the program.</source>
          <target state="translated">모든 입력 버퍼를 플러시하십시오. 이렇게하면 사용자가 입력했지만 아직 프로그램에서 처리하지 않은 자동 완성 기능이 모두 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="39b8d0deff165745e1650b86238a87db9a3d861a" translate="yes" xml:space="preserve">
          <source>Flush and close this stream. This method has no effect if the file is already closed. Once the file is closed, any operation on the file (e.g. reading or writing) will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스트림을 플러시하고 닫습니다. 파일이 이미 닫힌 경우이 방법은 효과가 없습니다. 파일이 닫히면 파일에 대한 모든 작업 (예 : 읽기 또는 쓰기)은 &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="f25b943d17f0a4cc96966f6ad97127f3bd8ce97b" translate="yes" xml:space="preserve">
          <source>Flush the mailbox, unlock it if necessary, and close any open files. For some &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; subclasses, this method does nothing.</source>
          <target state="translated">우편함을 비우고 필요한 경우 잠금을 해제 한 다음 열려있는 파일을 모두 닫으십시오. 일부 &lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt; 서브 클래스의 경우이 메소드는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f0a42975d0bcde8b733a94ac57ae99d81da7fcc2" translate="yes" xml:space="preserve">
          <source>Flush the write buffers of the stream if applicable. This does nothing for read-only and non-blocking streams.</source>
          <target state="translated">해당되는 경우 스트림의 쓰기 버퍼를 비 웁니다. 이것은 읽기 전용 및 비 블로킹 스트림에 대해서는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4039231f6971b19f5762909fe4049214cea03da4" translate="yes" xml:space="preserve">
          <source>Flushes and resets the codec buffers used for keeping state.</source>
          <target state="translated">상태를 유지하는 데 사용되는 코덱 버퍼를 플러시하고 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="78c377fb030c4de02734cba213327ba32b5fd57a" translate="yes" xml:space="preserve">
          <source>Flushes changes made to the in-memory copy of a file back to disk. Without use of this call there is no guarantee that changes are written back before the object is destroyed. If &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt; are specified, only changes to the given range of bytes will be flushed to disk; otherwise, the whole extent of the mapping is flushed. &lt;em&gt;offset&lt;/em&gt; must be a multiple of the &lt;code&gt;PAGESIZE&lt;/code&gt; or &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt;.</source>
          <target state="translated">파일의 메모리 내 사본에 대한 변경 사항을 디스크로 플러시합니다. 이 호출을 사용하지 않으면 오브젝트가 소멸되기 전에 변경 사항이 다시 기록된다는 보장이 없습니다. 경우 &lt;em&gt;오프셋&lt;/em&gt; 과 &lt;em&gt;크기가&lt;/em&gt; 지정되어, 전용 디스크로 플러시됩니다 바이트의 주어진 범위에 대한 변경; 그렇지 않으면 매핑의 전체 범위가 플러시됩니다. &lt;em&gt;오프셋&lt;/em&gt; 은 &lt;code&gt;PAGESIZE&lt;/code&gt; 또는 &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; 의 배수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="41986902b98edde6379cd94cf6c7f023e70d0fe6" translate="yes" xml:space="preserve">
          <source>Flushes the builder buffers, and returns the toplevel document element. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">빌더 버퍼를 플러시하고 최상위 문서 요소를 리턴합니다. &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="dc210bf30127cac653beb084658fda0da6f45889" translate="yes" xml:space="preserve">
          <source>Flushes the stream by calling its &lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; method. Note that the &lt;code&gt;close()&lt;/code&gt; method is inherited from &lt;a href=&quot;logging#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; and so does no output, so an explicit &lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; call may be needed at times.</source>
          <target state="translated">&lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 스트림을 플러시합니다 . 있습니다 &lt;code&gt;close()&lt;/code&gt; 메서드가에서 상속됩니다 &lt;a href=&quot;logging#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt; 명시 적 그래서 그렇게하고, 어떤 출력을하지 않습니다 &lt;a href=&quot;#logging.StreamHandler.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 호출이 시간에 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4020d665d9a15a4d0ab442217ea3d38ffe31911" translate="yes" xml:space="preserve">
          <source>Folders of the style introduced by the Courier mail transfer agent are also supported. Any subdirectory of the main mailbox is considered a folder if &lt;code&gt;'.'&lt;/code&gt; is the first character in its name. Folder names are represented by &lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; without the leading &lt;code&gt;'.'&lt;/code&gt;. Each folder is itself a Maildir mailbox but should not contain other folders. Instead, a logical nesting is indicated using &lt;code&gt;'.'&lt;/code&gt; to delimit levels, e.g., &amp;ldquo;Archived.2005.07&amp;rdquo;.</source>
          <target state="translated">Courier 메일 전송 에이전트가 도입 한 스타일의 폴더도 지원됩니다. &lt;code&gt;'.'&lt;/code&gt; 인 경우 기본 메일 함의 하위 디렉토리는 폴더로 간주됩니다 . 이름의 첫 번째 문자입니다. 폴더 이름은 &lt;a href=&quot;#mailbox.Maildir&quot;&gt; &lt;code&gt;Maildir&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'.'&lt;/code&gt; 없이 Maildir 로 표시됩니다 . . 각 폴더 자체는 Maildir 사서함이지만 다른 폴더를 포함해서는 안됩니다. 대신 논리 중첩은 &lt;code&gt;'.'&lt;/code&gt; 를 사용하여 표시됩니다 . 예를 들어 &quot;Archived.2005.07&quot;과 같이 레벨을 구분합니다.</target>
        </trans-unit>
        <trans-unit id="e0afbb547de77db1371251680e81a10a8521c254" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; rules on unverifiable transactions (usually, an unverifiable transaction is one resulting from a redirect or a request for an image hosted on another site). If this is false, cookies are &lt;em&gt;never&lt;/em&gt; blocked on the basis of verifiability</source>
          <target state="translated">확인할 수 없는 트랜잭션에 대한 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-18&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; 규칙을 따릅니다 (일반적으로 확인할 수없는 트랜잭션은 다른 사이트에서 호스팅되는 이미지에 대한 리디렉션 또는 요청으로 인해 발생합니다). 이것이 거짓이면, 검증 가능성에 근거하여 쿠키가 차단 &lt;em&gt;되지 않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46a2e0da6005d5c7eddb823accb719141d484e5c" translate="yes" xml:space="preserve">
          <source>Following the syntax specifications in &lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1808&lt;/strong&gt;&lt;/a&gt;, urlparse recognizes a netloc only if it is properly introduced by &amp;lsquo;//&amp;rsquo;. Otherwise the input is presumed to be a relative URL and thus to start with a path component.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc1808.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1808&lt;/strong&gt;&lt;/a&gt; 의 구문 사양에 따라 urlparse는 '//'에 의해 올바르게 도입 된 경우에만 netloc을 인식합니다. 그렇지 않으면 입력은 상대 URL 인 것으로 간주되므로 경로 구성 요소로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="f67ed379569ddcc92ff738fa2c112d30bd25f249" translate="yes" xml:space="preserve">
          <source>Following those is a set of examples of using the fundamental parts of the APIs covered in the preceding sections.</source>
          <target state="translated">다음은 이전 섹션에서 다룬 API의 기본 부분을 사용하는 예제입니다.</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="e52f0c6de209dfb773b81a5673b25d8bbc8e41eb" translate="yes" xml:space="preserve">
          <source>For 200 error codes, the response object is returned immediately.</source>
          <target state="translated">200 오류 코드의 경우 응답 오브젝트가 즉시 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="86ecf6649b6cf50b465714b6d4be9d666f6c9256" translate="yes" xml:space="preserve">
          <source>For 8-bit (bytes) patterns:</source>
          <target state="translated">8 비트 (바이트) 패턴의 경우 :</target>
        </trans-unit>
        <trans-unit id="364fc032d2ac2d86022ecf240a005c499b0e698c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; objects, the format codes for hours, minutes, seconds, and microseconds should not be used, as &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; objects have no such values. If they&amp;rsquo;re used anyway, &lt;code&gt;0&lt;/code&gt; is substituted for them.</source>
          <target state="translated">들어 &lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 물체, 시간, 분, 초 및 마이크로에 대한 형식 코드는 사용하지 않아야 &lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 객체가 그러한 값이 없습니다. 어쨌든 사용되면 &lt;code&gt;0&lt;/code&gt; 이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="21d045e0f9184298bfc8cd53780d2b8799a0cad1" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects, the format codes for year, month, and day should not be used, as &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; objects have no such values. If they&amp;rsquo;re used anyway, &lt;code&gt;1900&lt;/code&gt; is substituted for the year, and &lt;code&gt;1&lt;/code&gt; for the month and day.</source>
          <target state="translated">들어 &lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 물체, 년, 월, 일에 대한 형식 코드는 사용하지 않아야 &lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt; 객체가 그러한 값이 없습니다. 어쨌든 &lt;code&gt;1900&lt;/code&gt; 은 &lt;code&gt;1&lt;/code&gt; 년, 1 은 월과 일로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="7908bd03afc2ba909165e823ebd06ea57784d13a" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands &lt;em&gt;base&lt;/em&gt; and &lt;em&gt;exp&lt;/em&gt;, if &lt;em&gt;mod&lt;/em&gt; is present, &lt;em&gt;mod&lt;/em&gt; must also be of integer type and &lt;em&gt;mod&lt;/em&gt; must be nonzero. If &lt;em&gt;mod&lt;/em&gt; is present and &lt;em&gt;exp&lt;/em&gt; is negative, &lt;em&gt;base&lt;/em&gt; must be relatively prime to &lt;em&gt;mod&lt;/em&gt;. In that case, &lt;code&gt;pow(inv_base, -exp, mod)&lt;/code&gt; is returned, where &lt;em&gt;inv_base&lt;/em&gt; is an inverse to &lt;em&gt;base&lt;/em&gt; modulo &lt;em&gt;mod&lt;/em&gt;.</source>
          <target state="translated">들면 &lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 피연산자 &lt;em&gt;베이스&lt;/em&gt; 및 &lt;em&gt;EXP&lt;/em&gt; 경우 &lt;em&gt;개조가&lt;/em&gt; 존재, &lt;em&gt;개조는&lt;/em&gt; 또한 정수 타입이어야하고 &lt;em&gt;개조은&lt;/em&gt; 제로이어야한다. 경우 &lt;em&gt;모드가&lt;/em&gt; 존재하고 &lt;em&gt;경험치가&lt;/em&gt; 부의 경우, &lt;em&gt;기본은&lt;/em&gt; 상대적으로 소수해야합니다 &lt;em&gt;모드&lt;/em&gt; . 이 경우, &lt;code&gt;pow(inv_base, -exp, mod)&lt;/code&gt; 가 리턴됩니다. 여기서 &lt;em&gt;inv_base&lt;/em&gt; 는 &lt;em&gt;기본&lt;/em&gt; 모듈로 &lt;em&gt;mod&lt;/em&gt; 의 역수 입니다.</target>
        </trans-unit>
        <trans-unit id="704b75eae7e4709ca3714d6d7d487a58699927fc" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.execle&quot;&gt;&lt;code&gt;execle()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execlpe&quot;&gt;&lt;code&gt;execlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.execvpe&quot;&gt;&lt;code&gt;execvpe()&lt;/code&gt;&lt;/a&gt; (note that these all end in &amp;ldquo;e&amp;rdquo;), the &lt;em&gt;env&lt;/em&gt; parameter must be a mapping which is used to define the environment variables for the new process (these are used instead of the current process&amp;rsquo; environment); the functions &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;execl()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execlp&quot;&gt;&lt;code&gt;execlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.execvp&quot;&gt;&lt;code&gt;execvp()&lt;/code&gt;&lt;/a&gt; all cause the new process to inherit the environment of the current process.</source>
          <target state="translated">대한 &lt;a href=&quot;#os.execle&quot;&gt; &lt;code&gt;execle()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.execlpe&quot;&gt; &lt;code&gt;execlpe()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#os.execvpe&quot;&gt; &lt;code&gt;execvpe()&lt;/code&gt; &lt;/a&gt; 는 ( &quot;E&quot;이러한 모든 끝이 있다는 주) &lt;em&gt;ENV의&lt;/em&gt; 매개 변수는 새로운 프로세스에 대한 환경 변수를 정의하는 데 사용되는 매핑을해야합니다 (이 현재 프로세스 환경 대신 사용됨) &lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;execl()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.execlp&quot;&gt; &lt;code&gt;execlp()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#os.execvp&quot;&gt; &lt;code&gt;execvp()&lt;/code&gt; &lt;/a&gt; 함수는 모두 새 프로세스가 현재 프로세스의 환경을 상속하도록합니다.</target>
        </trans-unit>
        <trans-unit id="51157755c0e076cf72d6ba4f3983e0a2ccf80593" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt; on some platforms, &lt;em&gt;path&lt;/em&gt; may also be specified as an open file descriptor. This functionality may not be supported on your platform; you can check whether or not it is available using &lt;a href=&quot;#os.supports_fd&quot;&gt;&lt;code&gt;os.supports_fd&lt;/code&gt;&lt;/a&gt;. If it is unavailable, using it will raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt; 일부 플랫폼, &lt;em&gt;경로는&lt;/em&gt; 또한 열려있는 파일 기술자로 지정할 수 있습니다. 이 기능은 플랫폼에서 지원되지 않을 수 있습니다. &lt;a href=&quot;#os.supports_fd&quot;&gt; &lt;code&gt;os.supports_fd&lt;/code&gt; 를&lt;/a&gt; 사용하여 사용 가능한지 여부를 확인할 수 있습니다 . 사용할 수 없으면 사용하면 &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1d87b8bebbe6ef625c185669fd69bb1d18a46801" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#os.spawnle&quot;&gt;&lt;code&gt;spawnle()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlpe&quot;&gt;&lt;code&gt;spawnlpe()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnve&quot;&gt;&lt;code&gt;spawnve()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.spawnvpe&quot;&gt;&lt;code&gt;spawnvpe()&lt;/code&gt;&lt;/a&gt; (note that these all end in &amp;ldquo;e&amp;rdquo;), the &lt;em&gt;env&lt;/em&gt; parameter must be a mapping which is used to define the environment variables for the new process (they are used instead of the current process&amp;rsquo; environment); the functions &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawnl()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnlp&quot;&gt;&lt;code&gt;spawnlp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.spawnv&quot;&gt;&lt;code&gt;spawnv()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.spawnvp&quot;&gt;&lt;code&gt;spawnvp()&lt;/code&gt;&lt;/a&gt; all cause the new process to inherit the environment of the current process. Note that keys and values in the &lt;em&gt;env&lt;/em&gt; dictionary must be strings; invalid keys or values will cause the function to fail, with a return value of &lt;code&gt;127&lt;/code&gt;.</source>
          <target state="translated">대한 &lt;a href=&quot;#os.spawnle&quot;&gt; &lt;code&gt;spawnle()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnlpe&quot;&gt; &lt;code&gt;spawnlpe()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnve&quot;&gt; &lt;code&gt;spawnve()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#os.spawnvpe&quot;&gt; &lt;code&gt;spawnvpe()&lt;/code&gt; &lt;/a&gt; 는 ( &quot;E&quot;이러한 모든 끝이 있다는 주) &lt;em&gt;ENV의&lt;/em&gt; 매개 변수는 새로운 프로세스에 대한 환경 변수를 정의하는 데 사용되는 매핑을해야한다 (그들은 현재 프로세스 환경 대신 사용됨) 기능 &lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawnl()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnlp&quot;&gt; &lt;code&gt;spawnlp()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#os.spawnv&quot;&gt; &lt;code&gt;spawnv()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#os.spawnvp&quot;&gt; &lt;code&gt;spawnvp()&lt;/code&gt; &lt;/a&gt; 모든 원인은 새로운 프로세스는 현재의 프로세스의 환경을 상속합니다. &lt;em&gt;env&lt;/em&gt; 사전 의 키와 값은 문자열이어야합니다. 유효하지 않은 키 또는 값은 &lt;code&gt;127&lt;/code&gt; 의 리턴 값으로 기능에 실패 합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
